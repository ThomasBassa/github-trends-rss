<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0"><channel><title>GitHub Trending: C, This week</title><link>https://github.com/trending/c?since=weekly</link><description>The top repositories on GitHub for c, measured weekly</description><pubDate>Fri, 20 Dec 2019 01:08:26 GMT</pubDate><lastBuildDate>Fri, 20 Dec 2019 01:08:26 GMT</lastBuildDate><generator>PyRSS2Gen-1.1.0</generator><docs>http://blogs.law.harvard.edu/tech/rss</docs><ttl>720</ttl><item><title>nginx/nginx #1 in C, This week</title><link>https://github.com/nginx/nginx</link><description>&lt;p&gt;&lt;i&gt;An official read-only mirror of http://hg.nginx.org/nginx/ which is updated hourly. Pull requests on GitHub cannot be accepted and will be automatically closed. The proper way to submit changes to nginx is via the nginx development mailing list, see http://nginx.org/en/docs/contributing_changes.html&lt;/i&gt;&lt;/p&gt;&lt;p&gt;&lt;i&gt;This repo does not have a README.&lt;/i&gt;&lt;/p&gt;</description><author>nginx</author><guid isPermaLink="false">https://github.com/nginx/nginx</guid><pubDate>Fri, 20 Dec 2019 00:01:00 GMT</pubDate></item><item><title>coolsnowwolf/lede #2 in C, This week</title><link>https://github.com/coolsnowwolf/lede</link><description>&lt;p&gt;&lt;i&gt;Lean's OpenWrt source&lt;/i&gt;&lt;/p&gt;&lt;div id="readme" class="" data-path="README"&gt;&lt;div class="plain"&gt;&lt;pre style="white-space: pre-wrap"&gt;﻿Welcome to Lean's  git source of OpenWrt and packages

中文：如何编译自己需要的 OpenWrt 固件

注意：
1. 不要用 root 用户 git 和编译！！！
2. 国内用户编译前最好准备好梯子
3. 默认登陆IP 192.168.1.1, 密码 password

编译命令如下:

1. 首先装好 Ubuntu 64bit，推荐  Ubuntu  14 LTS x64

2. 命令行输入 sudo apt-get update ，然后输入
sudo apt-get -y install build-essential asciidoc binutils bzip2 gawk gettext git libncurses5-dev libz-dev patch unzip zlib1g-dev lib32gcc1 libc6-dev-i386 subversion flex uglifyjs git-core gcc-multilib p7zip p7zip-full msmtp libssl-dev texinfo libglib2.0-dev xmlto qemu-utils upx libelf-dev autoconf automake libtool autopoint device-tree-compiler

3. git clone &lt;a href="https://github.com/coolsnowwolf/lede"&gt;https://github.com/coolsnowwolf/lede&lt;/a&gt; 命令下载好源代码，然后 cd lede 进入目录

4. ./scripts/feeds update -a 
   ./scripts/feeds install -a
   make menuconfig 

5. 最后选好你要的路由，输入 make -j1 V=s （-j1 后面是线程数。第一次编译推荐用单线程，国内请尽量全局科学上网）即可开始编译你要的固件了。

本套代码保证肯定可以编译成功。里面包括了 R9 所有源代码，包括 IPK 的。

你可以自由使用，但源码编译二次发布请注明我的 GitHub 仓库链接。谢谢合作！

特别提示：
1. 源代码中绝不含任何后门和可以监控或者劫持你的 HTTPS 的闭源软件，SSL 安全是互联网最后的壁垒。安全干净才是固件应该做到的。
2.如果你自认为 Koolshare 论坛或者其固件的脑残粉，本人不欢迎你使用本源代码。所以如果你是，那么使用过程中遇到任何问题本人概不回应。
3.如有问题需要讨论，欢迎加入 QQ 讨论群：OP共享技术交流群 ,号码 297253733 ，加群链接: 点击链接加入群聊【OP共享技术交流群】：&lt;a href="https://jq.qq.com/?_wv=1027&amp;amp;k=5yCRuXL" rel="nofollow"&gt;https://jq.qq.com/?_wv=1027&amp;amp;k=5yCRuXL&lt;/a&gt;

Please use "make menuconfig" to choose your preferred
configuration for the toolchain and firmware.

You need to have installed gcc, binutils, bzip2, flex, python, perl, make,
find, grep, diff, unzip, gawk, getopt, subversion, libz-dev and libc headers.

Run "./scripts/feeds update -a" to get all the latest package definitions
defined in feeds.conf / feeds.conf.default respectively
and "./scripts/feeds install -a" to install symlinks of all of them into
package/feeds/.

Use "make menuconfig" to configure your image.

Simply running "make" will build your firmware.
It will download all sources, build the cross-compile toolchain, 
the kernel and all choosen applications.

To build your own firmware you need to have access to a Linux, BSD or MacOSX system
(case-sensitive filesystem required). Cygwin will not be supported because of
the lack of case sensitiveness in the file system.



Note: Addition Lean's private package source code in ./package/lean directory. Use it under GPL v3.

GPLv3 is compatible with more licenses than GPLv2: it allows you to make combinations with code that has specific kinds of additional requirements that are not in GPLv3 itself. Section 7 has more information about this, including the list of additional requirements that are permitted.

&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;</description><author>coolsnowwolf</author><guid isPermaLink="false">https://github.com/coolsnowwolf/lede</guid><pubDate>Fri, 20 Dec 2019 00:02:00 GMT</pubDate></item><item><title>pymumu/smartdns #3 in C, This week</title><link>https://github.com/pymumu/smartdns</link><description>&lt;p&gt;&lt;i&gt;A local DNS server to obtain the fastest website IP for the best Internet experience， 一个本地DNS服务器，获取最快的网站IP，获得最佳上网体验。&lt;/i&gt;&lt;/p&gt;&lt;div id="readme" class="md" data-path="ReadMe.md"&gt;&lt;article class="markdown-body entry-content p-5" itemprop="text"&gt;&lt;h1&gt;&lt;a id="user-content-smartdns" class="anchor" aria-hidden="true" href="#smartdns"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;SmartDNS&lt;/h1&gt;
&lt;p&gt;&lt;strong&gt;&lt;a href="ReadMe_en.md"&gt;English&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="doc/smartdns-banner.png"&gt;&lt;img src="doc/smartdns-banner.png" alt="SmartDNS" style="max-width:100%;"&gt;&lt;/a&gt;&lt;br&gt;
SmartDNS是一个运行在本地的DNS服务器，SmartDNS接受本地客户端的DNS查询请求，从多个上游DNS服务器获取DNS查询结果，并将访问速度最快的结果返回给客户端，提高网络访问速度。
同时支持指定特定域名IP地址，并高性匹配，达到过滤广告的效果。&lt;br&gt;
与dnsmasq的all-servers不同，smartdns返回的是访问速度最快的解析结果。 (详细差异请看&lt;a href="#faq"&gt;FAQ&lt;/a&gt;)&lt;/p&gt;
&lt;p&gt;支持树莓派，openwrt，华硕路由器，windows等设备。&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-目录" class="anchor" aria-hidden="true" href="#目录"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;目录&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;&lt;a href="#%E8%BD%AF%E4%BB%B6%E6%95%88%E6%9E%9C%E5%B1%95%E7%A4%BA"&gt;软件效果展示&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#%E7%89%B9%E6%80%A7"&gt;特性&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#%E6%9E%B6%E6%9E%84"&gt;架构&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#%E4%BD%BF%E7%94%A8"&gt;使用&lt;/a&gt;
&lt;ol&gt;
&lt;li&gt;&lt;a href="#%E4%B8%8B%E8%BD%BD%E9%85%8D%E5%A5%97%E5%AE%89%E8%A3%85%E5%8C%85"&gt;下载配套安装包&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#%E6%A0%87%E5%87%86linux%E7%B3%BB%E7%BB%9F%E5%AE%89%E8%A3%85%E6%A0%91%E8%8E%93%E6%B4%BEx86_64%E7%B3%BB%E7%BB%9F"&gt;标准Linux系统安装&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#openwrtlede"&gt;openwrt/LEDE&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#%E5%8D%8E%E7%A1%95%E8%B7%AF%E7%94%B1%E5%99%A8%E5%8E%9F%E7%94%9F%E5%9B%BA%E4%BB%B6%E6%A2%85%E6%9E%97%E5%9B%BA%E4%BB%B6"&gt;华硕路由器原生固件/梅林固件&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#optwareentware"&gt;optware/entware&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#windows-10-wsl%E5%AE%89%E8%A3%85wsl-ubuntu"&gt;Windows 10 WSL安装/WSL ubuntu&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="#%E9%85%8D%E7%BD%AE%E5%8F%82%E6%95%B0"&gt;配置参数&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#donate"&gt;捐助&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#faq"&gt;FAQ&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;h2&gt;&lt;a id="user-content-软件效果展示" class="anchor" aria-hidden="true" href="#软件效果展示"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;软件效果展示&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;阿里DNS&lt;/strong&gt;&lt;br&gt;
使用阿里DNS查询百度IP，并检测结果。&lt;/p&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt;pi@raspberrypi:&lt;span class="pl-k"&gt;~&lt;/span&gt;/code/smartdns_build $ nslookup www.baidu.com 223.5.5.5
Server:         223.5.5.5
Address:        223.5.5.5#53

Non-authoritative answer:
www.baidu.com   canonical name = www.a.shifen.com.
Name:   www.a.shifen.com
Address: 180.97.33.108
Name:   www.a.shifen.com
Address: 180.97.33.107

pi@raspberrypi:&lt;span class="pl-k"&gt;~&lt;/span&gt;/code/smartdns_build $ ping 180.97.33.107 -c 2
PING 180.97.33.107 (180.97.33.107) 56(84) bytes of data.
64 bytes from 180.97.33.107: icmp_seq=1 ttl=55 time=24.3 ms
64 bytes from 180.97.33.107: icmp_seq=2 ttl=55 time=24.2 ms

--- 180.97.33.107 ping statistics ---
2 packets transmitted, 2 received, 0% packet loss, &lt;span class="pl-k"&gt;time&lt;/span&gt; 1001ms
rtt min/avg/max/mdev = 24.275/24.327/24.380/0.164 ms
pi@raspberrypi:&lt;span class="pl-k"&gt;~&lt;/span&gt;/code/smartdns_build $ ping 180.97.33.108 -c 2
PING 180.97.33.108 (180.97.33.108) 56(84) bytes of data.
64 bytes from 180.97.33.108: icmp_seq=1 ttl=55 time=31.1 ms
64 bytes from 180.97.33.108: icmp_seq=2 ttl=55 time=31.0 ms

--- 180.97.33.108 ping statistics ---
2 packets transmitted, 2 received, 0% packet loss, &lt;span class="pl-k"&gt;time&lt;/span&gt; 1001ms
rtt min/avg/max/mdev = 31.014/31.094/31.175/0.193 ms&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;strong&gt;smartdns&lt;/strong&gt;&lt;br&gt;
使用SmartDNS查询百度IP，并检测结果。&lt;/p&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt;pi@raspberrypi:&lt;span class="pl-k"&gt;~&lt;/span&gt;/code/smartdns_build $ nslookup www.baidu.com
Server:         192.168.1.1
Address:        192.168.1.1#53

Non-authoritative answer:
www.baidu.com   canonical name = www.a.shifen.com.
Name:   www.a.shifen.com
Address: 14.215.177.39

pi@raspberrypi:&lt;span class="pl-k"&gt;~&lt;/span&gt;/code/smartdns_build $ ping 14.215.177.39 -c 2
PING 14.215.177.39 (14.215.177.39) 56(84) bytes of data.
64 bytes from 14.215.177.39: icmp_seq=1 ttl=56 time=6.31 ms
64 bytes from 14.215.177.39: icmp_seq=2 ttl=56 time=5.95 ms

--- 14.215.177.39 ping statistics ---
2 packets transmitted, 2 received, 0% packet loss, &lt;span class="pl-k"&gt;time&lt;/span&gt; 1001ms
rtt min/avg/max/mdev = 5.954/6.133/6.313/0.195 ms
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;从对比看出，smartdns找到访问www.baidu.com最快的IP地址，这样访问百度比阿里DNS速度快5倍。&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-特性" class="anchor" aria-hidden="true" href="#特性"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;特性&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;多DNS上游服务器&lt;/strong&gt;&lt;br&gt;
支持配置多个上游DNS服务器，并同时进行查询，即使其中有DNS服务器异常，也不会影响查询。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;返回最快IP地址&lt;/strong&gt;&lt;br&gt;
支持从域名所属IP地址列表中查找到访问速度最快的IP地址，并返回给客户端，提高网络访问速度。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;支持多种查询协议&lt;/strong&gt;&lt;br&gt;
支持UDP，TCP，TLS, HTTPS查询，以及非53端口查询。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;特定域名IP地址指定&lt;/strong&gt;&lt;br&gt;
支持指定域名的IP地址，达到广告过滤效果，避免恶意网站的效果。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;域名高性能后缀匹配&lt;/strong&gt;&lt;br&gt;
支持域名后缀匹配模式，简化过滤配置，过滤20万条记录时间&amp;lt;1ms&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;域名分流&lt;/strong&gt;&lt;br&gt;
支持域名分流，不同类型的域名到不同的DNS服务器查询。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Linux/Windows多平台支持&lt;/strong&gt;&lt;br&gt;
支持标准Linux系统（树莓派），openwrt系统各种固件，华硕路由器原生固件。以及支持Windows 10 WSL (Windows Subsystem for Linux)。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;支持IPV4, IPV6双栈&lt;/strong&gt;&lt;br&gt;
支持IPV4，IPV6网络，支持查询A, AAAA记录，支持双栈IP速度优化，并支持完全禁用IPV6 AAAA解析。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;高性能，占用资源少&lt;/strong&gt;&lt;br&gt;
多线程异步IO模式，cache缓存查询结果。&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h2&gt;&lt;a id="user-content-架构" class="anchor" aria-hidden="true" href="#架构"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;架构&lt;/h2&gt;
&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="doc/architecture.png"&gt;&lt;img src="doc/architecture.png" alt="Architecture" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;SmartDNS接收本地网络设备的DNS查询请求，如PC，手机的查询请求。&lt;/li&gt;
&lt;li&gt;SmartDNS将查询请求发送到多个上游DNS服务器，可采用标准UDP查询，非标准端口UDP查询，及TCP查询。&lt;/li&gt;
&lt;li&gt;上游DNS服务器返回域名对应的Server IP地址列表。SmartDNS检测与本地网络访问速度最快的Server IP。&lt;/li&gt;
&lt;li&gt;将访问速度最快的Server IP返回给本地客户端。&lt;/li&gt;
&lt;/ol&gt;
&lt;h2&gt;&lt;a id="user-content-使用" class="anchor" aria-hidden="true" href="#使用"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;使用&lt;/h2&gt;
&lt;h3&gt;&lt;a id="user-content-下载配套安装包" class="anchor" aria-hidden="true" href="#下载配套安装包"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;下载配套安装包&lt;/h3&gt;
&lt;hr&gt;
&lt;p&gt;下载配套版本的SmartDNS安装包，对应安装包配套关系如下。&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;系统&lt;/th&gt;
&lt;th&gt;安装包&lt;/th&gt;
&lt;th&gt;说明&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;标准Linux系统(树莓派)&lt;/td&gt;
&lt;td&gt;smartdns.xxxxxxxx.armhf.deb&lt;/td&gt;
&lt;td&gt;支持树莓派Raspbian stretch，Debian 9系统。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;标准Linux系统(Armbian arm64)&lt;/td&gt;
&lt;td&gt;smartdns.xxxxxxxx.arm64.deb&lt;/td&gt;
&lt;td&gt;支持ARM64的Debian stretch，Debian 9系统。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;标准Linux系统(x86_64)&lt;/td&gt;
&lt;td&gt;smartdns.xxxxxxxx.x86_64.tar.gz&lt;/td&gt;
&lt;td&gt;支持x86_64 Linux 系统。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Windows 10 WSL (ubuntu)&lt;/td&gt;
&lt;td&gt;smartdns.xxxxxxxx.x86_64.tar.gz&lt;/td&gt;
&lt;td&gt;支持Windows 10 WSL ubuntu系统。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;标准Linux系统(x86)&lt;/td&gt;
&lt;td&gt;smartdns.xxxxxxxx.x86.tar.gz&lt;/td&gt;
&lt;td&gt;支持x86系统。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;华硕原生固件(optware)&lt;/td&gt;
&lt;td&gt;smartdns.xxxxxxx.mipsbig.ipk&lt;/td&gt;
&lt;td&gt;支持MIPS大端架构的系统，如RT-AC55U, RT-AC66U.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;华硕原生固件(optware)&lt;/td&gt;
&lt;td&gt;smartdns.xxxxxxx.mipsel.ipk&lt;/td&gt;
&lt;td&gt;支持MIPS小端架构的系统。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;华硕原生固件(optware)&lt;/td&gt;
&lt;td&gt;smartdns.xxxxxxx.arm.ipk&lt;/td&gt;
&lt;td&gt;支持arm小端架构的系统，如RT-AC68U。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Padavan&lt;/td&gt;
&lt;td&gt;smartdns.xxxxxxx.mipselsf.ipk&lt;/td&gt;
&lt;td&gt;padavan固件。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;openwrt 15.01&lt;/td&gt;
&lt;td&gt;smartdns.xxxxxxxx.ar71xx.ipk&lt;/td&gt;
&lt;td&gt;支持AR71XX MIPS系统。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;openwrt 15.01&lt;/td&gt;
&lt;td&gt;smartdns.xxxxxxxx.ramips_24kec.ipk&lt;/td&gt;
&lt;td&gt;支持MT762X等小端路由器&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;openwrt 15.01(潘多拉)&lt;/td&gt;
&lt;td&gt;smartdns.xxxxxxxx.mipsel_24kec_dsp.ipk&lt;/td&gt;
&lt;td&gt;支持MT7620系列的潘多拉固件&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;openwrt 15.01(潘多拉)&lt;/td&gt;
&lt;td&gt;smartdns.xxxxxxxx.mips_74kc_dsp2.ipk&lt;/td&gt;
&lt;td&gt;支持AR71xx系列的潘多拉固件&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;openwrt 18.06&lt;/td&gt;
&lt;td&gt;smartdns.xxxxxxxx.mips_24kc.ipk&lt;/td&gt;
&lt;td&gt;支持AR71XX MIPS系统。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;openwrt 18.06&lt;/td&gt;
&lt;td&gt;smartdns.xxxxxxxx.mipsel_24kc.ipk&lt;/td&gt;
&lt;td&gt;支持MT726X等小端路由器&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;openwrt 18.06&lt;/td&gt;
&lt;td&gt;smartdns.xxxxxxxx.x86_64.ipk&lt;/td&gt;
&lt;td&gt;支持x86_64路由器&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;openwrt 18.06&lt;/td&gt;
&lt;td&gt;smartdns.xxxxxxxx.i386_pentium4.ipk&lt;/td&gt;
&lt;td&gt;支持x86路由器&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;openwrt 18.06&lt;/td&gt;
&lt;td&gt;smartdns.xxxxxxxxxxx.arm_cortex-a9.ipk&lt;/td&gt;
&lt;td&gt;支持arm A9核心CPU的路由器&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;openwrt 18.06&lt;/td&gt;
&lt;td&gt;smartdns.xxxxxxxxx.arm_cortex-a7_neon-vfpv4.ipk&lt;/td&gt;
&lt;td&gt;支持arm A7核心CPU的路由器&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;openwrt LUCI&lt;/td&gt;
&lt;td&gt;luci-app-smartdns.xxxxxxxxx.xxxx.all.ipk&lt;/td&gt;
&lt;td&gt;openwrt管理统一界面&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;openwrt系统CPU架构比较多，上述表格未列出所有支持系统，请查看CPU架构后下载。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;merlin梅林固件理论和华硕固件一致，所以根据硬件类型安装相应的ipk包即可。（梅林暂时未验证，有问题提交issue）&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;CPU架构可在路由器管理界面找到，查看方法：
登录路由器，点击&lt;code&gt;System&lt;/code&gt;-&amp;gt;&lt;code&gt;Software&lt;/code&gt;，点击&lt;code&gt;Configuration&lt;/code&gt; Tab页面，在opkg安装源中可找到对应软件架构，下载路径中可找到，如下，架构为ar71xx&lt;/p&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt;src/gz chaos_calmer_base http://downloads.openwrt.org/chaos_calmer/15.05/ar71xx/generic/packages/base&lt;/pre&gt;&lt;/div&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;或ssh登录系统后通过如下命令查询软件架构：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;openwrt系列命令&lt;/strong&gt;&lt;/p&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt;opkg print_architecture&lt;/pre&gt;&lt;/div&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;optware系列命令&lt;/strong&gt;&lt;/p&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt;ipkg print_architecture&lt;/pre&gt;&lt;/div&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;debian系列命令&lt;/strong&gt;&lt;/p&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt;dpkg --print-architecture&lt;/pre&gt;&lt;/div&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;例如&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;下面的查询结果&lt;code&gt;arch ar71xx 10&lt;/code&gt;表示ar71xx系列架构，选择&lt;code&gt;smartdns.xxxxxxxx.ar71xx.ipk&lt;/code&gt;安装包&lt;/p&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt;root@OpenWrt:&lt;span class="pl-k"&gt;~&lt;/span&gt;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; opkg print_architecture&lt;/span&gt;
arch all 1
arch noarch 1
arch ar71xx 10&lt;/pre&gt;&lt;/div&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;请在Release页面下载：&lt;a href="https://github.com/pymumu/smartdns/releases"&gt;点击此处下载&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt;https://github.com/pymumu/smartdns/releases&lt;/pre&gt;&lt;/div&gt;
&lt;ul&gt;
&lt;li&gt;各种设备的安装步骤，请参考后面的章节。&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;&lt;a id="user-content-标准linux系统安装树莓派x86_64系统" class="anchor" aria-hidden="true" href="#标准linux系统安装树莓派x86_64系统"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;标准Linux系统安装/树莓派/X86_64系统&lt;/h3&gt;
&lt;hr&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;安装&lt;/p&gt;
&lt;p&gt;下载配套安装包&lt;code&gt;smartdns.xxxxxxxx.armhf.deb&lt;/code&gt;，并上传到Linux系统中。 执行如下命令安装&lt;/p&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt;dpkg -i smartdns.xxxxxxxx.armhf.deb&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;x86系统下载配套安装包&lt;code&gt;smartdns.xxxxxxxx.x86-64.tar.gz&lt;/code&gt;, 并上传到Linux系统中。 执行如下命令安装&lt;/p&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt;tar zxf smartdns.xxxxxxxx.x86-64.tar.gz
&lt;span class="pl-c1"&gt;cd&lt;/span&gt; smartdns
chmod +x ./install
./install -i&lt;/pre&gt;&lt;/div&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;修改配置&lt;/p&gt;
&lt;p&gt;安装完成后，可配置smartdns的上游服务器信息。具体配置参数参考&lt;code&gt;配置参数&lt;/code&gt;说明。&lt;br&gt;
一般情况下，只需要增加&lt;code&gt;server [IP]:port&lt;/code&gt;, &lt;code&gt;server-tcp [IP]:port&lt;/code&gt;配置项，
尽可能配置多个上游DNS服务器，包括国内外的服务器。配置参数请查看&lt;code&gt;配置参数&lt;/code&gt;章节。&lt;/p&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt;vi /etc/smartdns/smartdns.conf&lt;/pre&gt;&lt;/div&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;启动服务&lt;/p&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt;systemctl &lt;span class="pl-c1"&gt;enable&lt;/span&gt; smartdns
systemctl start smartdns&lt;/pre&gt;&lt;/div&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;将DNS请求转发的SmartDNS解析。&lt;/p&gt;
&lt;p&gt;修改本地路由器的DNS服务器，将DNS服务器配置为SmartDNS。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;登录到本地网络的路由器中，配置树莓派分配静态IP地址。&lt;/li&gt;
&lt;li&gt;修改WAN口或者DHCP DNS为树莓派IP地址。&lt;br&gt;
注意：&lt;br&gt;
I. 每款路由器配置方法不尽相同，请百度搜索相关的配置方法。&lt;br&gt;
II.华为等路由器可能不支持配置DNS为本地IP，请修改PC端，手机端DNS服务器为树莓派IP。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;检测服务是否配置成功。&lt;/p&gt;
&lt;p&gt;使用&lt;code&gt;nslookup -querytype=ptr 0.0.0.0&lt;/code&gt;查询域名&lt;br&gt;
看命令结果中的&lt;code&gt;name&lt;/code&gt;项目是否显示为&lt;code&gt;smartdns&lt;/code&gt;或&lt;code&gt;主机名&lt;/code&gt;，如&lt;code&gt;smartdns&lt;/code&gt;则表示生效&lt;/p&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt;pi@raspberrypi:&lt;span class="pl-k"&gt;~&lt;/span&gt;/code/smartdns_build $ nslookup -querytype=ptr 0.0.0.0
Server:         192.168.1.1
Address:        192.168.1.1#53

Non-authoritative answer:
0.0.0.0.in-addr.arpa  name = smartdns.&lt;/pre&gt;&lt;/div&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h3&gt;&lt;a id="user-content-openwrtlede" class="anchor" aria-hidden="true" href="#openwrtlede"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;openwrt/LEDE&lt;/h3&gt;
&lt;hr&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;安装&lt;/p&gt;
&lt;p&gt;将软件使用winscp上传到路由器的/root目录，执行如下命令安装&lt;/p&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt;opkg install smartdns.xxxxxxxx.xxxx.ipk
opkg install luci-app-smartdns.xxxxxxxx.xxxx.all.ipk&lt;/pre&gt;&lt;/div&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;修改配置&lt;/p&gt;
&lt;p&gt;登录openwrt管理页面，打开&lt;code&gt;Services&lt;/code&gt;-&amp;gt;&lt;code&gt;SmartDNS&lt;/code&gt;进行配置。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;在&lt;code&gt;Upstream Servers&lt;/code&gt;增加上游DNS服务器配置，建议配置多个国内外DNS服务器。&lt;/li&gt;
&lt;li&gt;在&lt;code&gt;Domain Address&lt;/code&gt;指定特定域名的IP地址，可用于广告屏蔽。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;启用服务&lt;/p&gt;
&lt;p&gt;SmartDNS服务生效方法有两种，&lt;code&gt;一种是直接作为主DNS服务&lt;/code&gt;；&lt;code&gt;另一种是作为dnsmasq的上游&lt;/code&gt;。&lt;br&gt;
默认情况下，SmartDNS采用第一种方式。如下两种方式根据需求选择即可。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;启用方法一：作为主DNS(默认方案)&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;启用smartdns的53端口重定向&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;登录路由器，点击&lt;code&gt;Services&lt;/code&gt;-&amp;gt;&lt;code&gt;SmartDNS&lt;/code&gt;-&amp;gt;&lt;code&gt;redirect&lt;/code&gt;，选择&lt;code&gt;重定向53端口到SmartDNS&lt;/code&gt;启用53端口转发。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;检测转发服务是否配置成功&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;使用&lt;code&gt;nslookup -querytype=ptr 0.0.0.0&lt;/code&gt;查询域名&lt;br&gt;
看命令结果中的&lt;code&gt;name&lt;/code&gt;项目是否显示为&lt;code&gt;smartdns&lt;/code&gt;或&lt;code&gt;主机名&lt;/code&gt;，如&lt;code&gt;smartdns&lt;/code&gt;则表示生效&lt;/p&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt;pi@raspberrypi:&lt;span class="pl-k"&gt;~&lt;/span&gt;/code/smartdns_build $ nslookup -querytype=ptr 0.0.0.0
Server:         192.168.1.1
Address:        192.168.1.1#53

Non-authoritative answer:
0.0.0.0.in-addr.arpa  name = smartdns.&lt;/pre&gt;&lt;/div&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;界面提示重定向失败&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;检查iptable，ip6table命令是否正确安装。&lt;/li&gt;
&lt;li&gt;openwrt 15.01系统不支持IPV6重定向，如网络需要支持IPV6，请将DNSMASQ上游改为smartdns，或者将smartdns的端口改为53，并停用dnsmasq。&lt;/li&gt;
&lt;li&gt;LEDE之后系统，请安装IPV6的nat转发驱动。点击&lt;code&gt;system&lt;/code&gt;-&amp;gt;&lt;code&gt;Software&lt;/code&gt;，点击&lt;code&gt;update lists&lt;/code&gt;更新软件列表后，安装&lt;code&gt;ip6tables-mod-nat&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;使用如下命令检查路由规则是否生效。&lt;/li&gt;
&lt;/ul&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt;iptables -t nat -L PREROUTING &lt;span class="pl-k"&gt;|&lt;/span&gt; grep REDIRECT&lt;/pre&gt;&lt;/div&gt;
&lt;ul&gt;
&lt;li&gt;如转发功能不正常，请使用方法二：作为DNSMASQ的上游。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;方法二：作为DNSMASQ的上游&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;将dnsmasq的请求发送到smartdns&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;登录路由器，点击&lt;code&gt;Services&lt;/code&gt;-&amp;gt;&lt;code&gt;SmartDNS&lt;/code&gt;-&amp;gt;&lt;code&gt;redirect&lt;/code&gt;，选择&lt;code&gt;作为dnsmasq的上游服务器&lt;/code&gt;设置dnsmasq的上游服务器为smartdns。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;检测上游服务是否配置成功&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;方法一：使用&lt;code&gt;nslookup -querytype=ptr 0.0.0.0&lt;/code&gt;查询域名&lt;br&gt;
看命令结果中的&lt;code&gt;name&lt;/code&gt;项目是否显示为&lt;code&gt;smartdns&lt;/code&gt;或&lt;code&gt;主机名&lt;/code&gt;，如&lt;code&gt;smartdns&lt;/code&gt;则表示生效&lt;/li&gt;
&lt;/ul&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt;pi@raspberrypi:&lt;span class="pl-k"&gt;~&lt;/span&gt;/code/smartdns_build $ nslookup -querytype=ptr 0.0.0.0
Server:         192.168.1.1
Address:        192.168.1.1#53

Non-authoritative answer:
0.0.0.0.in-addr.arpa  name = smartdns.&lt;/pre&gt;&lt;/div&gt;
&lt;ul&gt;
&lt;li&gt;方法二：使用&lt;code&gt;nslookup&lt;/code&gt;查询&lt;code&gt;www.baidu.com&lt;/code&gt;域名，查看结果中百度的IP地址是否&lt;code&gt;只有一个&lt;/code&gt;，如有多个IP地址返回，则表示未生效，请多尝试几个域名检查。&lt;/li&gt;
&lt;/ul&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt;pi@raspberrypi:&lt;span class="pl-k"&gt;~&lt;/span&gt; $ nslookup www.baidu.com 192.168.1.1
Server:         192.168.1.1
Address:        192.168.1.1#53

Non-authoritative answer:
www.baidu.com   canonical name = www.a.shifen.com.
Name:   www.a.shifen.com
Address: 14.215.177.38&lt;/pre&gt;&lt;/div&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;启动服务&lt;/p&gt;
&lt;p&gt;勾选配置页面中的&lt;code&gt;Enable(启用)&lt;/code&gt;来启动SmartDNS&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;注意：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;如已经安装chinaDNS，建议将chinaDNS的上游配置为SmartDNS。&lt;/li&gt;
&lt;li&gt;SmartDNS默认情况，将53端口的请求转发到SmartDNS的本地端口，由&lt;code&gt;Redirect&lt;/code&gt;配置选项控制。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h3&gt;&lt;a id="user-content-华硕路由器原生固件梅林固件" class="anchor" aria-hidden="true" href="#华硕路由器原生固件梅林固件"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;华硕路由器原生固件/梅林固件&lt;/h3&gt;
&lt;hr&gt;
&lt;p&gt;说明：梅林固件派生自华硕固件，理论上可以直接使用华硕配套的安装包使用。但目前未经验证，如有问题，请提交issue。&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;准备&lt;/p&gt;
&lt;p&gt;在使用此软件时，需要确认路由器是否支持U盘，并准备好U盘一个。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;启用SSH登录&lt;/p&gt;
&lt;p&gt;登录管理界面，点击&lt;code&gt;系统管理&lt;/code&gt;-&amp;gt;点击&lt;code&gt;系统设置&lt;/code&gt;，配置&lt;code&gt;Enable SSH&lt;/code&gt;为&lt;code&gt;Lan Only&lt;/code&gt;。&lt;br&gt;
SSH登录用户名密码与管理界面相同。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;下载&lt;code&gt;Download Master&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;在管理界面点击&lt;code&gt;USB相关应用&lt;/code&gt;-&amp;gt;点击&lt;code&gt;Download Master&lt;/code&gt;下载。&lt;br&gt;
下载完成后，启用&lt;code&gt;Download Master&lt;/code&gt;，如果不需要下载功能，此处可以卸载&lt;code&gt;Download Master&lt;/code&gt;，但要保证卸载前Download Master是启用的。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;安装SmartDNS&lt;/p&gt;
&lt;p&gt;将软件使用winscp上传到路由器的&lt;code&gt;/tmp/mnt/sda1&lt;/code&gt;目录。（或网上邻居复制到sda1共享目录）&lt;/p&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt;ipkg install smartdns.xxxxxxx.mipsbig.ipk&lt;/pre&gt;&lt;/div&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;重启路由器生效服务&lt;/p&gt;
&lt;p&gt;待路由器启动后，使用&lt;code&gt;nslookup -querytype=ptr 0.0.0.0&lt;/code&gt;查询域名&lt;br&gt;
看命令结果中的&lt;code&gt;name&lt;/code&gt;项目是否显示为&lt;code&gt;smartdns&lt;/code&gt;或&lt;code&gt;主机名&lt;/code&gt;，如&lt;code&gt;smartdns&lt;/code&gt;则表示生效&lt;/p&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt;pi@raspberrypi:&lt;span class="pl-k"&gt;~&lt;/span&gt;/code/smartdns_build $ nslookup -querytype=ptr 0.0.0.0
Server:         192.168.1.1
Address:        192.168.1.1#53

Non-authoritative answer:
0.0.0.0.in-addr.arpa  name = smartdns.&lt;/pre&gt;&lt;/div&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;额外说明&lt;/p&gt;
&lt;p&gt;上述过程，smartdns将安装到U盘根目录，采用optware的模式运行。
其目录结构如下： （此处仅列出smartdns相关文件）&lt;/p&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt;U盘
└── asusware.mipsbig
        ├── bin
        ├── etc
        &lt;span class="pl-k"&gt;|&lt;/span&gt;    ├── smartdns
        &lt;span class="pl-k"&gt;|&lt;/span&gt;    &lt;span class="pl-k"&gt;|&lt;/span&gt;     └── smartdns.conf
        &lt;span class="pl-k"&gt;|&lt;/span&gt;    └── init.d
        &lt;span class="pl-k"&gt;|&lt;/span&gt;          └── S50smartdns
        ├── lib
        ├── sbin
        ├── usr
        &lt;span class="pl-k"&gt;|&lt;/span&gt;    └── sbin
        &lt;span class="pl-k"&gt;|&lt;/span&gt;          └── smartdns
        ....&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;如要修改配置，可以ssh登录路由器，使用vi命令修改&lt;/p&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt;vi /opt/etc/smartdns/smartdns.conf&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;也可以通过网上邻居修改，网上邻居共享目录&lt;code&gt;sda1&lt;/code&gt;看不到&lt;code&gt;asusware.mipsbig&lt;/code&gt;目录，但可以直接在&lt;code&gt;文件管理器&lt;/code&gt;中输入&lt;code&gt;asusware.mipsbig\etc\init.d&lt;/code&gt;访问&lt;/p&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt;&lt;span class="pl-cce"&gt;\\&lt;/span&gt;192.168.1.1&lt;span class="pl-cce"&gt;\s&lt;/span&gt;da1&lt;span class="pl-cce"&gt;\a&lt;/span&gt;susware.mipsbig&lt;span class="pl-cce"&gt;\e&lt;/span&gt;tc&lt;span class="pl-cce"&gt;\i&lt;/span&gt;nit.d&lt;/pre&gt;&lt;/div&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h3&gt;&lt;a id="user-content-optwareentware" class="anchor" aria-hidden="true" href="#optwareentware"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;optware/entware&lt;/h3&gt;
&lt;hr&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;准备&lt;/p&gt;
&lt;p&gt;在使用此软件时，需要确认路由器是否支持U盘，并准备好U盘一个。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;安装SmartDNS&lt;/p&gt;
&lt;p&gt;将软件使用winscp上传到路由器的&lt;code&gt;/tmp&lt;/code&gt;目录。&lt;/p&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt;ipkg install smartdns.xxxxxxx.mipsbig.ipk&lt;/pre&gt;&lt;/div&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;修改smartdns配置&lt;/p&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt;vi /opt/etc/smartdns/smartdns.conf&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;另外，如需支持IPV6，可设置工作模式为&lt;code&gt;2&lt;/code&gt;，将dnsmasq的DNS服务禁用，smartdns为主用DNS服务器。将文件&lt;code&gt;/opt/etc/smartdns/smartdns-opt.conf&lt;/code&gt;，中的&lt;code&gt;SMARTDNS_WORKMODE&lt;/code&gt;修改为2.&lt;/p&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt;SMARTDNS_WORKMODE=&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;2&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;重启路由器生效服务&lt;/p&gt;
&lt;p&gt;待路由器启动后，使用&lt;code&gt;nslookup -querytype=ptr 0.0.0.0&lt;/code&gt;查询域名&lt;br&gt;
看命令结果中的&lt;code&gt;name&lt;/code&gt;项目是否显示为&lt;code&gt;smartdns&lt;/code&gt;或&lt;code&gt;主机名&lt;/code&gt;，如&lt;code&gt;smartdns&lt;/code&gt;则表示生效&lt;/p&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt;pi@raspberrypi:&lt;span class="pl-k"&gt;~&lt;/span&gt;/code/smartdns_build $ nslookup -querytype=ptr 0.0.0.0
Server:         192.168.1.1
Address:        192.168.1.1#53

Non-authoritative answer:
0.0.0.0.in-addr.arpa  name = smartdns.&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;注意：若服务没有自动启动，则需要设置optwre/entware自动启动，具体方法参考optware/entware的文档。&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h3&gt;&lt;a id="user-content-windows-10-wsl安装wsl-ubuntu" class="anchor" aria-hidden="true" href="#windows-10-wsl安装wsl-ubuntu"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Windows 10 WSL安装/WSL ubuntu&lt;/h3&gt;
&lt;hr&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;安装Windows 10 WSL ubuntu系统&lt;/p&gt;
&lt;p&gt;安装Windows 10 WSL运行环境，发行版本选择ubuntu系统。安装步骤请参考&lt;a href="https://docs.microsoft.com/en-us/windows/wsl/install-win10" rel="nofollow"&gt;WSL安装说明&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;安装smartdns&lt;/p&gt;
&lt;p&gt;下载安装包&lt;code&gt;smartdns.xxxxxxxx.x86_64.tar.gz&lt;/code&gt;，并解压到D盘根目录。解压后目录如下：&lt;/p&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt;D:&lt;span class="pl-cce"&gt;\S&lt;/span&gt;MARTDNS
├─etc
│  ├─default
│  ├─init.d
│  └─smartdns
├─package
│  └─windows
├─src
└─systemd
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;双击&lt;code&gt;D:\smartdns\package\windows&lt;/code&gt;目录下的&lt;code&gt;install.bat&lt;/code&gt;进行安装。要求输入密码时，请输入&lt;code&gt;WLS ubuntu&lt;/code&gt;的密码。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;修改配置&lt;/p&gt;
&lt;p&gt;记事本打开&lt;code&gt;D:\smartdns\etc\smartdns&lt;/code&gt;目录中的&lt;code&gt;smartdns.conf&lt;/code&gt;配置文件配置smartdns。具体配置参数参考&lt;code&gt;配置参数&lt;/code&gt;说明。&lt;br&gt;
一般情况下，只需要增加&lt;code&gt;server [IP]:port&lt;/code&gt;, &lt;code&gt;server-tcp [IP]:port&lt;/code&gt;配置项，
尽可能配置多个上游DNS服务器，包括国内外的服务器。配置参数请查看&lt;code&gt;配置参数&lt;/code&gt;章节。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;重新加载配置&lt;/p&gt;
&lt;p&gt;双击&lt;code&gt;D:\smartdns\package\windows&lt;/code&gt;目录下的&lt;code&gt;reload.bat&lt;/code&gt;进行安装。要求输入密码时，请输入&lt;code&gt;WLS ubuntu&lt;/code&gt;的密码。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;将DNS请求转发的SmartDNS解析。&lt;/p&gt;
&lt;p&gt;将Windows的默认DNS服务器修改为&lt;code&gt;127.0.0.1&lt;/code&gt;，具体步骤参考&lt;a href="https://support.microsoft.com/zh-cn/help/15089/windows-change-tcp-ip-settings" rel="nofollow"&gt;IP配置&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;检测服务是否配置成功。&lt;/p&gt;
&lt;p&gt;使用&lt;code&gt;nslookup -querytype=ptr 0.0.0.0&lt;/code&gt;查询域名&lt;br&gt;
看命令结果中的&lt;code&gt;name&lt;/code&gt;项目是否显示为&lt;code&gt;smartdns&lt;/code&gt;或&lt;code&gt;主机名&lt;/code&gt;，如&lt;code&gt;smartdns&lt;/code&gt;则表示生效&lt;/p&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt;pi@raspberrypi:&lt;span class="pl-k"&gt;~&lt;/span&gt;/code/smartdns_build $ nslookup -querytype=ptr 0.0.0.0
Server:         192.168.1.1
Address:        192.168.1.1#53

Non-authoritative answer:
0.0.0.0.in-addr.arpa  name = smartdns.&lt;/pre&gt;&lt;/div&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h2&gt;&lt;a id="user-content-配置参数" class="anchor" aria-hidden="true" href="#配置参数"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;配置参数&lt;/h2&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;参数&lt;/th&gt;
&lt;th&gt;功能&lt;/th&gt;
&lt;th&gt;默认值&lt;/th&gt;
&lt;th&gt;配置值&lt;/th&gt;
&lt;th&gt;例子&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;server-name&lt;/td&gt;
&lt;td&gt;DNS服务器名称&lt;/td&gt;
&lt;td&gt;操作系统主机名/smartdns&lt;/td&gt;
&lt;td&gt;符合主机名规格的字符串&lt;/td&gt;
&lt;td&gt;server-name smartdns&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;bind&lt;/td&gt;
&lt;td&gt;DNS监听端口号&lt;/td&gt;
&lt;td&gt;[::]:53&lt;/td&gt;
&lt;td&gt;可绑定多个端口&lt;br&gt;&lt;code&gt;IP:PORT&lt;/code&gt;: 服务器IP，端口号。&lt;br&gt;&lt;code&gt;[-group]&lt;/code&gt;: 请求时使用的DNS服务器组。&lt;br&gt;&lt;code&gt;[-no-rule-addr]&lt;/code&gt;：跳过address规则。&lt;br&gt;&lt;code&gt;[-no-rule-nameserver]&lt;/code&gt;：跳过Nameserver规则。&lt;br&gt;&lt;code&gt;[-no-rule-ipset]&lt;/code&gt;：跳过Ipset规则。&lt;br&gt;&lt;code&gt;[no-rule-soa]&lt;/code&gt;：跳过SOA(#)规则.&lt;br&gt;&lt;code&gt;[no-dualstack-selection]&lt;/code&gt;：停用双栈测速。&lt;br&gt;&lt;code&gt;[-no-speed-check]&lt;/code&gt;：停用测速。&lt;br&gt;&lt;code&gt;[-no-cache]&lt;/code&gt;：停止缓存&lt;/td&gt;
&lt;td&gt;bind :53&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;bind&lt;/td&gt;
&lt;td&gt;TCP DNS监听端口号&lt;/td&gt;
&lt;td&gt;[::]:53&lt;/td&gt;
&lt;td&gt;可绑定多个端口&lt;br&gt;&lt;code&gt;IP:PORT&lt;/code&gt;: 服务器IP，端口号。&lt;br&gt;&lt;code&gt;[-group]&lt;/code&gt;: 请求时使用的DNS服务器组。&lt;br&gt;&lt;code&gt;[-no-rule-addr]&lt;/code&gt;：跳过address规则。&lt;br&gt;&lt;code&gt;[-no-rule-nameserver]&lt;/code&gt;：跳过Nameserver规则。&lt;br&gt;&lt;code&gt;[-no-rule-ipset]&lt;/code&gt;：跳过Ipset规则。&lt;br&gt;&lt;code&gt;[no-rule-soa]&lt;/code&gt;：跳过SOA(#)规则.&lt;br&gt;&lt;code&gt;[no-dualstack-selection]&lt;/code&gt;：停用双栈测速。&lt;br&gt;&lt;code&gt;[-no-speed-check]&lt;/code&gt;：停用测速。&lt;br&gt;&lt;code&gt;[-no-cache]&lt;/code&gt;：停止缓存&lt;/td&gt;
&lt;td&gt;bind-tcp :53&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;cache-size&lt;/td&gt;
&lt;td&gt;域名结果缓存个数&lt;/td&gt;
&lt;td&gt;512&lt;/td&gt;
&lt;td&gt;数字&lt;/td&gt;
&lt;td&gt;cache-size 512&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;tcp-idle-time&lt;/td&gt;
&lt;td&gt;TCP链接空闲超时时间&lt;/td&gt;
&lt;td&gt;120&lt;/td&gt;
&lt;td&gt;数字&lt;/td&gt;
&lt;td&gt;tcp-idle-time 120&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;rr-ttl&lt;/td&gt;
&lt;td&gt;域名结果TTL&lt;/td&gt;
&lt;td&gt;远程查询结果&lt;/td&gt;
&lt;td&gt;大于0的数字&lt;/td&gt;
&lt;td&gt;rr-ttl 600&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;rr-ttl-min&lt;/td&gt;
&lt;td&gt;允许的最小TTL值&lt;/td&gt;
&lt;td&gt;远程查询结果&lt;/td&gt;
&lt;td&gt;大于0的数字&lt;/td&gt;
&lt;td&gt;rr-ttl-min 60&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;rr-ttl-max&lt;/td&gt;
&lt;td&gt;允许的最大TTL值&lt;/td&gt;
&lt;td&gt;远程查询结果&lt;/td&gt;
&lt;td&gt;大于0的数字&lt;/td&gt;
&lt;td&gt;rr-ttl-max 600&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;log-level&lt;/td&gt;
&lt;td&gt;设置日志级别&lt;/td&gt;
&lt;td&gt;error&lt;/td&gt;
&lt;td&gt;fatal,error,warn,notice,info,debug&lt;/td&gt;
&lt;td&gt;log-level error&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;log-file&lt;/td&gt;
&lt;td&gt;日志文件路径&lt;/td&gt;
&lt;td&gt;/var/log/smartdns.log&lt;/td&gt;
&lt;td&gt;路径&lt;/td&gt;
&lt;td&gt;log-file /var/log/smartdns.log&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;log-size&lt;/td&gt;
&lt;td&gt;日志大小&lt;/td&gt;
&lt;td&gt;128K&lt;/td&gt;
&lt;td&gt;数字+K,M,G&lt;/td&gt;
&lt;td&gt;log-size 128K&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;log-num&lt;/td&gt;
&lt;td&gt;日志归档个数&lt;/td&gt;
&lt;td&gt;2&lt;/td&gt;
&lt;td&gt;数字&lt;/td&gt;
&lt;td&gt;log-num 2&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;audit-enable&lt;/td&gt;
&lt;td&gt;设置审计启用&lt;/td&gt;
&lt;td&gt;no&lt;/td&gt;
&lt;td&gt;[yes|no]&lt;/td&gt;
&lt;td&gt;audit-enable yes&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;audit-file&lt;/td&gt;
&lt;td&gt;审计文件路径&lt;/td&gt;
&lt;td&gt;/var/log/smartdns-audit.log&lt;/td&gt;
&lt;td&gt;路径&lt;/td&gt;
&lt;td&gt;audit-file /var/log/smartdns-audit.log&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;audit-size&lt;/td&gt;
&lt;td&gt;审计大小&lt;/td&gt;
&lt;td&gt;128K&lt;/td&gt;
&lt;td&gt;数字+K,M,G&lt;/td&gt;
&lt;td&gt;audit-size 128K&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;audit-num&lt;/td&gt;
&lt;td&gt;审计归档个数&lt;/td&gt;
&lt;td&gt;2&lt;/td&gt;
&lt;td&gt;数字&lt;/td&gt;
&lt;td&gt;audit-num 2&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;conf-file&lt;/td&gt;
&lt;td&gt;附加配置文件&lt;/td&gt;
&lt;td&gt;无&lt;/td&gt;
&lt;td&gt;文件路径&lt;/td&gt;
&lt;td&gt;conf-file /etc/smartdns/smartdns.more.conf&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;server&lt;/td&gt;
&lt;td&gt;上游UDP DNS&lt;/td&gt;
&lt;td&gt;无&lt;/td&gt;
&lt;td&gt;可重复&lt;br&gt;&lt;code&gt;[ip][:port]&lt;/code&gt;：服务器IP，端口可选。&lt;br&gt;&lt;code&gt;[-blacklist-ip]&lt;/code&gt;：blacklist-ip参数指定使用blacklist-ip配置IP过滤结果。&lt;br&gt;&lt;code&gt;[-whitelist-ip]&lt;/code&gt;：whitelist-ip参数指定仅接受whitelist-ip中配置IP范围。&lt;br&gt;&lt;code&gt;[-group [group] ...]&lt;/code&gt;：DNS服务器所属组，比如office, foreign，和nameserver配套使用。&lt;br&gt;&lt;code&gt;[-exclude-default-group]&lt;/code&gt;：将DNS服务器从默认组中排除&lt;/td&gt;
&lt;td&gt;server 8.8.8.8:53 -blacklist-ip -group g1&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;server-tcp&lt;/td&gt;
&lt;td&gt;上游TCP DNS&lt;/td&gt;
&lt;td&gt;无&lt;/td&gt;
&lt;td&gt;可重复&lt;br&gt;&lt;code&gt;[ip][:port]&lt;/code&gt;：服务器IP，端口可选。&lt;br&gt;&lt;code&gt;[-blacklist-ip]&lt;/code&gt;：blacklist-ip参数指定使用blacklist-ip配置IP过滤结果。&lt;br&gt;&lt;code&gt;[-whitelist-ip]&lt;/code&gt;：whitelist-ip参数指定仅接受whitelist-ip中配置IP范围。&lt;br&gt;&lt;code&gt;[-group [group] ...]&lt;/code&gt;：DNS服务器所属组，比如office, foreign，和nameserver配套使用。&lt;br&gt;&lt;code&gt;[-exclude-default-group]&lt;/code&gt;：将DNS服务器从默认组中排除&lt;/td&gt;
&lt;td&gt;server-tcp 8.8.8.8:53&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;server-tls&lt;/td&gt;
&lt;td&gt;上游TLS DNS&lt;/td&gt;
&lt;td&gt;无&lt;/td&gt;
&lt;td&gt;可重复&lt;br&gt;&lt;code&gt;[ip][:port]&lt;/code&gt;：服务器IP，端口可选。&lt;br&gt;&lt;code&gt;[-spki-pin [sha256-pin]]&lt;/code&gt;: TLS合法性校验SPKI值，base64编码的sha256 SPKI pin值&lt;br&gt;&lt;code&gt;[-host-name]&lt;/code&gt;：TLS SNI名称。&lt;br&gt;&lt;code&gt;[-tls-host-verify]&lt;/code&gt;: TLS证书主机名校验。&lt;br&gt;&lt;code&gt;[-blacklist-ip]&lt;/code&gt;：blacklist-ip参数指定使用blacklist-ip配置IP过滤结果。&lt;br&gt;&lt;code&gt;[-whitelist-ip]&lt;/code&gt;：whitelist-ip参数指定仅接受whitelist-ip中配置IP范围。&lt;br&gt;&lt;code&gt;[-group [group] ...]&lt;/code&gt;：DNS服务器所属组，比如office, foreign，和nameserver配套使用。&lt;br&gt;&lt;code&gt;[-exclude-default-group]&lt;/code&gt;：将DNS服务器从默认组中排除&lt;/td&gt;
&lt;td&gt;server-tls 8.8.8.8:853&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;server-https&lt;/td&gt;
&lt;td&gt;上游HTTPS DNS&lt;/td&gt;
&lt;td&gt;无&lt;/td&gt;
&lt;td&gt;可重复&lt;br&gt;&lt;code&gt;https://[host][:port]/path&lt;/code&gt;：服务器IP，端口可选。&lt;br&gt;&lt;code&gt;[-spki-pin [sha256-pin]]&lt;/code&gt;: TLS合法性校验SPKI值，base64编码的sha256 SPKI pin值&lt;br&gt;&lt;code&gt;[-host-name]&lt;/code&gt;：TLS SNI名称&lt;br&gt;&lt;code&gt;[-http-host]&lt;/code&gt;：http协议头主机名。&lt;br&gt;&lt;code&gt;[-tls-host-verify]&lt;/code&gt;: TLS证书主机名校验。&lt;br&gt;&lt;code&gt;[-blacklist-ip]&lt;/code&gt;：blacklist-ip参数指定使用blacklist-ip配置IP过滤结果。&lt;br&gt;&lt;code&gt;[-whitelist-ip]&lt;/code&gt;：whitelist-ip参数指定仅接受whitelist-ip中配置IP范围。&lt;br&gt;&lt;code&gt;[-group [group] ...]&lt;/code&gt;：DNS服务器所属组，比如office, foreign，和nameserver配套使用。&lt;br&gt;&lt;code&gt;[-exclude-default-group]&lt;/code&gt;：将DNS服务器从默认组中排除&lt;/td&gt;
&lt;td&gt;server-https &lt;a href="https://cloudflare-dns.com/dns-query" rel="nofollow"&gt;https://cloudflare-dns.com/dns-query&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;speed-check-mode&lt;/td&gt;
&lt;td&gt;测速模式选择&lt;/td&gt;
&lt;td&gt;无&lt;/td&gt;
&lt;td&gt;[ping|tcp:[80]|none]&lt;/td&gt;
&lt;td&gt;speed-check-mode ping,tcp:80&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;address&lt;/td&gt;
&lt;td&gt;指定域名IP地址&lt;/td&gt;
&lt;td&gt;无&lt;/td&gt;
&lt;td&gt;address /domain/[ip|-|-4|-6|#|#4|#6] &lt;br&gt;&lt;code&gt;-&lt;/code&gt;表示忽略 &lt;br&gt;&lt;code&gt;#&lt;/code&gt;表示返回SOA &lt;br&gt;&lt;code&gt;4&lt;/code&gt;表示IPV4 &lt;br&gt;&lt;code&gt;6&lt;/code&gt;表示IPV6&lt;/td&gt;
&lt;td&gt;address /&lt;a href="http://www.example.com/1.2.3.4" rel="nofollow"&gt;www.example.com/1.2.3.4&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;nameserver&lt;/td&gt;
&lt;td&gt;指定域名使用server组解析&lt;/td&gt;
&lt;td&gt;无&lt;/td&gt;
&lt;td&gt;nameserver /domain/[group|-], &lt;code&gt;group&lt;/code&gt;为组名，&lt;code&gt;-&lt;/code&gt;表示忽略此规则，配套server中的&lt;code&gt;-group&lt;/code&gt;参数使用&lt;/td&gt;
&lt;td&gt;nameserver /&lt;a href="http://www.example.com/office" rel="nofollow"&gt;www.example.com/office&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;ipset&lt;/td&gt;
&lt;td&gt;域名IPSET&lt;/td&gt;
&lt;td&gt;None&lt;/td&gt;
&lt;td&gt;ipset /domain/[ipset|-], &lt;code&gt;-&lt;/code&gt;表示忽略&lt;/td&gt;
&lt;td&gt;ipset /&lt;a href="http://www.example.com/pass" rel="nofollow"&gt;www.example.com/pass&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;ipset-timeout&lt;/td&gt;
&lt;td&gt;设置IPSET超时功能启用&lt;/td&gt;
&lt;td&gt;auto&lt;/td&gt;
&lt;td&gt;[yes]&lt;/td&gt;
&lt;td&gt;ipset-timeout yes&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;bogus-nxdomain&lt;/td&gt;
&lt;td&gt;假冒IP地址过滤&lt;/td&gt;
&lt;td&gt;无&lt;/td&gt;
&lt;td&gt;[ip/subnet]，可重复&lt;/td&gt;
&lt;td&gt;bogus-nxdomain 1.2.3.4/16&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;ignore-ip&lt;/td&gt;
&lt;td&gt;忽略IP地址&lt;/td&gt;
&lt;td&gt;无&lt;/td&gt;
&lt;td&gt;[ip/subnet]，可重复&lt;/td&gt;
&lt;td&gt;ignore-ip 1.2.3.4/16&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;whitelist-ip&lt;/td&gt;
&lt;td&gt;白名单IP地址&lt;/td&gt;
&lt;td&gt;无&lt;/td&gt;
&lt;td&gt;[ip/subnet]，可重复&lt;/td&gt;
&lt;td&gt;whitelist-ip 1.2.3.4/16&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;blacklist-ip&lt;/td&gt;
&lt;td&gt;黑名单IP地址&lt;/td&gt;
&lt;td&gt;无&lt;/td&gt;
&lt;td&gt;[ip/subnet]，可重复&lt;/td&gt;
&lt;td&gt;blacklist-ip 1.2.3.4/16&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;force-AAAA-SOA&lt;/td&gt;
&lt;td&gt;强制AAAA地址返回SOA&lt;/td&gt;
&lt;td&gt;no&lt;/td&gt;
&lt;td&gt;[yes|no]&lt;/td&gt;
&lt;td&gt;force-AAAA-SOA yes&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;prefetch-domain&lt;/td&gt;
&lt;td&gt;域名预先获取功能&lt;/td&gt;
&lt;td&gt;no&lt;/td&gt;
&lt;td&gt;[yes|no]&lt;/td&gt;
&lt;td&gt;prefetch-domain yes&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;dualstack-ip-selection&lt;/td&gt;
&lt;td&gt;双栈IP优选&lt;/td&gt;
&lt;td&gt;no&lt;/td&gt;
&lt;td&gt;[yes|no]&lt;/td&gt;
&lt;td&gt;dualstack-ip-selection yes&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;dualstack-ip-selection-threshold&lt;/td&gt;
&lt;td&gt;双栈IP优选阈值&lt;/td&gt;
&lt;td&gt;30ms&lt;/td&gt;
&lt;td&gt;毫秒&lt;/td&gt;
&lt;td&gt;dualstack-ip-selection-threshold [0-1000]&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h2&gt;&lt;a id="user-content-faq" class="anchor" aria-hidden="true" href="#faq"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;FAQ&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;SmartDNS和DNSMASQ有什么区别&lt;br&gt;
SMARTDNS在设计上并不是替换DNSMASQ的，SMARTDNS主要功能集中在DNS解析增强上，增强部分有：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;多上游服务器并发请求，对结果进行测速后，返回最佳结果；&lt;/li&gt;
&lt;li&gt;address，ipset域名匹配采用高效算法，查询匹配更加快速高效，路由器设备依然高效。&lt;/li&gt;
&lt;li&gt;域名匹配支持忽略特定域名，可单独匹配IPv4， IPV6，支持多样化定制。&lt;/li&gt;
&lt;li&gt;针对广告屏蔽功能做增强，返回SOA，屏蔽广告效果更佳；&lt;/li&gt;
&lt;li&gt;IPV4，IPV6双栈IP优选机制，在双网情况下，选择最快的网络通讯。&lt;/li&gt;
&lt;li&gt;支持最新的TLS, HTTPS协议，提供安全的DNS查询能力。&lt;/li&gt;
&lt;li&gt;ECS支持，是查询结果更佳准确。&lt;/li&gt;
&lt;li&gt;IP黑名单，忽略IP机制，使域名查询更佳准确。&lt;/li&gt;
&lt;li&gt;域名预查询，访问常用网站更加快速。&lt;/li&gt;
&lt;li&gt;域名TTL可指定，使访问更快速。&lt;/li&gt;
&lt;li&gt;高速缓存机制，使访问更快速。&lt;/li&gt;
&lt;li&gt;异步日志，审计机制，在记录信息的同时不影响DNS查询性能。&lt;/li&gt;
&lt;li&gt;域名组（group）机制，特定域名使用特定上游服务器组查询，避免隐私泄漏。&lt;/li&gt;
&lt;li&gt;第二DNS支持自定义更多行为。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;如何配置上游服务器最佳。&lt;br&gt;
smartdns有测速机制，在配置上游服务器时，建议配置多个上游DNS服务器，包含多个不同区域的服务器，但总数建议在10个左右。推荐配置&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;运营商DNS。&lt;/li&gt;
&lt;li&gt;国内公共DNS，如&lt;code&gt;119.29.29.29&lt;/code&gt;, &lt;code&gt;223.5.5.5&lt;/code&gt;。&lt;/li&gt;
&lt;li&gt;国外公共DNS，如&lt;code&gt;8.8.8.8&lt;/code&gt;, &lt;code&gt;8.8.4.4&lt;/code&gt;。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;如何启用审计日志&lt;br&gt;
审计日志记录客户端请求的域名，记录信息包括，请求时间，请求IP，请求域名，请求类型，如果要启用审计日志，在配置界面配置&lt;code&gt;audit-enable yes&lt;/code&gt;启用，&lt;code&gt;audit-size&lt;/code&gt;, &lt;code&gt;audit-file&lt;/code&gt;, &lt;code&gt;audit-num&lt;/code&gt;分别配置审计日志文件大小，审计日志文件路径，和审计日志文件个数。审计日志文件将会压缩存储以节省空间。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;如何避免隐私泄漏&lt;br&gt;
smartdns默认情况下，会将请求发送到所有配置的DNS服务器，若上游DNS服务器使用DNS，或记录日志，将会导致隐私泄漏。为避免隐私泄漏，请尽量：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;配置使用可信的DNS服务器。&lt;/li&gt;
&lt;li&gt;优先使用TLS查询。&lt;/li&gt;
&lt;li&gt;设置上游DNS服务器组。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;如何屏蔽广告&lt;br&gt;
smartdns具备高性能域名匹配算法，通过域名方式过滤广告非常高效，如要屏蔽广告，只需要配置类似如下记录即可，如，屏蔽&lt;code&gt;*.ad.com&lt;/code&gt;，则配置：&lt;/p&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt;address /ad.com/&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;域名的使后缀模式，过滤*.ad.com，&lt;code&gt;#&lt;/code&gt;表示返回SOA，使屏蔽广告更加高效，如果要单独屏蔽IPV4， 或IPV6， 在&lt;code&gt;#&lt;/code&gt;后面增加数字，如&lt;code&gt;#4&lt;/code&gt;表示对IPV4生效。若想忽略特定子域名的屏蔽，可配置如下，如忽略&lt;code&gt;pass.ad.com&lt;/code&gt;，可配置如下：&lt;/p&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt;address /pass.ad.com/-&lt;/pre&gt;&lt;/div&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;如何使用DNS查询分流&lt;br&gt;
某些情况下，需要将有些域名使用特定的DNS服务器来查询来做到DNS分流。比如。&lt;/p&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt;.home -&lt;span class="pl-k"&gt;&amp;gt;&lt;/span&gt; 192.168.1.1
.office -&lt;span class="pl-k"&gt;&amp;gt;&lt;/span&gt; 10.0.0.1&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;.home 结尾的域名发送到192.168.1.1解析&lt;br&gt;
.office 结尾的域名发送到10.0.0.1解析
其他域名采用默认的模式解析。
这种情况的分流配置如下：&lt;/p&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt;配置上游，用-group指定组名，用-exclude-default-group将服务器从默认组中排除。&lt;/span&gt;
server 192.168.1.1 -group home -exclude-default-group
server 10.0.0.1 -group office -exclude-default-group
server 8.8.8.8

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt;配置解析的域名&lt;/span&gt;
nameserver /.home/home
nameserver /.office/office&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;通过上述配置即可实现DNS解析分流，如果需要实现按请求端端口分流，可以配置第二DNS服务器，bind配置增加--group参数指定分流名称。&lt;/p&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt;&lt;span class="pl-c1"&gt;bind&lt;/span&gt; :7053 -group office
&lt;span class="pl-c1"&gt;bind&lt;/span&gt; :8053 -group home&lt;/pre&gt;&lt;/div&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;IPV4, IPV6双栈IP优选功能如何使用&lt;br&gt;
目前IPV6已经开始普及，但IPV6网络在速度上，某些情况下还不如IPV4，为在双栈网络下获得较好的体验，smartdns提供来双栈IP优选机制，同一个域名，若IPV4的速度远快与IPV6，那么smartdns就会阻止IPV6的解析，让PC使用IPV4访问，具体配置文件通过&lt;code&gt;dualstack-ip-selection yes&lt;/code&gt;启用此功能，通过&lt;code&gt;dualstack-ip-selection-threshold [time]&lt;/code&gt;来修改阈值。如果要完全禁止IPV6 AAAA记录解析，可设置&lt;code&gt;force-AAAA-SOA yes&lt;/code&gt;。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;如何提高cache效率，加快访问速度&lt;br&gt;
smartdns提供了域名缓存机制，对查询的域名，进行缓存，缓存时间符合DNS TTL规范。为提高缓存命中率，可采用如下措施：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;适当增大cache的记录数&lt;br&gt;
通过&lt;code&gt;cache-size&lt;/code&gt;来设置缓存记录数。&lt;br&gt;
查询压力大的环境下，并且有内存大的机器的情况下，可适当调大。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;适当设置最小TTL值&lt;br&gt;
通过&lt;code&gt;rr-ttl-min&lt;/code&gt;将最低DNS TTL时间设置为一个合理值，延长缓存时间。&lt;br&gt;
建议是超时时间设置在10～30分钟，避免服务器域名变化时，查询到失效域名。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;开启域名预获取功能&lt;br&gt;
通过&lt;code&gt;prefetch-domain yes&lt;/code&gt;来启用域名预先获取功能，提高查询命中率。&lt;br&gt;
配合上述ttl超时时间，smartdns将在域名ttl即将超时使，再次发送查询请求，并缓存查询结果供后续使用。频繁访问的域名将会持续缓存。此功能将在空闲时消耗更多的CPU。&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;第二DNS如何自定义更多行为&lt;br&gt;
第二DNS可以作为其他DNS服务器的上游，提供更多的查询行为，通过bind配置支持可以绑定多个端口，不同端口可设置不同的标志，实现不同的功能，如&lt;/p&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; 绑定 6053端口，6053端口的请求将采用配置office组的上游查询，且不对结果进行测速，忽略address的配置地址。&lt;/span&gt;
&lt;span class="pl-c1"&gt;bind&lt;/span&gt; [::]:6053 -no-speed-check -group office -no-rule-addr&lt;/pre&gt;&lt;/div&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h2&gt;&lt;a id="user-content-编译" class="anchor" aria-hidden="true" href="#编译"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;编译&lt;/h2&gt;
&lt;p&gt;smartdns包含了编译软件包的脚本，支持编译luci，debian，openwrt，optare安装包，可执行&lt;code&gt;package/build-pkg.sh&lt;/code&gt;编译。&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-donate" class="anchor" aria-hidden="true" href="#donate"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Donate&lt;/h2&gt;
&lt;p&gt;如果你觉得此项目对你有帮助，请捐助我们，以使项目能持续发展，更加完善。&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-paypal" class="anchor" aria-hidden="true" href="#paypal"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;PayPal&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://paypal.me/PengNick/" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/19fc947af2adcacd24b6cdbd4a33c10d7cbaeb6c/68747470733a2f2f63646e2e7261776769742e636f6d2f74776f6c66736f6e2f70617970616c2d6769746875622d627574746f6e2f312e302e302f646973742f627574746f6e2e737667" alt="Support via PayPal" data-canonical-src="https://cdn.rawgit.com/twolfson/paypal-github-button/1.0.0/dist/button.svg" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-alipay-支付宝" class="anchor" aria-hidden="true" href="#alipay-支付宝"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Alipay 支付宝&lt;/h3&gt;
&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="doc/alipay_donate.jpg"&gt;&lt;img src="doc/alipay_donate.jpg" alt="alipay" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-wechat-微信" class="anchor" aria-hidden="true" href="#wechat-微信"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Wechat 微信&lt;/h3&gt;
&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="doc/wechat_donate.jpg"&gt;&lt;img src="doc/wechat_donate.jpg" alt="wechat" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-开源声明" class="anchor" aria-hidden="true" href="#开源声明"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;开源声明&lt;/h2&gt;
&lt;p&gt;Smartdns 基于GPL V3协议开源。&lt;/p&gt;
&lt;/article&gt;&lt;/div&gt;</description><author>pymumu</author><guid isPermaLink="false">https://github.com/pymumu/smartdns</guid><pubDate>Fri, 20 Dec 2019 00:03:00 GMT</pubDate></item><item><title>Immediate-Mode-UI/Nuklear #4 in C, This week</title><link>https://github.com/Immediate-Mode-UI/Nuklear</link><description>&lt;p&gt;&lt;i&gt;A single-header ANSI C immediate mode cross-platform GUI library&lt;/i&gt;&lt;/p&gt;&lt;div id="readme" class="md" data-path="Readme.md"&gt;&lt;article class="markdown-body entry-content p-5" itemprop="text"&gt;&lt;h1&gt;&lt;a id="user-content-nuklear" class="anchor" aria-hidden="true" href="#nuklear"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Nuklear&lt;/h1&gt;
&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="https://github.com/Immediate-Mode-UI/Nuklear/actions"&gt;&lt;img src="https://github.com/Immediate-Mode-UI/Nuklear/actions" alt="" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;This is a minimal-state, immediate-mode graphical user interface toolkit
written in ANSI C and licensed under public domain. It was designed as a simple
embeddable user interface for application and does not have any dependencies,
a default render backend or OS window/input handling but instead provides a
highly modular, library-based approach, with simple input state for input and
draw commands describing primitive shapes as output. So instead of providing a
layered library that tries to abstract over a number of platform and
render backends, it focuses only on the actual UI.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-features" class="anchor" aria-hidden="true" href="#features"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Features&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Immediate-mode graphical user interface toolkit&lt;/li&gt;
&lt;li&gt;Single-header library&lt;/li&gt;
&lt;li&gt;Written in C89 (ANSI C)&lt;/li&gt;
&lt;li&gt;Small codebase (~18kLOC)&lt;/li&gt;
&lt;li&gt;Focus on portability, efficiency and simplicity&lt;/li&gt;
&lt;li&gt;No dependencies (not even the standard library if not wanted)&lt;/li&gt;
&lt;li&gt;Fully skinnable and customizable&lt;/li&gt;
&lt;li&gt;Low memory footprint with total control of memory usage if needed / wanted&lt;/li&gt;
&lt;li&gt;UTF-8 support&lt;/li&gt;
&lt;li&gt;No global or hidden state&lt;/li&gt;
&lt;li&gt;Customizable library modules (you can compile and use only what you need)&lt;/li&gt;
&lt;li&gt;Optional font baker and vertex buffer output&lt;/li&gt;
&lt;li&gt;&lt;a href="https://cdn.statically.io/gh/Immediate-Mode-UI/nuklear/master/doc/nuklear.html" rel="nofollow"&gt;Documentation&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-building" class="anchor" aria-hidden="true" href="#building"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Building&lt;/h2&gt;
&lt;p&gt;This library is self-contained in one single header file and can be used either
in header-only mode or in implementation mode. The header-only mode is used
by default when included and allows including this header in other headers
and does not contain the actual implementation.&lt;/p&gt;
&lt;p&gt;The implementation mode requires defining the preprocessor macro
&lt;code&gt;NK_IMPLEMENTATION&lt;/code&gt; in &lt;em&gt;one&lt;/em&gt; .c/.cpp file before &lt;code&gt;#include&lt;/code&gt;ing this file, e.g.:&lt;/p&gt;
&lt;div class="highlight highlight-source-c"&gt;&lt;pre&gt;#&lt;span class="pl-k"&gt;define&lt;/span&gt; &lt;span class="pl-en"&gt;NK_IMPLEMENTATION&lt;/span&gt;
#&lt;span class="pl-k"&gt;include&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;nuklear.h&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;IMPORTANT: Every time you include "nuklear.h" you have to define the same optional flags.
This is very important; not doing it either leads to compiler errors, or even worse, stack corruptions.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-gallery" class="anchor" aria-hidden="true" href="#gallery"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Gallery&lt;/h2&gt;
&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="https://cloud.githubusercontent.com/assets/8057201/11761525/ae06f0ca-a0c6-11e5-819d-5610b25f6ef4.gif"&gt;&lt;img src="https://cloud.githubusercontent.com/assets/8057201/11761525/ae06f0ca-a0c6-11e5-819d-5610b25f6ef4.gif" alt="screenshot" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a target="_blank" rel="noopener noreferrer" href="https://cloud.githubusercontent.com/assets/8057201/13538240/acd96876-e249-11e5-9547-5ac0b19667a0.png"&gt;&lt;img src="https://cloud.githubusercontent.com/assets/8057201/13538240/acd96876-e249-11e5-9547-5ac0b19667a0.png" alt="screen" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a target="_blank" rel="noopener noreferrer" href="https://cloud.githubusercontent.com/assets/8057201/13538243/b04acd4c-e249-11e5-8fd2-ad7744a5b446.png"&gt;&lt;img src="https://cloud.githubusercontent.com/assets/8057201/13538243/b04acd4c-e249-11e5-8fd2-ad7744a5b446.png" alt="screen2" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a target="_blank" rel="noopener noreferrer" href="https://cloud.githubusercontent.com/assets/8057201/9976995/e81ac04a-5ef7-11e5-872b-acd54fbeee03.gif"&gt;&lt;img src="https://cloud.githubusercontent.com/assets/8057201/9976995/e81ac04a-5ef7-11e5-872b-acd54fbeee03.gif" alt="node" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a target="_blank" rel="noopener noreferrer" href="https://cloud.githubusercontent.com/assets/8057201/15991632/76494854-30b8-11e6-9555-a69840d0d50b.png"&gt;&lt;img src="https://cloud.githubusercontent.com/assets/8057201/15991632/76494854-30b8-11e6-9555-a69840d0d50b.png" alt="skinning" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a target="_blank" rel="noopener noreferrer" href="https://cloud.githubusercontent.com/assets/8057201/14902576/339926a8-0d9c-11e6-9fee-a8b73af04473.png"&gt;&lt;img src="https://cloud.githubusercontent.com/assets/8057201/14902576/339926a8-0d9c-11e6-9fee-a8b73af04473.png" alt="gamepad" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-example" class="anchor" aria-hidden="true" href="#example"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Example&lt;/h2&gt;
&lt;div class="highlight highlight-source-c"&gt;&lt;pre&gt;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;/*&lt;/span&gt; init gui state &lt;span class="pl-c"&gt;*/&lt;/span&gt;&lt;/span&gt;
&lt;span class="pl-k"&gt;struct&lt;/span&gt; nk_context ctx;
&lt;span class="pl-en"&gt;nk_init_fixed&lt;/span&gt;(&amp;amp;ctx, calloc(&lt;span class="pl-c1"&gt;1&lt;/span&gt;, MAX_MEMORY), MAX_MEMORY, &amp;amp;font);

&lt;span class="pl-k"&gt;enum&lt;/span&gt; {EASY, HARD};
&lt;span class="pl-k"&gt;static&lt;/span&gt; &lt;span class="pl-k"&gt;int&lt;/span&gt; op = EASY;
&lt;span class="pl-k"&gt;static&lt;/span&gt; &lt;span class="pl-k"&gt;float&lt;/span&gt; value = &lt;span class="pl-c1"&gt;0&lt;/span&gt;.&lt;span class="pl-c1"&gt;6f&lt;/span&gt;;
&lt;span class="pl-k"&gt;static&lt;/span&gt; &lt;span class="pl-k"&gt;int&lt;/span&gt; i =  &lt;span class="pl-c1"&gt;20&lt;/span&gt;;

&lt;span class="pl-k"&gt;if&lt;/span&gt; (nk_begin(&amp;amp;ctx, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;Show&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, nk_rect(&lt;span class="pl-c1"&gt;50&lt;/span&gt;, &lt;span class="pl-c1"&gt;50&lt;/span&gt;, &lt;span class="pl-c1"&gt;220&lt;/span&gt;, &lt;span class="pl-c1"&gt;220&lt;/span&gt;),
    NK_WINDOW_BORDER|NK_WINDOW_MOVABLE|NK_WINDOW_CLOSABLE)) {
    &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;/*&lt;/span&gt; fixed widget pixel width &lt;span class="pl-c"&gt;*/&lt;/span&gt;&lt;/span&gt;
    &lt;span class="pl-c1"&gt;nk_layout_row_static&lt;/span&gt;(&amp;amp;ctx, &lt;span class="pl-c1"&gt;30&lt;/span&gt;, &lt;span class="pl-c1"&gt;80&lt;/span&gt;, &lt;span class="pl-c1"&gt;1&lt;/span&gt;);
    &lt;span class="pl-k"&gt;if&lt;/span&gt; (&lt;span class="pl-c1"&gt;nk_button_label&lt;/span&gt;(&amp;amp;ctx, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;button&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)) {
        &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;/*&lt;/span&gt; event handling &lt;span class="pl-c"&gt;*/&lt;/span&gt;&lt;/span&gt;
    }

    &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;/*&lt;/span&gt; fixed widget window ratio width &lt;span class="pl-c"&gt;*/&lt;/span&gt;&lt;/span&gt;
    &lt;span class="pl-c1"&gt;nk_layout_row_dynamic&lt;/span&gt;(&amp;amp;ctx, &lt;span class="pl-c1"&gt;30&lt;/span&gt;, &lt;span class="pl-c1"&gt;2&lt;/span&gt;);
    &lt;span class="pl-k"&gt;if&lt;/span&gt; (&lt;span class="pl-c1"&gt;nk_option_label&lt;/span&gt;(&amp;amp;ctx, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;easy&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, op == EASY)) op = EASY;
    &lt;span class="pl-k"&gt;if&lt;/span&gt; (&lt;span class="pl-c1"&gt;nk_option_label&lt;/span&gt;(&amp;amp;ctx, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;hard&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, op == HARD)) op = HARD;

    &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;/*&lt;/span&gt; custom widget pixel width &lt;span class="pl-c"&gt;*/&lt;/span&gt;&lt;/span&gt;
    &lt;span class="pl-c1"&gt;nk_layout_row_begin&lt;/span&gt;(&amp;amp;ctx, NK_STATIC, &lt;span class="pl-c1"&gt;30&lt;/span&gt;, &lt;span class="pl-c1"&gt;2&lt;/span&gt;);
    {
        &lt;span class="pl-c1"&gt;nk_layout_row_push&lt;/span&gt;(&amp;amp;ctx, &lt;span class="pl-c1"&gt;50&lt;/span&gt;);
        &lt;span class="pl-c1"&gt;nk_label&lt;/span&gt;(&amp;amp;ctx, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;Volume:&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, NK_TEXT_LEFT);
        &lt;span class="pl-c1"&gt;nk_layout_row_push&lt;/span&gt;(&amp;amp;ctx, &lt;span class="pl-c1"&gt;110&lt;/span&gt;);
        &lt;span class="pl-c1"&gt;nk_slider_float&lt;/span&gt;(&amp;amp;ctx, &lt;span class="pl-c1"&gt;0&lt;/span&gt;, &amp;amp;value, &lt;span class="pl-c1"&gt;1&lt;/span&gt;.&lt;span class="pl-c1"&gt;0f&lt;/span&gt;, &lt;span class="pl-c1"&gt;0&lt;/span&gt;.&lt;span class="pl-c1"&gt;1f&lt;/span&gt;);
    }
    &lt;span class="pl-c1"&gt;nk_layout_row_end&lt;/span&gt;(&amp;amp;ctx);
}
&lt;span class="pl-en"&gt;nk_end&lt;/span&gt;(&amp;amp;ctx);&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="https://cloud.githubusercontent.com/assets/8057201/10187981/584ecd68-675c-11e5-897c-822ef534a876.png"&gt;&lt;img src="https://cloud.githubusercontent.com/assets/8057201/10187981/584ecd68-675c-11e5-897c-822ef534a876.png" alt="example" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-bindings" class="anchor" aria-hidden="true" href="#bindings"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Bindings&lt;/h2&gt;
&lt;p&gt;There are a number of nuklear bindings for different languges created by other authors.
I cannot attest for their quality since I am not necessarily proficient in any of these
languages. Furthermore there are no guarantee that all bindings will always be kept up to date:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/glegris/nuklear4j"&gt;Java&lt;/a&gt; by Guillaume Legris&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/Timu5/bindbc-nuklear"&gt;D&lt;/a&gt; by Mateusz Muszyński&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/golang-ui/nuklear"&gt;Golang&lt;/a&gt; by &lt;a href="mailto:golang-ui@github.com"&gt;golang-ui@github.com&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/snuk182/nuklear-rust"&gt;Rust&lt;/a&gt; by &lt;a href="mailto:snuk182@github.com"&gt;snuk182@github.com&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/wasamasa/nuklear"&gt;Chicken&lt;/a&gt; by &lt;a href="mailto:wasamasa@github.com"&gt;wasamasa@github.com&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/zacharycarter/nuklear-nim"&gt;Nim&lt;/a&gt; by &lt;a href="mailto:zacharycarter@github.com"&gt;zacharycarter@github.com&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Lua
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/keharriso/love-nuklear"&gt;LÖVE-Nuklear&lt;/a&gt; by Kevin Harrison&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/stetre/moonnuklear"&gt;MoonNuklear&lt;/a&gt; by Stefano Trettel&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Python
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/billsix/pyNuklear"&gt;pyNuklear&lt;/a&gt; by William Emerison Six (ctypes-based wrapper)&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/nathanrw/nuklear-cffi"&gt;pynk&lt;/a&gt; by &lt;a href="mailto:nathanrw@github.com"&gt;nathanrw@github.com&lt;/a&gt; (cffi binding)&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/cartman300/NuklearDotNet"&gt;CSharp/.NET&lt;/a&gt; by &lt;a href="mailto:cartman300@github.com"&gt;cartman300@github.com&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-credits" class="anchor" aria-hidden="true" href="#credits"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Credits&lt;/h2&gt;
&lt;p&gt;Developed by Micha Mettke and every direct or indirect contributor to the GitHub.&lt;/p&gt;
&lt;p&gt;Embeds &lt;code&gt;stb_texedit&lt;/code&gt;, &lt;code&gt;stb_truetype&lt;/code&gt; and &lt;code&gt;stb_rectpack&lt;/code&gt; by Sean Barrett (public domain)
Embeds &lt;code&gt;ProggyClean.ttf&lt;/code&gt; font by Tristan Grimmer (MIT license).&lt;/p&gt;
&lt;p&gt;Big thank you to Omar Cornut (ocornut@github) for his &lt;a href="https://github.com/ocornut/imgui"&gt;imgui&lt;/a&gt; library and
giving me the inspiration for this library, Casey Muratori for handmade hero
and his original immediate-mode graphical user interface idea and Sean
Barrett for his amazing single-header &lt;a href="https://github.com/nothings/stb"&gt;libraries&lt;/a&gt; which restored my faith
in libraries and brought me to create some of my own. Finally Apoorva Joshi for his single-header &lt;a href="http://apoorvaj.io/single-header-packer.html" rel="nofollow"&gt;file packer&lt;/a&gt;.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-license" class="anchor" aria-hidden="true" href="#license"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;License&lt;/h2&gt;
&lt;pre&gt;&lt;code&gt;------------------------------------------------------------------------------
This software is available under 2 licenses -- choose whichever you prefer.
------------------------------------------------------------------------------
ALTERNATIVE A - MIT License
Copyright (c) 2017 Micha Mettke
Permission is hereby granted, free of charge, to any person obtaining a copy of
this software and associated documentation files (the "Software"), to deal in
the Software without restriction, including without limitation the rights to
use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies
of the Software, and to permit persons to whom the Software is furnished to do
so, subject to the following conditions:
The above copyright notice and this permission notice shall be included in all
copies or substantial portions of the Software.
THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
SOFTWARE.
------------------------------------------------------------------------------
ALTERNATIVE B - Public Domain (www.unlicense.org)
This is free and unencumbered software released into the public domain.
Anyone is free to copy, modify, publish, use, compile, sell, or distribute this
software, either in source code form or as a compiled binary, for any purpose,
commercial or non-commercial, and by any means.
In jurisdictions that recognize copyright laws, the author or authors of this
software dedicate any and all copyright interest in the software to the public
domain. We make this dedication for the benefit of the public at large and to
the detriment of our heirs and successors. We intend this dedication to be an
overt act of relinquishment in perpetuity of all present and future rights to
this software under copyright law.
THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
AUTHORS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN
ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION
WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
-----------------------------------------------------------------------------
&lt;/code&gt;&lt;/pre&gt;
&lt;/article&gt;&lt;/div&gt;</description><author>Immediate-Mode-UI</author><guid isPermaLink="false">https://github.com/Immediate-Mode-UI/Nuklear</guid><pubDate>Fri, 20 Dec 2019 00:04:00 GMT</pubDate></item><item><title>git/git #5 in C, This week</title><link>https://github.com/git/git</link><description>&lt;p&gt;&lt;i&gt;Git Source Code Mirror - This is a publish-only repository and all pull requests are ignored. Please follow Documentation/SubmittingPatches procedure for any of your improvements.&lt;/i&gt;&lt;/p&gt;&lt;div id="readme" class="md" data-path="README.md"&gt;&lt;article class="markdown-body entry-content p-5" itemprop="text"&gt;&lt;p&gt;&lt;a href="https://dev.azure.com/git/git/_build/latest?definitionId=11" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/254dd63d83b7a6d1406ce05d85b385b4d140801b/68747470733a2f2f6465762e617a7572652e636f6d2f6769742f6769742f5f617069732f6275696c642f7374617475732f6769742e676974" alt="Build Status" data-canonical-src="https://dev.azure.com/git/git/_apis/build/status/git.git" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h1&gt;&lt;a id="user-content-git---fast-scalable-distributed-revision-control-system" class="anchor" aria-hidden="true" href="#git---fast-scalable-distributed-revision-control-system"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Git - fast, scalable, distributed revision control system&lt;/h1&gt;
&lt;p&gt;Git is a fast, scalable, distributed revision control system with an
unusually rich command set that provides both high-level operations
and full access to internals.&lt;/p&gt;
&lt;p&gt;Git is an Open Source project covered by the GNU General Public
License version 2 (some parts of it are under different licenses,
compatible with the GPLv2). It was originally written by Linus
Torvalds with help of a group of hackers around the net.&lt;/p&gt;
&lt;p&gt;Please read the file &lt;a href="INSTALL"&gt;INSTALL&lt;/a&gt; for installation instructions.&lt;/p&gt;
&lt;p&gt;Many Git online resources are accessible from &lt;a href="https://git-scm.com/" rel="nofollow"&gt;https://git-scm.com/&lt;/a&gt;
including full documentation and Git related tools.&lt;/p&gt;
&lt;p&gt;See &lt;a href="Documentation/gittutorial.txt"&gt;Documentation/gittutorial.txt&lt;/a&gt; to get started, then see
&lt;a href="Documentation/giteveryday.txt"&gt;Documentation/giteveryday.txt&lt;/a&gt; for a useful minimum set of commands, and
&lt;code&gt;Documentation/git-&amp;lt;commandname&amp;gt;.txt&lt;/code&gt; for documentation of each command.
If git has been correctly installed, then the tutorial can also be
read with &lt;code&gt;man gittutorial&lt;/code&gt; or &lt;code&gt;git help tutorial&lt;/code&gt;, and the
documentation of each command with &lt;code&gt;man git-&amp;lt;commandname&amp;gt;&lt;/code&gt; or &lt;code&gt;git help &amp;lt;commandname&amp;gt;&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;CVS users may also want to read &lt;a href="Documentation/gitcvs-migration.txt"&gt;Documentation/gitcvs-migration.txt&lt;/a&gt;
(&lt;code&gt;man gitcvs-migration&lt;/code&gt; or &lt;code&gt;git help cvs-migration&lt;/code&gt; if git is
installed).&lt;/p&gt;
&lt;p&gt;The user discussion and development of Git take place on the Git
mailing list -- everyone is welcome to post bug reports, feature
requests, comments and patches to &lt;a href="mailto:git@vger.kernel.org"&gt;git@vger.kernel.org&lt;/a&gt; (read
&lt;a href="Documentation/SubmittingPatches"&gt;Documentation/SubmittingPatches&lt;/a&gt; for instructions on patch submission).
To subscribe to the list, send an email with just "subscribe git" in
the body to &lt;a href="mailto:majordomo@vger.kernel.org"&gt;majordomo@vger.kernel.org&lt;/a&gt;. The mailing list archives are
available at &lt;a href="https://lore.kernel.org/git/" rel="nofollow"&gt;https://lore.kernel.org/git/&lt;/a&gt;,
&lt;a href="http://marc.info/?l=git" rel="nofollow"&gt;http://marc.info/?l=git&lt;/a&gt; and other archival sites.&lt;/p&gt;
&lt;p&gt;Issues which are security relevant should be disclosed privately to
the Git Security mailing list &lt;a href="mailto:git-security@googlegroups.com"&gt;git-security@googlegroups.com&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;The maintainer frequently sends the "What's cooking" reports that
list the current status of various development topics to the mailing
list.  The discussion following them give a good reference for
project status, development direction and remaining tasks.&lt;/p&gt;
&lt;p&gt;The name "git" was given by Linus Torvalds when he wrote the very
first version. He described the tool as "the stupid content tracker"
and the name as (depending on your mood):&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;random three-letter combination that is pronounceable, and not
actually used by any common UNIX command.  The fact that it is a
mispronunciation of "get" may or may not be relevant.&lt;/li&gt;
&lt;li&gt;stupid. contemptible and despicable. simple. Take your pick from the
dictionary of slang.&lt;/li&gt;
&lt;li&gt;"global information tracker": you're in a good mood, and it actually
works for you. Angels sing, and a light suddenly fills the room.&lt;/li&gt;
&lt;li&gt;"goddamn idiotic truckload of sh*t": when it breaks&lt;/li&gt;
&lt;/ul&gt;
&lt;/article&gt;&lt;/div&gt;</description><author>git</author><guid isPermaLink="false">https://github.com/git/git</guid><pubDate>Fri, 20 Dec 2019 00:05:00 GMT</pubDate></item><item><title>mpv-player/mpv #6 in C, This week</title><link>https://github.com/mpv-player/mpv</link><description>&lt;p&gt;&lt;i&gt;🎥 Command line video player&lt;/i&gt;&lt;/p&gt;&lt;div id="readme" class="md" data-path="README.md"&gt;&lt;article class="markdown-body entry-content p-5" itemprop="text"&gt;&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="https://raw.githubusercontent.com/mpv-player/mpv.io/master/source/images/mpv-logo-128.png"&gt;&lt;img src="https://raw.githubusercontent.com/mpv-player/mpv.io/master/source/images/mpv-logo-128.png" alt="mpv logo" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h1&gt;&lt;a id="user-content-mpv" class="anchor" aria-hidden="true" href="#mpv"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;mpv&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="#external-links"&gt;External links&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#overview"&gt;Overview&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#system-requirements"&gt;System requirements&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#downloads"&gt;Downloads&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#changelog"&gt;Changelog&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#compilation"&gt;Compilation&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#release-cycle"&gt;Release cycle&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#bug-reports"&gt;Bug reports&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#contributing"&gt;Contributing&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#license"&gt;License&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#contact"&gt;Contact&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-external-links" class="anchor" aria-hidden="true" href="#external-links"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;External links&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/mpv-player/mpv/wiki"&gt;Wiki&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/mpv-player/mpv/wiki/FAQ"&gt;FAQ&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://mpv.io/manual/master/" rel="nofollow"&gt;Manual&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-overview" class="anchor" aria-hidden="true" href="#overview"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Overview&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;mpv&lt;/strong&gt; is a free (as in freedom) media player for the command line. It supports
a wide variety of media file formats, audio and video codecs, and subtitle types.&lt;/p&gt;
&lt;p&gt;There is a &lt;a href="https://github.com/mpv-player/mpv/wiki/FAQ"&gt;FAQ&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Releases can be found on the &lt;a href="https://github.com/mpv-player/mpv/releases"&gt;release list&lt;/a&gt;.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-system-requirements" class="anchor" aria-hidden="true" href="#system-requirements"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;System requirements&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;A not too ancient Linux, Windows 7 or later, or OSX 10.8 or later.&lt;/li&gt;
&lt;li&gt;A somewhat capable CPU. Hardware decoding might help if the CPU is too slow to
decode video in realtime, but must be explicitly enabled with the &lt;code&gt;--hwdec&lt;/code&gt;
option.&lt;/li&gt;
&lt;li&gt;A not too crappy GPU. mpv's focus is not on power-efficient playback on
embedded or integrated GPUs (for example, hardware decoding is not even
enabled by default). Low power GPUs may cause issues like tearing, stutter,
etc. The main video output uses shaders for video rendering and scaling,
rather than GPU fixed function hardware. On Windows, you might want to make
sure the graphics drivers are current. In some cases, ancient fallback video
output methods can help (such as &lt;code&gt;--vo=xv&lt;/code&gt; on Linux), but this use is not
recommended or supported.&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-downloads" class="anchor" aria-hidden="true" href="#downloads"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Downloads&lt;/h2&gt;
&lt;p&gt;For semi-official builds and third-party packages please see
&lt;a href="http://mpv.io/installation/" rel="nofollow"&gt;mpv.io/installation&lt;/a&gt;.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-changelog" class="anchor" aria-hidden="true" href="#changelog"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Changelog&lt;/h2&gt;
&lt;p&gt;There is no complete changelog; however, changes to the player core interface
are listed in the &lt;a href="https://github.com/mpv-player/mpv/blob/master/DOCS/interface-changes.rst"&gt;interface changelog&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Changes to the C API are documented in the &lt;a href="https://github.com/mpv-player/mpv/blob/master/DOCS/client-api-changes.rst"&gt;client API changelog&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;The &lt;a href="https://github.com/mpv-player/mpv/releases"&gt;release list&lt;/a&gt; has a summary of most of the important changes
on every release.&lt;/p&gt;
&lt;p&gt;Changes to the default key bindings are indicated in
&lt;a href="https://github.com/mpv-player/mpv/blob/master/etc/restore-old-bindings.conf"&gt;restore-old-bindings.conf&lt;/a&gt;.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-compilation" class="anchor" aria-hidden="true" href="#compilation"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Compilation&lt;/h2&gt;
&lt;p&gt;Compiling with full features requires development files for several
external libraries. Below is a list of some important requirements.&lt;/p&gt;
&lt;p&gt;The mpv build system uses &lt;a href="https://waf.io/" rel="nofollow"&gt;waf&lt;/a&gt;, but we don't store it in the
repository. The &lt;code&gt;./bootstrap.py&lt;/code&gt; script will download the latest version
of waf that was tested with the build system.&lt;/p&gt;
&lt;p&gt;For a list of the available build options use &lt;code&gt;./waf configure --help&lt;/code&gt;. If
you think you have support for some feature installed but configure fails to
detect it, the file &lt;code&gt;build/config.log&lt;/code&gt; may contain information about the
reasons for the failure.&lt;/p&gt;
&lt;p&gt;NOTE: To avoid cluttering the output with unreadable spam, &lt;code&gt;--help&lt;/code&gt; only shows
one of the two switches for each option. If the option is autodetected by
default, the &lt;code&gt;--disable-***&lt;/code&gt; switch is printed; if the option is disabled by
default, the &lt;code&gt;--enable-***&lt;/code&gt; switch is printed. Either way, you can use
&lt;code&gt;--enable-***&lt;/code&gt; or &lt;code&gt;--disable-**&lt;/code&gt; regardless of what is printed by &lt;code&gt;--help&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;To build the software you can use &lt;code&gt;./waf build&lt;/code&gt;: the result of the compilation
will be located in &lt;code&gt;build/mpv&lt;/code&gt;. You can use &lt;code&gt;./waf install&lt;/code&gt; to install mpv
to the &lt;em&gt;prefix&lt;/em&gt; after it is compiled.&lt;/p&gt;
&lt;p&gt;Example:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;./bootstrap.py
./waf configure
./waf
./waf install
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Essential dependencies (incomplete list):&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;gcc or clang&lt;/li&gt;
&lt;li&gt;X development headers (xlib, xrandr, xext, xscrnsaver, xinerama, libvdpau,
libGL, GLX, EGL, xv, ...)&lt;/li&gt;
&lt;li&gt;Audio output development headers (libasound/ALSA, pulseaudio)&lt;/li&gt;
&lt;li&gt;FFmpeg libraries (libavutil libavcodec libavformat libswscale libavfilter
and either libswresample or libavresample)&lt;/li&gt;
&lt;li&gt;zlib&lt;/li&gt;
&lt;li&gt;iconv (normally provided by the system libc)&lt;/li&gt;
&lt;li&gt;libass (OSD, OSC, text subtitles)&lt;/li&gt;
&lt;li&gt;Lua (optional, required for the OSC pseudo-GUI and youtube-dl integration)&lt;/li&gt;
&lt;li&gt;libjpeg (optional, used for screenshots only)&lt;/li&gt;
&lt;li&gt;uchardet (optional, for subtitle charset detection)&lt;/li&gt;
&lt;li&gt;nvdec and vaapi libraries for hardware decoding on Linux (optional)&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Libass dependencies (when building libass):&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;gcc or clang, yasm on x86 and x86_64&lt;/li&gt;
&lt;li&gt;fribidi, freetype, fontconfig development headers (for libass)&lt;/li&gt;
&lt;li&gt;harfbuzz (optional, required for correct rendering of combining characters,
particularly for correct rendering of non-English text on OSX, and
Arabic/Indic scripts on any platform)&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;FFmpeg dependencies (when building FFmpeg):&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;gcc or clang, yasm on x86 and x86_64&lt;/li&gt;
&lt;li&gt;OpenSSL or GnuTLS (have to be explicitly enabled when compiling FFmpeg)&lt;/li&gt;
&lt;li&gt;libx264/libmp3lame/libfdk-aac if you want to use encoding (have to be
explicitly enabled when compiling FFmpeg)&lt;/li&gt;
&lt;li&gt;For native DASH playback, FFmpeg needs to be built with --enable-libxml2
(although there are security implications, and DASH support has lots of bugs).&lt;/li&gt;
&lt;li&gt;AV1 decoding support requires dav1d.&lt;/li&gt;
&lt;li&gt;For good nvidia support on Linux, make sure nv-codec-headers is installed
and can be found by configure.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Most of the above libraries are available in suitable versions on normal
Linux distributions. For ease of compiling the latest git master of everything,
you may wish to use the separately available build wrapper (&lt;a href="https://github.com/mpv-player/mpv-build"&gt;mpv-build&lt;/a&gt;)
which first compiles FFmpeg libraries and libass, and then compiles the player
statically linked against those.&lt;/p&gt;
&lt;p&gt;If you want to build a Windows binary, you either have to use MSYS2 and MinGW,
or cross-compile from Linux with MinGW. See
&lt;a href="https://github.com/mpv-player/mpv/blob/master/DOCS/compile-windows.md"&gt;Windows compilation&lt;/a&gt;.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-release-cycle" class="anchor" aria-hidden="true" href="#release-cycle"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Release cycle&lt;/h2&gt;
&lt;p&gt;Every other month, an arbitrary git snapshot is made, and is assigned
a 0.X.0 version number. No further maintenance is done.&lt;/p&gt;
&lt;p&gt;The goal of releases is to make Linux distributions happy. Linux distributions
are also expected to apply their own patches in case of bugs and security
issues.&lt;/p&gt;
&lt;p&gt;Releases other than the latest release are unsupported and unmaintained.&lt;/p&gt;
&lt;p&gt;See the &lt;a href="https://github.com/mpv-player/mpv/blob/master/DOCS/release-policy.md"&gt;release policy document&lt;/a&gt; for more information.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-bug-reports" class="anchor" aria-hidden="true" href="#bug-reports"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Bug reports&lt;/h2&gt;
&lt;p&gt;Please use the &lt;a href="https://github.com/mpv-player/mpv/issues"&gt;issue tracker&lt;/a&gt; provided by GitHub to send us bug
reports or feature requests. Follow the template's instructions or the issue
will likely be ignored or closed as invalid.&lt;/p&gt;
&lt;p&gt;Using the bug tracker as place for simple questions is fine but IRC is
recommended (see &lt;a href="#Contact"&gt;Contact&lt;/a&gt; below).&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-contributing" class="anchor" aria-hidden="true" href="#contributing"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Contributing&lt;/h2&gt;
&lt;p&gt;Please read &lt;a href="https://github.com/mpv-player/mpv/blob/master/DOCS/contribute.md"&gt;contribute.md&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;For small changes you can just send us pull requests through GitHub. For bigger
changes come and talk to us on IRC before you start working on them. It will
make code review easier for both parties later on.&lt;/p&gt;
&lt;p&gt;You can check &lt;a href="https://github.com/mpv-player/mpv/wiki/Stuff-to-do"&gt;the wiki&lt;/a&gt;
or the &lt;a href="https://github.com/mpv-player/mpv/issues?q=is%3Aopen+is%3Aissue+label%3A%22feature+request%22"&gt;issue tracker&lt;/a&gt;
for ideas on what you could contribute with.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-license" class="anchor" aria-hidden="true" href="#license"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;License&lt;/h2&gt;
&lt;p&gt;GPLv2 "or later" by default, LGPLv2.1 "or later" with &lt;code&gt;--enable-lgpl&lt;/code&gt;.
See &lt;a href="https://github.com/mpv-player/mpv/blob/master/Copyright"&gt;details.&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-history" class="anchor" aria-hidden="true" href="#history"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;History&lt;/h2&gt;
&lt;p&gt;This software is based on the MPlayer project. Before mpv existed as a project,
the code base was briefly developed under the mplayer2 project. For details,
see the &lt;a href="https://github.com/mpv-player/mpv/wiki/FAQ"&gt;FAQ&lt;/a&gt;.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-contact" class="anchor" aria-hidden="true" href="#contact"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Contact&lt;/h2&gt;
&lt;p&gt;Most activity happens on the IRC channel and the github issue tracker.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;GitHub issue tracker&lt;/strong&gt;: &lt;a href="https://github.com/mpv-player/mpv/issues"&gt;issue tracker&lt;/a&gt; (report bugs here)&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;User IRC Channel&lt;/strong&gt;: &lt;code&gt;#mpv&lt;/code&gt; on &lt;code&gt;irc.freenode.net&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Developer IRC Channel&lt;/strong&gt;: &lt;code&gt;#mpv-devel&lt;/code&gt; on &lt;code&gt;irc.freenode.net&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/article&gt;&lt;/div&gt;</description><author>mpv-player</author><guid isPermaLink="false">https://github.com/mpv-player/mpv</guid><pubDate>Fri, 20 Dec 2019 00:06:00 GMT</pubDate></item><item><title>qmk/qmk_firmware #7 in C, This week</title><link>https://github.com/qmk/qmk_firmware</link><description>&lt;p&gt;&lt;i&gt;Open-source keyboard firmware for Atmel AVR and Arm USB families&lt;/i&gt;&lt;/p&gt;&lt;div id="readme" class="md" data-path="readme.md"&gt;&lt;article class="markdown-body entry-content p-5" itemprop="text"&gt;&lt;h1&gt;&lt;a id="user-content-quantum-mechanical-keyboard-firmware" class="anchor" aria-hidden="true" href="#quantum-mechanical-keyboard-firmware"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Quantum Mechanical Keyboard Firmware&lt;/h1&gt;
&lt;p&gt;&lt;a href="https://github.com/qmk/qmk_firmware/tags"&gt;&lt;img src="https://camo.githubusercontent.com/005a8cc5adfcc19206d618115380a09cb3314d22/68747470733a2f2f696d672e736869656c64732e696f2f6769746875622f7461672f716d6b2f716d6b5f6669726d776172652e737667" alt="Current Version" data-canonical-src="https://img.shields.io/github/tag/qmk/qmk_firmware.svg" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://travis-ci.org/qmk/qmk_firmware" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/4147250bb924409bf797c2744c1d826a25e079c2/68747470733a2f2f7472617669732d63692e6f72672f716d6b2f716d6b5f6669726d776172652e7376673f6272616e63683d6d6173746572" alt="Build Status" data-canonical-src="https://travis-ci.org/qmk/qmk_firmware.svg?branch=master" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://discord.gg/Uq7gcHh" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/e83c9cf50c33b3ed75d93292d04e936fe12a764f/68747470733a2f2f696d672e736869656c64732e696f2f646973636f72642f3434303836383233303437353637373639362e737667" alt="Discord" data-canonical-src="https://img.shields.io/discord/440868230475677696.svg" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://docs.qmk.fm" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/9f9a5acb55cfde5f5ec8d5c8fce65d87936e78b5/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f646f63732d72656164792d6f72616e67652e737667" alt="Docs Status" data-canonical-src="https://img.shields.io/badge/docs-ready-orange.svg" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://github.com/qmk/qmk_firmware/pulse/monthly"&gt;&lt;img src="https://camo.githubusercontent.com/d673a6b1f5c8471666f790b34e5692e2f40758ca/68747470733a2f2f696d672e736869656c64732e696f2f6769746875622f636f6e7472696275746f72732f716d6b2f716d6b5f6669726d776172652e737667" alt="GitHub contributors" data-canonical-src="https://img.shields.io/github/contributors/qmk/qmk_firmware.svg" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://github.com/qmk/qmk_firmware/"&gt;&lt;img src="https://camo.githubusercontent.com/ce360857e992e3080431dd31c3b30d73e78d7ce0/68747470733a2f2f696d672e736869656c64732e696f2f6769746875622f666f726b732f716d6b2f716d6b5f6669726d776172652e7376673f7374796c653d736f6369616c266c6162656c3d466f726b" alt="GitHub forks" data-canonical-src="https://img.shields.io/github/forks/qmk/qmk_firmware.svg?style=social&amp;amp;label=Fork" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;This is a keyboard firmware based on the &lt;a href="https://github.com/tmk/tmk_keyboard"&gt;tmk_keyboard firmware&lt;/a&gt; with some useful features for Atmel AVR and ARM controllers, and more specifically, the &lt;a href="https://olkb.com" rel="nofollow"&gt;OLKB product line&lt;/a&gt;, the &lt;a href="https://ergodox-ez.com" rel="nofollow"&gt;ErgoDox EZ&lt;/a&gt; keyboard, and the &lt;a href="https://clueboard.co" rel="nofollow"&gt;Clueboard product line&lt;/a&gt;.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-documentation" class="anchor" aria-hidden="true" href="#documentation"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Documentation&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://docs.qmk.fm" rel="nofollow"&gt;See the official documentation on docs.qmk.fm&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;The docs are powered by &lt;a href="https://docsify.js.org/" rel="nofollow"&gt;Docsify&lt;/a&gt; and hosted on &lt;a href="/docs/"&gt;GitHub&lt;/a&gt;. They are also viewable offline; see &lt;a href="https://docs.qmk.fm/#/contributing?id=previewing-the-documentation" rel="nofollow"&gt;Previewing the Documentation&lt;/a&gt; for more details.&lt;/p&gt;
&lt;p&gt;You can request changes by making a fork and opening a &lt;a href="https://github.com/qmk/qmk_firmware/pulls"&gt;pull request&lt;/a&gt;, or by clicking the "Edit this page" link at the bottom of any page.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-supported-keyboards" class="anchor" aria-hidden="true" href="#supported-keyboards"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Supported Keyboards&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="/keyboards/planck/"&gt;Planck&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="/keyboards/preonic/"&gt;Preonic&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="/keyboards/ergodox_ez/"&gt;ErgoDox EZ&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="/keyboards/clueboard/"&gt;Clueboard&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="/keyboards/clueboard/17/"&gt;Cluepad&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="/keyboards/atreus/"&gt;Atreus&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;The project also includes community support for &lt;a href="/keyboards/"&gt;lots of other keyboards&lt;/a&gt;.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-maintainers" class="anchor" aria-hidden="true" href="#maintainers"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Maintainers&lt;/h2&gt;
&lt;p&gt;QMK is developed and maintained by Jack Humbert of OLKB with contributions from the community, and of course, &lt;a href="https://github.com/tmk"&gt;Hasu&lt;/a&gt;. The OLKB product firmwares are maintained by &lt;a href="https://github.com/jackhumbert"&gt;Jack Humbert&lt;/a&gt;, the Ergodox EZ by &lt;a href="https://github.com/zsa"&gt;ZSA Technology Labs&lt;/a&gt;, the Clueboard by &lt;a href="https://github.com/skullydazed"&gt;Zach White&lt;/a&gt;, and the Atreus by &lt;a href="https://github.com/technomancy"&gt;Phil Hagelberg&lt;/a&gt;.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-official-website" class="anchor" aria-hidden="true" href="#official-website"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Official Website&lt;/h2&gt;
&lt;p&gt;&lt;a href="https://qmk.fm" rel="nofollow"&gt;qmk.fm&lt;/a&gt; is the official website of QMK, where you can find links to this page, the documentation, and the keyboards supported by QMK.&lt;/p&gt;
&lt;/article&gt;&lt;/div&gt;</description><author>qmk</author><guid isPermaLink="false">https://github.com/qmk/qmk_firmware</guid><pubDate>Fri, 20 Dec 2019 00:07:00 GMT</pubDate></item><item><title>espressif/esp-idf #8 in C, This week</title><link>https://github.com/espressif/esp-idf</link><description>&lt;p&gt;&lt;i&gt;Espressif IoT Development Framework. Official development framework for ESP32.&lt;/i&gt;&lt;/p&gt;&lt;div id="readme" class="md" data-path="README.md"&gt;&lt;article class="markdown-body entry-content p-5" itemprop="text"&gt;&lt;h1&gt;&lt;a id="user-content-espressif-iot-development-framework" class="anchor" aria-hidden="true" href="#espressif-iot-development-framework"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Espressif IoT Development Framework&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="./README_CN.md"&gt;中文版&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;a href="https://docs.espressif.com/projects/esp-idf/en/latest/?badge=latest" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/1af20a2147d12aca36403d0181d88e229da2640f/68747470733a2f2f72656164746865646f63732e636f6d2f70726f6a656374732f6573707265737369662d6573702d6964662f62616467652f3f76657273696f6e3d6c6174657374" alt="Documentation Status" data-canonical-src="https://readthedocs.com/projects/espressif-esp-idf/badge/?version=latest" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;ESP-IDF is the official development framework for the &lt;a href="https://espressif.com/en/products/hardware/esp32/overview" rel="nofollow"&gt;ESP32&lt;/a&gt; chip.&lt;/p&gt;
&lt;h1&gt;&lt;a id="user-content-developing-with-esp-idf" class="anchor" aria-hidden="true" href="#developing-with-esp-idf"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Developing With ESP-IDF&lt;/h1&gt;
&lt;h2&gt;&lt;a id="user-content-setting-up-esp-idf" class="anchor" aria-hidden="true" href="#setting-up-esp-idf"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Setting Up ESP-IDF&lt;/h2&gt;
&lt;p&gt;See setup guides for detailed instructions to set up the ESP-IDF:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://docs.espressif.com/projects/esp-idf/en/stable/get-started/" rel="nofollow"&gt;Getting Started Guide for the stable ESP-IDF version&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://docs.espressif.com/projects/esp-idf/en/latest/get-started/" rel="nofollow"&gt;Getting Started Guide for the latest (master branch) ESP-IDF version&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;&lt;a id="user-content-non-github-forks" class="anchor" aria-hidden="true" href="#non-github-forks"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Non-GitHub forks&lt;/h3&gt;
&lt;p&gt;ESP-IDF uses relative locations as its submodules URLs (&lt;a href=".gitmodules"&gt;.gitmodules&lt;/a&gt;). So they link to GitHub.
If ESP-IDF is forked to a Git repository which is not on GitHub, you will need to run the script
&lt;a href="tools/set-submodules-to-github.sh"&gt;tools/set-submodules-to-github.sh&lt;/a&gt; after git clone.
The script sets absolute URLs for all submodules, allowing &lt;code&gt;git submodule update --init --recursive&lt;/code&gt; to complete.
If cloning ESP-IDF from GitHub, this step is not needed.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-finding-a-project" class="anchor" aria-hidden="true" href="#finding-a-project"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Finding a Project&lt;/h2&gt;
&lt;p&gt;As well as the &lt;a href="https://github.com/espressif/esp-idf-template"&gt;esp-idf-template&lt;/a&gt; project mentioned in Getting Started, ESP-IDF comes with some example projects in the &lt;a href="examples"&gt;examples&lt;/a&gt; directory.&lt;/p&gt;
&lt;p&gt;Once you've found the project you want to work with, change to its directory and you can configure and build it.&lt;/p&gt;
&lt;p&gt;To start your own project based on an example, copy the example project directory outside of the ESP-IDF directory.&lt;/p&gt;
&lt;h1&gt;&lt;a id="user-content-quick-reference" class="anchor" aria-hidden="true" href="#quick-reference"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Quick Reference&lt;/h1&gt;
&lt;p&gt;See the Getting Started guide links above for a detailed setup guide. This is a quick reference for common commands when working with ESP-IDF projects:&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-setup-build-environment" class="anchor" aria-hidden="true" href="#setup-build-environment"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Setup Build Environment&lt;/h2&gt;
&lt;p&gt;(See Getting Started guide for a full list of required steps with details.)&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Install host build dependencies mentioned in Getting Started guide.&lt;/li&gt;
&lt;li&gt;Add &lt;code&gt;tools/&lt;/code&gt; directory to the PATH&lt;/li&gt;
&lt;li&gt;Run &lt;code&gt;python -m pip install -r requirements.txt&lt;/code&gt; to install Python dependencies&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-configuring-the-project" class="anchor" aria-hidden="true" href="#configuring-the-project"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Configuring the Project&lt;/h2&gt;
&lt;p&gt;&lt;code&gt;idf.py menuconfig&lt;/code&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Opens a text-based configuration menu for the project.&lt;/li&gt;
&lt;li&gt;Use up &amp;amp; down arrow keys to navigate the menu.&lt;/li&gt;
&lt;li&gt;Use Enter key to go into a submenu, Escape key to go out or to exit.&lt;/li&gt;
&lt;li&gt;Type &lt;code&gt;?&lt;/code&gt; to see a help screen. Enter key exits the help screen.&lt;/li&gt;
&lt;li&gt;Use Space key, or &lt;code&gt;Y&lt;/code&gt; and &lt;code&gt;N&lt;/code&gt; keys to enable (Yes) and disable (No) configuration items with checkboxes "&lt;code&gt;[*]&lt;/code&gt;"&lt;/li&gt;
&lt;li&gt;Pressing &lt;code&gt;?&lt;/code&gt; while highlighting a configuration item displays help about that item.&lt;/li&gt;
&lt;li&gt;Type &lt;code&gt;/&lt;/code&gt; to search the configuration items.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Once done configuring, press Escape multiple times to exit and say "Yes" to save the new configuration when prompted.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-compiling-the-project" class="anchor" aria-hidden="true" href="#compiling-the-project"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Compiling the Project&lt;/h2&gt;
&lt;p&gt;&lt;code&gt;idf.py build&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;... will compile app, bootloader and generate a partition table based on the config.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-flashing-the-project" class="anchor" aria-hidden="true" href="#flashing-the-project"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Flashing the Project&lt;/h2&gt;
&lt;p&gt;When the build finishes, it will print a command line to use esptool.py to flash the chip. However you can also do this automatically by running:&lt;/p&gt;
&lt;p&gt;&lt;code&gt;idf.py -p PORT flash&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Replace PORT with the name of your serial port (like &lt;code&gt;COM3&lt;/code&gt; on Windows, &lt;code&gt;/dev/ttyUSB0&lt;/code&gt; on Linux, or &lt;code&gt;/dev/cu.usbserial-X&lt;/code&gt; on MacOS. If the &lt;code&gt;-p&lt;/code&gt; option is left out, &lt;code&gt;idf.py flash&lt;/code&gt; will try to flash the first available serial port.&lt;/p&gt;
&lt;p&gt;This will flash the entire project (app, bootloader and partition table) to a new chip. The settings for serial port flashing can be configured with &lt;code&gt;idf.py menuconfig&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;You don't need to run &lt;code&gt;idf.py build&lt;/code&gt; before running &lt;code&gt;idf.py flash&lt;/code&gt;, &lt;code&gt;idf.py flash&lt;/code&gt; will automatically rebuild anything which needs it.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-viewing-serial-output" class="anchor" aria-hidden="true" href="#viewing-serial-output"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Viewing Serial Output&lt;/h2&gt;
&lt;p&gt;The &lt;code&gt;idf.py monitor&lt;/code&gt; target uses the &lt;a href="https://docs.espressif.com/projects/esp-idf/en/latest/get-started/idf-monitor.html" rel="nofollow"&gt;idf_monitor tool&lt;/a&gt; to display serial output from the ESP32. idf_monitor also has a range of features to decode crash output and interact with the device. &lt;a href="https://docs.espressif.com/projects/esp-idf/en/latest/get-started/idf-monitor.html" rel="nofollow"&gt;Check the documentation page for details&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Exit the monitor by typing Ctrl-].&lt;/p&gt;
&lt;p&gt;To build, flash and monitor output in one pass, you can run:&lt;/p&gt;
&lt;p&gt;&lt;code&gt;idf.py flash monitor&lt;/code&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-compiling--flashing-only-the-app" class="anchor" aria-hidden="true" href="#compiling--flashing-only-the-app"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Compiling &amp;amp; Flashing Only the App&lt;/h2&gt;
&lt;p&gt;After the initial flash, you may just want to build and flash just your app, not the bootloader and partition table:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;idf.py app&lt;/code&gt; - build just the app.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;idf.py app-flash&lt;/code&gt; - flash just the app.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;code&gt;idf.py app-flash&lt;/code&gt; will automatically rebuild the app if any source files have changed.&lt;/p&gt;
&lt;p&gt;(In normal development there's no downside to reflashing the bootloader and partition table each time, if they haven't changed.)&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-erasing-flash" class="anchor" aria-hidden="true" href="#erasing-flash"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Erasing Flash&lt;/h2&gt;
&lt;p&gt;The &lt;code&gt;idf.py flash&lt;/code&gt; target does not erase the entire flash contents. However it is sometimes useful to set the device back to a totally erased state, particularly when making partition table changes or OTA app updates. To erase the entire flash, run &lt;code&gt;idf.py erase_flash&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;This can be combined with other targets, ie &lt;code&gt;idf.py -p PORT erase_flash flash&lt;/code&gt; will erase everything and then re-flash the new app, bootloader and partition table.&lt;/p&gt;
&lt;h1&gt;&lt;a id="user-content-resources" class="anchor" aria-hidden="true" href="#resources"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Resources&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Documentation for the latest version: &lt;a href="https://docs.espressif.com/projects/esp-idf/" rel="nofollow"&gt;https://docs.espressif.com/projects/esp-idf/&lt;/a&gt;. This documentation is built from the &lt;a href="docs"&gt;docs directory&lt;/a&gt; of this repository.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;The &lt;a href="https://esp32.com/" rel="nofollow"&gt;esp32.com forum&lt;/a&gt; is a place to ask questions and find community resources.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="https://github.com/espressif/esp-idf/issues"&gt;Check the Issues section on github&lt;/a&gt; if you find a bug or have a feature request. Please check existing Issues before opening a new one.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;If you're interested in contributing to ESP-IDF, please check the &lt;a href="https://docs.espressif.com/projects/esp-idf/en/latest/contribute/index.html" rel="nofollow"&gt;Contributions Guide&lt;/a&gt;.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/article&gt;&lt;/div&gt;</description><author>espressif</author><guid isPermaLink="false">https://github.com/espressif/esp-idf</guid><pubDate>Fri, 20 Dec 2019 00:08:00 GMT</pubDate></item><item><title>pjreddie/darknet #9 in C, This week</title><link>https://github.com/pjreddie/darknet</link><description>&lt;p&gt;&lt;i&gt;Convolutional Neural Networks&lt;/i&gt;&lt;/p&gt;&lt;div id="readme" class="md" data-path="README.md"&gt;&lt;article class="markdown-body entry-content p-5" itemprop="text"&gt;&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="https://camo.githubusercontent.com/e69d4118b20a42de4e23b9549f9a6ec6dbbb0814/687474703a2f2f706a7265646469652e636f6d2f6d656469612f66696c65732f6461726b6e65742d626c61636b2d736d616c6c2e706e67"&gt;&lt;img src="https://camo.githubusercontent.com/e69d4118b20a42de4e23b9549f9a6ec6dbbb0814/687474703a2f2f706a7265646469652e636f6d2f6d656469612f66696c65732f6461726b6e65742d626c61636b2d736d616c6c2e706e67" alt="Darknet Logo" data-canonical-src="http://pjreddie.com/media/files/darknet-black-small.png" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h1&gt;&lt;a id="user-content-darknet" class="anchor" aria-hidden="true" href="#darknet"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Darknet&lt;/h1&gt;
&lt;p&gt;Darknet is an open source neural network framework written in C and CUDA. It is fast, easy to install, and supports CPU and GPU computation.&lt;/p&gt;
&lt;p&gt;For more information see the &lt;a href="http://pjreddie.com/darknet" rel="nofollow"&gt;Darknet project website&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;For questions or issues please use the &lt;a href="https://groups.google.com/forum/#!forum/darknet" rel="nofollow"&gt;Google Group&lt;/a&gt;.&lt;/p&gt;
&lt;/article&gt;&lt;/div&gt;</description><author>pjreddie</author><guid isPermaLink="false">https://github.com/pjreddie/darknet</guid><pubDate>Fri, 20 Dec 2019 00:09:00 GMT</pubDate></item><item><title>openresty/lua-nginx-module #10 in C, This week</title><link>https://github.com/openresty/lua-nginx-module</link><description>&lt;p&gt;&lt;i&gt;Embed the Power of Lua into NGINX HTTP servers&lt;/i&gt;&lt;/p&gt;&lt;div id="readme" class="markdown" data-path="README.markdown"&gt;&lt;article class="markdown-body entry-content p-5" itemprop="text"&gt;
&lt;h1&gt;&lt;a id="user-content-name" class="anchor" aria-hidden="true" href="#name"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Name&lt;/h1&gt;
&lt;p&gt;ngx_http_lua_module - Embed the power of Lua into Nginx HTTP Servers.&lt;/p&gt;
&lt;p&gt;This module is a core component of &lt;a href="https://openresty.org" rel="nofollow"&gt;OpenResty&lt;/a&gt;. If you are using this module,
then you are essentially using OpenResty.&lt;/p&gt;
&lt;p&gt;&lt;em&gt;This module is not distributed with the Nginx source.&lt;/em&gt; See
&lt;a href="#installation"&gt;the installation instructions&lt;/a&gt;.&lt;/p&gt;
&lt;h1&gt;&lt;a id="user-content-table-of-contents" class="anchor" aria-hidden="true" href="#table-of-contents"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Table of Contents&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="#name"&gt;Name&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#status"&gt;Status&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#version"&gt;Version&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#synopsis"&gt;Synopsis&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#description"&gt;Description&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#typical-uses"&gt;Typical Uses&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#nginx-compatibility"&gt;Nginx Compatibility&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#installation"&gt;Installation&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="#building-as-a-dynamic-module"&gt;Building as a dynamic module&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#c-macro-configurations"&gt;C Macro Configurations&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="#community"&gt;Community&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="#english-mailing-list"&gt;English Mailing List&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#chinese-mailing-list"&gt;Chinese Mailing List&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="#code-repository"&gt;Code Repository&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#bugs-and-patches"&gt;Bugs and Patches&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#luajit-bytecode-support"&gt;LuaJIT bytecode support&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#system-environment-variable-support"&gt;System Environment Variable Support&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#http-10-support"&gt;HTTP 1.0 support&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#statically-linking-pure-lua-modules"&gt;Statically Linking Pure Lua Modules&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#data-sharing-within-an-nginx-worker"&gt;Data Sharing within an Nginx Worker&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#known-issues"&gt;Known Issues&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="#tcp-socket-connect-operation-issues"&gt;TCP socket connect operation issues&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#lua-coroutine-yieldingresuming"&gt;Lua Coroutine Yielding/Resuming&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#lua-variable-scope"&gt;Lua Variable Scope&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#locations-configured-by-subrequest-directives-of-other-modules"&gt;Locations Configured by Subrequest Directives of Other Modules&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#cosockets-not-available-everywhere"&gt;Cosockets Not Available Everywhere&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#special-escaping-sequences"&gt;Special Escaping Sequences&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#mixing-with-ssi-not-supported"&gt;Mixing with SSI Not Supported&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#spdy-mode-not-fully-supported"&gt;SPDY Mode Not Fully Supported&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#missing-data-on-short-circuited-requests"&gt;Missing data on short circuited requests&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="#todo"&gt;TODO&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#changes"&gt;Changes&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#test-suite"&gt;Test Suite&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#copyright-and-license"&gt;Copyright and License&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#see-also"&gt;See Also&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#directives"&gt;Directives&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#nginx-api-for-lua"&gt;Nginx API for Lua&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#obsolete-sections"&gt;Obsolete Sections&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="#special-pcre-sequences"&gt;Special PCRE Sequences&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#lualuajit-bytecode-support"&gt;Lua/LuaJIT bytecode support&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h1&gt;&lt;a id="user-content-status" class="anchor" aria-hidden="true" href="#status"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Status&lt;/h1&gt;
&lt;p&gt;Production ready.&lt;/p&gt;
&lt;h1&gt;&lt;a id="user-content-version" class="anchor" aria-hidden="true" href="#version"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Version&lt;/h1&gt;
&lt;p&gt;This document describes ngx_lua
&lt;a href="https://github.com/openresty/lua-nginx-module/tags"&gt;v0.10.16&lt;/a&gt;, which is not
released yet.&lt;/p&gt;
&lt;h1&gt;&lt;a id="user-content-synopsis" class="anchor" aria-hidden="true" href="#synopsis"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Synopsis&lt;/h1&gt;
&lt;div class="highlight highlight-source-nginx"&gt;&lt;pre&gt; &lt;span class="pl-c"&gt;# set search paths for pure Lua external libraries (';;' is the default path):&lt;/span&gt;
 &lt;span class="pl-k"&gt;lua_package_path&lt;/span&gt; &lt;span class="pl-s"&gt;'/foo/bar/?.lua;/blah/?.lua;;'&lt;/span&gt;;

 &lt;span class="pl-c"&gt;# set search paths for Lua external libraries written in C (can also use ';;'):&lt;/span&gt;
 &lt;span class="pl-k"&gt;lua_package_cpath&lt;/span&gt; &lt;span class="pl-s"&gt;'/bar/baz/?.so;/blah/blah/?.so;;'&lt;/span&gt;;

 &lt;span class="pl-k"&gt;server&lt;/span&gt; {
     &lt;span class="pl-k"&gt;location&lt;/span&gt; &lt;span class="pl-en"&gt;/lua_content &lt;/span&gt;{
         &lt;span class="pl-c"&gt;# MIME type determined by default_type:&lt;/span&gt;
         &lt;span class="pl-k"&gt;default_type&lt;/span&gt; &lt;span class="pl-s"&gt;'text/plain'&lt;/span&gt;;

         &lt;span class="pl-k"&gt;content_by_lua_block&lt;/span&gt; {
             ngx.say('Hello,world!')
         }
     }

     &lt;span class="pl-k"&gt;location&lt;/span&gt; &lt;span class="pl-en"&gt;/nginx_var &lt;/span&gt;{
         &lt;span class="pl-c"&gt;# MIME type determined by default_type:&lt;/span&gt;
         &lt;span class="pl-k"&gt;default_type&lt;/span&gt; &lt;span class="pl-s"&gt;'text/plain'&lt;/span&gt;;

         &lt;span class="pl-c"&gt;# try access /nginx_var?a=hello,world&lt;/span&gt;
         &lt;span class="pl-k"&gt;content_by_lua_block&lt;/span&gt; {
             ngx.say(ngx.var.arg_a)
         }
     }

     &lt;span class="pl-k"&gt;location&lt;/span&gt; &lt;span class="pl-en"&gt;= /request_body &lt;/span&gt;{
         &lt;span class="pl-k"&gt;client_max_body_size&lt;/span&gt; &lt;span class="pl-c1"&gt;50k&lt;/span&gt;;
         &lt;span class="pl-k"&gt;client_body_buffer_size&lt;/span&gt; &lt;span class="pl-c1"&gt;50k&lt;/span&gt;;

         &lt;span class="pl-k"&gt;content_by_lua_block&lt;/span&gt; {
             ngx.req.read_body()  -- &lt;span class="pl-k"&gt;explicitly&lt;/span&gt; read the req body
             &lt;span class="pl-k"&gt;local&lt;/span&gt; data = ngx.req.get_body_data()
             &lt;span class="pl-k"&gt;if&lt;/span&gt; data then
                 ngx.say("&lt;span class="pl-k"&gt;body&lt;/span&gt; data:&lt;span class="pl-s"&gt;")&lt;/span&gt;
&lt;span class="pl-s"&gt;                 ngx.print(data)&lt;/span&gt;
&lt;span class="pl-s"&gt;                 return&lt;/span&gt;
&lt;span class="pl-s"&gt;             end&lt;/span&gt;
&lt;span class="pl-s"&gt;&lt;/span&gt;
&lt;span class="pl-s"&gt;             -- body may get buffered in a temp file:&lt;/span&gt;
&lt;span class="pl-s"&gt;             local file = ngx.req.get_body_file()&lt;/span&gt;
&lt;span class="pl-s"&gt;             if file then&lt;/span&gt;
&lt;span class="pl-s"&gt;                 ngx.say("&lt;/span&gt;body is in file &lt;span class="pl-s"&gt;", file)&lt;/span&gt;
&lt;span class="pl-s"&gt;             else&lt;/span&gt;
&lt;span class="pl-s"&gt;                 ngx.say("&lt;/span&gt;no body found&lt;span class="pl-s"&gt;")&lt;/span&gt;
&lt;span class="pl-s"&gt;             end&lt;/span&gt;
&lt;span class="pl-s"&gt;         }&lt;/span&gt;
&lt;span class="pl-s"&gt;     }&lt;/span&gt;
&lt;span class="pl-s"&gt;&lt;/span&gt;
&lt;span class="pl-s"&gt;     # transparent non-blocking I/O in Lua via subrequests&lt;/span&gt;
&lt;span class="pl-s"&gt;     # (well, a better way is to use cosockets)&lt;/span&gt;
&lt;span class="pl-s"&gt;     location = /lua {&lt;/span&gt;
&lt;span class="pl-s"&gt;         # MIME type determined by default_type:&lt;/span&gt;
&lt;span class="pl-s"&gt;         default_type 'text/plain';&lt;/span&gt;
&lt;span class="pl-s"&gt;&lt;/span&gt;
&lt;span class="pl-s"&gt;         content_by_lua_block {&lt;/span&gt;
&lt;span class="pl-s"&gt;             local res = ngx.location.capture("&lt;/span&gt;/some_other_location&lt;span class="pl-s"&gt;")&lt;/span&gt;
&lt;span class="pl-s"&gt;             if res then&lt;/span&gt;
&lt;span class="pl-s"&gt;                 ngx.say("&lt;/span&gt;status: &lt;span class="pl-s"&gt;", res.status)&lt;/span&gt;
&lt;span class="pl-s"&gt;                 ngx.say("&lt;/span&gt;body:&lt;span class="pl-s"&gt;")&lt;/span&gt;
&lt;span class="pl-s"&gt;                 ngx.print(res.body)&lt;/span&gt;
&lt;span class="pl-s"&gt;             end&lt;/span&gt;
&lt;span class="pl-s"&gt;         }&lt;/span&gt;
&lt;span class="pl-s"&gt;     }&lt;/span&gt;
&lt;span class="pl-s"&gt;&lt;/span&gt;
&lt;span class="pl-s"&gt;     location = /foo {&lt;/span&gt;
&lt;span class="pl-s"&gt;         rewrite_by_lua_block {&lt;/span&gt;
&lt;span class="pl-s"&gt;             res = ngx.location.capture("&lt;/span&gt;/memc&lt;span class="pl-s"&gt;",&lt;/span&gt;
&lt;span class="pl-s"&gt;                 { args = { cmd = "&lt;/span&gt;incr&lt;span class="pl-s"&gt;", key = ngx.var.uri } }&lt;/span&gt;
&lt;span class="pl-s"&gt;             )&lt;/span&gt;
&lt;span class="pl-s"&gt;         }&lt;/span&gt;
&lt;span class="pl-s"&gt;&lt;/span&gt;
&lt;span class="pl-s"&gt;         proxy_pass http://blah.blah.com;&lt;/span&gt;
&lt;span class="pl-s"&gt;     }&lt;/span&gt;
&lt;span class="pl-s"&gt;&lt;/span&gt;
&lt;span class="pl-s"&gt;     location = /mixed {&lt;/span&gt;
&lt;span class="pl-s"&gt;         rewrite_by_lua_file /path/to/rewrite.lua;&lt;/span&gt;
&lt;span class="pl-s"&gt;         access_by_lua_file /path/to/access.lua;&lt;/span&gt;
&lt;span class="pl-s"&gt;         content_by_lua_file /path/to/content.lua;&lt;/span&gt;
&lt;span class="pl-s"&gt;     }&lt;/span&gt;
&lt;span class="pl-s"&gt;&lt;/span&gt;
&lt;span class="pl-s"&gt;     # use nginx var in code path&lt;/span&gt;
&lt;span class="pl-s"&gt;     # CAUTION: contents in nginx var must be carefully filtered,&lt;/span&gt;
&lt;span class="pl-s"&gt;     # otherwise there'll be great security risk!&lt;/span&gt;
&lt;span class="pl-s"&gt;     location ~ ^/app/([-_a-zA-Z0-9/]+) {&lt;/span&gt;
&lt;span class="pl-s"&gt;         set &lt;span class="pl-smi"&gt;$path&lt;/span&gt; &lt;span class="pl-smi"&gt;$1&lt;/span&gt;;&lt;/span&gt;
&lt;span class="pl-s"&gt;         content_by_lua_file /path/to/lua/app/root/&lt;span class="pl-smi"&gt;$path&lt;/span&gt;.lua;&lt;/span&gt;
&lt;span class="pl-s"&gt;     }&lt;/span&gt;
&lt;span class="pl-s"&gt;&lt;/span&gt;
&lt;span class="pl-s"&gt;     location / {&lt;/span&gt;
&lt;span class="pl-s"&gt;        client_max_body_size 100k;&lt;/span&gt;
&lt;span class="pl-s"&gt;        client_body_buffer_size 100k;&lt;/span&gt;
&lt;span class="pl-s"&gt;&lt;/span&gt;
&lt;span class="pl-s"&gt;        access_by_lua_block {&lt;/span&gt;
&lt;span class="pl-s"&gt;            -- check the client IP address is in our black list&lt;/span&gt;
&lt;span class="pl-s"&gt;            if ngx.var.remote_addr == "&lt;/span&gt;132.5.72.3&lt;span class="pl-s"&gt;" then&lt;/span&gt;
&lt;span class="pl-s"&gt;                ngx.exit(ngx.HTTP_FORBIDDEN)&lt;/span&gt;
&lt;span class="pl-s"&gt;            end&lt;/span&gt;
&lt;span class="pl-s"&gt;&lt;/span&gt;
&lt;span class="pl-s"&gt;            -- check if the URI contains bad words&lt;/span&gt;
&lt;span class="pl-s"&gt;            if ngx.var.uri and&lt;/span&gt;
&lt;span class="pl-s"&gt;                   string.match(ngx.var.request_body, "&lt;/span&gt;evil&lt;span class="pl-s"&gt;")&lt;/span&gt;
&lt;span class="pl-s"&gt;            then&lt;/span&gt;
&lt;span class="pl-s"&gt;                return ngx.redirect("&lt;/span&gt;/terms_of_use.html&lt;span class="pl-s"&gt;")&lt;/span&gt;
&lt;span class="pl-s"&gt;            end&lt;/span&gt;
&lt;span class="pl-s"&gt;&lt;/span&gt;
&lt;span class="pl-s"&gt;            -- tests passed&lt;/span&gt;
&lt;span class="pl-s"&gt;        }&lt;/span&gt;
&lt;span class="pl-s"&gt;&lt;/span&gt;
&lt;span class="pl-s"&gt;        # proxy_pass/fastcgi_pass/etc settings&lt;/span&gt;
&lt;span class="pl-s"&gt;     }&lt;/span&gt;
&lt;span class="pl-s"&gt; }&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;a href="#table-of-contents"&gt;Back to TOC&lt;/a&gt;&lt;/p&gt;
&lt;h1&gt;&lt;a id="user-content-description" class="anchor" aria-hidden="true" href="#description"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Description&lt;/h1&gt;
&lt;p&gt;This module embeds &lt;a href="https://luajit.org/luajit.html" rel="nofollow"&gt;LuaJIT 2.0/2.1&lt;/a&gt; into Nginx.
It is a core component of &lt;a href="https://openresty.org" rel="nofollow"&gt;OpenResty&lt;/a&gt;. If you are using
this module, then you are essentially using OpenResty.&lt;/p&gt;
&lt;p&gt;Since version &lt;code&gt;v0.10.16&lt;/code&gt; of this module, the standard Lua
interpreter (also known as "PUC-Rio Lua") is not supported anymore. This
document interchangeably uses the terms "Lua" and "LuaJIT" to refer to the
LuaJIT interpreter.&lt;/p&gt;
&lt;p&gt;By leveraging Nginx's subrequests, this module allows the integration of the
powerful Lua threads (known as Lua "coroutines") into the Nginx event model.&lt;/p&gt;
&lt;p&gt;Unlike &lt;a href="https://httpd.apache.org/docs/trunk/mod/mod_lua.html" rel="nofollow"&gt;Apache's mod_lua&lt;/a&gt;
and &lt;a href="http://redmine.lighttpd.net/wiki/1/Docs:ModMagnet" rel="nofollow"&gt;Lighttpd's mod_magnet&lt;/a&gt;,
Lua code executed using this module can be &lt;em&gt;100% non-blocking&lt;/em&gt; on network
traffic as long as the &lt;a href="#nginx-api-for-lua"&gt;Nginx API for Lua&lt;/a&gt; provided by
this module is used to handle requests to upstream services such as MySQL,
PostgreSQL, Memcached, Redis, or upstream HTTP web services.&lt;/p&gt;
&lt;p&gt;At least the following Lua libraries and Nginx modules can be used with this
module:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/openresty/lua-resty-memcached"&gt;lua-resty-memcached&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/openresty/lua-resty-mysql"&gt;lua-resty-mysql&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/openresty/lua-resty-redis"&gt;lua-resty-redis&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/openresty/lua-resty-dns"&gt;lua-resty-dns&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/openresty/lua-resty-upload"&gt;lua-resty-upload&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/openresty/lua-resty-websocket"&gt;lua-resty-websocket&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/openresty/lua-resty-lock"&gt;lua-resty-lock&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/cloudflare/lua-resty-logger-socket"&gt;lua-resty-logger-socket&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/openresty/lua-resty-lrucache"&gt;lua-resty-lrucache&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/openresty/lua-resty-string"&gt;lua-resty-string&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://github.com/openresty/memc-nginx-module"&gt;ngx_memc&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/FRiCKLE/ngx_postgres"&gt;ngx_postgres&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://github.com/openresty/redis2-nginx-module"&gt;ngx_redis2&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://wiki.nginx.org/HttpRedisModule" rel="nofollow"&gt;ngx_redis&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://nginx.org/en/docs/http/ngx_http_proxy_module.html" rel="nofollow"&gt;ngx_proxy&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://nginx.org/en/docs/http/ngx_http_fastcgi_module.html" rel="nofollow"&gt;ngx_fastcgi&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Almost any Nginx modules can be used with this ngx_lua module by means of
&lt;a href="#ngxlocationcapture"&gt;ngx.location.capture&lt;/a&gt; or
&lt;a href="#ngxlocationcapture_multi"&gt;ngx.location.capture_multi&lt;/a&gt; but it is
recommended to use those &lt;code&gt;lua-resty-*&lt;/code&gt; libraries instead of creating
subrequests to access the Nginx upstream modules because the former is usually
much more flexible and memory-efficient.&lt;/p&gt;
&lt;p&gt;The Lua interpreter (also known as "Lua State" or "LuaJIT VM instance") is
shared across all the requests in a single Nginx worker process to minimize
memory use. Request contexts are segregated using lightweight Lua coroutines.&lt;/p&gt;
&lt;p&gt;Loaded Lua modules persist in the Nginx worker process level resulting in a
small memory footprint in Lua even when under heavy loads.&lt;/p&gt;
&lt;p&gt;This module is plugged into Nginx's "http" subsystem so it can only speaks
downstream communication protocols in the HTTP family (HTTP 0.9/1.0/1.1/2.0,
WebSockets, etc...).  If you want to do generic TCP communications with the
downstream clients, then you should use the
&lt;a href="https://github.com/openresty/stream-lua-nginx-module#readme"&gt;ngx_stream_lua&lt;/a&gt;
module instead, which offers a compatible Lua API.&lt;/p&gt;
&lt;p&gt;&lt;a href="#table-of-contents"&gt;Back to TOC&lt;/a&gt;&lt;/p&gt;
&lt;h1&gt;&lt;a id="user-content-typical-uses" class="anchor" aria-hidden="true" href="#typical-uses"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Typical Uses&lt;/h1&gt;
&lt;p&gt;Just to name a few:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Mashup'ing and processing outputs of various Nginx upstream outputs (proxy, drizzle, postgres, redis, memcached, and etc) in Lua,&lt;/li&gt;
&lt;li&gt;doing arbitrarily complex access control and security checks in Lua before requests actually reach the upstream backends,&lt;/li&gt;
&lt;li&gt;manipulating response headers in an arbitrary way (by Lua)&lt;/li&gt;
&lt;li&gt;fetching backend information from external storage backends (like redis, memcached, mysql, postgresql) and use that information to choose which upstream backend to access on-the-fly,&lt;/li&gt;
&lt;li&gt;coding up arbitrarily complex web applications in a content handler using synchronous but still non-blocking access to the database backends and other storage,&lt;/li&gt;
&lt;li&gt;doing very complex URL dispatch in Lua at rewrite phase,&lt;/li&gt;
&lt;li&gt;using Lua to implement advanced caching mechanism for Nginx's subrequests and arbitrary locations.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;The possibilities are unlimited as the module allows bringing together various
elements within Nginx as well as exposing the power of the Lua language to the
user. The module provides the full flexibility of scripting while offering
performance levels comparable with native C language programs both in terms of
CPU time as well as memory footprint thanks to LuaJIT 2.x.&lt;/p&gt;
&lt;p&gt;Other scripting language implementations typically struggle to match this
performance level.&lt;/p&gt;
&lt;p&gt;&lt;a href="#table-of-contents"&gt;Back to TOC&lt;/a&gt;&lt;/p&gt;
&lt;h1&gt;&lt;a id="user-content-nginx-compatibility" class="anchor" aria-hidden="true" href="#nginx-compatibility"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Nginx Compatibility&lt;/h1&gt;
&lt;p&gt;The latest version of this module is compatible with the following versions of Nginx:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;1.17.x  (last tested: 1.17.4)&lt;/li&gt;
&lt;li&gt;1.15.x  (last tested: 1.15.8)&lt;/li&gt;
&lt;li&gt;1.14.x&lt;/li&gt;
&lt;li&gt;1.13.x  (last tested: 1.13.6)&lt;/li&gt;
&lt;li&gt;1.12.x&lt;/li&gt;
&lt;li&gt;1.11.x  (last tested: 1.11.2)&lt;/li&gt;
&lt;li&gt;1.10.x&lt;/li&gt;
&lt;li&gt;1.9.x (last tested: 1.9.15)&lt;/li&gt;
&lt;li&gt;1.8.x&lt;/li&gt;
&lt;li&gt;1.7.x (last tested: 1.7.10)&lt;/li&gt;
&lt;li&gt;1.6.x&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Nginx cores older than 1.6.0 (exclusive) are &lt;em&gt;not&lt;/em&gt; supported.&lt;/p&gt;
&lt;p&gt;&lt;a href="#table-of-contents"&gt;Back to TOC&lt;/a&gt;&lt;/p&gt;
&lt;h1&gt;&lt;a id="user-content-installation" class="anchor" aria-hidden="true" href="#installation"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Installation&lt;/h1&gt;
&lt;p&gt;It is &lt;em&gt;highly&lt;/em&gt; recommended to use &lt;a href="https://openresty.org" rel="nofollow"&gt;OpenResty releases&lt;/a&gt;
which bundle Nginx, ngx_lua (this module), LuaJIT, as well as other powerful
companion Nginx modules and Lua libraries.&lt;/p&gt;
&lt;p&gt;It is discouraged to build this module with Nginx yourself since it is tricky
to set up exactly right.&lt;/p&gt;
&lt;p&gt;Note that Nginx, LuaJIT, and OpenSSL official releases have various limitations
and long standing bugs that can cause some of this module's features to be
disabled, not work properly, or run slower. Official OpenResty releases are
recommended because they bundle &lt;a href="https://github.com/openresty/luajit2"&gt;OpenResty's optimized LuaJIT 2.1 fork&lt;/a&gt; and
&lt;a href="https://github.com/openresty/openresty/tree/master/patches"&gt;Nginx/OpenSSL
patches&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Alternatively, ngx_lua can be manually compiled into Nginx:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;LuaJIT can be downloaded from the &lt;a href="https://github.com/openresty/luajit2/releases"&gt;latest release of OpenResty's LuaJIT fork&lt;/a&gt;. The official LuaJIT 2.x releases are also supported, although performance will be significantly lower for reasons elaborated above&lt;/li&gt;
&lt;li&gt;Download the latest version of the ngx_devel_kit (NDK) module &lt;a href="https://github.com/simplresty/ngx_devel_kit/tags"&gt;HERE&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Download the latest version of ngx_lua &lt;a href="https://github.com/openresty/lua-nginx-module/tags"&gt;HERE&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Download the latest supported version of Nginx &lt;a href="https://nginx.org/" rel="nofollow"&gt;HERE&lt;/a&gt; (See &lt;a href="#nginx-compatibility"&gt;Nginx Compatibility&lt;/a&gt;)&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;Build the source with this module:&lt;/p&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt; wget &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;https://nginx.org/download/nginx-1.13.6.tar.gz&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;
 tar -xzvf nginx-1.13.6.tar.gz
 &lt;span class="pl-c1"&gt;cd&lt;/span&gt; nginx-1.13.6/

 &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; tell nginx's build system where to find LuaJIT 2.0:&lt;/span&gt;
 &lt;span class="pl-k"&gt;export&lt;/span&gt; LUAJIT_LIB=/path/to/luajit/lib
 &lt;span class="pl-k"&gt;export&lt;/span&gt; LUAJIT_INC=/path/to/luajit/include/luajit-2.0

 &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; tell nginx's build system where to find LuaJIT 2.1:&lt;/span&gt;
 &lt;span class="pl-k"&gt;export&lt;/span&gt; LUAJIT_LIB=/path/to/luajit/lib
 &lt;span class="pl-k"&gt;export&lt;/span&gt; LUAJIT_INC=/path/to/luajit/include/luajit-2.1

 &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; Here we assume Nginx is to be installed under /opt/nginx/.&lt;/span&gt;
 ./configure --prefix=/opt/nginx \
         --with-ld-opt=&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;-Wl,-rpath,/path/to/luajit/lib&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; \
         --add-module=/path/to/ngx_devel_kit \
         --add-module=/path/to/lua-nginx-module

 &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; Note that you may also want to add `./configure` options which are used in your&lt;/span&gt;
 &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; current nginx build.&lt;/span&gt;
 &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; You can get usually those options using command nginx -V&lt;/span&gt;

 &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; you can change the parallism number 2 below to fit the number of spare CPU cores in your&lt;/span&gt;
 &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; machine.&lt;/span&gt;
 make -j2
 make install&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;a href="#table-of-contents"&gt;Back to TOC&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-building-as-a-dynamic-module" class="anchor" aria-hidden="true" href="#building-as-a-dynamic-module"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Building as a dynamic module&lt;/h2&gt;
&lt;p&gt;Starting from NGINX 1.9.11, you can also compile this module as a dynamic module, by using the &lt;code&gt;--add-dynamic-module=PATH&lt;/code&gt; option instead of &lt;code&gt;--add-module=PATH&lt;/code&gt; on the
&lt;code&gt;./configure&lt;/code&gt; command line above. And then you can explicitly load the module in your &lt;code&gt;nginx.conf&lt;/code&gt; via the &lt;a href="https://nginx.org/en/docs/ngx_core_module.html#load_module" rel="nofollow"&gt;load_module&lt;/a&gt;
directive, for example,&lt;/p&gt;
&lt;div class="highlight highlight-source-nginx"&gt;&lt;pre&gt; &lt;span class="pl-k"&gt;load_module&lt;/span&gt; /path/to/modules/ndk_http_module.so;  &lt;span class="pl-c"&gt;# assuming NDK is built as a dynamic module too&lt;/span&gt;
 &lt;span class="pl-k"&gt;load_module&lt;/span&gt; /path/to/modules/ngx_http_lua_module.so;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;a href="#table-of-contents"&gt;Back to TOC&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-c-macro-configurations" class="anchor" aria-hidden="true" href="#c-macro-configurations"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;C Macro Configurations&lt;/h2&gt;
&lt;p&gt;While building this module either via OpenResty or with the Nginx core, you can define the following C macros via the C compiler options:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;NGX_LUA_USE_ASSERT&lt;/code&gt;
When defined, will enable assertions in the ngx_lua C code base. Recommended for debugging or testing builds. It can introduce some (small) runtime overhead when enabled. This macro was first introduced in the &lt;code&gt;v0.9.10&lt;/code&gt; release.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;NGX_LUA_ABORT_AT_PANIC&lt;/code&gt;
When the LuaJIT VM panics, ngx_lua will instruct the current nginx worker process to quit gracefully by default. By specifying this C macro, ngx_lua will abort the current nginx worker process (which usually result in a core dump file) immediately. This option is useful for debugging VM panics. This option was first introduced in the &lt;code&gt;v0.9.8&lt;/code&gt; release.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;To enable one or more of these macros, just pass extra C compiler options to the &lt;code&gt;./configure&lt;/code&gt; script of either Nginx or OpenResty. For instance,&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;./configure --with-cc-opt="-DNGX_LUA_USE_ASSERT -DNGX_LUA_ABORT_AT_PANIC"
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;a href="#table-of-contents"&gt;Back to TOC&lt;/a&gt;&lt;/p&gt;
&lt;h1&gt;&lt;a id="user-content-community" class="anchor" aria-hidden="true" href="#community"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Community&lt;/h1&gt;
&lt;p&gt;&lt;a href="#table-of-contents"&gt;Back to TOC&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-english-mailing-list" class="anchor" aria-hidden="true" href="#english-mailing-list"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;English Mailing List&lt;/h2&gt;
&lt;p&gt;The &lt;a href="https://groups.google.com/group/openresty-en" rel="nofollow"&gt;openresty-en&lt;/a&gt; mailing list is for English speakers.&lt;/p&gt;
&lt;p&gt;&lt;a href="#table-of-contents"&gt;Back to TOC&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-chinese-mailing-list" class="anchor" aria-hidden="true" href="#chinese-mailing-list"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Chinese Mailing List&lt;/h2&gt;
&lt;p&gt;The &lt;a href="https://groups.google.com/group/openresty" rel="nofollow"&gt;openresty&lt;/a&gt; mailing list is for Chinese speakers.&lt;/p&gt;
&lt;p&gt;&lt;a href="#table-of-contents"&gt;Back to TOC&lt;/a&gt;&lt;/p&gt;
&lt;h1&gt;&lt;a id="user-content-code-repository" class="anchor" aria-hidden="true" href="#code-repository"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Code Repository&lt;/h1&gt;
&lt;p&gt;The code repository of this project is hosted on GitHub at
&lt;a href="https://github.com/openresty/lua-nginx-module"&gt;openresty/lua-nginx-module&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;&lt;a href="#table-of-contents"&gt;Back to TOC&lt;/a&gt;&lt;/p&gt;
&lt;h1&gt;&lt;a id="user-content-bugs-and-patches" class="anchor" aria-hidden="true" href="#bugs-and-patches"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Bugs and Patches&lt;/h1&gt;
&lt;p&gt;Please submit bug reports, wishlists, or patches by&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;creating a ticket on the &lt;a href="https://github.com/openresty/lua-nginx-module/issues"&gt;GitHub Issue Tracker&lt;/a&gt;,&lt;/li&gt;
&lt;li&gt;or posting to the &lt;a href="#community"&gt;OpenResty community&lt;/a&gt;.&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;a href="#table-of-contents"&gt;Back to TOC&lt;/a&gt;&lt;/p&gt;
&lt;h1&gt;&lt;a id="user-content-luajit-bytecode-support" class="anchor" aria-hidden="true" href="#luajit-bytecode-support"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;LuaJIT bytecode support&lt;/h1&gt;
&lt;p&gt;As from the &lt;code&gt;v0.5.0rc32&lt;/code&gt; release, all &lt;code&gt;*_by_lua_file&lt;/code&gt; configure directives (such as &lt;a href="#content_by_lua_file"&gt;content_by_lua_file&lt;/a&gt;) support loading LuaJIT 2.0/2.1 raw bytecode files directly:&lt;/p&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt; /path/to/luajit/bin/luajit -b /path/to/input_file.lua /path/to/output_file.ljbc&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;The &lt;code&gt;-bg&lt;/code&gt; option can be used to include debug information in the LuaJIT bytecode file:&lt;/p&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt; /path/to/luajit/bin/luajit -bg /path/to/input_file.lua /path/to/output_file.ljbc&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Please refer to the official LuaJIT documentation on the &lt;code&gt;-b&lt;/code&gt; option for more details:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://luajit.org/running.html#opt_b" rel="nofollow"&gt;https://luajit.org/running.html#opt_b&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Note that the bytecode files generated by LuaJIT 2.1 is &lt;em&gt;not&lt;/em&gt; compatible with
LuaJIT 2.0, and vice versa. The support for LuaJIT 2.1 bytecode was first added
in ngx_lua v0.9.3.&lt;/p&gt;
&lt;p&gt;Attempts to load standard Lua 5.1 bytecode files into ngx_lua instances linked
to LuaJIT 2.0/2.1 (or vice versa) will result in an Nginx error message such as
the one below:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;[error] 13909#0: *1 failed to load Lua inlined code: bad byte-code header in /path/to/test_file.luac
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Loading bytecode files via the Lua primitives like &lt;code&gt;require&lt;/code&gt; and
&lt;code&gt;dofile&lt;/code&gt; should always work as expected.&lt;/p&gt;
&lt;p&gt;&lt;a href="#table-of-contents"&gt;Back to TOC&lt;/a&gt;&lt;/p&gt;
&lt;h1&gt;&lt;a id="user-content-system-environment-variable-support" class="anchor" aria-hidden="true" href="#system-environment-variable-support"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;System Environment Variable Support&lt;/h1&gt;
&lt;p&gt;If you want to access the system environment variable, say, &lt;code&gt;foo&lt;/code&gt;, in Lua via the standard Lua API &lt;a href="https://www.lua.org/manual/5.1/manual.html#pdf-os.getenv" rel="nofollow"&gt;os.getenv&lt;/a&gt;, then you should also list this environment variable name in your &lt;code&gt;nginx.conf&lt;/code&gt; file via the &lt;a href="https://nginx.org/en/docs/ngx_core_module.html#env" rel="nofollow"&gt;env directive&lt;/a&gt;. For example,&lt;/p&gt;
&lt;div class="highlight highlight-source-nginx"&gt;&lt;pre&gt; &lt;span class="pl-k"&gt;env&lt;/span&gt; foo;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;a href="#table-of-contents"&gt;Back to TOC&lt;/a&gt;&lt;/p&gt;
&lt;h1&gt;&lt;a id="user-content-http-10-support" class="anchor" aria-hidden="true" href="#http-10-support"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;HTTP 1.0 support&lt;/h1&gt;
&lt;p&gt;The HTTP 1.0 protocol does not support chunked output and requires an explicit &lt;code&gt;Content-Length&lt;/code&gt; header when the response body is not empty in order to support the HTTP 1.0 keep-alive.
So when a HTTP 1.0 request is made and the &lt;a href="#lua_http10_buffering"&gt;lua_http10_buffering&lt;/a&gt; directive is turned &lt;code&gt;on&lt;/code&gt;, ngx_lua will buffer the
output of &lt;a href="#ngxsay"&gt;ngx.say&lt;/a&gt; and &lt;a href="#ngxprint"&gt;ngx.print&lt;/a&gt; calls and also postpone sending response headers until all the response body output is received.
At that time ngx_lua can calculate the total length of the body and construct a proper &lt;code&gt;Content-Length&lt;/code&gt; header to return to the HTTP 1.0 client.
If the &lt;code&gt;Content-Length&lt;/code&gt; response header is set in the running Lua code, however, this buffering will be disabled even if the &lt;a href="#lua_http10_buffering"&gt;lua_http10_buffering&lt;/a&gt; directive is turned &lt;code&gt;on&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;For large streaming output responses, it is important to disable the &lt;a href="#lua_http10_buffering"&gt;lua_http10_buffering&lt;/a&gt; directive to minimise memory usage.&lt;/p&gt;
&lt;p&gt;Note that common HTTP benchmark tools such as &lt;code&gt;ab&lt;/code&gt; and &lt;code&gt;http_load&lt;/code&gt; issue HTTP 1.0 requests by default.
To force &lt;code&gt;curl&lt;/code&gt; to send HTTP 1.0 requests, use the &lt;code&gt;-0&lt;/code&gt; option.&lt;/p&gt;
&lt;p&gt;&lt;a href="#table-of-contents"&gt;Back to TOC&lt;/a&gt;&lt;/p&gt;
&lt;h1&gt;&lt;a id="user-content-statically-linking-pure-lua-modules" class="anchor" aria-hidden="true" href="#statically-linking-pure-lua-modules"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Statically Linking Pure Lua Modules&lt;/h1&gt;
&lt;p&gt;With LuaJIT 2.x, it is possible to statically link the bytecode of pure Lua
modules into the Nginx executable.&lt;/p&gt;
&lt;p&gt;You can use the &lt;code&gt;luajit&lt;/code&gt; executable to compile &lt;code&gt;.lua&lt;/code&gt; Lua
module files to &lt;code&gt;.o&lt;/code&gt; object files containing the exported bytecode
data, and then link the &lt;code&gt;.o&lt;/code&gt; files directly in your Nginx build.&lt;/p&gt;
&lt;p&gt;Below is a trivial example to demonstrate this. Consider that we have the following &lt;code&gt;.lua&lt;/code&gt; file named &lt;code&gt;foo.lua&lt;/code&gt;:&lt;/p&gt;
&lt;div class="highlight highlight-source-lua"&gt;&lt;pre&gt; &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;--&lt;/span&gt; foo.lua&lt;/span&gt;
 &lt;span class="pl-k"&gt;local&lt;/span&gt; _M &lt;span class="pl-k"&gt;=&lt;/span&gt; {}

 &lt;span class="pl-k"&gt;function&lt;/span&gt; &lt;span class="pl-en"&gt;_M.go&lt;/span&gt;()
     &lt;span class="pl-c1"&gt;print&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;Hello from foo&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
 &lt;span class="pl-k"&gt;end&lt;/span&gt;

 &lt;span class="pl-k"&gt;return&lt;/span&gt; _M&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;And then we compile this &lt;code&gt;.lua&lt;/code&gt; file to &lt;code&gt;foo.o&lt;/code&gt; file:&lt;/p&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt; /path/to/luajit/bin/luajit -bg foo.lua foo.o&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;What matters here is the name of the &lt;code&gt;.lua&lt;/code&gt; file, which determines how you use this module later on the Lua land. The file name &lt;code&gt;foo.o&lt;/code&gt; does not matter at all except the &lt;code&gt;.o&lt;/code&gt; file extension (which tells &lt;code&gt;luajit&lt;/code&gt; what output format is used). If you want to strip the Lua debug information from the resulting bytecode, you can just specify the &lt;code&gt;-b&lt;/code&gt; option above instead of &lt;code&gt;-bg&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;Then when building Nginx or OpenResty, pass the &lt;code&gt;--with-ld-opt="foo.o"&lt;/code&gt; option to the &lt;code&gt;./configure&lt;/code&gt; script:&lt;/p&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt; ./configure --with-ld-opt=&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;/path/to/foo.o&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; ...&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Finally, you can just do the following in any Lua code run by ngx_lua:&lt;/p&gt;
&lt;div class="highlight highlight-source-lua"&gt;&lt;pre&gt; &lt;span class="pl-k"&gt;local&lt;/span&gt; foo &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;require&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;foo&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;
 foo.&lt;span class="pl-c1"&gt;go&lt;/span&gt;()&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;And this piece of code no longer depends on the external &lt;code&gt;foo.lua&lt;/code&gt; file any more because it has already been compiled into the &lt;code&gt;nginx&lt;/code&gt; executable.&lt;/p&gt;
&lt;p&gt;If you want to use dot in the Lua module name when calling &lt;code&gt;require&lt;/code&gt;, as in&lt;/p&gt;
&lt;div class="highlight highlight-source-lua"&gt;&lt;pre&gt; &lt;span class="pl-k"&gt;local&lt;/span&gt; foo &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;require&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;resty.foo&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;then you need to rename the &lt;code&gt;foo.lua&lt;/code&gt; file to &lt;code&gt;resty_foo.lua&lt;/code&gt; before compiling it down to a &lt;code&gt;.o&lt;/code&gt; file with the &lt;code&gt;luajit&lt;/code&gt; command-line utility.&lt;/p&gt;
&lt;p&gt;It is important to use exactly the same version of LuaJIT when compiling &lt;code&gt;.lua&lt;/code&gt; files to &lt;code&gt;.o&lt;/code&gt; files as building nginx + ngx_lua. This is because the LuaJIT bytecode format may be incompatible between different LuaJIT versions. When the bytecode format is incompatible, you will see a Lua runtime error saying that the Lua module is not found.&lt;/p&gt;
&lt;p&gt;When you have multiple &lt;code&gt;.lua&lt;/code&gt; files to compile and link, then just specify their &lt;code&gt;.o&lt;/code&gt; files at the same time in the value of the &lt;code&gt;--with-ld-opt&lt;/code&gt; option. For instance,&lt;/p&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt; ./configure --with-ld-opt=&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;/path/to/foo.o /path/to/bar.o&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; ...&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;If you have too many &lt;code&gt;.o&lt;/code&gt; files, then it might not be feasible to name them all in a single command. In this case, you can build a static library (or archive) for your &lt;code&gt;.o&lt;/code&gt; files, as in&lt;/p&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt; ar rcus libmyluafiles.a &lt;span class="pl-k"&gt;*&lt;/span&gt;.o&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;then you can link the &lt;code&gt;myluafiles&lt;/code&gt; archive as a whole to your nginx executable:&lt;/p&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt; ./configure \
     --with-ld-opt=&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;-L/path/to/lib -Wl,--whole-archive -lmyluafiles -Wl,--no-whole-archive&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;where &lt;code&gt;/path/to/lib&lt;/code&gt; is the path of the directory containing the &lt;code&gt;libmyluafiles.a&lt;/code&gt; file. It should be noted that the linker option &lt;code&gt;--whole-archive&lt;/code&gt; is required here because otherwise our archive will be skipped because no symbols in our archive are mentioned in the main parts of the nginx executable.&lt;/p&gt;
&lt;p&gt;&lt;a href="#table-of-contents"&gt;Back to TOC&lt;/a&gt;&lt;/p&gt;
&lt;h1&gt;&lt;a id="user-content-data-sharing-within-an-nginx-worker" class="anchor" aria-hidden="true" href="#data-sharing-within-an-nginx-worker"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Data Sharing within an Nginx Worker&lt;/h1&gt;
&lt;p&gt;To globally share data among all the requests handled by the same Nginx worker
process, encapsulate the shared data into a Lua module, use the Lua
&lt;code&gt;require&lt;/code&gt; builtin to import the module, and then manipulate the
shared data in Lua. This works because required Lua modules are loaded only
once and all coroutines will share the same copy of the module (both its code
and data).&lt;/p&gt;
&lt;p&gt;Note that the use of global Lua variables is &lt;em&gt;strongly discouraged&lt;/em&gt;, as it may
lead to unexpected race conditions between concurrent requests.&lt;/p&gt;
&lt;p&gt;Here is a small example on sharing data within an Nginx worker via a Lua module:&lt;/p&gt;
&lt;div class="highlight highlight-source-lua"&gt;&lt;pre&gt; &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;--&lt;/span&gt; mydata.lua&lt;/span&gt;
 &lt;span class="pl-k"&gt;local&lt;/span&gt; _M &lt;span class="pl-k"&gt;=&lt;/span&gt; {}

 &lt;span class="pl-k"&gt;local&lt;/span&gt; data &lt;span class="pl-k"&gt;=&lt;/span&gt; {
     dog &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;3&lt;/span&gt;,
     cat &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;4&lt;/span&gt;,
     pig &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;5&lt;/span&gt;,
 }

 &lt;span class="pl-k"&gt;function&lt;/span&gt; &lt;span class="pl-en"&gt;_M.get_age&lt;/span&gt;(&lt;span class="pl-smi"&gt;name&lt;/span&gt;)
     &lt;span class="pl-k"&gt;return&lt;/span&gt; data[name]
 &lt;span class="pl-k"&gt;end&lt;/span&gt;

 &lt;span class="pl-k"&gt;return&lt;/span&gt; _M&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;and then accessing it from &lt;code&gt;nginx.conf&lt;/code&gt;:&lt;/p&gt;
&lt;div class="highlight highlight-source-nginx"&gt;&lt;pre&gt; &lt;span class="pl-k"&gt;location&lt;/span&gt; &lt;span class="pl-en"&gt;/lua &lt;/span&gt;{
     &lt;span class="pl-k"&gt;content_by_lua_block&lt;/span&gt; {
         &lt;span class="pl-k"&gt;local&lt;/span&gt; mydata = require &lt;span class="pl-s"&gt;"mydata"&lt;/span&gt;
         ngx.say(mydata.get_age("dog"))
     }
 }&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;The &lt;code&gt;mydata&lt;/code&gt; module in this example will only be loaded and run on the first request to the location &lt;code&gt;/lua&lt;/code&gt;,
and all subsequent requests to the same Nginx worker process will use the reloaded instance of the
module as well as the same copy of the data in it, until a &lt;code&gt;HUP&lt;/code&gt; signal is sent to the Nginx master process to force a reload.
This data sharing technique is essential for high performance Lua applications based on this module.&lt;/p&gt;
&lt;p&gt;Note that this data sharing is on a &lt;em&gt;per-worker&lt;/em&gt; basis and not on a &lt;em&gt;per-server&lt;/em&gt; basis. That is, when there are multiple Nginx worker processes under an Nginx master, data sharing cannot cross the process boundary between these workers.&lt;/p&gt;
&lt;p&gt;It is usually recommended to share read-only data this way. You can also share changeable data among all the concurrent requests of each Nginx worker process as
long as there is &lt;em&gt;no&lt;/em&gt; nonblocking I/O operations (including &lt;a href="#ngxsleep"&gt;ngx.sleep&lt;/a&gt;)
in the middle of your calculations. As long as you do not give the
control back to the Nginx event loop and ngx_lua's light thread
scheduler (even implicitly), there can never be any race conditions in
between. For this reason, always be very careful when you want to share changeable data on the
worker level. Buggy optimizations can easily lead to hard-to-debug
race conditions under load.&lt;/p&gt;
&lt;p&gt;If server-wide data sharing is required, then use one or more of the following approaches:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Use the &lt;a href="#ngxshareddict"&gt;ngx.shared.DICT&lt;/a&gt; API provided by this module.&lt;/li&gt;
&lt;li&gt;Use only a single Nginx worker and a single server (this is however not recommended when there is a multi core CPU or multiple CPUs in a single machine).&lt;/li&gt;
&lt;li&gt;Use data storage mechanisms such as &lt;code&gt;memcached&lt;/code&gt;, &lt;code&gt;redis&lt;/code&gt;, &lt;code&gt;MySQL&lt;/code&gt; or &lt;code&gt;PostgreSQL&lt;/code&gt;. &lt;a href="https://openresty.org" rel="nofollow"&gt;The OpenResty official releases&lt;/a&gt; come with a set of companion Nginx modules and Lua libraries that provide interfaces with these data storage mechanisms.&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;a href="#table-of-contents"&gt;Back to TOC&lt;/a&gt;&lt;/p&gt;
&lt;h1&gt;&lt;a id="user-content-known-issues" class="anchor" aria-hidden="true" href="#known-issues"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Known Issues&lt;/h1&gt;
&lt;p&gt;&lt;a href="#table-of-contents"&gt;Back to TOC&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-tcp-socket-connect-operation-issues" class="anchor" aria-hidden="true" href="#tcp-socket-connect-operation-issues"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;TCP socket connect operation issues&lt;/h2&gt;
&lt;p&gt;The &lt;a href="#tcpsockconnect"&gt;tcpsock:connect&lt;/a&gt; method may indicate &lt;code&gt;success&lt;/code&gt; despite connection failures such as with &lt;code&gt;Connection Refused&lt;/code&gt; errors.&lt;/p&gt;
&lt;p&gt;However, later attempts to manipulate the cosocket object will fail and return the actual error status message generated by the failed connect operation.&lt;/p&gt;
&lt;p&gt;This issue is due to limitations in the Nginx event model and only appears to affect Mac OS X.&lt;/p&gt;
&lt;p&gt;&lt;a href="#table-of-contents"&gt;Back to TOC&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-lua-coroutine-yieldingresuming" class="anchor" aria-hidden="true" href="#lua-coroutine-yieldingresuming"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Lua Coroutine Yielding/Resuming&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Because Lua's &lt;code&gt;dofile&lt;/code&gt; and &lt;code&gt;require&lt;/code&gt; builtins are currently implemented as C functions in LuaJIT 2.0/2.1, if the Lua file being loaded by &lt;code&gt;dofile&lt;/code&gt; or &lt;code&gt;require&lt;/code&gt; invokes &lt;a href="#ngxlocationcapture"&gt;ngx.location.capture*&lt;/a&gt;, &lt;a href="#ngxexec"&gt;ngx.exec&lt;/a&gt;, &lt;a href="#ngxexit"&gt;ngx.exit&lt;/a&gt;, or other API functions requiring yielding in the &lt;em&gt;top-level&lt;/em&gt; scope of the Lua file, then the Lua error "attempt to yield across C-call boundary" will be raised. To avoid this, put these calls requiring yielding into your own Lua functions in the Lua file instead of the top-level scope of the file.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;a href="#table-of-contents"&gt;Back to TOC&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-lua-variable-scope" class="anchor" aria-hidden="true" href="#lua-variable-scope"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Lua Variable Scope&lt;/h2&gt;
&lt;p&gt;Care must be taken when importing modules, and this form should be used:&lt;/p&gt;
&lt;div class="highlight highlight-source-lua"&gt;&lt;pre&gt; &lt;span class="pl-k"&gt;local&lt;/span&gt; xxx &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;require&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;xxx&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;)&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;instead of the old deprecated form:&lt;/p&gt;
&lt;div class="highlight highlight-source-lua"&gt;&lt;pre&gt; &lt;span class="pl-c1"&gt;require&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;xxx&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;)&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Here is the reason: by design, the global environment has exactly the same lifetime as the Nginx request handler associated with it. Each request handler has its own set of Lua global variables and that is the idea of request isolation. The Lua module is actually loaded by the first Nginx request handler and is cached by the &lt;code&gt;require()&lt;/code&gt; built-in in the &lt;code&gt;package.loaded&lt;/code&gt; table for later reference, and the &lt;code&gt;module()&lt;/code&gt; builtin used by some Lua modules has the side effect of setting a global variable to the loaded module table. But this global variable will be cleared at the end of the request handler,  and every subsequent request handler all has its own (clean) global environment. So one will get Lua exception for accessing the &lt;code&gt;nil&lt;/code&gt; value.&lt;/p&gt;
&lt;p&gt;The use of Lua global variables is a generally inadvisable in the ngx_lua context as:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;the misuse of Lua globals has detrimental side effects on concurrent requests when such variables should instead be local in scope,&lt;/li&gt;
&lt;li&gt;Lua global variables require Lua table look-ups in the global environment which is computationally expensive, and&lt;/li&gt;
&lt;li&gt;some Lua global variable references may include typing errors which make such difficult to debug.&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;It is therefore &lt;em&gt;highly&lt;/em&gt; recommended to always declare such within an appropriate local scope instead.&lt;/p&gt;
&lt;div class="highlight highlight-source-lua"&gt;&lt;pre&gt; &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;--&lt;/span&gt; Avoid&lt;/span&gt;
 foo &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;123&lt;/span&gt;
 &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;--&lt;/span&gt; Recommended&lt;/span&gt;
 &lt;span class="pl-k"&gt;local&lt;/span&gt; foo &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;123&lt;/span&gt;

 &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;--&lt;/span&gt; Avoid&lt;/span&gt;
 &lt;span class="pl-k"&gt;function&lt;/span&gt; &lt;span class="pl-en"&gt;foo&lt;/span&gt;() &lt;span class="pl-k"&gt;return&lt;/span&gt; &lt;span class="pl-c1"&gt;123&lt;/span&gt; &lt;span class="pl-k"&gt;end&lt;/span&gt;
 &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;--&lt;/span&gt; Recommended&lt;/span&gt;
 &lt;span class="pl-k"&gt;local&lt;/span&gt; &lt;span class="pl-k"&gt;function&lt;/span&gt; &lt;span class="pl-en"&gt;foo&lt;/span&gt;() &lt;span class="pl-k"&gt;return&lt;/span&gt; &lt;span class="pl-c1"&gt;123&lt;/span&gt; &lt;span class="pl-k"&gt;end&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;To find all instances of Lua global variables in your Lua code, run the &lt;a href="https://github.com/openresty/nginx-devel-utils/blob/master/lua-releng"&gt;lua-releng tool&lt;/a&gt; across all &lt;code&gt;.lua&lt;/code&gt; source files:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;$ lua-releng
Checking use of Lua global variables in file lib/foo/bar.lua ...
        1       [1489]  SETGLOBAL       7 -1    ; contains
        55      [1506]  GETGLOBAL       7 -3    ; setvar
        3       [1545]  GETGLOBAL       3 -4    ; varexpand
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;The output says that the line 1489 of file &lt;code&gt;lib/foo/bar.lua&lt;/code&gt; writes to a global variable named &lt;code&gt;contains&lt;/code&gt;, the line 1506 reads from the global variable &lt;code&gt;setvar&lt;/code&gt;, and line 1545 reads the global &lt;code&gt;varexpand&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;This tool will guarantee that local variables in the Lua module functions are all declared with the &lt;code&gt;local&lt;/code&gt; keyword, otherwise a runtime exception will be thrown. It prevents undesirable race conditions while accessing such variables. See &lt;a href="#data-sharing-within-an-nginx-worker"&gt;Data Sharing within an Nginx Worker&lt;/a&gt; for the reasons behind this.&lt;/p&gt;
&lt;p&gt;&lt;a href="#table-of-contents"&gt;Back to TOC&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-locations-configured-by-subrequest-directives-of-other-modules" class="anchor" aria-hidden="true" href="#locations-configured-by-subrequest-directives-of-other-modules"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Locations Configured by Subrequest Directives of Other Modules&lt;/h2&gt;
&lt;p&gt;The &lt;a href="#ngxlocationcapture"&gt;ngx.location.capture&lt;/a&gt; and &lt;a href="#ngxlocationcapture_multi"&gt;ngx.location.capture_multi&lt;/a&gt; directives cannot capture locations that include the &lt;a href="http://nginx.org/en/docs/http/ngx_http_addition_module.html#add_before_body" rel="nofollow"&gt;add_before_body&lt;/a&gt;, &lt;a href="http://nginx.org/en/docs/http/ngx_http_addition_module.html#add_after_body" rel="nofollow"&gt;add_after_body&lt;/a&gt;, &lt;a href="https://nginx.org/en/docs/http/ngx_http_auth_request_module.html#auth_request" rel="nofollow"&gt;auth_request&lt;/a&gt;, &lt;a href="http://github.com/openresty/echo-nginx-module#echo_location"&gt;echo_location&lt;/a&gt;, &lt;a href="http://github.com/openresty/echo-nginx-module#echo_location_async"&gt;echo_location_async&lt;/a&gt;, &lt;a href="http://github.com/openresty/echo-nginx-module#echo_subrequest"&gt;echo_subrequest&lt;/a&gt;, or &lt;a href="http://github.com/openresty/echo-nginx-module#echo_subrequest_async"&gt;echo_subrequest_async&lt;/a&gt; directives.&lt;/p&gt;
&lt;div class="highlight highlight-source-nginx"&gt;&lt;pre&gt; &lt;span class="pl-k"&gt;location&lt;/span&gt; &lt;span class="pl-en"&gt;/foo &lt;/span&gt;{
     &lt;span class="pl-k"&gt;content_by_lua_block&lt;/span&gt; {
         &lt;span class="pl-k"&gt;res&lt;/span&gt; = ngx.location.capture(&lt;span class="pl-s"&gt;"/bar"&lt;/span&gt;)
     }
 }
 &lt;span class="pl-k"&gt;location&lt;/span&gt; &lt;span class="pl-en"&gt;/bar &lt;/span&gt;{
     &lt;span class="pl-k"&gt;echo_location&lt;/span&gt; /blah;
 }
 &lt;span class="pl-k"&gt;location&lt;/span&gt; &lt;span class="pl-en"&gt;/blah &lt;/span&gt;{
     &lt;span class="pl-k"&gt;echo&lt;/span&gt; &lt;span class="pl-s"&gt;"Success!"&lt;/span&gt;;
 }&lt;/pre&gt;&lt;/div&gt;
&lt;div class="highlight highlight-source-nginx"&gt;&lt;pre&gt; $ &lt;span class="pl-k"&gt;curl&lt;/span&gt; -i http://example.com/foo&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;will not work as expected.&lt;/p&gt;
&lt;p&gt;&lt;a href="#table-of-contents"&gt;Back to TOC&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-cosockets-not-available-everywhere" class="anchor" aria-hidden="true" href="#cosockets-not-available-everywhere"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Cosockets Not Available Everywhere&lt;/h2&gt;
&lt;p&gt;Due to internal limitations in the Nginx core, the cosocket API is disabled in the following contexts: &lt;a href="#set_by_lua"&gt;set_by_lua*&lt;/a&gt;, &lt;a href="#log_by_lua"&gt;log_by_lua*&lt;/a&gt;, &lt;a href="#header_filter_by_lua"&gt;header_filter_by_lua*&lt;/a&gt;, and &lt;a href="#body_filter_by_lua"&gt;body_filter_by_lua&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;The cosockets are currently also disabled in the &lt;a href="#init_by_lua"&gt;init_by_lua*&lt;/a&gt; and &lt;a href="#init_worker_by_lua"&gt;init_worker_by_lua*&lt;/a&gt; directive contexts but we may add support for these contexts in the future because there is no limitation in the Nginx core (or the limitation might be worked around).&lt;/p&gt;
&lt;p&gt;There exists a workaround, however, when the original context does &lt;em&gt;not&lt;/em&gt; need to wait for the cosocket results. That is, creating a zero-delay timer via the &lt;a href="#ngxtimerat"&gt;ngx.timer.at&lt;/a&gt; API and do the cosocket results in the timer handler, which runs asynchronously as to the original context creating the timer.&lt;/p&gt;
&lt;p&gt;&lt;a href="#table-of-contents"&gt;Back to TOC&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-special-escaping-sequences" class="anchor" aria-hidden="true" href="#special-escaping-sequences"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Special Escaping Sequences&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;NOTE&lt;/strong&gt; Following the &lt;code&gt;v0.9.17&lt;/code&gt; release, this pitfall can be avoided by using the &lt;code&gt;*_by_lua_block {}&lt;/code&gt; configuration directives.&lt;/p&gt;
&lt;p&gt;PCRE sequences such as &lt;code&gt;\d&lt;/code&gt;, &lt;code&gt;\s&lt;/code&gt;, or &lt;code&gt;\w&lt;/code&gt;, require special attention because in string literals, the backslash character, &lt;code&gt;\&lt;/code&gt;, is stripped out by both the Lua language parser and by the Nginx config file parser before processing if not within a &lt;code&gt;*_by_lua_block {}&lt;/code&gt; directive. So the following snippet will not work as expected:&lt;/p&gt;
&lt;div class="highlight highlight-source-nginx"&gt;&lt;pre&gt; &lt;span class="pl-c"&gt;# nginx.conf&lt;/span&gt;
 ? &lt;span class="pl-k"&gt;location&lt;/span&gt; &lt;span class="pl-en"&gt;/test &lt;/span&gt;{
 ?     &lt;span class="pl-k"&gt;content_by_lua&lt;/span&gt; &lt;span class="pl-s"&gt;'&lt;/span&gt;
&lt;span class="pl-s"&gt; ?         local regex = "\d+"  -- THIS IS WRONG OUTSIDE OF A *_by_lua_block DIRECTIVE&lt;/span&gt;
&lt;span class="pl-s"&gt; ?         local m = ngx.re.match("hello, 1234", regex)&lt;/span&gt;
&lt;span class="pl-s"&gt; ?         if m then ngx.say(m[0]) else ngx.say("not matched!") end&lt;/span&gt;
&lt;span class="pl-s"&gt; ?     '&lt;/span&gt;;
 ? }
 &lt;span class="pl-c"&gt;# evaluates to "not matched!"&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;To avoid this, &lt;em&gt;double&lt;/em&gt; escape the backslash:&lt;/p&gt;
&lt;div class="highlight highlight-source-nginx"&gt;&lt;pre&gt; &lt;span class="pl-c"&gt;# nginx.conf&lt;/span&gt;
 &lt;span class="pl-k"&gt;location&lt;/span&gt; &lt;span class="pl-en"&gt;/test &lt;/span&gt;{
     &lt;span class="pl-k"&gt;content_by_lua&lt;/span&gt; &lt;span class="pl-s"&gt;'&lt;/span&gt;
&lt;span class="pl-s"&gt;         local regex = "\\\\d+"&lt;/span&gt;
&lt;span class="pl-s"&gt;         local m = ngx.re.match("hello, 1234", regex)&lt;/span&gt;
&lt;span class="pl-s"&gt;         if m then ngx.say(m[0]) else ngx.say("not matched!") end&lt;/span&gt;
&lt;span class="pl-s"&gt;     '&lt;/span&gt;;
 }
 &lt;span class="pl-c"&gt;# evaluates to "1234"&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Here, &lt;code&gt;\\\\d+&lt;/code&gt; is stripped down to &lt;code&gt;\\d+&lt;/code&gt; by the Nginx config file parser and this is further stripped down to &lt;code&gt;\d+&lt;/code&gt; by the Lua language parser before running.&lt;/p&gt;
&lt;p&gt;Alternatively, the regex pattern can be presented as a long-bracketed Lua string literal by encasing it in "long brackets", &lt;code&gt;[[...]]&lt;/code&gt;, in which case backslashes have to only be escaped once for the Nginx config file parser.&lt;/p&gt;
&lt;div class="highlight highlight-source-nginx"&gt;&lt;pre&gt; &lt;span class="pl-c"&gt;# nginx.conf&lt;/span&gt;
 &lt;span class="pl-k"&gt;location&lt;/span&gt; &lt;span class="pl-en"&gt;/test &lt;/span&gt;{
     &lt;span class="pl-k"&gt;content_by_lua&lt;/span&gt; &lt;span class="pl-s"&gt;'&lt;/span&gt;
&lt;span class="pl-s"&gt;         local regex = [[\\d+]]&lt;/span&gt;
&lt;span class="pl-s"&gt;         local m = ngx.re.match("hello, 1234", regex)&lt;/span&gt;
&lt;span class="pl-s"&gt;         if m then ngx.say(m[0]) else ngx.say("not matched!") end&lt;/span&gt;
&lt;span class="pl-s"&gt;     '&lt;/span&gt;;
 }
 &lt;span class="pl-c"&gt;# evaluates to "1234"&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Here, &lt;code&gt;[[\\d+]]&lt;/code&gt; is stripped down to &lt;code&gt;[[\d+]]&lt;/code&gt; by the Nginx config file parser and this is processed correctly.&lt;/p&gt;
&lt;p&gt;Note that a longer from of the long bracket, &lt;code&gt;[=[...]=]&lt;/code&gt;, may be required if the regex pattern contains &lt;code&gt;[...]&lt;/code&gt; sequences.
The &lt;code&gt;[=[...]=]&lt;/code&gt; form may be used as the default form if desired.&lt;/p&gt;
&lt;div class="highlight highlight-source-nginx"&gt;&lt;pre&gt; &lt;span class="pl-c"&gt;# nginx.conf&lt;/span&gt;
 &lt;span class="pl-k"&gt;location&lt;/span&gt; &lt;span class="pl-en"&gt;/test &lt;/span&gt;{
     &lt;span class="pl-k"&gt;content_by_lua&lt;/span&gt; &lt;span class="pl-s"&gt;'&lt;/span&gt;
&lt;span class="pl-s"&gt;         local regex = [=[[0-9]+]=]&lt;/span&gt;
&lt;span class="pl-s"&gt;         local m = ngx.re.match("hello, 1234", regex)&lt;/span&gt;
&lt;span class="pl-s"&gt;         if m then ngx.say(m[0]) else ngx.say("not matched!") end&lt;/span&gt;
&lt;span class="pl-s"&gt;     '&lt;/span&gt;;
 }
 &lt;span class="pl-c"&gt;# evaluates to "1234"&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;An alternative approach to escaping PCRE sequences is to ensure that Lua code is placed in external script files and executed using the various &lt;code&gt;*_by_lua_file&lt;/code&gt; directives.
With this approach, the backslashes are only stripped by the Lua language parser and therefore only need to be escaped once each.&lt;/p&gt;
&lt;div class="highlight highlight-source-lua"&gt;&lt;pre&gt; &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;--&lt;/span&gt; test.lua&lt;/span&gt;
 &lt;span class="pl-k"&gt;local&lt;/span&gt; regex &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;span class="pl-cce"&gt;\\&lt;/span&gt;d+&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;
 &lt;span class="pl-k"&gt;local&lt;/span&gt; m &lt;span class="pl-k"&gt;=&lt;/span&gt; ngx.&lt;span class="pl-smi"&gt;re&lt;/span&gt;.&lt;span class="pl-c1"&gt;match&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;hello, 1234&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, regex)
 &lt;span class="pl-k"&gt;if&lt;/span&gt; m &lt;span class="pl-k"&gt;then&lt;/span&gt; ngx.&lt;span class="pl-c1"&gt;say&lt;/span&gt;(m[&lt;span class="pl-c1"&gt;0&lt;/span&gt;]) &lt;span class="pl-k"&gt;else&lt;/span&gt; ngx.&lt;span class="pl-c1"&gt;say&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;not matched!&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;) &lt;span class="pl-k"&gt;end&lt;/span&gt;
 &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;--&lt;/span&gt; evaluates to "1234"&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Within external script files, PCRE sequences presented as long-bracketed Lua string literals do not require modification.&lt;/p&gt;
&lt;div class="highlight highlight-source-lua"&gt;&lt;pre&gt; &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;--&lt;/span&gt; test.lua&lt;/span&gt;
 &lt;span class="pl-k"&gt;local&lt;/span&gt; regex &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;[[&lt;/span&gt;\d+&lt;span class="pl-pds"&gt;]]&lt;/span&gt;&lt;/span&gt;
 &lt;span class="pl-k"&gt;local&lt;/span&gt; m &lt;span class="pl-k"&gt;=&lt;/span&gt; ngx.&lt;span class="pl-smi"&gt;re&lt;/span&gt;.&lt;span class="pl-c1"&gt;match&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;hello, 1234&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, regex)
 &lt;span class="pl-k"&gt;if&lt;/span&gt; m &lt;span class="pl-k"&gt;then&lt;/span&gt; ngx.&lt;span class="pl-c1"&gt;say&lt;/span&gt;(m[&lt;span class="pl-c1"&gt;0&lt;/span&gt;]) &lt;span class="pl-k"&gt;else&lt;/span&gt; ngx.&lt;span class="pl-c1"&gt;say&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;not matched!&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;) &lt;span class="pl-k"&gt;end&lt;/span&gt;
 &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;--&lt;/span&gt; evaluates to "1234"&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;As noted earlier, PCRE sequences presented within &lt;code&gt;*_by_lua_block {}&lt;/code&gt; directives (available following the &lt;code&gt;v0.9.17&lt;/code&gt; release) do not require modification.&lt;/p&gt;
&lt;div class="highlight highlight-source-nginx"&gt;&lt;pre&gt; &lt;span class="pl-c"&gt;# nginx.conf&lt;/span&gt;
 &lt;span class="pl-k"&gt;location&lt;/span&gt; &lt;span class="pl-en"&gt;/test &lt;/span&gt;{
     &lt;span class="pl-k"&gt;content_by_lua_block&lt;/span&gt; {
         &lt;span class="pl-k"&gt;local&lt;/span&gt; regex = [[\d+]]
         &lt;span class="pl-k"&gt;local&lt;/span&gt; m = ngx.re.match(&lt;span class="pl-s"&gt;"hello, 1234"&lt;/span&gt;, regex)
         &lt;span class="pl-k"&gt;if&lt;/span&gt; m then ngx.say(m[0]) else ngx.say(&lt;span class="pl-s"&gt;"not matched!"&lt;/span&gt;) end
     }
 }
 &lt;span class="pl-c"&gt;# evaluates to "1234"&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;a href="#table-of-contents"&gt;Back to TOC&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-mixing-with-ssi-not-supported" class="anchor" aria-hidden="true" href="#mixing-with-ssi-not-supported"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Mixing with SSI Not Supported&lt;/h2&gt;
&lt;p&gt;Mixing SSI with ngx_lua in the same Nginx request is not supported at all. Just use ngx_lua exclusively. Everything you can do with SSI can be done atop ngx_lua anyway and it can be more efficient when using ngx_lua.&lt;/p&gt;
&lt;p&gt;&lt;a href="#table-of-contents"&gt;Back to TOC&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-spdy-mode-not-fully-supported" class="anchor" aria-hidden="true" href="#spdy-mode-not-fully-supported"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;SPDY Mode Not Fully Supported&lt;/h2&gt;
&lt;p&gt;Certain Lua APIs provided by ngx_lua do not work in Nginx's SPDY mode yet: &lt;a href="#ngxlocationcapture"&gt;ngx.location.capture&lt;/a&gt;, &lt;a href="#ngxlocationcapture_multi"&gt;ngx.location.capture_multi&lt;/a&gt;, and &lt;a href="#ngxreqsocket"&gt;ngx.req.socket&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;&lt;a href="#table-of-contents"&gt;Back to TOC&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-missing-data-on-short-circuited-requests" class="anchor" aria-hidden="true" href="#missing-data-on-short-circuited-requests"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Missing data on short circuited requests&lt;/h2&gt;
&lt;p&gt;Nginx may terminate a request early with (at least):&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;400 (Bad Request)&lt;/li&gt;
&lt;li&gt;405 (Not Allowed)&lt;/li&gt;
&lt;li&gt;408 (Request Timeout)&lt;/li&gt;
&lt;li&gt;413 (Request Entity Too Large)&lt;/li&gt;
&lt;li&gt;414 (Request URI Too Large)&lt;/li&gt;
&lt;li&gt;494 (Request Headers Too Large)&lt;/li&gt;
&lt;li&gt;499 (Client Closed Request)&lt;/li&gt;
&lt;li&gt;500 (Internal Server Error)&lt;/li&gt;
&lt;li&gt;501 (Not Implemented)&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;This means that phases that normally run are skipped, such as the rewrite or
access phase. This also means that later phases that are run regardless, e.g.
&lt;a href="#log_by_lua"&gt;log_by_lua&lt;/a&gt;, will not have access to information that is normally set in those
phases.&lt;/p&gt;
&lt;p&gt;&lt;a href="#table-of-contents"&gt;Back to TOC&lt;/a&gt;&lt;/p&gt;
&lt;h1&gt;&lt;a id="user-content-todo" class="anchor" aria-hidden="true" href="#todo"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;TODO&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;cosocket: implement LuaSocket's unconnected UDP API.&lt;/li&gt;
&lt;li&gt;cosocket: add support in the context of &lt;a href="#init_by_lua"&gt;init_by_lua*&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;cosocket: implement the &lt;code&gt;bind()&lt;/code&gt; method for stream-typed cosockets.&lt;/li&gt;
&lt;li&gt;cosocket: review and merge aviramc's &lt;a href="https://github.com/openresty/lua-nginx-module/pull/290"&gt;patch&lt;/a&gt; for adding the &lt;code&gt;bsdrecv&lt;/code&gt; method.&lt;/li&gt;
&lt;li&gt;cosocket: add configure options for different strategies of handling the cosocket connection exceeding in the pools.&lt;/li&gt;
&lt;li&gt;review and apply vadim-pavlov's patch for &lt;a href="#ngxlocationcapture"&gt;ngx.location.capture&lt;/a&gt;'s &lt;code&gt;extra_headers&lt;/code&gt; option&lt;/li&gt;
&lt;li&gt;use &lt;code&gt;ngx_hash_t&lt;/code&gt; to optimize the built-in header look-up process for &lt;a href="#ngxreqset_header"&gt;ngx.req.set_header&lt;/a&gt;, &lt;a href="#ngxheaderheader"&gt;ngx.header.HEADER&lt;/a&gt;, and etc.&lt;/li&gt;
&lt;li&gt;add directives to run Lua codes when Nginx stops.&lt;/li&gt;
&lt;li&gt;add &lt;code&gt;ignore_resp_headers&lt;/code&gt;, &lt;code&gt;ignore_resp_body&lt;/code&gt;, and &lt;code&gt;ignore_resp&lt;/code&gt; options to &lt;a href="#ngxlocationcapture"&gt;ngx.location.capture&lt;/a&gt; and &lt;a href="#ngxlocationcapture_multi"&gt;ngx.location.capture_multi&lt;/a&gt; methods, to allow micro performance tuning on the user side.&lt;/li&gt;
&lt;li&gt;add automatic Lua code time slicing support by yielding and resuming the Lua VM actively via Lua's debug hooks.&lt;/li&gt;
&lt;li&gt;add &lt;code&gt;stat&lt;/code&gt; mode similar to &lt;a href="https://httpd.apache.org/docs/trunk/mod/mod_lua.html" rel="nofollow"&gt;mod_lua&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;cosocket: add client SSL certificate support.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;a href="#table-of-contents"&gt;Back to TOC&lt;/a&gt;&lt;/p&gt;
&lt;h1&gt;&lt;a id="user-content-changes" class="anchor" aria-hidden="true" href="#changes"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Changes&lt;/h1&gt;
&lt;p&gt;The changes made in every release of this module are listed in the change logs of the OpenResty bundle:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://openresty.org/#Changes" rel="nofollow"&gt;https://openresty.org/#Changes&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href="#table-of-contents"&gt;Back to TOC&lt;/a&gt;&lt;/p&gt;
&lt;h1&gt;&lt;a id="user-content-test-suite" class="anchor" aria-hidden="true" href="#test-suite"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Test Suite&lt;/h1&gt;
&lt;p&gt;The following dependencies are required to run the test suite:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Nginx version &amp;gt;= 1.4.2&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Perl modules:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Test::Nginx: &lt;a href="https://github.com/openresty/test-nginx"&gt;https://github.com/openresty/test-nginx&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Nginx modules:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/simplresty/ngx_devel_kit"&gt;ngx_devel_kit&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/openresty/set-misc-nginx-module"&gt;ngx_set_misc&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://mdounin.ru/files/ngx_http_auth_request_module-0.2.tar.gz" rel="nofollow"&gt;ngx_auth_request&lt;/a&gt; (this is not needed if you're using Nginx 1.5.4+.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/openresty/echo-nginx-module"&gt;ngx_echo&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/openresty/memc-nginx-module"&gt;ngx_memc&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/openresty/srcache-nginx-module"&gt;ngx_srcache&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;ngx_lua (i.e., this module)&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/openresty/lua-upstream-nginx-module"&gt;ngx_lua_upstream&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/openresty/headers-more-nginx-module"&gt;ngx_headers_more&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/openresty/drizzle-nginx-module"&gt;ngx_drizzle&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/openresty/rds-json-nginx-module"&gt;ngx_rds_json&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/FRiCKLE/ngx_coolkit"&gt;ngx_coolkit&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/openresty/redis2-nginx-module"&gt;ngx_redis2&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;The order in which these modules are added during configuration is important because the position of any filter module in the
filtering chain determines the final output, for example. The correct adding order is shown above.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;3rd-party Lua libraries:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://www.kyne.com.au/~mark/software/lua-cjson.php" rel="nofollow"&gt;lua-cjson&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Applications:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;mysql: create database 'ngx_test', grant all privileges to user 'ngx_test', password is 'ngx_test'&lt;/li&gt;
&lt;li&gt;memcached: listening on the default port, 11211.&lt;/li&gt;
&lt;li&gt;redis: listening on the default port, 6379.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;See also the &lt;a href="https://github.com/openresty/lua-nginx-module/blob/master/util/build.sh"&gt;developer build script&lt;/a&gt; for more details on setting up the testing environment.&lt;/p&gt;
&lt;p&gt;To run the whole test suite in the default testing mode:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;cd /path/to/lua-nginx-module
export PATH=/path/to/your/nginx/sbin:$PATH
prove -I/path/to/test-nginx/lib -r t
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;To run specific test files:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;cd /path/to/lua-nginx-module
export PATH=/path/to/your/nginx/sbin:$PATH
prove -I/path/to/test-nginx/lib t/002-content.t t/003-errors.t
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;To run a specific test block in a particular test file, add the line &lt;code&gt;--- ONLY&lt;/code&gt; to the test block you want to run, and then use the &lt;code&gt;prove&lt;/code&gt; utility to run that &lt;code&gt;.t&lt;/code&gt; file.&lt;/p&gt;
&lt;p&gt;There are also various testing modes based on mockeagain, valgrind, and etc. Refer to the &lt;a href="https://search.cpan.org/perldoc?Test::Nginx" rel="nofollow"&gt;Test::Nginx documentation&lt;/a&gt; for more details for various advanced testing modes. See also the test reports for the Nginx test cluster running on Amazon EC2: &lt;a href="https://qa.openresty.org" rel="nofollow"&gt;https://qa.openresty.org&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;&lt;a href="#table-of-contents"&gt;Back to TOC&lt;/a&gt;&lt;/p&gt;
&lt;h1&gt;&lt;a id="user-content-copyright-and-license" class="anchor" aria-hidden="true" href="#copyright-and-license"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Copyright and License&lt;/h1&gt;
&lt;p&gt;This module is licensed under the BSD license.&lt;/p&gt;
&lt;p&gt;Copyright (C) 2009-2017, by Xiaozhe Wang (chaoslawful) &lt;a href="mailto:chaoslawful@gmail.com"&gt;chaoslawful@gmail.com&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Copyright (C) 2009-2019, by Yichun "agentzh" Zhang (章亦春) &lt;a href="mailto:agentzh@gmail.com"&gt;agentzh@gmail.com&lt;/a&gt;, OpenResty Inc.&lt;/p&gt;
&lt;p&gt;All rights reserved.&lt;/p&gt;
&lt;p&gt;Redistribution and use in source and binary forms, with or without modification, are permitted provided that the following conditions are met:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Redistributions of source code must retain the above copyright notice, this list of conditions and the following disclaimer.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Redistributions in binary form must reproduce the above copyright notice, this list of conditions and the following disclaimer in the documentation and/or other materials provided with the distribution.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.&lt;/p&gt;
&lt;p&gt;&lt;a href="#table-of-contents"&gt;Back to TOC&lt;/a&gt;&lt;/p&gt;
&lt;h1&gt;&lt;a id="user-content-see-also" class="anchor" aria-hidden="true" href="#see-also"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;See Also&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/openresty/stream-lua-nginx-module#readme"&gt;ngx_stream_lua_module&lt;/a&gt; for an official port of this module for the Nginx "stream" subsystem (doing generic downstream TCP communications).&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/openresty/lua-resty-memcached"&gt;lua-resty-memcached&lt;/a&gt; library based on ngx_lua cosocket.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/openresty/lua-resty-redis"&gt;lua-resty-redis&lt;/a&gt; library based on ngx_lua cosocket.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/openresty/lua-resty-mysql"&gt;lua-resty-mysql&lt;/a&gt; library based on ngx_lua cosocket.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/openresty/lua-resty-upload"&gt;lua-resty-upload&lt;/a&gt; library based on ngx_lua cosocket.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/openresty/lua-resty-dns"&gt;lua-resty-dns&lt;/a&gt; library based on ngx_lua cosocket.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/openresty/lua-resty-websocket"&gt;lua-resty-websocket&lt;/a&gt; library for both WebSocket server and client, based on ngx_lua cosocket.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/openresty/lua-resty-string"&gt;lua-resty-string&lt;/a&gt; library based on &lt;a href="https://luajit.org/ext_ffi.html" rel="nofollow"&gt;LuaJIT FFI&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/openresty/lua-resty-lock"&gt;lua-resty-lock&lt;/a&gt; library for a nonblocking simple lock API.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/cloudflare/lua-resty-cookie"&gt;lua-resty-cookie&lt;/a&gt; library for HTTP cookie manipulation.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://openresty.org/#RoutingMySQLQueriesBasedOnURIArgs" rel="nofollow"&gt;Routing requests to different MySQL queries based on URI arguments&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://openresty.org/#DynamicRoutingBasedOnRedis" rel="nofollow"&gt;Dynamic Routing Based on Redis and Lua&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://openresty.org/#UsingLuaRocks" rel="nofollow"&gt;Using LuaRocks with ngx_lua&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/openresty/lua-nginx-module/wiki/Introduction"&gt;Introduction to ngx_lua&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/simplresty/ngx_devel_kit"&gt;ngx_devel_kit&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://github.com/openresty/echo-nginx-module"&gt;echo-nginx-module&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://github.com/openresty/drizzle-nginx-module"&gt;drizzle-nginx-module&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/FRiCKLE/ngx_postgres"&gt;postgres-nginx-module&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://github.com/openresty/memc-nginx-module"&gt;memc-nginx-module&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://openresty.org" rel="nofollow"&gt;The OpenResty bundle&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/openresty/nginx-systemtap-toolkit"&gt;Nginx Systemtap Toolkit&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;a href="#table-of-contents"&gt;Back to TOC&lt;/a&gt;&lt;/p&gt;
&lt;h1&gt;&lt;a id="user-content-directives" class="anchor" aria-hidden="true" href="#directives"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Directives&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="#lua_load_resty_core"&gt;lua_load_resty_core&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#lua_capture_error_log"&gt;lua_capture_error_log&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#lua_use_default_type"&gt;lua_use_default_type&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#lua_malloc_trim"&gt;lua_malloc_trim&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#lua_code_cache"&gt;lua_code_cache&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#lua_regex_cache_max_entries"&gt;lua_regex_cache_max_entries&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#lua_regex_match_limit"&gt;lua_regex_match_limit&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#lua_package_path"&gt;lua_package_path&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#lua_package_cpath"&gt;lua_package_cpath&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#init_by_lua"&gt;init_by_lua&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#init_by_lua_block"&gt;init_by_lua_block&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#init_by_lua_file"&gt;init_by_lua_file&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#init_worker_by_lua"&gt;init_worker_by_lua&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#init_worker_by_lua_block"&gt;init_worker_by_lua_block&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#init_worker_by_lua_file"&gt;init_worker_by_lua_file&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#set_by_lua"&gt;set_by_lua&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#set_by_lua_block"&gt;set_by_lua_block&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#set_by_lua_file"&gt;set_by_lua_file&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#content_by_lua"&gt;content_by_lua&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#content_by_lua_block"&gt;content_by_lua_block&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#content_by_lua_file"&gt;content_by_lua_file&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#rewrite_by_lua"&gt;rewrite_by_lua&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#rewrite_by_lua_block"&gt;rewrite_by_lua_block&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#rewrite_by_lua_file"&gt;rewrite_by_lua_file&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#access_by_lua"&gt;access_by_lua&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#access_by_lua_block"&gt;access_by_lua_block&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#access_by_lua_file"&gt;access_by_lua_file&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#header_filter_by_lua"&gt;header_filter_by_lua&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#header_filter_by_lua_block"&gt;header_filter_by_lua_block&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#header_filter_by_lua_file"&gt;header_filter_by_lua_file&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#body_filter_by_lua"&gt;body_filter_by_lua&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#body_filter_by_lua_block"&gt;body_filter_by_lua_block&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#body_filter_by_lua_file"&gt;body_filter_by_lua_file&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#log_by_lua"&gt;log_by_lua&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#log_by_lua_block"&gt;log_by_lua_block&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#log_by_lua_file"&gt;log_by_lua_file&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#balancer_by_lua_block"&gt;balancer_by_lua_block&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#balancer_by_lua_file"&gt;balancer_by_lua_file&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#lua_need_request_body"&gt;lua_need_request_body&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#ssl_certificate_by_lua_block"&gt;ssl_certificate_by_lua_block&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#ssl_certificate_by_lua_file"&gt;ssl_certificate_by_lua_file&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#ssl_session_fetch_by_lua_block"&gt;ssl_session_fetch_by_lua_block&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#ssl_session_fetch_by_lua_file"&gt;ssl_session_fetch_by_lua_file&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#ssl_session_store_by_lua_block"&gt;ssl_session_store_by_lua_block&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#ssl_session_store_by_lua_file"&gt;ssl_session_store_by_lua_file&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#lua_shared_dict"&gt;lua_shared_dict&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#lua_socket_connect_timeout"&gt;lua_socket_connect_timeout&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#lua_socket_send_timeout"&gt;lua_socket_send_timeout&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#lua_socket_send_lowat"&gt;lua_socket_send_lowat&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#lua_socket_read_timeout"&gt;lua_socket_read_timeout&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#lua_socket_buffer_size"&gt;lua_socket_buffer_size&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#lua_socket_pool_size"&gt;lua_socket_pool_size&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#lua_socket_keepalive_timeout"&gt;lua_socket_keepalive_timeout&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#lua_socket_log_errors"&gt;lua_socket_log_errors&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#lua_ssl_ciphers"&gt;lua_ssl_ciphers&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#lua_ssl_crl"&gt;lua_ssl_crl&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#lua_ssl_protocols"&gt;lua_ssl_protocols&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#lua_ssl_trusted_certificate"&gt;lua_ssl_trusted_certificate&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#lua_ssl_verify_depth"&gt;lua_ssl_verify_depth&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#lua_http10_buffering"&gt;lua_http10_buffering&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#rewrite_by_lua_no_postpone"&gt;rewrite_by_lua_no_postpone&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#access_by_lua_no_postpone"&gt;access_by_lua_no_postpone&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#lua_transform_underscores_in_response_headers"&gt;lua_transform_underscores_in_response_headers&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#lua_check_client_abort"&gt;lua_check_client_abort&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#lua_max_pending_timers"&gt;lua_max_pending_timers&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#lua_max_running_timers"&gt;lua_max_running_timers&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#lua_sa_restart"&gt;lua_sa_restart&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;The basic building blocks of scripting Nginx with Lua are directives. Directives are used to specify when the user Lua code is run and
how the result will be used. Below is a diagram showing the order in which directives are executed.&lt;/p&gt;
&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="https://cloud.githubusercontent.com/assets/2137369/15272097/77d1c09e-1a37-11e6-97ef-d9767035fc3e.png"&gt;&lt;img src="https://cloud.githubusercontent.com/assets/2137369/15272097/77d1c09e-1a37-11e6-97ef-d9767035fc3e.png" alt="Lua Nginx Modules Directives" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href="#table-of-contents"&gt;Back to TOC&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-lua_load_resty_core" class="anchor" aria-hidden="true" href="#lua_load_resty_core"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;lua_load_resty_core&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;syntax:&lt;/strong&gt; &lt;em&gt;lua_load_resty_core on|off&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;default:&lt;/strong&gt; &lt;em&gt;lua_load_resty_core on&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;context:&lt;/strong&gt; &lt;em&gt;http&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;This directive is deprecated since the &lt;code&gt;v0.10.16&lt;/code&gt; release of this
module. The &lt;code&gt;resty.core&lt;/code&gt; module from
&lt;a href="https://github.com/openresty/lua-resty-core"&gt;lua-resty-core&lt;/a&gt; is now mandatorily
loaded during the Lua VM initialization. Specifying this directive will have no
effect.&lt;/p&gt;
&lt;p&gt;This directive was first introduced in the &lt;code&gt;v0.10.15&lt;/code&gt; release and
used to optionally load the &lt;code&gt;resty.core&lt;/code&gt; module.&lt;/p&gt;
&lt;p&gt;&lt;a href="#directives"&gt;Back to TOC&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-lua_capture_error_log" class="anchor" aria-hidden="true" href="#lua_capture_error_log"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;lua_capture_error_log&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;syntax:&lt;/strong&gt; &lt;em&gt;lua_capture_error_log size&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;default:&lt;/strong&gt; &lt;em&gt;none&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;context:&lt;/strong&gt; &lt;em&gt;http&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;Enables a buffer of the specified &lt;code&gt;size&lt;/code&gt; for capturing all the Nginx error log message data (not just those produced
by this module or the Nginx http subsystem, but everything) without touching files or disks.&lt;/p&gt;
&lt;p&gt;You can use units like &lt;code&gt;k&lt;/code&gt; and &lt;code&gt;m&lt;/code&gt; in the &lt;code&gt;size&lt;/code&gt; value, as in&lt;/p&gt;
&lt;div class="highlight highlight-source-nginx"&gt;&lt;pre&gt; &lt;span class="pl-k"&gt;lua_capture_error_log&lt;/span&gt; 100k;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;As a rule of thumb, a 4KB buffer can usually hold about 20 typical error log messages. So do the maths!&lt;/p&gt;
&lt;p&gt;This buffer never grows. If it is full, new error log messages will replace the oldest ones in the buffer.&lt;/p&gt;
&lt;p&gt;The size of the buffer must be bigger than the maximum length of a single error log message (which is 4K in OpenResty and 2K in stock NGINX).&lt;/p&gt;
&lt;p&gt;You can read the messages in the buffer on the Lua land via the
&lt;a href="https://github.com/openresty/lua-resty-core/blob/master/lib/ngx/errlog.md#get_logs"&gt;get_logs()&lt;/a&gt;
function of the
&lt;a href="https://github.com/openresty/lua-resty-core/blob/master/lib/ngx/errlog.md#readme"&gt;ngx.errlog&lt;/a&gt;
module of the &lt;a href="https://github.com/openresty/lua-resty-core/blob/master/lib/ngx/errlog.md#readme"&gt;lua-resty-core&lt;/a&gt;
library. This Lua API function will return the captured error log messages and
also remove these already read from the global capturing buffer, making room
for any new error log data. For this reason, the user should not configure this
buffer to be too big if the user read the buffered error log data fast enough.&lt;/p&gt;
&lt;p&gt;Note that the log level specified in the standard &lt;a href="https://nginx.org/r/error_log" rel="nofollow"&gt;error_log&lt;/a&gt; directive
&lt;em&gt;does&lt;/em&gt; have effect on this capturing facility. It only captures log
messages of a level no lower than the specified log level in the &lt;a href="https://nginx.org/r/error_log" rel="nofollow"&gt;error_log&lt;/a&gt; directive.
The user can still choose to set an even higher filtering log level on the fly via the Lua API function
&lt;a href="https://github.com/openresty/lua-resty-core/blob/master/lib/ngx/errlog.md#set_filter_level"&gt;errlog.set_filter_level&lt;/a&gt;.
So it is more flexible than the static &lt;a href="https://nginx.org/r/error_log" rel="nofollow"&gt;error_log&lt;/a&gt; directive.&lt;/p&gt;
&lt;p&gt;It is worth noting that there is no way to capture the debugging logs
without building OpenResty or Nginx with the &lt;code&gt;./configure&lt;/code&gt;
option &lt;code&gt;--with-debug&lt;/code&gt;. And enabling debugging logs is
strongly discouraged in production builds due to high overhead.&lt;/p&gt;
&lt;p&gt;This directive was first introduced in the &lt;code&gt;v0.10.9&lt;/code&gt; release.&lt;/p&gt;
&lt;p&gt;&lt;a href="#directives"&gt;Back to TOC&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-lua_use_default_type" class="anchor" aria-hidden="true" href="#lua_use_default_type"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;lua_use_default_type&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;syntax:&lt;/strong&gt; &lt;em&gt;lua_use_default_type on | off&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;default:&lt;/strong&gt; &lt;em&gt;lua_use_default_type on&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;context:&lt;/strong&gt; &lt;em&gt;http, server, location, location if&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;Specifies whether to use the MIME type specified by the &lt;a href="https://nginx.org/en/docs/http/ngx_http_core_module.html#default_type" rel="nofollow"&gt;default_type&lt;/a&gt; directive for the default value of the &lt;code&gt;Content-Type&lt;/code&gt; response header. Deactivate this directive if a default &lt;code&gt;Content-Type&lt;/code&gt; response header for Lua request handlers is not desired.&lt;/p&gt;
&lt;p&gt;This directive is turned on by default.&lt;/p&gt;
&lt;p&gt;This directive was first introduced in the &lt;code&gt;v0.9.1&lt;/code&gt; release.&lt;/p&gt;
&lt;p&gt;&lt;a href="#directives"&gt;Back to TOC&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-lua_malloc_trim" class="anchor" aria-hidden="true" href="#lua_malloc_trim"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;lua_malloc_trim&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;syntax:&lt;/strong&gt; &lt;em&gt;lua_malloc_trim &amp;lt;request-count&amp;gt;&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;default:&lt;/strong&gt; &lt;em&gt;lua_malloc_trim 1000&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;context:&lt;/strong&gt; &lt;em&gt;http&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;Asks the underlying &lt;code&gt;libc&lt;/code&gt; runtime library to release its cached free memory back to the operating system every
&lt;code&gt;N&lt;/code&gt; requests processed by the Nginx core. By default, &lt;code&gt;N&lt;/code&gt; is 1000. You can configure the request count
by using your own numbers. Smaller numbers mean more frequent releases, which may introduce higher CPU time consumption and
smaller memory footprint while larger numbers usually lead to less CPU time overhead and relatively larger memory footprint.
Just tune the number for your own use cases.&lt;/p&gt;
&lt;p&gt;Configuring the argument to &lt;code&gt;0&lt;/code&gt; essentially turns off the periodical memory trimming altogether.&lt;/p&gt;
&lt;div class="highlight highlight-source-nginx"&gt;&lt;pre&gt; &lt;span class="pl-k"&gt;lua_malloc_trim&lt;/span&gt; 0;  &lt;span class="pl-c"&gt;# turn off trimming completely&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;The current implementation uses an Nginx log phase handler to do the request counting. So the appearance of the
&lt;a href="https://nginx.org/en/docs/http/ngx_http_core_module.html#log_subrequest" rel="nofollow"&gt;log_subrequest on&lt;/a&gt; directives in &lt;code&gt;nginx.conf&lt;/code&gt;
may make the counting faster when subrequests are involved. By default, only "main requests" count.&lt;/p&gt;
&lt;p&gt;Note that this directive does &lt;em&gt;not&lt;/em&gt; affect the memory allocated by LuaJIT's own allocator based on the &lt;code&gt;mmap&lt;/code&gt;
system call.&lt;/p&gt;
&lt;p&gt;This directive was first introduced in the &lt;code&gt;v0.10.7&lt;/code&gt; release.&lt;/p&gt;
&lt;p&gt;&lt;a href="#directives"&gt;Back to TOC&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-lua_code_cache" class="anchor" aria-hidden="true" href="#lua_code_cache"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;lua_code_cache&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;syntax:&lt;/strong&gt; &lt;em&gt;lua_code_cache on | off&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;default:&lt;/strong&gt; &lt;em&gt;lua_code_cache on&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;context:&lt;/strong&gt; &lt;em&gt;http, server, location, location if&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;Enables or disables the Lua code cache for Lua code in &lt;code&gt;*_by_lua_file&lt;/code&gt; directives (like &lt;a href="#set_by_lua_file"&gt;set_by_lua_file&lt;/a&gt; and
&lt;a href="#content_by_lua_file"&gt;content_by_lua_file&lt;/a&gt;) and Lua modules.&lt;/p&gt;
&lt;p&gt;When turning off, every request served by ngx_lua will run in a separate Lua VM instance, starting from the &lt;code&gt;0.9.3&lt;/code&gt; release. So the Lua files referenced in &lt;a href="#set_by_lua_file"&gt;set_by_lua_file&lt;/a&gt;,
&lt;a href="#content_by_lua_file"&gt;content_by_lua_file&lt;/a&gt;, &lt;a href="#access_by_lua_file"&gt;access_by_lua_file&lt;/a&gt;,
and etc will not be cached
and all Lua modules used will be loaded from scratch. With this in place, developers can adopt an edit-and-refresh approach.&lt;/p&gt;
&lt;p&gt;Please note however, that Lua code written inlined within nginx.conf
such as those specified by &lt;a href="#set_by_lua"&gt;set_by_lua&lt;/a&gt;, &lt;a href="#content_by_lua"&gt;content_by_lua&lt;/a&gt;,
&lt;a href="#access_by_lua"&gt;access_by_lua&lt;/a&gt;, and &lt;a href="#rewrite_by_lua"&gt;rewrite_by_lua&lt;/a&gt; will not be updated when you edit the inlined Lua code in your &lt;code&gt;nginx.conf&lt;/code&gt; file because only the Nginx config file parser can correctly parse the &lt;code&gt;nginx.conf&lt;/code&gt;
file and the only way is to reload the config file
by sending a &lt;code&gt;HUP&lt;/code&gt; signal or just to restart Nginx.&lt;/p&gt;
&lt;p&gt;Even when the code cache is enabled, Lua files which are loaded by &lt;code&gt;dofile&lt;/code&gt; or &lt;code&gt;loadfile&lt;/code&gt;
in *_by_lua_file cannot be cached (unless you cache the results yourself). Usually you can either use the &lt;a href="#init_by_lua"&gt;init_by_lua&lt;/a&gt;
or &lt;a href="#init-by_lua_file"&gt;init_by_lua_file&lt;/a&gt; directives to load all such files or just make these Lua files true Lua modules
and load them via &lt;code&gt;require&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;The ngx_lua module does not support the &lt;code&gt;stat&lt;/code&gt; mode available with the
Apache &lt;code&gt;mod_lua&lt;/code&gt; module (yet).&lt;/p&gt;
&lt;p&gt;Disabling the Lua code cache is strongly
discouraged for production use and should only be used during
development as it has a significant negative impact on overall performance. For example, the performance of a "hello world" Lua example can drop by an order of magnitude after disabling the Lua code cache.&lt;/p&gt;
&lt;p&gt;&lt;a href="#directives"&gt;Back to TOC&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-lua_regex_cache_max_entries" class="anchor" aria-hidden="true" href="#lua_regex_cache_max_entries"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;lua_regex_cache_max_entries&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;syntax:&lt;/strong&gt; &lt;em&gt;lua_regex_cache_max_entries &amp;lt;num&amp;gt;&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;default:&lt;/strong&gt; &lt;em&gt;lua_regex_cache_max_entries 1024&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;context:&lt;/strong&gt; &lt;em&gt;http&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;Specifies the maximum number of entries allowed in the worker process level compiled regex cache.&lt;/p&gt;
&lt;p&gt;The regular expressions used in &lt;a href="#ngxrematch"&gt;ngx.re.match&lt;/a&gt;, &lt;a href="#ngxregmatch"&gt;ngx.re.gmatch&lt;/a&gt;, &lt;a href="#ngxresub"&gt;ngx.re.sub&lt;/a&gt;, and &lt;a href="#ngxregsub"&gt;ngx.re.gsub&lt;/a&gt; will be cached within this cache if the regex option &lt;code&gt;o&lt;/code&gt; (i.e., compile-once flag) is specified.&lt;/p&gt;
&lt;p&gt;The default number of entries allowed is 1024 and when this limit is reached, new regular expressions will not be cached (as if the &lt;code&gt;o&lt;/code&gt; option was not specified) and there will be one, and only one, warning in the &lt;code&gt;error.log&lt;/code&gt; file:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;2011/08/27 23:18:26 [warn] 31997#0: *1 lua exceeding regex cache max entries (1024), ...
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;If you are using the &lt;code&gt;ngx.re.*&lt;/code&gt; implementation of &lt;a href="https://github.com/openresty/lua-resty-core"&gt;lua-resty-core&lt;/a&gt; by loading the &lt;code&gt;resty.core.regex&lt;/code&gt; module (or just the &lt;code&gt;resty.core&lt;/code&gt; module), then an LRU cache is used for the regex cache being used here.&lt;/p&gt;
&lt;p&gt;Do not activate the &lt;code&gt;o&lt;/code&gt; option for regular expressions (and/or &lt;code&gt;replace&lt;/code&gt; string arguments for &lt;a href="#ngxresub"&gt;ngx.re.sub&lt;/a&gt; and &lt;a href="#ngxregsub"&gt;ngx.re.gsub&lt;/a&gt;) that are generated &lt;em&gt;on the fly&lt;/em&gt; and give rise to infinite variations to avoid hitting the specified limit.&lt;/p&gt;
&lt;p&gt;&lt;a href="#directives"&gt;Back to TOC&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-lua_regex_match_limit" class="anchor" aria-hidden="true" href="#lua_regex_match_limit"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;lua_regex_match_limit&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;syntax:&lt;/strong&gt; &lt;em&gt;lua_regex_match_limit &amp;lt;num&amp;gt;&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;default:&lt;/strong&gt; &lt;em&gt;lua_regex_match_limit 0&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;context:&lt;/strong&gt; &lt;em&gt;http&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;Specifies the "match limit" used by the PCRE library when executing the &lt;a href="#ngxrematch"&gt;ngx.re API&lt;/a&gt;. To quote the PCRE manpage, "the limit ... has the effect of limiting the amount of backtracking that can take place."&lt;/p&gt;
&lt;p&gt;When the limit is hit, the error string "pcre_exec() failed: -8" will be returned by the &lt;a href="#ngxrematch"&gt;ngx.re API&lt;/a&gt; functions on the Lua land.&lt;/p&gt;
&lt;p&gt;When setting the limit to 0, the default "match limit" when compiling the PCRE library is used. And this is the default value of this directive.&lt;/p&gt;
&lt;p&gt;This directive was first introduced in the &lt;code&gt;v0.8.5&lt;/code&gt; release.&lt;/p&gt;
&lt;p&gt;&lt;a href="#directives"&gt;Back to TOC&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-lua_package_path" class="anchor" aria-hidden="true" href="#lua_package_path"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;lua_package_path&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;syntax:&lt;/strong&gt; &lt;em&gt;lua_package_path &amp;lt;lua-style-path-str&amp;gt;&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;default:&lt;/strong&gt; &lt;em&gt;The content of LUA_PATH environment variable or Lua's compiled-in defaults.&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;context:&lt;/strong&gt; &lt;em&gt;http&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;Sets the Lua module search path used by scripts specified by &lt;a href="#set_by_lua"&gt;set_by_lua&lt;/a&gt;,
&lt;a href="#content_by_lua"&gt;content_by_lua&lt;/a&gt; and others. The path string is in standard Lua path form, and &lt;code&gt;;;&lt;/code&gt;
can be used to stand for the original search paths.&lt;/p&gt;
&lt;p&gt;As from the &lt;code&gt;v0.5.0rc29&lt;/code&gt; release, the special notation &lt;code&gt;$prefix&lt;/code&gt; or &lt;code&gt;${prefix}&lt;/code&gt; can be used in the search path string to indicate the path of the &lt;code&gt;server prefix&lt;/code&gt; usually determined by the &lt;code&gt;-p PATH&lt;/code&gt; command-line option while starting the Nginx server.&lt;/p&gt;
&lt;p&gt;&lt;a href="#directives"&gt;Back to TOC&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-lua_package_cpath" class="anchor" aria-hidden="true" href="#lua_package_cpath"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;lua_package_cpath&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;syntax:&lt;/strong&gt; &lt;em&gt;lua_package_cpath &amp;lt;lua-style-cpath-str&amp;gt;&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;default:&lt;/strong&gt; &lt;em&gt;The content of LUA_CPATH environment variable or Lua's compiled-in defaults.&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;context:&lt;/strong&gt; &lt;em&gt;http&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;Sets the Lua C-module search path used by scripts specified by &lt;a href="#set_by_lua"&gt;set_by_lua&lt;/a&gt;,
&lt;a href="#content_by_lua"&gt;content_by_lua&lt;/a&gt; and others. The cpath string is in standard Lua cpath form, and &lt;code&gt;;;&lt;/code&gt;
can be used to stand for the original cpath.&lt;/p&gt;
&lt;p&gt;As from the &lt;code&gt;v0.5.0rc29&lt;/code&gt; release, the special notation &lt;code&gt;$prefix&lt;/code&gt; or &lt;code&gt;${prefix}&lt;/code&gt; can be used in the search path string to indicate the path of the &lt;code&gt;server prefix&lt;/code&gt; usually determined by the &lt;code&gt;-p PATH&lt;/code&gt; command-line option while starting the Nginx server.&lt;/p&gt;
&lt;p&gt;&lt;a href="#directives"&gt;Back to TOC&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-init_by_lua" class="anchor" aria-hidden="true" href="#init_by_lua"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;init_by_lua&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;syntax:&lt;/strong&gt; &lt;em&gt;init_by_lua &amp;lt;lua-script-str&amp;gt;&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;context:&lt;/strong&gt; &lt;em&gt;http&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;phase:&lt;/strong&gt; &lt;em&gt;loading-config&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;NOTE&lt;/strong&gt; Use of this directive is &lt;em&gt;discouraged&lt;/em&gt; following the &lt;code&gt;v0.9.17&lt;/code&gt; release. Use the &lt;a href="#init_by_lua_block"&gt;init_by_lua_block&lt;/a&gt; directive instead.&lt;/p&gt;
&lt;p&gt;Runs the Lua code specified by the argument &lt;code&gt;&amp;lt;lua-script-str&amp;gt;&lt;/code&gt; on the global Lua VM level when the Nginx master process (if any) is loading the Nginx config file.&lt;/p&gt;
&lt;p&gt;When Nginx receives the &lt;code&gt;HUP&lt;/code&gt; signal and starts reloading the config file, the Lua VM will also be re-created and &lt;code&gt;init_by_lua&lt;/code&gt; will run again on the new Lua VM. In case that the &lt;a href="#lua_code_cache"&gt;lua_code_cache&lt;/a&gt; directive is turned off (default on), the &lt;code&gt;init_by_lua&lt;/code&gt; handler will run upon every request because in this special mode a standalone Lua VM is always created for each request.&lt;/p&gt;
&lt;p&gt;Usually you can pre-load Lua modules at server start-up by means of this hook and take advantage of modern operating systems' copy-on-write (COW) optimization. Here is an example for pre-loading Lua modules:&lt;/p&gt;
&lt;div class="highlight highlight-source-nginx"&gt;&lt;pre&gt; &lt;span class="pl-c"&gt;# this runs before forking out nginx worker processes:&lt;/span&gt;
 &lt;span class="pl-k"&gt;init_by_lua_block&lt;/span&gt; { require &lt;span class="pl-s"&gt;"cjson"&lt;/span&gt; }

 &lt;span class="pl-k"&gt;server&lt;/span&gt; {
     &lt;span class="pl-k"&gt;location&lt;/span&gt; &lt;span class="pl-en"&gt;= /api &lt;/span&gt;{
         &lt;span class="pl-k"&gt;content_by_lua_block&lt;/span&gt; {
             -- &lt;span class="pl-k"&gt;the&lt;/span&gt; following require() will just  return
             -- &lt;span class="pl-k"&gt;the&lt;/span&gt; alrady loaded module from package.loaded:
             ngx.say(&lt;span class="pl-k"&gt;require&lt;/span&gt; &lt;span class="pl-s"&gt;"cjson"&lt;/span&gt;.encode{dog = 5, cat = 6})
         }
     }
 }&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;You can also initialize the &lt;a href="#lua_shared_dict"&gt;lua_shared_dict&lt;/a&gt; shm storage at this phase. Here is an example for this:&lt;/p&gt;
&lt;div class="highlight highlight-source-nginx"&gt;&lt;pre&gt; &lt;span class="pl-k"&gt;lua_shared_dict&lt;/span&gt; dogs &lt;span class="pl-c1"&gt;1m&lt;/span&gt;;

 &lt;span class="pl-k"&gt;init_by_lua_block&lt;/span&gt; {
     &lt;span class="pl-k"&gt;local&lt;/span&gt; dogs = ngx.shared.dogs;
     dogs:&lt;span class="pl-k"&gt;set&lt;/span&gt;(&lt;span class="pl-s"&gt;"Tom"&lt;/span&gt;, 56)
 }

 server {
     location = /api {
         content_by_lua_block {
             local dogs = ngx.shared.dogs;
             ngx.say(dogs:get("Tom"))
         }
     }
 }&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;But note that, the &lt;a href="#lua_shared_dict"&gt;lua_shared_dict&lt;/a&gt;'s shm storage will not be cleared through a config reload (via the &lt;code&gt;HUP&lt;/code&gt; signal, for example). So if you do &lt;em&gt;not&lt;/em&gt; want to re-initialize the shm storage in your &lt;code&gt;init_by_lua&lt;/code&gt; code in this case, then you just need to set a custom flag in the shm storage and always check the flag in your &lt;code&gt;init_by_lua&lt;/code&gt; code.&lt;/p&gt;
&lt;p&gt;Because the Lua code in this context runs before Nginx forks its worker processes (if any), data or code loaded here will enjoy the &lt;a href="https://en.wikipedia.org/wiki/Copy-on-write" rel="nofollow"&gt;Copy-on-write (COW)&lt;/a&gt; feature provided by many operating systems among all the worker processes, thus saving a lot of memory.&lt;/p&gt;
&lt;p&gt;Do &lt;em&gt;not&lt;/em&gt; initialize your own Lua global variables in this context because use of Lua global variables have performance penalties and can lead to global namespace pollution (see the &lt;a href="#lua-variable-scope"&gt;Lua Variable Scope&lt;/a&gt; section for more details). The recommended way is to use proper &lt;a href="https://www.lua.org/manual/5.1/manual.html#5.3" rel="nofollow"&gt;Lua module&lt;/a&gt; files (but do not use the standard Lua function &lt;a href="https://www.lua.org/manual/5.1/manual.html#pdf-module" rel="nofollow"&gt;module()&lt;/a&gt; to define Lua modules because it pollutes the global namespace as well) and call &lt;a href="https://www.lua.org/manual/5.1/manual.html#pdf-require" rel="nofollow"&gt;require()&lt;/a&gt; to load your own module files in &lt;code&gt;init_by_lua&lt;/code&gt; or other contexts (&lt;a href="https://www.lua.org/manual/5.1/manual.html#pdf-require" rel="nofollow"&gt;require()&lt;/a&gt; does cache the loaded Lua modules in the global &lt;code&gt;package.loaded&lt;/code&gt; table in the Lua registry so your modules will only loaded once for the whole Lua VM instance).&lt;/p&gt;
&lt;p&gt;Only a small set of the &lt;a href="#nginx-api-for-lua"&gt;Nginx API for Lua&lt;/a&gt; is supported in this context:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Logging APIs: &lt;a href="#ngxlog"&gt;ngx.log&lt;/a&gt; and &lt;a href="#print"&gt;print&lt;/a&gt;,&lt;/li&gt;
&lt;li&gt;Shared Dictionary API: &lt;a href="#ngxshareddict"&gt;ngx.shared.DICT&lt;/a&gt;.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;More Nginx APIs for Lua may be supported in this context upon future user requests.&lt;/p&gt;
&lt;p&gt;Basically you can safely use Lua libraries that do blocking I/O in this very context because blocking the master process during server start-up is completely okay. Even the Nginx core does blocking I/O (at least on resolving upstream's host names) at the configure-loading phase.&lt;/p&gt;
&lt;p&gt;You should be very careful about potential security vulnerabilities in your Lua code registered in this context because the Nginx master process is often run under the &lt;code&gt;root&lt;/code&gt; account.&lt;/p&gt;
&lt;p&gt;This directive was first introduced in the &lt;code&gt;v0.5.5&lt;/code&gt; release.&lt;/p&gt;
&lt;p&gt;&lt;a href="#directives"&gt;Back to TOC&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-init_by_lua_block" class="anchor" aria-hidden="true" href="#init_by_lua_block"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;init_by_lua_block&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;syntax:&lt;/strong&gt; &lt;em&gt;init_by_lua_block { lua-script }&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;context:&lt;/strong&gt; &lt;em&gt;http&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;phase:&lt;/strong&gt; &lt;em&gt;loading-config&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;Similar to the &lt;a href="#init_by_lua"&gt;init_by_lua&lt;/a&gt; directive except that this directive inlines
the Lua source directly
inside a pair of curly braces (&lt;code&gt;{}&lt;/code&gt;) instead of in an Nginx string literal (which requires
special character escaping).&lt;/p&gt;
&lt;p&gt;For instance,&lt;/p&gt;
&lt;div class="highlight highlight-source-nginx"&gt;&lt;pre&gt; &lt;span class="pl-k"&gt;init_by_lua_block&lt;/span&gt; {
     print("&lt;span class="pl-k"&gt;I&lt;/span&gt; need no extra escaping here, for example: \r\nblah&lt;span class="pl-s"&gt;")&lt;/span&gt;
&lt;span class="pl-s"&gt; }&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;This directive was first introduced in the &lt;code&gt;v0.9.17&lt;/code&gt; release.&lt;/p&gt;
&lt;p&gt;&lt;a href="#directives"&gt;Back to TOC&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-init_by_lua_file" class="anchor" aria-hidden="true" href="#init_by_lua_file"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;init_by_lua_file&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;syntax:&lt;/strong&gt; &lt;em&gt;init_by_lua_file &amp;lt;path-to-lua-script-file&amp;gt;&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;context:&lt;/strong&gt; &lt;em&gt;http&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;phase:&lt;/strong&gt; &lt;em&gt;loading-config&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;Equivalent to &lt;a href="#init_by_lua"&gt;init_by_lua&lt;/a&gt;, except that the file specified by &lt;code&gt;&amp;lt;path-to-lua-script-file&amp;gt;&lt;/code&gt; contains the Lua code or &lt;a href="#luajit-bytecode-support"&gt;LuaJIT bytecode&lt;/a&gt; to be executed.&lt;/p&gt;
&lt;p&gt;When a relative path like &lt;code&gt;foo/bar.lua&lt;/code&gt; is given, they will be turned into the absolute path relative to the &lt;code&gt;server prefix&lt;/code&gt; path determined by the &lt;code&gt;-p PATH&lt;/code&gt; command-line option while starting the Nginx server.&lt;/p&gt;
&lt;p&gt;This directive was first introduced in the &lt;code&gt;v0.5.5&lt;/code&gt; release.&lt;/p&gt;
&lt;p&gt;&lt;a href="#directives"&gt;Back to TOC&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-init_worker_by_lua" class="anchor" aria-hidden="true" href="#init_worker_by_lua"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;init_worker_by_lua&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;syntax:&lt;/strong&gt; &lt;em&gt;init_worker_by_lua &amp;lt;lua-script-str&amp;gt;&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;context:&lt;/strong&gt; &lt;em&gt;http&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;phase:&lt;/strong&gt; &lt;em&gt;starting-worker&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;NOTE&lt;/strong&gt; Use of this directive is &lt;em&gt;discouraged&lt;/em&gt; following the &lt;code&gt;v0.9.17&lt;/code&gt; release. Use the &lt;a href="#init_worker_by_lua_block"&gt;init_worker_by_lua_block&lt;/a&gt; directive instead.&lt;/p&gt;
&lt;p&gt;Runs the specified Lua code upon every Nginx worker process's startup when the master process is enabled. When the master process is disabled, this hook will just run after &lt;a href="#init_by_lua"&gt;init_by_lua*&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;This hook is often used to create per-worker reoccurring timers (via the &lt;a href="#ngxtimerat"&gt;ngx.timer.at&lt;/a&gt; Lua API), either for backend health-check or other timed routine work. Below is an example,&lt;/p&gt;
&lt;div class="highlight highlight-source-nginx"&gt;&lt;pre&gt; &lt;span class="pl-k"&gt;init_worker_by_lua&lt;/span&gt; &lt;span class="pl-s"&gt;'&lt;/span&gt;
&lt;span class="pl-s"&gt;     local delay = 3  -- in seconds&lt;/span&gt;
&lt;span class="pl-s"&gt;     local new_timer = ngx.timer.at&lt;/span&gt;
&lt;span class="pl-s"&gt;     local log = ngx.log&lt;/span&gt;
&lt;span class="pl-s"&gt;     local ERR = ngx.ERR&lt;/span&gt;
&lt;span class="pl-s"&gt;     local check&lt;/span&gt;
&lt;span class="pl-s"&gt;&lt;/span&gt;
&lt;span class="pl-s"&gt;     check = function(premature)&lt;/span&gt;
&lt;span class="pl-s"&gt;         if not premature then&lt;/span&gt;
&lt;span class="pl-s"&gt;             -- do the health check or other routine work&lt;/span&gt;
&lt;span class="pl-s"&gt;             local ok, err = new_timer(delay, check)&lt;/span&gt;
&lt;span class="pl-s"&gt;             if not ok then&lt;/span&gt;
&lt;span class="pl-s"&gt;                 log(ERR, "failed to create timer: ", err)&lt;/span&gt;
&lt;span class="pl-s"&gt;                 return&lt;/span&gt;
&lt;span class="pl-s"&gt;             end&lt;/span&gt;
&lt;span class="pl-s"&gt;         end&lt;/span&gt;
&lt;span class="pl-s"&gt;     end&lt;/span&gt;
&lt;span class="pl-s"&gt;&lt;/span&gt;
&lt;span class="pl-s"&gt;     local hdl, err = new_timer(delay, check)&lt;/span&gt;
&lt;span class="pl-s"&gt;     if not hdl then&lt;/span&gt;
&lt;span class="pl-s"&gt;         log(ERR, "failed to create timer: ", err)&lt;/span&gt;
&lt;span class="pl-s"&gt;         return&lt;/span&gt;
&lt;span class="pl-s"&gt;     end&lt;/span&gt;
&lt;span class="pl-s"&gt; '&lt;/span&gt;;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;This directive was first introduced in the &lt;code&gt;v0.9.5&lt;/code&gt; release.&lt;/p&gt;
&lt;p&gt;This hook no longer runs in the cache manager and cache loader processes since the &lt;code&gt;v0.10.12&lt;/code&gt; release.&lt;/p&gt;
&lt;p&gt;&lt;a href="#directives"&gt;Back to TOC&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-init_worker_by_lua_block" class="anchor" aria-hidden="true" href="#init_worker_by_lua_block"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;init_worker_by_lua_block&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;syntax:&lt;/strong&gt; &lt;em&gt;init_worker_by_lua_block { lua-script }&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;context:&lt;/strong&gt; &lt;em&gt;http&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;phase:&lt;/strong&gt; &lt;em&gt;starting-worker&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;Similar to the &lt;a href="#init_worker_by_lua"&gt;init_worker_by_lua&lt;/a&gt; directive except that this directive inlines
the Lua source directly
inside a pair of curly braces (&lt;code&gt;{}&lt;/code&gt;) instead of in an Nginx string literal (which requires
special character escaping).&lt;/p&gt;
&lt;p&gt;For instance,&lt;/p&gt;
&lt;div class="highlight highlight-source-nginx"&gt;&lt;pre&gt; &lt;span class="pl-k"&gt;init_worker_by_lua_block&lt;/span&gt; {
     print("&lt;span class="pl-k"&gt;I&lt;/span&gt; need no extra escaping here, for example: \r\nblah&lt;span class="pl-s"&gt;")&lt;/span&gt;
&lt;span class="pl-s"&gt; }&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;This directive was first introduced in the &lt;code&gt;v0.9.17&lt;/code&gt; release.&lt;/p&gt;
&lt;p&gt;This hook no longer runs in the cache manager and cache loader processes since the &lt;code&gt;v0.10.12&lt;/code&gt; release.&lt;/p&gt;
&lt;p&gt;&lt;a href="#directives"&gt;Back to TOC&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-init_worker_by_lua_file" class="anchor" aria-hidden="true" href="#init_worker_by_lua_file"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;init_worker_by_lua_file&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;syntax:&lt;/strong&gt; &lt;em&gt;init_worker_by_lua_file &amp;lt;lua-file-path&amp;gt;&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;context:&lt;/strong&gt; &lt;em&gt;http&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;phase:&lt;/strong&gt; &lt;em&gt;starting-worker&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;Similar to &lt;a href="#init_worker_by_lua"&gt;init_worker_by_lua&lt;/a&gt;, but accepts the file path to a Lua source file or Lua bytecode file.&lt;/p&gt;
&lt;p&gt;This directive was first introduced in the &lt;code&gt;v0.9.5&lt;/code&gt; release.&lt;/p&gt;
&lt;p&gt;This hook no longer runs in the cache manager and cache loader processes since the &lt;code&gt;v0.10.12&lt;/code&gt; release.&lt;/p&gt;
&lt;p&gt;&lt;a href="#directives"&gt;Back to TOC&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-set_by_lua" class="anchor" aria-hidden="true" href="#set_by_lua"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;set_by_lua&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;syntax:&lt;/strong&gt; &lt;em&gt;set_by_lua $res &amp;lt;lua-script-str&amp;gt; [$arg1 $arg2 ...]&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;context:&lt;/strong&gt; &lt;em&gt;server, server if, location, location if&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;phase:&lt;/strong&gt; &lt;em&gt;rewrite&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;NOTE&lt;/strong&gt; Use of this directive is &lt;em&gt;discouraged&lt;/em&gt; following the &lt;code&gt;v0.9.17&lt;/code&gt; release. Use the &lt;a href="#set_by_lua_block"&gt;set_by_lua_block&lt;/a&gt; directive instead.&lt;/p&gt;
&lt;p&gt;Executes code specified in &lt;code&gt;&amp;lt;lua-script-str&amp;gt;&lt;/code&gt; with optional input arguments &lt;code&gt;$arg1 $arg2 ...&lt;/code&gt;, and returns string output to &lt;code&gt;$res&lt;/code&gt;.
The code in &lt;code&gt;&amp;lt;lua-script-str&amp;gt;&lt;/code&gt; can make &lt;a href="#nginx-api-for-lua"&gt;API calls&lt;/a&gt; and can retrieve input arguments from the &lt;code&gt;ngx.arg&lt;/code&gt; table (index starts from &lt;code&gt;1&lt;/code&gt; and increases sequentially).&lt;/p&gt;
&lt;p&gt;This directive is designed to execute short, fast running code blocks as the Nginx event loop is blocked during code execution. Time consuming code sequences should therefore be avoided.&lt;/p&gt;
&lt;p&gt;This directive is implemented by injecting custom commands into the standard &lt;a href="http://nginx.org/en/docs/http/ngx_http_rewrite_module.html" rel="nofollow"&gt;ngx_http_rewrite_module&lt;/a&gt;'s command list. Because &lt;a href="http://nginx.org/en/docs/http/ngx_http_rewrite_module.html" rel="nofollow"&gt;ngx_http_rewrite_module&lt;/a&gt; does not support nonblocking I/O in its commands, Lua APIs requiring yielding the current Lua "light thread" cannot work in this directive.&lt;/p&gt;
&lt;p&gt;At least the following API functions are currently disabled within the context of &lt;code&gt;set_by_lua&lt;/code&gt;:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Output API functions (e.g., &lt;a href="#ngxsay"&gt;ngx.say&lt;/a&gt; and &lt;a href="#ngxsend_headers"&gt;ngx.send_headers&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;Control API functions (e.g., &lt;a href="#ngxexit"&gt;ngx.exit&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;Subrequest API functions (e.g., &lt;a href="#ngxlocationcapture"&gt;ngx.location.capture&lt;/a&gt; and &lt;a href="#ngxlocationcapture_multi"&gt;ngx.location.capture_multi&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;Cosocket API functions (e.g., &lt;a href="#ngxsockettcp"&gt;ngx.socket.tcp&lt;/a&gt; and &lt;a href="#ngxreqsocket"&gt;ngx.req.socket&lt;/a&gt;).&lt;/li&gt;
&lt;li&gt;Sleeping API function &lt;a href="#ngxsleep"&gt;ngx.sleep&lt;/a&gt;.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;In addition, note that this directive can only write out a value to a single Nginx variable at
a time. However, a workaround is possible using the &lt;a href="#ngxvarvariable"&gt;ngx.var.VARIABLE&lt;/a&gt; interface.&lt;/p&gt;
&lt;div class="highlight highlight-source-nginx"&gt;&lt;pre&gt; &lt;span class="pl-k"&gt;location&lt;/span&gt; &lt;span class="pl-en"&gt;/foo &lt;/span&gt;{
     &lt;span class="pl-k"&gt;set&lt;/span&gt; &lt;span class="pl-smi"&gt;$diff&lt;/span&gt; &lt;span class="pl-s"&gt;''&lt;/span&gt;; &lt;span class="pl-c"&gt;# we have to predefine the $diff variable here&lt;/span&gt;

     &lt;span class="pl-k"&gt;set_by_lua&lt;/span&gt; &lt;span class="pl-smi"&gt;$sum&lt;/span&gt; &lt;span class="pl-s"&gt;'&lt;/span&gt;
&lt;span class="pl-s"&gt;         local a = 32&lt;/span&gt;
&lt;span class="pl-s"&gt;         local b = 56&lt;/span&gt;
&lt;span class="pl-s"&gt;&lt;/span&gt;
&lt;span class="pl-s"&gt;         ngx.var.diff = a - b;  -- write to &lt;span class="pl-smi"&gt;$diff&lt;/span&gt; directly&lt;/span&gt;
&lt;span class="pl-s"&gt;         return a + b;          -- return the &lt;span class="pl-smi"&gt;$sum&lt;/span&gt; value normally&lt;/span&gt;
&lt;span class="pl-s"&gt;     '&lt;/span&gt;;

     &lt;span class="pl-k"&gt;echo&lt;/span&gt; &lt;span class="pl-s"&gt;"sum = &lt;span class="pl-smi"&gt;$sum&lt;/span&gt;, diff = &lt;span class="pl-smi"&gt;$diff&lt;/span&gt;"&lt;/span&gt;;
 }&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;This directive can be freely mixed with all directives of the &lt;a href="http://nginx.org/en/docs/http/ngx_http_rewrite_module.html" rel="nofollow"&gt;ngx_http_rewrite_module&lt;/a&gt;, &lt;a href="http://github.com/openresty/set-misc-nginx-module"&gt;set-misc-nginx-module&lt;/a&gt;, and &lt;a href="http://github.com/openresty/array-var-nginx-module"&gt;array-var-nginx-module&lt;/a&gt; modules. All of these directives will run in the same order as they appear in the config file.&lt;/p&gt;
&lt;div class="highlight highlight-source-nginx"&gt;&lt;pre&gt; &lt;span class="pl-k"&gt;set&lt;/span&gt; &lt;span class="pl-smi"&gt;$foo&lt;/span&gt; &lt;span class="pl-s"&gt;32&lt;/span&gt;;
 &lt;span class="pl-k"&gt;set_by_lua&lt;/span&gt; &lt;span class="pl-smi"&gt;$bar&lt;/span&gt; &lt;span class="pl-s"&gt;'return tonumber(ngx.var.foo) + 1'&lt;/span&gt;;
 &lt;span class="pl-k"&gt;set&lt;/span&gt; &lt;span class="pl-smi"&gt;$baz&lt;/span&gt; &lt;span class="pl-s"&gt;"bar: &lt;span class="pl-smi"&gt;$bar&lt;/span&gt;"&lt;/span&gt;;  &lt;span class="pl-c"&gt;# $baz == "bar: 33"&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;As from the &lt;code&gt;v0.5.0rc29&lt;/code&gt; release, Nginx variable interpolation is disabled in the &lt;code&gt;&amp;lt;lua-script-str&amp;gt;&lt;/code&gt; argument of this directive and therefore, the dollar sign character (&lt;code&gt;$&lt;/code&gt;) can be used directly.&lt;/p&gt;
&lt;p&gt;This directive requires the &lt;a href="https://github.com/simplresty/ngx_devel_kit"&gt;ngx_devel_kit&lt;/a&gt; module.&lt;/p&gt;
&lt;p&gt;&lt;a href="#directives"&gt;Back to TOC&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-set_by_lua_block" class="anchor" aria-hidden="true" href="#set_by_lua_block"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;set_by_lua_block&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;syntax:&lt;/strong&gt; &lt;em&gt;set_by_lua_block $res { lua-script }&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;context:&lt;/strong&gt; &lt;em&gt;server, server if, location, location if&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;phase:&lt;/strong&gt; &lt;em&gt;rewrite&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;Similar to the &lt;a href="#set_by_lua"&gt;set_by_lua&lt;/a&gt; directive except that&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;this directive inlines the Lua source directly
inside a pair of curly braces (&lt;code&gt;{}&lt;/code&gt;) instead of in an Nginx string literal (which requires
special character escaping), and&lt;/li&gt;
&lt;li&gt;this directive does not support extra arguments after the Lua script as in &lt;a href="#set_by_lua"&gt;set_by_lua&lt;/a&gt;.&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;For example,&lt;/p&gt;
&lt;div class="highlight highlight-source-nginx"&gt;&lt;pre&gt; &lt;span class="pl-k"&gt;set_by_lua_block&lt;/span&gt; &lt;span class="pl-smi"&gt;$res&lt;/span&gt; { return &lt;span class="pl-s"&gt;32&lt;/span&gt; + math.cos(32) }
 &lt;span class="pl-c"&gt;# $res now has the value "32.834223360507" or alike.&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;No special escaping is required in the Lua code block.&lt;/p&gt;
&lt;p&gt;This directive was first introduced in the &lt;code&gt;v0.9.17&lt;/code&gt; release.&lt;/p&gt;
&lt;p&gt;&lt;a href="#directives"&gt;Back to TOC&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-set_by_lua_file" class="anchor" aria-hidden="true" href="#set_by_lua_file"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;set_by_lua_file&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;syntax:&lt;/strong&gt; &lt;em&gt;set_by_lua_file $res &amp;lt;path-to-lua-script-file&amp;gt; [$arg1 $arg2 ...]&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;context:&lt;/strong&gt; &lt;em&gt;server, server if, location, location if&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;phase:&lt;/strong&gt; &lt;em&gt;rewrite&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;Equivalent to &lt;a href="#set_by_lua"&gt;set_by_lua&lt;/a&gt;, except that the file specified by &lt;code&gt;&amp;lt;path-to-lua-script-file&amp;gt;&lt;/code&gt; contains the Lua code, or, as from the &lt;code&gt;v0.5.0rc32&lt;/code&gt; release, the &lt;a href="#luajit-bytecode-support"&gt;LuaJIT bytecode&lt;/a&gt; to be executed.&lt;/p&gt;
&lt;p&gt;Nginx variable interpolation is supported in the &lt;code&gt;&amp;lt;path-to-lua-script-file&amp;gt;&lt;/code&gt; argument string of this directive. But special care must be taken for injection attacks.&lt;/p&gt;
&lt;p&gt;When a relative path like &lt;code&gt;foo/bar.lua&lt;/code&gt; is given, they will be turned into the absolute path relative to the &lt;code&gt;server prefix&lt;/code&gt; path determined by the &lt;code&gt;-p PATH&lt;/code&gt; command-line option while starting the Nginx server.&lt;/p&gt;
&lt;p&gt;When the Lua code cache is turned on (by default), the user code is loaded once at the first request and cached
and the Nginx config must be reloaded each time the Lua source file is modified.
The Lua code cache can be temporarily disabled during development by
switching &lt;a href="#lua_code_cache"&gt;lua_code_cache&lt;/a&gt; &lt;code&gt;off&lt;/code&gt; in &lt;code&gt;nginx.conf&lt;/code&gt; to avoid reloading Nginx.&lt;/p&gt;
&lt;p&gt;This directive requires the &lt;a href="https://github.com/simplresty/ngx_devel_kit"&gt;ngx_devel_kit&lt;/a&gt; module.&lt;/p&gt;
&lt;p&gt;&lt;a href="#directives"&gt;Back to TOC&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-content_by_lua" class="anchor" aria-hidden="true" href="#content_by_lua"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;content_by_lua&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;syntax:&lt;/strong&gt; &lt;em&gt;content_by_lua &amp;lt;lua-script-str&amp;gt;&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;context:&lt;/strong&gt; &lt;em&gt;location, location if&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;phase:&lt;/strong&gt; &lt;em&gt;content&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;NOTE&lt;/strong&gt; Use of this directive is &lt;em&gt;discouraged&lt;/em&gt; following the &lt;code&gt;v0.9.17&lt;/code&gt; release. Use the &lt;a href="#content_by_lua_block"&gt;content_by_lua_block&lt;/a&gt; directive instead.&lt;/p&gt;
&lt;p&gt;Acts as a "content handler" and executes Lua code string specified in &lt;code&gt;&amp;lt;lua-script-str&amp;gt;&lt;/code&gt; for every request.
The Lua code may make &lt;a href="#nginx-api-for-lua"&gt;API calls&lt;/a&gt; and is executed as a new spawned coroutine in an independent global environment (i.e. a sandbox).&lt;/p&gt;
&lt;p&gt;Do not use this directive and other content handler directives in the same location. For example, this directive and the &lt;a href="http://nginx.org/en/docs/http/ngx_http_proxy_module.html#proxy_pass" rel="nofollow"&gt;proxy_pass&lt;/a&gt; directive should not be used in the same location.&lt;/p&gt;
&lt;p&gt;&lt;a href="#directives"&gt;Back to TOC&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-content_by_lua_block" class="anchor" aria-hidden="true" href="#content_by_lua_block"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;content_by_lua_block&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;syntax:&lt;/strong&gt; &lt;em&gt;content_by_lua_block { lua-script }&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;context:&lt;/strong&gt; &lt;em&gt;location, location if&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;phase:&lt;/strong&gt; &lt;em&gt;content&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;Similar to the &lt;a href="#content_by_lua"&gt;content_by_lua&lt;/a&gt; directive except that this directive inlines
the Lua source directly
inside a pair of curly braces (&lt;code&gt;{}&lt;/code&gt;) instead of in an Nginx string literal (which requires
special character escaping).&lt;/p&gt;
&lt;p&gt;For instance,&lt;/p&gt;
&lt;div class="highlight highlight-source-nginx"&gt;&lt;pre&gt; &lt;span class="pl-k"&gt;content_by_lua_block&lt;/span&gt; {
     ngx.say("&lt;span class="pl-k"&gt;I&lt;/span&gt; need no extra escaping here, for example: \r\nblah&lt;span class="pl-s"&gt;")&lt;/span&gt;
&lt;span class="pl-s"&gt; }&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;This directive was first introduced in the &lt;code&gt;v0.9.17&lt;/code&gt; release.&lt;/p&gt;
&lt;p&gt;&lt;a href="#directives"&gt;Back to TOC&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-content_by_lua_file" class="anchor" aria-hidden="true" href="#content_by_lua_file"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;content_by_lua_file&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;syntax:&lt;/strong&gt; &lt;em&gt;content_by_lua_file &amp;lt;path-to-lua-script-file&amp;gt;&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;context:&lt;/strong&gt; &lt;em&gt;location, location if&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;phase:&lt;/strong&gt; &lt;em&gt;content&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;Equivalent to &lt;a href="#content_by_lua"&gt;content_by_lua&lt;/a&gt;, except that the file specified by &lt;code&gt;&amp;lt;path-to-lua-script-file&amp;gt;&lt;/code&gt; contains the Lua code, or, as from the &lt;code&gt;v0.5.0rc32&lt;/code&gt; release, the &lt;a href="#luajit-bytecode-support"&gt;LuaJIT bytecode&lt;/a&gt; to be executed.&lt;/p&gt;
&lt;p&gt;Nginx variables can be used in the &lt;code&gt;&amp;lt;path-to-lua-script-file&amp;gt;&lt;/code&gt; string to provide flexibility. This however carries some risks and is not ordinarily recommended.&lt;/p&gt;
&lt;p&gt;When a relative path like &lt;code&gt;foo/bar.lua&lt;/code&gt; is given, they will be turned into the absolute path relative to the &lt;code&gt;server prefix&lt;/code&gt; path determined by the &lt;code&gt;-p PATH&lt;/code&gt; command-line option while starting the Nginx server.&lt;/p&gt;
&lt;p&gt;When the Lua code cache is turned on (by default), the user code is loaded once at the first request and cached
and the Nginx config must be reloaded each time the Lua source file is modified.
The Lua code cache can be temporarily disabled during development by
switching &lt;a href="#lua_code_cache"&gt;lua_code_cache&lt;/a&gt; &lt;code&gt;off&lt;/code&gt; in &lt;code&gt;nginx.conf&lt;/code&gt; to avoid reloading Nginx.&lt;/p&gt;
&lt;p&gt;Nginx variables are supported in the file path for dynamic dispatch, for example:&lt;/p&gt;
&lt;div class="highlight highlight-source-nginx"&gt;&lt;pre&gt; &lt;span class="pl-c"&gt;# CAUTION: contents in nginx var must be carefully filtered,&lt;/span&gt;
 &lt;span class="pl-c"&gt;# otherwise there'll be great security risk!&lt;/span&gt;
 &lt;span class="pl-k"&gt;location&lt;/span&gt; ~ &lt;span class="pl-sr"&gt;^/app/([-_a-zA-Z0-9/]+) &lt;/span&gt;{
     &lt;span class="pl-k"&gt;set&lt;/span&gt; &lt;span class="pl-smi"&gt;$path&lt;/span&gt; &lt;span class="pl-smi"&gt;$1&lt;/span&gt;;
     &lt;span class="pl-k"&gt;content_by_lua_file&lt;/span&gt; /path/to/lua/app/root/&lt;span class="pl-smi"&gt;$path&lt;/span&gt;.lua;
 }&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;But be very careful about malicious user inputs and always carefully validate or filter out the user-supplied path components.&lt;/p&gt;
&lt;p&gt;&lt;a href="#directives"&gt;Back to TOC&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-rewrite_by_lua" class="anchor" aria-hidden="true" href="#rewrite_by_lua"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;rewrite_by_lua&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;syntax:&lt;/strong&gt; &lt;em&gt;rewrite_by_lua &amp;lt;lua-script-str&amp;gt;&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;context:&lt;/strong&gt; &lt;em&gt;http, server, location, location if&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;phase:&lt;/strong&gt; &lt;em&gt;rewrite tail&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;NOTE&lt;/strong&gt; Use of this directive is &lt;em&gt;discouraged&lt;/em&gt; following the &lt;code&gt;v0.9.17&lt;/code&gt; release. Use the &lt;a href="#rewrite_by_lua_block"&gt;rewrite_by_lua_block&lt;/a&gt; directive instead.&lt;/p&gt;
&lt;p&gt;Acts as a rewrite phase handler and executes Lua code string specified in &lt;code&gt;&amp;lt;lua-script-str&amp;gt;&lt;/code&gt; for every request.
The Lua code may make &lt;a href="#nginx-api-for-lua"&gt;API calls&lt;/a&gt; and is executed as a new spawned coroutine in an independent global environment (i.e. a sandbox).&lt;/p&gt;
&lt;p&gt;Note that this handler always runs &lt;em&gt;after&lt;/em&gt; the standard &lt;a href="http://nginx.org/en/docs/http/ngx_http_rewrite_module.html" rel="nofollow"&gt;ngx_http_rewrite_module&lt;/a&gt;. So the following will work as expected:&lt;/p&gt;
&lt;div class="highlight highlight-source-nginx"&gt;&lt;pre&gt; &lt;span class="pl-k"&gt;location&lt;/span&gt; &lt;span class="pl-en"&gt;/foo &lt;/span&gt;{
     &lt;span class="pl-k"&gt;set&lt;/span&gt; &lt;span class="pl-smi"&gt;$a&lt;/span&gt; &lt;span class="pl-s"&gt;12&lt;/span&gt;; &lt;span class="pl-c"&gt;# create and initialize $a&lt;/span&gt;
     &lt;span class="pl-k"&gt;set&lt;/span&gt; &lt;span class="pl-smi"&gt;$b&lt;/span&gt; &lt;span class="pl-s"&gt;""&lt;/span&gt;; &lt;span class="pl-c"&gt;# create and initialize $b&lt;/span&gt;
     &lt;span class="pl-k"&gt;rewrite_by_lua&lt;/span&gt; &lt;span class="pl-s"&gt;'ngx.var.b = tonumber(ngx.var.a) + 1'&lt;/span&gt;;
     &lt;span class="pl-k"&gt;echo&lt;/span&gt; &lt;span class="pl-s"&gt;"res = &lt;span class="pl-smi"&gt;$b&lt;/span&gt;"&lt;/span&gt;;
 }&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;because &lt;code&gt;set $a 12&lt;/code&gt; and &lt;code&gt;set $b ""&lt;/code&gt; run &lt;em&gt;before&lt;/em&gt; &lt;a href="#rewrite_by_lua"&gt;rewrite_by_lua&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;On the other hand, the following will not work as expected:&lt;/p&gt;
&lt;div class="highlight highlight-source-nginx"&gt;&lt;pre&gt; ?  &lt;span class="pl-k"&gt;location&lt;/span&gt; &lt;span class="pl-en"&gt;/foo &lt;/span&gt;{
 ?      &lt;span class="pl-k"&gt;set&lt;/span&gt; &lt;span class="pl-smi"&gt;$a&lt;/span&gt; &lt;span class="pl-s"&gt;12&lt;/span&gt;; &lt;span class="pl-c"&gt;# create and initialize $a&lt;/span&gt;
 ?      &lt;span class="pl-k"&gt;set&lt;/span&gt; &lt;span class="pl-smi"&gt;$b&lt;/span&gt; &lt;span class="pl-s"&gt;''&lt;/span&gt;; &lt;span class="pl-c"&gt;# create and initialize $b&lt;/span&gt;
 ?      &lt;span class="pl-k"&gt;rewrite_by_lua&lt;/span&gt; &lt;span class="pl-s"&gt;'ngx.var.b = tonumber(ngx.var.a) + 1'&lt;/span&gt;;
 ?      &lt;span class="pl-k"&gt;if&lt;/span&gt; (&lt;span class="pl-smi"&gt;$b&lt;/span&gt; = &lt;span class="pl-s"&gt;'13'&lt;/span&gt;) {
 ?         &lt;span class="pl-k"&gt;rewrite&lt;/span&gt; &lt;span class="pl-sr"&gt;^ &lt;/span&gt;/bar redirect;
 ?         &lt;span class="pl-c1"&gt;break&lt;/span&gt;;
 ?      }
 ?
 ?      &lt;span class="pl-k"&gt;echo&lt;/span&gt; &lt;span class="pl-s"&gt;"res = &lt;span class="pl-smi"&gt;$b&lt;/span&gt;"&lt;/span&gt;;
 ?  }&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;because &lt;code&gt;if&lt;/code&gt; runs &lt;em&gt;before&lt;/em&gt; &lt;a href="#rewrite_by_lua"&gt;rewrite_by_lua&lt;/a&gt; even if it is placed after &lt;a href="#rewrite_by_lua"&gt;rewrite_by_lua&lt;/a&gt; in the config.&lt;/p&gt;
&lt;p&gt;The right way of doing this is as follows:&lt;/p&gt;
&lt;div class="highlight highlight-source-nginx"&gt;&lt;pre&gt; &lt;span class="pl-k"&gt;location&lt;/span&gt; &lt;span class="pl-en"&gt;/foo &lt;/span&gt;{
     &lt;span class="pl-k"&gt;set&lt;/span&gt; &lt;span class="pl-smi"&gt;$a&lt;/span&gt; &lt;span class="pl-s"&gt;12&lt;/span&gt;; &lt;span class="pl-c"&gt;# create and initialize $a&lt;/span&gt;
     &lt;span class="pl-k"&gt;set&lt;/span&gt; &lt;span class="pl-smi"&gt;$b&lt;/span&gt; &lt;span class="pl-s"&gt;''&lt;/span&gt;; &lt;span class="pl-c"&gt;# create and initialize $b&lt;/span&gt;
     &lt;span class="pl-k"&gt;rewrite_by_lua&lt;/span&gt; &lt;span class="pl-s"&gt;'&lt;/span&gt;
&lt;span class="pl-s"&gt;         ngx.var.b = tonumber(ngx.var.a) + 1&lt;/span&gt;
&lt;span class="pl-s"&gt;         if tonumber(ngx.var.b) == 13 then&lt;/span&gt;
&lt;span class="pl-s"&gt;             return ngx.redirect("/bar");&lt;/span&gt;
&lt;span class="pl-s"&gt;         end&lt;/span&gt;
&lt;span class="pl-s"&gt;     '&lt;/span&gt;;

     &lt;span class="pl-k"&gt;echo&lt;/span&gt; &lt;span class="pl-s"&gt;"res = &lt;span class="pl-smi"&gt;$b&lt;/span&gt;"&lt;/span&gt;;
 }&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Note that the &lt;a href="http://www.grid.net.ru/nginx/eval.en.html" rel="nofollow"&gt;ngx_eval&lt;/a&gt; module can be approximated by using &lt;a href="#rewrite_by_lua"&gt;rewrite_by_lua&lt;/a&gt;. For example,&lt;/p&gt;
&lt;div class="highlight highlight-source-nginx"&gt;&lt;pre&gt; &lt;span class="pl-k"&gt;location&lt;/span&gt; &lt;span class="pl-en"&gt;/ &lt;/span&gt;{
     &lt;span class="pl-k"&gt;eval&lt;/span&gt; &lt;span class="pl-smi"&gt;$res&lt;/span&gt; {
         &lt;span class="pl-k"&gt;proxy_pass&lt;/span&gt; http://foo.com/check-spam;
     }

     &lt;span class="pl-k"&gt;if&lt;/span&gt; (&lt;span class="pl-smi"&gt;$res&lt;/span&gt; = &lt;span class="pl-s"&gt;'spam'&lt;/span&gt;) {
         &lt;span class="pl-k"&gt;rewrite&lt;/span&gt; &lt;span class="pl-sr"&gt;^ &lt;/span&gt;/terms-of-use.html redirect;
     }

     &lt;span class="pl-k"&gt;fastcgi_pass&lt;/span&gt; ...;
 }&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;can be implemented in ngx_lua as:&lt;/p&gt;
&lt;div class="highlight highlight-source-nginx"&gt;&lt;pre&gt; &lt;span class="pl-k"&gt;location&lt;/span&gt; &lt;span class="pl-en"&gt;= /check-spam &lt;/span&gt;{
     &lt;span class="pl-k"&gt;internal&lt;/span&gt;;
     &lt;span class="pl-k"&gt;proxy_pass&lt;/span&gt; http://foo.com/check-spam;
 }

 &lt;span class="pl-k"&gt;location&lt;/span&gt; &lt;span class="pl-en"&gt;/ &lt;/span&gt;{
     &lt;span class="pl-k"&gt;rewrite_by_lua&lt;/span&gt; &lt;span class="pl-s"&gt;'&lt;/span&gt;
&lt;span class="pl-s"&gt;         local res = ngx.location.capture("/check-spam")&lt;/span&gt;
&lt;span class="pl-s"&gt;         if res.body == "spam" then&lt;/span&gt;
&lt;span class="pl-s"&gt;             return ngx.redirect("/terms-of-use.html")&lt;/span&gt;
&lt;span class="pl-s"&gt;         end&lt;/span&gt;
&lt;span class="pl-s"&gt;     '&lt;/span&gt;;

     &lt;span class="pl-k"&gt;fastcgi_pass&lt;/span&gt; ...;
 }&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Just as any other rewrite phase handlers, &lt;a href="#rewrite_by_lua"&gt;rewrite_by_lua&lt;/a&gt; also runs in subrequests.&lt;/p&gt;
&lt;p&gt;Note that when calling &lt;code&gt;ngx.exit(ngx.OK)&lt;/code&gt; within a &lt;a href="#rewrite_by_lua"&gt;rewrite_by_lua&lt;/a&gt; handler, the Nginx request processing control flow will still continue to the content handler. To terminate the current request from within a &lt;a href="#rewrite_by_lua"&gt;rewrite_by_lua&lt;/a&gt; handler, calling &lt;a href="#ngxexit"&gt;ngx.exit&lt;/a&gt; with status &amp;gt;= 200 (&lt;code&gt;ngx.HTTP_OK&lt;/code&gt;) and status &amp;lt; 300 (&lt;code&gt;ngx.HTTP_SPECIAL_RESPONSE&lt;/code&gt;) for successful quits and &lt;code&gt;ngx.exit(ngx.HTTP_INTERNAL_SERVER_ERROR)&lt;/code&gt; (or its friends) for failures.&lt;/p&gt;
&lt;p&gt;If the &lt;a href="http://nginx.org/en/docs/http/ngx_http_rewrite_module.html" rel="nofollow"&gt;ngx_http_rewrite_module&lt;/a&gt;'s &lt;a href="http://nginx.org/en/docs/http/ngx_http_rewrite_module.html#rewrite" rel="nofollow"&gt;rewrite&lt;/a&gt; directive is used to change the URI and initiate location re-lookups (internal redirections), then any &lt;a href="#rewrite_by_lua"&gt;rewrite_by_lua&lt;/a&gt; or &lt;a href="#rewrite_by_lua_file"&gt;rewrite_by_lua_file&lt;/a&gt; code sequences within the current location will not be executed. For example,&lt;/p&gt;
&lt;div class="highlight highlight-source-nginx"&gt;&lt;pre&gt; &lt;span class="pl-k"&gt;location&lt;/span&gt; &lt;span class="pl-en"&gt;/foo &lt;/span&gt;{
     &lt;span class="pl-k"&gt;rewrite&lt;/span&gt; &lt;span class="pl-sr"&gt;^ &lt;/span&gt;/bar;
     &lt;span class="pl-k"&gt;rewrite_by_lua&lt;/span&gt; &lt;span class="pl-s"&gt;'ngx.exit(503)'&lt;/span&gt;;
 }
 &lt;span class="pl-k"&gt;location&lt;/span&gt; &lt;span class="pl-en"&gt;/bar &lt;/span&gt;{
     ...
 }&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Here the Lua code &lt;code&gt;ngx.exit(503)&lt;/code&gt; will never run. This will be the case if &lt;code&gt;rewrite ^ /bar last&lt;/code&gt; is used as this will similarly initiate an internal redirection. If the &lt;code&gt;break&lt;/code&gt; modifier is used instead, there will be no internal redirection and the &lt;code&gt;rewrite_by_lua&lt;/code&gt; code will be executed.&lt;/p&gt;
&lt;p&gt;The &lt;code&gt;rewrite_by_lua&lt;/code&gt; code will always run at the end of the &lt;code&gt;rewrite&lt;/code&gt; request-processing phase unless &lt;a href="#rewrite_by_lua_no_postpone"&gt;rewrite_by_lua_no_postpone&lt;/a&gt; is turned on.&lt;/p&gt;
&lt;p&gt;&lt;a href="#directives"&gt;Back to TOC&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-rewrite_by_lua_block" class="anchor" aria-hidden="true" href="#rewrite_by_lua_block"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;rewrite_by_lua_block&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;syntax:&lt;/strong&gt; &lt;em&gt;rewrite_by_lua_block { lua-script }&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;context:&lt;/strong&gt; &lt;em&gt;http, server, location, location if&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;phase:&lt;/strong&gt; &lt;em&gt;rewrite tail&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;Similar to the &lt;a href="#rewrite_by_lua"&gt;rewrite_by_lua&lt;/a&gt; directive except that this directive inlines
the Lua source directly
inside a pair of curly braces (&lt;code&gt;{}&lt;/code&gt;) instead of in an Nginx string literal (which requires
special character escaping).&lt;/p&gt;
&lt;p&gt;For instance,&lt;/p&gt;
&lt;div class="highlight highlight-source-nginx"&gt;&lt;pre&gt; &lt;span class="pl-k"&gt;rewrite_by_lua_block&lt;/span&gt; {
     do_something("hello, world!\nhiya\n")
 }&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;This directive was first introduced in the &lt;code&gt;v0.9.17&lt;/code&gt; release.&lt;/p&gt;
&lt;p&gt;&lt;a href="#directives"&gt;Back to TOC&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-rewrite_by_lua_file" class="anchor" aria-hidden="true" href="#rewrite_by_lua_file"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;rewrite_by_lua_file&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;syntax:&lt;/strong&gt; &lt;em&gt;rewrite_by_lua_file &amp;lt;path-to-lua-script-file&amp;gt;&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;context:&lt;/strong&gt; &lt;em&gt;http, server, location, location if&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;phase:&lt;/strong&gt; &lt;em&gt;rewrite tail&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;Equivalent to &lt;a href="#rewrite_by_lua"&gt;rewrite_by_lua&lt;/a&gt;, except that the file specified by &lt;code&gt;&amp;lt;path-to-lua-script-file&amp;gt;&lt;/code&gt; contains the Lua code, or, as from the &lt;code&gt;v0.5.0rc32&lt;/code&gt; release, the &lt;a href="#luajit-bytecode-support"&gt;LuaJIT bytecode&lt;/a&gt; to be executed.&lt;/p&gt;
&lt;p&gt;Nginx variables can be used in the &lt;code&gt;&amp;lt;path-to-lua-script-file&amp;gt;&lt;/code&gt; string to provide flexibility. This however carries some risks and is not ordinarily recommended.&lt;/p&gt;
&lt;p&gt;When a relative path like &lt;code&gt;foo/bar.lua&lt;/code&gt; is given, they will be turned into the absolute path relative to the &lt;code&gt;server prefix&lt;/code&gt; path determined by the &lt;code&gt;-p PATH&lt;/code&gt; command-line option while starting the Nginx server.&lt;/p&gt;
&lt;p&gt;When the Lua code cache is turned on (by default), the user code is loaded once at the first request and cached and the Nginx config must be reloaded each time the Lua source file is modified. The Lua code cache can be temporarily disabled during development by switching &lt;a href="#lua_code_cache"&gt;lua_code_cache&lt;/a&gt; &lt;code&gt;off&lt;/code&gt; in &lt;code&gt;nginx.conf&lt;/code&gt; to avoid reloading Nginx.&lt;/p&gt;
&lt;p&gt;The &lt;code&gt;rewrite_by_lua_file&lt;/code&gt; code will always run at the end of the &lt;code&gt;rewrite&lt;/code&gt; request-processing phase unless &lt;a href="#rewrite_by_lua_no_postpone"&gt;rewrite_by_lua_no_postpone&lt;/a&gt; is turned on.&lt;/p&gt;
&lt;p&gt;Nginx variables are supported in the file path for dynamic dispatch just as in &lt;a href="#content_by_lua_file"&gt;content_by_lua_file&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;&lt;a href="#directives"&gt;Back to TOC&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-access_by_lua" class="anchor" aria-hidden="true" href="#access_by_lua"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;access_by_lua&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;syntax:&lt;/strong&gt; &lt;em&gt;access_by_lua &amp;lt;lua-script-str&amp;gt;&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;context:&lt;/strong&gt; &lt;em&gt;http, server, location, location if&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;phase:&lt;/strong&gt; &lt;em&gt;access tail&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;NOTE&lt;/strong&gt; Use of this directive is &lt;em&gt;discouraged&lt;/em&gt; following the &lt;code&gt;v0.9.17&lt;/code&gt; release. Use the &lt;a href="#access_by_lua_block"&gt;access_by_lua_block&lt;/a&gt; directive instead.&lt;/p&gt;
&lt;p&gt;Acts as an access phase handler and executes Lua code string specified in &lt;code&gt;&amp;lt;lua-script-str&amp;gt;&lt;/code&gt; for every request.
The Lua code may make &lt;a href="#nginx-api-for-lua"&gt;API calls&lt;/a&gt; and is executed as a new spawned coroutine in an independent global environment (i.e. a sandbox).&lt;/p&gt;
&lt;p&gt;Note that this handler always runs &lt;em&gt;after&lt;/em&gt; the standard &lt;a href="http://nginx.org/en/docs/http/ngx_http_access_module.html" rel="nofollow"&gt;ngx_http_access_module&lt;/a&gt;. So the following will work as expected:&lt;/p&gt;
&lt;div class="highlight highlight-source-nginx"&gt;&lt;pre&gt; &lt;span class="pl-k"&gt;location&lt;/span&gt; &lt;span class="pl-en"&gt;/ &lt;/span&gt;{
     &lt;span class="pl-k"&gt;deny&lt;/span&gt;    &lt;span class="pl-s"&gt;192.168.1.1&lt;/span&gt;;
     &lt;span class="pl-k"&gt;allow&lt;/span&gt;   &lt;span class="pl-s"&gt;192.168.1.0&lt;/span&gt;&lt;span class="pl-c1"&gt;/24&lt;/span&gt;;
     &lt;span class="pl-k"&gt;allow&lt;/span&gt;   &lt;span class="pl-s"&gt;10.1.1.0&lt;/span&gt;&lt;span class="pl-c1"&gt;/16&lt;/span&gt;;
     &lt;span class="pl-k"&gt;deny&lt;/span&gt;   &lt;span class="pl-c1"&gt; all&lt;/span&gt;;

     &lt;span class="pl-k"&gt;access_by_lua&lt;/span&gt; &lt;span class="pl-s"&gt;'&lt;/span&gt;
&lt;span class="pl-s"&gt;         local res = ngx.location.capture("/mysql", { ... })&lt;/span&gt;
&lt;span class="pl-s"&gt;         ...&lt;/span&gt;
&lt;span class="pl-s"&gt;     '&lt;/span&gt;;

     &lt;span class="pl-c"&gt;# proxy_pass/fastcgi_pass/...&lt;/span&gt;
 }&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;That is, if a client IP address is in the blacklist, it will be denied before the MySQL query for more complex authentication is executed by &lt;a href="#access_by_lua"&gt;access_by_lua&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Note that the &lt;a href="http://mdounin.ru/hg/ngx_http_auth_request_module/" rel="nofollow"&gt;ngx_auth_request&lt;/a&gt; module can be approximated by using &lt;a href="#access_by_lua"&gt;access_by_lua&lt;/a&gt;:&lt;/p&gt;
&lt;div class="highlight highlight-source-nginx"&gt;&lt;pre&gt; &lt;span class="pl-k"&gt;location&lt;/span&gt; &lt;span class="pl-en"&gt;/ &lt;/span&gt;{
     &lt;span class="pl-k"&gt;auth_request&lt;/span&gt; /auth;

     &lt;span class="pl-c"&gt;# proxy_pass/fastcgi_pass/postgres_pass/...&lt;/span&gt;
 }&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;can be implemented in ngx_lua as:&lt;/p&gt;
&lt;div class="highlight highlight-source-nginx"&gt;&lt;pre&gt; &lt;span class="pl-k"&gt;location&lt;/span&gt; &lt;span class="pl-en"&gt;/ &lt;/span&gt;{
     &lt;span class="pl-k"&gt;access_by_lua&lt;/span&gt; &lt;span class="pl-s"&gt;'&lt;/span&gt;
&lt;span class="pl-s"&gt;         local res = ngx.location.capture("/auth")&lt;/span&gt;
&lt;span class="pl-s"&gt;&lt;/span&gt;
&lt;span class="pl-s"&gt;         if res.status == ngx.HTTP_OK then&lt;/span&gt;
&lt;span class="pl-s"&gt;             return&lt;/span&gt;
&lt;span class="pl-s"&gt;         end&lt;/span&gt;
&lt;span class="pl-s"&gt;&lt;/span&gt;
&lt;span class="pl-s"&gt;         if res.status == ngx.HTTP_FORBIDDEN then&lt;/span&gt;
&lt;span class="pl-s"&gt;             ngx.exit(res.status)&lt;/span&gt;
&lt;span class="pl-s"&gt;         end&lt;/span&gt;
&lt;span class="pl-s"&gt;&lt;/span&gt;
&lt;span class="pl-s"&gt;         ngx.exit(ngx.HTTP_INTERNAL_SERVER_ERROR)&lt;/span&gt;
&lt;span class="pl-s"&gt;     '&lt;/span&gt;;

     &lt;span class="pl-c"&gt;# proxy_pass/fastcgi_pass/postgres_pass/...&lt;/span&gt;
 }&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;As with other access phase handlers, &lt;a href="#access_by_lua"&gt;access_by_lua&lt;/a&gt; will &lt;em&gt;not&lt;/em&gt; run in subrequests.&lt;/p&gt;
&lt;p&gt;Note that when calling &lt;code&gt;ngx.exit(ngx.OK)&lt;/code&gt; within a &lt;a href="#access_by_lua"&gt;access_by_lua&lt;/a&gt; handler, the Nginx request processing control flow will still continue to the content handler. To terminate the current request from within a &lt;a href="#access_by_lua"&gt;access_by_lua&lt;/a&gt; handler, calling &lt;a href="#ngxexit"&gt;ngx.exit&lt;/a&gt; with status &amp;gt;= 200 (&lt;code&gt;ngx.HTTP_OK&lt;/code&gt;) and status &amp;lt; 300 (&lt;code&gt;ngx.HTTP_SPECIAL_RESPONSE&lt;/code&gt;) for successful quits and &lt;code&gt;ngx.exit(ngx.HTTP_INTERNAL_SERVER_ERROR)&lt;/code&gt; (or its friends) for failures.&lt;/p&gt;
&lt;p&gt;Starting from the &lt;code&gt;v0.9.20&lt;/code&gt; release, you can use the &lt;a href="#access_by_lua_no_postpone"&gt;access_by_lua_no_postpone&lt;/a&gt;
directive to control when to run this handler inside the "access" request-processing phase
of Nginx.&lt;/p&gt;
&lt;p&gt;&lt;a href="#directives"&gt;Back to TOC&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-access_by_lua_block" class="anchor" aria-hidden="true" href="#access_by_lua_block"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;access_by_lua_block&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;syntax:&lt;/strong&gt; &lt;em&gt;access_by_lua_block { lua-script }&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;context:&lt;/strong&gt; &lt;em&gt;http, server, location, location if&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;phase:&lt;/strong&gt; &lt;em&gt;access tail&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;Similar to the &lt;a href="#access_by_lua"&gt;access_by_lua&lt;/a&gt; directive except that this directive inlines
the Lua source directly
inside a pair of curly braces (&lt;code&gt;{}&lt;/code&gt;) instead of in an Nginx string literal (which requires
special character escaping).&lt;/p&gt;
&lt;p&gt;For instance,&lt;/p&gt;
&lt;div class="highlight highlight-source-nginx"&gt;&lt;pre&gt; &lt;span class="pl-k"&gt;access_by_lua_block&lt;/span&gt; {
     do_something("hello, world!\nhiya\n")
 }&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;This directive was first introduced in the &lt;code&gt;v0.9.17&lt;/code&gt; release.&lt;/p&gt;
&lt;p&gt;&lt;a href="#directives"&gt;Back to TOC&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-access_by_lua_file" class="anchor" aria-hidden="true" href="#access_by_lua_file"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;access_by_lua_file&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;syntax:&lt;/strong&gt; &lt;em&gt;access_by_lua_file &amp;lt;path-to-lua-script-file&amp;gt;&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;context:&lt;/strong&gt; &lt;em&gt;http, server, location, location if&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;phase:&lt;/strong&gt; &lt;em&gt;access tail&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;Equivalent to &lt;a href="#access_by_lua"&gt;access_by_lua&lt;/a&gt;, except that the file specified by &lt;code&gt;&amp;lt;path-to-lua-script-file&amp;gt;&lt;/code&gt; contains the Lua code, or, as from the &lt;code&gt;v0.5.0rc32&lt;/code&gt; release, the &lt;a href="#luajit-bytecode-support"&gt;LuaJIT bytecode&lt;/a&gt; to be executed.&lt;/p&gt;
&lt;p&gt;Nginx variables can be used in the &lt;code&gt;&amp;lt;path-to-lua-script-file&amp;gt;&lt;/code&gt; string to provide flexibility. This however carries some risks and is not ordinarily recommended.&lt;/p&gt;
&lt;p&gt;When a relative path like &lt;code&gt;foo/bar.lua&lt;/code&gt; is given, they will be turned into the absolute path relative to the &lt;code&gt;server prefix&lt;/code&gt; path determined by the &lt;code&gt;-p PATH&lt;/code&gt; command-line option while starting the Nginx server.&lt;/p&gt;
&lt;p&gt;When the Lua code cache is turned on (by default), the user code is loaded once at the first request and cached
and the Nginx config must be reloaded each time the Lua source file is modified.
The Lua code cache can be temporarily disabled during development by switching &lt;a href="#lua_code_cache"&gt;lua_code_cache&lt;/a&gt; &lt;code&gt;off&lt;/code&gt; in &lt;code&gt;nginx.conf&lt;/code&gt; to avoid repeatedly reloading Nginx.&lt;/p&gt;
&lt;p&gt;Nginx variables are supported in the file path for dynamic dispatch just as in &lt;a href="#content_by_lua_file"&gt;content_by_lua_file&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;&lt;a href="#directives"&gt;Back to TOC&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-header_filter_by_lua" class="anchor" aria-hidden="true" href="#header_filter_by_lua"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;header_filter_by_lua&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;syntax:&lt;/strong&gt; &lt;em&gt;header_filter_by_lua &amp;lt;lua-script-str&amp;gt;&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;context:&lt;/strong&gt; &lt;em&gt;http, server, location, location if&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;phase:&lt;/strong&gt; &lt;em&gt;output-header-filter&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;NOTE&lt;/strong&gt; Use of this directive is &lt;em&gt;discouraged&lt;/em&gt; following the &lt;code&gt;v0.9.17&lt;/code&gt; release. Use the &lt;a href="#header_filter_by_lua_block"&gt;header_filter_by_lua_block&lt;/a&gt; directive instead.&lt;/p&gt;
&lt;p&gt;Uses Lua code specified in &lt;code&gt;&amp;lt;lua-script-str&amp;gt;&lt;/code&gt; to define an output header filter.&lt;/p&gt;
&lt;p&gt;Note that the following API functions are currently disabled within this context:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Output API functions (e.g., &lt;a href="#ngxsay"&gt;ngx.say&lt;/a&gt; and &lt;a href="#ngxsend_headers"&gt;ngx.send_headers&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;Control API functions (e.g., &lt;a href="#ngxredirect"&gt;ngx.redirect&lt;/a&gt; and &lt;a href="#ngxexec"&gt;ngx.exec&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;Subrequest API functions (e.g., &lt;a href="#ngxlocationcapture"&gt;ngx.location.capture&lt;/a&gt; and &lt;a href="#ngxlocationcapture_multi"&gt;ngx.location.capture_multi&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;Cosocket API functions (e.g., &lt;a href="#ngxsockettcp"&gt;ngx.socket.tcp&lt;/a&gt; and &lt;a href="#ngxreqsocket"&gt;ngx.req.socket&lt;/a&gt;).&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Here is an example of overriding a response header (or adding one if absent) in our Lua header filter:&lt;/p&gt;
&lt;div class="highlight highlight-source-nginx"&gt;&lt;pre&gt; &lt;span class="pl-k"&gt;location&lt;/span&gt; &lt;span class="pl-en"&gt;/ &lt;/span&gt;{
     &lt;span class="pl-k"&gt;proxy_pass&lt;/span&gt; http://mybackend;
     &lt;span class="pl-k"&gt;header_filter_by_lua&lt;/span&gt; &lt;span class="pl-s"&gt;'ngx.header.Foo = "blah"'&lt;/span&gt;;
 }&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;This directive was first introduced in the &lt;code&gt;v0.2.1rc20&lt;/code&gt; release.&lt;/p&gt;
&lt;p&gt;&lt;a href="#directives"&gt;Back to TOC&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-header_filter_by_lua_block" class="anchor" aria-hidden="true" href="#header_filter_by_lua_block"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;header_filter_by_lua_block&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;syntax:&lt;/strong&gt; &lt;em&gt;header_filter_by_lua_block { lua-script }&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;context:&lt;/strong&gt; &lt;em&gt;http, server, location, location if&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;phase:&lt;/strong&gt; &lt;em&gt;output-header-filter&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;Similar to the &lt;a href="#header_filter_by_lua"&gt;header_filter_by_lua&lt;/a&gt; directive except that this directive inlines
the Lua source directly
inside a pair of curly braces (&lt;code&gt;{}&lt;/code&gt;) instead of in an Nginx string literal (which requires
special character escaping).&lt;/p&gt;
&lt;p&gt;For instance,&lt;/p&gt;
&lt;div class="highlight highlight-source-nginx"&gt;&lt;pre&gt; &lt;span class="pl-k"&gt;header_filter_by_lua_block&lt;/span&gt; {
     ngx.header["content-length"] = &lt;span class="pl-k"&gt;nil&lt;/span&gt;
 }&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;This directive was first introduced in the &lt;code&gt;v0.9.17&lt;/code&gt; release.&lt;/p&gt;
&lt;p&gt;&lt;a href="#directives"&gt;Back to TOC&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-header_filter_by_lua_file" class="anchor" aria-hidden="true" href="#header_filter_by_lua_file"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;header_filter_by_lua_file&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;syntax:&lt;/strong&gt; &lt;em&gt;header_filter_by_lua_file &amp;lt;path-to-lua-script-file&amp;gt;&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;context:&lt;/strong&gt; &lt;em&gt;http, server, location, location if&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;phase:&lt;/strong&gt; &lt;em&gt;output-header-filter&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;Equivalent to &lt;a href="#header_filter_by_lua"&gt;header_filter_by_lua&lt;/a&gt;, except that the file specified by &lt;code&gt;&amp;lt;path-to-lua-script-file&amp;gt;&lt;/code&gt; contains the Lua code, or as from the &lt;code&gt;v0.5.0rc32&lt;/code&gt; release, the &lt;a href="#luajit-bytecode-support"&gt;LuaJIT bytecode&lt;/a&gt; to be executed.&lt;/p&gt;
&lt;p&gt;When a relative path like &lt;code&gt;foo/bar.lua&lt;/code&gt; is given, they will be turned into the absolute path relative to the &lt;code&gt;server prefix&lt;/code&gt; path determined by the &lt;code&gt;-p PATH&lt;/code&gt; command-line option while starting the Nginx server.&lt;/p&gt;
&lt;p&gt;This directive was first introduced in the &lt;code&gt;v0.2.1rc20&lt;/code&gt; release.&lt;/p&gt;
&lt;p&gt;&lt;a href="#directives"&gt;Back to TOC&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-body_filter_by_lua" class="anchor" aria-hidden="true" href="#body_filter_by_lua"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;body_filter_by_lua&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;syntax:&lt;/strong&gt; &lt;em&gt;body_filter_by_lua &amp;lt;lua-script-str&amp;gt;&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;context:&lt;/strong&gt; &lt;em&gt;http, server, location, location if&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;phase:&lt;/strong&gt; &lt;em&gt;output-body-filter&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;NOTE&lt;/strong&gt; Use of this directive is &lt;em&gt;discouraged&lt;/em&gt; following the &lt;code&gt;v0.9.17&lt;/code&gt; release. Use the &lt;a href="#body_filter_by_lua_block"&gt;body_filter_by_lua_block&lt;/a&gt; directive instead.&lt;/p&gt;
&lt;p&gt;Uses Lua code specified in &lt;code&gt;&amp;lt;lua-script-str&amp;gt;&lt;/code&gt; to define an output body filter.&lt;/p&gt;
&lt;p&gt;The input data chunk is passed via &lt;a href="#ngxarg"&gt;ngx.arg&lt;/a&gt;[1] (as a Lua string value) and the "eof" flag indicating the end of the response body data stream is passed via &lt;a href="#ngxarg"&gt;ngx.arg&lt;/a&gt;[2] (as a Lua boolean value).&lt;/p&gt;
&lt;p&gt;Behind the scene, the "eof" flag is just the &lt;code&gt;last_buf&lt;/code&gt; (for main requests) or &lt;code&gt;last_in_chain&lt;/code&gt; (for subrequests) flag of the Nginx chain link buffers. (Before the &lt;code&gt;v0.7.14&lt;/code&gt; release, the "eof" flag does not work at all in subrequests.)&lt;/p&gt;
&lt;p&gt;The output data stream can be aborted immediately by running the following Lua statement:&lt;/p&gt;
&lt;div class="highlight highlight-source-lua"&gt;&lt;pre&gt; &lt;span class="pl-k"&gt;return&lt;/span&gt; ngx.&lt;span class="pl-smi"&gt;ERROR&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;This will truncate the response body and usually result in incomplete and also invalid responses.&lt;/p&gt;
&lt;p&gt;The Lua code can pass its own modified version of the input data chunk to the downstream Nginx output body filters by overriding &lt;a href="#ngxarg"&gt;ngx.arg&lt;/a&gt;[1] with a Lua string or a Lua table of strings. For example, to transform all the lowercase letters in the response body, we can just write:&lt;/p&gt;
&lt;div class="highlight highlight-source-nginx"&gt;&lt;pre&gt; &lt;span class="pl-k"&gt;location&lt;/span&gt; &lt;span class="pl-en"&gt;/ &lt;/span&gt;{
     &lt;span class="pl-k"&gt;proxy_pass&lt;/span&gt; http://mybackend;
     &lt;span class="pl-k"&gt;body_filter_by_lua&lt;/span&gt; &lt;span class="pl-s"&gt;'ngx.arg[1] = string.upper(ngx.arg[1])'&lt;/span&gt;;
 }&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;When setting &lt;code&gt;nil&lt;/code&gt; or an empty Lua string value to &lt;code&gt;ngx.arg[1]&lt;/code&gt;, no data chunk will be passed to the downstream Nginx output filters at all.&lt;/p&gt;
&lt;p&gt;Likewise, new "eof" flag can also be specified by setting a boolean value to &lt;a href="#ngxarg"&gt;ngx.arg&lt;/a&gt;[2]. For example,&lt;/p&gt;
&lt;div class="highlight highlight-source-nginx"&gt;&lt;pre&gt; &lt;span class="pl-k"&gt;location&lt;/span&gt; &lt;span class="pl-en"&gt;/t &lt;/span&gt;{
     &lt;span class="pl-k"&gt;echo&lt;/span&gt; hello world;
     &lt;span class="pl-k"&gt;echo&lt;/span&gt; hiya globe;

     &lt;span class="pl-k"&gt;body_filter_by_lua&lt;/span&gt; &lt;span class="pl-s"&gt;'&lt;/span&gt;
&lt;span class="pl-s"&gt;         local chunk = ngx.arg[1]&lt;/span&gt;
&lt;span class="pl-s"&gt;         if string.match(chunk, "hello") then&lt;/span&gt;
&lt;span class="pl-s"&gt;             ngx.arg[2] = true  -- new eof&lt;/span&gt;
&lt;span class="pl-s"&gt;             return&lt;/span&gt;
&lt;span class="pl-s"&gt;         end&lt;/span&gt;
&lt;span class="pl-s"&gt;&lt;/span&gt;
&lt;span class="pl-s"&gt;         -- just throw away any remaining chunk data&lt;/span&gt;
&lt;span class="pl-s"&gt;         ngx.arg[1] = nil&lt;/span&gt;
&lt;span class="pl-s"&gt;     '&lt;/span&gt;;
 }&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Then &lt;code&gt;GET /t&lt;/code&gt; will just return the output&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;hello world
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;That is, when the body filter sees a chunk containing the word "hello", then it will set the "eof" flag to true immediately, resulting in truncated but still valid responses.&lt;/p&gt;
&lt;p&gt;When the Lua code may change the length of the response body, then it is required to always clear out the &lt;code&gt;Content-Length&lt;/code&gt; response header (if any) in a header filter to enforce streaming output, as in&lt;/p&gt;
&lt;div class="highlight highlight-source-nginx"&gt;&lt;pre&gt; &lt;span class="pl-k"&gt;location&lt;/span&gt; &lt;span class="pl-en"&gt;/foo &lt;/span&gt;{
     &lt;span class="pl-c"&gt;# fastcgi_pass/proxy_pass/...&lt;/span&gt;

     &lt;span class="pl-k"&gt;header_filter_by_lua_block&lt;/span&gt; { ngx.header.content_length = nil }
     &lt;span class="pl-k"&gt;body_filter_by_lua&lt;/span&gt; &lt;span class="pl-s"&gt;'ngx.arg[1] = string.len(ngx.arg[1]) .. "\\n"'&lt;/span&gt;;
 }&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Note that the following API functions are currently disabled within this context due to the limitations in Nginx output filter's current implementation:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Output API functions (e.g., &lt;a href="#ngxsay"&gt;ngx.say&lt;/a&gt; and &lt;a href="#ngxsend_headers"&gt;ngx.send_headers&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;Control API functions (e.g., &lt;a href="#ngxexit"&gt;ngx.exit&lt;/a&gt; and &lt;a href="#ngxexec"&gt;ngx.exec&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;Subrequest API functions (e.g., &lt;a href="#ngxlocationcapture"&gt;ngx.location.capture&lt;/a&gt; and &lt;a href="#ngxlocationcapture_multi"&gt;ngx.location.capture_multi&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;Cosocket API functions (e.g., &lt;a href="#ngxsockettcp"&gt;ngx.socket.tcp&lt;/a&gt; and &lt;a href="#ngxreqsocket"&gt;ngx.req.socket&lt;/a&gt;).&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Nginx output filters may be called multiple times for a single request because response body may be delivered in chunks. Thus, the Lua code specified by in this directive may also run multiple times in the lifetime of a single HTTP request.&lt;/p&gt;
&lt;p&gt;This directive was first introduced in the &lt;code&gt;v0.5.0rc32&lt;/code&gt; release.&lt;/p&gt;
&lt;p&gt;&lt;a href="#directives"&gt;Back to TOC&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-body_filter_by_lua_block" class="anchor" aria-hidden="true" href="#body_filter_by_lua_block"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;body_filter_by_lua_block&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;syntax:&lt;/strong&gt; &lt;em&gt;body_filter_by_lua_block { lua-script-str }&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;context:&lt;/strong&gt; &lt;em&gt;http, server, location, location if&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;phase:&lt;/strong&gt; &lt;em&gt;output-body-filter&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;Similar to the &lt;a href="#body_filter_by_lua"&gt;body_filter_by_lua&lt;/a&gt; directive except that this directive inlines
the Lua source directly
inside a pair of curly braces (&lt;code&gt;{}&lt;/code&gt;) instead of in an Nginx string literal (which requires
special character escaping).&lt;/p&gt;
&lt;p&gt;For instance,&lt;/p&gt;
&lt;div class="highlight highlight-source-nginx"&gt;&lt;pre&gt; &lt;span class="pl-k"&gt;body_filter_by_lua_block&lt;/span&gt; {
     &lt;span class="pl-k"&gt;local&lt;/span&gt; data, eof = ngx.arg[1], ngx.arg[2]
 }&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;This directive was first introduced in the &lt;code&gt;v0.9.17&lt;/code&gt; release.&lt;/p&gt;
&lt;p&gt;&lt;a href="#directives"&gt;Back to TOC&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-body_filter_by_lua_file" class="anchor" aria-hidden="true" href="#body_filter_by_lua_file"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;body_filter_by_lua_file&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;syntax:&lt;/strong&gt; &lt;em&gt;body_filter_by_lua_file &amp;lt;path-to-lua-script-file&amp;gt;&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;context:&lt;/strong&gt; &lt;em&gt;http, server, location, location if&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;phase:&lt;/strong&gt; &lt;em&gt;output-body-filter&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;Equivalent to &lt;a href="#body_filter_by_lua"&gt;body_filter_by_lua&lt;/a&gt;, except that the file specified by &lt;code&gt;&amp;lt;path-to-lua-script-file&amp;gt;&lt;/code&gt; contains the Lua code, or, as from the &lt;code&gt;v0.5.0rc32&lt;/code&gt; release, the &lt;a href="#luajit-bytecode-support"&gt;LuaJIT bytecode&lt;/a&gt; to be executed.&lt;/p&gt;
&lt;p&gt;When a relative path like &lt;code&gt;foo/bar.lua&lt;/code&gt; is given, they will be turned into the absolute path relative to the &lt;code&gt;server prefix&lt;/code&gt; path determined by the &lt;code&gt;-p PATH&lt;/code&gt; command-line option while starting the Nginx server.&lt;/p&gt;
&lt;p&gt;This directive was first introduced in the &lt;code&gt;v0.5.0rc32&lt;/code&gt; release.&lt;/p&gt;
&lt;p&gt;&lt;a href="#directives"&gt;Back to TOC&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-log_by_lua" class="anchor" aria-hidden="true" href="#log_by_lua"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;log_by_lua&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;syntax:&lt;/strong&gt; &lt;em&gt;log_by_lua &amp;lt;lua-script-str&amp;gt;&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;context:&lt;/strong&gt; &lt;em&gt;http, server, location, location if&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;phase:&lt;/strong&gt; &lt;em&gt;log&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;NOTE&lt;/strong&gt; Use of this directive is &lt;em&gt;discouraged&lt;/em&gt; following the &lt;code&gt;v0.9.17&lt;/code&gt; release. Use the &lt;a href="#log_by_lua_block"&gt;log_by_lua_block&lt;/a&gt; directive instead.&lt;/p&gt;
&lt;p&gt;Runs the Lua source code inlined as the &lt;code&gt;&amp;lt;lua-script-str&amp;gt;&lt;/code&gt; at the &lt;code&gt;log&lt;/code&gt; request processing phase. This does not replace the current access logs, but runs before.&lt;/p&gt;
&lt;p&gt;Note that the following API functions are currently disabled within this context:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Output API functions (e.g., &lt;a href="#ngxsay"&gt;ngx.say&lt;/a&gt; and &lt;a href="#ngxsend_headers"&gt;ngx.send_headers&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;Control API functions (e.g., &lt;a href="#ngxexit"&gt;ngx.exit&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;Subrequest API functions (e.g., &lt;a href="#ngxlocationcapture"&gt;ngx.location.capture&lt;/a&gt; and &lt;a href="#ngxlocationcapture_multi"&gt;ngx.location.capture_multi&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;Cosocket API functions (e.g., &lt;a href="#ngxsockettcp"&gt;ngx.socket.tcp&lt;/a&gt; and &lt;a href="#ngxreqsocket"&gt;ngx.req.socket&lt;/a&gt;).&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Here is an example of gathering average data for &lt;a href="http://nginx.org/en/docs/http/ngx_http_upstream_module.html#var_upstream_response_time" rel="nofollow"&gt;$upstream_response_time&lt;/a&gt;:&lt;/p&gt;
&lt;div class="highlight highlight-source-nginx"&gt;&lt;pre&gt; &lt;span class="pl-k"&gt;lua_shared_dict&lt;/span&gt; log_dict &lt;span class="pl-c1"&gt;5M&lt;/span&gt;;

 &lt;span class="pl-k"&gt;server&lt;/span&gt; {
     &lt;span class="pl-k"&gt;location&lt;/span&gt; &lt;span class="pl-en"&gt;/ &lt;/span&gt;{
         &lt;span class="pl-k"&gt;proxy_pass&lt;/span&gt; http://mybackend;

         &lt;span class="pl-k"&gt;log_by_lua&lt;/span&gt; &lt;span class="pl-s"&gt;'&lt;/span&gt;
&lt;span class="pl-s"&gt;             local log_dict = ngx.shared.log_dict&lt;/span&gt;
&lt;span class="pl-s"&gt;             local upstream_time = tonumber(ngx.var.upstream_response_time)&lt;/span&gt;
&lt;span class="pl-s"&gt;&lt;/span&gt;
&lt;span class="pl-s"&gt;             local sum = log_dict:get("upstream_time-sum") or 0&lt;/span&gt;
&lt;span class="pl-s"&gt;             sum = sum + upstream_time&lt;/span&gt;
&lt;span class="pl-s"&gt;             log_dict:set("upstream_time-sum", sum)&lt;/span&gt;
&lt;span class="pl-s"&gt;&lt;/span&gt;
&lt;span class="pl-s"&gt;             local newval, err = log_dict:incr("upstream_time-nb", 1)&lt;/span&gt;
&lt;span class="pl-s"&gt;             if not newval and err == "not found" then&lt;/span&gt;
&lt;span class="pl-s"&gt;                 log_dict:add("upstream_time-nb", 0)&lt;/span&gt;
&lt;span class="pl-s"&gt;                 log_dict:incr("upstream_time-nb", 1)&lt;/span&gt;
&lt;span class="pl-s"&gt;             end&lt;/span&gt;
&lt;span class="pl-s"&gt;         '&lt;/span&gt;;
     }

     &lt;span class="pl-k"&gt;location&lt;/span&gt; &lt;span class="pl-en"&gt;= /status &lt;/span&gt;{
         &lt;span class="pl-k"&gt;content_by_lua_block&lt;/span&gt; {
             &lt;span class="pl-k"&gt;local&lt;/span&gt; log_dict = ngx.shared.log_dict
             &lt;span class="pl-k"&gt;local&lt;/span&gt; sum = log_dict:get(&lt;span class="pl-s"&gt;"upstream_time-sum"&lt;/span&gt;)
             &lt;span class="pl-k"&gt;local&lt;/span&gt; nb = log_dict:get(&lt;span class="pl-s"&gt;"upstream_time-nb"&lt;/span&gt;)

             &lt;span class="pl-k"&gt;if&lt;/span&gt; nb and sum then
                 ngx.say("&lt;span class="pl-k"&gt;average&lt;/span&gt; upstream response time: &lt;span class="pl-s"&gt;", sum / nb,&lt;/span&gt;
&lt;span class="pl-s"&gt;                         "&lt;/span&gt; (&lt;span class="pl-s"&gt;", nb, "&lt;/span&gt; reqs)&lt;span class="pl-s"&gt;")&lt;/span&gt;
&lt;span class="pl-s"&gt;             else&lt;/span&gt;
&lt;span class="pl-s"&gt;                 ngx.say("&lt;/span&gt;no data yet&lt;span class="pl-s"&gt;")&lt;/span&gt;
&lt;span class="pl-s"&gt;             end&lt;/span&gt;
&lt;span class="pl-s"&gt;         }&lt;/span&gt;
&lt;span class="pl-s"&gt;     }&lt;/span&gt;
&lt;span class="pl-s"&gt; }&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;This directive was first introduced in the &lt;code&gt;v0.5.0rc31&lt;/code&gt; release.&lt;/p&gt;
&lt;p&gt;&lt;a href="#directives"&gt;Back to TOC&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-log_by_lua_block" class="anchor" aria-hidden="true" href="#log_by_lua_block"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;log_by_lua_block&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;syntax:&lt;/strong&gt; &lt;em&gt;log_by_lua_block { lua-script }&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;context:&lt;/strong&gt; &lt;em&gt;http, server, location, location if&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;phase:&lt;/strong&gt; &lt;em&gt;log&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;Similar to the &lt;a href="#log_by_lua"&gt;log_by_lua&lt;/a&gt; directive except that this directive inlines
the Lua source directly
inside a pair of curly braces (&lt;code&gt;{}&lt;/code&gt;) instead of in an Nginx string literal (which requires
special character escaping).&lt;/p&gt;
&lt;p&gt;For instance,&lt;/p&gt;
&lt;div class="highlight highlight-source-nginx"&gt;&lt;pre&gt; &lt;span class="pl-k"&gt;log_by_lua_block&lt;/span&gt; {
     print("&lt;span class="pl-k"&gt;I&lt;/span&gt; need no extra escaping here, for example: \r\nblah&lt;span class="pl-s"&gt;")&lt;/span&gt;
&lt;span class="pl-s"&gt; }&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;This directive was first introduced in the &lt;code&gt;v0.9.17&lt;/code&gt; release.&lt;/p&gt;
&lt;p&gt;&lt;a href="#directives"&gt;Back to TOC&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-log_by_lua_file" class="anchor" aria-hidden="true" href="#log_by_lua_file"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;log_by_lua_file&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;syntax:&lt;/strong&gt; &lt;em&gt;log_by_lua_file &amp;lt;path-to-lua-script-file&amp;gt;&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;context:&lt;/strong&gt; &lt;em&gt;http, server, location, location if&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;phase:&lt;/strong&gt; &lt;em&gt;log&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;Equivalent to &lt;a href="#log_by_lua"&gt;log_by_lua&lt;/a&gt;, except that the file specified by &lt;code&gt;&amp;lt;path-to-lua-script-file&amp;gt;&lt;/code&gt; contains the Lua code, or, as from the &lt;code&gt;v0.5.0rc32&lt;/code&gt; release, the &lt;a href="#luajit-bytecode-support"&gt;LuaJIT bytecode&lt;/a&gt; to be executed.&lt;/p&gt;
&lt;p&gt;When a relative path like &lt;code&gt;foo/bar.lua&lt;/code&gt; is given, they will be turned into the absolute path relative to the &lt;code&gt;server prefix&lt;/code&gt; path determined by the &lt;code&gt;-p PATH&lt;/code&gt; command-line option while starting the Nginx server.&lt;/p&gt;
&lt;p&gt;This directive was first introduced in the &lt;code&gt;v0.5.0rc31&lt;/code&gt; release.&lt;/p&gt;
&lt;p&gt;&lt;a href="#directives"&gt;Back to TOC&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-balancer_by_lua_block" class="anchor" aria-hidden="true" href="#balancer_by_lua_block"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;balancer_by_lua_block&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;syntax:&lt;/strong&gt; &lt;em&gt;balancer_by_lua_block { lua-script }&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;context:&lt;/strong&gt; &lt;em&gt;upstream&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;phase:&lt;/strong&gt; &lt;em&gt;content&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;This directive runs Lua code as an upstream balancer for any upstream entities defined
by the &lt;code&gt;upstream {}&lt;/code&gt; configuration block.&lt;/p&gt;
&lt;p&gt;For instance,&lt;/p&gt;
&lt;div class="highlight highlight-source-nginx"&gt;&lt;pre&gt; &lt;span class="pl-k"&gt;upstream&lt;/span&gt; &lt;span class="pl-en"&gt;foo &lt;/span&gt;{
     &lt;span class="pl-k"&gt;server&lt;/span&gt; &lt;span class="pl-s"&gt;127.0.0.1&lt;/span&gt;;
     &lt;span class="pl-k"&gt;balancer_by_lua_block&lt;/span&gt; {
         -- &lt;span class="pl-k"&gt;use&lt;/span&gt; Lua to do something interesting here
         -- as &lt;span class="pl-s"&gt;a&lt;/span&gt; dynamic balancer
     }
 }

 server {
     location / {
         proxy_pass http://foo;
     }
 }&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;The resulting Lua load balancer can work with any existing Nginx upstream modules
like &lt;a href="https://nginx.org/en/docs/http/ngx_http_proxy_module.html" rel="nofollow"&gt;ngx_proxy&lt;/a&gt; and
&lt;a href="https://nginx.org/en/docs/http/ngx_http_fastcgi_module.html" rel="nofollow"&gt;ngx_fastcgi&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Also, the Lua load balancer can work with the standard upstream connection pool mechanism,
i.e., the standard &lt;a href="https://nginx.org/en/docs/http/ngx_http_upstream_module.html#keepalive" rel="nofollow"&gt;keepalive&lt;/a&gt; directive.
Just ensure that the &lt;a href="https://nginx.org/en/docs/http/ngx_http_upstream_module.html#keepalive" rel="nofollow"&gt;keepalive&lt;/a&gt; directive
is used &lt;em&gt;after&lt;/em&gt; this &lt;code&gt;balancer_by_lua_block&lt;/code&gt; directive in a single &lt;code&gt;upstream {}&lt;/code&gt; configuration block.&lt;/p&gt;
&lt;p&gt;The Lua load balancer can totally ignore the list of servers defined in the &lt;code&gt;upstream {}&lt;/code&gt; block
and select peer from a completely dynamic server list (even changing per request) via the
&lt;a href="https://github.com/openresty/lua-resty-core/blob/master/lib/ngx/balancer.md"&gt;ngx.balancer&lt;/a&gt; module
from the &lt;a href="https://github.com/openresty/lua-resty-core"&gt;lua-resty-core&lt;/a&gt; library.&lt;/p&gt;
&lt;p&gt;The Lua code handler registered by this directive might get called more than once in a single
downstream request when the Nginx upstream mechanism retries the request on conditions
specified by directives like the &lt;a href="https://nginx.org/en/docs/http/ngx_http_proxy_module.html#proxy_next_upstream" rel="nofollow"&gt;proxy_next_upstream&lt;/a&gt;
directive.&lt;/p&gt;
&lt;p&gt;This Lua code execution context does not support yielding, so Lua APIs that may yield
(like cosockets and "light threads") are disabled in this context. One can usually work
around this limitation by doing such operations in an earlier phase handler (like
&lt;a href="#access_by_lua"&gt;access_by_lua*&lt;/a&gt;) and passing along the result into this context
via the &lt;a href="#ngxctx"&gt;ngx.ctx&lt;/a&gt; table.&lt;/p&gt;
&lt;p&gt;This directive was first introduced in the &lt;code&gt;v0.10.0&lt;/code&gt; release.&lt;/p&gt;
&lt;p&gt;&lt;a href="#directives"&gt;Back to TOC&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-balancer_by_lua_file" class="anchor" aria-hidden="true" href="#balancer_by_lua_file"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;balancer_by_lua_file&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;syntax:&lt;/strong&gt; &lt;em&gt;balancer_by_lua_file &amp;lt;path-to-lua-script-file&amp;gt;&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;context:&lt;/strong&gt; &lt;em&gt;upstream&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;phase:&lt;/strong&gt; &lt;em&gt;content&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;Equivalent to &lt;a href="#balancer_by_lua_block"&gt;balancer_by_lua_block&lt;/a&gt;, except that the file specified by &lt;code&gt;&amp;lt;path-to-lua-script-file&amp;gt;&lt;/code&gt; contains the Lua code, or, as from the &lt;code&gt;v0.5.0rc32&lt;/code&gt; release, the &lt;a href="#luajit-bytecode-support"&gt;LuaJIT bytecode&lt;/a&gt; to be executed.&lt;/p&gt;
&lt;p&gt;When a relative path like &lt;code&gt;foo/bar.lua&lt;/code&gt; is given, they will be turned into the absolute path relative to the &lt;code&gt;server prefix&lt;/code&gt; path determined by the &lt;code&gt;-p PATH&lt;/code&gt; command-line option while starting the Nginx server.&lt;/p&gt;
&lt;p&gt;This directive was first introduced in the &lt;code&gt;v0.10.0&lt;/code&gt; release.&lt;/p&gt;
&lt;p&gt;&lt;a href="#directives"&gt;Back to TOC&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-lua_need_request_body" class="anchor" aria-hidden="true" href="#lua_need_request_body"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;lua_need_request_body&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;syntax:&lt;/strong&gt; &lt;em&gt;lua_need_request_body &amp;lt;on|off&amp;gt;&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;default:&lt;/strong&gt; &lt;em&gt;off&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;context:&lt;/strong&gt; &lt;em&gt;http, server, location, location if&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;phase:&lt;/strong&gt; &lt;em&gt;depends on usage&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;Determines whether to force the request body data to be read before running rewrite/access/access_by_lua* or not. The Nginx core does not read the client request body by default and if request body data is required, then this directive should be turned &lt;code&gt;on&lt;/code&gt; or the &lt;a href="#ngxreqread_body"&gt;ngx.req.read_body&lt;/a&gt; function should be called within the Lua code.&lt;/p&gt;
&lt;p&gt;To read the request body data within the &lt;a href="http://nginx.org/en/docs/http/ngx_http_core_module.html#var_request_body" rel="nofollow"&gt;$request_body&lt;/a&gt; variable,
&lt;a href="http://nginx.org/en/docs/http/ngx_http_core_module.html#client_body_buffer_size" rel="nofollow"&gt;client_body_buffer_size&lt;/a&gt; must have the same value as &lt;a href="http://nginx.org/en/docs/http/ngx_http_core_module.html#client_max_body_size" rel="nofollow"&gt;client_max_body_size&lt;/a&gt;. Because when the content length exceeds &lt;a href="http://nginx.org/en/docs/http/ngx_http_core_module.html#client_body_buffer_size" rel="nofollow"&gt;client_body_buffer_size&lt;/a&gt; but less than &lt;a href="http://nginx.org/en/docs/http/ngx_http_core_module.html#client_max_body_size" rel="nofollow"&gt;client_max_body_size&lt;/a&gt;, Nginx will buffer the data into a temporary file on the disk, which will lead to empty value in the &lt;a href="http://nginx.org/en/docs/http/ngx_http_core_module.html#var_request_body" rel="nofollow"&gt;$request_body&lt;/a&gt; variable.&lt;/p&gt;
&lt;p&gt;If the current location includes &lt;a href="#rewrite_by_lua"&gt;rewrite_by_lua*&lt;/a&gt; directives,
then the request body will be read just before the &lt;a href="#rewrite_by_lua"&gt;rewrite_by_lua*&lt;/a&gt; code is run (and also at the
&lt;code&gt;rewrite&lt;/code&gt; phase). Similarly, if only &lt;a href="#content_by_lua"&gt;content_by_lua&lt;/a&gt; is specified,
the request body will not be read until the content handler's Lua code is
about to run (i.e., the request body will be read during the content phase).&lt;/p&gt;
&lt;p&gt;It is recommended however, to use the &lt;a href="#ngxreqread_body"&gt;ngx.req.read_body&lt;/a&gt; and &lt;a href="#ngxreqdiscard_body"&gt;ngx.req.discard_body&lt;/a&gt; functions for finer control over the request body reading process instead.&lt;/p&gt;
&lt;p&gt;This also applies to &lt;a href="#access_by_lua"&gt;access_by_lua*&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;&lt;a href="#directives"&gt;Back to TOC&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-ssl_certificate_by_lua_block" class="anchor" aria-hidden="true" href="#ssl_certificate_by_lua_block"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;ssl_certificate_by_lua_block&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;syntax:&lt;/strong&gt; &lt;em&gt;ssl_certificate_by_lua_block { lua-script }&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;context:&lt;/strong&gt; &lt;em&gt;server&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;phase:&lt;/strong&gt; &lt;em&gt;right-before-SSL-handshake&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;This directive runs user Lua code when Nginx is about to start the SSL handshake for the downstream
SSL (https) connections.&lt;/p&gt;
&lt;p&gt;It is particularly useful for setting the SSL certificate chain and the corresponding private key on a per-request
basis. It is also useful to load such handshake configurations nonblockingly from the remote (for example,
with the &lt;a href="#ngxsockettcp"&gt;cosocket&lt;/a&gt; API). And one can also do per-request OCSP stapling handling in pure
Lua here as well.&lt;/p&gt;
&lt;p&gt;Another typical use case is to do SSL handshake traffic control nonblockingly in this context,
with the help of the &lt;a href="https://github.com/openresty/lua-resty-limit-traffic"&gt;lua-resty-limit-traffic#readme&lt;/a&gt;
library, for example.&lt;/p&gt;
&lt;p&gt;One can also do interesting things with the SSL handshake requests from the client side, like
rejecting old SSL clients using the SSLv3 protocol or even below selectively.&lt;/p&gt;
&lt;p&gt;The &lt;a href="https://github.com/openresty/lua-resty-core/blob/master/lib/ngx/ssl.md"&gt;ngx.ssl&lt;/a&gt;
and &lt;a href="https://github.com/openresty/lua-resty-core/blob/master/lib/ngx/ocsp.md"&gt;ngx.ocsp&lt;/a&gt; Lua modules
provided by the &lt;a href="https://github.com/openresty/lua-resty-core/#readme"&gt;lua-resty-core&lt;/a&gt;
library are particularly useful in this context. You can use the Lua API offered by these two Lua modules
to manipulate the SSL certificate chain and private key for the current SSL connection
being initiated.&lt;/p&gt;
&lt;p&gt;This Lua handler does not run at all, however, when Nginx/OpenSSL successfully resumes
the SSL session via SSL session IDs or TLS session tickets for the current SSL connection. In
other words, this Lua handler only runs when Nginx has to initiate a full SSL handshake.&lt;/p&gt;
&lt;p&gt;Below is a trivial example using the
&lt;a href="https://github.com/openresty/lua-resty-core/blob/master/lib/ngx/ssl.md"&gt;ngx.ssl&lt;/a&gt; module
at the same time:&lt;/p&gt;
&lt;div class="highlight highlight-source-nginx"&gt;&lt;pre&gt; &lt;span class="pl-k"&gt;server&lt;/span&gt; {
     &lt;span class="pl-k"&gt;listen&lt;/span&gt; &lt;span class="pl-s"&gt;443&lt;/span&gt; ssl;
     &lt;span class="pl-k"&gt;server_name&lt;/span&gt;   test.com;

     &lt;span class="pl-k"&gt;ssl_certificate_by_lua_block&lt;/span&gt; {
         print("&lt;span class="pl-k"&gt;About&lt;/span&gt; to initiate &lt;span class="pl-s"&gt;a&lt;/span&gt; new SSL handshake!&lt;span class="pl-s"&gt;")&lt;/span&gt;
&lt;span class="pl-s"&gt;     }&lt;/span&gt;
&lt;span class="pl-s"&gt;&lt;/span&gt;
&lt;span class="pl-s"&gt;     location / {&lt;/span&gt;
&lt;span class="pl-s"&gt;         root html;&lt;/span&gt;
&lt;span class="pl-s"&gt;     }&lt;/span&gt;
&lt;span class="pl-s"&gt; }&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;See more complicated examples in the &lt;a href="https://github.com/openresty/lua-resty-core/blob/master/lib/ngx/ssl.md"&gt;ngx.ssl&lt;/a&gt;
and &lt;a href="https://github.com/openresty/lua-resty-core/blob/master/lib/ngx/ocsp.md"&gt;ngx.ocsp&lt;/a&gt;
Lua modules' official documentation.&lt;/p&gt;
&lt;p&gt;Uncaught Lua exceptions in the user Lua code immediately abort the current SSL session, so does the
&lt;a href="#ngxexit"&gt;ngx.exit&lt;/a&gt; call with an error code like &lt;code&gt;ngx.ERROR&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;This Lua code execution context &lt;em&gt;does&lt;/em&gt; support yielding, so Lua APIs that may yield
(like cosockets, sleeping, and "light threads")
are enabled in this context.&lt;/p&gt;
&lt;p&gt;Note, however, you still need to configure the &lt;a href="https://nginx.org/en/docs/http/ngx_http_ssl_module.html#ssl_certificate" rel="nofollow"&gt;ssl_certificate&lt;/a&gt; and
&lt;a href="https://nginx.org/en/docs/http/ngx_http_ssl_module.html#ssl_certificate_key" rel="nofollow"&gt;ssl_certificate_key&lt;/a&gt;
directives even though you will not use this static certificate and private key at all. This is
because the NGINX core requires their appearance otherwise you are seeing the following error
while starting NGINX:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;nginx: [emerg] no ssl configured for the server
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;This directive requires OpenSSL 1.0.2e or greater.&lt;/p&gt;
&lt;p&gt;If you are using the &lt;a href="https://openresty.org/en/linux-packages.html" rel="nofollow"&gt;official pre-built
packages&lt;/a&gt; for
&lt;a href="https://openresty.org/" rel="nofollow"&gt;OpenResty&lt;/a&gt; 1.9.7.2 or later, then everything should
work out of the box.&lt;/p&gt;
&lt;p&gt;If you are not using one of the &lt;a href="https://openresty.org/en/linux-packages.html" rel="nofollow"&gt;OpenSSL
packages&lt;/a&gt; provided by
&lt;a href="https://openresty.org" rel="nofollow"&gt;OpenResty&lt;/a&gt;, you will need to apply patches to OpenSSL
in order to use this directive:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://openresty.org/en/openssl-patches.html" rel="nofollow"&gt;https://openresty.org/en/openssl-patches.html&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Similarly, if you are not using the Nginx core shipped with
&lt;a href="https://openresty.org" rel="nofollow"&gt;OpenResty&lt;/a&gt; 1.9.7.2 or later, you will need to apply
patches to the standard Nginx core:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://openresty.org/en/nginx-ssl-patches.html" rel="nofollow"&gt;https://openresty.org/en/nginx-ssl-patches.html&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;This directive was first introduced in the &lt;code&gt;v0.10.0&lt;/code&gt; release.&lt;/p&gt;
&lt;p&gt;&lt;a href="#directives"&gt;Back to TOC&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-ssl_certificate_by_lua_file" class="anchor" aria-hidden="true" href="#ssl_certificate_by_lua_file"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;ssl_certificate_by_lua_file&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;syntax:&lt;/strong&gt; &lt;em&gt;ssl_certificate_by_lua_file &amp;lt;path-to-lua-script-file&amp;gt;&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;context:&lt;/strong&gt; &lt;em&gt;server&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;phase:&lt;/strong&gt; &lt;em&gt;right-before-SSL-handshake&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;Equivalent to &lt;a href="#ssl_certificate_by_lua_block"&gt;ssl_certificate_by_lua_block&lt;/a&gt;, except that the file specified by &lt;code&gt;&amp;lt;path-to-lua-script-file&amp;gt;&lt;/code&gt; contains the Lua code, or, as from the &lt;code&gt;v0.5.0rc32&lt;/code&gt; release, the &lt;a href="#luajit-bytecode-support"&gt;LuaJIT bytecode&lt;/a&gt; to be executed.&lt;/p&gt;
&lt;p&gt;When a relative path like &lt;code&gt;foo/bar.lua&lt;/code&gt; is given, they will be turned into the absolute path relative to the &lt;code&gt;server prefix&lt;/code&gt; path determined by the &lt;code&gt;-p PATH&lt;/code&gt; command-line option while starting the Nginx server.&lt;/p&gt;
&lt;p&gt;This directive was first introduced in the &lt;code&gt;v0.10.0&lt;/code&gt; release.&lt;/p&gt;
&lt;p&gt;&lt;a href="#directives"&gt;Back to TOC&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-ssl_session_fetch_by_lua_block" class="anchor" aria-hidden="true" href="#ssl_session_fetch_by_lua_block"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;ssl_session_fetch_by_lua_block&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;syntax:&lt;/strong&gt; &lt;em&gt;ssl_session_fetch_by_lua_block { lua-script }&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;context:&lt;/strong&gt; &lt;em&gt;http&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;phase:&lt;/strong&gt; &lt;em&gt;right-before-SSL-handshake&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;This directive runs Lua code to look up and load the SSL session (if any) according to the session ID
provided by the current SSL handshake request for the downstream.&lt;/p&gt;
&lt;p&gt;The Lua API for obtaining the current session ID and loading a cached SSL session data
is provided in the &lt;a href="https://github.com/openresty/lua-resty-core/blob/master/lib/ngx/ssl/session.md"&gt;ngx.ssl.session&lt;/a&gt;
Lua module shipped with the &lt;a href="https://github.com/openresty/lua-resty-core#readme"&gt;lua-resty-core&lt;/a&gt;
library.&lt;/p&gt;
&lt;p&gt;Lua APIs that may yield, like &lt;a href="#ngxsleep"&gt;ngx.sleep&lt;/a&gt; and &lt;a href="#ngxsockettcp"&gt;cosockets&lt;/a&gt;,
are enabled in this context.&lt;/p&gt;
&lt;p&gt;This hook, together with the &lt;a href="#ssl_session_store_by_lua_block"&gt;ssl_session_store_by_lua*&lt;/a&gt; hook,
can be used to implement distributed caching mechanisms in pure Lua (based
on the &lt;a href="#ngxsockettcp"&gt;cosocket&lt;/a&gt; API, for example). If a cached SSL session is found
and loaded into the current SSL connection context,
SSL session resumption can then get immediately initiated and bypass the full SSL handshake process which is very expensive in terms of CPU time.&lt;/p&gt;
&lt;p&gt;Please note that TLS session tickets are very different and it is the clients' responsibility
to cache the SSL session state when session tickets are used. SSL session resumptions based on
TLS session tickets would happen automatically without going through this hook (nor the
&lt;a href="#ssl_session_store_by_lua_block"&gt;ssl_session_store_by_lua*&lt;/a&gt; hook). This hook is mainly
for older or less capable SSL clients that can only do SSL sessions by session IDs.&lt;/p&gt;
&lt;p&gt;When &lt;a href="#ssl_certificate_by_lua_block"&gt;ssl_certificate_by_lua*&lt;/a&gt; is specified at the same time,
this hook usually runs before &lt;a href="#ssl_certificate_by_lua_block"&gt;ssl_certificate_by_lua*&lt;/a&gt;.
When the SSL session is found and successfully loaded for the current SSL connection,
SSL session resumption will happen and thus bypass the &lt;a href="#ssl_certificate_by_lua_block"&gt;ssl_certificate_by_lua*&lt;/a&gt;
hook completely. In this case, Nginx also bypasses the &lt;a href="#ssl_session_store_by_lua_block"&gt;ssl_session_store_by_lua*&lt;/a&gt;
hook, for obvious reasons.&lt;/p&gt;
&lt;p&gt;To easily test this hook locally with a modern web browser, you can temporarily put the following line
in your https server block to disable the TLS session ticket support:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;ssl_session_tickets off;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;But do not forget to comment this line out before publishing your site to the world.&lt;/p&gt;
&lt;p&gt;If you are using the &lt;a href="https://openresty.org/en/linux-packages.html" rel="nofollow"&gt;official pre-built packages&lt;/a&gt; for &lt;a href="https://openresty.org/" rel="nofollow"&gt;OpenResty&lt;/a&gt;
1.11.2.1 or later, then everything should work out of the box.&lt;/p&gt;
&lt;p&gt;If you are not using one of the &lt;a href="https://openresty.org/en/linux-packages.html" rel="nofollow"&gt;OpenSSL
packages&lt;/a&gt; provided by
&lt;a href="https://openresty.org" rel="nofollow"&gt;OpenResty&lt;/a&gt;, you will need to apply patches to OpenSSL
in order to use this directive:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://openresty.org/en/openssl-patches.html" rel="nofollow"&gt;https://openresty.org/en/openssl-patches.html&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Similarly, if you are not using the Nginx core shipped with
&lt;a href="https://openresty.org" rel="nofollow"&gt;OpenResty&lt;/a&gt; 1.11.2.1 or later, you will need to apply
patches to the standard Nginx core:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://openresty.org/en/nginx-ssl-patches.html" rel="nofollow"&gt;https://openresty.org/en/nginx-ssl-patches.html&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;This directive was first introduced in the &lt;code&gt;v0.10.6&lt;/code&gt; release.&lt;/p&gt;
&lt;p&gt;Note that this directive can only be used in the &lt;strong&gt;http context&lt;/strong&gt; starting
with the &lt;code&gt;v0.10.7&lt;/code&gt; release since SSL session resumption happens
before server name dispatch.&lt;/p&gt;
&lt;p&gt;&lt;a href="#directives"&gt;Back to TOC&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-ssl_session_fetch_by_lua_file" class="anchor" aria-hidden="true" href="#ssl_session_fetch_by_lua_file"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;ssl_session_fetch_by_lua_file&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;syntax:&lt;/strong&gt; &lt;em&gt;ssl_session_fetch_by_lua_file &amp;lt;path-to-lua-script-file&amp;gt;&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;context:&lt;/strong&gt; &lt;em&gt;http&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;phase:&lt;/strong&gt; &lt;em&gt;right-before-SSL-handshake&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;Equivalent to &lt;a href="#ssl_session_fetch_by_lua_block"&gt;ssl_session_fetch_by_lua_block&lt;/a&gt;, except that the file specified by &lt;code&gt;&amp;lt;path-to-lua-script-file&amp;gt;&lt;/code&gt; contains the Lua code, or rather, the &lt;a href="#luajit-bytecode-support"&gt;LuaJIT bytecode&lt;/a&gt; to be executed.&lt;/p&gt;
&lt;p&gt;When a relative path like &lt;code&gt;foo/bar.lua&lt;/code&gt; is given, they will be turned into the absolute path relative to the &lt;code&gt;server prefix&lt;/code&gt; path determined by the &lt;code&gt;-p PATH&lt;/code&gt; command-line option while starting the Nginx server.&lt;/p&gt;
&lt;p&gt;This directive was first introduced in the &lt;code&gt;v0.10.6&lt;/code&gt; release.&lt;/p&gt;
&lt;p&gt;Note that: this directive is only allowed to used in &lt;strong&gt;http context&lt;/strong&gt; from the &lt;code&gt;v0.10.7&lt;/code&gt; release
(because SSL session resumption happens before server name dispatch).&lt;/p&gt;
&lt;p&gt;&lt;a href="#directives"&gt;Back to TOC&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-ssl_session_store_by_lua_block" class="anchor" aria-hidden="true" href="#ssl_session_store_by_lua_block"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;ssl_session_store_by_lua_block&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;syntax:&lt;/strong&gt; &lt;em&gt;ssl_session_store_by_lua_block { lua-script }&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;context:&lt;/strong&gt; &lt;em&gt;http&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;phase:&lt;/strong&gt; &lt;em&gt;right-after-SSL-handshake&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;This directive runs Lua code to fetch and save the SSL session (if any) according to the session ID
provided by the current SSL handshake request for the downstream. The saved or cached SSL
session data can be used for future SSL connections to resume SSL sessions without going
through the full SSL handshake process (which is very expensive in terms of CPU time).&lt;/p&gt;
&lt;p&gt;Lua APIs that may yield, like &lt;a href="#ngxsleep"&gt;ngx.sleep&lt;/a&gt; and &lt;a href="#ngxsockettcp"&gt;cosockets&lt;/a&gt;,
are &lt;em&gt;disabled&lt;/em&gt; in this context. You can still, however, use the &lt;a href="#ngxtimerat"&gt;ngx.timer.at&lt;/a&gt; API
to create 0-delay timers to save the SSL session data asynchronously to external services (like &lt;code&gt;redis&lt;/code&gt; or &lt;code&gt;memcached&lt;/code&gt;).&lt;/p&gt;
&lt;p&gt;The Lua API for obtaining the current session ID and the associated session state data
is provided in the &lt;a href="https://github.com/openresty/lua-resty-core/blob/master/lib/ngx/ssl/session.md#readme"&gt;ngx.ssl.session&lt;/a&gt;
Lua module shipped with the &lt;a href="https://github.com/openresty/lua-resty-core#readme"&gt;lua-resty-core&lt;/a&gt;
library.&lt;/p&gt;
&lt;p&gt;To easily test this hook locally with a modern web browser, you can temporarily put the following line
in your https server block to disable the TLS session ticket support:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;ssl_session_tickets off;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;But do not forget to comment this line out before publishing your site to the world.&lt;/p&gt;
&lt;p&gt;This directive was first introduced in the &lt;code&gt;v0.10.6&lt;/code&gt; release.&lt;/p&gt;
&lt;p&gt;Note that: this directive is only allowed to used in &lt;strong&gt;http context&lt;/strong&gt; from the &lt;code&gt;v0.10.7&lt;/code&gt; release
(because SSL session resumption happens before server name dispatch).&lt;/p&gt;
&lt;p&gt;&lt;a href="#directives"&gt;Back to TOC&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-ssl_session_store_by_lua_file" class="anchor" aria-hidden="true" href="#ssl_session_store_by_lua_file"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;ssl_session_store_by_lua_file&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;syntax:&lt;/strong&gt; &lt;em&gt;ssl_session_store_by_lua_file &amp;lt;path-to-lua-script-file&amp;gt;&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;context:&lt;/strong&gt; &lt;em&gt;http&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;phase:&lt;/strong&gt; &lt;em&gt;right-after-SSL-handshake&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;Equivalent to &lt;a href="#ssl_session_store_by_lua_block"&gt;ssl_session_store_by_lua_block&lt;/a&gt;, except that the file specified by &lt;code&gt;&amp;lt;path-to-lua-script-file&amp;gt;&lt;/code&gt; contains the Lua code, or rather, the &lt;a href="#luajit-bytecode-support"&gt;LuaJIT bytecode&lt;/a&gt; to be executed.&lt;/p&gt;
&lt;p&gt;When a relative path like &lt;code&gt;foo/bar.lua&lt;/code&gt; is given, they will be turned into the absolute path relative to the &lt;code&gt;server prefix&lt;/code&gt; path determined by the &lt;code&gt;-p PATH&lt;/code&gt; command-line option while starting the Nginx server.&lt;/p&gt;
&lt;p&gt;This directive was first introduced in the &lt;code&gt;v0.10.6&lt;/code&gt; release.&lt;/p&gt;
&lt;p&gt;Note that: this directive is only allowed to used in &lt;strong&gt;http context&lt;/strong&gt; from the &lt;code&gt;v0.10.7&lt;/code&gt; release
(because SSL session resumption happens before server name dispatch).&lt;/p&gt;
&lt;p&gt;&lt;a href="#directives"&gt;Back to TOC&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-lua_shared_dict" class="anchor" aria-hidden="true" href="#lua_shared_dict"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;lua_shared_dict&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;syntax:&lt;/strong&gt; &lt;em&gt;lua_shared_dict &amp;lt;name&amp;gt; &amp;lt;size&amp;gt;&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;default:&lt;/strong&gt; &lt;em&gt;no&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;context:&lt;/strong&gt; &lt;em&gt;http&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;phase:&lt;/strong&gt; &lt;em&gt;depends on usage&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;Declares a shared memory zone, &lt;code&gt;&amp;lt;name&amp;gt;&lt;/code&gt;, to serve as storage for the shm based Lua dictionary &lt;code&gt;ngx.shared.&amp;lt;name&amp;gt;&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;Shared memory zones are always shared by all the Nginx worker processes in the current Nginx server instance.&lt;/p&gt;
&lt;p&gt;The &lt;code&gt;&amp;lt;size&amp;gt;&lt;/code&gt; argument accepts size units such as &lt;code&gt;k&lt;/code&gt; and &lt;code&gt;m&lt;/code&gt;:&lt;/p&gt;
&lt;div class="highlight highlight-source-nginx"&gt;&lt;pre&gt; &lt;span class="pl-k"&gt;http&lt;/span&gt; {
     &lt;span class="pl-k"&gt;lua_shared_dict&lt;/span&gt; dogs &lt;span class="pl-c1"&gt;10m&lt;/span&gt;;
     ...
 }&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;The hard-coded minimum size is 8KB while the practical minimum size depends
on actual user data set (some people start with 12KB).&lt;/p&gt;
&lt;p&gt;See &lt;a href="#ngxshareddict"&gt;ngx.shared.DICT&lt;/a&gt; for details.&lt;/p&gt;
&lt;p&gt;This directive was first introduced in the &lt;code&gt;v0.3.1rc22&lt;/code&gt; release.&lt;/p&gt;
&lt;p&gt;&lt;a href="#directives"&gt;Back to TOC&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-lua_socket_connect_timeout" class="anchor" aria-hidden="true" href="#lua_socket_connect_timeout"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;lua_socket_connect_timeout&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;syntax:&lt;/strong&gt; &lt;em&gt;lua_socket_connect_timeout &amp;lt;time&amp;gt;&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;default:&lt;/strong&gt; &lt;em&gt;lua_socket_connect_timeout 60s&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;context:&lt;/strong&gt; &lt;em&gt;http, server, location&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;This directive controls the default timeout value used in TCP/unix-domain socket object's &lt;a href="#tcpsockconnect"&gt;connect&lt;/a&gt; method and can be overridden by the &lt;a href="#tcpsocksettimeout"&gt;settimeout&lt;/a&gt; or &lt;a href="#tcpsocksettimeouts"&gt;settimeouts&lt;/a&gt; methods.&lt;/p&gt;
&lt;p&gt;The &lt;code&gt;&amp;lt;time&amp;gt;&lt;/code&gt; argument can be an integer, with an optional time unit, like &lt;code&gt;s&lt;/code&gt; (second), &lt;code&gt;ms&lt;/code&gt; (millisecond), &lt;code&gt;m&lt;/code&gt; (minute). The default time unit is &lt;code&gt;s&lt;/code&gt;, i.e., "second". The default setting is &lt;code&gt;60s&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;This directive was first introduced in the &lt;code&gt;v0.5.0rc1&lt;/code&gt; release.&lt;/p&gt;
&lt;p&gt;&lt;a href="#directives"&gt;Back to TOC&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-lua_socket_send_timeout" class="anchor" aria-hidden="true" href="#lua_socket_send_timeout"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;lua_socket_send_timeout&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;syntax:&lt;/strong&gt; &lt;em&gt;lua_socket_send_timeout &amp;lt;time&amp;gt;&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;default:&lt;/strong&gt; &lt;em&gt;lua_socket_send_timeout 60s&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;context:&lt;/strong&gt; &lt;em&gt;http, server, location&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;Controls the default timeout value used in TCP/unix-domain socket object's &lt;a href="#tcpsocksend"&gt;send&lt;/a&gt; method and can be overridden by the &lt;a href="#tcpsocksettimeout"&gt;settimeout&lt;/a&gt; or &lt;a href="#tcpsocksettimeouts"&gt;settimeouts&lt;/a&gt; methods.&lt;/p&gt;
&lt;p&gt;The &lt;code&gt;&amp;lt;time&amp;gt;&lt;/code&gt; argument can be an integer, with an optional time unit, like &lt;code&gt;s&lt;/code&gt; (second), &lt;code&gt;ms&lt;/code&gt; (millisecond), &lt;code&gt;m&lt;/code&gt; (minute). The default time unit is &lt;code&gt;s&lt;/code&gt;, i.e., "second". The default setting is &lt;code&gt;60s&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;This directive was first introduced in the &lt;code&gt;v0.5.0rc1&lt;/code&gt; release.&lt;/p&gt;
&lt;p&gt;&lt;a href="#directives"&gt;Back to TOC&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-lua_socket_send_lowat" class="anchor" aria-hidden="true" href="#lua_socket_send_lowat"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;lua_socket_send_lowat&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;syntax:&lt;/strong&gt; &lt;em&gt;lua_socket_send_lowat &amp;lt;size&amp;gt;&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;default:&lt;/strong&gt; &lt;em&gt;lua_socket_send_lowat 0&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;context:&lt;/strong&gt; &lt;em&gt;http, server, location&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;Controls the &lt;code&gt;lowat&lt;/code&gt; (low water) value for the cosocket send buffer.&lt;/p&gt;
&lt;p&gt;&lt;a href="#directives"&gt;Back to TOC&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-lua_socket_read_timeout" class="anchor" aria-hidden="true" href="#lua_socket_read_timeout"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;lua_socket_read_timeout&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;syntax:&lt;/strong&gt; &lt;em&gt;lua_socket_read_timeout &amp;lt;time&amp;gt;&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;default:&lt;/strong&gt; &lt;em&gt;lua_socket_read_timeout 60s&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;context:&lt;/strong&gt; &lt;em&gt;http, server, location&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;phase:&lt;/strong&gt; &lt;em&gt;depends on usage&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;This directive controls the default timeout value used in TCP/unix-domain socket object's &lt;a href="#tcpsockreceive"&gt;receive&lt;/a&gt; method and iterator functions returned by the &lt;a href="#tcpsockreceiveuntil"&gt;receiveuntil&lt;/a&gt; method. This setting can be overridden by the &lt;a href="#tcpsocksettimeout"&gt;settimeout&lt;/a&gt; or &lt;a href="#tcpsocksettimeouts"&gt;settimeouts&lt;/a&gt; methods.&lt;/p&gt;
&lt;p&gt;The &lt;code&gt;&amp;lt;time&amp;gt;&lt;/code&gt; argument can be an integer, with an optional time unit, like &lt;code&gt;s&lt;/code&gt; (second), &lt;code&gt;ms&lt;/code&gt; (millisecond), &lt;code&gt;m&lt;/code&gt; (minute). The default time unit is &lt;code&gt;s&lt;/code&gt;, i.e., "second". The default setting is &lt;code&gt;60s&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;This directive was first introduced in the &lt;code&gt;v0.5.0rc1&lt;/code&gt; release.&lt;/p&gt;
&lt;p&gt;&lt;a href="#directives"&gt;Back to TOC&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-lua_socket_buffer_size" class="anchor" aria-hidden="true" href="#lua_socket_buffer_size"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;lua_socket_buffer_size&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;syntax:&lt;/strong&gt; &lt;em&gt;lua_socket_buffer_size &amp;lt;size&amp;gt;&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;default:&lt;/strong&gt; &lt;em&gt;lua_socket_buffer_size 4k/8k&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;context:&lt;/strong&gt; &lt;em&gt;http, server, location&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;Specifies the buffer size used by cosocket reading operations.&lt;/p&gt;
&lt;p&gt;This buffer does not have to be that big to hold everything at the same time because cosocket supports 100% non-buffered reading and parsing. So even &lt;code&gt;1&lt;/code&gt; byte buffer size should still work everywhere but the performance could be terrible.&lt;/p&gt;
&lt;p&gt;This directive was first introduced in the &lt;code&gt;v0.5.0rc1&lt;/code&gt; release.&lt;/p&gt;
&lt;p&gt;&lt;a href="#directives"&gt;Back to TOC&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-lua_socket_pool_size" class="anchor" aria-hidden="true" href="#lua_socket_pool_size"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;lua_socket_pool_size&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;syntax:&lt;/strong&gt; &lt;em&gt;lua_socket_pool_size &amp;lt;size&amp;gt;&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;default:&lt;/strong&gt; &lt;em&gt;lua_socket_pool_size 30&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;context:&lt;/strong&gt; &lt;em&gt;http, server, location&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;Specifies the size limit (in terms of connection count) for every cosocket connection pool associated with every remote server (i.e., identified by either the host-port pair or the unix domain socket file path).&lt;/p&gt;
&lt;p&gt;Default to 30 connections for every pool.&lt;/p&gt;
&lt;p&gt;When the connection pool exceeds the available size limit, the least recently used (idle) connection already in the pool will be closed to make room for the current connection.&lt;/p&gt;
&lt;p&gt;Note that the cosocket connection pool is per Nginx worker process rather than per Nginx server instance, so size limit specified here also applies to every single Nginx worker process.&lt;/p&gt;
&lt;p&gt;This directive was first introduced in the &lt;code&gt;v0.5.0rc1&lt;/code&gt; release.&lt;/p&gt;
&lt;p&gt;&lt;a href="#directives"&gt;Back to TOC&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-lua_socket_keepalive_timeout" class="anchor" aria-hidden="true" href="#lua_socket_keepalive_timeout"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;lua_socket_keepalive_timeout&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;syntax:&lt;/strong&gt; &lt;em&gt;lua_socket_keepalive_timeout &amp;lt;time&amp;gt;&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;default:&lt;/strong&gt; &lt;em&gt;lua_socket_keepalive_timeout 60s&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;context:&lt;/strong&gt; &lt;em&gt;http, server, location&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;This directive controls the default maximal idle time of the connections in the cosocket built-in connection pool. When this timeout reaches, idle connections will be closed and removed from the pool. This setting can be overridden by cosocket objects' &lt;a href="#tcpsocksetkeepalive"&gt;setkeepalive&lt;/a&gt; method.&lt;/p&gt;
&lt;p&gt;The &lt;code&gt;&amp;lt;time&amp;gt;&lt;/code&gt; argument can be an integer, with an optional time unit, like &lt;code&gt;s&lt;/code&gt; (second), &lt;code&gt;ms&lt;/code&gt; (millisecond), &lt;code&gt;m&lt;/code&gt; (minute). The default time unit is &lt;code&gt;s&lt;/code&gt;, i.e., "second". The default setting is &lt;code&gt;60s&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;This directive was first introduced in the &lt;code&gt;v0.5.0rc1&lt;/code&gt; release.&lt;/p&gt;
&lt;p&gt;&lt;a href="#directives"&gt;Back to TOC&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-lua_socket_log_errors" class="anchor" aria-hidden="true" href="#lua_socket_log_errors"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;lua_socket_log_errors&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;syntax:&lt;/strong&gt; &lt;em&gt;lua_socket_log_errors on|off&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;default:&lt;/strong&gt; &lt;em&gt;lua_socket_log_errors on&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;context:&lt;/strong&gt; &lt;em&gt;http, server, location&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;This directive can be used to toggle error logging when a failure occurs for the TCP or UDP cosockets. If you are already doing proper error handling and logging in your Lua code, then it is recommended to turn this directive off to prevent data flushing in your Nginx error log files (which is usually rather expensive).&lt;/p&gt;
&lt;p&gt;This directive was first introduced in the &lt;code&gt;v0.5.13&lt;/code&gt; release.&lt;/p&gt;
&lt;p&gt;&lt;a href="#directives"&gt;Back to TOC&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-lua_ssl_ciphers" class="anchor" aria-hidden="true" href="#lua_ssl_ciphers"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;lua_ssl_ciphers&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;syntax:&lt;/strong&gt; &lt;em&gt;lua_ssl_ciphers &amp;lt;ciphers&amp;gt;&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;default:&lt;/strong&gt; &lt;em&gt;lua_ssl_ciphers DEFAULT&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;context:&lt;/strong&gt; &lt;em&gt;http, server, location&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;Specifies the enabled ciphers for requests to a SSL/TLS server in the &lt;a href="#tcpsocksslhandshake"&gt;tcpsock:sslhandshake&lt;/a&gt; method. The ciphers are specified in the format understood by the OpenSSL library.&lt;/p&gt;
&lt;p&gt;The full list can be viewed using the “openssl ciphers” command.&lt;/p&gt;
&lt;p&gt;This directive was first introduced in the &lt;code&gt;v0.9.11&lt;/code&gt; release.&lt;/p&gt;
&lt;p&gt;&lt;a href="#directives"&gt;Back to TOC&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-lua_ssl_crl" class="anchor" aria-hidden="true" href="#lua_ssl_crl"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;lua_ssl_crl&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;syntax:&lt;/strong&gt; &lt;em&gt;lua_ssl_crl &amp;lt;file&amp;gt;&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;default:&lt;/strong&gt; &lt;em&gt;no&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;context:&lt;/strong&gt; &lt;em&gt;http, server, location&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;Specifies a file with revoked certificates (CRL) in the PEM format used to verify the certificate of the SSL/TLS server in the &lt;a href="#tcpsocksslhandshake"&gt;tcpsock:sslhandshake&lt;/a&gt; method.&lt;/p&gt;
&lt;p&gt;This directive was first introduced in the &lt;code&gt;v0.9.11&lt;/code&gt; release.&lt;/p&gt;
&lt;p&gt;&lt;a href="#directives"&gt;Back to TOC&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-lua_ssl_protocols" class="anchor" aria-hidden="true" href="#lua_ssl_protocols"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;lua_ssl_protocols&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;syntax:&lt;/strong&gt; &lt;em&gt;lua_ssl_protocols [SSLv2] [SSLv3] [TLSv1] [TLSv1.1] [TLSv1.2] [TLSv1.3]&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;default:&lt;/strong&gt; &lt;em&gt;lua_ssl_protocols SSLv3 TLSv1 TLSv1.1 TLSv1.2&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;context:&lt;/strong&gt; &lt;em&gt;http, server, location&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;Enables the specified protocols for requests to a SSL/TLS server in the &lt;a href="#tcpsocksslhandshake"&gt;tcpsock:sslhandshake&lt;/a&gt; method.&lt;/p&gt;
&lt;p&gt;The support for the &lt;code&gt;TLSv1.3&lt;/code&gt; parameter requires version &lt;code&gt;v0.10.12&lt;/code&gt; &lt;em&gt;and&lt;/em&gt; OpenSSL 1.1.1.&lt;/p&gt;
&lt;p&gt;This directive was first introduced in the &lt;code&gt;v0.9.11&lt;/code&gt; release.&lt;/p&gt;
&lt;p&gt;&lt;a href="#directives"&gt;Back to TOC&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-lua_ssl_trusted_certificate" class="anchor" aria-hidden="true" href="#lua_ssl_trusted_certificate"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;lua_ssl_trusted_certificate&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;syntax:&lt;/strong&gt; &lt;em&gt;lua_ssl_trusted_certificate &amp;lt;file&amp;gt;&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;default:&lt;/strong&gt; &lt;em&gt;no&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;context:&lt;/strong&gt; &lt;em&gt;http, server, location&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;Specifies a file path with trusted CA certificates in the PEM format used to verify the certificate of the SSL/TLS server in the &lt;a href="#tcpsocksslhandshake"&gt;tcpsock:sslhandshake&lt;/a&gt; method.&lt;/p&gt;
&lt;p&gt;This directive was first introduced in the &lt;code&gt;v0.9.11&lt;/code&gt; release.&lt;/p&gt;
&lt;p&gt;See also &lt;a href="#lua_ssl_verify_depth"&gt;lua_ssl_verify_depth&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;&lt;a href="#directives"&gt;Back to TOC&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-lua_ssl_verify_depth" class="anchor" aria-hidden="true" href="#lua_ssl_verify_depth"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;lua_ssl_verify_depth&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;syntax:&lt;/strong&gt; &lt;em&gt;lua_ssl_verify_depth &amp;lt;number&amp;gt;&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;default:&lt;/strong&gt; &lt;em&gt;lua_ssl_verify_depth 1&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;context:&lt;/strong&gt; &lt;em&gt;http, server, location&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;Sets the verification depth in the server certificates chain.&lt;/p&gt;
&lt;p&gt;This directive was first introduced in the &lt;code&gt;v0.9.11&lt;/code&gt; release.&lt;/p&gt;
&lt;p&gt;See also &lt;a href="#lua_ssl_trusted_certificate"&gt;lua_ssl_trusted_certificate&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;&lt;a href="#directives"&gt;Back to TOC&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-lua_http10_buffering" class="anchor" aria-hidden="true" href="#lua_http10_buffering"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;lua_http10_buffering&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;syntax:&lt;/strong&gt; &lt;em&gt;lua_http10_buffering on|off&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;default:&lt;/strong&gt; &lt;em&gt;lua_http10_buffering on&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;context:&lt;/strong&gt; &lt;em&gt;http, server, location, location-if&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;Enables or disables automatic response buffering for HTTP 1.0 (or older) requests. This buffering mechanism is mainly used for HTTP 1.0 keep-alive which relies on a proper &lt;code&gt;Content-Length&lt;/code&gt; response header.&lt;/p&gt;
&lt;p&gt;If the Lua code explicitly sets a &lt;code&gt;Content-Length&lt;/code&gt; response header before sending the headers (either explicitly via &lt;a href="#ngxsend_headers"&gt;ngx.send_headers&lt;/a&gt; or implicitly via the first &lt;a href="#ngxsay"&gt;ngx.say&lt;/a&gt; or &lt;a href="#ngxprint"&gt;ngx.print&lt;/a&gt; call), then the HTTP 1.0 response buffering will be disabled even when this directive is turned on.&lt;/p&gt;
&lt;p&gt;To output very large response data in a streaming fashion (via the &lt;a href="#ngxflush"&gt;ngx.flush&lt;/a&gt; call, for example), this directive MUST be turned off to minimize memory usage.&lt;/p&gt;
&lt;p&gt;This directive is turned &lt;code&gt;on&lt;/code&gt; by default.&lt;/p&gt;
&lt;p&gt;This directive was first introduced in the &lt;code&gt;v0.5.0rc19&lt;/code&gt; release.&lt;/p&gt;
&lt;p&gt;&lt;a href="#directives"&gt;Back to TOC&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-rewrite_by_lua_no_postpone" class="anchor" aria-hidden="true" href="#rewrite_by_lua_no_postpone"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;rewrite_by_lua_no_postpone&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;syntax:&lt;/strong&gt; &lt;em&gt;rewrite_by_lua_no_postpone on|off&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;default:&lt;/strong&gt; &lt;em&gt;rewrite_by_lua_no_postpone off&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;context:&lt;/strong&gt; &lt;em&gt;http&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;Controls whether or not to disable postponing &lt;a href="#rewrite_by_lua"&gt;rewrite_by_lua*&lt;/a&gt; directives to run at the end of the &lt;code&gt;rewrite&lt;/code&gt; request-processing phase. By default, this directive is turned off and the Lua code is postponed to run at the end of the &lt;code&gt;rewrite&lt;/code&gt; phase.&lt;/p&gt;
&lt;p&gt;This directive was first introduced in the &lt;code&gt;v0.5.0rc29&lt;/code&gt; release.&lt;/p&gt;
&lt;p&gt;&lt;a href="#directives"&gt;Back to TOC&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-access_by_lua_no_postpone" class="anchor" aria-hidden="true" href="#access_by_lua_no_postpone"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;access_by_lua_no_postpone&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;syntax:&lt;/strong&gt; &lt;em&gt;access_by_lua_no_postpone on|off&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;default:&lt;/strong&gt; &lt;em&gt;access_by_lua_no_postpone off&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;context:&lt;/strong&gt; &lt;em&gt;http&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;Controls whether or not to disable postponing &lt;a href="#access_by_lua"&gt;access_by_lua*&lt;/a&gt; directives to run at the end of the &lt;code&gt;access&lt;/code&gt; request-processing phase. By default, this directive is turned off and the Lua code is postponed to run at the end of the &lt;code&gt;access&lt;/code&gt; phase.&lt;/p&gt;
&lt;p&gt;This directive was first introduced in the &lt;code&gt;v0.9.20&lt;/code&gt; release.&lt;/p&gt;
&lt;p&gt;&lt;a href="#directives"&gt;Back to TOC&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-lua_transform_underscores_in_response_headers" class="anchor" aria-hidden="true" href="#lua_transform_underscores_in_response_headers"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;lua_transform_underscores_in_response_headers&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;syntax:&lt;/strong&gt; &lt;em&gt;lua_transform_underscores_in_response_headers on|off&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;default:&lt;/strong&gt; &lt;em&gt;lua_transform_underscores_in_response_headers on&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;context:&lt;/strong&gt; &lt;em&gt;http, server, location, location-if&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;Controls whether to transform underscores (&lt;code&gt;_&lt;/code&gt;) in the response header names specified in the &lt;a href="#ngxheaderheader"&gt;ngx.header.HEADER&lt;/a&gt; API to hypens (&lt;code&gt;-&lt;/code&gt;).&lt;/p&gt;
&lt;p&gt;This directive was first introduced in the &lt;code&gt;v0.5.0rc32&lt;/code&gt; release.&lt;/p&gt;
&lt;p&gt;&lt;a href="#directives"&gt;Back to TOC&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-lua_check_client_abort" class="anchor" aria-hidden="true" href="#lua_check_client_abort"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;lua_check_client_abort&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;syntax:&lt;/strong&gt; &lt;em&gt;lua_check_client_abort on|off&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;default:&lt;/strong&gt; &lt;em&gt;lua_check_client_abort off&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;context:&lt;/strong&gt; &lt;em&gt;http, server, location, location-if&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;This directive controls whether to check for premature client connection abortion.&lt;/p&gt;
&lt;p&gt;When this directive is on, the ngx_lua module will monitor the premature connection close event on the downstream connections and when there is such an event, it will call the user Lua function callback (registered by &lt;a href="#ngxon_abort"&gt;ngx.on_abort&lt;/a&gt;) or just stop and clean up all the Lua "light threads" running in the current request's request handler when there is no user callback function registered.&lt;/p&gt;
&lt;p&gt;According to the current implementation, however, if the client closes the connection before the Lua code finishes reading the request body data via &lt;a href="#ngxreqsocket"&gt;ngx.req.socket&lt;/a&gt;, then ngx_lua will neither stop all the running "light threads" nor call the user callback (if &lt;a href="#ngxon_abort"&gt;ngx.on_abort&lt;/a&gt; has been called). Instead, the reading operation on &lt;a href="#ngxreqsocket"&gt;ngx.req.socket&lt;/a&gt; will just return the error message "client aborted" as the second return value (the first return value is surely &lt;code&gt;nil&lt;/code&gt;).&lt;/p&gt;
&lt;p&gt;When TCP keepalive is disabled, it is relying on the client side to close the socket gracefully (by sending a &lt;code&gt;FIN&lt;/code&gt; packet or something like that). For (soft) real-time web applications, it is highly recommended to configure the &lt;a href="http://tldp.org/HOWTO/TCP-Keepalive-HOWTO/overview.html" rel="nofollow"&gt;TCP keepalive&lt;/a&gt; support in your system's TCP stack implementation in order to detect "half-open" TCP connections in time.&lt;/p&gt;
&lt;p&gt;For example, on Linux, you can configure the standard &lt;a href="http://nginx.org/en/docs/http/ngx_http_core_module.html#listen" rel="nofollow"&gt;listen&lt;/a&gt; directive in your &lt;code&gt;nginx.conf&lt;/code&gt; file like this:&lt;/p&gt;
&lt;div class="highlight highlight-source-nginx"&gt;&lt;pre&gt; &lt;span class="pl-k"&gt;listen&lt;/span&gt; &lt;span class="pl-s"&gt;80&lt;/span&gt; so_keepalive=2s:2s:8;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;On FreeBSD, you can only tune the system-wide configuration for TCP keepalive, for example:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;# sysctl net.inet.tcp.keepintvl=2000
# sysctl net.inet.tcp.keepidle=2000
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;This directive was first introduced in the &lt;code&gt;v0.7.4&lt;/code&gt; release.&lt;/p&gt;
&lt;p&gt;See also &lt;a href="#ngxon_abort"&gt;ngx.on_abort&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;&lt;a href="#directives"&gt;Back to TOC&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-lua_max_pending_timers" class="anchor" aria-hidden="true" href="#lua_max_pending_timers"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;lua_max_pending_timers&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;syntax:&lt;/strong&gt; &lt;em&gt;lua_max_pending_timers &amp;lt;count&amp;gt;&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;default:&lt;/strong&gt; &lt;em&gt;lua_max_pending_timers 1024&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;context:&lt;/strong&gt; &lt;em&gt;http&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;Controls the maximum number of pending timers allowed.&lt;/p&gt;
&lt;p&gt;Pending timers are those timers that have not expired yet.&lt;/p&gt;
&lt;p&gt;When exceeding this limit, the &lt;a href="#ngxtimerat"&gt;ngx.timer.at&lt;/a&gt; call will immediately return &lt;code&gt;nil&lt;/code&gt; and the error string "too many pending timers".&lt;/p&gt;
&lt;p&gt;This directive was first introduced in the &lt;code&gt;v0.8.0&lt;/code&gt; release.&lt;/p&gt;
&lt;p&gt;&lt;a href="#directives"&gt;Back to TOC&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-lua_max_running_timers" class="anchor" aria-hidden="true" href="#lua_max_running_timers"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;lua_max_running_timers&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;syntax:&lt;/strong&gt; &lt;em&gt;lua_max_running_timers &amp;lt;count&amp;gt;&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;default:&lt;/strong&gt; &lt;em&gt;lua_max_running_timers 256&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;context:&lt;/strong&gt; &lt;em&gt;http&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;Controls the maximum number of "running timers" allowed.&lt;/p&gt;
&lt;p&gt;Running timers are those timers whose user callback functions are still running.&lt;/p&gt;
&lt;p&gt;When exceeding this limit, Nginx will stop running the callbacks of newly expired timers and log an error message "N lua_max_running_timers are not enough" where "N" is the current value of this directive.&lt;/p&gt;
&lt;p&gt;This directive was first introduced in the &lt;code&gt;v0.8.0&lt;/code&gt; release.&lt;/p&gt;
&lt;p&gt;&lt;a href="#directives"&gt;Back to TOC&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-lua_sa_restart" class="anchor" aria-hidden="true" href="#lua_sa_restart"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;lua_sa_restart&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;syntax:&lt;/strong&gt; &lt;em&gt;lua_sa_restart on|off&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;default:&lt;/strong&gt; &lt;em&gt;lua_sa_restart on&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;context:&lt;/strong&gt; &lt;em&gt;http&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;When enabled, this module will set the &lt;code&gt;SA_RESTART&lt;/code&gt; flag on Nginx workers signal dispositions.&lt;/p&gt;
&lt;p&gt;This allows Lua I/O primitives to not be interrupted by Nginx's handling of various signals.&lt;/p&gt;
&lt;p&gt;This directive was first introduced in the &lt;code&gt;v0.10.14&lt;/code&gt; release.&lt;/p&gt;
&lt;p&gt;&lt;a href="#directives"&gt;Back to TOC&lt;/a&gt;&lt;/p&gt;
&lt;h1&gt;&lt;a id="user-content-nginx-api-for-lua" class="anchor" aria-hidden="true" href="#nginx-api-for-lua"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Nginx API for Lua&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="#introduction"&gt;Introduction&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#ngxarg"&gt;ngx.arg&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#ngxvarvariable"&gt;ngx.var.VARIABLE&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#core-constants"&gt;Core constants&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#http-method-constants"&gt;HTTP method constants&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#http-status-constants"&gt;HTTP status constants&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#nginx-log-level-constants"&gt;Nginx log level constants&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#print"&gt;print&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#ngxctx"&gt;ngx.ctx&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#ngxlocationcapture"&gt;ngx.location.capture&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#ngxlocationcapture_multi"&gt;ngx.location.capture_multi&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#ngxstatus"&gt;ngx.status&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#ngxheaderheader"&gt;ngx.header.HEADER&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#ngxrespget_headers"&gt;ngx.resp.get_headers&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#ngxreqis_internal"&gt;ngx.req.is_internal&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#ngxreqstart_time"&gt;ngx.req.start_time&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#ngxreqhttp_version"&gt;ngx.req.http_version&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#ngxreqraw_header"&gt;ngx.req.raw_header&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#ngxreqget_method"&gt;ngx.req.get_method&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#ngxreqset_method"&gt;ngx.req.set_method&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#ngxreqset_uri"&gt;ngx.req.set_uri&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#ngxreqset_uri_args"&gt;ngx.req.set_uri_args&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#ngxreqget_uri_args"&gt;ngx.req.get_uri_args&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#ngxreqget_post_args"&gt;ngx.req.get_post_args&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#ngxreqget_headers"&gt;ngx.req.get_headers&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#ngxreqset_header"&gt;ngx.req.set_header&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#ngxreqclear_header"&gt;ngx.req.clear_header&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#ngxreqread_body"&gt;ngx.req.read_body&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#ngxreqdiscard_body"&gt;ngx.req.discard_body&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#ngxreqget_body_data"&gt;ngx.req.get_body_data&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#ngxreqget_body_file"&gt;ngx.req.get_body_file&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#ngxreqset_body_data"&gt;ngx.req.set_body_data&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#ngxreqset_body_file"&gt;ngx.req.set_body_file&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#ngxreqinit_body"&gt;ngx.req.init_body&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#ngxreqappend_body"&gt;ngx.req.append_body&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#ngxreqfinish_body"&gt;ngx.req.finish_body&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#ngxreqsocket"&gt;ngx.req.socket&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#ngxexec"&gt;ngx.exec&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#ngxredirect"&gt;ngx.redirect&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#ngxsend_headers"&gt;ngx.send_headers&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#ngxheaders_sent"&gt;ngx.headers_sent&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#ngxprint"&gt;ngx.print&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#ngxsay"&gt;ngx.say&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#ngxlog"&gt;ngx.log&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#ngxflush"&gt;ngx.flush&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#ngxexit"&gt;ngx.exit&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#ngxeof"&gt;ngx.eof&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#ngxsleep"&gt;ngx.sleep&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#ngxescape_uri"&gt;ngx.escape_uri&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#ngxunescape_uri"&gt;ngx.unescape_uri&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#ngxencode_args"&gt;ngx.encode_args&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#ngxdecode_args"&gt;ngx.decode_args&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#ngxencode_base64"&gt;ngx.encode_base64&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#ngxdecode_base64"&gt;ngx.decode_base64&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#ngxcrc32_short"&gt;ngx.crc32_short&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#ngxcrc32_long"&gt;ngx.crc32_long&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#ngxhmac_sha1"&gt;ngx.hmac_sha1&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#ngxmd5"&gt;ngx.md5&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#ngxmd5_bin"&gt;ngx.md5_bin&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#ngxsha1_bin"&gt;ngx.sha1_bin&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#ngxquote_sql_str"&gt;ngx.quote_sql_str&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#ngxtoday"&gt;ngx.today&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#ngxtime"&gt;ngx.time&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#ngxnow"&gt;ngx.now&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#ngxupdate_time"&gt;ngx.update_time&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#ngxlocaltime"&gt;ngx.localtime&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#ngxutctime"&gt;ngx.utctime&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#ngxcookie_time"&gt;ngx.cookie_time&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#ngxhttp_time"&gt;ngx.http_time&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#ngxparse_http_time"&gt;ngx.parse_http_time&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#ngxis_subrequest"&gt;ngx.is_subrequest&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#ngxrematch"&gt;ngx.re.match&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#ngxrefind"&gt;ngx.re.find&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#ngxregmatch"&gt;ngx.re.gmatch&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#ngxresub"&gt;ngx.re.sub&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#ngxregsub"&gt;ngx.re.gsub&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#ngxshareddict"&gt;ngx.shared.DICT&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#ngxshareddictget"&gt;ngx.shared.DICT.get&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#ngxshareddictget_stale"&gt;ngx.shared.DICT.get_stale&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#ngxshareddictset"&gt;ngx.shared.DICT.set&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#ngxshareddictsafe_set"&gt;ngx.shared.DICT.safe_set&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#ngxshareddictadd"&gt;ngx.shared.DICT.add&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#ngxshareddictsafe_add"&gt;ngx.shared.DICT.safe_add&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#ngxshareddictreplace"&gt;ngx.shared.DICT.replace&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#ngxshareddictdelete"&gt;ngx.shared.DICT.delete&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#ngxshareddictincr"&gt;ngx.shared.DICT.incr&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#ngxshareddictlpush"&gt;ngx.shared.DICT.lpush&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#ngxshareddictrpush"&gt;ngx.shared.DICT.rpush&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#ngxshareddictlpop"&gt;ngx.shared.DICT.lpop&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#ngxshareddictrpop"&gt;ngx.shared.DICT.rpop&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#ngxshareddictllen"&gt;ngx.shared.DICT.llen&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#ngxshareddictttl"&gt;ngx.shared.DICT.ttl&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#ngxshareddictexpire"&gt;ngx.shared.DICT.expire&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#ngxshareddictflush_all"&gt;ngx.shared.DICT.flush_all&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#ngxshareddictflush_expired"&gt;ngx.shared.DICT.flush_expired&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#ngxshareddictget_keys"&gt;ngx.shared.DICT.get_keys&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#ngxshareddictcapacity"&gt;ngx.shared.DICT.capacity&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#ngxshareddictfree_space"&gt;ngx.shared.DICT.free_space&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#ngxsocketudp"&gt;ngx.socket.udp&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#udpsocksetpeername"&gt;udpsock:setpeername&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#udpsocksend"&gt;udpsock:send&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#udpsockreceive"&gt;udpsock:receive&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#udpsockclose"&gt;udpsock:close&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#udpsocksettimeout"&gt;udpsock:settimeout&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#ngxsocketstream"&gt;ngx.socket.stream&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#ngxsockettcp"&gt;ngx.socket.tcp&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#tcpsockconnect"&gt;tcpsock:connect&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#tcpsocksslhandshake"&gt;tcpsock:sslhandshake&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#tcpsocksend"&gt;tcpsock:send&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#tcpsockreceive"&gt;tcpsock:receive&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#tcpsockreceiveany"&gt;tcpsock:receiveany&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#tcpsockreceiveuntil"&gt;tcpsock:receiveuntil&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#tcpsockclose"&gt;tcpsock:close&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#tcpsocksettimeout"&gt;tcpsock:settimeout&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#tcpsocksettimeouts"&gt;tcpsock:settimeouts&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#tcpsocksetoption"&gt;tcpsock:setoption&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#tcpsocksetkeepalive"&gt;tcpsock:setkeepalive&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#tcpsockgetreusedtimes"&gt;tcpsock:getreusedtimes&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#ngxsocketconnect"&gt;ngx.socket.connect&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#ngxget_phase"&gt;ngx.get_phase&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#ngxthreadspawn"&gt;ngx.thread.spawn&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#ngxthreadwait"&gt;ngx.thread.wait&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#ngxthreadkill"&gt;ngx.thread.kill&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#ngxon_abort"&gt;ngx.on_abort&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#ngxtimerat"&gt;ngx.timer.at&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#ngxtimerevery"&gt;ngx.timer.every&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#ngxtimerrunning_count"&gt;ngx.timer.running_count&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#ngxtimerpending_count"&gt;ngx.timer.pending_count&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#ngxconfigsubsystem"&gt;ngx.config.subsystem&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#ngxconfigdebug"&gt;ngx.config.debug&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#ngxconfigprefix"&gt;ngx.config.prefix&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#ngxconfignginx_version"&gt;ngx.config.nginx_version&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#ngxconfignginx_configure"&gt;ngx.config.nginx_configure&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#ngxconfigngx_lua_version"&gt;ngx.config.ngx_lua_version&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#ngxworkerexiting"&gt;ngx.worker.exiting&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#ngxworkerpid"&gt;ngx.worker.pid&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#ngxworkercount"&gt;ngx.worker.count&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#ngxworkerid"&gt;ngx.worker.id&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#ngxsemaphore"&gt;ngx.semaphore&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#ngxbalancer"&gt;ngx.balancer&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#ngxssl"&gt;ngx.ssl&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#ngxocsp"&gt;ngx.ocsp&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#ndkset_vardirective"&gt;ndk.set_var.DIRECTIVE&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#coroutinecreate"&gt;coroutine.create&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#coroutineresume"&gt;coroutine.resume&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#coroutineyield"&gt;coroutine.yield&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#coroutinewrap"&gt;coroutine.wrap&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#coroutinerunning"&gt;coroutine.running&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#coroutinestatus"&gt;coroutine.status&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;a href="#table-of-contents"&gt;Back to TOC&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-introduction" class="anchor" aria-hidden="true" href="#introduction"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Introduction&lt;/h2&gt;
&lt;p&gt;The various &lt;code&gt;*_by_lua&lt;/code&gt;, &lt;code&gt;*_by_lua_block&lt;/code&gt; and &lt;code&gt;*_by_lua_file&lt;/code&gt; configuration directives serve as gateways to the Lua API within the &lt;code&gt;nginx.conf&lt;/code&gt; file. The Nginx Lua API described below can only be called within the user Lua code run in the context of these configuration directives.&lt;/p&gt;
&lt;p&gt;The API is exposed to Lua in the form of two standard packages &lt;code&gt;ngx&lt;/code&gt; and &lt;code&gt;ndk&lt;/code&gt;. These packages are in the default global scope within ngx_lua and are always available within ngx_lua directives.&lt;/p&gt;
&lt;p&gt;The packages can be introduced into external Lua modules like this:&lt;/p&gt;
&lt;div class="highlight highlight-source-lua"&gt;&lt;pre&gt; &lt;span class="pl-k"&gt;local&lt;/span&gt; say &lt;span class="pl-k"&gt;=&lt;/span&gt; ngx.&lt;span class="pl-smi"&gt;say&lt;/span&gt;

 &lt;span class="pl-k"&gt;local&lt;/span&gt; _M &lt;span class="pl-k"&gt;=&lt;/span&gt; {}

 &lt;span class="pl-k"&gt;function&lt;/span&gt; &lt;span class="pl-en"&gt;_M.foo&lt;/span&gt;(&lt;span class="pl-smi"&gt;a&lt;/span&gt;)
     &lt;span class="pl-c1"&gt;say&lt;/span&gt;(a)
 &lt;span class="pl-k"&gt;end&lt;/span&gt;

 &lt;span class="pl-k"&gt;return&lt;/span&gt; _M&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Use of the &lt;a href="https://www.lua.org/manual/5.1/manual.html#pdf-package.seeall" rel="nofollow"&gt;package.seeall&lt;/a&gt; flag is strongly discouraged due to its various bad side-effects.&lt;/p&gt;
&lt;p&gt;It is also possible to directly require the packages in external Lua modules:&lt;/p&gt;
&lt;div class="highlight highlight-source-lua"&gt;&lt;pre&gt; &lt;span class="pl-k"&gt;local&lt;/span&gt; ngx &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;require&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;ngx&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;
 &lt;span class="pl-k"&gt;local&lt;/span&gt; ndk &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;require&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;ndk&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;The ability to require these packages was introduced in the &lt;code&gt;v0.2.1rc19&lt;/code&gt; release.&lt;/p&gt;
&lt;p&gt;Network I/O operations in user code should only be done through the Nginx Lua API calls as the Nginx event loop may be blocked and performance drop off dramatically otherwise. Disk operations with relatively small amount of data can be done using the standard Lua &lt;code&gt;io&lt;/code&gt; library but huge file reading and writing should be avoided wherever possible as they may block the Nginx process significantly. Delegating all network and disk I/O operations to Nginx's subrequests (via the &lt;a href="#ngxlocationcapture"&gt;ngx.location.capture&lt;/a&gt; method and similar) is strongly recommended for maximum performance.&lt;/p&gt;
&lt;p&gt;&lt;a href="#nginx-api-for-lua"&gt;Back to TOC&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-ngxarg" class="anchor" aria-hidden="true" href="#ngxarg"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;ngx.arg&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;syntax:&lt;/strong&gt; &lt;em&gt;val = ngx.arg[index]&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;context:&lt;/strong&gt; &lt;em&gt;set_by_lua*, body_filter_by_lua*&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;When this is used in the context of the &lt;a href="#set_by_lua"&gt;set_by_lua*&lt;/a&gt; directives, this table is read-only and holds the input arguments to the config directives:&lt;/p&gt;
&lt;div class="highlight highlight-source-lua"&gt;&lt;pre&gt; value &lt;span class="pl-k"&gt;=&lt;/span&gt; ngx.&lt;span class="pl-smi"&gt;arg&lt;/span&gt;[n]&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Here is an example&lt;/p&gt;
&lt;div class="highlight highlight-source-nginx"&gt;&lt;pre&gt; &lt;span class="pl-k"&gt;location&lt;/span&gt; &lt;span class="pl-en"&gt;/foo &lt;/span&gt;{
     &lt;span class="pl-k"&gt;set&lt;/span&gt; &lt;span class="pl-smi"&gt;$a&lt;/span&gt; &lt;span class="pl-s"&gt;32&lt;/span&gt;;
     &lt;span class="pl-k"&gt;set&lt;/span&gt; &lt;span class="pl-smi"&gt;$b&lt;/span&gt; &lt;span class="pl-s"&gt;56&lt;/span&gt;;

     &lt;span class="pl-k"&gt;set_by_lua&lt;/span&gt; &lt;span class="pl-smi"&gt;$sum&lt;/span&gt;
         '&lt;span class="pl-c1"&gt;return&lt;/span&gt; tonumber(ngx.arg[1]) + tonumber(ngx.arg[2])&lt;span class="pl-s"&gt;'&lt;/span&gt;
&lt;span class="pl-s"&gt;         &lt;span class="pl-smi"&gt;$a&lt;/span&gt; &lt;span class="pl-smi"&gt;$b&lt;/span&gt;;&lt;/span&gt;
&lt;span class="pl-s"&gt;&lt;/span&gt;
&lt;span class="pl-s"&gt;     echo &lt;span class="pl-smi"&gt;$sum&lt;/span&gt;;&lt;/span&gt;
&lt;span class="pl-s"&gt; }&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;that writes out &lt;code&gt;88&lt;/code&gt;, the sum of &lt;code&gt;32&lt;/code&gt; and &lt;code&gt;56&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;When this table is used in the context of &lt;a href="#body_filter_by_lua"&gt;body_filter_by_lua*&lt;/a&gt;, the first element holds the input data chunk to the output filter code and the second element holds the boolean flag for the "eof" flag indicating the end of the whole output data stream.&lt;/p&gt;
&lt;p&gt;The data chunk and "eof" flag passed to the downstream Nginx output filters can also be overridden by assigning values directly to the corresponding table elements. When setting &lt;code&gt;nil&lt;/code&gt; or an empty Lua string value to &lt;code&gt;ngx.arg[1]&lt;/code&gt;, no data chunk will be passed to the downstream Nginx output filters at all.&lt;/p&gt;
&lt;p&gt;&lt;a href="#nginx-api-for-lua"&gt;Back to TOC&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-ngxvarvariable" class="anchor" aria-hidden="true" href="#ngxvarvariable"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;ngx.var.VARIABLE&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;syntax:&lt;/strong&gt; &lt;em&gt;ngx.var.VAR_NAME&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;context:&lt;/strong&gt; &lt;em&gt;set_by_lua*, rewrite_by_lua*, access_by_lua*, content_by_lua*, header_filter_by_lua*, body_filter_by_lua*, log_by_lua*&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;Read and write Nginx variable values.&lt;/p&gt;
&lt;div class="highlight highlight-source-nginx"&gt;&lt;pre&gt; &lt;span class="pl-k"&gt;value&lt;/span&gt; = ngx.var.some_nginx_variable_name
 ngx.var.&lt;span class="pl-k"&gt;some_nginx_variable_name&lt;/span&gt; = value&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Note that only already defined Nginx variables can be written to.
For example:&lt;/p&gt;
&lt;div class="highlight highlight-source-nginx"&gt;&lt;pre&gt; &lt;span class="pl-k"&gt;location&lt;/span&gt; &lt;span class="pl-en"&gt;/foo &lt;/span&gt;{
     &lt;span class="pl-k"&gt;set&lt;/span&gt; &lt;span class="pl-smi"&gt;$my_var&lt;/span&gt; &lt;span class="pl-s"&gt;''&lt;/span&gt;; &lt;span class="pl-c"&gt;# this line is required to create $my_var at config time&lt;/span&gt;
     &lt;span class="pl-k"&gt;content_by_lua_block&lt;/span&gt; {
         ngx.var.&lt;span class="pl-k"&gt;my_var&lt;/span&gt; = &lt;span class="pl-s"&gt;123&lt;/span&gt;;
         ...
     }
 }&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;That is, Nginx variables cannot be created on-the-fly.&lt;/p&gt;
&lt;p&gt;Some special Nginx variables like &lt;code&gt;$args&lt;/code&gt; and &lt;code&gt;$limit_rate&lt;/code&gt; can be assigned a value,
many others are not, like &lt;code&gt;$query_string&lt;/code&gt;, &lt;code&gt;$arg_PARAMETER&lt;/code&gt;, and &lt;code&gt;$http_NAME&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;Nginx regex group capturing variables &lt;code&gt;$1&lt;/code&gt;, &lt;code&gt;$2&lt;/code&gt;, &lt;code&gt;$3&lt;/code&gt;, and etc, can be read by this
interface as well, by writing &lt;code&gt;ngx.var[1]&lt;/code&gt;, &lt;code&gt;ngx.var[2]&lt;/code&gt;, &lt;code&gt;ngx.var[3]&lt;/code&gt;, and etc.&lt;/p&gt;
&lt;p&gt;Setting &lt;code&gt;ngx.var.Foo&lt;/code&gt; to a &lt;code&gt;nil&lt;/code&gt; value will unset the &lt;code&gt;$Foo&lt;/code&gt; Nginx variable.&lt;/p&gt;
&lt;div class="highlight highlight-source-lua"&gt;&lt;pre&gt; ngx.&lt;span class="pl-smi"&gt;var&lt;/span&gt;.&lt;span class="pl-smi"&gt;args&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;nil&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;strong&gt;CAUTION&lt;/strong&gt; When reading from an Nginx variable, Nginx will allocate memory in the per-request memory pool which is freed only at request termination. So when you need to read from an Nginx variable repeatedly in your Lua code, cache the Nginx variable value to your own Lua variable, for example,&lt;/p&gt;
&lt;div class="highlight highlight-source-lua"&gt;&lt;pre&gt; &lt;span class="pl-k"&gt;local&lt;/span&gt; val &lt;span class="pl-k"&gt;=&lt;/span&gt; ngx.&lt;span class="pl-smi"&gt;var&lt;/span&gt;.&lt;span class="pl-smi"&gt;some_var&lt;/span&gt;
 &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;--&lt;/span&gt;- use the val repeatedly later&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;to prevent (temporary) memory leaking within the current request's lifetime. Another way of caching the result is to use the &lt;a href="#ngxctx"&gt;ngx.ctx&lt;/a&gt; table.&lt;/p&gt;
&lt;p&gt;Undefined Nginx variables are evaluated to &lt;code&gt;nil&lt;/code&gt; while uninitialized (but defined) Nginx variables are evaluated to an empty Lua string.&lt;/p&gt;
&lt;p&gt;This API requires a relatively expensive metamethod call and it is recommended to avoid using it on hot code paths.&lt;/p&gt;
&lt;p&gt;&lt;a href="#nginx-api-for-lua"&gt;Back to TOC&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-core-constants" class="anchor" aria-hidden="true" href="#core-constants"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Core constants&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;context:&lt;/strong&gt; &lt;em&gt;init_by_lua*, set_by_lua*, rewrite_by_lua*, access_by_lua*, content_by_lua*, header_filter_by_lua*, body_filter_by_lua*, *log_by_lua*, ngx.timer.*, balancer_by_lua*, ssl_certificate_by_lua*, ssl_session_fetch_by_lua*, ssl_session_store_by_lua*&lt;/em&gt;&lt;/p&gt;
&lt;div class="highlight highlight-source-lua"&gt;&lt;pre&gt;   ngx.&lt;span class="pl-c1"&gt;OK&lt;/span&gt; (&lt;span class="pl-c1"&gt;0&lt;/span&gt;)
   ngx.&lt;span class="pl-c1"&gt;ERROR&lt;/span&gt; (&lt;span class="pl-k"&gt;-&lt;/span&gt;&lt;span class="pl-c1"&gt;1&lt;/span&gt;)
   ngx.&lt;span class="pl-c1"&gt;AGAIN&lt;/span&gt; (&lt;span class="pl-k"&gt;-&lt;/span&gt;&lt;span class="pl-c1"&gt;2&lt;/span&gt;)
   ngx.&lt;span class="pl-c1"&gt;DONE&lt;/span&gt; (&lt;span class="pl-k"&gt;-&lt;/span&gt;&lt;span class="pl-c1"&gt;4&lt;/span&gt;)
   ngx.&lt;span class="pl-c1"&gt;DECLINED&lt;/span&gt; (&lt;span class="pl-k"&gt;-&lt;/span&gt;&lt;span class="pl-c1"&gt;5&lt;/span&gt;)&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Note that only three of these constants are utilized by the &lt;a href="#nginx-api-for-lua"&gt;Nginx API for Lua&lt;/a&gt; (i.e., &lt;a href="#ngxexit"&gt;ngx.exit&lt;/a&gt; accepts &lt;code&gt;ngx.OK&lt;/code&gt;, &lt;code&gt;ngx.ERROR&lt;/code&gt;, and &lt;code&gt;ngx.DECLINED&lt;/code&gt; as input).&lt;/p&gt;
&lt;div class="highlight highlight-source-lua"&gt;&lt;pre&gt;   ngx.&lt;span class="pl-smi"&gt;null&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;The &lt;code&gt;ngx.null&lt;/code&gt; constant is a &lt;code&gt;NULL&lt;/code&gt; light userdata usually used to represent nil values in Lua tables etc and is similar to the &lt;a href="http://www.kyne.com.au/~mark/software/lua-cjson.php" rel="nofollow"&gt;lua-cjson&lt;/a&gt; library's &lt;code&gt;cjson.null&lt;/code&gt; constant. This constant was first introduced in the &lt;code&gt;v0.5.0rc5&lt;/code&gt; release.&lt;/p&gt;
&lt;p&gt;The &lt;code&gt;ngx.DECLINED&lt;/code&gt; constant was first introduced in the &lt;code&gt;v0.5.0rc19&lt;/code&gt; release.&lt;/p&gt;
&lt;p&gt;&lt;a href="#nginx-api-for-lua"&gt;Back to TOC&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-http-method-constants" class="anchor" aria-hidden="true" href="#http-method-constants"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;HTTP method constants&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;context:&lt;/strong&gt; &lt;em&gt;init_by_lua*, set_by_lua*, rewrite_by_lua*, access_by_lua*, content_by_lua*, header_filter_by_lua*, body_filter_by_lua*, log_by_lua*, ngx.timer.*, balancer_by_lua*, ssl_certificate_by_lua*, ssl_session_fetch_by_lua*, ssl_session_store_by_lua*&lt;/em&gt;&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;  ngx.HTTP_GET
  ngx.HTTP_HEAD
  ngx.HTTP_PUT
  ngx.HTTP_POST
  ngx.HTTP_DELETE
  ngx.HTTP_OPTIONS   (added in the v0.5.0rc24 release)
  ngx.HTTP_MKCOL     (added in the v0.8.2 release)
  ngx.HTTP_COPY      (added in the v0.8.2 release)
  ngx.HTTP_MOVE      (added in the v0.8.2 release)
  ngx.HTTP_PROPFIND  (added in the v0.8.2 release)
  ngx.HTTP_PROPPATCH (added in the v0.8.2 release)
  ngx.HTTP_LOCK      (added in the v0.8.2 release)
  ngx.HTTP_UNLOCK    (added in the v0.8.2 release)
  ngx.HTTP_PATCH     (added in the v0.8.2 release)
  ngx.HTTP_TRACE     (added in the v0.8.2 release)
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;These constants are usually used in &lt;a href="#ngxlocationcapture"&gt;ngx.location.capture&lt;/a&gt; and &lt;a href="#ngxlocationcapture_multi"&gt;ngx.location.capture_multi&lt;/a&gt; method calls.&lt;/p&gt;
&lt;p&gt;&lt;a href="#nginx-api-for-lua"&gt;Back to TOC&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-http-status-constants" class="anchor" aria-hidden="true" href="#http-status-constants"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;HTTP status constants&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;context:&lt;/strong&gt; &lt;em&gt;init_by_lua*, set_by_lua*, rewrite_by_lua*, access_by_lua*, content_by_lua*, header_filter_by_lua*, body_filter_by_lua*, log_by_lua*, ngx.timer.*, balancer_by_lua*, ssl_certificate_by_lua*, ssl_session_fetch_by_lua*, ssl_session_store_by_lua*&lt;/em&gt;&lt;/p&gt;
&lt;div class="highlight highlight-source-nginx"&gt;&lt;pre&gt;   &lt;span class="pl-k"&gt;value&lt;/span&gt; = ngx.HTTP_CONTINUE (100) (first &lt;span class="pl-s"&gt;added&lt;/span&gt; in the v0.9.20 release)
   &lt;span class="pl-k"&gt;value&lt;/span&gt; = ngx.HTTP_SWITCHING_PROTOCOLS (101) (first &lt;span class="pl-s"&gt;added&lt;/span&gt; in the v0.9.20 release)
   &lt;span class="pl-k"&gt;value&lt;/span&gt; = ngx.HTTP_OK (200)
   &lt;span class="pl-k"&gt;value&lt;/span&gt; = ngx.HTTP_CREATED (201)
   &lt;span class="pl-k"&gt;value&lt;/span&gt; = ngx.HTTP_ACCEPTED (202) (first &lt;span class="pl-s"&gt;added&lt;/span&gt; in the v0.9.20 release)
   &lt;span class="pl-k"&gt;value&lt;/span&gt; = ngx.HTTP_NO_CONTENT (204) (first &lt;span class="pl-s"&gt;added&lt;/span&gt; in the v0.9.20 release)
   &lt;span class="pl-k"&gt;value&lt;/span&gt; = ngx.HTTP_PARTIAL_CONTENT (206) (first &lt;span class="pl-s"&gt;added&lt;/span&gt; in the v0.9.20 release)
   &lt;span class="pl-k"&gt;value&lt;/span&gt; = ngx.HTTP_SPECIAL_RESPONSE (300)
   &lt;span class="pl-k"&gt;value&lt;/span&gt; = ngx.HTTP_MOVED_PERMANENTLY (301)
   &lt;span class="pl-k"&gt;value&lt;/span&gt; = ngx.HTTP_MOVED_TEMPORARILY (302)
   &lt;span class="pl-k"&gt;value&lt;/span&gt; = ngx.HTTP_SEE_OTHER (303)
   &lt;span class="pl-k"&gt;value&lt;/span&gt; = ngx.HTTP_NOT_MODIFIED (304)
   &lt;span class="pl-k"&gt;value&lt;/span&gt; = ngx.HTTP_TEMPORARY_REDIRECT (307) (first &lt;span class="pl-s"&gt;added&lt;/span&gt; in the v0.9.20 release)
   &lt;span class="pl-k"&gt;value&lt;/span&gt; = ngx.HTTP_PERMANENT_REDIRECT (308)
   &lt;span class="pl-k"&gt;value&lt;/span&gt; = ngx.HTTP_BAD_REQUEST (400)
   &lt;span class="pl-k"&gt;value&lt;/span&gt; = ngx.HTTP_UNAUTHORIZED (401)
   &lt;span class="pl-k"&gt;value&lt;/span&gt; = ngx.HTTP_PAYMENT_REQUIRED (402) (first &lt;span class="pl-s"&gt;added&lt;/span&gt; in the v0.9.20 release)
   &lt;span class="pl-k"&gt;value&lt;/span&gt; = ngx.HTTP_FORBIDDEN (403)
   &lt;span class="pl-k"&gt;value&lt;/span&gt; = ngx.HTTP_NOT_FOUND (404)
   &lt;span class="pl-k"&gt;value&lt;/span&gt; = ngx.HTTP_NOT_ALLOWED (405)
   &lt;span class="pl-k"&gt;value&lt;/span&gt; = ngx.HTTP_NOT_ACCEPTABLE (406) (first &lt;span class="pl-s"&gt;added&lt;/span&gt; in the v0.9.20 release)
   &lt;span class="pl-k"&gt;value&lt;/span&gt; = ngx.HTTP_REQUEST_TIMEOUT (408) (first &lt;span class="pl-s"&gt;added&lt;/span&gt; in the v0.9.20 release)
   &lt;span class="pl-k"&gt;value&lt;/span&gt; = ngx.HTTP_CONFLICT (409) (first &lt;span class="pl-s"&gt;added&lt;/span&gt; in the v0.9.20 release)
   &lt;span class="pl-k"&gt;value&lt;/span&gt; = ngx.HTTP_GONE (410)
   &lt;span class="pl-k"&gt;value&lt;/span&gt; = ngx.HTTP_UPGRADE_REQUIRED (426) (first &lt;span class="pl-s"&gt;added&lt;/span&gt; in the v0.9.20 release)
   &lt;span class="pl-k"&gt;value&lt;/span&gt; = ngx.HTTP_TOO_MANY_REQUESTS (429) (first &lt;span class="pl-s"&gt;added&lt;/span&gt; in the v0.9.20 release)
   &lt;span class="pl-k"&gt;value&lt;/span&gt; = ngx.HTTP_CLOSE (444) (first &lt;span class="pl-s"&gt;added&lt;/span&gt; in the v0.9.20 release)
   &lt;span class="pl-k"&gt;value&lt;/span&gt; = ngx.HTTP_ILLEGAL (451) (first &lt;span class="pl-s"&gt;added&lt;/span&gt; in the v0.9.20 release)
   &lt;span class="pl-k"&gt;value&lt;/span&gt; = ngx.HTTP_INTERNAL_SERVER_ERROR (500)
   &lt;span class="pl-k"&gt;value&lt;/span&gt; = ngx.HTTP_METHOD_NOT_IMPLEMENTED (501)
   &lt;span class="pl-k"&gt;value&lt;/span&gt; = ngx.HTTP_BAD_GATEWAY (502) (first &lt;span class="pl-s"&gt;added&lt;/span&gt; in the v0.9.20 release)
   &lt;span class="pl-k"&gt;value&lt;/span&gt; = ngx.HTTP_SERVICE_UNAVAILABLE (503)
   &lt;span class="pl-k"&gt;value&lt;/span&gt; = ngx.HTTP_GATEWAY_TIMEOUT (504) (first &lt;span class="pl-s"&gt;added&lt;/span&gt; in the v0.3.1rc38 release)
   &lt;span class="pl-k"&gt;value&lt;/span&gt; = ngx.HTTP_VERSION_NOT_SUPPORTED (505) (first &lt;span class="pl-s"&gt;added&lt;/span&gt; in the v0.9.20 release)
   &lt;span class="pl-k"&gt;value&lt;/span&gt; = ngx.HTTP_INSUFFICIENT_STORAGE (507) (first &lt;span class="pl-s"&gt;added&lt;/span&gt; in the v0.9.20 release)&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;a href="#nginx-api-for-lua"&gt;Back to TOC&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-nginx-log-level-constants" class="anchor" aria-hidden="true" href="#nginx-log-level-constants"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Nginx log level constants&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;context:&lt;/strong&gt; &lt;em&gt;init_by_lua*, init_worker_by_lua*, set_by_lua*, rewrite_by_lua*, access_by_lua*, content_by_lua*, header_filter_by_lua*, body_filter_by_lua*, log_by_lua*, ngx.timer.*, balancer_by_lua*, ssl_certificate_by_lua*, ssl_session_fetch_by_lua*, ssl_session_store_by_lua*&lt;/em&gt;&lt;/p&gt;
&lt;div class="highlight highlight-source-lua"&gt;&lt;pre&gt;   ngx.&lt;span class="pl-smi"&gt;STDERR&lt;/span&gt;
   ngx.&lt;span class="pl-smi"&gt;EMERG&lt;/span&gt;
   ngx.&lt;span class="pl-smi"&gt;ALERT&lt;/span&gt;
   ngx.&lt;span class="pl-smi"&gt;CRIT&lt;/span&gt;
   ngx.&lt;span class="pl-smi"&gt;ERR&lt;/span&gt;
   ngx.&lt;span class="pl-smi"&gt;WARN&lt;/span&gt;
   ngx.&lt;span class="pl-smi"&gt;NOTICE&lt;/span&gt;
   ngx.&lt;span class="pl-smi"&gt;INFO&lt;/span&gt;
   ngx.&lt;span class="pl-smi"&gt;DEBUG&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;These constants are usually used by the &lt;a href="#ngxlog"&gt;ngx.log&lt;/a&gt; method.&lt;/p&gt;
&lt;p&gt;&lt;a href="#nginx-api-for-lua"&gt;Back to TOC&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-print" class="anchor" aria-hidden="true" href="#print"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;print&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;syntax:&lt;/strong&gt; &lt;em&gt;print(...)&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;context:&lt;/strong&gt; &lt;em&gt;init_by_lua*, init_worker_by_lua*, set_by_lua*, rewrite_by_lua*, access_by_lua*, content_by_lua*, header_filter_by_lua*, body_filter_by_lua*, log_by_lua*, ngx.timer.*, balancer_by_lua*, ssl_certificate_by_lua*, ssl_session_fetch_by_lua*, ssl_session_store_by_lua*&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;Writes argument values into the Nginx &lt;code&gt;error.log&lt;/code&gt; file with the &lt;code&gt;ngx.NOTICE&lt;/code&gt; log level.&lt;/p&gt;
&lt;p&gt;It is equivalent to&lt;/p&gt;
&lt;div class="highlight highlight-source-lua"&gt;&lt;pre&gt; ngx.&lt;span class="pl-c1"&gt;log&lt;/span&gt;(ngx.&lt;span class="pl-smi"&gt;NOTICE&lt;/span&gt;, &lt;span class="pl-c1"&gt;...&lt;/span&gt;)&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Lua &lt;code&gt;nil&lt;/code&gt; arguments are accepted and result in literal &lt;code&gt;"nil"&lt;/code&gt; strings while Lua booleans result in literal &lt;code&gt;"true"&lt;/code&gt; or &lt;code&gt;"false"&lt;/code&gt; strings. And the &lt;code&gt;ngx.null&lt;/code&gt; constant will yield the &lt;code&gt;"null"&lt;/code&gt; string output.&lt;/p&gt;
&lt;p&gt;There is a hard coded &lt;code&gt;2048&lt;/code&gt; byte limitation on error message lengths in the Nginx core. This limit includes trailing newlines and leading time stamps. If the message size exceeds this limit, Nginx will truncate the message text accordingly. This limit can be manually modified by editing the &lt;code&gt;NGX_MAX_ERROR_STR&lt;/code&gt; macro definition in the &lt;code&gt;src/core/ngx_log.h&lt;/code&gt; file in the Nginx source tree.&lt;/p&gt;
&lt;p&gt;&lt;a href="#nginx-api-for-lua"&gt;Back to TOC&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-ngxctx" class="anchor" aria-hidden="true" href="#ngxctx"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;ngx.ctx&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;context:&lt;/strong&gt; &lt;em&gt;init_worker_by_lua*, set_by_lua*, rewrite_by_lua*, access_by_lua*, content_by_lua*, header_filter_by_lua*, body_filter_by_lua*, log_by_lua*, ngx.timer.*, balancer_by_lua*&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;This table can be used to store per-request Lua context data and has a life time identical to the current request (as with the Nginx variables).&lt;/p&gt;
&lt;p&gt;Consider the following example,&lt;/p&gt;
&lt;div class="highlight highlight-source-nginx"&gt;&lt;pre&gt; &lt;span class="pl-k"&gt;location&lt;/span&gt; &lt;span class="pl-en"&gt;/test &lt;/span&gt;{
     &lt;span class="pl-k"&gt;rewrite_by_lua_block&lt;/span&gt; {
         ngx.ctx.&lt;span class="pl-k"&gt;foo&lt;/span&gt; = 76
     }
     &lt;span class="pl-k"&gt;access_by_lua_block&lt;/span&gt; {
         ngx.ctx.&lt;span class="pl-k"&gt;foo&lt;/span&gt; = ngx.ctx.foo + 3
     }
     &lt;span class="pl-k"&gt;content_by_lua_block&lt;/span&gt; {
         ngx.say(ngx.ctx.foo)
     }
 }&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Then &lt;code&gt;GET /test&lt;/code&gt; will yield the output&lt;/p&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt; 79&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;That is, the &lt;code&gt;ngx.ctx.foo&lt;/code&gt; entry persists across the rewrite, access, and content phases of a request.&lt;/p&gt;
&lt;p&gt;Every request, including subrequests, has its own copy of the table. For example:&lt;/p&gt;
&lt;div class="highlight highlight-source-nginx"&gt;&lt;pre&gt; &lt;span class="pl-k"&gt;location&lt;/span&gt; &lt;span class="pl-en"&gt;/sub &lt;/span&gt;{
     &lt;span class="pl-k"&gt;content_by_lua_block&lt;/span&gt; {
         ngx.say("&lt;span class="pl-k"&gt;sub&lt;/span&gt; pre: &lt;span class="pl-s"&gt;", ngx.ctx.blah)&lt;/span&gt;
&lt;span class="pl-s"&gt;         ngx.ctx.blah = 32&lt;/span&gt;
&lt;span class="pl-s"&gt;         ngx.say("&lt;/span&gt;sub post: &lt;span class="pl-s"&gt;", ngx.ctx.blah)&lt;/span&gt;
&lt;span class="pl-s"&gt;     }&lt;/span&gt;
&lt;span class="pl-s"&gt; }&lt;/span&gt;
&lt;span class="pl-s"&gt;&lt;/span&gt;
&lt;span class="pl-s"&gt; location /main {&lt;/span&gt;
&lt;span class="pl-s"&gt;     content_by_lua_block {&lt;/span&gt;
&lt;span class="pl-s"&gt;         ngx.ctx.blah = 73&lt;/span&gt;
&lt;span class="pl-s"&gt;         ngx.say("&lt;/span&gt;main pre: &lt;span class="pl-s"&gt;", ngx.ctx.blah)&lt;/span&gt;
&lt;span class="pl-s"&gt;         local res = ngx.location.capture("&lt;/span&gt;/sub&lt;span class="pl-s"&gt;")&lt;/span&gt;
&lt;span class="pl-s"&gt;         ngx.print(res.body)&lt;/span&gt;
&lt;span class="pl-s"&gt;         ngx.say("&lt;/span&gt;main post: &lt;span class="pl-s"&gt;", ngx.ctx.blah)&lt;/span&gt;
&lt;span class="pl-s"&gt;     }&lt;/span&gt;
&lt;span class="pl-s"&gt; }&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Then &lt;code&gt;GET /main&lt;/code&gt; will give the output&lt;/p&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt; main pre: 73
 sub pre: nil
 sub post: 32
 main post: 73&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Here, modification of the &lt;code&gt;ngx.ctx.blah&lt;/code&gt; entry in the subrequest does not affect the one in the parent request. This is because they have two separate versions of &lt;code&gt;ngx.ctx.blah&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;Internal redirection will destroy the original request &lt;code&gt;ngx.ctx&lt;/code&gt; data (if any) and the new request will have an empty &lt;code&gt;ngx.ctx&lt;/code&gt; table. For instance,&lt;/p&gt;
&lt;div class="highlight highlight-source-nginx"&gt;&lt;pre&gt; &lt;span class="pl-k"&gt;location&lt;/span&gt; &lt;span class="pl-en"&gt;/new &lt;/span&gt;{
     &lt;span class="pl-k"&gt;content_by_lua_block&lt;/span&gt; {
         ngx.say(ngx.ctx.foo)
     }
 }

 &lt;span class="pl-k"&gt;location&lt;/span&gt; &lt;span class="pl-en"&gt;/orig &lt;/span&gt;{
     &lt;span class="pl-k"&gt;content_by_lua_block&lt;/span&gt; {
         ngx.ctx.&lt;span class="pl-k"&gt;foo&lt;/span&gt; = &lt;span class="pl-s"&gt;"hello"&lt;/span&gt;
         ngx.exec("/new")
     }
 }&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Then &lt;code&gt;GET /orig&lt;/code&gt; will give&lt;/p&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt; nil&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;rather than the original &lt;code&gt;"hello"&lt;/code&gt; value.&lt;/p&gt;
&lt;p&gt;Arbitrary data values, including Lua closures and nested tables, can be inserted into this "magic" table. It also allows the registration of custom meta methods.&lt;/p&gt;
&lt;p&gt;Overriding &lt;code&gt;ngx.ctx&lt;/code&gt; with a new Lua table is also supported, for example,&lt;/p&gt;
&lt;div class="highlight highlight-source-lua"&gt;&lt;pre&gt; ngx.&lt;span class="pl-smi"&gt;ctx&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; { foo &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;32&lt;/span&gt;, bar &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;54&lt;/span&gt; }&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;When being used in the context of &lt;a href="#init_worker_by_lua"&gt;init_worker_by_lua*&lt;/a&gt;, this table just has the same lifetime of the current Lua handler.&lt;/p&gt;
&lt;p&gt;The &lt;code&gt;ngx.ctx&lt;/code&gt; lookup requires relatively expensive metamethod calls and it is much slower than explicitly passing per-request data along by your own function arguments. So do not abuse this API for saving your own function arguments because it usually has quite some performance impact.&lt;/p&gt;
&lt;p&gt;Because of the metamethod magic, never "local" the &lt;code&gt;ngx.ctx&lt;/code&gt; table outside your Lua function scope on the Lua module level due to &lt;a href="#data-sharing-within-an-nginx-worker"&gt;worker-level data sharing&lt;/a&gt;. For example, the following is bad:&lt;/p&gt;
&lt;div class="highlight highlight-source-lua"&gt;&lt;pre&gt; &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;--&lt;/span&gt; mymodule.lua&lt;/span&gt;
 &lt;span class="pl-k"&gt;local&lt;/span&gt; _M &lt;span class="pl-k"&gt;=&lt;/span&gt; {}

 &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;--&lt;/span&gt; the following line is bad since ngx.ctx is a per-request&lt;/span&gt;
 &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;--&lt;/span&gt; data while this &amp;lt;code&amp;gt;ctx&amp;lt;/code&amp;gt; variable is on the Lua module level&lt;/span&gt;
 &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;--&lt;/span&gt; and thus is per-nginx-worker.&lt;/span&gt;
 &lt;span class="pl-k"&gt;local&lt;/span&gt; ctx &lt;span class="pl-k"&gt;=&lt;/span&gt; ngx.&lt;span class="pl-smi"&gt;ctx&lt;/span&gt;

 &lt;span class="pl-k"&gt;function&lt;/span&gt; &lt;span class="pl-en"&gt;_M.main&lt;/span&gt;()
     ctx.&lt;span class="pl-smi"&gt;foo&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;bar&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;
 &lt;span class="pl-k"&gt;end&lt;/span&gt;

 &lt;span class="pl-k"&gt;return&lt;/span&gt; _M&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Use the following instead:&lt;/p&gt;
&lt;div class="highlight highlight-source-lua"&gt;&lt;pre&gt; &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;--&lt;/span&gt; mymodule.lua&lt;/span&gt;
 &lt;span class="pl-k"&gt;local&lt;/span&gt; _M &lt;span class="pl-k"&gt;=&lt;/span&gt; {}

 &lt;span class="pl-k"&gt;function&lt;/span&gt; &lt;span class="pl-en"&gt;_M.main&lt;/span&gt;(&lt;span class="pl-smi"&gt;ctx&lt;/span&gt;)
     ctx.&lt;span class="pl-smi"&gt;foo&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;bar&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;
 &lt;span class="pl-k"&gt;end&lt;/span&gt;

 &lt;span class="pl-k"&gt;return&lt;/span&gt; _M&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;That is, let the caller pass the &lt;code&gt;ctx&lt;/code&gt; table explicitly via a function argument.&lt;/p&gt;
&lt;p&gt;&lt;a href="#nginx-api-for-lua"&gt;Back to TOC&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-ngxlocationcapture" class="anchor" aria-hidden="true" href="#ngxlocationcapture"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;ngx.location.capture&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;syntax:&lt;/strong&gt; &lt;em&gt;res = ngx.location.capture(uri, options?)&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;context:&lt;/strong&gt; &lt;em&gt;rewrite_by_lua*, access_by_lua*, content_by_lua*&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;Issues a synchronous but still non-blocking &lt;em&gt;Nginx Subrequest&lt;/em&gt; using &lt;code&gt;uri&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;Nginx's subrequests provide a powerful way to make non-blocking internal requests to other locations configured with disk file directory or &lt;em&gt;any&lt;/em&gt; other Nginx C modules like &lt;code&gt;ngx_proxy&lt;/code&gt;, &lt;code&gt;ngx_fastcgi&lt;/code&gt;, &lt;code&gt;ngx_memc&lt;/code&gt;,
&lt;code&gt;ngx_postgres&lt;/code&gt;, &lt;code&gt;ngx_drizzle&lt;/code&gt;, and even ngx_lua itself and etc etc etc.&lt;/p&gt;
&lt;p&gt;Also note that subrequests just mimic the HTTP interface but there is &lt;em&gt;no&lt;/em&gt; extra HTTP/TCP traffic &lt;em&gt;nor&lt;/em&gt; IPC involved. Everything works internally, efficiently, on the C level.&lt;/p&gt;
&lt;p&gt;Subrequests are completely different from HTTP 301/302 redirection (via &lt;a href="#ngxredirect"&gt;ngx.redirect&lt;/a&gt;) and internal redirection (via &lt;a href="#ngxexec"&gt;ngx.exec&lt;/a&gt;).&lt;/p&gt;
&lt;p&gt;You should always read the request body (by either calling &lt;a href="#ngxreqread_body"&gt;ngx.req.read_body&lt;/a&gt; or configuring &lt;a href="#lua_need_request_body"&gt;lua_need_request_body&lt;/a&gt; on) before initiating a subrequest.&lt;/p&gt;
&lt;p&gt;This API function (as well as &lt;a href="#ngxlocationcapture_multi"&gt;ngx.location.capture_multi&lt;/a&gt;) always buffers the whole response body of the subrequest in memory. Thus, you should use &lt;a href="#ngxsockettcp"&gt;cosockets&lt;/a&gt;
and streaming processing instead if you have to handle large subrequest responses.&lt;/p&gt;
&lt;p&gt;Here is a basic example:&lt;/p&gt;
&lt;div class="highlight highlight-source-lua"&gt;&lt;pre&gt; res &lt;span class="pl-k"&gt;=&lt;/span&gt; ngx.&lt;span class="pl-smi"&gt;location&lt;/span&gt;.&lt;span class="pl-c1"&gt;capture&lt;/span&gt;(uri)&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Returns a Lua table with 4 slots: &lt;code&gt;res.status&lt;/code&gt;, &lt;code&gt;res.header&lt;/code&gt;, &lt;code&gt;res.body&lt;/code&gt;, and &lt;code&gt;res.truncated&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;&lt;code&gt;res.status&lt;/code&gt; holds the response status code for the subrequest response.&lt;/p&gt;
&lt;p&gt;&lt;code&gt;res.header&lt;/code&gt; holds all the response headers of the
subrequest and it is a normal Lua table. For multi-value response headers,
the value is a Lua (array) table that holds all the values in the order that
they appear. For instance, if the subrequest response headers contain the following
lines:&lt;/p&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt; Set-Cookie: a=3
 Set-Cookie: foo=bar
 Set-Cookie: baz=blah&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Then &lt;code&gt;res.header["Set-Cookie"]&lt;/code&gt; will be evaluated to the table value
&lt;code&gt;{"a=3", "foo=bar", "baz=blah"}&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;&lt;code&gt;res.body&lt;/code&gt; holds the subrequest's response body data, which might be truncated. You always need to check the &lt;code&gt;res.truncated&lt;/code&gt; boolean flag to see if &lt;code&gt;res.body&lt;/code&gt; contains truncated data. The data truncation here can only be caused by those unrecoverable errors in your subrequests like the cases that the remote end aborts the connection prematurely in the middle of the response body data stream or a read timeout happens when your subrequest is receiving the response body data from the remote.&lt;/p&gt;
&lt;p&gt;URI query strings can be concatenated to URI itself, for instance,&lt;/p&gt;
&lt;div class="highlight highlight-source-lua"&gt;&lt;pre&gt; res &lt;span class="pl-k"&gt;=&lt;/span&gt; ngx.&lt;span class="pl-smi"&gt;location&lt;/span&gt;.&lt;span class="pl-c1"&gt;capture&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;/foo/bar?a=3&amp;amp;b=4&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;)&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Named locations like &lt;code&gt;@foo&lt;/code&gt; are not allowed due to a limitation in
the Nginx core. Use normal locations combined with the &lt;code&gt;internal&lt;/code&gt; directive to
prepare internal-only locations.&lt;/p&gt;
&lt;p&gt;An optional option table can be fed as the second
argument, which supports the options:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;method&lt;/code&gt;
specify the subrequest's request method, which only accepts constants like &lt;code&gt;ngx.HTTP_POST&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;body&lt;/code&gt;
specify the subrequest's request body (string value only).&lt;/li&gt;
&lt;li&gt;&lt;code&gt;args&lt;/code&gt;
specify the subrequest's URI query arguments (both string value and Lua tables are accepted)&lt;/li&gt;
&lt;li&gt;&lt;code&gt;ctx&lt;/code&gt;
specify a Lua table to be the &lt;a href="#ngxctx"&gt;ngx.ctx&lt;/a&gt; table for the subrequest. It can be the current request's &lt;a href="#ngxctx"&gt;ngx.ctx&lt;/a&gt; table, which effectively makes the parent and its subrequest to share exactly the same context table. This option was first introduced in the &lt;code&gt;v0.3.1rc25&lt;/code&gt; release.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;vars&lt;/code&gt;
take a Lua table which holds the values to set the specified Nginx variables in the subrequest as this option's value. This option was first introduced in the &lt;code&gt;v0.3.1rc31&lt;/code&gt; release.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;copy_all_vars&lt;/code&gt;
specify whether to copy over all the Nginx variable values of the current request to the subrequest in question. modifications of the Nginx variables in the subrequest will not affect the current (parent) request. This option was first introduced in the &lt;code&gt;v0.3.1rc31&lt;/code&gt; release.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;share_all_vars&lt;/code&gt;
specify whether to share all the Nginx variables of the subrequest with the current (parent) request. modifications of the Nginx variables in the subrequest will affect the current (parent) request. Enabling this option may lead to hard-to-debug issues due to bad side-effects and is considered bad and harmful. Only enable this option when you completely know what you are doing.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;always_forward_body&lt;/code&gt;
when set to true, the current (parent) request's request body will always be forwarded to the subrequest being created if the &lt;code&gt;body&lt;/code&gt; option is not specified. The request body read by either &lt;a href="#ngxreqread_body"&gt;ngx.req.read_body()&lt;/a&gt; or &lt;a href="#lua_need_request_body"&gt;lua_need_request_body on&lt;/a&gt; will be directly forwarded to the subrequest without copying the whole request body data when creating the subrequest (no matter the request body data is buffered in memory buffers or temporary files). By default, this option is &lt;code&gt;false&lt;/code&gt; and when the &lt;code&gt;body&lt;/code&gt; option is not specified, the request body of the current (parent) request is only forwarded when the subrequest takes the &lt;code&gt;PUT&lt;/code&gt; or &lt;code&gt;POST&lt;/code&gt; request method.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Issuing a POST subrequest, for example, can be done as follows&lt;/p&gt;
&lt;div class="highlight highlight-source-lua"&gt;&lt;pre&gt; res &lt;span class="pl-k"&gt;=&lt;/span&gt; ngx.&lt;span class="pl-smi"&gt;location&lt;/span&gt;.&lt;span class="pl-c1"&gt;capture&lt;/span&gt;(
     &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;/foo/bar&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;,
     { method &lt;span class="pl-k"&gt;=&lt;/span&gt; ngx.&lt;span class="pl-smi"&gt;HTTP_POST&lt;/span&gt;, body &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;hello, world&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt; }
 )&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;See HTTP method constants methods other than POST.
The &lt;code&gt;method&lt;/code&gt; option is &lt;code&gt;ngx.HTTP_GET&lt;/code&gt; by default.&lt;/p&gt;
&lt;p&gt;The &lt;code&gt;args&lt;/code&gt; option can specify extra URI arguments, for instance,&lt;/p&gt;
&lt;div class="highlight highlight-source-lua"&gt;&lt;pre&gt; ngx.&lt;span class="pl-smi"&gt;location&lt;/span&gt;.&lt;span class="pl-c1"&gt;capture&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;/foo?a=1&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;,
     { args &lt;span class="pl-k"&gt;=&lt;/span&gt; { b &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;3&lt;/span&gt;, c &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;:&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt; } }
 )&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;is equivalent to&lt;/p&gt;
&lt;div class="highlight highlight-source-lua"&gt;&lt;pre&gt; ngx.&lt;span class="pl-smi"&gt;location&lt;/span&gt;.&lt;span class="pl-c1"&gt;capture&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;/foo?a=1&amp;amp;b=3&amp;amp;c=%3a&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;)&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;that is, this method will escape argument keys and values according to URI rules and
concatenate them together into a complete query string. The format for the Lua table passed as the &lt;code&gt;args&lt;/code&gt; argument is identical to the format used in the &lt;a href="#ngxencode_args"&gt;ngx.encode_args&lt;/a&gt; method.&lt;/p&gt;
&lt;p&gt;The &lt;code&gt;args&lt;/code&gt; option can also take plain query strings:&lt;/p&gt;
&lt;div class="highlight highlight-source-lua"&gt;&lt;pre&gt; ngx.&lt;span class="pl-smi"&gt;location&lt;/span&gt;.&lt;span class="pl-c1"&gt;capture&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;/foo?a=1&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;,
     { args &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;b=3&amp;amp;c=%3a&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt; }
 )&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;This is functionally identical to the previous examples.&lt;/p&gt;
&lt;p&gt;The &lt;code&gt;share_all_vars&lt;/code&gt; option controls whether to share Nginx variables among the current request and its subrequests.
If this option is set to &lt;code&gt;true&lt;/code&gt;, then the current request and associated subrequests will share the same Nginx variable scope. Hence, changes to Nginx variables made by a subrequest will affect the current request.&lt;/p&gt;
&lt;p&gt;Care should be taken in using this option as variable scope sharing can have unexpected side effects. The &lt;code&gt;args&lt;/code&gt;, &lt;code&gt;vars&lt;/code&gt;, or &lt;code&gt;copy_all_vars&lt;/code&gt; options are generally preferable instead.&lt;/p&gt;
&lt;p&gt;This option is set to &lt;code&gt;false&lt;/code&gt; by default&lt;/p&gt;
&lt;div class="highlight highlight-source-nginx"&gt;&lt;pre&gt; &lt;span class="pl-k"&gt;location&lt;/span&gt; &lt;span class="pl-en"&gt;/other &lt;/span&gt;{
     &lt;span class="pl-k"&gt;set&lt;/span&gt; &lt;span class="pl-smi"&gt;$dog&lt;/span&gt; &lt;span class="pl-s"&gt;"&lt;span class="pl-smi"&gt;$dog&lt;/span&gt; world"&lt;/span&gt;;
     &lt;span class="pl-k"&gt;echo&lt;/span&gt; &lt;span class="pl-s"&gt;"&lt;span class="pl-smi"&gt;$uri&lt;/span&gt; dog: &lt;span class="pl-smi"&gt;$dog&lt;/span&gt;"&lt;/span&gt;;
 }

 &lt;span class="pl-k"&gt;location&lt;/span&gt; &lt;span class="pl-en"&gt;/lua &lt;/span&gt;{
     &lt;span class="pl-k"&gt;set&lt;/span&gt; &lt;span class="pl-smi"&gt;$dog&lt;/span&gt; &lt;span class="pl-s"&gt;'hello'&lt;/span&gt;;
     &lt;span class="pl-k"&gt;content_by_lua_block&lt;/span&gt; {
         &lt;span class="pl-k"&gt;res&lt;/span&gt; = ngx.location.capture(&lt;span class="pl-s"&gt;"/other"&lt;/span&gt;,
             { &lt;span class="pl-k"&gt;share_all_vars&lt;/span&gt; =&lt;span class="pl-c1"&gt; true&lt;/span&gt; });

         ngx.print(res.body)
         ngx.say(ngx.var.uri, ": ", ngx.var.dog)
     }
 }&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Accessing location &lt;code&gt;/lua&lt;/code&gt; gives&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;/other dog: hello world
/lua: hello world
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;The &lt;code&gt;copy_all_vars&lt;/code&gt; option provides a copy of the parent request's Nginx variables to subrequests when such subrequests are issued. Changes made to these variables by such subrequests will not affect the parent request or any other subrequests sharing the parent request's variables.&lt;/p&gt;
&lt;div class="highlight highlight-source-nginx"&gt;&lt;pre&gt; &lt;span class="pl-k"&gt;location&lt;/span&gt; &lt;span class="pl-en"&gt;/other &lt;/span&gt;{
     &lt;span class="pl-k"&gt;set&lt;/span&gt; &lt;span class="pl-smi"&gt;$dog&lt;/span&gt; &lt;span class="pl-s"&gt;"&lt;span class="pl-smi"&gt;$dog&lt;/span&gt; world"&lt;/span&gt;;
     &lt;span class="pl-k"&gt;echo&lt;/span&gt; &lt;span class="pl-s"&gt;"&lt;span class="pl-smi"&gt;$uri&lt;/span&gt; dog: &lt;span class="pl-smi"&gt;$dog&lt;/span&gt;"&lt;/span&gt;;
 }

 &lt;span class="pl-k"&gt;location&lt;/span&gt; &lt;span class="pl-en"&gt;/lua &lt;/span&gt;{
     &lt;span class="pl-k"&gt;set&lt;/span&gt; &lt;span class="pl-smi"&gt;$dog&lt;/span&gt; &lt;span class="pl-s"&gt;'hello'&lt;/span&gt;;
     &lt;span class="pl-k"&gt;content_by_lua_block&lt;/span&gt; {
         &lt;span class="pl-k"&gt;res&lt;/span&gt; = ngx.location.capture(&lt;span class="pl-s"&gt;"/other"&lt;/span&gt;,
             { &lt;span class="pl-k"&gt;copy_all_vars&lt;/span&gt; =&lt;span class="pl-c1"&gt; true&lt;/span&gt; });

         ngx.print(res.body)
         ngx.say(ngx.var.uri, ": ", ngx.var.dog)
     }
 }&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Request &lt;code&gt;GET /lua&lt;/code&gt; will give the output&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;/other dog: hello world
/lua: hello
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Note that if both &lt;code&gt;share_all_vars&lt;/code&gt; and &lt;code&gt;copy_all_vars&lt;/code&gt; are set to true, then &lt;code&gt;share_all_vars&lt;/code&gt; takes precedence.&lt;/p&gt;
&lt;p&gt;In addition to the two settings above, it is possible to specify
values for variables in the subrequest using the &lt;code&gt;vars&lt;/code&gt; option. These
variables are set after the sharing or copying of variables has been
evaluated, and provides a more efficient method of passing specific
values to a subrequest over encoding them as URL arguments and
unescaping them in the Nginx config file.&lt;/p&gt;
&lt;div class="highlight highlight-source-nginx"&gt;&lt;pre&gt; &lt;span class="pl-k"&gt;location&lt;/span&gt; &lt;span class="pl-en"&gt;/other &lt;/span&gt;{
     &lt;span class="pl-k"&gt;content_by_lua_block&lt;/span&gt; {
         ngx.say("&lt;span class="pl-k"&gt;dog&lt;/span&gt; = &lt;span class="pl-s"&gt;", ngx.var.dog)&lt;/span&gt;
&lt;span class="pl-s"&gt;         ngx.say("&lt;/span&gt;cat = &lt;span class="pl-s"&gt;", ngx.var.cat)&lt;/span&gt;
&lt;span class="pl-s"&gt;     }&lt;/span&gt;
&lt;span class="pl-s"&gt; }&lt;/span&gt;
&lt;span class="pl-s"&gt;&lt;/span&gt;
&lt;span class="pl-s"&gt; location /lua {&lt;/span&gt;
&lt;span class="pl-s"&gt;     set &lt;span class="pl-smi"&gt;$dog&lt;/span&gt; '';&lt;/span&gt;
&lt;span class="pl-s"&gt;     set &lt;span class="pl-smi"&gt;$cat&lt;/span&gt; '';&lt;/span&gt;
&lt;span class="pl-s"&gt;     content_by_lua_block {&lt;/span&gt;
&lt;span class="pl-s"&gt;         res = ngx.location.capture("&lt;/span&gt;/other&lt;span class="pl-s"&gt;",&lt;/span&gt;
&lt;span class="pl-s"&gt;             { vars = { dog = "&lt;/span&gt;hello&lt;span class="pl-s"&gt;", cat = 32 }});&lt;/span&gt;
&lt;span class="pl-s"&gt;&lt;/span&gt;
&lt;span class="pl-s"&gt;         ngx.print(res.body)&lt;/span&gt;
&lt;span class="pl-s"&gt;     }&lt;/span&gt;
&lt;span class="pl-s"&gt; }&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Accessing &lt;code&gt;/lua&lt;/code&gt; will yield the output&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;dog = hello
cat = 32
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;The &lt;code&gt;ctx&lt;/code&gt; option can be used to specify a custom Lua table to serve as the &lt;a href="#ngxctx"&gt;ngx.ctx&lt;/a&gt; table for the subrequest.&lt;/p&gt;
&lt;div class="highlight highlight-source-nginx"&gt;&lt;pre&gt; &lt;span class="pl-k"&gt;location&lt;/span&gt; &lt;span class="pl-en"&gt;/sub &lt;/span&gt;{
     &lt;span class="pl-k"&gt;content_by_lua_block&lt;/span&gt; {
         ngx.ctx.&lt;span class="pl-k"&gt;foo&lt;/span&gt; = &lt;span class="pl-s"&gt;"bar"&lt;/span&gt;;
     }
 }
 &lt;span class="pl-k"&gt;location&lt;/span&gt; &lt;span class="pl-en"&gt;/lua &lt;/span&gt;{
     &lt;span class="pl-k"&gt;content_by_lua_block&lt;/span&gt; {
         &lt;span class="pl-k"&gt;local&lt;/span&gt; ctx = {}
         &lt;span class="pl-k"&gt;res&lt;/span&gt; = ngx.location.capture(&lt;span class="pl-s"&gt;"/sub"&lt;/span&gt;, { ctx = ctx })

         ngx.say(ctx.foo);
         ngx.say(ngx.ctx.foo);
     }
 }&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Then request &lt;code&gt;GET /lua&lt;/code&gt; gives&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;bar
nil
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;It is also possible to use this &lt;code&gt;ctx&lt;/code&gt; option to share the same &lt;a href="#ngxctx"&gt;ngx.ctx&lt;/a&gt; table between the current (parent) request and the subrequest:&lt;/p&gt;
&lt;div class="highlight highlight-source-nginx"&gt;&lt;pre&gt; &lt;span class="pl-k"&gt;location&lt;/span&gt; &lt;span class="pl-en"&gt;/sub &lt;/span&gt;{
     &lt;span class="pl-k"&gt;content_by_lua_block&lt;/span&gt; {
         ngx.ctx.&lt;span class="pl-k"&gt;foo&lt;/span&gt; = &lt;span class="pl-s"&gt;"bar"&lt;/span&gt;;
     }
 }
 &lt;span class="pl-k"&gt;location&lt;/span&gt; &lt;span class="pl-en"&gt;/lua &lt;/span&gt;{
     &lt;span class="pl-k"&gt;content_by_lua_block&lt;/span&gt; {
         &lt;span class="pl-k"&gt;res&lt;/span&gt; = ngx.location.capture(&lt;span class="pl-s"&gt;"/sub"&lt;/span&gt;, { ctx = ngx.ctx })
         ngx.say(ngx.ctx.foo);
     }
 }&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Request &lt;code&gt;GET /lua&lt;/code&gt; yields the output&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;bar
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Note that subrequests issued by &lt;a href="#ngxlocationcapture"&gt;ngx.location.capture&lt;/a&gt; inherit all the
request headers of the current request by default and that this may have unexpected side effects on the
subrequest responses. For example, when using the standard &lt;code&gt;ngx_proxy&lt;/code&gt; module to serve
subrequests, an "Accept-Encoding: gzip" header in the main request may result
in gzipped responses that cannot be handled properly in Lua code. Original request headers should be ignored by setting
&lt;a href="http://nginx.org/en/docs/http/ngx_http_proxy_module.html#proxy_pass_request_headers" rel="nofollow"&gt;proxy_pass_request_headers&lt;/a&gt; to &lt;code&gt;off&lt;/code&gt; in subrequest locations.&lt;/p&gt;
&lt;p&gt;When the &lt;code&gt;body&lt;/code&gt; option is not specified and the &lt;code&gt;always_forward_body&lt;/code&gt; option is false (the default value), the &lt;code&gt;POST&lt;/code&gt; and &lt;code&gt;PUT&lt;/code&gt; subrequests will inherit the request bodies of the parent request (if any).&lt;/p&gt;
&lt;p&gt;There is a hard-coded upper limit on the number of concurrent subrequests possible for every main request. In older versions of Nginx, the limit was &lt;code&gt;50&lt;/code&gt; concurrent subrequests and in more recent versions, Nginx &lt;code&gt;1.1.x&lt;/code&gt; onwards, this was increased to &lt;code&gt;200&lt;/code&gt; concurrent subrequests. When this limit is exceeded, the following error message is added to the &lt;code&gt;error.log&lt;/code&gt; file:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;[error] 13983#0: *1 subrequests cycle while processing "/uri"
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;The limit can be manually modified if required by editing the definition of the &lt;code&gt;NGX_HTTP_MAX_SUBREQUESTS&lt;/code&gt; macro in the &lt;code&gt;nginx/src/http/ngx_http_request.h&lt;/code&gt; file in the Nginx source tree.&lt;/p&gt;
&lt;p&gt;Please also refer to restrictions on capturing locations configured by &lt;a href="#locations-configured-by-subrequest-directives-of-other-modules"&gt;subrequest directives of other modules&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;&lt;a href="#nginx-api-for-lua"&gt;Back to TOC&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-ngxlocationcapture_multi" class="anchor" aria-hidden="true" href="#ngxlocationcapture_multi"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;ngx.location.capture_multi&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;syntax:&lt;/strong&gt; &lt;em&gt;res1, res2, ... = ngx.location.capture_multi({ {uri, options?}, {uri, options?}, ... })&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;context:&lt;/strong&gt; &lt;em&gt;rewrite_by_lua*, access_by_lua*, content_by_lua*&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;Just like &lt;a href="#ngxlocationcapture"&gt;ngx.location.capture&lt;/a&gt;, but supports multiple subrequests running in parallel.&lt;/p&gt;
&lt;p&gt;This function issues several parallel subrequests specified by the input table and returns their results in the same order. For example,&lt;/p&gt;
&lt;div class="highlight highlight-source-lua"&gt;&lt;pre&gt; res1, res2, res3 &lt;span class="pl-k"&gt;=&lt;/span&gt; ngx.&lt;span class="pl-smi"&gt;location&lt;/span&gt;.&lt;span class="pl-c1"&gt;capture_multi&lt;/span&gt;{
     { &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;/foo&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, { args &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;a=3&amp;amp;b=4&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; } },
     { &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;/bar&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; },
     { &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;/baz&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, { method &lt;span class="pl-k"&gt;=&lt;/span&gt; ngx.&lt;span class="pl-smi"&gt;HTTP_POST&lt;/span&gt;, body &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;hello&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; } },
 }

 &lt;span class="pl-k"&gt;if&lt;/span&gt; res1.&lt;span class="pl-smi"&gt;status&lt;/span&gt; &lt;span class="pl-k"&gt;==&lt;/span&gt; ngx.&lt;span class="pl-smi"&gt;HTTP_OK&lt;/span&gt; &lt;span class="pl-k"&gt;then&lt;/span&gt;
     &lt;span class="pl-c1"&gt;...&lt;/span&gt;
 &lt;span class="pl-k"&gt;end&lt;/span&gt;

 &lt;span class="pl-k"&gt;if&lt;/span&gt; res2.&lt;span class="pl-smi"&gt;body&lt;/span&gt; &lt;span class="pl-k"&gt;==&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;BLAH&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; &lt;span class="pl-k"&gt;then&lt;/span&gt;
     &lt;span class="pl-c1"&gt;...&lt;/span&gt;
 &lt;span class="pl-k"&gt;end&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;This function will not return until all the subrequests terminate.
The total latency is the longest latency of the individual subrequests rather than the sum.&lt;/p&gt;
&lt;p&gt;Lua tables can be used for both requests and responses when the number of subrequests to be issued is not known in advance:&lt;/p&gt;
&lt;div class="highlight highlight-source-lua"&gt;&lt;pre&gt; &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;--&lt;/span&gt; construct the requests table&lt;/span&gt;
 &lt;span class="pl-k"&gt;local&lt;/span&gt; reqs &lt;span class="pl-k"&gt;=&lt;/span&gt; {}
 &lt;span class="pl-c1"&gt;table.insert&lt;/span&gt;(reqs, { &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;/mysql&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; })
 &lt;span class="pl-c1"&gt;table.insert&lt;/span&gt;(reqs, { &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;/postgres&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; })
 &lt;span class="pl-c1"&gt;table.insert&lt;/span&gt;(reqs, { &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;/redis&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; })
 &lt;span class="pl-c1"&gt;table.insert&lt;/span&gt;(reqs, { &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;/memcached&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; })

 &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;--&lt;/span&gt; issue all the requests at once and wait until they all return&lt;/span&gt;
 &lt;span class="pl-k"&gt;local&lt;/span&gt; resps &lt;span class="pl-k"&gt;=&lt;/span&gt; { ngx.&lt;span class="pl-smi"&gt;location&lt;/span&gt;.&lt;span class="pl-c1"&gt;capture_multi&lt;/span&gt;(reqs) }

 &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;--&lt;/span&gt; loop over the responses table&lt;/span&gt;
 &lt;span class="pl-k"&gt;for&lt;/span&gt; i, resp &lt;span class="pl-k"&gt;in&lt;/span&gt; &lt;span class="pl-c1"&gt;ipairs&lt;/span&gt;(resps) &lt;span class="pl-k"&gt;do&lt;/span&gt;
     &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;--&lt;/span&gt; process the response table "resp"&lt;/span&gt;
 &lt;span class="pl-k"&gt;end&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;The &lt;a href="#ngxlocationcapture"&gt;ngx.location.capture&lt;/a&gt; function is just a special form
of this function. Logically speaking, the &lt;a href="#ngxlocationcapture"&gt;ngx.location.capture&lt;/a&gt; can be implemented like this&lt;/p&gt;
&lt;div class="highlight highlight-source-lua"&gt;&lt;pre&gt; ngx.&lt;span class="pl-smi"&gt;location&lt;/span&gt;.&lt;span class="pl-smi"&gt;capture&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt;
     &lt;span class="pl-k"&gt;function&lt;/span&gt; (&lt;span class="pl-smi"&gt;uri&lt;/span&gt;, &lt;span class="pl-smi"&gt;args&lt;/span&gt;)
         &lt;span class="pl-k"&gt;return&lt;/span&gt; ngx.&lt;span class="pl-smi"&gt;location&lt;/span&gt;.&lt;span class="pl-c1"&gt;capture_multi&lt;/span&gt;({ {uri, args} })
     &lt;span class="pl-k"&gt;end&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Please also refer to restrictions on capturing locations configured by &lt;a href="#locations-configured-by-subrequest-directives-of-other-modules"&gt;subrequest directives of other modules&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;&lt;a href="#nginx-api-for-lua"&gt;Back to TOC&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-ngxstatus" class="anchor" aria-hidden="true" href="#ngxstatus"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;ngx.status&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;context:&lt;/strong&gt; &lt;em&gt;set_by_lua*, rewrite_by_lua*, access_by_lua*, content_by_lua*, header_filter_by_lua*, body_filter_by_lua*, log_by_lua*&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;Read and write the current request's response status. This should be called
before sending out the response headers.&lt;/p&gt;
&lt;div class="highlight highlight-source-lua"&gt;&lt;pre&gt; ngx.&lt;span class="pl-smi"&gt;status&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; ngx.&lt;span class="pl-smi"&gt;HTTP_CREATED&lt;/span&gt;
 status &lt;span class="pl-k"&gt;=&lt;/span&gt; ngx.&lt;span class="pl-smi"&gt;status&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Setting &lt;code&gt;ngx.status&lt;/code&gt; after the response header is sent out has no effect but leaving an error message in your Nginx's error log file:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;attempt to set ngx.status after sending out response headers
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;a href="#nginx-api-for-lua"&gt;Back to TOC&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-ngxheaderheader" class="anchor" aria-hidden="true" href="#ngxheaderheader"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;ngx.header.HEADER&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;syntax:&lt;/strong&gt; &lt;em&gt;ngx.header.HEADER = VALUE&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;syntax:&lt;/strong&gt; &lt;em&gt;value = ngx.header.HEADER&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;context:&lt;/strong&gt; &lt;em&gt;rewrite_by_lua*, access_by_lua*, content_by_lua*, header_filter_by_lua*, body_filter_by_lua*, log_by_lua*&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;Set, add to, or clear the current request's &lt;code&gt;HEADER&lt;/code&gt; response header that is to be sent.&lt;/p&gt;
&lt;p&gt;Underscores (&lt;code&gt;_&lt;/code&gt;) in the header names will be replaced by hyphens (&lt;code&gt;-&lt;/code&gt;) by default. This transformation can be turned off via the &lt;a href="#lua_transform_underscores_in_response_headers"&gt;lua_transform_underscores_in_response_headers&lt;/a&gt; directive.&lt;/p&gt;
&lt;p&gt;The header names are matched case-insensitively.&lt;/p&gt;
&lt;div class="highlight highlight-source-lua"&gt;&lt;pre&gt; &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;--&lt;/span&gt; equivalent to ngx.header["Content-Type"] = 'text/plain'&lt;/span&gt;
 ngx.&lt;span class="pl-smi"&gt;header&lt;/span&gt;.&lt;span class="pl-smi"&gt;content_type&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;text/plain&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;;

 ngx.&lt;span class="pl-smi"&gt;header&lt;/span&gt;[&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;X-My-Header&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;] &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;blah blah&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Multi-value headers can be set this way:&lt;/p&gt;
&lt;div class="highlight highlight-source-lua"&gt;&lt;pre&gt; ngx.&lt;span class="pl-smi"&gt;header&lt;/span&gt;[&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;Set-Cookie&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;] &lt;span class="pl-k"&gt;=&lt;/span&gt; {&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;a=32; path=/&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;b=4; path=/&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;}&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;will yield&lt;/p&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt; Set-Cookie: a=32&lt;span class="pl-k"&gt;;&lt;/span&gt; path=/
 Set-Cookie: b=4&lt;span class="pl-k"&gt;;&lt;/span&gt; path=/&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;in the response headers.&lt;/p&gt;
&lt;p&gt;Only Lua tables are accepted (Only the last element in the table will take effect for standard headers such as &lt;code&gt;Content-Type&lt;/code&gt; that only accept a single value).&lt;/p&gt;
&lt;div class="highlight highlight-source-lua"&gt;&lt;pre&gt; ngx.&lt;span class="pl-smi"&gt;header&lt;/span&gt;.&lt;span class="pl-smi"&gt;content_type&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; {&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;a&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;b&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;}&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;is equivalent to&lt;/p&gt;
&lt;div class="highlight highlight-source-lua"&gt;&lt;pre&gt; ngx.&lt;span class="pl-smi"&gt;header&lt;/span&gt;.&lt;span class="pl-smi"&gt;content_type&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;b&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Setting a slot to &lt;code&gt;nil&lt;/code&gt; effectively removes it from the response headers:&lt;/p&gt;
&lt;div class="highlight highlight-source-lua"&gt;&lt;pre&gt; ngx.&lt;span class="pl-smi"&gt;header&lt;/span&gt;[&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;X-My-Header&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;] &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;nil&lt;/span&gt;;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;The same applies to assigning an empty table:&lt;/p&gt;
&lt;div class="highlight highlight-source-lua"&gt;&lt;pre&gt; ngx.&lt;span class="pl-smi"&gt;header&lt;/span&gt;[&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;X-My-Header&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;] &lt;span class="pl-k"&gt;=&lt;/span&gt; {};&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Setting &lt;code&gt;ngx.header.HEADER&lt;/code&gt; after sending out response headers (either explicitly with &lt;a href="#ngxsend_headers"&gt;ngx.send_headers&lt;/a&gt; or implicitly with &lt;a href="#ngxprint"&gt;ngx.print&lt;/a&gt; and similar) will log an error message.&lt;/p&gt;
&lt;p&gt;Reading &lt;code&gt;ngx.header.HEADER&lt;/code&gt; will return the value of the response header named &lt;code&gt;HEADER&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;Underscores (&lt;code&gt;_&lt;/code&gt;) in the header names will also be replaced by dashes (&lt;code&gt;-&lt;/code&gt;) and the header names will be matched case-insensitively. If the response header is not present at all, &lt;code&gt;nil&lt;/code&gt; will be returned.&lt;/p&gt;
&lt;p&gt;This is particularly useful in the context of &lt;a href="#header_filter_by_lua"&gt;header_filter_by_lua*&lt;/a&gt;, for example,&lt;/p&gt;
&lt;div class="highlight highlight-source-nginx"&gt;&lt;pre&gt; &lt;span class="pl-k"&gt;location&lt;/span&gt; &lt;span class="pl-en"&gt;/test &lt;/span&gt;{
     &lt;span class="pl-k"&gt;set&lt;/span&gt; &lt;span class="pl-smi"&gt;$footer&lt;/span&gt; &lt;span class="pl-s"&gt;''&lt;/span&gt;;

     &lt;span class="pl-k"&gt;proxy_pass&lt;/span&gt; http://some-backend;

     &lt;span class="pl-k"&gt;header_filter_by_lua_block&lt;/span&gt; {
         &lt;span class="pl-k"&gt;if&lt;/span&gt; ngx.header[&lt;span class="pl-s"&gt;"X-My-Header"&lt;/span&gt;] == &lt;span class="pl-s"&gt;"blah"&lt;/span&gt; then
             ngx.var.&lt;span class="pl-k"&gt;footer&lt;/span&gt; = &lt;span class="pl-s"&gt;"some value"&lt;/span&gt;
         &lt;span class="pl-k"&gt;end&lt;/span&gt;
     }

     &lt;span class="pl-k"&gt;echo_after_body&lt;/span&gt; &lt;span class="pl-smi"&gt;$footer&lt;/span&gt;;
 }&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;For multi-value headers, all of the values of header will be collected in order and returned as a Lua table. For example, response headers&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;Foo: bar
Foo: baz
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;will result in&lt;/p&gt;
&lt;div class="highlight highlight-source-lua"&gt;&lt;pre&gt; {&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;bar&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;baz&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;}&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;to be returned when reading &lt;code&gt;ngx.header.Foo&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;Note that &lt;code&gt;ngx.header&lt;/code&gt; is not a normal Lua table and as such, it is not possible to iterate through it using the Lua &lt;code&gt;ipairs&lt;/code&gt; function.&lt;/p&gt;
&lt;p&gt;Note: &lt;code&gt;HEADER&lt;/code&gt; and &lt;code&gt;VALUE&lt;/code&gt; will be truncated if they
contain the &lt;code&gt;\r&lt;/code&gt; or &lt;code&gt;\n&lt;/code&gt; characters. The truncated values
will contain all characters up to (and excluding) the first occurrence of
&lt;code&gt;\r&lt;/code&gt; or &lt;code&gt;\n&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;For reading &lt;em&gt;request&lt;/em&gt; headers, use the &lt;a href="#ngxreqget_headers"&gt;ngx.req.get_headers&lt;/a&gt; function instead.&lt;/p&gt;
&lt;p&gt;&lt;a href="#nginx-api-for-lua"&gt;Back to TOC&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-ngxrespget_headers" class="anchor" aria-hidden="true" href="#ngxrespget_headers"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;ngx.resp.get_headers&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;syntax:&lt;/strong&gt; &lt;em&gt;headers, err = ngx.resp.get_headers(max_headers?, raw?)&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;context:&lt;/strong&gt; &lt;em&gt;set_by_lua*, rewrite_by_lua*, access_by_lua*, content_by_lua*, header_filter_by_lua*, body_filter_by_lua*, log_by_lua*, balancer_by_lua*&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;Returns a Lua table holding all the current response headers for the current request.&lt;/p&gt;
&lt;div class="highlight highlight-source-lua"&gt;&lt;pre&gt; &lt;span class="pl-k"&gt;local&lt;/span&gt; h, err &lt;span class="pl-k"&gt;=&lt;/span&gt; ngx.&lt;span class="pl-smi"&gt;resp&lt;/span&gt;.&lt;span class="pl-c1"&gt;get_headers&lt;/span&gt;()

 &lt;span class="pl-k"&gt;if&lt;/span&gt; err &lt;span class="pl-k"&gt;==&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;truncated&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; &lt;span class="pl-k"&gt;then&lt;/span&gt;
     &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;--&lt;/span&gt; one can choose to ignore or reject the current response here&lt;/span&gt;
 &lt;span class="pl-k"&gt;end&lt;/span&gt;

 &lt;span class="pl-k"&gt;for&lt;/span&gt; k, v &lt;span class="pl-k"&gt;in&lt;/span&gt; &lt;span class="pl-c1"&gt;pairs&lt;/span&gt;(h) &lt;span class="pl-k"&gt;do&lt;/span&gt;
     &lt;span class="pl-c1"&gt;...&lt;/span&gt;
 &lt;span class="pl-k"&gt;end&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;This function has the same signature as &lt;a href="#ngxreqget_headers"&gt;ngx.req.get_headers&lt;/a&gt; except getting response headers instead of request headers.&lt;/p&gt;
&lt;p&gt;Note that a maximum of 100 response headers are parsed by default (including those with the same name) and that additional response headers are silently discarded to guard against potential denial of service attacks. Since &lt;code&gt;v0.10.13&lt;/code&gt;, when the limit is exceeded, it will return a second value which is the string &lt;code&gt;"truncated"&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;This API was first introduced in the &lt;code&gt;v0.9.5&lt;/code&gt; release.&lt;/p&gt;
&lt;p&gt;&lt;a href="#nginx-api-for-lua"&gt;Back to TOC&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-ngxreqis_internal" class="anchor" aria-hidden="true" href="#ngxreqis_internal"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;ngx.req.is_internal&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;syntax:&lt;/strong&gt; &lt;em&gt;is_internal = ngx.req.is_internal()&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;context:&lt;/strong&gt; &lt;em&gt;set_by_lua*, rewrite_by_lua*, access_by_lua*, content_by_lua*, header_filter_by_lua*, body_filter_by_lua*, log_by_lua*&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;Returns a boolean indicating whether the current request is an "internal request", i.e.,
a request initiated from inside the current Nginx server instead of from the client side.&lt;/p&gt;
&lt;p&gt;Subrequests are all internal requests and so are requests after internal redirects.&lt;/p&gt;
&lt;p&gt;This API was first introduced in the &lt;code&gt;v0.9.20&lt;/code&gt; release.&lt;/p&gt;
&lt;p&gt;&lt;a href="#nginx-api-for-lua"&gt;Back to TOC&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-ngxreqstart_time" class="anchor" aria-hidden="true" href="#ngxreqstart_time"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;ngx.req.start_time&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;syntax:&lt;/strong&gt; &lt;em&gt;secs = ngx.req.start_time()&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;context:&lt;/strong&gt; &lt;em&gt;set_by_lua*, rewrite_by_lua*, access_by_lua*, content_by_lua*, header_filter_by_lua*, body_filter_by_lua*, log_by_lua*&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;Returns a floating-point number representing the timestamp (including milliseconds as the decimal part) when the current request was created.&lt;/p&gt;
&lt;p&gt;The following example emulates the &lt;code&gt;$request_time&lt;/code&gt; variable value (provided by &lt;a href="http://nginx.org/en/docs/http/ngx_http_log_module.html" rel="nofollow"&gt;ngx_http_log_module&lt;/a&gt;) in pure Lua:&lt;/p&gt;
&lt;div class="highlight highlight-source-lua"&gt;&lt;pre&gt; &lt;span class="pl-k"&gt;local&lt;/span&gt; request_time &lt;span class="pl-k"&gt;=&lt;/span&gt; ngx.&lt;span class="pl-c1"&gt;now&lt;/span&gt;() &lt;span class="pl-k"&gt;-&lt;/span&gt; ngx.&lt;span class="pl-smi"&gt;req&lt;/span&gt;.&lt;span class="pl-c1"&gt;start_time&lt;/span&gt;()&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;This function was first introduced in the &lt;code&gt;v0.7.7&lt;/code&gt; release.&lt;/p&gt;
&lt;p&gt;See also &lt;a href="#ngxnow"&gt;ngx.now&lt;/a&gt; and &lt;a href="#ngxupdate_time"&gt;ngx.update_time&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;&lt;a href="#nginx-api-for-lua"&gt;Back to TOC&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-ngxreqhttp_version" class="anchor" aria-hidden="true" href="#ngxreqhttp_version"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;ngx.req.http_version&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;syntax:&lt;/strong&gt; &lt;em&gt;num = ngx.req.http_version()&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;context:&lt;/strong&gt; &lt;em&gt;set_by_lua*, rewrite_by_lua*, access_by_lua*, content_by_lua*, header_filter_by_lua*&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;Returns the HTTP version number for the current request as a Lua number.&lt;/p&gt;
&lt;p&gt;Current possible values are 2.0, 1.0, 1.1, and 0.9. Returns &lt;code&gt;nil&lt;/code&gt; for unrecognized values.&lt;/p&gt;
&lt;p&gt;This method was first introduced in the &lt;code&gt;v0.7.17&lt;/code&gt; release.&lt;/p&gt;
&lt;p&gt;&lt;a href="#nginx-api-for-lua"&gt;Back to TOC&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-ngxreqraw_header" class="anchor" aria-hidden="true" href="#ngxreqraw_header"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;ngx.req.raw_header&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;syntax:&lt;/strong&gt; &lt;em&gt;str = ngx.req.raw_header(no_request_line?)&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;context:&lt;/strong&gt; &lt;em&gt;set_by_lua*, rewrite_by_lua*, access_by_lua*, content_by_lua*, header_filter_by_lua*&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;Returns the original raw HTTP protocol header received by the Nginx server.&lt;/p&gt;
&lt;p&gt;By default, the request line and trailing &lt;code&gt;CR LF&lt;/code&gt; terminator will also be included. For example,&lt;/p&gt;
&lt;div class="highlight highlight-source-lua"&gt;&lt;pre&gt; ngx.&lt;span class="pl-c1"&gt;print&lt;/span&gt;(ngx.&lt;span class="pl-smi"&gt;req&lt;/span&gt;.&lt;span class="pl-c1"&gt;raw_header&lt;/span&gt;())&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;gives something like this:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;GET /t HTTP/1.1
Host: localhost
Connection: close
Foo: bar
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;You can specify the optional
&lt;code&gt;no_request_line&lt;/code&gt; argument as a &lt;code&gt;true&lt;/code&gt; value to exclude the request line from the result. For example,&lt;/p&gt;
&lt;div class="highlight highlight-source-lua"&gt;&lt;pre&gt; ngx.&lt;span class="pl-c1"&gt;print&lt;/span&gt;(ngx.&lt;span class="pl-smi"&gt;req&lt;/span&gt;.&lt;span class="pl-c1"&gt;raw_header&lt;/span&gt;(&lt;span class="pl-c1"&gt;true&lt;/span&gt;))&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;outputs something like this:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;Host: localhost
Connection: close
Foo: bar
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;This method was first introduced in the &lt;code&gt;v0.7.17&lt;/code&gt; release.&lt;/p&gt;
&lt;p&gt;This method does not work in HTTP/2 requests yet.&lt;/p&gt;
&lt;p&gt;&lt;a href="#nginx-api-for-lua"&gt;Back to TOC&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-ngxreqget_method" class="anchor" aria-hidden="true" href="#ngxreqget_method"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;ngx.req.get_method&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;syntax:&lt;/strong&gt; &lt;em&gt;method_name = ngx.req.get_method()&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;context:&lt;/strong&gt; &lt;em&gt;set_by_lua*, rewrite_by_lua*, access_by_lua*, content_by_lua*, header_filter_by_lua*, body_filter_by_lua*, balancer_by_lua*, log_by_lua*&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;Retrieves the current request's request method name. Strings like &lt;code&gt;"GET"&lt;/code&gt; and &lt;code&gt;"POST"&lt;/code&gt; are returned instead of numerical &lt;a href="#http-method-constants"&gt;method constants&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;If the current request is an Nginx subrequest, then the subrequest's method name will be returned.&lt;/p&gt;
&lt;p&gt;This method was first introduced in the &lt;code&gt;v0.5.6&lt;/code&gt; release.&lt;/p&gt;
&lt;p&gt;See also &lt;a href="#ngxreqset_method"&gt;ngx.req.set_method&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;&lt;a href="#nginx-api-for-lua"&gt;Back to TOC&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-ngxreqset_method" class="anchor" aria-hidden="true" href="#ngxreqset_method"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;ngx.req.set_method&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;syntax:&lt;/strong&gt; &lt;em&gt;ngx.req.set_method(method_id)&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;context:&lt;/strong&gt; &lt;em&gt;set_by_lua*, rewrite_by_lua*, access_by_lua*, content_by_lua*, header_filter_by_lua*&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;Overrides the current request's request method with the &lt;code&gt;method_id&lt;/code&gt; argument. Currently only numerical &lt;a href="#http-method-constants"&gt;method constants&lt;/a&gt; are supported, like &lt;code&gt;ngx.HTTP_POST&lt;/code&gt; and &lt;code&gt;ngx.HTTP_GET&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;If the current request is an Nginx subrequest, then the subrequest's method will be overridden.&lt;/p&gt;
&lt;p&gt;This method was first introduced in the &lt;code&gt;v0.5.6&lt;/code&gt; release.&lt;/p&gt;
&lt;p&gt;See also &lt;a href="#ngxreqget_method"&gt;ngx.req.get_method&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;&lt;a href="#nginx-api-for-lua"&gt;Back to TOC&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-ngxreqset_uri" class="anchor" aria-hidden="true" href="#ngxreqset_uri"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;ngx.req.set_uri&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;syntax:&lt;/strong&gt; &lt;em&gt;ngx.req.set_uri(uri, jump?)&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;context:&lt;/strong&gt; &lt;em&gt;set_by_lua*, rewrite_by_lua*, access_by_lua*, content_by_lua*, header_filter_by_lua*, body_filter_by_lua*&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;Rewrite the current request's (parsed) URI by the &lt;code&gt;uri&lt;/code&gt; argument. The &lt;code&gt;uri&lt;/code&gt; argument must be a Lua string and cannot be of zero length, or a Lua exception will be thrown.&lt;/p&gt;
&lt;p&gt;The optional boolean &lt;code&gt;jump&lt;/code&gt; argument can trigger location rematch (or location jump) as &lt;a href="http://nginx.org/en/docs/http/ngx_http_rewrite_module.html" rel="nofollow"&gt;ngx_http_rewrite_module&lt;/a&gt;'s &lt;a href="http://nginx.org/en/docs/http/ngx_http_rewrite_module.html#rewrite" rel="nofollow"&gt;rewrite&lt;/a&gt; directive, that is, when &lt;code&gt;jump&lt;/code&gt; is &lt;code&gt;true&lt;/code&gt; (default to &lt;code&gt;false&lt;/code&gt;), this function will never return and it will tell Nginx to try re-searching locations with the new URI value at the later &lt;code&gt;post-rewrite&lt;/code&gt; phase and jumping to the new location.&lt;/p&gt;
&lt;p&gt;Location jump will not be triggered otherwise, and only the current request's URI will be modified, which is also the default behavior. This function will return but with no returned values when the &lt;code&gt;jump&lt;/code&gt; argument is &lt;code&gt;false&lt;/code&gt; or absent altogether.&lt;/p&gt;
&lt;p&gt;For example, the following Nginx config snippet&lt;/p&gt;
&lt;div class="highlight highlight-source-nginx"&gt;&lt;pre&gt; &lt;span class="pl-k"&gt;rewrite&lt;/span&gt; &lt;span class="pl-sr"&gt;^ &lt;/span&gt;/foo&lt;span class="pl-c1"&gt; last&lt;/span&gt;;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;can be coded in Lua like this:&lt;/p&gt;
&lt;div class="highlight highlight-source-lua"&gt;&lt;pre&gt; ngx.&lt;span class="pl-smi"&gt;req&lt;/span&gt;.&lt;span class="pl-c1"&gt;set_uri&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;/foo&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-c1"&gt;true&lt;/span&gt;)&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Similarly, Nginx config&lt;/p&gt;
&lt;div class="highlight highlight-source-nginx"&gt;&lt;pre&gt; &lt;span class="pl-k"&gt;rewrite&lt;/span&gt; &lt;span class="pl-sr"&gt;^ &lt;/span&gt;/foo break;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;can be coded in Lua as&lt;/p&gt;
&lt;div class="highlight highlight-source-lua"&gt;&lt;pre&gt; ngx.&lt;span class="pl-smi"&gt;req&lt;/span&gt;.&lt;span class="pl-c1"&gt;set_uri&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;/foo&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-c1"&gt;false&lt;/span&gt;)&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;or equivalently,&lt;/p&gt;
&lt;div class="highlight highlight-source-lua"&gt;&lt;pre&gt; ngx.&lt;span class="pl-smi"&gt;req&lt;/span&gt;.&lt;span class="pl-c1"&gt;set_uri&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;/foo&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;The &lt;code&gt;jump&lt;/code&gt; argument can only be set to &lt;code&gt;true&lt;/code&gt; in &lt;a href="#rewrite_by_lua"&gt;rewrite_by_lua*&lt;/a&gt;. Use of jump in other contexts is prohibited and will throw out a Lua exception.&lt;/p&gt;
&lt;p&gt;A more sophisticated example involving regex substitutions is as follows&lt;/p&gt;
&lt;div class="highlight highlight-source-nginx"&gt;&lt;pre&gt; &lt;span class="pl-k"&gt;location&lt;/span&gt; &lt;span class="pl-en"&gt;/test &lt;/span&gt;{
     &lt;span class="pl-k"&gt;rewrite_by_lua_block&lt;/span&gt; {
         &lt;span class="pl-k"&gt;local&lt;/span&gt; uri = ngx.re.sub(ngx.var.uri, &lt;span class="pl-s"&gt;"^/test/(.*)"&lt;/span&gt;, &lt;span class="pl-s"&gt;"/&lt;span class="pl-smi"&gt;$1&lt;/span&gt;"&lt;/span&gt;, &lt;span class="pl-s"&gt;"o"&lt;/span&gt;)
         ngx.req.set_uri(uri)
     }
     &lt;span class="pl-k"&gt;proxy_pass&lt;/span&gt; http://my_backend;
 }&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;which is functionally equivalent to&lt;/p&gt;
&lt;div class="highlight highlight-source-nginx"&gt;&lt;pre&gt; &lt;span class="pl-k"&gt;location&lt;/span&gt; &lt;span class="pl-en"&gt;/test &lt;/span&gt;{
     &lt;span class="pl-k"&gt;rewrite&lt;/span&gt; &lt;span class="pl-sr"&gt;^/test/(.*) &lt;/span&gt;/&lt;span class="pl-smi"&gt;$1&lt;/span&gt; break;
     &lt;span class="pl-k"&gt;proxy_pass&lt;/span&gt; http://my_backend;
 }&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Note that it is not possible to use this interface to rewrite URI arguments and that &lt;a href="#ngxreqset_uri_args"&gt;ngx.req.set_uri_args&lt;/a&gt; should be used for this instead. For instance, Nginx config&lt;/p&gt;
&lt;div class="highlight highlight-source-nginx"&gt;&lt;pre&gt; &lt;span class="pl-k"&gt;rewrite&lt;/span&gt; &lt;span class="pl-sr"&gt;^ &lt;/span&gt;/foo?a=3?&lt;span class="pl-c1"&gt; last&lt;/span&gt;;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;can be coded as&lt;/p&gt;
&lt;div class="highlight highlight-source-nginx"&gt;&lt;pre&gt; ngx.req.set_uri_args("a=3")
 ngx.req.set_uri("/foo", true)&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;or&lt;/p&gt;
&lt;div class="highlight highlight-source-nginx"&gt;&lt;pre&gt; ngx.req.set_uri_args({&lt;span class="pl-k"&gt;a&lt;/span&gt; = 3})
 ngx.req.set_uri("/foo", true)&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;This interface was first introduced in the &lt;code&gt;v0.3.1rc14&lt;/code&gt; release.&lt;/p&gt;
&lt;p&gt;&lt;a href="#nginx-api-for-lua"&gt;Back to TOC&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-ngxreqset_uri_args" class="anchor" aria-hidden="true" href="#ngxreqset_uri_args"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;ngx.req.set_uri_args&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;syntax:&lt;/strong&gt; &lt;em&gt;ngx.req.set_uri_args(args)&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;context:&lt;/strong&gt; &lt;em&gt;set_by_lua*, rewrite_by_lua*, access_by_lua*, content_by_lua*, header_filter_by_lua*, body_filter_by_lua*&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;Rewrite the current request's URI query arguments by the &lt;code&gt;args&lt;/code&gt; argument. The &lt;code&gt;args&lt;/code&gt; argument can be either a Lua string, as in&lt;/p&gt;
&lt;div class="highlight highlight-source-lua"&gt;&lt;pre&gt; ngx.&lt;span class="pl-smi"&gt;req&lt;/span&gt;.&lt;span class="pl-c1"&gt;set_uri_args&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;a=3&amp;amp;b=hello%20world&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;or a Lua table holding the query arguments' key-value pairs, as in&lt;/p&gt;
&lt;div class="highlight highlight-source-lua"&gt;&lt;pre&gt; ngx.&lt;span class="pl-smi"&gt;req&lt;/span&gt;.&lt;span class="pl-c1"&gt;set_uri_args&lt;/span&gt;({ a &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;3&lt;/span&gt;, b &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;hello world&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; })&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;where in the latter case, this method will escape argument keys and values according to the URI escaping rule.&lt;/p&gt;
&lt;p&gt;Multi-value arguments are also supported:&lt;/p&gt;
&lt;div class="highlight highlight-source-lua"&gt;&lt;pre&gt; ngx.&lt;span class="pl-smi"&gt;req&lt;/span&gt;.&lt;span class="pl-c1"&gt;set_uri_args&lt;/span&gt;({ a &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;3&lt;/span&gt;, b &lt;span class="pl-k"&gt;=&lt;/span&gt; {&lt;span class="pl-c1"&gt;5&lt;/span&gt;, &lt;span class="pl-c1"&gt;6&lt;/span&gt;} })&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;which will result in a query string like &lt;code&gt;a=3&amp;amp;b=5&amp;amp;b=6&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;This interface was first introduced in the &lt;code&gt;v0.3.1rc13&lt;/code&gt; release.&lt;/p&gt;
&lt;p&gt;See also &lt;a href="#ngxreqset_uri"&gt;ngx.req.set_uri&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;&lt;a href="#nginx-api-for-lua"&gt;Back to TOC&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-ngxreqget_uri_args" class="anchor" aria-hidden="true" href="#ngxreqget_uri_args"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;ngx.req.get_uri_args&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;syntax:&lt;/strong&gt; &lt;em&gt;args, err = ngx.req.get_uri_args(max_args?)&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;context:&lt;/strong&gt; &lt;em&gt;set_by_lua*, rewrite_by_lua*, access_by_lua*, content_by_lua*, header_filter_by_lua*, body_filter_by_lua*, log_by_lua*, balancer_by_lua*&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;Returns a Lua table holding all the current request URL query arguments.&lt;/p&gt;
&lt;div class="highlight highlight-source-nginx"&gt;&lt;pre&gt; &lt;span class="pl-k"&gt;location&lt;/span&gt; &lt;span class="pl-en"&gt;= /test &lt;/span&gt;{
     &lt;span class="pl-k"&gt;content_by_lua_block&lt;/span&gt; {
         &lt;span class="pl-k"&gt;local&lt;/span&gt; args, err = ngx.req.get_uri_args()

         &lt;span class="pl-k"&gt;if&lt;/span&gt; err == &lt;span class="pl-s"&gt;"truncated"&lt;/span&gt; then
             -- &lt;span class="pl-k"&gt;one&lt;/span&gt; can choose to ignore or reject the current request here
         &lt;span class="pl-k"&gt;end&lt;/span&gt;

         &lt;span class="pl-k"&gt;for&lt;/span&gt; key, val in pairs(args) do
             &lt;span class="pl-k"&gt;if&lt;/span&gt; type(val) == &lt;span class="pl-s"&gt;"table"&lt;/span&gt; then
                 ngx.say(key, ": ", table.concat(val, ", "))
             &lt;span class="pl-k"&gt;else&lt;/span&gt;
                 ngx.say(key, ": ", val)
             &lt;span class="pl-k"&gt;end&lt;/span&gt;
         &lt;span class="pl-k"&gt;end&lt;/span&gt;
     }
 }&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Then &lt;code&gt;GET /test?foo=bar&amp;amp;bar=baz&amp;amp;bar=blah&lt;/code&gt; will yield the response body&lt;/p&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt; foo: bar
 bar: baz, blah&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Multiple occurrences of an argument key will result in a table value holding all the values for that key in order.&lt;/p&gt;
&lt;p&gt;Keys and values are unescaped according to URI escaping rules. In the settings above, &lt;code&gt;GET /test?a%20b=1%61+2&lt;/code&gt; will yield:&lt;/p&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt; a b: 1a 2&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Arguments without the &lt;code&gt;=&amp;lt;value&amp;gt;&lt;/code&gt; parts are treated as boolean arguments. &lt;code&gt;GET /test?foo&amp;amp;bar&lt;/code&gt; will yield:&lt;/p&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt; foo: &lt;span class="pl-c1"&gt;true&lt;/span&gt;
 bar: &lt;span class="pl-c1"&gt;true&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;That is, they will take Lua boolean values &lt;code&gt;true&lt;/code&gt;. However, they are different from arguments taking empty string values. &lt;code&gt;GET /test?foo=&amp;amp;bar=&lt;/code&gt; will give something like&lt;/p&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt; foo:
 bar:&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Empty key arguments are discarded. &lt;code&gt;GET /test?=hello&amp;amp;=world&lt;/code&gt; will yield an empty output for instance.&lt;/p&gt;
&lt;p&gt;Updating query arguments via the Nginx variable &lt;code&gt;$args&lt;/code&gt; (or &lt;code&gt;ngx.var.args&lt;/code&gt; in Lua) at runtime is also supported:&lt;/p&gt;
&lt;div class="highlight highlight-source-lua"&gt;&lt;pre&gt; ngx.&lt;span class="pl-smi"&gt;var&lt;/span&gt;.&lt;span class="pl-smi"&gt;args&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;a=3&amp;amp;b=42&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;
 &lt;span class="pl-k"&gt;local&lt;/span&gt; args, err &lt;span class="pl-k"&gt;=&lt;/span&gt; ngx.&lt;span class="pl-smi"&gt;req&lt;/span&gt;.&lt;span class="pl-c1"&gt;get_uri_args&lt;/span&gt;()&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Here the &lt;code&gt;args&lt;/code&gt; table will always look like&lt;/p&gt;
&lt;div class="highlight highlight-source-lua"&gt;&lt;pre&gt; {a &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;3&lt;/span&gt;, b &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;42&lt;/span&gt;}&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;regardless of the actual request query string.&lt;/p&gt;
&lt;p&gt;Note that a maximum of 100 request arguments are parsed by default (including those with the same name) and that additional request arguments are silently discarded to guard against potential denial of service attacks. Since &lt;code&gt;v0.10.13&lt;/code&gt;, when the limit is exceeded, it will return a second value which is the string &lt;code&gt;"truncated"&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;However, the optional &lt;code&gt;max_args&lt;/code&gt; function argument can be used to override this limit:&lt;/p&gt;
&lt;div class="highlight highlight-source-lua"&gt;&lt;pre&gt; &lt;span class="pl-k"&gt;local&lt;/span&gt; args, err &lt;span class="pl-k"&gt;=&lt;/span&gt; ngx.&lt;span class="pl-smi"&gt;req&lt;/span&gt;.&lt;span class="pl-c1"&gt;get_uri_args&lt;/span&gt;(&lt;span class="pl-c1"&gt;10&lt;/span&gt;)
 &lt;span class="pl-k"&gt;if&lt;/span&gt; err &lt;span class="pl-k"&gt;==&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;truncated&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; &lt;span class="pl-k"&gt;then&lt;/span&gt;
     &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;--&lt;/span&gt; one can choose to ignore or reject the current request here&lt;/span&gt;
 &lt;span class="pl-k"&gt;end&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;This argument can be set to zero to remove the limit and to process all request arguments received:&lt;/p&gt;
&lt;div class="highlight highlight-source-lua"&gt;&lt;pre&gt; &lt;span class="pl-k"&gt;local&lt;/span&gt; args, err &lt;span class="pl-k"&gt;=&lt;/span&gt; ngx.&lt;span class="pl-smi"&gt;req&lt;/span&gt;.&lt;span class="pl-c1"&gt;get_uri_args&lt;/span&gt;(&lt;span class="pl-c1"&gt;0&lt;/span&gt;)&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Removing the &lt;code&gt;max_args&lt;/code&gt; cap is strongly discouraged.&lt;/p&gt;
&lt;p&gt;&lt;a href="#nginx-api-for-lua"&gt;Back to TOC&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-ngxreqget_post_args" class="anchor" aria-hidden="true" href="#ngxreqget_post_args"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;ngx.req.get_post_args&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;syntax:&lt;/strong&gt; &lt;em&gt;args, err = ngx.req.get_post_args(max_args?)&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;context:&lt;/strong&gt; &lt;em&gt;rewrite_by_lua*, access_by_lua*, content_by_lua*, header_filter_by_lua*, body_filter_by_lua*, log_by_lua*&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;Returns a Lua table holding all the current request POST query arguments (of the MIME type &lt;code&gt;application/x-www-form-urlencoded&lt;/code&gt;). Call &lt;a href="#ngxreqread_body"&gt;ngx.req.read_body&lt;/a&gt; to read the request body first or turn on the &lt;a href="#lua_need_request_body"&gt;lua_need_request_body&lt;/a&gt; directive to avoid errors.&lt;/p&gt;
&lt;div class="highlight highlight-source-nginx"&gt;&lt;pre&gt; &lt;span class="pl-k"&gt;location&lt;/span&gt; &lt;span class="pl-en"&gt;= /test &lt;/span&gt;{
     &lt;span class="pl-k"&gt;content_by_lua_block&lt;/span&gt; {
         ngx.req.read_body()
         &lt;span class="pl-k"&gt;local&lt;/span&gt; args, err = ngx.req.get_post_args()

         &lt;span class="pl-k"&gt;if&lt;/span&gt; err == &lt;span class="pl-s"&gt;"truncated"&lt;/span&gt; then
             -- &lt;span class="pl-k"&gt;one&lt;/span&gt; can choose to ignore or reject the current request here
         &lt;span class="pl-k"&gt;end&lt;/span&gt;

         &lt;span class="pl-k"&gt;if&lt;/span&gt; not args then
             ngx.say("&lt;span class="pl-k"&gt;failed&lt;/span&gt; to get post args: &lt;span class="pl-s"&gt;", err)&lt;/span&gt;
&lt;span class="pl-s"&gt;             return&lt;/span&gt;
&lt;span class="pl-s"&gt;         end&lt;/span&gt;
&lt;span class="pl-s"&gt;         for key, val in pairs(args) do&lt;/span&gt;
&lt;span class="pl-s"&gt;             if type(val) == "&lt;/span&gt;table&lt;span class="pl-s"&gt;" then&lt;/span&gt;
&lt;span class="pl-s"&gt;                 ngx.say(key, "&lt;/span&gt;: &lt;span class="pl-s"&gt;", table.concat(val, "&lt;/span&gt;, &lt;span class="pl-s"&gt;"))&lt;/span&gt;
&lt;span class="pl-s"&gt;             else&lt;/span&gt;
&lt;span class="pl-s"&gt;                 ngx.say(key, "&lt;/span&gt;: &lt;span class="pl-s"&gt;", val)&lt;/span&gt;
&lt;span class="pl-s"&gt;             end&lt;/span&gt;
&lt;span class="pl-s"&gt;         end&lt;/span&gt;
&lt;span class="pl-s"&gt;     }&lt;/span&gt;
&lt;span class="pl-s"&gt; }&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Then&lt;/p&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt; &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; Post request with the body 'foo=bar&amp;amp;bar=baz&amp;amp;bar=blah'&lt;/span&gt;
 $ curl --data &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;foo=bar&amp;amp;bar=baz&amp;amp;bar=blah&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt; localhost/test&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;will yield the response body like&lt;/p&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt; foo: bar
 bar: baz, blah&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Multiple occurrences of an argument key will result in a table value holding all of the values for that key in order.&lt;/p&gt;
&lt;p&gt;Keys and values will be unescaped according to URI escaping rules.&lt;/p&gt;
&lt;p&gt;With the settings above,&lt;/p&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt; &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; POST request with body 'a%20b=1%61+2'&lt;/span&gt;
 $ curl -d &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;a%20b=1%61+2&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt; localhost/test&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;will yield:&lt;/p&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt; a b: 1a 2&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Arguments without the &lt;code&gt;=&amp;lt;value&amp;gt;&lt;/code&gt; parts are treated as boolean arguments. &lt;code&gt;POST /test&lt;/code&gt; with the request body &lt;code&gt;foo&amp;amp;bar&lt;/code&gt; will yield:&lt;/p&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt; foo: &lt;span class="pl-c1"&gt;true&lt;/span&gt;
 bar: &lt;span class="pl-c1"&gt;true&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;That is, they will take Lua boolean values &lt;code&gt;true&lt;/code&gt;. However, they are different from arguments taking empty string values. &lt;code&gt;POST /test&lt;/code&gt; with request body &lt;code&gt;foo=&amp;amp;bar=&lt;/code&gt; will return something like&lt;/p&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt; foo:
 bar:&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Empty key arguments are discarded. &lt;code&gt;POST /test&lt;/code&gt; with body &lt;code&gt;=hello&amp;amp;=world&lt;/code&gt; will yield empty outputs for instance.&lt;/p&gt;
&lt;p&gt;Note that a maximum of 100 request arguments are parsed by default (including those with the same name) and that additional request arguments are silently discarded to guard against potential denial of service attacks. Since &lt;code&gt;v0.10.13&lt;/code&gt;, when the limit is exceeded, it will return a second value which is the string &lt;code&gt;"truncated"&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;However, the optional &lt;code&gt;max_args&lt;/code&gt; function argument can be used to override this limit:&lt;/p&gt;
&lt;div class="highlight highlight-source-lua"&gt;&lt;pre&gt; &lt;span class="pl-k"&gt;local&lt;/span&gt; args, err &lt;span class="pl-k"&gt;=&lt;/span&gt; ngx.&lt;span class="pl-smi"&gt;req&lt;/span&gt;.&lt;span class="pl-c1"&gt;get_post_args&lt;/span&gt;(&lt;span class="pl-c1"&gt;10&lt;/span&gt;)
 &lt;span class="pl-k"&gt;if&lt;/span&gt; err &lt;span class="pl-k"&gt;==&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;truncated&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; &lt;span class="pl-k"&gt;then&lt;/span&gt;
     &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;--&lt;/span&gt; one can choose to ignore or reject the current request here&lt;/span&gt;
 &lt;span class="pl-k"&gt;end&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;This argument can be set to zero to remove the limit and to process all request arguments received:&lt;/p&gt;
&lt;div class="highlight highlight-source-lua"&gt;&lt;pre&gt; &lt;span class="pl-k"&gt;local&lt;/span&gt; args, err &lt;span class="pl-k"&gt;=&lt;/span&gt; ngx.&lt;span class="pl-smi"&gt;req&lt;/span&gt;.&lt;span class="pl-c1"&gt;get_post_args&lt;/span&gt;(&lt;span class="pl-c1"&gt;0&lt;/span&gt;)&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Removing the &lt;code&gt;max_args&lt;/code&gt; cap is strongly discouraged.&lt;/p&gt;
&lt;p&gt;&lt;a href="#nginx-api-for-lua"&gt;Back to TOC&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-ngxreqget_headers" class="anchor" aria-hidden="true" href="#ngxreqget_headers"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;ngx.req.get_headers&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;syntax:&lt;/strong&gt; &lt;em&gt;headers, err = ngx.req.get_headers(max_headers?, raw?)&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;context:&lt;/strong&gt; &lt;em&gt;set_by_lua*, rewrite_by_lua*, access_by_lua*, content_by_lua*, header_filter_by_lua*, body_filter_by_lua*, log_by_lua*&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;Returns a Lua table holding all the current request headers.&lt;/p&gt;
&lt;div class="highlight highlight-source-lua"&gt;&lt;pre&gt; &lt;span class="pl-k"&gt;local&lt;/span&gt; h, err &lt;span class="pl-k"&gt;=&lt;/span&gt; ngx.&lt;span class="pl-smi"&gt;req&lt;/span&gt;.&lt;span class="pl-c1"&gt;get_headers&lt;/span&gt;()

 &lt;span class="pl-k"&gt;if&lt;/span&gt; err &lt;span class="pl-k"&gt;==&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;truncated&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; &lt;span class="pl-k"&gt;then&lt;/span&gt;
     &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;--&lt;/span&gt; one can choose to ignore or reject the current request here&lt;/span&gt;
 &lt;span class="pl-k"&gt;end&lt;/span&gt;

 &lt;span class="pl-k"&gt;for&lt;/span&gt; k, v &lt;span class="pl-k"&gt;in&lt;/span&gt; &lt;span class="pl-c1"&gt;pairs&lt;/span&gt;(h) &lt;span class="pl-k"&gt;do&lt;/span&gt;
     &lt;span class="pl-c1"&gt;...&lt;/span&gt;
 &lt;span class="pl-k"&gt;end&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;To read an individual header:&lt;/p&gt;
&lt;div class="highlight highlight-source-lua"&gt;&lt;pre&gt; ngx.&lt;span class="pl-c1"&gt;say&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;Host: &lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, ngx.&lt;span class="pl-smi"&gt;req&lt;/span&gt;.&lt;span class="pl-c1"&gt;get_headers&lt;/span&gt;()[&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;Host&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;])&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Note that the &lt;a href="#ngxvarvariable"&gt;ngx.var.HEADER&lt;/a&gt; API call, which uses core &lt;a href="http://nginx.org/en/docs/http/ngx_http_core_module.html#var_http_" rel="nofollow"&gt;$http_HEADER&lt;/a&gt; variables, may be more preferable for reading individual request headers.&lt;/p&gt;
&lt;p&gt;For multiple instances of request headers such as:&lt;/p&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt; Foo: foo
 Foo: bar
 Foo: baz&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;the value of &lt;code&gt;ngx.req.get_headers()["Foo"]&lt;/code&gt; will be a Lua (array) table such as:&lt;/p&gt;
&lt;div class="highlight highlight-source-lua"&gt;&lt;pre&gt; {&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;foo&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;bar&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;baz&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;}&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Note that a maximum of 100 request headers are parsed by default (including those with the same name) and that additional request headers are silently discarded to guard against potential denial of service attacks. Since &lt;code&gt;v0.10.13&lt;/code&gt;, when the limit is exceeded, it will return a second value which is the string &lt;code&gt;"truncated"&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;However, the optional &lt;code&gt;max_headers&lt;/code&gt; function argument can be used to override this limit:&lt;/p&gt;
&lt;div class="highlight highlight-source-lua"&gt;&lt;pre&gt; &lt;span class="pl-k"&gt;local&lt;/span&gt; headers, err &lt;span class="pl-k"&gt;=&lt;/span&gt; ngx.&lt;span class="pl-smi"&gt;req&lt;/span&gt;.&lt;span class="pl-c1"&gt;get_headers&lt;/span&gt;(&lt;span class="pl-c1"&gt;10&lt;/span&gt;)

 &lt;span class="pl-k"&gt;if&lt;/span&gt; err &lt;span class="pl-k"&gt;==&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;truncated&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; &lt;span class="pl-k"&gt;then&lt;/span&gt;
     &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;--&lt;/span&gt; one can choose to ignore or reject the current request here&lt;/span&gt;
 &lt;span class="pl-k"&gt;end&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;This argument can be set to zero to remove the limit and to process all request headers received:&lt;/p&gt;
&lt;div class="highlight highlight-source-lua"&gt;&lt;pre&gt; &lt;span class="pl-k"&gt;local&lt;/span&gt; headers, err &lt;span class="pl-k"&gt;=&lt;/span&gt; ngx.&lt;span class="pl-smi"&gt;req&lt;/span&gt;.&lt;span class="pl-c1"&gt;get_headers&lt;/span&gt;(&lt;span class="pl-c1"&gt;0&lt;/span&gt;)&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Removing the &lt;code&gt;max_headers&lt;/code&gt; cap is strongly discouraged.&lt;/p&gt;
&lt;p&gt;Since the &lt;code&gt;0.6.9&lt;/code&gt; release, all the header names in the Lua table returned are converted to the pure lower-case form by default, unless the &lt;code&gt;raw&lt;/code&gt; argument is set to &lt;code&gt;true&lt;/code&gt; (default to &lt;code&gt;false&lt;/code&gt;).&lt;/p&gt;
&lt;p&gt;Also, by default, an &lt;code&gt;__index&lt;/code&gt; metamethod is added to the resulting Lua table and will normalize the keys to a pure lowercase form with all underscores converted to dashes in case of a lookup miss. For example, if a request header &lt;code&gt;My-Foo-Header&lt;/code&gt; is present, then the following invocations will all pick up the value of this header correctly:&lt;/p&gt;
&lt;div class="highlight highlight-source-lua"&gt;&lt;pre&gt; ngx.&lt;span class="pl-c1"&gt;say&lt;/span&gt;(headers.&lt;span class="pl-smi"&gt;my_foo_header&lt;/span&gt;)
 ngx.&lt;span class="pl-c1"&gt;say&lt;/span&gt;(headers[&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;My-Foo-Header&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;])
 ngx.&lt;span class="pl-c1"&gt;say&lt;/span&gt;(headers[&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;my-foo-header&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;])&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;The &lt;code&gt;__index&lt;/code&gt; metamethod will not be added when the &lt;code&gt;raw&lt;/code&gt; argument is set to &lt;code&gt;true&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;&lt;a href="#nginx-api-for-lua"&gt;Back to TOC&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-ngxreqset_header" class="anchor" aria-hidden="true" href="#ngxreqset_header"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;ngx.req.set_header&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;syntax:&lt;/strong&gt; &lt;em&gt;ngx.req.set_header(header_name, header_value)&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;context:&lt;/strong&gt; &lt;em&gt;set_by_lua*, rewrite_by_lua*, access_by_lua*, content_by_lua*, header_filter_by_lua*, body_filter_by_lua*&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;Set the current request's request header named &lt;code&gt;header_name&lt;/code&gt; to value &lt;code&gt;header_value&lt;/code&gt;, overriding any existing ones.&lt;/p&gt;
&lt;p&gt;By default, all the subrequests subsequently initiated by &lt;a href="#ngxlocationcapture"&gt;ngx.location.capture&lt;/a&gt; and &lt;a href="#ngxlocationcapture_multi"&gt;ngx.location.capture_multi&lt;/a&gt; will inherit the new header.&lt;/p&gt;
&lt;p&gt;Here is an example of setting the &lt;code&gt;Content-Type&lt;/code&gt; header:&lt;/p&gt;
&lt;div class="highlight highlight-source-lua"&gt;&lt;pre&gt; ngx.&lt;span class="pl-smi"&gt;req&lt;/span&gt;.&lt;span class="pl-c1"&gt;set_header&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;Content-Type&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;text/css&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;The &lt;code&gt;header_value&lt;/code&gt; can take an array list of values,
for example,&lt;/p&gt;
&lt;div class="highlight highlight-source-lua"&gt;&lt;pre&gt; ngx.&lt;span class="pl-smi"&gt;req&lt;/span&gt;.&lt;span class="pl-c1"&gt;set_header&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;Foo&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, {&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;a&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;abc&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;})&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;will produce two new request headers:&lt;/p&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt; Foo: a
 Foo: abc&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;and old &lt;code&gt;Foo&lt;/code&gt; headers will be overridden if there is any.&lt;/p&gt;
&lt;p&gt;When the &lt;code&gt;header_value&lt;/code&gt; argument is &lt;code&gt;nil&lt;/code&gt;, the request header will be removed. So&lt;/p&gt;
&lt;div class="highlight highlight-source-lua"&gt;&lt;pre&gt; ngx.&lt;span class="pl-smi"&gt;req&lt;/span&gt;.&lt;span class="pl-c1"&gt;set_header&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;X-Foo&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-c1"&gt;nil&lt;/span&gt;)&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;is equivalent to&lt;/p&gt;
&lt;div class="highlight highlight-source-lua"&gt;&lt;pre&gt; ngx.&lt;span class="pl-smi"&gt;req&lt;/span&gt;.&lt;span class="pl-c1"&gt;clear_header&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;X-Foo&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;a href="#nginx-api-for-lua"&gt;Back to TOC&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-ngxreqclear_header" class="anchor" aria-hidden="true" href="#ngxreqclear_header"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;ngx.req.clear_header&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;syntax:&lt;/strong&gt; &lt;em&gt;ngx.req.clear_header(header_name)&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;context:&lt;/strong&gt; &lt;em&gt;set_by_lua*, rewrite_by_lua*, access_by_lua*, content_by_lua*, header_filter_by_lua*, body_filter_by_lua*&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;Clears the current request's request header named &lt;code&gt;header_name&lt;/code&gt;. None of the current request's existing subrequests will be affected but subsequently initiated subrequests will inherit the change by default.&lt;/p&gt;
&lt;p&gt;&lt;a href="#nginx-api-for-lua"&gt;Back to TOC&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-ngxreqread_body" class="anchor" aria-hidden="true" href="#ngxreqread_body"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;ngx.req.read_body&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;syntax:&lt;/strong&gt; &lt;em&gt;ngx.req.read_body()&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;context:&lt;/strong&gt; &lt;em&gt;rewrite_by_lua*, access_by_lua*, content_by_lua*&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;Reads the client request body synchronously without blocking the Nginx event loop.&lt;/p&gt;
&lt;div class="highlight highlight-source-lua"&gt;&lt;pre&gt; ngx.&lt;span class="pl-smi"&gt;req&lt;/span&gt;.&lt;span class="pl-c1"&gt;read_body&lt;/span&gt;()
 &lt;span class="pl-k"&gt;local&lt;/span&gt; args &lt;span class="pl-k"&gt;=&lt;/span&gt; ngx.&lt;span class="pl-smi"&gt;req&lt;/span&gt;.&lt;span class="pl-c1"&gt;get_post_args&lt;/span&gt;()&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;If the request body is already read previously by turning on &lt;a href="#lua_need_request_body"&gt;lua_need_request_body&lt;/a&gt; or by using other modules, then this function does not run and returns immediately.&lt;/p&gt;
&lt;p&gt;If the request body has already been explicitly discarded, either by the &lt;a href="#ngxreqdiscard_body"&gt;ngx.req.discard_body&lt;/a&gt; function or other modules, this function does not run and returns immediately.&lt;/p&gt;
&lt;p&gt;In case of errors, such as connection errors while reading the data, this method will throw out a Lua exception &lt;em&gt;or&lt;/em&gt; terminate the current request with a 500 status code immediately.&lt;/p&gt;
&lt;p&gt;The request body data read using this function can be retrieved later via &lt;a href="#ngxreqget_body_data"&gt;ngx.req.get_body_data&lt;/a&gt; or, alternatively, the temporary file name for the body data cached to disk using &lt;a href="#ngxreqget_body_file"&gt;ngx.req.get_body_file&lt;/a&gt;. This depends on&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;whether the current request body is already larger than the &lt;a href="http://nginx.org/en/docs/http/ngx_http_core_module.html#client_body_buffer_size" rel="nofollow"&gt;client_body_buffer_size&lt;/a&gt;,&lt;/li&gt;
&lt;li&gt;and whether &lt;a href="http://nginx.org/en/docs/http/ngx_http_core_module.html#client_body_in_file_only" rel="nofollow"&gt;client_body_in_file_only&lt;/a&gt; has been switched on.&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;In cases where current request may have a request body and the request body data is not required, The &lt;a href="#ngxreqdiscard_body"&gt;ngx.req.discard_body&lt;/a&gt; function must be used to explicitly discard the request body to avoid breaking things under HTTP 1.1 keepalive or HTTP 1.1 pipelining.&lt;/p&gt;
&lt;p&gt;This function was first introduced in the &lt;code&gt;v0.3.1rc17&lt;/code&gt; release.&lt;/p&gt;
&lt;p&gt;&lt;a href="#nginx-api-for-lua"&gt;Back to TOC&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-ngxreqdiscard_body" class="anchor" aria-hidden="true" href="#ngxreqdiscard_body"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;ngx.req.discard_body&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;syntax:&lt;/strong&gt; &lt;em&gt;ngx.req.discard_body()&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;context:&lt;/strong&gt; &lt;em&gt;rewrite_by_lua*, access_by_lua*, content_by_lua*&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;Explicitly discard the request body, i.e., read the data on the connection and throw it away immediately (without using the request body by any means).&lt;/p&gt;
&lt;p&gt;This function is an asynchronous call and returns immediately.&lt;/p&gt;
&lt;p&gt;If the request body has already been read, this function does nothing and returns immediately.&lt;/p&gt;
&lt;p&gt;This function was first introduced in the &lt;code&gt;v0.3.1rc17&lt;/code&gt; release.&lt;/p&gt;
&lt;p&gt;See also &lt;a href="#ngxreqread_body"&gt;ngx.req.read_body&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;&lt;a href="#nginx-api-for-lua"&gt;Back to TOC&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-ngxreqget_body_data" class="anchor" aria-hidden="true" href="#ngxreqget_body_data"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;ngx.req.get_body_data&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;syntax:&lt;/strong&gt; &lt;em&gt;data = ngx.req.get_body_data()&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;context:&lt;/strong&gt; &lt;em&gt;rewrite_by_lua*, access_by_lua*, content_by_lua*, log_by_lua*&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;Retrieves in-memory request body data. It returns a Lua string rather than a Lua table holding all the parsed query arguments. Use the &lt;a href="#ngxreqget_post_args"&gt;ngx.req.get_post_args&lt;/a&gt; function instead if a Lua table is required.&lt;/p&gt;
&lt;p&gt;This function returns &lt;code&gt;nil&lt;/code&gt; if&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;the request body has not been read,&lt;/li&gt;
&lt;li&gt;the request body has been read into disk temporary files,&lt;/li&gt;
&lt;li&gt;or the request body has zero size.&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;If the request body has not been read yet, call &lt;a href="#ngxreqread_body"&gt;ngx.req.read_body&lt;/a&gt; first (or turn on &lt;a href="#lua_need_request_body"&gt;lua_need_request_body&lt;/a&gt; to force this module to read the request body. This is not recommended however).&lt;/p&gt;
&lt;p&gt;If the request body has been read into disk files, try calling the &lt;a href="#ngxreqget_body_file"&gt;ngx.req.get_body_file&lt;/a&gt; function instead.&lt;/p&gt;
&lt;p&gt;To force in-memory request bodies, try setting &lt;a href="http://nginx.org/en/docs/http/ngx_http_core_module.html#client_body_buffer_size" rel="nofollow"&gt;client_body_buffer_size&lt;/a&gt; to the same size value in &lt;a href="http://nginx.org/en/docs/http/ngx_http_core_module.html#client_max_body_size" rel="nofollow"&gt;client_max_body_size&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Note that calling this function instead of using &lt;code&gt;ngx.var.request_body&lt;/code&gt; or &lt;code&gt;ngx.var.echo_request_body&lt;/code&gt; is more efficient because it can save one dynamic memory allocation and one data copy.&lt;/p&gt;
&lt;p&gt;This function was first introduced in the &lt;code&gt;v0.3.1rc17&lt;/code&gt; release.&lt;/p&gt;
&lt;p&gt;See also &lt;a href="#ngxreqget_body_file"&gt;ngx.req.get_body_file&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;&lt;a href="#nginx-api-for-lua"&gt;Back to TOC&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-ngxreqget_body_file" class="anchor" aria-hidden="true" href="#ngxreqget_body_file"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;ngx.req.get_body_file&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;syntax:&lt;/strong&gt; &lt;em&gt;file_name = ngx.req.get_body_file()&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;context:&lt;/strong&gt; &lt;em&gt;rewrite_by_lua*, access_by_lua*, content_by_lua*&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;Retrieves the file name for the in-file request body data. Returns &lt;code&gt;nil&lt;/code&gt; if the request body has not been read or has been read into memory.&lt;/p&gt;
&lt;p&gt;The returned file is read only and is usually cleaned up by Nginx's memory pool. It should not be manually modified, renamed, or removed in Lua code.&lt;/p&gt;
&lt;p&gt;If the request body has not been read yet, call &lt;a href="#ngxreqread_body"&gt;ngx.req.read_body&lt;/a&gt; first (or turn on &lt;a href="#lua_need_request_body"&gt;lua_need_request_body&lt;/a&gt; to force this module to read the request body. This is not recommended however).&lt;/p&gt;
&lt;p&gt;If the request body has been read into memory, try calling the &lt;a href="#ngxreqget_body_data"&gt;ngx.req.get_body_data&lt;/a&gt; function instead.&lt;/p&gt;
&lt;p&gt;To force in-file request bodies, try turning on &lt;a href="http://nginx.org/en/docs/http/ngx_http_core_module.html#client_body_in_file_only" rel="nofollow"&gt;client_body_in_file_only&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;This function was first introduced in the &lt;code&gt;v0.3.1rc17&lt;/code&gt; release.&lt;/p&gt;
&lt;p&gt;See also &lt;a href="#ngxreqget_body_data"&gt;ngx.req.get_body_data&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;&lt;a href="#nginx-api-for-lua"&gt;Back to TOC&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-ngxreqset_body_data" class="anchor" aria-hidden="true" href="#ngxreqset_body_data"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;ngx.req.set_body_data&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;syntax:&lt;/strong&gt; &lt;em&gt;ngx.req.set_body_data(data)&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;context:&lt;/strong&gt; &lt;em&gt;rewrite_by_lua*, access_by_lua*, content_by_lua*&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;Set the current request's request body using the in-memory data specified by the &lt;code&gt;data&lt;/code&gt; argument.&lt;/p&gt;
&lt;p&gt;If the request body has not been read yet, call &lt;a href="#ngxreqread_body"&gt;ngx.req.read_body&lt;/a&gt; first (or turn on &lt;a href="#lua_need_request_body"&gt;lua_need_request_body&lt;/a&gt; to force this module to read the request body. This is not recommended however). Additionally, the request body must not have been previously discarded by &lt;a href="#ngxreqdiscard_body"&gt;ngx.req.discard_body&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Whether the previous request body has been read into memory or buffered into a disk file, it will be freed or the disk file will be cleaned up immediately, respectively.&lt;/p&gt;
&lt;p&gt;This function was first introduced in the &lt;code&gt;v0.3.1rc18&lt;/code&gt; release.&lt;/p&gt;
&lt;p&gt;See also &lt;a href="#ngxreqset_body_file"&gt;ngx.req.set_body_file&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;&lt;a href="#nginx-api-for-lua"&gt;Back to TOC&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-ngxreqset_body_file" class="anchor" aria-hidden="true" href="#ngxreqset_body_file"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;ngx.req.set_body_file&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;syntax:&lt;/strong&gt; &lt;em&gt;ngx.req.set_body_file(file_name, auto_clean?)&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;context:&lt;/strong&gt; &lt;em&gt;rewrite_by_lua*, access_by_lua*, content_by_lua*&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;Set the current request's request body using the in-file data specified by the &lt;code&gt;file_name&lt;/code&gt; argument.&lt;/p&gt;
&lt;p&gt;If the request body has not been read yet, call &lt;a href="#ngxreqread_body"&gt;ngx.req.read_body&lt;/a&gt; first (or turn on &lt;a href="#lua_need_request_body"&gt;lua_need_request_body&lt;/a&gt; to force this module to read the request body. This is not recommended however). Additionally, the request body must not have been previously discarded by &lt;a href="#ngxreqdiscard_body"&gt;ngx.req.discard_body&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;If the optional &lt;code&gt;auto_clean&lt;/code&gt; argument is given a &lt;code&gt;true&lt;/code&gt; value, then this file will be removed at request completion or the next time this function or &lt;a href="#ngxreqset_body_data"&gt;ngx.req.set_body_data&lt;/a&gt; are called in the same request. The &lt;code&gt;auto_clean&lt;/code&gt; is default to &lt;code&gt;false&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;Please ensure that the file specified by the &lt;code&gt;file_name&lt;/code&gt; argument exists and is readable by an Nginx worker process by setting its permission properly to avoid Lua exception errors.&lt;/p&gt;
&lt;p&gt;Whether the previous request body has been read into memory or buffered into a disk file, it will be freed or the disk file will be cleaned up immediately, respectively.&lt;/p&gt;
&lt;p&gt;This function was first introduced in the &lt;code&gt;v0.3.1rc18&lt;/code&gt; release.&lt;/p&gt;
&lt;p&gt;See also &lt;a href="#ngxreqset_body_data"&gt;ngx.req.set_body_data&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;&lt;a href="#nginx-api-for-lua"&gt;Back to TOC&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-ngxreqinit_body" class="anchor" aria-hidden="true" href="#ngxreqinit_body"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;ngx.req.init_body&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;syntax:&lt;/strong&gt; &lt;em&gt;ngx.req.init_body(buffer_size?)&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;context:&lt;/strong&gt; &lt;em&gt;set_by_lua*, rewrite_by_lua*, access_by_lua*, content_by_lua*&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;Creates a new blank request body for the current request and inializes the buffer for later request body data writing via the &lt;a href="#ngxreqappend_body"&gt;ngx.req.append_body&lt;/a&gt; and &lt;a href="#ngxreqfinish_body"&gt;ngx.req.finish_body&lt;/a&gt; APIs.&lt;/p&gt;
&lt;p&gt;If the &lt;code&gt;buffer_size&lt;/code&gt; argument is specified, then its value will be used for the size of the memory buffer for body writing with &lt;a href="#ngxreqappend_body"&gt;ngx.req.append_body&lt;/a&gt;. If the argument is omitted, then the value specified by the standard &lt;a href="http://nginx.org/en/docs/http/ngx_http_core_module.html#client_body_buffer_size" rel="nofollow"&gt;client_body_buffer_size&lt;/a&gt; directive will be used instead.&lt;/p&gt;
&lt;p&gt;When the data can no longer be hold in the memory buffer for the request body, then the data will be flushed onto a temporary file just like the standard request body reader in the Nginx core.&lt;/p&gt;
&lt;p&gt;It is important to always call the &lt;a href="#ngxreqfinish_body"&gt;ngx.req.finish_body&lt;/a&gt; after all the data has been appended onto the current request body. Also, when this function is used together with &lt;a href="#ngxreqsocket"&gt;ngx.req.socket&lt;/a&gt;, it is required to call &lt;a href="#ngxreqsocket"&gt;ngx.req.socket&lt;/a&gt; &lt;em&gt;before&lt;/em&gt; this function, or you will get the "request body already exists" error message.&lt;/p&gt;
&lt;p&gt;The usage of this function is often like this:&lt;/p&gt;
&lt;div class="highlight highlight-source-lua"&gt;&lt;pre&gt; ngx.&lt;span class="pl-smi"&gt;req&lt;/span&gt;.&lt;span class="pl-c1"&gt;init_body&lt;/span&gt;(&lt;span class="pl-c1"&gt;128&lt;/span&gt; &lt;span class="pl-k"&gt;*&lt;/span&gt; &lt;span class="pl-c1"&gt;1024&lt;/span&gt;)  &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;--&lt;/span&gt; buffer is 128KB&lt;/span&gt;
 &lt;span class="pl-k"&gt;for&lt;/span&gt; chunk &lt;span class="pl-k"&gt;in&lt;/span&gt; &lt;span class="pl-c1"&gt;next_data_chunk&lt;/span&gt;() &lt;span class="pl-k"&gt;do&lt;/span&gt;
     ngx.&lt;span class="pl-smi"&gt;req&lt;/span&gt;.&lt;span class="pl-c1"&gt;append_body&lt;/span&gt;(chunk) &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;--&lt;/span&gt; each chunk can be 4KB&lt;/span&gt;
 &lt;span class="pl-k"&gt;end&lt;/span&gt;
 ngx.&lt;span class="pl-smi"&gt;req&lt;/span&gt;.&lt;span class="pl-c1"&gt;finish_body&lt;/span&gt;()&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;This function can be used with &lt;a href="#ngxreqappend_body"&gt;ngx.req.append_body&lt;/a&gt;, &lt;a href="#ngxreqfinish_body"&gt;ngx.req.finish_body&lt;/a&gt;, and &lt;a href="#ngxreqsocket"&gt;ngx.req.socket&lt;/a&gt; to implement efficient input filters in pure Lua (in the context of &lt;a href="#rewrite_by_lua"&gt;rewrite_by_lua*&lt;/a&gt; or &lt;a href="#access_by_lua"&gt;access_by_lua*&lt;/a&gt;), which can be used with other Nginx content handler or upstream modules like &lt;a href="http://nginx.org/en/docs/http/ngx_http_proxy_module.html" rel="nofollow"&gt;ngx_http_proxy_module&lt;/a&gt; and &lt;a href="http://nginx.org/en/docs/http/ngx_http_fastcgi_module.html" rel="nofollow"&gt;ngx_http_fastcgi_module&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;This function was first introduced in the &lt;code&gt;v0.5.11&lt;/code&gt; release.&lt;/p&gt;
&lt;p&gt;&lt;a href="#nginx-api-for-lua"&gt;Back to TOC&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-ngxreqappend_body" class="anchor" aria-hidden="true" href="#ngxreqappend_body"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;ngx.req.append_body&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;syntax:&lt;/strong&gt; &lt;em&gt;ngx.req.append_body(data_chunk)&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;context:&lt;/strong&gt; &lt;em&gt;set_by_lua*, rewrite_by_lua*, access_by_lua*, content_by_lua*&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;Append new data chunk specified by the &lt;code&gt;data_chunk&lt;/code&gt; argument onto the existing request body created by the &lt;a href="#ngxreqinit_body"&gt;ngx.req.init_body&lt;/a&gt; call.&lt;/p&gt;
&lt;p&gt;When the data can no longer be hold in the memory buffer for the request body, then the data will be flushed onto a temporary file just like the standard request body reader in the Nginx core.&lt;/p&gt;
&lt;p&gt;It is important to always call the &lt;a href="#ngxreqfinish_body"&gt;ngx.req.finish_body&lt;/a&gt; after all the data has been appended onto the current request body.&lt;/p&gt;
&lt;p&gt;This function can be used with &lt;a href="#ngxreqinit_body"&gt;ngx.req.init_body&lt;/a&gt;, &lt;a href="#ngxreqfinish_body"&gt;ngx.req.finish_body&lt;/a&gt;, and &lt;a href="#ngxreqsocket"&gt;ngx.req.socket&lt;/a&gt; to implement efficient input filters in pure Lua (in the context of &lt;a href="#rewrite_by_lua"&gt;rewrite_by_lua*&lt;/a&gt; or &lt;a href="#access_by_lua"&gt;access_by_lua*&lt;/a&gt;), which can be used with other Nginx content handler or upstream modules like &lt;a href="http://nginx.org/en/docs/http/ngx_http_proxy_module.html" rel="nofollow"&gt;ngx_http_proxy_module&lt;/a&gt; and &lt;a href="http://nginx.org/en/docs/http/ngx_http_fastcgi_module.html" rel="nofollow"&gt;ngx_http_fastcgi_module&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;This function was first introduced in the &lt;code&gt;v0.5.11&lt;/code&gt; release.&lt;/p&gt;
&lt;p&gt;See also &lt;a href="#ngxreqinit_body"&gt;ngx.req.init_body&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;&lt;a href="#nginx-api-for-lua"&gt;Back to TOC&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-ngxreqfinish_body" class="anchor" aria-hidden="true" href="#ngxreqfinish_body"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;ngx.req.finish_body&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;syntax:&lt;/strong&gt; &lt;em&gt;ngx.req.finish_body()&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;context:&lt;/strong&gt; &lt;em&gt;set_by_lua*, rewrite_by_lua*, access_by_lua*, content_by_lua*&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;Completes the construction process of the new request body created by the &lt;a href="#ngxreqinit_body"&gt;ngx.req.init_body&lt;/a&gt; and &lt;a href="#ngxreqappend_body"&gt;ngx.req.append_body&lt;/a&gt; calls.&lt;/p&gt;
&lt;p&gt;This function can be used with &lt;a href="#ngxreqinit_body"&gt;ngx.req.init_body&lt;/a&gt;, &lt;a href="#ngxreqappend_body"&gt;ngx.req.append_body&lt;/a&gt;, and &lt;a href="#ngxreqsocket"&gt;ngx.req.socket&lt;/a&gt; to implement efficient input filters in pure Lua (in the context of &lt;a href="#rewrite_by_lua"&gt;rewrite_by_lua*&lt;/a&gt; or &lt;a href="#access_by_lua"&gt;access_by_lua*&lt;/a&gt;), which can be used with other Nginx content handler or upstream modules like &lt;a href="http://nginx.org/en/docs/http/ngx_http_proxy_module.html" rel="nofollow"&gt;ngx_http_proxy_module&lt;/a&gt; and &lt;a href="http://nginx.org/en/docs/http/ngx_http_fastcgi_module.html" rel="nofollow"&gt;ngx_http_fastcgi_module&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;This function was first introduced in the &lt;code&gt;v0.5.11&lt;/code&gt; release.&lt;/p&gt;
&lt;p&gt;See also &lt;a href="#ngxreqinit_body"&gt;ngx.req.init_body&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;&lt;a href="#nginx-api-for-lua"&gt;Back to TOC&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-ngxreqsocket" class="anchor" aria-hidden="true" href="#ngxreqsocket"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;ngx.req.socket&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;syntax:&lt;/strong&gt; &lt;em&gt;tcpsock, err = ngx.req.socket()&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;syntax:&lt;/strong&gt; &lt;em&gt;tcpsock, err = ngx.req.socket(raw)&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;context:&lt;/strong&gt; &lt;em&gt;rewrite_by_lua*, access_by_lua*, content_by_lua*&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;Returns a read-only cosocket object that wraps the downstream connection. Only &lt;a href="#tcpsockreceive"&gt;receive&lt;/a&gt; and &lt;a href="#tcpsockreceiveuntil"&gt;receiveuntil&lt;/a&gt; methods are supported on this object.&lt;/p&gt;
&lt;p&gt;In case of error, &lt;code&gt;nil&lt;/code&gt; will be returned as well as a string describing the error.&lt;/p&gt;
&lt;p&gt;The socket object returned by this method is usually used to read the current request's body in a streaming fashion. Do not turn on the &lt;a href="#lua_need_request_body"&gt;lua_need_request_body&lt;/a&gt; directive, and do not mix this call with &lt;a href="#ngxreqread_body"&gt;ngx.req.read_body&lt;/a&gt; and &lt;a href="#ngxreqdiscard_body"&gt;ngx.req.discard_body&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;If any request body data has been pre-read into the Nginx core request header buffer, the resulting cosocket object will take care of this to avoid potential data loss resulting from such pre-reading.
Chunked request bodies are not yet supported in this API.&lt;/p&gt;
&lt;p&gt;Since the &lt;code&gt;v0.9.0&lt;/code&gt; release, this function accepts an optional boolean &lt;code&gt;raw&lt;/code&gt; argument. When this argument is &lt;code&gt;true&lt;/code&gt;, this function returns a full-duplex cosocket object wrapping around the raw downstream connection socket, upon which you can call the &lt;a href="#tcpsockreceive"&gt;receive&lt;/a&gt;, &lt;a href="#tcpsockreceiveuntil"&gt;receiveuntil&lt;/a&gt;, and &lt;a href="#tcpsocksend"&gt;send&lt;/a&gt; methods.&lt;/p&gt;
&lt;p&gt;When the &lt;code&gt;raw&lt;/code&gt; argument is &lt;code&gt;true&lt;/code&gt;, it is required that no pending data from any previous &lt;a href="#ngxsay"&gt;ngx.say&lt;/a&gt;, &lt;a href="#ngxprint"&gt;ngx.print&lt;/a&gt;, or &lt;a href="#ngxsend_headers"&gt;ngx.send_headers&lt;/a&gt; calls exists. So if you have these downstream output calls previously, you should call &lt;a href="#ngxflush"&gt;ngx.flush(true)&lt;/a&gt; before calling &lt;code&gt;ngx.req.socket(true)&lt;/code&gt; to ensure that there is no pending output data. If the request body has not been read yet, then this "raw socket" can also be used to read the request body.&lt;/p&gt;
&lt;p&gt;You can use the "raw request socket" returned by &lt;code&gt;ngx.req.socket(true)&lt;/code&gt; to implement fancy protocols like &lt;a href="https://en.wikipedia.org/wiki/WebSocket" rel="nofollow"&gt;WebSocket&lt;/a&gt;, or just emit your own raw HTTP response header or body data. You can refer to the &lt;a href="https://github.com/openresty/lua-resty-websocket"&gt;lua-resty-websocket library&lt;/a&gt; for a real world example.&lt;/p&gt;
&lt;p&gt;This function was first introduced in the &lt;code&gt;v0.5.0rc1&lt;/code&gt; release.&lt;/p&gt;
&lt;p&gt;&lt;a href="#nginx-api-for-lua"&gt;Back to TOC&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-ngxexec" class="anchor" aria-hidden="true" href="#ngxexec"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;ngx.exec&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;syntax:&lt;/strong&gt; &lt;em&gt;ngx.exec(uri, args?)&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;context:&lt;/strong&gt; &lt;em&gt;rewrite_by_lua*, access_by_lua*, content_by_lua*&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;Does an internal redirect to &lt;code&gt;uri&lt;/code&gt; with &lt;code&gt;args&lt;/code&gt; and is similar to the &lt;a href="http://github.com/openresty/echo-nginx-module#echo_exec"&gt;echo_exec&lt;/a&gt; directive of the &lt;a href="http://github.com/openresty/echo-nginx-module"&gt;echo-nginx-module&lt;/a&gt;.&lt;/p&gt;
&lt;div class="highlight highlight-source-lua"&gt;&lt;pre&gt; ngx.&lt;span class="pl-c1"&gt;exec&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;/some-location&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;);
 ngx.&lt;span class="pl-c1"&gt;exec&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;/some-location&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;a=3&amp;amp;b=5&amp;amp;c=6&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;);
 ngx.&lt;span class="pl-c1"&gt;exec&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;/some-location?a=3&amp;amp;b=5&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;c=6&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;);&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;The optional second &lt;code&gt;args&lt;/code&gt; can be used to specify extra URI query arguments, for example:&lt;/p&gt;
&lt;div class="highlight highlight-source-lua"&gt;&lt;pre&gt; ngx.&lt;span class="pl-c1"&gt;exec&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;/foo&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;a=3&amp;amp;b=hello%20world&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Alternatively, a Lua table can be passed for the &lt;code&gt;args&lt;/code&gt; argument for ngx_lua to carry out URI escaping and string concatenation.&lt;/p&gt;
&lt;div class="highlight highlight-source-lua"&gt;&lt;pre&gt; ngx.&lt;span class="pl-c1"&gt;exec&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;/foo&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, { a &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;3&lt;/span&gt;, b &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;hello world&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; })&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;The result is exactly the same as the previous example.&lt;/p&gt;
&lt;p&gt;The format for the Lua table passed as the &lt;code&gt;args&lt;/code&gt; argument is identical to the format used in the &lt;a href="#ngxencode_args"&gt;ngx.encode_args&lt;/a&gt; method.&lt;/p&gt;
&lt;p&gt;Named locations are also supported but the second &lt;code&gt;args&lt;/code&gt; argument will be ignored if present and the querystring for the new target is inherited from the referring location (if any).&lt;/p&gt;
&lt;p&gt;&lt;code&gt;GET /foo/file.php?a=hello&lt;/code&gt; will return "hello" and not "goodbye" in the example below&lt;/p&gt;
&lt;div class="highlight highlight-source-nginx"&gt;&lt;pre&gt; &lt;span class="pl-k"&gt;location&lt;/span&gt; &lt;span class="pl-en"&gt;/foo &lt;/span&gt;{
     &lt;span class="pl-k"&gt;content_by_lua_block&lt;/span&gt; {
         ngx.exec("@bar", "a=goodbye");
     }
 }

 &lt;span class="pl-k"&gt;location&lt;/span&gt; &lt;span class="pl-en"&gt;@bar &lt;/span&gt;{
     &lt;span class="pl-k"&gt;content_by_lua_block&lt;/span&gt; {
         &lt;span class="pl-k"&gt;local&lt;/span&gt; args = ngx.req.get_uri_args()
         &lt;span class="pl-k"&gt;for&lt;/span&gt; key, val in pairs(args) do
             &lt;span class="pl-k"&gt;if&lt;/span&gt; key == &lt;span class="pl-s"&gt;"a"&lt;/span&gt; then
                 ngx.say(val)
             &lt;span class="pl-k"&gt;end&lt;/span&gt;
         &lt;span class="pl-k"&gt;end&lt;/span&gt;
     }
 }&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Note that the &lt;code&gt;ngx.exec&lt;/code&gt; method is different from &lt;a href="#ngxredirect"&gt;ngx.redirect&lt;/a&gt; in that
it is purely an internal redirect and that no new external HTTP traffic is involved.&lt;/p&gt;
&lt;p&gt;Also note that this method call terminates the processing of the current request and that it &lt;em&gt;must&lt;/em&gt; be called before &lt;a href="#ngxsend_headers"&gt;ngx.send_headers&lt;/a&gt; or explicit response body
outputs by either &lt;a href="#ngxprint"&gt;ngx.print&lt;/a&gt; or &lt;a href="#ngxsay"&gt;ngx.say&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;It is recommended that a coding style that combines this method call with the &lt;code&gt;return&lt;/code&gt; statement, i.e., &lt;code&gt;return ngx.exec(...)&lt;/code&gt; be adopted when this method call is used in contexts other than &lt;a href="#header_filter_by_lua"&gt;header_filter_by_lua*&lt;/a&gt; to reinforce the fact that the request processing is being terminated.&lt;/p&gt;
&lt;p&gt;&lt;a href="#nginx-api-for-lua"&gt;Back to TOC&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-ngxredirect" class="anchor" aria-hidden="true" href="#ngxredirect"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;ngx.redirect&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;syntax:&lt;/strong&gt; &lt;em&gt;ngx.redirect(uri, status?)&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;context:&lt;/strong&gt; &lt;em&gt;rewrite_by_lua*, access_by_lua*, content_by_lua*&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;Issue an &lt;code&gt;HTTP 301&lt;/code&gt; or &lt;code&gt;302&lt;/code&gt; redirection to &lt;code&gt;uri&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;Notice: the &lt;code&gt;uri&lt;/code&gt; should not contains &lt;code&gt;\r&lt;/code&gt; or &lt;code&gt;\n&lt;/code&gt;, otherwise, the characters after &lt;code&gt;\r&lt;/code&gt; or &lt;code&gt;\n&lt;/code&gt; will be truncated, including the &lt;code&gt;\r&lt;/code&gt; or &lt;code&gt;\n&lt;/code&gt; bytes themself.&lt;/p&gt;
&lt;p&gt;The &lt;code&gt;uri&lt;/code&gt; argument will be truncated if it contains the
&lt;code&gt;\r&lt;/code&gt; or &lt;code&gt;\n&lt;/code&gt; characters. The truncated value will contain
all characters up to (and excluding) the first occurrence of &lt;code&gt;\r&lt;/code&gt; or
&lt;code&gt;\n&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;The optional &lt;code&gt;status&lt;/code&gt; parameter specifies the HTTP status code to be used. The following status codes are supported right now:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;301&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;302&lt;/code&gt; (default)&lt;/li&gt;
&lt;li&gt;&lt;code&gt;303&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;307&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;308&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;It is &lt;code&gt;302&lt;/code&gt; (&lt;code&gt;ngx.HTTP_MOVED_TEMPORARILY&lt;/code&gt;) by default.&lt;/p&gt;
&lt;p&gt;Here is an example assuming the current server name is &lt;code&gt;localhost&lt;/code&gt; and that it is listening on port 1984:&lt;/p&gt;
&lt;div class="highlight highlight-source-lua"&gt;&lt;pre&gt; &lt;span class="pl-k"&gt;return&lt;/span&gt; ngx.&lt;span class="pl-c1"&gt;redirect&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;/foo&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;which is equivalent to&lt;/p&gt;
&lt;div class="highlight highlight-source-lua"&gt;&lt;pre&gt; &lt;span class="pl-k"&gt;return&lt;/span&gt; ngx.&lt;span class="pl-c1"&gt;redirect&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;/foo&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, ngx.&lt;span class="pl-smi"&gt;HTTP_MOVED_TEMPORARILY&lt;/span&gt;)&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Redirecting arbitrary external URLs is also supported, for example:&lt;/p&gt;
&lt;div class="highlight highlight-source-lua"&gt;&lt;pre&gt; &lt;span class="pl-k"&gt;return&lt;/span&gt; ngx.&lt;span class="pl-c1"&gt;redirect&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;http://www.google.com&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;We can also use the numerical code directly as the second &lt;code&gt;status&lt;/code&gt; argument:&lt;/p&gt;
&lt;div class="highlight highlight-source-lua"&gt;&lt;pre&gt; &lt;span class="pl-k"&gt;return&lt;/span&gt; ngx.&lt;span class="pl-c1"&gt;redirect&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;/foo&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-c1"&gt;301&lt;/span&gt;)&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;This method is similar to the &lt;a href="http://nginx.org/en/docs/http/ngx_http_rewrite_module.html#rewrite" rel="nofollow"&gt;rewrite&lt;/a&gt; directive with the &lt;code&gt;redirect&lt;/code&gt; modifier in the standard
&lt;a href="http://nginx.org/en/docs/http/ngx_http_rewrite_module.html" rel="nofollow"&gt;ngx_http_rewrite_module&lt;/a&gt;, for example, this &lt;code&gt;nginx.conf&lt;/code&gt; snippet&lt;/p&gt;
&lt;div class="highlight highlight-source-nginx"&gt;&lt;pre&gt; &lt;span class="pl-k"&gt;rewrite&lt;/span&gt; &lt;span class="pl-sr"&gt;^ &lt;/span&gt;/foo? redirect;  &lt;span class="pl-c"&gt;# nginx config&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;is equivalent to the following Lua code&lt;/p&gt;
&lt;div class="highlight highlight-source-lua"&gt;&lt;pre&gt; &lt;span class="pl-k"&gt;return&lt;/span&gt; ngx.&lt;span class="pl-c1"&gt;redirect&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;/foo&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;);  &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;--&lt;/span&gt; Lua code&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;while&lt;/p&gt;
&lt;div class="highlight highlight-source-nginx"&gt;&lt;pre&gt; &lt;span class="pl-k"&gt;rewrite&lt;/span&gt; &lt;span class="pl-sr"&gt;^ &lt;/span&gt;/foo? permanent;  &lt;span class="pl-c"&gt;# nginx config&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;is equivalent to&lt;/p&gt;
&lt;div class="highlight highlight-source-lua"&gt;&lt;pre&gt; &lt;span class="pl-k"&gt;return&lt;/span&gt; ngx.&lt;span class="pl-c1"&gt;redirect&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;/foo&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;, ngx.&lt;span class="pl-smi"&gt;HTTP_MOVED_PERMANENTLY&lt;/span&gt;)  &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;--&lt;/span&gt; Lua code&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;URI arguments can be specified as well, for example:&lt;/p&gt;
&lt;div class="highlight highlight-source-lua"&gt;&lt;pre&gt; &lt;span class="pl-k"&gt;return&lt;/span&gt; ngx.&lt;span class="pl-c1"&gt;redirect&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;/foo?a=3&amp;amp;b=4&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;)&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Note that this method call terminates the processing of the current request and that it &lt;em&gt;must&lt;/em&gt; be called before &lt;a href="#ngxsend_headers"&gt;ngx.send_headers&lt;/a&gt; or explicit response body
outputs by either &lt;a href="#ngxprint"&gt;ngx.print&lt;/a&gt; or &lt;a href="#ngxsay"&gt;ngx.say&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;It is recommended that a coding style that combines this method call with the &lt;code&gt;return&lt;/code&gt; statement, i.e., &lt;code&gt;return ngx.redirect(...)&lt;/code&gt; be adopted when this method call is used in contexts other than &lt;a href="#header_filter_by_lua"&gt;header_filter_by_lua*&lt;/a&gt; to reinforce the fact that the request processing is being terminated.&lt;/p&gt;
&lt;p&gt;&lt;a href="#nginx-api-for-lua"&gt;Back to TOC&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-ngxsend_headers" class="anchor" aria-hidden="true" href="#ngxsend_headers"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;ngx.send_headers&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;syntax:&lt;/strong&gt; &lt;em&gt;ok, err = ngx.send_headers()&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;context:&lt;/strong&gt; &lt;em&gt;rewrite_by_lua*, access_by_lua*, content_by_lua*&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;Explicitly send out the response headers.&lt;/p&gt;
&lt;p&gt;Since &lt;code&gt;v0.8.3&lt;/code&gt; this function returns &lt;code&gt;1&lt;/code&gt; on success, or returns &lt;code&gt;nil&lt;/code&gt; and a string describing the error otherwise.&lt;/p&gt;
&lt;p&gt;Note that there is normally no need to manually send out response headers as ngx_lua will automatically send headers out
before content is output with &lt;a href="#ngxsay"&gt;ngx.say&lt;/a&gt; or &lt;a href="#ngxprint"&gt;ngx.print&lt;/a&gt; or when &lt;a href="#content_by_lua"&gt;content_by_lua*&lt;/a&gt; exits normally.&lt;/p&gt;
&lt;p&gt;&lt;a href="#nginx-api-for-lua"&gt;Back to TOC&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-ngxheaders_sent" class="anchor" aria-hidden="true" href="#ngxheaders_sent"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;ngx.headers_sent&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;syntax:&lt;/strong&gt; &lt;em&gt;value = ngx.headers_sent&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;context:&lt;/strong&gt; &lt;em&gt;set_by_lua*, rewrite_by_lua*, access_by_lua*, content_by_lua*&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;Returns &lt;code&gt;true&lt;/code&gt; if the response headers have been sent (by ngx_lua), and &lt;code&gt;false&lt;/code&gt; otherwise.&lt;/p&gt;
&lt;p&gt;This API was first introduced in ngx_lua v0.3.1rc6.&lt;/p&gt;
&lt;p&gt;&lt;a href="#nginx-api-for-lua"&gt;Back to TOC&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-ngxprint" class="anchor" aria-hidden="true" href="#ngxprint"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;ngx.print&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;syntax:&lt;/strong&gt; &lt;em&gt;ok, err = ngx.print(...)&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;context:&lt;/strong&gt; &lt;em&gt;rewrite_by_lua*, access_by_lua*, content_by_lua*&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;Emits arguments concatenated to the HTTP client (as response body). If response headers have not been sent, this function will send headers out first and then output body data.&lt;/p&gt;
&lt;p&gt;Since &lt;code&gt;v0.8.3&lt;/code&gt; this function returns &lt;code&gt;1&lt;/code&gt; on success, or returns &lt;code&gt;nil&lt;/code&gt; and a string describing the error otherwise.&lt;/p&gt;
&lt;p&gt;Lua &lt;code&gt;nil&lt;/code&gt; values will output &lt;code&gt;"nil"&lt;/code&gt; strings and Lua boolean values will output &lt;code&gt;"true"&lt;/code&gt; and &lt;code&gt;"false"&lt;/code&gt; literal strings respectively.&lt;/p&gt;
&lt;p&gt;Nested arrays of strings are permitted and the elements in the arrays will be sent one by one:&lt;/p&gt;
&lt;div class="highlight highlight-source-lua"&gt;&lt;pre&gt; &lt;span class="pl-k"&gt;local&lt;/span&gt; table &lt;span class="pl-k"&gt;=&lt;/span&gt; {
     &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;hello, &lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;,
     {&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;world: &lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-c1"&gt;true&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt; or &lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-c1"&gt;false&lt;/span&gt;,
         {&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;: &lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-c1"&gt;nil&lt;/span&gt;}}
 }
 ngx.&lt;span class="pl-c1"&gt;print&lt;/span&gt;(table)&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;will yield the output&lt;/p&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt; hello, world: &lt;span class="pl-c1"&gt;true&lt;/span&gt; or false: nil&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Non-array table arguments will cause a Lua exception to be thrown.&lt;/p&gt;
&lt;p&gt;The &lt;code&gt;ngx.null&lt;/code&gt; constant will yield the &lt;code&gt;"null"&lt;/code&gt; string output.&lt;/p&gt;
&lt;p&gt;This is an asynchronous call and will return immediately without waiting for all the data to be written into the system send buffer. To run in synchronous mode, call &lt;code&gt;ngx.flush(true)&lt;/code&gt; after calling &lt;code&gt;ngx.print&lt;/code&gt;. This can be particularly useful for streaming output. See &lt;a href="#ngxflush"&gt;ngx.flush&lt;/a&gt; for more details.&lt;/p&gt;
&lt;p&gt;Please note that both &lt;code&gt;ngx.print&lt;/code&gt; and &lt;a href="#ngxsay"&gt;ngx.say&lt;/a&gt; will always invoke the whole Nginx output body filter chain, which is an expensive operation. So be careful when calling either of these two in a tight loop; buffer the data yourself in Lua and save the calls.&lt;/p&gt;
&lt;p&gt;&lt;a href="#nginx-api-for-lua"&gt;Back to TOC&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-ngxsay" class="anchor" aria-hidden="true" href="#ngxsay"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;ngx.say&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;syntax:&lt;/strong&gt; &lt;em&gt;ok, err = ngx.say(...)&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;context:&lt;/strong&gt; &lt;em&gt;rewrite_by_lua*, access_by_lua*, content_by_lua*&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;Just as &lt;a href="#ngxprint"&gt;ngx.print&lt;/a&gt; but also emit a trailing newline.&lt;/p&gt;
&lt;p&gt;&lt;a href="#nginx-api-for-lua"&gt;Back to TOC&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-ngxlog" class="anchor" aria-hidden="true" href="#ngxlog"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;ngx.log&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;syntax:&lt;/strong&gt; &lt;em&gt;ngx.log(log_level, ...)&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;context:&lt;/strong&gt; &lt;em&gt;init_by_lua*, init_worker_by_lua*, set_by_lua*, rewrite_by_lua*, access_by_lua*, content_by_lua*, header_filter_by_lua*, body_filter_by_lua*, log_by_lua*, ngx.timer.*, balancer_by_lua*, ssl_certificate_by_lua*, ssl_session_fetch_by_lua*, ssl_session_store_by_lua*&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;Log arguments concatenated to error.log with the given logging level.&lt;/p&gt;
&lt;p&gt;Lua &lt;code&gt;nil&lt;/code&gt; arguments are accepted and result in literal &lt;code&gt;"nil"&lt;/code&gt; string while Lua booleans result in literal &lt;code&gt;"true"&lt;/code&gt; or &lt;code&gt;"false"&lt;/code&gt; string outputs. And the &lt;code&gt;ngx.null&lt;/code&gt; constant will yield the &lt;code&gt;"null"&lt;/code&gt; string output.&lt;/p&gt;
&lt;p&gt;The &lt;code&gt;log_level&lt;/code&gt; argument can take constants like &lt;code&gt;ngx.ERR&lt;/code&gt; and &lt;code&gt;ngx.WARN&lt;/code&gt;. Check out &lt;a href="#nginx-log-level-constants"&gt;Nginx log level constants&lt;/a&gt; for details.&lt;/p&gt;
&lt;p&gt;There is a hard coded &lt;code&gt;2048&lt;/code&gt; byte limitation on error message lengths in the Nginx core. This limit includes trailing newlines and leading time stamps. If the message size exceeds this limit, Nginx will truncate the message text accordingly. This limit can be manually modified by editing the &lt;code&gt;NGX_MAX_ERROR_STR&lt;/code&gt; macro definition in the &lt;code&gt;src/core/ngx_log.h&lt;/code&gt; file in the Nginx source tree.&lt;/p&gt;
&lt;p&gt;&lt;a href="#nginx-api-for-lua"&gt;Back to TOC&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-ngxflush" class="anchor" aria-hidden="true" href="#ngxflush"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;ngx.flush&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;syntax:&lt;/strong&gt; &lt;em&gt;ok, err = ngx.flush(wait?)&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;context:&lt;/strong&gt; &lt;em&gt;rewrite_by_lua*, access_by_lua*, content_by_lua*&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;Flushes response output to the client.&lt;/p&gt;
&lt;p&gt;&lt;code&gt;ngx.flush&lt;/code&gt; accepts an optional boolean &lt;code&gt;wait&lt;/code&gt; argument (Default: &lt;code&gt;false&lt;/code&gt;) first introduced in the &lt;code&gt;v0.3.1rc34&lt;/code&gt; release. When called with the default argument, it issues an asynchronous call (Returns immediately without waiting for output data to be written into the system send buffer). Calling the function with the &lt;code&gt;wait&lt;/code&gt; argument set to &lt;code&gt;true&lt;/code&gt; switches to synchronous mode.&lt;/p&gt;
&lt;p&gt;In synchronous mode, the function will not return until all output data has been written into the system send buffer or until the &lt;a href="http://nginx.org/en/docs/http/ngx_http_core_module.html#send_timeout" rel="nofollow"&gt;send_timeout&lt;/a&gt; setting has expired. Note that using the Lua coroutine mechanism means that this function does not block the Nginx event loop even in the synchronous mode.&lt;/p&gt;
&lt;p&gt;When &lt;code&gt;ngx.flush(true)&lt;/code&gt; is called immediately after &lt;a href="#ngxprint"&gt;ngx.print&lt;/a&gt; or &lt;a href="#ngxsay"&gt;ngx.say&lt;/a&gt;, it causes the latter functions to run in synchronous mode. This can be particularly useful for streaming output.&lt;/p&gt;
&lt;p&gt;Note that &lt;code&gt;ngx.flush&lt;/code&gt; is not functional when in the HTTP 1.0 output buffering mode. See &lt;a href="#http-10-support"&gt;HTTP 1.0 support&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Since &lt;code&gt;v0.8.3&lt;/code&gt; this function returns &lt;code&gt;1&lt;/code&gt; on success, or returns &lt;code&gt;nil&lt;/code&gt; and a string describing the error otherwise.&lt;/p&gt;
&lt;p&gt;&lt;a href="#nginx-api-for-lua"&gt;Back to TOC&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-ngxexit" class="anchor" aria-hidden="true" href="#ngxexit"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;ngx.exit&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;syntax:&lt;/strong&gt; &lt;em&gt;ngx.exit(status)&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;context:&lt;/strong&gt; &lt;em&gt;rewrite_by_lua*, access_by_lua*, content_by_lua*, header_filter_by_lua*, ngx.timer.*, balancer_by_lua*, ssl_certificate_by_lua*, ssl_session_fetch_by_lua*, ssl_session_store_by_lua*&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;When &lt;code&gt;status &amp;gt;= 200&lt;/code&gt; (i.e., &lt;code&gt;ngx.HTTP_OK&lt;/code&gt; and above), it will interrupt the execution of the current request and return status code to Nginx.&lt;/p&gt;
&lt;p&gt;When &lt;code&gt;status == 0&lt;/code&gt; (i.e., &lt;code&gt;ngx.OK&lt;/code&gt;), it will only quit the current phase handler (or the content handler if the &lt;a href="#content_by_lua"&gt;content_by_lua*&lt;/a&gt; directive is used) and continue to run later phases (if any) for the current request.&lt;/p&gt;
&lt;p&gt;The &lt;code&gt;status&lt;/code&gt; argument can be &lt;code&gt;ngx.OK&lt;/code&gt;, &lt;code&gt;ngx.ERROR&lt;/code&gt;, &lt;code&gt;ngx.HTTP_NOT_FOUND&lt;/code&gt;,
&lt;code&gt;ngx.HTTP_MOVED_TEMPORARILY&lt;/code&gt;, or other &lt;a href="#http-status-constants"&gt;HTTP status constants&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;To return an error page with custom contents, use code snippets like this:&lt;/p&gt;
&lt;div class="highlight highlight-source-lua"&gt;&lt;pre&gt; ngx.&lt;span class="pl-smi"&gt;status&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; ngx.&lt;span class="pl-smi"&gt;HTTP_GONE&lt;/span&gt;
 ngx.&lt;span class="pl-c1"&gt;say&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;This is our own content&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
 &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;--&lt;/span&gt; to cause quit the whole request rather than the current phase handler&lt;/span&gt;
 ngx.&lt;span class="pl-c1"&gt;exit&lt;/span&gt;(ngx.&lt;span class="pl-smi"&gt;HTTP_OK&lt;/span&gt;)&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;The effect in action:&lt;/p&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt; $ curl -i http://localhost/test
 HTTP/1.1 410 Gone
 Server: nginx/1.0.6
 Date: Thu, 15 Sep 2011 00:51:48 GMT
 Content-Type: text/plain
 Transfer-Encoding: chunked
 Connection: keep-alive

 This is our own content&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Number literals can be used directly as the argument, for instance,&lt;/p&gt;
&lt;div class="highlight highlight-source-lua"&gt;&lt;pre&gt; ngx.&lt;span class="pl-c1"&gt;exit&lt;/span&gt;(&lt;span class="pl-c1"&gt;501&lt;/span&gt;)&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Note that while this method accepts all &lt;a href="#http-status-constants"&gt;HTTP status constants&lt;/a&gt; as input, it only accepts &lt;code&gt;ngx.OK&lt;/code&gt; and &lt;code&gt;ngx.ERROR&lt;/code&gt; of the &lt;a href="#core-constants"&gt;core constants&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Also note that this method call terminates the processing of the current request and that it is recommended that a coding style that combines this method call with the &lt;code&gt;return&lt;/code&gt; statement, i.e., &lt;code&gt;return ngx.exit(...)&lt;/code&gt; be used to reinforce the fact that the request processing is being terminated.&lt;/p&gt;
&lt;p&gt;When being used in the contexts of &lt;a href="#header_filter_by_lua"&gt;header_filter_by_lua*&lt;/a&gt;, &lt;a href="#balancer_by_lua_block"&gt;balancer_by_lua*&lt;/a&gt;, and
&lt;a href="#ssl_session_store_by_lua_block"&gt;ssl_session_store_by_lua*&lt;/a&gt;, &lt;code&gt;ngx.exit()&lt;/code&gt; is
an asynchronous operation and will return immediately. This behavior may change in future and it is recommended that users always use &lt;code&gt;return&lt;/code&gt; in combination as suggested above.&lt;/p&gt;
&lt;p&gt;&lt;a href="#nginx-api-for-lua"&gt;Back to TOC&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-ngxeof" class="anchor" aria-hidden="true" href="#ngxeof"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;ngx.eof&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;syntax:&lt;/strong&gt; &lt;em&gt;ok, err = ngx.eof()&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;context:&lt;/strong&gt; &lt;em&gt;rewrite_by_lua*, access_by_lua*, content_by_lua*&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;Explicitly specify the end of the response output stream. In the case of HTTP 1.1 chunked encoded output, it will just trigger the Nginx core to send out the "last chunk".&lt;/p&gt;
&lt;p&gt;When you disable the HTTP 1.1 keep-alive feature for your downstream connections, you can rely on well written HTTP clients to close the connection actively for you when you call this method. This trick can be used do back-ground jobs without letting the HTTP clients to wait on the connection, as in the following example:&lt;/p&gt;
&lt;div class="highlight highlight-source-nginx"&gt;&lt;pre&gt; &lt;span class="pl-k"&gt;location&lt;/span&gt; &lt;span class="pl-en"&gt;= /async &lt;/span&gt;{
     &lt;span class="pl-k"&gt;keepalive_timeout&lt;/span&gt; &lt;span class="pl-s"&gt;0&lt;/span&gt;;
     &lt;span class="pl-k"&gt;content_by_lua_block&lt;/span&gt; {
         ngx.say("&lt;span class="pl-k"&gt;got&lt;/span&gt; the task!&lt;span class="pl-s"&gt;")&lt;/span&gt;
&lt;span class="pl-s"&gt;         ngx.eof()  -- well written HTTP clients will close the connection at this point&lt;/span&gt;
&lt;span class="pl-s"&gt;         -- access MySQL, PostgreSQL, Redis, Memcached, and etc here...&lt;/span&gt;
&lt;span class="pl-s"&gt;     }&lt;/span&gt;
&lt;span class="pl-s"&gt; }&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;But if you create subrequests to access other locations configured by Nginx upstream modules, then you should configure those upstream modules to ignore client connection abortions if they are not by default. For example, by default the standard &lt;a href="http://nginx.org/en/docs/http/ngx_http_proxy_module.html" rel="nofollow"&gt;ngx_http_proxy_module&lt;/a&gt; will terminate both the subrequest and the main request as soon as the client closes the connection, so it is important to turn on the &lt;a href="http://nginx.org/en/docs/http/ngx_http_proxy_module.html#proxy_ignore_client_abort" rel="nofollow"&gt;proxy_ignore_client_abort&lt;/a&gt; directive in your location block configured by &lt;a href="http://nginx.org/en/docs/http/ngx_http_proxy_module.html" rel="nofollow"&gt;ngx_http_proxy_module&lt;/a&gt;:&lt;/p&gt;
&lt;div class="highlight highlight-source-nginx"&gt;&lt;pre&gt; &lt;span class="pl-k"&gt;proxy_ignore_client_abort&lt;/span&gt;&lt;span class="pl-c1"&gt; on&lt;/span&gt;;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;A better way to do background jobs is to use the &lt;a href="#ngxtimerat"&gt;ngx.timer.at&lt;/a&gt; API.&lt;/p&gt;
&lt;p&gt;Since &lt;code&gt;v0.8.3&lt;/code&gt; this function returns &lt;code&gt;1&lt;/code&gt; on success, or returns &lt;code&gt;nil&lt;/code&gt; and a string describing the error otherwise.&lt;/p&gt;
&lt;p&gt;&lt;a href="#nginx-api-for-lua"&gt;Back to TOC&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-ngxsleep" class="anchor" aria-hidden="true" href="#ngxsleep"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;ngx.sleep&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;syntax:&lt;/strong&gt; &lt;em&gt;ngx.sleep(seconds)&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;context:&lt;/strong&gt; &lt;em&gt;rewrite_by_lua*, access_by_lua*, content_by_lua*, ngx.timer.*, ssl_certificate_by_lua*, ssl_session_fetch_by_lua*&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;Sleeps for the specified seconds without blocking. One can specify time resolution up to 0.001 seconds (i.e., one milliseconds).&lt;/p&gt;
&lt;p&gt;Behind the scene, this method makes use of the Nginx timers.&lt;/p&gt;
&lt;p&gt;Since the &lt;code&gt;0.7.20&lt;/code&gt; release, The &lt;code&gt;0&lt;/code&gt; time argument can also be specified.&lt;/p&gt;
&lt;p&gt;This method was introduced in the &lt;code&gt;0.5.0rc30&lt;/code&gt; release.&lt;/p&gt;
&lt;p&gt;&lt;a href="#nginx-api-for-lua"&gt;Back to TOC&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-ngxescape_uri" class="anchor" aria-hidden="true" href="#ngxescape_uri"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;ngx.escape_uri&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;syntax:&lt;/strong&gt; &lt;em&gt;newstr = ngx.escape_uri(str)&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;context:&lt;/strong&gt; &lt;em&gt;init_by_lua*, init_worker_by_lua*, set_by_lua*, rewrite_by_lua*, access_by_lua*, content_by_lua*, header_filter_by_lua*, body_filter_by_lua*, log_by_lua*, ngx.timer.*, balancer_by_lua*, ssl_certificate_by_lua*, ssl_session_fetch_by_lua*, ssl_session_store_by_lua*&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;Escape &lt;code&gt;str&lt;/code&gt; as a URI component.&lt;/p&gt;
&lt;p&gt;&lt;a href="#nginx-api-for-lua"&gt;Back to TOC&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-ngxunescape_uri" class="anchor" aria-hidden="true" href="#ngxunescape_uri"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;ngx.unescape_uri&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;syntax:&lt;/strong&gt; &lt;em&gt;newstr = ngx.unescape_uri(str)&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;context:&lt;/strong&gt; &lt;em&gt;init_by_lua*, init_worker_by_lua*, set_by_lua*, rewrite_by_lua*, access_by_lua*, content_by_lua*, header_filter_by_lua*, body_filter_by_lua*, log_by_lua*, ngx.timer.*, balancer_by_lua*, ssl_certificate_by_lua*&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;Unescape &lt;code&gt;str&lt;/code&gt; as an escaped URI component.&lt;/p&gt;
&lt;p&gt;For example,&lt;/p&gt;
&lt;div class="highlight highlight-source-lua"&gt;&lt;pre&gt; ngx.&lt;span class="pl-c1"&gt;say&lt;/span&gt;(ngx.&lt;span class="pl-c1"&gt;unescape_uri&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;b%20r56+7&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;))&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;gives the output&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;b r56 7
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;a href="#nginx-api-for-lua"&gt;Back to TOC&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-ngxencode_args" class="anchor" aria-hidden="true" href="#ngxencode_args"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;ngx.encode_args&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;syntax:&lt;/strong&gt; &lt;em&gt;str = ngx.encode_args(table)&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;context:&lt;/strong&gt; &lt;em&gt;set_by_lua*, rewrite_by_lua*, access_by_lua*, content_by_lua*, header_filter_by_lua*, body_filter_by_lua*, log_by_lua*, ngx.timer.*, balancer_by_lua*, ssl_certificate_by_lua*&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;Encode the Lua table to a query args string according to the URI encoded rules.&lt;/p&gt;
&lt;p&gt;For example,&lt;/p&gt;
&lt;div class="highlight highlight-source-lua"&gt;&lt;pre&gt; ngx.&lt;span class="pl-c1"&gt;encode_args&lt;/span&gt;({foo &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;3&lt;/span&gt;, [&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;b r&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;] &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;hello world&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;})&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;yields&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;foo=3&amp;amp;b%20r=hello%20world
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;The table keys must be Lua strings.&lt;/p&gt;
&lt;p&gt;Multi-value query args are also supported. Just use a Lua table for the argument's value, for example:&lt;/p&gt;
&lt;div class="highlight highlight-source-lua"&gt;&lt;pre&gt; ngx.&lt;span class="pl-c1"&gt;encode_args&lt;/span&gt;({baz &lt;span class="pl-k"&gt;=&lt;/span&gt; {&lt;span class="pl-c1"&gt;32&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;hello&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;}})&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;gives&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;baz=32&amp;amp;baz=hello
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;If the value table is empty and the effect is equivalent to the &lt;code&gt;nil&lt;/code&gt; value.&lt;/p&gt;
&lt;p&gt;Boolean argument values are also supported, for instance,&lt;/p&gt;
&lt;div class="highlight highlight-source-lua"&gt;&lt;pre&gt; ngx.&lt;span class="pl-c1"&gt;encode_args&lt;/span&gt;({a &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;true&lt;/span&gt;, b &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;1&lt;/span&gt;})&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;yields&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;a&amp;amp;b=1
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;If the argument value is &lt;code&gt;false&lt;/code&gt;, then the effect is equivalent to the &lt;code&gt;nil&lt;/code&gt; value.&lt;/p&gt;
&lt;p&gt;This method was first introduced in the &lt;code&gt;v0.3.1rc27&lt;/code&gt; release.&lt;/p&gt;
&lt;p&gt;&lt;a href="#nginx-api-for-lua"&gt;Back to TOC&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-ngxdecode_args" class="anchor" aria-hidden="true" href="#ngxdecode_args"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;ngx.decode_args&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;syntax:&lt;/strong&gt; &lt;em&gt;table, err = ngx.decode_args(str, max_args?)&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;context:&lt;/strong&gt; &lt;em&gt;set_by_lua*, rewrite_by_lua*, access_by_lua*, content_by_lua*, header_filter_by_lua*, body_filter_by_lua*, log_by_lua*, ngx.timer.*, balancer_by_lua*, ssl_certificate_by_lua*, ssl_session_fetch_by_lua*, ssl_session_store_by_lua*&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;Decodes a URI encoded query-string into a Lua table. This is the inverse function of &lt;a href="#ngxencode_args"&gt;ngx.encode_args&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;The optional &lt;code&gt;max_args&lt;/code&gt; argument can be used to specify the maximum number of arguments parsed from the &lt;code&gt;str&lt;/code&gt; argument. By default, a maximum of 100 request arguments are parsed (including those with the same name) and that additional URI arguments are silently discarded to guard against potential denial of service attacks. Since &lt;code&gt;v0.10.13&lt;/code&gt;, when the limit is exceeded, it will return a second value which is the string &lt;code&gt;"truncated"&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;This argument can be set to zero to remove the limit and to process all request arguments received:&lt;/p&gt;
&lt;div class="highlight highlight-source-lua"&gt;&lt;pre&gt; &lt;span class="pl-k"&gt;local&lt;/span&gt; args &lt;span class="pl-k"&gt;=&lt;/span&gt; ngx.&lt;span class="pl-c1"&gt;decode_args&lt;/span&gt;(str, &lt;span class="pl-c1"&gt;0&lt;/span&gt;)&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Removing the &lt;code&gt;max_args&lt;/code&gt; cap is strongly discouraged.&lt;/p&gt;
&lt;p&gt;This method was introduced in the &lt;code&gt;v0.5.0rc29&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;&lt;a href="#nginx-api-for-lua"&gt;Back to TOC&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-ngxencode_base64" class="anchor" aria-hidden="true" href="#ngxencode_base64"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;ngx.encode_base64&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;syntax:&lt;/strong&gt; &lt;em&gt;newstr = ngx.encode_base64(str, no_padding?)&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;context:&lt;/strong&gt; &lt;em&gt;set_by_lua*, rewrite_by_lua*, access_by_lua*, content_by_lua*, header_filter_by_lua*, body_filter_by_lua*, log_by_lua*, ngx.timer.*, balancer_by_lua*, ssl_certificate_by_lua*, ssl_session_fetch_by_lua*, ssl_session_store_by_lua*&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;Encodes &lt;code&gt;str&lt;/code&gt; to a base64 digest.&lt;/p&gt;
&lt;p&gt;Since the &lt;code&gt;0.9.16&lt;/code&gt; release, an optional boolean-typed &lt;code&gt;no_padding&lt;/code&gt; argument can be specified to control whether the base64 padding should be appended to the resulting digest (default to &lt;code&gt;false&lt;/code&gt;, i.e., with padding enabled).&lt;/p&gt;
&lt;p&gt;&lt;a href="#nginx-api-for-lua"&gt;Back to TOC&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-ngxdecode_base64" class="anchor" aria-hidden="true" href="#ngxdecode_base64"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;ngx.decode_base64&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;syntax:&lt;/strong&gt; &lt;em&gt;newstr = ngx.decode_base64(str)&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;context:&lt;/strong&gt; &lt;em&gt;set_by_lua*, rewrite_by_lua*, access_by_lua*, content_by_lua*, header_filter_by_lua*, body_filter_by_lua*, log_by_lua*, ngx.timer.*, balancer_by_lua*, ssl_certificate_by_lua*, ssl_session_fetch_by_lua*, ssl_session_store_by_lua*&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;Decodes the &lt;code&gt;str&lt;/code&gt; argument as a base64 digest to the raw form. Returns &lt;code&gt;nil&lt;/code&gt; if &lt;code&gt;str&lt;/code&gt; is not well formed.&lt;/p&gt;
&lt;p&gt;&lt;a href="#nginx-api-for-lua"&gt;Back to TOC&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-ngxcrc32_short" class="anchor" aria-hidden="true" href="#ngxcrc32_short"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;ngx.crc32_short&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;syntax:&lt;/strong&gt; &lt;em&gt;intval = ngx.crc32_short(str)&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;context:&lt;/strong&gt; &lt;em&gt;set_by_lua*, rewrite_by_lua*, access_by_lua*, content_by_lua*, header_filter_by_lua*, body_filter_by_lua*, log_by_lua*, ngx.timer.*, balancer_by_lua*, ssl_certificate_by_lua*, ssl_session_fetch_by_lua*, ssl_session_store_by_lua*&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;Calculates the CRC-32 (Cyclic Redundancy Code) digest for the &lt;code&gt;str&lt;/code&gt; argument.&lt;/p&gt;
&lt;p&gt;This method performs better on relatively short &lt;code&gt;str&lt;/code&gt; inputs (i.e., less than 30 ~ 60 bytes), as compared to &lt;a href="#ngxcrc32_long"&gt;ngx.crc32_long&lt;/a&gt;. The result is exactly the same as &lt;a href="#ngxcrc32_long"&gt;ngx.crc32_long&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Behind the scene, it is just a thin wrapper around the &lt;code&gt;ngx_crc32_short&lt;/code&gt; function defined in the Nginx core.&lt;/p&gt;
&lt;p&gt;This API was first introduced in the &lt;code&gt;v0.3.1rc8&lt;/code&gt; release.&lt;/p&gt;
&lt;p&gt;&lt;a href="#nginx-api-for-lua"&gt;Back to TOC&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-ngxcrc32_long" class="anchor" aria-hidden="true" href="#ngxcrc32_long"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;ngx.crc32_long&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;syntax:&lt;/strong&gt; &lt;em&gt;intval = ngx.crc32_long(str)&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;context:&lt;/strong&gt; &lt;em&gt;set_by_lua*, rewrite_by_lua*, access_by_lua*, content_by_lua*, header_filter_by_lua*, body_filter_by_lua*, log_by_lua*, ngx.timer.*, balancer_by_lua*, ssl_certificate_by_lua*, ssl_session_fetch_by_lua*, ssl_session_store_by_lua*&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;Calculates the CRC-32 (Cyclic Redundancy Code) digest for the &lt;code&gt;str&lt;/code&gt; argument.&lt;/p&gt;
&lt;p&gt;This method performs better on relatively long &lt;code&gt;str&lt;/code&gt; inputs (i.e., longer than 30 ~ 60 bytes), as compared to &lt;a href="#ngxcrc32_short"&gt;ngx.crc32_short&lt;/a&gt;.  The result is exactly the same as &lt;a href="#ngxcrc32_short"&gt;ngx.crc32_short&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Behind the scene, it is just a thin wrapper around the &lt;code&gt;ngx_crc32_long&lt;/code&gt; function defined in the Nginx core.&lt;/p&gt;
&lt;p&gt;This API was first introduced in the &lt;code&gt;v0.3.1rc8&lt;/code&gt; release.&lt;/p&gt;
&lt;p&gt;&lt;a href="#nginx-api-for-lua"&gt;Back to TOC&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-ngxhmac_sha1" class="anchor" aria-hidden="true" href="#ngxhmac_sha1"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;ngx.hmac_sha1&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;syntax:&lt;/strong&gt; &lt;em&gt;digest = ngx.hmac_sha1(secret_key, str)&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;context:&lt;/strong&gt; &lt;em&gt;set_by_lua*, rewrite_by_lua*, access_by_lua*, content_by_lua*, header_filter_by_lua*, body_filter_by_lua*, log_by_lua*, ngx.timer.*, balancer_by_lua*, ssl_certificate_by_lua*, ssl_session_fetch_by_lua*, ssl_session_store_by_lua*&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;Computes the &lt;a href="https://en.wikipedia.org/wiki/HMAC" rel="nofollow"&gt;HMAC-SHA1&lt;/a&gt; digest of the argument &lt;code&gt;str&lt;/code&gt; and turns the result using the secret key &lt;code&gt;&amp;lt;secret_key&amp;gt;&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;The raw binary form of the &lt;code&gt;HMAC-SHA1&lt;/code&gt; digest will be generated, use &lt;a href="#ngxencode_base64"&gt;ngx.encode_base64&lt;/a&gt;, for example, to encode the result to a textual representation if desired.&lt;/p&gt;
&lt;p&gt;For example,&lt;/p&gt;
&lt;div class="highlight highlight-source-lua"&gt;&lt;pre&gt; &lt;span class="pl-k"&gt;local&lt;/span&gt; key &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;thisisverysecretstuff&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;
 &lt;span class="pl-k"&gt;local&lt;/span&gt; src &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;some string we want to sign&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;
 &lt;span class="pl-k"&gt;local&lt;/span&gt; digest &lt;span class="pl-k"&gt;=&lt;/span&gt; ngx.&lt;span class="pl-c1"&gt;hmac_sha1&lt;/span&gt;(key, src)
 ngx.&lt;span class="pl-c1"&gt;say&lt;/span&gt;(ngx.&lt;span class="pl-c1"&gt;encode_base64&lt;/span&gt;(digest))&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;yields the output&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;R/pvxzHC4NLtj7S+kXFg/NePTmk=
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;This API requires the OpenSSL library enabled in the Nginx build (usually by passing the &lt;code&gt;--with-http_ssl_module&lt;/code&gt; option to the &lt;code&gt;./configure&lt;/code&gt; script).&lt;/p&gt;
&lt;p&gt;This function was first introduced in the &lt;code&gt;v0.3.1rc29&lt;/code&gt; release.&lt;/p&gt;
&lt;p&gt;&lt;a href="#nginx-api-for-lua"&gt;Back to TOC&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-ngxmd5" class="anchor" aria-hidden="true" href="#ngxmd5"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;ngx.md5&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;syntax:&lt;/strong&gt; &lt;em&gt;digest = ngx.md5(str)&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;context:&lt;/strong&gt; &lt;em&gt;set_by_lua*, rewrite_by_lua*, access_by_lua*, content_by_lua*, header_filter_by_lua*, body_filter_by_lua*, log_by_lua*, ngx.timer.*, balancer_by_lua*, ssl_certificate_by_lua*, ssl_session_fetch_by_lua*, ssl_session_store_by_lua*&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;Returns the hexadecimal representation of the MD5 digest of the &lt;code&gt;str&lt;/code&gt; argument.&lt;/p&gt;
&lt;p&gt;For example,&lt;/p&gt;
&lt;div class="highlight highlight-source-nginx"&gt;&lt;pre&gt; &lt;span class="pl-k"&gt;location&lt;/span&gt; &lt;span class="pl-en"&gt;= /md5 &lt;/span&gt;{
     &lt;span class="pl-k"&gt;content_by_lua_block&lt;/span&gt; { ngx.say(ngx.md5(&lt;span class="pl-s"&gt;"hello"&lt;/span&gt;)) }
 }&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;yields the output&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;5d41402abc4b2a76b9719d911017c592
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;See &lt;a href="#ngxmd5_bin"&gt;ngx.md5_bin&lt;/a&gt; if the raw binary MD5 digest is required.&lt;/p&gt;
&lt;p&gt;&lt;a href="#nginx-api-for-lua"&gt;Back to TOC&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-ngxmd5_bin" class="anchor" aria-hidden="true" href="#ngxmd5_bin"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;ngx.md5_bin&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;syntax:&lt;/strong&gt; &lt;em&gt;digest = ngx.md5_bin(str)&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;context:&lt;/strong&gt; &lt;em&gt;set_by_lua*, rewrite_by_lua*, access_by_lua*, content_by_lua*, header_filter_by_lua*, body_filter_by_lua*, log_by_lua*, ngx.timer.*, balancer_by_lua*, ssl_certificate_by_lua*, ssl_session_fetch_by_lua*, ssl_session_store_by_lua*&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;Returns the binary form of the MD5 digest of the &lt;code&gt;str&lt;/code&gt; argument.&lt;/p&gt;
&lt;p&gt;See &lt;a href="#ngxmd5"&gt;ngx.md5&lt;/a&gt; if the hexadecimal form of the MD5 digest is required.&lt;/p&gt;
&lt;p&gt;&lt;a href="#nginx-api-for-lua"&gt;Back to TOC&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-ngxsha1_bin" class="anchor" aria-hidden="true" href="#ngxsha1_bin"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;ngx.sha1_bin&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;syntax:&lt;/strong&gt; &lt;em&gt;digest = ngx.sha1_bin(str)&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;context:&lt;/strong&gt; &lt;em&gt;set_by_lua*, rewrite_by_lua*, access_by_lua*, content_by_lua*, header_filter_by_lua*, body_filter_by_lua*, log_by_lua*, ngx.timer.*, balancer_by_lua*, ssl_certificate_by_lua*, ssl_session_fetch_by_lua*, ssl_session_store_by_lua*&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;Returns the binary form of the SHA-1 digest of the &lt;code&gt;str&lt;/code&gt; argument.&lt;/p&gt;
&lt;p&gt;This function requires SHA-1 support in the Nginx build. (This usually just means OpenSSL should be installed while building Nginx).&lt;/p&gt;
&lt;p&gt;This function was first introduced in the &lt;code&gt;v0.5.0rc6&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;&lt;a href="#nginx-api-for-lua"&gt;Back to TOC&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-ngxquote_sql_str" class="anchor" aria-hidden="true" href="#ngxquote_sql_str"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;ngx.quote_sql_str&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;syntax:&lt;/strong&gt; &lt;em&gt;quoted_value = ngx.quote_sql_str(raw_value)&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;context:&lt;/strong&gt; &lt;em&gt;set_by_lua*, rewrite_by_lua*, access_by_lua*, content_by_lua*, header_filter_by_lua*, body_filter_by_lua*, log_by_lua*, ngx.timer.*, balancer_by_lua*, ssl_certificate_by_lua*, ssl_session_fetch_by_lua*, ssl_session_store_by_lua*&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;Returns a quoted SQL string literal according to the MySQL quoting rules.&lt;/p&gt;
&lt;p&gt;&lt;a href="#nginx-api-for-lua"&gt;Back to TOC&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-ngxtoday" class="anchor" aria-hidden="true" href="#ngxtoday"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;ngx.today&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;syntax:&lt;/strong&gt; &lt;em&gt;str = ngx.today()&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;context:&lt;/strong&gt; &lt;em&gt;init_worker_by_lua*, set_by_lua*, rewrite_by_lua*, access_by_lua*, content_by_lua*, header_filter_by_lua*, body_filter_by_lua*, log_by_lua*, ngx.timer.*, balancer_by_lua*, ssl_certificate_by_lua*, ssl_session_fetch_by_lua*, ssl_session_store_by_lua*&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;Returns current date (in the format &lt;code&gt;yyyy-mm-dd&lt;/code&gt;) from the Nginx cached time (no syscall involved unlike Lua's date library).&lt;/p&gt;
&lt;p&gt;This is the local time.&lt;/p&gt;
&lt;p&gt;&lt;a href="#nginx-api-for-lua"&gt;Back to TOC&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-ngxtime" class="anchor" aria-hidden="true" href="#ngxtime"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;ngx.time&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;syntax:&lt;/strong&gt; &lt;em&gt;secs = ngx.time()&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;context:&lt;/strong&gt; &lt;em&gt;init_worker_by_lua*, set_by_lua*, rewrite_by_lua*, access_by_lua*, content_by_lua*, header_filter_by_lua*, body_filter_by_lua*, log_by_lua*, ngx.timer.*, balancer_by_lua*, ssl_certificate_by_lua*, ssl_session_fetch_by_lua*, ssl_session_store_by_lua*&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;Returns the elapsed seconds from the epoch for the current time stamp from the Nginx cached time (no syscall involved unlike Lua's date library).&lt;/p&gt;
&lt;p&gt;Updates of the Nginx time cache can be forced by calling &lt;a href="#ngxupdate_time"&gt;ngx.update_time&lt;/a&gt; first.&lt;/p&gt;
&lt;p&gt;&lt;a href="#nginx-api-for-lua"&gt;Back to TOC&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-ngxnow" class="anchor" aria-hidden="true" href="#ngxnow"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;ngx.now&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;syntax:&lt;/strong&gt; &lt;em&gt;secs = ngx.now()&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;context:&lt;/strong&gt; &lt;em&gt;init_worker_by_lua*, set_by_lua*, rewrite_by_lua*, access_by_lua*, content_by_lua*, header_filter_by_lua*, body_filter_by_lua*, log_by_lua*, ngx.timer.*, balancer_by_lua*, ssl_certificate_by_lua*, ssl_session_fetch_by_lua*, ssl_session_store_by_lua*&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;Returns a floating-point number for the elapsed time in seconds (including milliseconds as the decimal part) from the epoch for the current time stamp from the Nginx cached time (no syscall involved unlike Lua's date library).&lt;/p&gt;
&lt;p&gt;You can forcibly update the Nginx time cache by calling &lt;a href="#ngxupdate_time"&gt;ngx.update_time&lt;/a&gt; first.&lt;/p&gt;
&lt;p&gt;This API was first introduced in &lt;code&gt;v0.3.1rc32&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;&lt;a href="#nginx-api-for-lua"&gt;Back to TOC&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-ngxupdate_time" class="anchor" aria-hidden="true" href="#ngxupdate_time"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;ngx.update_time&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;syntax:&lt;/strong&gt; &lt;em&gt;ngx.update_time()&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;context:&lt;/strong&gt; &lt;em&gt;init_worker_by_lua*, set_by_lua*, rewrite_by_lua*, access_by_lua*, content_by_lua*, header_filter_by_lua*, body_filter_by_lua*, log_by_lua*, ngx.timer.*, balancer_by_lua*, ssl_certificate_by_lua*, ssl_session_fetch_by_lua*, ssl_session_store_by_lua*&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;Forcibly updates the Nginx current time cache. This call involves a syscall and thus has some overhead, so do not abuse it.&lt;/p&gt;
&lt;p&gt;This API was first introduced in &lt;code&gt;v0.3.1rc32&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;&lt;a href="#nginx-api-for-lua"&gt;Back to TOC&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-ngxlocaltime" class="anchor" aria-hidden="true" href="#ngxlocaltime"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;ngx.localtime&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;syntax:&lt;/strong&gt; &lt;em&gt;str = ngx.localtime()&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;context:&lt;/strong&gt; &lt;em&gt;init_worker_by_lua*, set_by_lua*, rewrite_by_lua*, access_by_lua*, content_by_lua*, header_filter_by_lua*, body_filter_by_lua*, log_by_lua*, ngx.timer.*, balancer_by_lua*, ssl_certificate_by_lua*, ssl_session_fetch_by_lua*, ssl_session_store_by_lua*&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;Returns the current time stamp (in the format &lt;code&gt;yyyy-mm-dd hh:mm:ss&lt;/code&gt;) of the Nginx cached time (no syscall involved unlike Lua's &lt;a href="https://www.lua.org/manual/5.1/manual.html#pdf-os.date" rel="nofollow"&gt;os.date&lt;/a&gt; function).&lt;/p&gt;
&lt;p&gt;This is the local time.&lt;/p&gt;
&lt;p&gt;&lt;a href="#nginx-api-for-lua"&gt;Back to TOC&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-ngxutctime" class="anchor" aria-hidden="true" href="#ngxutctime"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;ngx.utctime&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;syntax:&lt;/strong&gt; &lt;em&gt;str = ngx.utctime()&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;context:&lt;/strong&gt; &lt;em&gt;init_worker_by_lua*, set_by_lua*, rewrite_by_lua*, access_by_lua*, content_by_lua*, header_filter_by_lua*, body_filter_by_lua*, log_by_lua*, ngx.timer.*, balancer_by_lua*, ssl_certificate_by_lua*, ssl_session_fetch_by_lua*, ssl_session_store_by_lua*&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;Returns the current time stamp (in the format &lt;code&gt;yyyy-mm-dd hh:mm:ss&lt;/code&gt;) of the Nginx cached time (no syscall involved unlike Lua's &lt;a href="https://www.lua.org/manual/5.1/manual.html#pdf-os.date" rel="nofollow"&gt;os.date&lt;/a&gt; function).&lt;/p&gt;
&lt;p&gt;This is the UTC time.&lt;/p&gt;
&lt;p&gt;&lt;a href="#nginx-api-for-lua"&gt;Back to TOC&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-ngxcookie_time" class="anchor" aria-hidden="true" href="#ngxcookie_time"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;ngx.cookie_time&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;syntax:&lt;/strong&gt; &lt;em&gt;str = ngx.cookie_time(sec)&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;context:&lt;/strong&gt; &lt;em&gt;init_worker_by_lua*, set_by_lua*, rewrite_by_lua*, access_by_lua*, content_by_lua*, header_filter_by_lua*, body_filter_by_lua*, log_by_lua*, ngx.timer.*, balancer_by_lua*, ssl_certificate_by_lua*, ssl_session_fetch_by_lua*, ssl_session_store_by_lua*&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;Returns a formatted string can be used as the cookie expiration time. The parameter &lt;code&gt;sec&lt;/code&gt; is the time stamp in seconds (like those returned from &lt;a href="#ngxtime"&gt;ngx.time&lt;/a&gt;).&lt;/p&gt;
&lt;div class="highlight highlight-source-nginx"&gt;&lt;pre&gt; ngx.say(ngx.cookie_time(1290079655))
     -- &lt;span class="pl-k"&gt;yields&lt;/span&gt; &lt;span class="pl-s"&gt;"Thu, 18-Nov-10 11:27:35 GMT"&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;a href="#nginx-api-for-lua"&gt;Back to TOC&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-ngxhttp_time" class="anchor" aria-hidden="true" href="#ngxhttp_time"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;ngx.http_time&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;syntax:&lt;/strong&gt; &lt;em&gt;str = ngx.http_time(sec)&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;context:&lt;/strong&gt; &lt;em&gt;init_worker_by_lua*, set_by_lua*, rewrite_by_lua*, access_by_lua*, content_by_lua*, header_filter_by_lua*, body_filter_by_lua*, log_by_lua*, ngx.timer.*, balancer_by_lua*, ssl_certificate_by_lua*, ssl_session_fetch_by_lua*, ssl_session_store_by_lua*&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;Returns a formated string can be used as the http header time (for example, being used in &lt;code&gt;Last-Modified&lt;/code&gt; header). The parameter &lt;code&gt;sec&lt;/code&gt; is the time stamp in seconds (like those returned from &lt;a href="#ngxtime"&gt;ngx.time&lt;/a&gt;).&lt;/p&gt;
&lt;div class="highlight highlight-source-nginx"&gt;&lt;pre&gt; ngx.say(ngx.http_time(1290079655))
     -- &lt;span class="pl-k"&gt;yields&lt;/span&gt; &lt;span class="pl-s"&gt;"Thu, 18 Nov 2010 11:27:35 GMT"&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;a href="#nginx-api-for-lua"&gt;Back to TOC&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-ngxparse_http_time" class="anchor" aria-hidden="true" href="#ngxparse_http_time"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;ngx.parse_http_time&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;syntax:&lt;/strong&gt; &lt;em&gt;sec = ngx.parse_http_time(str)&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;context:&lt;/strong&gt; &lt;em&gt;init_worker_by_lua*, set_by_lua*, rewrite_by_lua*, access_by_lua*, content_by_lua*, header_filter_by_lua*, body_filter_by_lua*, log_by_lua*, ngx.timer.*, balancer_by_lua*, ssl_certificate_by_lua*, ssl_session_fetch_by_lua*, ssl_session_store_by_lua*&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;Parse the http time string (as returned by &lt;a href="#ngxhttp_time"&gt;ngx.http_time&lt;/a&gt;) into seconds. Returns the seconds or &lt;code&gt;nil&lt;/code&gt; if the input string is in bad forms.&lt;/p&gt;
&lt;div class="highlight highlight-source-nginx"&gt;&lt;pre&gt; &lt;span class="pl-k"&gt;local&lt;/span&gt; time = ngx.parse_http_time(&lt;span class="pl-s"&gt;"Thu, 18 Nov 2010 11:27:35 GMT"&lt;/span&gt;)
 &lt;span class="pl-k"&gt;if&lt;/span&gt; time == nil then
     ...
 &lt;span class="pl-k"&gt;end&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;a href="#nginx-api-for-lua"&gt;Back to TOC&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-ngxis_subrequest" class="anchor" aria-hidden="true" href="#ngxis_subrequest"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;ngx.is_subrequest&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;syntax:&lt;/strong&gt; &lt;em&gt;value = ngx.is_subrequest&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;context:&lt;/strong&gt; &lt;em&gt;set_by_lua*, rewrite_by_lua*, access_by_lua*, content_by_lua*, header_filter_by_lua*, body_filter_by_lua*, log_by_lua*&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;Returns &lt;code&gt;true&lt;/code&gt; if the current request is an Nginx subrequest, or &lt;code&gt;false&lt;/code&gt; otherwise.&lt;/p&gt;
&lt;p&gt;&lt;a href="#nginx-api-for-lua"&gt;Back to TOC&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-ngxrematch" class="anchor" aria-hidden="true" href="#ngxrematch"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;ngx.re.match&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;syntax:&lt;/strong&gt; &lt;em&gt;captures, err = ngx.re.match(subject, regex, options?, ctx?, res_table?)&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;context:&lt;/strong&gt; &lt;em&gt;init_worker_by_lua*, set_by_lua*, rewrite_by_lua*, access_by_lua*, content_by_lua*, header_filter_by_lua*, body_filter_by_lua*, log_by_lua*, ngx.timer.*, balancer_by_lua*, ssl_certificate_by_lua*, ssl_session_fetch_by_lua*, ssl_session_store_by_lua*&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;Matches the &lt;code&gt;subject&lt;/code&gt; string using the Perl compatible regular expression &lt;code&gt;regex&lt;/code&gt; with the optional &lt;code&gt;options&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;Only the first occurrence of the match is returned, or &lt;code&gt;nil&lt;/code&gt; if no match is found. In case of errors, like seeing a bad regular expression or exceeding the PCRE stack limit, &lt;code&gt;nil&lt;/code&gt; and a string describing the error will be returned.&lt;/p&gt;
&lt;p&gt;When a match is found, a Lua table &lt;code&gt;captures&lt;/code&gt; is returned, where &lt;code&gt;captures[0]&lt;/code&gt; holds the whole substring being matched, and &lt;code&gt;captures[1]&lt;/code&gt; holds the first parenthesized sub-pattern's capturing, &lt;code&gt;captures[2]&lt;/code&gt; the second, and so on.&lt;/p&gt;
&lt;div class="highlight highlight-source-lua"&gt;&lt;pre&gt; &lt;span class="pl-k"&gt;local&lt;/span&gt; m, err &lt;span class="pl-k"&gt;=&lt;/span&gt; ngx.&lt;span class="pl-smi"&gt;re&lt;/span&gt;.&lt;span class="pl-c1"&gt;match&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;hello, 1234&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;[0-9]+&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
 &lt;span class="pl-k"&gt;if&lt;/span&gt; m &lt;span class="pl-k"&gt;then&lt;/span&gt;
     &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;--&lt;/span&gt; m[0] == "1234"&lt;/span&gt;

 &lt;span class="pl-k"&gt;else&lt;/span&gt;
     &lt;span class="pl-k"&gt;if&lt;/span&gt; err &lt;span class="pl-k"&gt;then&lt;/span&gt;
         ngx.&lt;span class="pl-c1"&gt;log&lt;/span&gt;(ngx.&lt;span class="pl-smi"&gt;ERR&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;error: &lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, err)
         &lt;span class="pl-k"&gt;return&lt;/span&gt;
     &lt;span class="pl-k"&gt;end&lt;/span&gt;

     ngx.&lt;span class="pl-c1"&gt;say&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;match not found&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
 &lt;span class="pl-k"&gt;end&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;div class="highlight highlight-source-lua"&gt;&lt;pre&gt; &lt;span class="pl-k"&gt;local&lt;/span&gt; m, err &lt;span class="pl-k"&gt;=&lt;/span&gt; ngx.&lt;span class="pl-smi"&gt;re&lt;/span&gt;.&lt;span class="pl-c1"&gt;match&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;hello, 1234&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;([0-9])[0-9]+&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
 &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;--&lt;/span&gt; m[0] == "1234"&lt;/span&gt;
 &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;--&lt;/span&gt; m[1] == "1"&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Named captures are also supported since the &lt;code&gt;v0.7.14&lt;/code&gt; release
and are returned in the same Lua table as key-value pairs as the numbered captures.&lt;/p&gt;
&lt;div class="highlight highlight-source-lua"&gt;&lt;pre&gt; &lt;span class="pl-k"&gt;local&lt;/span&gt; m, err &lt;span class="pl-k"&gt;=&lt;/span&gt; ngx.&lt;span class="pl-smi"&gt;re&lt;/span&gt;.&lt;span class="pl-c1"&gt;match&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;hello, 1234&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;([0-9])(?&amp;lt;remaining&amp;gt;[0-9]+)&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
 &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;--&lt;/span&gt; m[0] == "1234"&lt;/span&gt;
 &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;--&lt;/span&gt; m[1] == "1"&lt;/span&gt;
 &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;--&lt;/span&gt; m[2] == "234"&lt;/span&gt;
 &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;--&lt;/span&gt; m["remaining"] == "234"&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Unmatched subpatterns will have &lt;code&gt;false&lt;/code&gt; values in their &lt;code&gt;captures&lt;/code&gt; table fields.&lt;/p&gt;
&lt;div class="highlight highlight-source-lua"&gt;&lt;pre&gt; &lt;span class="pl-k"&gt;local&lt;/span&gt; m, err &lt;span class="pl-k"&gt;=&lt;/span&gt; ngx.&lt;span class="pl-smi"&gt;re&lt;/span&gt;.&lt;span class="pl-c1"&gt;match&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;hello, world&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;(world)|(hello)|(?&amp;lt;named&amp;gt;howdy)&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
 &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;--&lt;/span&gt; m[0] == "hello"&lt;/span&gt;
 &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;--&lt;/span&gt; m[1] == false&lt;/span&gt;
 &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;--&lt;/span&gt; m[2] == "hello"&lt;/span&gt;
 &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;--&lt;/span&gt; m[3] == false&lt;/span&gt;
 &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;--&lt;/span&gt; m["named"] == false&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Specify &lt;code&gt;options&lt;/code&gt; to control how the match operation will be performed. The following option characters are supported:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;a             anchored mode (only match from the beginning)

d             enable the DFA mode (or the longest token match semantics).
              this requires PCRE 6.0+ or else a Lua exception will be thrown.
              first introduced in ngx_lua v0.3.1rc30.

D             enable duplicate named pattern support. This allows named
              subpattern names to be repeated, returning the captures in
              an array-like Lua table. for example,
                local m = ngx.re.match("hello, world",
                                       "(?&amp;lt;named&amp;gt;\w+), (?&amp;lt;named&amp;gt;\w+)",
                                       "D")
                -- m["named"] == {"hello", "world"}
              this option was first introduced in the v0.7.14 release.
              this option requires at least PCRE 8.12.

i             case insensitive mode (similar to Perl's /i modifier)

j             enable PCRE JIT compilation, this requires PCRE 8.21+ which
              must be built with the --enable-jit option. for optimum performance,
              this option should always be used together with the 'o' option.
              first introduced in ngx_lua v0.3.1rc30.

J             enable the PCRE Javascript compatible mode. this option was
              first introduced in the v0.7.14 release. this option requires
              at least PCRE 8.12.

m             multi-line mode (similar to Perl's /m modifier)

o             compile-once mode (similar to Perl's /o modifier),
              to enable the worker-process-level compiled-regex cache

s             single-line mode (similar to Perl's /s modifier)

u             UTF-8 mode. this requires PCRE to be built with
              the --enable-utf8 option or else a Lua exception will be thrown.

U             similar to "u" but disables PCRE's UTF-8 validity check on
              the subject string. first introduced in ngx_lua v0.8.1.

x             extended mode (similar to Perl's /x modifier)
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;These options can be combined:&lt;/p&gt;
&lt;div class="highlight highlight-source-nginx"&gt;&lt;pre&gt; &lt;span class="pl-k"&gt;local&lt;/span&gt; m, err = ngx.re.match(&lt;span class="pl-s"&gt;"hello, world"&lt;/span&gt;, &lt;span class="pl-s"&gt;"HEL LO"&lt;/span&gt;, &lt;span class="pl-s"&gt;"ix"&lt;/span&gt;)
 -- m[0] == "hello"&lt;/pre&gt;&lt;/div&gt;
&lt;div class="highlight highlight-source-nginx"&gt;&lt;pre&gt; &lt;span class="pl-k"&gt;local&lt;/span&gt; m, err = ngx.re.match(&lt;span class="pl-s"&gt;"hello, 美好生活"&lt;/span&gt;, &lt;span class="pl-s"&gt;"HELLO, (.{2})"&lt;/span&gt;, &lt;span class="pl-s"&gt;"iu"&lt;/span&gt;)
 -- m[0] == "hello, 美好"
 -- m[1] == "美好"&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;The &lt;code&gt;o&lt;/code&gt; option is useful for performance tuning, because the regex pattern in question will only be compiled once, cached in the worker-process level, and shared among all requests in the current Nginx worker process. The upper limit of the regex cache can be tuned via the &lt;a href="#lua_regex_cache_max_entries"&gt;lua_regex_cache_max_entries&lt;/a&gt; directive.&lt;/p&gt;
&lt;p&gt;The optional fourth argument, &lt;code&gt;ctx&lt;/code&gt;, can be a Lua table holding an optional &lt;code&gt;pos&lt;/code&gt; field. When the &lt;code&gt;pos&lt;/code&gt; field in the &lt;code&gt;ctx&lt;/code&gt; table argument is specified, &lt;code&gt;ngx.re.match&lt;/code&gt; will start matching from that offset (starting from 1). Regardless of the presence of the &lt;code&gt;pos&lt;/code&gt; field in the &lt;code&gt;ctx&lt;/code&gt; table, &lt;code&gt;ngx.re.match&lt;/code&gt; will always set this &lt;code&gt;pos&lt;/code&gt; field to the position &lt;em&gt;after&lt;/em&gt; the substring matched by the whole pattern in case of a successful match. When match fails, the &lt;code&gt;ctx&lt;/code&gt; table will be left intact.&lt;/p&gt;
&lt;div class="highlight highlight-source-lua"&gt;&lt;pre&gt; &lt;span class="pl-k"&gt;local&lt;/span&gt; ctx &lt;span class="pl-k"&gt;=&lt;/span&gt; {}
 &lt;span class="pl-k"&gt;local&lt;/span&gt; m, err &lt;span class="pl-k"&gt;=&lt;/span&gt; ngx.&lt;span class="pl-smi"&gt;re&lt;/span&gt;.&lt;span class="pl-c1"&gt;match&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;1234, hello&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;[0-9]+&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, ctx)
      &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;--&lt;/span&gt; m[0] = "1234"&lt;/span&gt;
      &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;--&lt;/span&gt; ctx.pos == 5&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;div class="highlight highlight-source-lua"&gt;&lt;pre&gt; &lt;span class="pl-k"&gt;local&lt;/span&gt; ctx &lt;span class="pl-k"&gt;=&lt;/span&gt; { pos &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;2&lt;/span&gt; }
 &lt;span class="pl-k"&gt;local&lt;/span&gt; m, err &lt;span class="pl-k"&gt;=&lt;/span&gt; ngx.&lt;span class="pl-smi"&gt;re&lt;/span&gt;.&lt;span class="pl-c1"&gt;match&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;1234, hello&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;[0-9]+&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, ctx)
      &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;--&lt;/span&gt; m[0] = "234"&lt;/span&gt;
      &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;--&lt;/span&gt; ctx.pos == 5&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;The &lt;code&gt;ctx&lt;/code&gt; table argument combined with the &lt;code&gt;a&lt;/code&gt; regex modifier can be used to construct a lexer atop &lt;code&gt;ngx.re.match&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;Note that, the &lt;code&gt;options&lt;/code&gt; argument is not optional when the &lt;code&gt;ctx&lt;/code&gt; argument is specified and that the empty Lua string (&lt;code&gt;""&lt;/code&gt;) must be used as placeholder for &lt;code&gt;options&lt;/code&gt; if no meaningful regex options are required.&lt;/p&gt;
&lt;p&gt;This method requires the PCRE library enabled in Nginx (&lt;a href="#special-escaping-sequences"&gt;Known Issue With Special Escaping Sequences&lt;/a&gt;).&lt;/p&gt;
&lt;p&gt;To confirm that PCRE JIT is enabled, activate the Nginx debug log by adding the &lt;code&gt;--with-debug&lt;/code&gt; option to Nginx or OpenResty's &lt;code&gt;./configure&lt;/code&gt; script. Then, enable the "debug" error log level in &lt;code&gt;error_log&lt;/code&gt; directive. The following message will be generated if PCRE JIT is enabled:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;pcre JIT compiling result: 1
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Starting from the &lt;code&gt;0.9.4&lt;/code&gt; release, this function also accepts a 5th argument, &lt;code&gt;res_table&lt;/code&gt;, for letting the caller supply the Lua table used to hold all the capturing results. Starting from &lt;code&gt;0.9.6&lt;/code&gt;, it is the caller's responsibility to ensure this table is empty. This is very useful for recycling Lua tables and saving GC and table allocation overhead.&lt;/p&gt;
&lt;p&gt;This feature was introduced in the &lt;code&gt;v0.2.1rc11&lt;/code&gt; release.&lt;/p&gt;
&lt;p&gt;&lt;a href="#nginx-api-for-lua"&gt;Back to TOC&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-ngxrefind" class="anchor" aria-hidden="true" href="#ngxrefind"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;ngx.re.find&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;syntax:&lt;/strong&gt; &lt;em&gt;from, to, err = ngx.re.find(subject, regex, options?, ctx?, nth?)&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;context:&lt;/strong&gt; &lt;em&gt;init_worker_by_lua*, set_by_lua*, rewrite_by_lua*, access_by_lua*, content_by_lua*, header_filter_by_lua*, body_filter_by_lua*, log_by_lua*, ngx.timer.*, balancer_by_lua*, ssl_certificate_by_lua*, ssl_session_fetch_by_lua*, ssl_session_store_by_lua*&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;Similar to &lt;a href="#ngxrematch"&gt;ngx.re.match&lt;/a&gt; but only returns the beginning index (&lt;code&gt;from&lt;/code&gt;) and end index (&lt;code&gt;to&lt;/code&gt;) of the matched substring. The returned indexes are 1-based and can be fed directly into the &lt;a href="https://www.lua.org/manual/5.1/manual.html#pdf-string.sub" rel="nofollow"&gt;string.sub&lt;/a&gt; API function to obtain the matched substring.&lt;/p&gt;
&lt;p&gt;In case of errors (like bad regexes or any PCRE runtime errors), this API function returns two &lt;code&gt;nil&lt;/code&gt; values followed by a string describing the error.&lt;/p&gt;
&lt;p&gt;If no match is found, this function just returns a &lt;code&gt;nil&lt;/code&gt; value.&lt;/p&gt;
&lt;p&gt;Below is an example:&lt;/p&gt;
&lt;div class="highlight highlight-source-lua"&gt;&lt;pre&gt; &lt;span class="pl-k"&gt;local&lt;/span&gt; s &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;hello, 1234&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;
 &lt;span class="pl-k"&gt;local&lt;/span&gt; from, to, err &lt;span class="pl-k"&gt;=&lt;/span&gt; ngx.&lt;span class="pl-smi"&gt;re&lt;/span&gt;.&lt;span class="pl-c1"&gt;find&lt;/span&gt;(s, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;([0-9]+)&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;jo&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
 &lt;span class="pl-k"&gt;if&lt;/span&gt; from &lt;span class="pl-k"&gt;then&lt;/span&gt;
     ngx.&lt;span class="pl-c1"&gt;say&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;from: &lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, from)
     ngx.&lt;span class="pl-c1"&gt;say&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;to: &lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, to)
     ngx.&lt;span class="pl-c1"&gt;say&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;matched: &lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-c1"&gt;string.sub&lt;/span&gt;(s, from, to))
 &lt;span class="pl-k"&gt;else&lt;/span&gt;
     &lt;span class="pl-k"&gt;if&lt;/span&gt; err &lt;span class="pl-k"&gt;then&lt;/span&gt;
         ngx.&lt;span class="pl-c1"&gt;say&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;error: &lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, err)
         &lt;span class="pl-k"&gt;return&lt;/span&gt;
     &lt;span class="pl-k"&gt;end&lt;/span&gt;
     ngx.&lt;span class="pl-c1"&gt;say&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;not matched!&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
 &lt;span class="pl-k"&gt;end&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;This example produces the output&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;from: 8
to: 11
matched: 1234
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Because this API function does not create new Lua strings nor new Lua tables, it is much faster than &lt;a href="#ngxrematch"&gt;ngx.re.match&lt;/a&gt;. It should be used wherever possible.&lt;/p&gt;
&lt;p&gt;Since the &lt;code&gt;0.9.3&lt;/code&gt; release, an optional 5th argument, &lt;code&gt;nth&lt;/code&gt;, is supported to specify which (submatch) capture's indexes to return. When &lt;code&gt;nth&lt;/code&gt; is 0 (which is the default), the indexes for the whole matched substring is returned; when &lt;code&gt;nth&lt;/code&gt; is 1, then the 1st submatch capture's indexes are returned; when &lt;code&gt;nth&lt;/code&gt; is 2, then the 2nd submatch capture is returned, and so on. When the specified submatch does not have a match, then two &lt;code&gt;nil&lt;/code&gt; values will be returned. Below is an example for this:&lt;/p&gt;
&lt;div class="highlight highlight-source-lua"&gt;&lt;pre&gt; &lt;span class="pl-k"&gt;local&lt;/span&gt; str &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;hello, 1234&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;
 &lt;span class="pl-k"&gt;local&lt;/span&gt; from, to &lt;span class="pl-k"&gt;=&lt;/span&gt; ngx.&lt;span class="pl-smi"&gt;re&lt;/span&gt;.&lt;span class="pl-c1"&gt;find&lt;/span&gt;(str, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;([0-9])([0-9]+)&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;jo&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-c1"&gt;nil&lt;/span&gt;, &lt;span class="pl-c1"&gt;2&lt;/span&gt;)
 &lt;span class="pl-k"&gt;if&lt;/span&gt; from &lt;span class="pl-k"&gt;then&lt;/span&gt;
     ngx.&lt;span class="pl-c1"&gt;say&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;matched 2nd submatch: &lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-c1"&gt;string.sub&lt;/span&gt;(str, from, to))  &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;--&lt;/span&gt; yields "234"&lt;/span&gt;
 &lt;span class="pl-k"&gt;end&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;This API function was first introduced in the &lt;code&gt;v0.9.2&lt;/code&gt; release.&lt;/p&gt;
&lt;p&gt;&lt;a href="#nginx-api-for-lua"&gt;Back to TOC&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-ngxregmatch" class="anchor" aria-hidden="true" href="#ngxregmatch"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;ngx.re.gmatch&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;syntax:&lt;/strong&gt; &lt;em&gt;iterator, err = ngx.re.gmatch(subject, regex, options?)&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;context:&lt;/strong&gt; &lt;em&gt;init_worker_by_lua*, set_by_lua*, rewrite_by_lua*, access_by_lua*, content_by_lua*, header_filter_by_lua*, body_filter_by_lua*, log_by_lua*, ngx.timer.*, balancer_by_lua*, ssl_certificate_by_lua*, ssl_session_fetch_by_lua*, ssl_session_store_by_lua*&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;Similar to &lt;a href="#ngxrematch"&gt;ngx.re.match&lt;/a&gt;, but returns a Lua iterator instead, so as to let the user programmer iterate all the matches over the &lt;code&gt;&amp;lt;subject&amp;gt;&lt;/code&gt; string argument with the PCRE &lt;code&gt;regex&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;In case of errors, like seeing an ill-formed regular expression, &lt;code&gt;nil&lt;/code&gt; and a string describing the error will be returned.&lt;/p&gt;
&lt;p&gt;Here is a small example to demonstrate its basic usage:&lt;/p&gt;
&lt;div class="highlight highlight-source-lua"&gt;&lt;pre&gt; &lt;span class="pl-k"&gt;local&lt;/span&gt; iterator, err &lt;span class="pl-k"&gt;=&lt;/span&gt; ngx.&lt;span class="pl-smi"&gt;re&lt;/span&gt;.&lt;span class="pl-c1"&gt;gmatch&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;hello, world!&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;([a-z]+)&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;i&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
 &lt;span class="pl-k"&gt;if&lt;/span&gt; &lt;span class="pl-k"&gt;not&lt;/span&gt; iterator &lt;span class="pl-k"&gt;then&lt;/span&gt;
     ngx.&lt;span class="pl-c1"&gt;log&lt;/span&gt;(ngx.&lt;span class="pl-smi"&gt;ERR&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;error: &lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, err)
     &lt;span class="pl-k"&gt;return&lt;/span&gt;
 &lt;span class="pl-k"&gt;end&lt;/span&gt;

 &lt;span class="pl-k"&gt;local&lt;/span&gt; m
 m, err &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;iterator&lt;/span&gt;()    &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;--&lt;/span&gt; m[0] == m[1] == "hello"&lt;/span&gt;
 &lt;span class="pl-k"&gt;if&lt;/span&gt; err &lt;span class="pl-k"&gt;then&lt;/span&gt;
     ngx.&lt;span class="pl-c1"&gt;log&lt;/span&gt;(ngx.&lt;span class="pl-smi"&gt;ERR&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;error: &lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, err)
     &lt;span class="pl-k"&gt;return&lt;/span&gt;
 &lt;span class="pl-k"&gt;end&lt;/span&gt;

 m, err &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;iterator&lt;/span&gt;()    &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;--&lt;/span&gt; m[0] == m[1] == "world"&lt;/span&gt;
 &lt;span class="pl-k"&gt;if&lt;/span&gt; err &lt;span class="pl-k"&gt;then&lt;/span&gt;
     ngx.&lt;span class="pl-c1"&gt;log&lt;/span&gt;(ngx.&lt;span class="pl-smi"&gt;ERR&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;error: &lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, err)
     &lt;span class="pl-k"&gt;return&lt;/span&gt;
 &lt;span class="pl-k"&gt;end&lt;/span&gt;

 m, err &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;iterator&lt;/span&gt;()    &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;--&lt;/span&gt; m == nil&lt;/span&gt;
 &lt;span class="pl-k"&gt;if&lt;/span&gt; err &lt;span class="pl-k"&gt;then&lt;/span&gt;
     ngx.&lt;span class="pl-c1"&gt;log&lt;/span&gt;(ngx.&lt;span class="pl-smi"&gt;ERR&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;error: &lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, err)
     &lt;span class="pl-k"&gt;return&lt;/span&gt;
 &lt;span class="pl-k"&gt;end&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;More often we just put it into a Lua loop:&lt;/p&gt;
&lt;div class="highlight highlight-source-lua"&gt;&lt;pre&gt; &lt;span class="pl-k"&gt;local&lt;/span&gt; it, err &lt;span class="pl-k"&gt;=&lt;/span&gt; ngx.&lt;span class="pl-smi"&gt;re&lt;/span&gt;.&lt;span class="pl-c1"&gt;gmatch&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;hello, world!&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;([a-z]+)&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;i&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
 &lt;span class="pl-k"&gt;if&lt;/span&gt; &lt;span class="pl-k"&gt;not&lt;/span&gt; it &lt;span class="pl-k"&gt;then&lt;/span&gt;
     ngx.&lt;span class="pl-c1"&gt;log&lt;/span&gt;(ngx.&lt;span class="pl-smi"&gt;ERR&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;error: &lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, err)
     &lt;span class="pl-k"&gt;return&lt;/span&gt;
 &lt;span class="pl-k"&gt;end&lt;/span&gt;

 &lt;span class="pl-k"&gt;while&lt;/span&gt; &lt;span class="pl-c1"&gt;true&lt;/span&gt; &lt;span class="pl-k"&gt;do&lt;/span&gt;
     &lt;span class="pl-k"&gt;local&lt;/span&gt; m, err &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;it&lt;/span&gt;()
     &lt;span class="pl-k"&gt;if&lt;/span&gt; err &lt;span class="pl-k"&gt;then&lt;/span&gt;
         ngx.&lt;span class="pl-c1"&gt;log&lt;/span&gt;(ngx.&lt;span class="pl-smi"&gt;ERR&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;error: &lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, err)
         &lt;span class="pl-k"&gt;return&lt;/span&gt;
     &lt;span class="pl-k"&gt;end&lt;/span&gt;

     &lt;span class="pl-k"&gt;if&lt;/span&gt; &lt;span class="pl-k"&gt;not&lt;/span&gt; m &lt;span class="pl-k"&gt;then&lt;/span&gt;
         &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;--&lt;/span&gt; no match found (any more)&lt;/span&gt;
         &lt;span class="pl-k"&gt;break&lt;/span&gt;
     &lt;span class="pl-k"&gt;end&lt;/span&gt;

     &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;--&lt;/span&gt; found a match&lt;/span&gt;
     ngx.&lt;span class="pl-c1"&gt;say&lt;/span&gt;(m[&lt;span class="pl-c1"&gt;0&lt;/span&gt;])
     ngx.&lt;span class="pl-c1"&gt;say&lt;/span&gt;(m[&lt;span class="pl-c1"&gt;1&lt;/span&gt;])
 &lt;span class="pl-k"&gt;end&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;The optional &lt;code&gt;options&lt;/code&gt; argument takes exactly the same semantics as the &lt;a href="#ngxrematch"&gt;ngx.re.match&lt;/a&gt; method.&lt;/p&gt;
&lt;p&gt;The current implementation requires that the iterator returned should only be used in a single request. That is, one should &lt;em&gt;not&lt;/em&gt; assign it to a variable belonging to persistent namespace like a Lua package.&lt;/p&gt;
&lt;p&gt;This method requires the PCRE library enabled in Nginx (&lt;a href="#special-escaping-sequences"&gt;Known Issue With Special Escaping Sequences&lt;/a&gt;).&lt;/p&gt;
&lt;p&gt;This feature was first introduced in the &lt;code&gt;v0.2.1rc12&lt;/code&gt; release.&lt;/p&gt;
&lt;p&gt;&lt;a href="#nginx-api-for-lua"&gt;Back to TOC&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-ngxresub" class="anchor" aria-hidden="true" href="#ngxresub"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;ngx.re.sub&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;syntax:&lt;/strong&gt; &lt;em&gt;newstr, n, err = ngx.re.sub(subject, regex, replace, options?)&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;context:&lt;/strong&gt; &lt;em&gt;init_worker_by_lua*, set_by_lua*, rewrite_by_lua*, access_by_lua*, content_by_lua*, header_filter_by_lua*, body_filter_by_lua*, log_by_lua*, ngx.timer.*, balancer_by_lua*, ssl_certificate_by_lua*, ssl_session_fetch_by_lua*, ssl_session_store_by_lua*&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;Substitutes the first match of the Perl compatible regular expression &lt;code&gt;regex&lt;/code&gt; on the &lt;code&gt;subject&lt;/code&gt; argument string with the string or function argument &lt;code&gt;replace&lt;/code&gt;. The optional &lt;code&gt;options&lt;/code&gt; argument has exactly the same meaning as in &lt;a href="#ngxrematch"&gt;ngx.re.match&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;This method returns the resulting new string as well as the number of successful substitutions. In case of failures, like syntax errors in the regular expressions or the &lt;code&gt;&amp;lt;replace&amp;gt;&lt;/code&gt; string argument, it will return &lt;code&gt;nil&lt;/code&gt; and a string describing the error.&lt;/p&gt;
&lt;p&gt;When the &lt;code&gt;replace&lt;/code&gt; is a string, then it is treated as a special template for string replacement. For example,&lt;/p&gt;
&lt;div class="highlight highlight-source-lua"&gt;&lt;pre&gt; &lt;span class="pl-k"&gt;local&lt;/span&gt; newstr, n, err &lt;span class="pl-k"&gt;=&lt;/span&gt; ngx.&lt;span class="pl-smi"&gt;re&lt;/span&gt;.&lt;span class="pl-c1"&gt;sub&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;hello, 1234&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;([0-9])[0-9]&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;[$0][$1]&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
 &lt;span class="pl-k"&gt;if&lt;/span&gt; newstr &lt;span class="pl-k"&gt;then&lt;/span&gt;
     &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;--&lt;/span&gt; newstr == "hello, [12][1]34"&lt;/span&gt;
     &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;--&lt;/span&gt; n == 1&lt;/span&gt;
 &lt;span class="pl-k"&gt;else&lt;/span&gt;
     ngx.&lt;span class="pl-c1"&gt;log&lt;/span&gt;(ngx.&lt;span class="pl-smi"&gt;ERR&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;error: &lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, err)
     &lt;span class="pl-k"&gt;return&lt;/span&gt;
 &lt;span class="pl-k"&gt;end&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;where &lt;code&gt;$0&lt;/code&gt; referring to the whole substring matched by the pattern and &lt;code&gt;$1&lt;/code&gt; referring to the first parenthesized capturing substring.&lt;/p&gt;
&lt;p&gt;Curly braces can also be used to disambiguate variable names from the background string literals:&lt;/p&gt;
&lt;div class="highlight highlight-source-lua"&gt;&lt;pre&gt; &lt;span class="pl-k"&gt;local&lt;/span&gt; newstr, n, err &lt;span class="pl-k"&gt;=&lt;/span&gt; ngx.&lt;span class="pl-smi"&gt;re&lt;/span&gt;.&lt;span class="pl-c1"&gt;sub&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;hello, 1234&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;[0-9]&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;${0}00&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
     &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;--&lt;/span&gt; newstr == "hello, 100234"&lt;/span&gt;
     &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;--&lt;/span&gt; n == 1&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Literal dollar sign characters (&lt;code&gt;$&lt;/code&gt;) in the &lt;code&gt;replace&lt;/code&gt; string argument can be escaped by another dollar sign, for instance,&lt;/p&gt;
&lt;div class="highlight highlight-source-lua"&gt;&lt;pre&gt; &lt;span class="pl-k"&gt;local&lt;/span&gt; newstr, n, err &lt;span class="pl-k"&gt;=&lt;/span&gt; ngx.&lt;span class="pl-smi"&gt;re&lt;/span&gt;.&lt;span class="pl-c1"&gt;sub&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;hello, 1234&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;[0-9]&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;$$&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
     &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;--&lt;/span&gt; newstr == "hello, $234"&lt;/span&gt;
     &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;--&lt;/span&gt; n == 1&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Do not use backlashes to escape dollar signs; it will not work as expected.&lt;/p&gt;
&lt;p&gt;When the &lt;code&gt;replace&lt;/code&gt; argument is of type "function", then it will be invoked with the "match table" as the argument to generate the replace string literal for substitution. The "match table" fed into the &lt;code&gt;replace&lt;/code&gt; function is exactly the same as the return value of &lt;a href="#ngxrematch"&gt;ngx.re.match&lt;/a&gt;. Here is an example:&lt;/p&gt;
&lt;div class="highlight highlight-source-lua"&gt;&lt;pre&gt; &lt;span class="pl-k"&gt;local&lt;/span&gt; func &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-k"&gt;function&lt;/span&gt; (&lt;span class="pl-smi"&gt;m&lt;/span&gt;)
     &lt;span class="pl-k"&gt;return&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;[&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; &lt;span class="pl-k"&gt;..&lt;/span&gt; m[&lt;span class="pl-c1"&gt;0&lt;/span&gt;] &lt;span class="pl-k"&gt;..&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;][&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; &lt;span class="pl-k"&gt;..&lt;/span&gt; m[&lt;span class="pl-c1"&gt;1&lt;/span&gt;] &lt;span class="pl-k"&gt;..&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;]&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;
 &lt;span class="pl-k"&gt;end&lt;/span&gt;
 &lt;span class="pl-k"&gt;local&lt;/span&gt; newstr, n, err &lt;span class="pl-k"&gt;=&lt;/span&gt; ngx.&lt;span class="pl-smi"&gt;re&lt;/span&gt;.&lt;span class="pl-c1"&gt;sub&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;hello, 1234&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;( [0-9] ) [0-9]&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, func, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;x&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
     &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;--&lt;/span&gt; newstr == "hello, [12][1]34"&lt;/span&gt;
     &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;--&lt;/span&gt; n == 1&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;The dollar sign characters in the return value of the &lt;code&gt;replace&lt;/code&gt; function argument are not special at all.&lt;/p&gt;
&lt;p&gt;This method requires the PCRE library enabled in Nginx (&lt;a href="#special-escaping-sequences"&gt;Known Issue With Special Escaping Sequences&lt;/a&gt;).&lt;/p&gt;
&lt;p&gt;This feature was first introduced in the &lt;code&gt;v0.2.1rc13&lt;/code&gt; release.&lt;/p&gt;
&lt;p&gt;&lt;a href="#nginx-api-for-lua"&gt;Back to TOC&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-ngxregsub" class="anchor" aria-hidden="true" href="#ngxregsub"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;ngx.re.gsub&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;syntax:&lt;/strong&gt; &lt;em&gt;newstr, n, err = ngx.re.gsub(subject, regex, replace, options?)&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;context:&lt;/strong&gt; &lt;em&gt;init_worker_by_lua*, set_by_lua*, rewrite_by_lua*, access_by_lua*, content_by_lua*, header_filter_by_lua*, body_filter_by_lua*, log_by_lua*, ngx.timer.*, balancer_by_lua*, ssl_certificate_by_lua*, ssl_session_fetch_by_lua*, ssl_session_store_by_lua*&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;Just like &lt;a href="#ngxresub"&gt;ngx.re.sub&lt;/a&gt;, but does global substitution.&lt;/p&gt;
&lt;p&gt;Here is some examples:&lt;/p&gt;
&lt;div class="highlight highlight-source-lua"&gt;&lt;pre&gt; &lt;span class="pl-k"&gt;local&lt;/span&gt; newstr, n, err &lt;span class="pl-k"&gt;=&lt;/span&gt; ngx.&lt;span class="pl-smi"&gt;re&lt;/span&gt;.&lt;span class="pl-c1"&gt;gsub&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;hello, world&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;([a-z])[a-z]+&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;[$0,$1]&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;i&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
 &lt;span class="pl-k"&gt;if&lt;/span&gt; newstr &lt;span class="pl-k"&gt;then&lt;/span&gt;
     &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;--&lt;/span&gt; newstr == "[hello,h], [world,w]"&lt;/span&gt;
     &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;--&lt;/span&gt; n == 2&lt;/span&gt;
 &lt;span class="pl-k"&gt;else&lt;/span&gt;
     ngx.&lt;span class="pl-c1"&gt;log&lt;/span&gt;(ngx.&lt;span class="pl-smi"&gt;ERR&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;error: &lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, err)
     &lt;span class="pl-k"&gt;return&lt;/span&gt;
 &lt;span class="pl-k"&gt;end&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;div class="highlight highlight-source-lua"&gt;&lt;pre&gt; &lt;span class="pl-k"&gt;local&lt;/span&gt; func &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-k"&gt;function&lt;/span&gt; (&lt;span class="pl-smi"&gt;m&lt;/span&gt;)
     &lt;span class="pl-k"&gt;return&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;[&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; &lt;span class="pl-k"&gt;..&lt;/span&gt; m[&lt;span class="pl-c1"&gt;0&lt;/span&gt;] &lt;span class="pl-k"&gt;..&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;,&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; &lt;span class="pl-k"&gt;..&lt;/span&gt; m[&lt;span class="pl-c1"&gt;1&lt;/span&gt;] &lt;span class="pl-k"&gt;..&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;]&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;
 &lt;span class="pl-k"&gt;end&lt;/span&gt;
 &lt;span class="pl-k"&gt;local&lt;/span&gt; newstr, n, err &lt;span class="pl-k"&gt;=&lt;/span&gt; ngx.&lt;span class="pl-smi"&gt;re&lt;/span&gt;.&lt;span class="pl-c1"&gt;gsub&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;hello, world&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;([a-z])[a-z]+&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, func, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;i&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
     &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;--&lt;/span&gt; newstr == "[hello,h], [world,w]"&lt;/span&gt;
     &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;--&lt;/span&gt; n == 2&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;This method requires the PCRE library enabled in Nginx (&lt;a href="#special-escaping-sequences"&gt;Known Issue With Special Escaping Sequences&lt;/a&gt;).&lt;/p&gt;
&lt;p&gt;This feature was first introduced in the &lt;code&gt;v0.2.1rc15&lt;/code&gt; release.&lt;/p&gt;
&lt;p&gt;&lt;a href="#nginx-api-for-lua"&gt;Back to TOC&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-ngxshareddict" class="anchor" aria-hidden="true" href="#ngxshareddict"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;ngx.shared.DICT&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;syntax:&lt;/strong&gt; &lt;em&gt;dict = ngx.shared.DICT&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;syntax:&lt;/strong&gt; &lt;em&gt;dict = ngx.shared[name_var]&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;context:&lt;/strong&gt; &lt;em&gt;init_by_lua*, init_worker_by_lua*, set_by_lua*, rewrite_by_lua*, access_by_lua*, content_by_lua*, header_filter_by_lua*, body_filter_by_lua*, log_by_lua*, ngx.timer.*, balancer_by_lua*, ssl_certificate_by_lua*, ssl_session_fetch_by_lua*, ssl_session_store_by_lua*&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;Fetching the shm-based Lua dictionary object for the shared memory zone named &lt;code&gt;DICT&lt;/code&gt; defined by the &lt;a href="#lua_shared_dict"&gt;lua_shared_dict&lt;/a&gt; directive.&lt;/p&gt;
&lt;p&gt;Shared memory zones are always shared by all the Nginx worker processes in the current Nginx server instance.&lt;/p&gt;
&lt;p&gt;The resulting object &lt;code&gt;dict&lt;/code&gt; has the following methods:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="#ngxshareddictget"&gt;get&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#ngxshareddictget_stale"&gt;get_stale&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#ngxshareddictset"&gt;set&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#ngxshareddictsafe_set"&gt;safe_set&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#ngxshareddictadd"&gt;add&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#ngxshareddictsafe_add"&gt;safe_add&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#ngxshareddictreplace"&gt;replace&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#ngxshareddictdelete"&gt;delete&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#ngxshareddictincr"&gt;incr&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#ngxshareddictlpush"&gt;lpush&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#ngxshareddictrpush"&gt;rpush&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#ngxshareddictlpop"&gt;lpop&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#ngxshareddictrpop"&gt;rpop&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#ngxshareddictllen"&gt;llen&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#ngxshareddictttl"&gt;ttl&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#ngxshareddictexpire"&gt;expire&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#ngxshareddictflush_all"&gt;flush_all&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#ngxshareddictflush_expired"&gt;flush_expired&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#ngxshareddictget_keys"&gt;get_keys&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#ngxshareddictcapacity"&gt;capacity&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#ngxshareddictfree_space"&gt;free_space&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;All these methods are &lt;em&gt;atomic&lt;/em&gt; operations, that is, safe from concurrent accesses from multiple Nginx worker processes for the same &lt;code&gt;lua_shared_dict&lt;/code&gt; zone.&lt;/p&gt;
&lt;p&gt;Here is an example:&lt;/p&gt;
&lt;div class="highlight highlight-source-nginx"&gt;&lt;pre&gt; &lt;span class="pl-k"&gt;http&lt;/span&gt; {
     &lt;span class="pl-k"&gt;lua_shared_dict&lt;/span&gt; dogs &lt;span class="pl-c1"&gt;10m&lt;/span&gt;;
     &lt;span class="pl-k"&gt;server&lt;/span&gt; {
         &lt;span class="pl-k"&gt;location&lt;/span&gt; &lt;span class="pl-en"&gt;/set &lt;/span&gt;{
             &lt;span class="pl-k"&gt;content_by_lua_block&lt;/span&gt; {
                 &lt;span class="pl-k"&gt;local&lt;/span&gt; dogs = ngx.shared.dogs
                 dogs:&lt;span class="pl-k"&gt;set&lt;/span&gt;(&lt;span class="pl-s"&gt;"Jim"&lt;/span&gt;, 8)
                 ngx.say(&lt;span class="pl-s"&gt;"STORED"&lt;/span&gt;)
             }
         }
         location /get {
             content_by_lua_block {
                 local dogs = ngx.shared.dogs
                 ngx.say(dogs:get(&lt;span class="pl-s"&gt;"Jim"&lt;/span&gt;))
             }
         }
     }
 }&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Let us test it:&lt;/p&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt; $ curl localhost/set
 STORED

 $ curl localhost/get
 8

 $ curl localhost/get
 8&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;The number &lt;code&gt;8&lt;/code&gt; will be consistently output when accessing &lt;code&gt;/get&lt;/code&gt; regardless of how many Nginx workers there are because the &lt;code&gt;dogs&lt;/code&gt; dictionary resides in the shared memory and visible to &lt;em&gt;all&lt;/em&gt; of the worker processes.&lt;/p&gt;
&lt;p&gt;The shared dictionary will retain its contents through a server config reload (either by sending the &lt;code&gt;HUP&lt;/code&gt; signal to the Nginx process or by using the &lt;code&gt;-s reload&lt;/code&gt; command-line option).&lt;/p&gt;
&lt;p&gt;The contents in the dictionary storage will be lost, however, when the Nginx server quits.&lt;/p&gt;
&lt;p&gt;This feature was first introduced in the &lt;code&gt;v0.3.1rc22&lt;/code&gt; release.&lt;/p&gt;
&lt;p&gt;&lt;a href="#nginx-api-for-lua"&gt;Back to TOC&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-ngxshareddictget" class="anchor" aria-hidden="true" href="#ngxshareddictget"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;ngx.shared.DICT.get&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;syntax:&lt;/strong&gt; &lt;em&gt;value, flags = ngx.shared.DICT:get(key)&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;context:&lt;/strong&gt; &lt;em&gt;set_by_lua*, rewrite_by_lua*, access_by_lua*, content_by_lua*, header_filter_by_lua*, body_filter_by_lua*, log_by_lua*, ngx.timer.*, balancer_by_lua*, ssl_certificate_by_lua*, ssl_session_fetch_by_lua*, ssl_session_store_by_lua*&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;Retrieving the value in the dictionary &lt;a href="#ngxshareddict"&gt;ngx.shared.DICT&lt;/a&gt; for the key &lt;code&gt;key&lt;/code&gt;. If the key does not exist or has expired, then &lt;code&gt;nil&lt;/code&gt; will be returned.&lt;/p&gt;
&lt;p&gt;In case of errors, &lt;code&gt;nil&lt;/code&gt; and a string describing the error will be returned.&lt;/p&gt;
&lt;p&gt;The value returned will have the original data type when they were inserted into the dictionary, for example, Lua booleans, numbers, or strings.&lt;/p&gt;
&lt;p&gt;The first argument to this method must be the dictionary object itself, for example,&lt;/p&gt;
&lt;div class="highlight highlight-source-lua"&gt;&lt;pre&gt; &lt;span class="pl-k"&gt;local&lt;/span&gt; cats &lt;span class="pl-k"&gt;=&lt;/span&gt; ngx.&lt;span class="pl-smi"&gt;shared&lt;/span&gt;.&lt;span class="pl-smi"&gt;cats&lt;/span&gt;
 &lt;span class="pl-k"&gt;local&lt;/span&gt; value, flags &lt;span class="pl-k"&gt;=&lt;/span&gt; cats.&lt;span class="pl-c1"&gt;get&lt;/span&gt;(cats, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;Marry&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;or use Lua's syntactic sugar for method calls:&lt;/p&gt;
&lt;div class="highlight highlight-source-lua"&gt;&lt;pre&gt; &lt;span class="pl-k"&gt;local&lt;/span&gt; cats &lt;span class="pl-k"&gt;=&lt;/span&gt; ngx.&lt;span class="pl-smi"&gt;shared&lt;/span&gt;.&lt;span class="pl-smi"&gt;cats&lt;/span&gt;
 &lt;span class="pl-k"&gt;local&lt;/span&gt; value, flags &lt;span class="pl-k"&gt;=&lt;/span&gt; cats:&lt;span class="pl-c1"&gt;get&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;Marry&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;These two forms are fundamentally equivalent.&lt;/p&gt;
&lt;p&gt;If the user flags is &lt;code&gt;0&lt;/code&gt; (the default), then no flags value will be returned.&lt;/p&gt;
&lt;p&gt;This feature was first introduced in the &lt;code&gt;v0.3.1rc22&lt;/code&gt; release.&lt;/p&gt;
&lt;p&gt;See also &lt;a href="#ngxshareddict"&gt;ngx.shared.DICT&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;&lt;a href="#nginx-api-for-lua"&gt;Back to TOC&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-ngxshareddictget_stale" class="anchor" aria-hidden="true" href="#ngxshareddictget_stale"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;ngx.shared.DICT.get_stale&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;syntax:&lt;/strong&gt; &lt;em&gt;value, flags, stale = ngx.shared.DICT:get_stale(key)&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;context:&lt;/strong&gt; &lt;em&gt;set_by_lua*, rewrite_by_lua*, access_by_lua*, content_by_lua*, header_filter_by_lua*, body_filter_by_lua*, log_by_lua*, ngx.timer.*, balancer_by_lua*, ssl_certificate_by_lua*, ssl_session_fetch_by_lua*, ssl_session_store_by_lua*&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;Similar to the &lt;a href="#ngxshareddictget"&gt;get&lt;/a&gt; method but returns the value even if the key has already expired.&lt;/p&gt;
&lt;p&gt;Returns a 3rd value, &lt;code&gt;stale&lt;/code&gt;, indicating whether the key has expired or not.&lt;/p&gt;
&lt;p&gt;Note that the value of an expired key is not guaranteed to be available so one should never rely on the availability of expired items.&lt;/p&gt;
&lt;p&gt;This method was first introduced in the &lt;code&gt;0.8.6&lt;/code&gt; release.&lt;/p&gt;
&lt;p&gt;See also &lt;a href="#ngxshareddict"&gt;ngx.shared.DICT&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;&lt;a href="#nginx-api-for-lua"&gt;Back to TOC&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-ngxshareddictset" class="anchor" aria-hidden="true" href="#ngxshareddictset"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;ngx.shared.DICT.set&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;syntax:&lt;/strong&gt; &lt;em&gt;success, err, forcible = ngx.shared.DICT:set(key, value, exptime?, flags?)&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;context:&lt;/strong&gt; &lt;em&gt;init_by_lua*, set_by_lua*, rewrite_by_lua*, access_by_lua*, content_by_lua*, header_filter_by_lua*, body_filter_by_lua*, log_by_lua*, ngx.timer.*, balancer_by_lua*, ssl_certificate_by_lua*, ssl_session_fetch_by_lua*, ssl_session_store_by_lua*&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;Unconditionally sets a key-value pair into the shm-based dictionary &lt;a href="#ngxshareddict"&gt;ngx.shared.DICT&lt;/a&gt;. Returns three values:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;success&lt;/code&gt;: boolean value to indicate whether the key-value pair is stored or not.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;err&lt;/code&gt;: textual error message, can be &lt;code&gt;"no memory"&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;forcible&lt;/code&gt;: a boolean value to indicate whether other valid items have been removed forcibly when out of storage in the shared memory zone.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;The &lt;code&gt;value&lt;/code&gt; argument inserted can be Lua booleans, numbers, strings, or &lt;code&gt;nil&lt;/code&gt;. Their value type will also be stored into the dictionary and the same data type can be retrieved later via the &lt;a href="#ngxshareddictget"&gt;get&lt;/a&gt; method.&lt;/p&gt;
&lt;p&gt;The optional &lt;code&gt;exptime&lt;/code&gt; argument specifies expiration time (in seconds) for the inserted key-value pair. The time resolution is &lt;code&gt;0.001&lt;/code&gt; seconds. If the &lt;code&gt;exptime&lt;/code&gt; takes the value &lt;code&gt;0&lt;/code&gt; (which is the default), then the item will never expire.&lt;/p&gt;
&lt;p&gt;The optional &lt;code&gt;flags&lt;/code&gt; argument specifies a user flags value associated with the entry to be stored. It can also be retrieved later with the value. The user flags is stored as an unsigned 32-bit integer internally. Defaults to &lt;code&gt;0&lt;/code&gt;. The user flags argument was first introduced in the &lt;code&gt;v0.5.0rc2&lt;/code&gt; release.&lt;/p&gt;
&lt;p&gt;When it fails to allocate memory for the current key-value item, then &lt;code&gt;set&lt;/code&gt; will try removing existing items in the storage according to the Least-Recently Used (LRU) algorithm. Note that, LRU takes priority over expiration time here. If up to tens of existing items have been removed and the storage left is still insufficient (either due to the total capacity limit specified by &lt;a href="#lua_shared_dict"&gt;lua_shared_dict&lt;/a&gt; or memory segmentation), then the &lt;code&gt;err&lt;/code&gt; return value will be &lt;code&gt;no memory&lt;/code&gt; and &lt;code&gt;success&lt;/code&gt; will be &lt;code&gt;false&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;If this method succeeds in storing the current item by forcibly removing other not-yet-expired items in the dictionary via LRU, the &lt;code&gt;forcible&lt;/code&gt; return value will be &lt;code&gt;true&lt;/code&gt;. If it stores the item without forcibly removing other valid items, then the return value &lt;code&gt;forcible&lt;/code&gt; will be &lt;code&gt;false&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;The first argument to this method must be the dictionary object itself, for example,&lt;/p&gt;
&lt;div class="highlight highlight-source-lua"&gt;&lt;pre&gt; &lt;span class="pl-k"&gt;local&lt;/span&gt; cats &lt;span class="pl-k"&gt;=&lt;/span&gt; ngx.&lt;span class="pl-smi"&gt;shared&lt;/span&gt;.&lt;span class="pl-smi"&gt;cats&lt;/span&gt;
 &lt;span class="pl-k"&gt;local&lt;/span&gt; succ, err, forcible &lt;span class="pl-k"&gt;=&lt;/span&gt; cats.&lt;span class="pl-c1"&gt;set&lt;/span&gt;(cats, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;Marry&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;it is a nice cat!&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;or use Lua's syntactic sugar for method calls:&lt;/p&gt;
&lt;div class="highlight highlight-source-lua"&gt;&lt;pre&gt; &lt;span class="pl-k"&gt;local&lt;/span&gt; cats &lt;span class="pl-k"&gt;=&lt;/span&gt; ngx.&lt;span class="pl-smi"&gt;shared&lt;/span&gt;.&lt;span class="pl-smi"&gt;cats&lt;/span&gt;
 &lt;span class="pl-k"&gt;local&lt;/span&gt; succ, err, forcible &lt;span class="pl-k"&gt;=&lt;/span&gt; cats:&lt;span class="pl-c1"&gt;set&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;Marry&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;it is a nice cat!&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;These two forms are fundamentally equivalent.&lt;/p&gt;
&lt;p&gt;This feature was first introduced in the &lt;code&gt;v0.3.1rc22&lt;/code&gt; release.&lt;/p&gt;
&lt;p&gt;Please note that while internally the key-value pair is set atomically, the atomicity does not go across the method call boundary.&lt;/p&gt;
&lt;p&gt;See also &lt;a href="#ngxshareddict"&gt;ngx.shared.DICT&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;&lt;a href="#nginx-api-for-lua"&gt;Back to TOC&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-ngxshareddictsafe_set" class="anchor" aria-hidden="true" href="#ngxshareddictsafe_set"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;ngx.shared.DICT.safe_set&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;syntax:&lt;/strong&gt; &lt;em&gt;ok, err = ngx.shared.DICT:safe_set(key, value, exptime?, flags?)&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;context:&lt;/strong&gt; &lt;em&gt;init_by_lua*, set_by_lua*, rewrite_by_lua*, access_by_lua*, content_by_lua*, header_filter_by_lua*, body_filter_by_lua*, log_by_lua*, ngx.timer.*, balancer_by_lua*, ssl_certificate_by_lua*, ssl_session_fetch_by_lua*, ssl_session_store_by_lua*&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;Similar to the &lt;a href="#ngxshareddictset"&gt;set&lt;/a&gt; method, but never overrides the (least recently used) unexpired items in the store when running out of storage in the shared memory zone. In this case, it will immediately return &lt;code&gt;nil&lt;/code&gt; and the string "no memory".&lt;/p&gt;
&lt;p&gt;This feature was first introduced in the &lt;code&gt;v0.7.18&lt;/code&gt; release.&lt;/p&gt;
&lt;p&gt;See also &lt;a href="#ngxshareddict"&gt;ngx.shared.DICT&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;&lt;a href="#nginx-api-for-lua"&gt;Back to TOC&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-ngxshareddictadd" class="anchor" aria-hidden="true" href="#ngxshareddictadd"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;ngx.shared.DICT.add&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;syntax:&lt;/strong&gt; &lt;em&gt;success, err, forcible = ngx.shared.DICT:add(key, value, exptime?, flags?)&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;context:&lt;/strong&gt; &lt;em&gt;init_by_lua*, set_by_lua*, rewrite_by_lua*, access_by_lua*, content_by_lua*, header_filter_by_lua*, body_filter_by_lua*, log_by_lua*, ngx.timer.*, balancer_by_lua*, ssl_certificate_by_lua*, ssl_session_fetch_by_lua*, ssl_session_store_by_lua*&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;Just like the &lt;a href="#ngxshareddictset"&gt;set&lt;/a&gt; method, but only stores the key-value pair into the dictionary &lt;a href="#ngxshareddict"&gt;ngx.shared.DICT&lt;/a&gt; if the key does &lt;em&gt;not&lt;/em&gt; exist.&lt;/p&gt;
&lt;p&gt;If the &lt;code&gt;key&lt;/code&gt; argument already exists in the dictionary (and not expired for sure), the &lt;code&gt;success&lt;/code&gt; return value will be &lt;code&gt;false&lt;/code&gt; and the &lt;code&gt;err&lt;/code&gt; return value will be &lt;code&gt;"exists"&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;This feature was first introduced in the &lt;code&gt;v0.3.1rc22&lt;/code&gt; release.&lt;/p&gt;
&lt;p&gt;See also &lt;a href="#ngxshareddict"&gt;ngx.shared.DICT&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;&lt;a href="#nginx-api-for-lua"&gt;Back to TOC&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-ngxshareddictsafe_add" class="anchor" aria-hidden="true" href="#ngxshareddictsafe_add"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;ngx.shared.DICT.safe_add&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;syntax:&lt;/strong&gt; &lt;em&gt;ok, err = ngx.shared.DICT:safe_add(key, value, exptime?, flags?)&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;context:&lt;/strong&gt; &lt;em&gt;init_by_lua*, set_by_lua*, rewrite_by_lua*, access_by_lua*, content_by_lua*, header_filter_by_lua*, body_filter_by_lua*, log_by_lua*, ngx.timer.*, balancer_by_lua*, ssl_certificate_by_lua*, ssl_session_fetch_by_lua*, ssl_session_store_by_lua*&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;Similar to the &lt;a href="#ngxshareddictadd"&gt;add&lt;/a&gt; method, but never overrides the (least recently used) unexpired items in the store when running out of storage in the shared memory zone. In this case, it will immediately return &lt;code&gt;nil&lt;/code&gt; and the string "no memory".&lt;/p&gt;
&lt;p&gt;This feature was first introduced in the &lt;code&gt;v0.7.18&lt;/code&gt; release.&lt;/p&gt;
&lt;p&gt;See also &lt;a href="#ngxshareddict"&gt;ngx.shared.DICT&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;&lt;a href="#nginx-api-for-lua"&gt;Back to TOC&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-ngxshareddictreplace" class="anchor" aria-hidden="true" href="#ngxshareddictreplace"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;ngx.shared.DICT.replace&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;syntax:&lt;/strong&gt; &lt;em&gt;success, err, forcible = ngx.shared.DICT:replace(key, value, exptime?, flags?)&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;context:&lt;/strong&gt; &lt;em&gt;init_by_lua*, set_by_lua*, rewrite_by_lua*, access_by_lua*, content_by_lua*, header_filter_by_lua*, body_filter_by_lua*, log_by_lua*, ngx.timer.*, balancer_by_lua*, ssl_certificate_by_lua*, ssl_session_fetch_by_lua*, ssl_session_store_by_lua*&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;Just like the &lt;a href="#ngxshareddictset"&gt;set&lt;/a&gt; method, but only stores the key-value pair into the dictionary &lt;a href="#ngxshareddict"&gt;ngx.shared.DICT&lt;/a&gt; if the key &lt;em&gt;does&lt;/em&gt; exist.&lt;/p&gt;
&lt;p&gt;If the &lt;code&gt;key&lt;/code&gt; argument does &lt;em&gt;not&lt;/em&gt; exist in the dictionary (or expired already), the &lt;code&gt;success&lt;/code&gt; return value will be &lt;code&gt;false&lt;/code&gt; and the &lt;code&gt;err&lt;/code&gt; return value will be &lt;code&gt;"not found"&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;This feature was first introduced in the &lt;code&gt;v0.3.1rc22&lt;/code&gt; release.&lt;/p&gt;
&lt;p&gt;See also &lt;a href="#ngxshareddict"&gt;ngx.shared.DICT&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;&lt;a href="#nginx-api-for-lua"&gt;Back to TOC&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-ngxshareddictdelete" class="anchor" aria-hidden="true" href="#ngxshareddictdelete"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;ngx.shared.DICT.delete&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;syntax:&lt;/strong&gt; &lt;em&gt;ngx.shared.DICT:delete(key)&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;context:&lt;/strong&gt; &lt;em&gt;init_by_lua*, set_by_lua*, rewrite_by_lua*, access_by_lua*, content_by_lua*, header_filter_by_lua*, body_filter_by_lua*, log_by_lua*, ngx.timer.*, balancer_by_lua*, ssl_certificate_by_lua*, ssl_session_fetch_by_lua*, ssl_session_store_by_lua*&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;Unconditionally removes the key-value pair from the shm-based dictionary &lt;a href="#ngxshareddict"&gt;ngx.shared.DICT&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;It is equivalent to &lt;code&gt;ngx.shared.DICT:set(key, nil)&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;This feature was first introduced in the &lt;code&gt;v0.3.1rc22&lt;/code&gt; release.&lt;/p&gt;
&lt;p&gt;See also &lt;a href="#ngxshareddict"&gt;ngx.shared.DICT&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;&lt;a href="#nginx-api-for-lua"&gt;Back to TOC&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-ngxshareddictincr" class="anchor" aria-hidden="true" href="#ngxshareddictincr"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;ngx.shared.DICT.incr&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;syntax:&lt;/strong&gt; &lt;em&gt;newval, err, forcible? = ngx.shared.DICT:incr(key, value, init?, init_ttl?)&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;context:&lt;/strong&gt; &lt;em&gt;init_by_lua*, set_by_lua*, rewrite_by_lua*, access_by_lua*, content_by_lua*, header_filter_by_lua*, body_filter_by_lua*, log_by_lua*, ngx.timer.*, balancer_by_lua*, ssl_certificate_by_lua*, ssl_session_fetch_by_lua*, ssl_session_store_by_lua*&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;optional requirement:&lt;/strong&gt; &lt;code&gt;resty.core.shdict&lt;/code&gt; or &lt;code&gt;resty.core&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Increments the (numerical) value for &lt;code&gt;key&lt;/code&gt; in the shm-based dictionary &lt;a href="#ngxshareddict"&gt;ngx.shared.DICT&lt;/a&gt; by the step value &lt;code&gt;value&lt;/code&gt;. Returns the new resulting number if the operation is successfully completed or &lt;code&gt;nil&lt;/code&gt; and an error message otherwise.&lt;/p&gt;
&lt;p&gt;When the key does not exist or has already expired in the shared dictionary,&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;if the &lt;code&gt;init&lt;/code&gt; argument is not specified or takes the value &lt;code&gt;nil&lt;/code&gt;, this method will return &lt;code&gt;nil&lt;/code&gt; and the error string &lt;code&gt;"not found"&lt;/code&gt;, or&lt;/li&gt;
&lt;li&gt;if the &lt;code&gt;init&lt;/code&gt; argument takes a number value, this method will create a new &lt;code&gt;key&lt;/code&gt; with the value &lt;code&gt;init + value&lt;/code&gt;.&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;Like the &lt;a href="#ngxshareddictadd"&gt;add&lt;/a&gt; method, it also overrides the (least recently used) unexpired items in the store when running out of storage in the shared memory zone.&lt;/p&gt;
&lt;p&gt;The optional &lt;code&gt;init_ttl&lt;/code&gt; argument specifies expiration time (in seconds) of the value when it is initialized via the &lt;code&gt;init&lt;/code&gt; argument. The time resolution is &lt;code&gt;0.001&lt;/code&gt; seconds. If &lt;code&gt;init_ttl&lt;/code&gt; takes the value &lt;code&gt;0&lt;/code&gt; (which is the default), then the item will never expire. This argument cannot be provided without providing the &lt;code&gt;init&lt;/code&gt; argument as well, and has no effect if the value already exists (e.g., if it was previously inserted via &lt;a href="#ngxshareddictset"&gt;set&lt;/a&gt; or the likes).&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Note:&lt;/strong&gt; Usage of the &lt;code&gt;init_ttl&lt;/code&gt; argument requires the &lt;code&gt;resty.core.shdict&lt;/code&gt; or &lt;code&gt;resty.core&lt;/code&gt; modules from the &lt;a href="https://github.com/openresty/lua-resty-core"&gt;lua-resty-core&lt;/a&gt; library. Example:&lt;/p&gt;
&lt;div class="highlight highlight-source-lua"&gt;&lt;pre&gt; &lt;span class="pl-c1"&gt;require&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;resty.core&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;

 &lt;span class="pl-k"&gt;local&lt;/span&gt; cats &lt;span class="pl-k"&gt;=&lt;/span&gt; ngx.&lt;span class="pl-smi"&gt;shared&lt;/span&gt;.&lt;span class="pl-smi"&gt;cats&lt;/span&gt;
 &lt;span class="pl-k"&gt;local&lt;/span&gt; newval, err &lt;span class="pl-k"&gt;=&lt;/span&gt; cats:&lt;span class="pl-c1"&gt;incr&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;black_cats&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-c1"&gt;1&lt;/span&gt;, &lt;span class="pl-c1"&gt;0&lt;/span&gt;, &lt;span class="pl-c1"&gt;0.1&lt;/span&gt;)

 &lt;span class="pl-c1"&gt;print&lt;/span&gt;(newval) &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;--&lt;/span&gt; 1&lt;/span&gt;

 ngx.&lt;span class="pl-c1"&gt;sleep&lt;/span&gt;(&lt;span class="pl-c1"&gt;0.2&lt;/span&gt;)

 &lt;span class="pl-k"&gt;local&lt;/span&gt; val, err &lt;span class="pl-k"&gt;=&lt;/span&gt; cats:&lt;span class="pl-c1"&gt;get&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;black_cats&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
 &lt;span class="pl-c1"&gt;print&lt;/span&gt;(val) &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;--&lt;/span&gt; nil&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;The &lt;code&gt;forcible&lt;/code&gt; return value will always be &lt;code&gt;nil&lt;/code&gt; when the &lt;code&gt;init&lt;/code&gt; argument is not specified.&lt;/p&gt;
&lt;p&gt;If this method succeeds in storing the current item by forcibly removing other not-yet-expired items in the dictionary via LRU, the &lt;code&gt;forcible&lt;/code&gt; return value will be &lt;code&gt;true&lt;/code&gt;. If it stores the item without forcibly removing other valid items, then the return value &lt;code&gt;forcible&lt;/code&gt; will be &lt;code&gt;false&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;If the original value is not a valid Lua number in the dictionary, it will return &lt;code&gt;nil&lt;/code&gt; and &lt;code&gt;"not a number"&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;The &lt;code&gt;value&lt;/code&gt; argument and &lt;code&gt;init&lt;/code&gt; argument can be any valid Lua numbers, like negative numbers or floating-point numbers.&lt;/p&gt;
&lt;p&gt;This method was first introduced in the &lt;code&gt;v0.3.1rc22&lt;/code&gt; release.&lt;/p&gt;
&lt;p&gt;The optional &lt;code&gt;init&lt;/code&gt; parameter was first added in the &lt;code&gt;v0.10.6&lt;/code&gt; release.&lt;/p&gt;
&lt;p&gt;The optional &lt;code&gt;init_ttl&lt;/code&gt; parameter was introduced in the &lt;code&gt;v0.10.12rc2&lt;/code&gt; release.&lt;/p&gt;
&lt;p&gt;See also &lt;a href="#ngxshareddict"&gt;ngx.shared.DICT&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;&lt;a href="#nginx-api-for-lua"&gt;Back to TOC&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-ngxshareddictlpush" class="anchor" aria-hidden="true" href="#ngxshareddictlpush"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;ngx.shared.DICT.lpush&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;syntax:&lt;/strong&gt; &lt;em&gt;length, err = ngx.shared.DICT:lpush(key, value)&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;context:&lt;/strong&gt; &lt;em&gt;init_by_lua*, set_by_lua*, rewrite_by_lua*, access_by_lua*, content_by_lua*, header_filter_by_lua*, body_filter_by_lua*, log_by_lua*, ngx.timer.*, balancer_by_lua*, ssl_certificate_by_lua*, ssl_session_fetch_by_lua*, ssl_session_store_by_lua*&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;Inserts the specified (numerical or string) &lt;code&gt;value&lt;/code&gt; at the head of the list named &lt;code&gt;key&lt;/code&gt; in the shm-based dictionary &lt;a href="#ngxshareddict"&gt;ngx.shared.DICT&lt;/a&gt;. Returns the number of elements in the list after the push operation.&lt;/p&gt;
&lt;p&gt;If &lt;code&gt;key&lt;/code&gt; does not exist, it is created as an empty list before performing the push operation. When the &lt;code&gt;key&lt;/code&gt; already takes a value that is not a list, it will return &lt;code&gt;nil&lt;/code&gt; and &lt;code&gt;"value not a list"&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;It never overrides the (least recently used) unexpired items in the store when running out of storage in the shared memory zone. In this case, it will immediately return &lt;code&gt;nil&lt;/code&gt; and the string "no memory".&lt;/p&gt;
&lt;p&gt;This feature was first introduced in the &lt;code&gt;v0.10.6&lt;/code&gt; release.&lt;/p&gt;
&lt;p&gt;See also &lt;a href="#ngxshareddict"&gt;ngx.shared.DICT&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;&lt;a href="#nginx-api-for-lua"&gt;Back to TOC&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-ngxshareddictrpush" class="anchor" aria-hidden="true" href="#ngxshareddictrpush"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;ngx.shared.DICT.rpush&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;syntax:&lt;/strong&gt; &lt;em&gt;length, err = ngx.shared.DICT:rpush(key, value)&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;context:&lt;/strong&gt; &lt;em&gt;init_by_lua*, set_by_lua*, rewrite_by_lua*, access_by_lua*, content_by_lua*, header_filter_by_lua*, body_filter_by_lua*, log_by_lua*, ngx.timer.*, balancer_by_lua*, ssl_certificate_by_lua*, ssl_session_fetch_by_lua*, ssl_session_store_by_lua*&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;Similar to the &lt;a href="#ngxshareddictlpush"&gt;lpush&lt;/a&gt; method, but inserts the specified (numerical or string) &lt;code&gt;value&lt;/code&gt; at the tail of the list named &lt;code&gt;key&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;This feature was first introduced in the &lt;code&gt;v0.10.6&lt;/code&gt; release.&lt;/p&gt;
&lt;p&gt;See also &lt;a href="#ngxshareddict"&gt;ngx.shared.DICT&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;&lt;a href="#nginx-api-for-lua"&gt;Back to TOC&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-ngxshareddictlpop" class="anchor" aria-hidden="true" href="#ngxshareddictlpop"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;ngx.shared.DICT.lpop&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;syntax:&lt;/strong&gt; &lt;em&gt;val, err = ngx.shared.DICT:lpop(key)&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;context:&lt;/strong&gt; &lt;em&gt;init_by_lua*, set_by_lua*, rewrite_by_lua*, access_by_lua*, content_by_lua*, header_filter_by_lua*, body_filter_by_lua*, log_by_lua*, ngx.timer.*, balancer_by_lua*, ssl_certificate_by_lua*, ssl_session_fetch_by_lua*, ssl_session_store_by_lua*&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;Removes and returns the first element of the list named &lt;code&gt;key&lt;/code&gt; in the shm-based dictionary &lt;a href="#ngxshareddict"&gt;ngx.shared.DICT&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;If &lt;code&gt;key&lt;/code&gt; does not exist, it will return &lt;code&gt;nil&lt;/code&gt;. When the &lt;code&gt;key&lt;/code&gt; already takes a value that is not a list, it will return &lt;code&gt;nil&lt;/code&gt; and &lt;code&gt;"value not a list"&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;This feature was first introduced in the &lt;code&gt;v0.10.6&lt;/code&gt; release.&lt;/p&gt;
&lt;p&gt;See also &lt;a href="#ngxshareddict"&gt;ngx.shared.DICT&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;&lt;a href="#nginx-api-for-lua"&gt;Back to TOC&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-ngxshareddictrpop" class="anchor" aria-hidden="true" href="#ngxshareddictrpop"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;ngx.shared.DICT.rpop&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;syntax:&lt;/strong&gt; &lt;em&gt;val, err = ngx.shared.DICT:rpop(key)&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;context:&lt;/strong&gt; &lt;em&gt;init_by_lua*, set_by_lua*, rewrite_by_lua*, access_by_lua*, content_by_lua*, header_filter_by_lua*, body_filter_by_lua*, log_by_lua*, ngx.timer.*, balancer_by_lua*, ssl_certificate_by_lua*, ssl_session_fetch_by_lua*, ssl_session_store_by_lua*&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;Removes and returns the last element of the list named &lt;code&gt;key&lt;/code&gt; in the shm-based dictionary &lt;a href="#ngxshareddict"&gt;ngx.shared.DICT&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;If &lt;code&gt;key&lt;/code&gt; does not exist, it will return &lt;code&gt;nil&lt;/code&gt;. When the &lt;code&gt;key&lt;/code&gt; already takes a value that is not a list, it will return &lt;code&gt;nil&lt;/code&gt; and &lt;code&gt;"value not a list"&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;This feature was first introduced in the &lt;code&gt;v0.10.6&lt;/code&gt; release.&lt;/p&gt;
&lt;p&gt;See also &lt;a href="#ngxshareddict"&gt;ngx.shared.DICT&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;&lt;a href="#nginx-api-for-lua"&gt;Back to TOC&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-ngxshareddictllen" class="anchor" aria-hidden="true" href="#ngxshareddictllen"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;ngx.shared.DICT.llen&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;syntax:&lt;/strong&gt; &lt;em&gt;len, err = ngx.shared.DICT:llen(key)&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;context:&lt;/strong&gt; &lt;em&gt;init_by_lua*, set_by_lua*, rewrite_by_lua*, access_by_lua*, content_by_lua*, header_filter_by_lua*, body_filter_by_lua*, log_by_lua*, ngx.timer.*, balancer_by_lua*, ssl_certificate_by_lua*, ssl_session_fetch_by_lua*, ssl_session_store_by_lua*&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;Returns the number of elements in the list named &lt;code&gt;key&lt;/code&gt; in the shm-based dictionary &lt;a href="#ngxshareddict"&gt;ngx.shared.DICT&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;If key does not exist, it is interpreted as an empty list and 0 is returned. When the &lt;code&gt;key&lt;/code&gt; already takes a value that is not a list, it will return &lt;code&gt;nil&lt;/code&gt; and &lt;code&gt;"value not a list"&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;This feature was first introduced in the &lt;code&gt;v0.10.6&lt;/code&gt; release.&lt;/p&gt;
&lt;p&gt;See also &lt;a href="#ngxshareddict"&gt;ngx.shared.DICT&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;&lt;a href="#nginx-api-for-lua"&gt;Back to TOC&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-ngxshareddictttl" class="anchor" aria-hidden="true" href="#ngxshareddictttl"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;ngx.shared.DICT.ttl&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;syntax:&lt;/strong&gt; &lt;em&gt;ttl, err = ngx.shared.DICT:ttl(key)&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;context:&lt;/strong&gt; &lt;em&gt;init_by_lua*, set_by_lua*, rewrite_by_lua*, access_by_lua*, content_by_lua*, header_filter_by_lua*, body_filter_by_lua*, log_by_lua*, ngx.timer.*, balancer_by_lua*, ssl_certificate_by_lua*, ssl_session_fetch_by_lua*, ssl_session_store_by_lua*&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;requires:&lt;/strong&gt; &lt;code&gt;resty.core.shdict&lt;/code&gt; or &lt;code&gt;resty.core&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Retrieves the remaining TTL (time-to-live in seconds) of a key-value pair in the shm-based dictionary &lt;a href="#ngxshareddict"&gt;ngx.shared.DICT&lt;/a&gt;. Returns the TTL as a number if the operation is successfully completed or &lt;code&gt;nil&lt;/code&gt; and an error message otherwise.&lt;/p&gt;
&lt;p&gt;If the key does not exist (or has already expired), this method will return &lt;code&gt;nil&lt;/code&gt; and the error string &lt;code&gt;"not found"&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;The TTL is originally determined by the &lt;code&gt;exptime&lt;/code&gt; argument of the &lt;a href="#ngxshareddictset"&gt;set&lt;/a&gt;, &lt;a href="#ngxshareddictadd"&gt;add&lt;/a&gt;, &lt;a href="#ngxshareddictreplace"&gt;replace&lt;/a&gt; (and the likes) methods. It has a time resolution of &lt;code&gt;0.001&lt;/code&gt; seconds. A value of &lt;code&gt;0&lt;/code&gt; means that the item will never expire.&lt;/p&gt;
&lt;p&gt;Example:&lt;/p&gt;
&lt;div class="highlight highlight-source-lua"&gt;&lt;pre&gt; &lt;span class="pl-c1"&gt;require&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;resty.core&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;

 &lt;span class="pl-k"&gt;local&lt;/span&gt; cats &lt;span class="pl-k"&gt;=&lt;/span&gt; ngx.&lt;span class="pl-smi"&gt;shared&lt;/span&gt;.&lt;span class="pl-smi"&gt;cats&lt;/span&gt;
 &lt;span class="pl-k"&gt;local&lt;/span&gt; succ, err &lt;span class="pl-k"&gt;=&lt;/span&gt; cats:&lt;span class="pl-c1"&gt;set&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;Marry&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;a nice cat&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-c1"&gt;0.5&lt;/span&gt;)

 ngx.&lt;span class="pl-c1"&gt;sleep&lt;/span&gt;(&lt;span class="pl-c1"&gt;0.2&lt;/span&gt;)

 &lt;span class="pl-k"&gt;local&lt;/span&gt; ttl, err &lt;span class="pl-k"&gt;=&lt;/span&gt; cats:&lt;span class="pl-c1"&gt;ttl&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;Marry&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
 ngx.&lt;span class="pl-c1"&gt;say&lt;/span&gt;(ttl) &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;--&lt;/span&gt; 0.3&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;This feature was first introduced in the &lt;code&gt;v0.10.11&lt;/code&gt; release.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Note:&lt;/strong&gt; This method requires the &lt;code&gt;resty.core.shdict&lt;/code&gt; or &lt;code&gt;resty.core&lt;/code&gt; modules from the &lt;a href="https://github.com/openresty/lua-resty-core"&gt;lua-resty-core&lt;/a&gt; library.&lt;/p&gt;
&lt;p&gt;See also &lt;a href="#ngxshareddict"&gt;ngx.shared.DICT&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;&lt;a href="#nginx-api-for-lua"&gt;Back to TOC&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-ngxshareddictexpire" class="anchor" aria-hidden="true" href="#ngxshareddictexpire"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;ngx.shared.DICT.expire&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;syntax:&lt;/strong&gt; &lt;em&gt;success, err = ngx.shared.DICT:expire(key, exptime)&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;context:&lt;/strong&gt; &lt;em&gt;init_by_lua*, set_by_lua*, rewrite_by_lua*, access_by_lua*, content_by_lua*, header_filter_by_lua*, body_filter_by_lua*, log_by_lua*, ngx.timer.*, balancer_by_lua*, ssl_certificate_by_lua*, ssl_session_fetch_by_lua*, ssl_session_store_by_lua*&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;requires:&lt;/strong&gt; &lt;code&gt;resty.core.shdict&lt;/code&gt; or &lt;code&gt;resty.core&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Updates the &lt;code&gt;exptime&lt;/code&gt; (in second) of a key-value pair in the shm-based dictionary &lt;a href="#ngxshareddict"&gt;ngx.shared.DICT&lt;/a&gt;. Returns a boolean indicating success if the operation completes or &lt;code&gt;nil&lt;/code&gt; and an error message otherwise.&lt;/p&gt;
&lt;p&gt;If the key does not exist, this method will return &lt;code&gt;nil&lt;/code&gt; and the error string &lt;code&gt;"not found"&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;The &lt;code&gt;exptime&lt;/code&gt; argument has a resolution of &lt;code&gt;0.001&lt;/code&gt; seconds. If &lt;code&gt;exptime&lt;/code&gt; is &lt;code&gt;0&lt;/code&gt;, then the item will never expire.&lt;/p&gt;
&lt;p&gt;Example:&lt;/p&gt;
&lt;div class="highlight highlight-source-lua"&gt;&lt;pre&gt; &lt;span class="pl-c1"&gt;require&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;resty.core&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;

 &lt;span class="pl-k"&gt;local&lt;/span&gt; cats &lt;span class="pl-k"&gt;=&lt;/span&gt; ngx.&lt;span class="pl-smi"&gt;shared&lt;/span&gt;.&lt;span class="pl-smi"&gt;cats&lt;/span&gt;
 &lt;span class="pl-k"&gt;local&lt;/span&gt; succ, err &lt;span class="pl-k"&gt;=&lt;/span&gt; cats:&lt;span class="pl-c1"&gt;set&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;Marry&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;a nice cat&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-c1"&gt;0.1&lt;/span&gt;)

 succ, err &lt;span class="pl-k"&gt;=&lt;/span&gt; cats:&lt;span class="pl-c1"&gt;expire&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;Marry&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-c1"&gt;0.5&lt;/span&gt;)

 ngx.&lt;span class="pl-c1"&gt;sleep&lt;/span&gt;(&lt;span class="pl-c1"&gt;0.2&lt;/span&gt;)

 &lt;span class="pl-k"&gt;local&lt;/span&gt; val, err &lt;span class="pl-k"&gt;=&lt;/span&gt; cats:&lt;span class="pl-c1"&gt;get&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;Marry&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
 ngx.&lt;span class="pl-c1"&gt;say&lt;/span&gt;(val) &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;--&lt;/span&gt; "a nice cat"&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;This feature was first introduced in the &lt;code&gt;v0.10.11&lt;/code&gt; release.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Note:&lt;/strong&gt; This method requires the &lt;code&gt;resty.core.shdict&lt;/code&gt; or &lt;code&gt;resty.core&lt;/code&gt; modules from the &lt;a href="https://github.com/openresty/lua-resty-core"&gt;lua-resty-core&lt;/a&gt; library.&lt;/p&gt;
&lt;p&gt;See also &lt;a href="#ngxshareddict"&gt;ngx.shared.DICT&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;&lt;a href="#nginx-api-for-lua"&gt;Back to TOC&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-ngxshareddictflush_all" class="anchor" aria-hidden="true" href="#ngxshareddictflush_all"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;ngx.shared.DICT.flush_all&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;syntax:&lt;/strong&gt; &lt;em&gt;ngx.shared.DICT:flush_all()&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;context:&lt;/strong&gt; &lt;em&gt;init_by_lua*, set_by_lua*, rewrite_by_lua*, access_by_lua*, content_by_lua*, header_filter_by_lua*, body_filter_by_lua*, log_by_lua*, ngx.timer.*, balancer_by_lua*, ssl_certificate_by_lua*, ssl_session_fetch_by_lua*, ssl_session_store_by_lua*&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;Flushes out all the items in the dictionary. This method does not actuall free up all the memory blocks in the dictionary but just marks all the existing items as expired.&lt;/p&gt;
&lt;p&gt;This feature was first introduced in the &lt;code&gt;v0.5.0rc17&lt;/code&gt; release.&lt;/p&gt;
&lt;p&gt;See also &lt;a href="#ngxshareddictflush_expired"&gt;ngx.shared.DICT.flush_expired&lt;/a&gt; and &lt;a href="#ngxshareddict"&gt;ngx.shared.DICT&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;&lt;a href="#nginx-api-for-lua"&gt;Back to TOC&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-ngxshareddictflush_expired" class="anchor" aria-hidden="true" href="#ngxshareddictflush_expired"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;ngx.shared.DICT.flush_expired&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;syntax:&lt;/strong&gt; &lt;em&gt;flushed = ngx.shared.DICT:flush_expired(max_count?)&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;context:&lt;/strong&gt; &lt;em&gt;init_by_lua*, set_by_lua*, rewrite_by_lua*, access_by_lua*, content_by_lua*, header_filter_by_lua*, body_filter_by_lua*, log_by_lua*, ngx.timer.*, balancer_by_lua*, ssl_certificate_by_lua*, ssl_session_fetch_by_lua*, ssl_session_store_by_lua*&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;Flushes out the expired items in the dictionary, up to the maximal number specified by the optional &lt;code&gt;max_count&lt;/code&gt; argument. When the &lt;code&gt;max_count&lt;/code&gt; argument is given &lt;code&gt;0&lt;/code&gt; or not given at all, then it means unlimited. Returns the number of items that have actually been flushed.&lt;/p&gt;
&lt;p&gt;Unlike the &lt;a href="#ngxshareddictflush_all"&gt;flush_all&lt;/a&gt; method, this method actually frees up the memory used by the expired items.&lt;/p&gt;
&lt;p&gt;This feature was first introduced in the &lt;code&gt;v0.6.3&lt;/code&gt; release.&lt;/p&gt;
&lt;p&gt;See also &lt;a href="#ngxshareddictflush_all"&gt;ngx.shared.DICT.flush_all&lt;/a&gt; and &lt;a href="#ngxshareddict"&gt;ngx.shared.DICT&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;&lt;a href="#nginx-api-for-lua"&gt;Back to TOC&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-ngxshareddictget_keys" class="anchor" aria-hidden="true" href="#ngxshareddictget_keys"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;ngx.shared.DICT.get_keys&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;syntax:&lt;/strong&gt; &lt;em&gt;keys = ngx.shared.DICT:get_keys(max_count?)&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;context:&lt;/strong&gt; &lt;em&gt;init_by_lua*, set_by_lua*, rewrite_by_lua*, access_by_lua*, content_by_lua*, header_filter_by_lua*, body_filter_by_lua*, log_by_lua*, ngx.timer.*, balancer_by_lua*, ssl_certificate_by_lua*, ssl_session_fetch_by_lua*, ssl_session_store_by_lua*&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;Fetch a list of the keys from the dictionary, up to &lt;code&gt;&amp;lt;max_count&amp;gt;&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;By default, only the first 1024 keys (if any) are returned. When the &lt;code&gt;&amp;lt;max_count&amp;gt;&lt;/code&gt; argument is given the value &lt;code&gt;0&lt;/code&gt;, then all the keys will be returned even there is more than 1024 keys in the dictionary.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;CAUTION&lt;/strong&gt; Avoid calling this method on dictionaries with a very large number of keys as it may lock the dictionary for significant amount of time and block Nginx worker processes trying to access the dictionary.&lt;/p&gt;
&lt;p&gt;This feature was first introduced in the &lt;code&gt;v0.7.3&lt;/code&gt; release.&lt;/p&gt;
&lt;p&gt;&lt;a href="#nginx-api-for-lua"&gt;Back to TOC&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-ngxshareddictcapacity" class="anchor" aria-hidden="true" href="#ngxshareddictcapacity"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;ngx.shared.DICT.capacity&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;syntax:&lt;/strong&gt; &lt;em&gt;capacity_bytes = ngx.shared.DICT:capacity()&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;context:&lt;/strong&gt; &lt;em&gt;init_by_lua*, set_by_lua*, rewrite_by_lua*, access_by_lua*, content_by_lua*, header_filter_by_lua*, body_filter_by_lua*, log_by_lua*, ngx.timer.*, balancer_by_lua*, ssl_certificate_by_lua*, ssl_session_fetch_by_lua*, ssl_session_store_by_lua*&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;requires:&lt;/strong&gt; &lt;code&gt;resty.core.shdict&lt;/code&gt; or &lt;code&gt;resty.core&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Retrieves the capacity in bytes for the shm-based dictionary &lt;a href="#ngxshareddict"&gt;ngx.shared.DICT&lt;/a&gt; declared with
the &lt;a href="#lua_shared_dict"&gt;lua_shared_dict&lt;/a&gt; directive.&lt;/p&gt;
&lt;p&gt;Example:&lt;/p&gt;
&lt;div class="highlight highlight-source-lua"&gt;&lt;pre&gt; &lt;span class="pl-c1"&gt;require&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;resty.core.shdict&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;

 &lt;span class="pl-k"&gt;local&lt;/span&gt; cats &lt;span class="pl-k"&gt;=&lt;/span&gt; ngx.&lt;span class="pl-smi"&gt;shared&lt;/span&gt;.&lt;span class="pl-smi"&gt;cats&lt;/span&gt;
 &lt;span class="pl-k"&gt;local&lt;/span&gt; capacity_bytes &lt;span class="pl-k"&gt;=&lt;/span&gt; cats:&lt;span class="pl-c1"&gt;capacity&lt;/span&gt;()&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;This feature was first introduced in the &lt;code&gt;v0.10.11&lt;/code&gt; release.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Note:&lt;/strong&gt; This method requires the &lt;code&gt;resty.core.shdict&lt;/code&gt; or &lt;code&gt;resty.core&lt;/code&gt; modules from the &lt;a href="https://github.com/openresty/lua-resty-core"&gt;lua-resty-core&lt;/a&gt; library.&lt;/p&gt;
&lt;p&gt;This feature requires at least Nginx core version &lt;code&gt;0.7.3&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;See also &lt;a href="#ngxshareddict"&gt;ngx.shared.DICT&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;&lt;a href="#nginx-api-for-lua"&gt;Back to TOC&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-ngxshareddictfree_space" class="anchor" aria-hidden="true" href="#ngxshareddictfree_space"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;ngx.shared.DICT.free_space&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;syntax:&lt;/strong&gt; &lt;em&gt;free_page_bytes = ngx.shared.DICT:free_space()&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;context:&lt;/strong&gt; &lt;em&gt;init_by_lua*, set_by_lua*, rewrite_by_lua*, access_by_lua*, content_by_lua*, header_filter_by_lua*, body_filter_by_lua*, log_by_lua*, ngx.timer.*, balancer_by_lua*, ssl_certificate_by_lua*, ssl_session_fetch_by_lua*, ssl_session_store_by_lua*&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;requires:&lt;/strong&gt; &lt;code&gt;resty.core.shdict&lt;/code&gt; or &lt;code&gt;resty.core&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Retrieves the free page size in bytes for the shm-based dictionary &lt;a href="#ngxshareddict"&gt;ngx.shared.DICT&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Note:&lt;/strong&gt; The memory for ngx.shared.DICT is allocated via the Nginx slab allocator which has each slot for
data size ranges like ~8, 9~16, 17~32, ..., 1025~2048, 2048~ bytes. And pages are assigned to a slot if there
is no room in already assigned pages for the slot.&lt;/p&gt;
&lt;p&gt;So even if the return value of the &lt;code&gt;free_space&lt;/code&gt; method is zero, there may be room in already assigned pages, so
you may successfully set a new key value pair to the shared dict without getting &lt;code&gt;true&lt;/code&gt; for &lt;code&gt;forcible&lt;/code&gt; or
non nil &lt;code&gt;err&lt;/code&gt; from the &lt;code&gt;ngx.shared.DICT.set&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;On the other hand, if already assigned pages for a slot are full and a new key value pair is added to the
slot and there is no free page, you may get &lt;code&gt;true&lt;/code&gt; for &lt;code&gt;forcible&lt;/code&gt; or non nil &lt;code&gt;err&lt;/code&gt; from the
&lt;code&gt;ngx.shared.DICT.set&lt;/code&gt; method.&lt;/p&gt;
&lt;p&gt;Example:&lt;/p&gt;
&lt;div class="highlight highlight-source-lua"&gt;&lt;pre&gt; &lt;span class="pl-c1"&gt;require&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;resty.core.shdict&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;

 &lt;span class="pl-k"&gt;local&lt;/span&gt; cats &lt;span class="pl-k"&gt;=&lt;/span&gt; ngx.&lt;span class="pl-smi"&gt;shared&lt;/span&gt;.&lt;span class="pl-smi"&gt;cats&lt;/span&gt;
 &lt;span class="pl-k"&gt;local&lt;/span&gt; free_page_bytes &lt;span class="pl-k"&gt;=&lt;/span&gt; cats:&lt;span class="pl-c1"&gt;free_space&lt;/span&gt;()&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;This feature was first introduced in the &lt;code&gt;v0.10.11&lt;/code&gt; release.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Note:&lt;/strong&gt; This method requires the &lt;code&gt;resty.core.shdict&lt;/code&gt; or &lt;code&gt;resty.core&lt;/code&gt; modules from the &lt;a href="https://github.com/openresty/lua-resty-core"&gt;lua-resty-core&lt;/a&gt; library.&lt;/p&gt;
&lt;p&gt;This feature requires at least Nginx core version &lt;code&gt;1.11.7&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;See also &lt;a href="#ngxshareddict"&gt;ngx.shared.DICT&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;&lt;a href="#nginx-api-for-lua"&gt;Back to TOC&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-ngxsocketudp" class="anchor" aria-hidden="true" href="#ngxsocketudp"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;ngx.socket.udp&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;syntax:&lt;/strong&gt; &lt;em&gt;udpsock = ngx.socket.udp()&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;context:&lt;/strong&gt; &lt;em&gt;rewrite_by_lua*, access_by_lua*, content_by_lua*, ngx.timer.*, ssl_certificate_by_lua*, ssl_session_fetch_by_lua*&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;Creates and returns a UDP or datagram-oriented unix domain socket object (also known as one type of the "cosocket" objects). The following methods are supported on this object:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="#udpsocksetpeername"&gt;setpeername&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#udpsocksend"&gt;send&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#udpsockreceive"&gt;receive&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#udpsockclose"&gt;close&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#udpsocksettimeout"&gt;settimeout&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;It is intended to be compatible with the UDP API of the &lt;a href="http://w3.impa.br/~diego/software/luasocket/udp.html" rel="nofollow"&gt;LuaSocket&lt;/a&gt; library but is 100% nonblocking out of the box.&lt;/p&gt;
&lt;p&gt;This feature was first introduced in the &lt;code&gt;v0.5.7&lt;/code&gt; release.&lt;/p&gt;
&lt;p&gt;See also &lt;a href="#ngxsockettcp"&gt;ngx.socket.tcp&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;&lt;a href="#nginx-api-for-lua"&gt;Back to TOC&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-udpsocksetpeername" class="anchor" aria-hidden="true" href="#udpsocksetpeername"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;udpsock:setpeername&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;syntax:&lt;/strong&gt; &lt;em&gt;ok, err = udpsock:setpeername(host, port)&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;syntax:&lt;/strong&gt; &lt;em&gt;ok, err = udpsock:setpeername("unix:/path/to/unix-domain.socket")&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;context:&lt;/strong&gt; &lt;em&gt;rewrite_by_lua*, access_by_lua*, content_by_lua*, ngx.timer.*, ssl_certificate_by_lua*, ssl_session_fetch_by_lua*&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;Attempts to connect a UDP socket object to a remote server or to a datagram unix domain socket file. Because the datagram protocol is actually connection-less, this method does not really establish a "connection", but only just set the name of the remote peer for subsequent read/write operations.&lt;/p&gt;
&lt;p&gt;Both IP addresses and domain names can be specified as the &lt;code&gt;host&lt;/code&gt; argument. In case of domain names, this method will use Nginx core's dynamic resolver to parse the domain name without blocking and it is required to configure the &lt;a href="http://nginx.org/en/docs/http/ngx_http_core_module.html#resolver" rel="nofollow"&gt;resolver&lt;/a&gt; directive in the &lt;code&gt;nginx.conf&lt;/code&gt; file like this:&lt;/p&gt;
&lt;div class="highlight highlight-source-nginx"&gt;&lt;pre&gt; &lt;span class="pl-k"&gt;resolver&lt;/span&gt; &lt;span class="pl-s"&gt;8.8.8.8&lt;/span&gt;;  &lt;span class="pl-c"&gt;# use Google's public DNS nameserver&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;If the nameserver returns multiple IP addresses for the host name, this method will pick up one randomly.&lt;/p&gt;
&lt;p&gt;In case of error, the method returns &lt;code&gt;nil&lt;/code&gt; followed by a string describing the error. In case of success, the method returns &lt;code&gt;1&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;Here is an example for connecting to a UDP (memcached) server:&lt;/p&gt;
&lt;div class="highlight highlight-source-nginx"&gt;&lt;pre&gt; &lt;span class="pl-k"&gt;location&lt;/span&gt; &lt;span class="pl-en"&gt;/test &lt;/span&gt;{
     &lt;span class="pl-k"&gt;resolver&lt;/span&gt; &lt;span class="pl-s"&gt;8.8.8.8&lt;/span&gt;;

     &lt;span class="pl-k"&gt;content_by_lua_block&lt;/span&gt; {
         &lt;span class="pl-k"&gt;local&lt;/span&gt; sock = ngx.socket.udp()
         &lt;span class="pl-k"&gt;local&lt;/span&gt; ok, err = sock:setpeername(&lt;span class="pl-s"&gt;"my.memcached.server.domain"&lt;/span&gt;, 11211)
         &lt;span class="pl-k"&gt;if&lt;/span&gt; not ok then
             ngx.say("&lt;span class="pl-k"&gt;failed&lt;/span&gt; to connect to memcached: &lt;span class="pl-s"&gt;", err)&lt;/span&gt;
&lt;span class="pl-s"&gt;             return&lt;/span&gt;
&lt;span class="pl-s"&gt;         end&lt;/span&gt;
&lt;span class="pl-s"&gt;         ngx.say("&lt;/span&gt;successfully connected to memcached!&lt;span class="pl-s"&gt;")&lt;/span&gt;
&lt;span class="pl-s"&gt;         sock:close()&lt;/span&gt;
&lt;span class="pl-s"&gt;     }&lt;/span&gt;
&lt;span class="pl-s"&gt; }&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Since the &lt;code&gt;v0.7.18&lt;/code&gt; release, connecting to a datagram unix domain socket file is also possible on Linux:&lt;/p&gt;
&lt;div class="highlight highlight-source-lua"&gt;&lt;pre&gt; &lt;span class="pl-k"&gt;local&lt;/span&gt; sock &lt;span class="pl-k"&gt;=&lt;/span&gt; ngx.&lt;span class="pl-smi"&gt;socket&lt;/span&gt;.&lt;span class="pl-c1"&gt;udp&lt;/span&gt;()
 &lt;span class="pl-k"&gt;local&lt;/span&gt; ok, err &lt;span class="pl-k"&gt;=&lt;/span&gt; sock:&lt;span class="pl-c1"&gt;setpeername&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;unix:/tmp/some-datagram-service.sock&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
 &lt;span class="pl-k"&gt;if&lt;/span&gt; &lt;span class="pl-k"&gt;not&lt;/span&gt; ok &lt;span class="pl-k"&gt;then&lt;/span&gt;
     ngx.&lt;span class="pl-c1"&gt;say&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;failed to connect to the datagram unix domain socket: &lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, err)
     &lt;span class="pl-k"&gt;return&lt;/span&gt;
 &lt;span class="pl-k"&gt;end&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;assuming the datagram service is listening on the unix domain socket file &lt;code&gt;/tmp/some-datagram-service.sock&lt;/code&gt; and the client socket will use the "autobind" feature on Linux.&lt;/p&gt;
&lt;p&gt;Calling this method on an already connected socket object will cause the original connection to be closed first.&lt;/p&gt;
&lt;p&gt;This method was first introduced in the &lt;code&gt;v0.5.7&lt;/code&gt; release.&lt;/p&gt;
&lt;p&gt;&lt;a href="#nginx-api-for-lua"&gt;Back to TOC&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-udpsocksend" class="anchor" aria-hidden="true" href="#udpsocksend"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;udpsock:send&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;syntax:&lt;/strong&gt; &lt;em&gt;ok, err = udpsock:send(data)&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;context:&lt;/strong&gt; &lt;em&gt;rewrite_by_lua*, access_by_lua*, content_by_lua*, ngx.timer.*, ssl_certificate_by_lua*, ssl_session_fetch_by_lua*&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;Sends data on the current UDP or datagram unix domain socket object.&lt;/p&gt;
&lt;p&gt;In case of success, it returns &lt;code&gt;1&lt;/code&gt;. Otherwise, it returns &lt;code&gt;nil&lt;/code&gt; and a string describing the error.&lt;/p&gt;
&lt;p&gt;The input argument &lt;code&gt;data&lt;/code&gt; can either be a Lua string or a (nested) Lua table holding string fragments. In case of table arguments, this method will copy all the string elements piece by piece to the underlying Nginx socket send buffers, which is usually optimal than doing string concatenation operations on the Lua land.&lt;/p&gt;
&lt;p&gt;This feature was first introduced in the &lt;code&gt;v0.5.7&lt;/code&gt; release.&lt;/p&gt;
&lt;p&gt;&lt;a href="#nginx-api-for-lua"&gt;Back to TOC&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-udpsockreceive" class="anchor" aria-hidden="true" href="#udpsockreceive"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;udpsock:receive&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;syntax:&lt;/strong&gt; &lt;em&gt;data, err = udpsock:receive(size?)&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;context:&lt;/strong&gt; &lt;em&gt;rewrite_by_lua*, access_by_lua*, content_by_lua*, ngx.timer.*, ssl_certificate_by_lua*, ssl_session_fetch_by_lua*&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;Receives data from the UDP or datagram unix domain socket object with an optional receive buffer size argument, &lt;code&gt;size&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;This method is a synchronous operation and is 100% nonblocking.&lt;/p&gt;
&lt;p&gt;In case of success, it returns the data received; in case of error, it returns &lt;code&gt;nil&lt;/code&gt; with a string describing the error.&lt;/p&gt;
&lt;p&gt;If the &lt;code&gt;size&lt;/code&gt; argument is specified, then this method will use this size as the receive buffer size. But when this size is greater than &lt;code&gt;8192&lt;/code&gt;, then &lt;code&gt;8192&lt;/code&gt; will be used instead.&lt;/p&gt;
&lt;p&gt;If no argument is specified, then the maximal buffer size, &lt;code&gt;8192&lt;/code&gt; is assumed.&lt;/p&gt;
&lt;p&gt;Timeout for the reading operation is controlled by the &lt;a href="#lua_socket_read_timeout"&gt;lua_socket_read_timeout&lt;/a&gt; config directive and the &lt;a href="#udpsocksettimeout"&gt;settimeout&lt;/a&gt; method. And the latter takes priority. For example:&lt;/p&gt;
&lt;div class="highlight highlight-source-lua"&gt;&lt;pre&gt; sock:&lt;span class="pl-c1"&gt;settimeout&lt;/span&gt;(&lt;span class="pl-c1"&gt;1000&lt;/span&gt;)  &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;--&lt;/span&gt; one second timeout&lt;/span&gt;
 &lt;span class="pl-k"&gt;local&lt;/span&gt; data, err &lt;span class="pl-k"&gt;=&lt;/span&gt; sock:&lt;span class="pl-c1"&gt;receive&lt;/span&gt;()
 &lt;span class="pl-k"&gt;if&lt;/span&gt; &lt;span class="pl-k"&gt;not&lt;/span&gt; data &lt;span class="pl-k"&gt;then&lt;/span&gt;
     ngx.&lt;span class="pl-c1"&gt;say&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;failed to read a packet: &lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, err)
     &lt;span class="pl-k"&gt;return&lt;/span&gt;
 &lt;span class="pl-k"&gt;end&lt;/span&gt;
 ngx.&lt;span class="pl-c1"&gt;say&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;successfully read a packet: &lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, data)&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;It is important here to call the &lt;a href="#udpsocksettimeout"&gt;settimeout&lt;/a&gt; method &lt;em&gt;before&lt;/em&gt; calling this method.&lt;/p&gt;
&lt;p&gt;This feature was first introduced in the &lt;code&gt;v0.5.7&lt;/code&gt; release.&lt;/p&gt;
&lt;p&gt;&lt;a href="#nginx-api-for-lua"&gt;Back to TOC&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-udpsockclose" class="anchor" aria-hidden="true" href="#udpsockclose"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;udpsock:close&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;syntax:&lt;/strong&gt; &lt;em&gt;ok, err = udpsock:close()&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;context:&lt;/strong&gt; &lt;em&gt;rewrite_by_lua*, access_by_lua*, content_by_lua*, ngx.timer.*, ssl_certificate_by_lua*, ssl_session_fetch_by_lua*&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;Closes the current UDP or datagram unix domain socket. It returns the &lt;code&gt;1&lt;/code&gt; in case of success and returns &lt;code&gt;nil&lt;/code&gt; with a string describing the error otherwise.&lt;/p&gt;
&lt;p&gt;Socket objects that have not invoked this method (and associated connections) will be closed when the socket object is released by the Lua GC (Garbage Collector) or the current client HTTP request finishes processing.&lt;/p&gt;
&lt;p&gt;This feature was first introduced in the &lt;code&gt;v0.5.7&lt;/code&gt; release.&lt;/p&gt;
&lt;p&gt;&lt;a href="#nginx-api-for-lua"&gt;Back to TOC&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-udpsocksettimeout" class="anchor" aria-hidden="true" href="#udpsocksettimeout"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;udpsock:settimeout&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;syntax:&lt;/strong&gt; &lt;em&gt;udpsock:settimeout(time)&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;context:&lt;/strong&gt; &lt;em&gt;rewrite_by_lua*, access_by_lua*, content_by_lua*, ngx.timer.*, ssl_certificate_by_lua*, ssl_session_fetch_by_lua*&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;Set the timeout value in milliseconds for subsequent socket operations (like &lt;a href="#udpsockreceive"&gt;receive&lt;/a&gt;).&lt;/p&gt;
&lt;p&gt;Settings done by this method takes priority over those config directives, like &lt;a href="#lua_socket_read_timeout"&gt;lua_socket_read_timeout&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;This feature was first introduced in the &lt;code&gt;v0.5.7&lt;/code&gt; release.&lt;/p&gt;
&lt;p&gt;&lt;a href="#nginx-api-for-lua"&gt;Back to TOC&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-ngxsocketstream" class="anchor" aria-hidden="true" href="#ngxsocketstream"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;ngx.socket.stream&lt;/h2&gt;
&lt;p&gt;Just an alias to &lt;a href="#ngxsockettcp"&gt;ngx.socket.tcp&lt;/a&gt;. If the stream-typed cosocket may also connect to a unix domain
socket, then this API name is preferred.&lt;/p&gt;
&lt;p&gt;This API function was first added to the &lt;code&gt;v0.10.1&lt;/code&gt; release.&lt;/p&gt;
&lt;p&gt;&lt;a href="#nginx-api-for-lua"&gt;Back to TOC&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-ngxsockettcp" class="anchor" aria-hidden="true" href="#ngxsockettcp"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;ngx.socket.tcp&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;syntax:&lt;/strong&gt; &lt;em&gt;tcpsock = ngx.socket.tcp()&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;context:&lt;/strong&gt; &lt;em&gt;rewrite_by_lua*, access_by_lua*, content_by_lua*, ngx.timer.*, ssl_certificate_by_lua*, ssl_session_fetch_by_lua*&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;Creates and returns a TCP or stream-oriented unix domain socket object (also known as one type of the "cosocket" objects). The following methods are supported on this object:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="#tcpsockconnect"&gt;connect&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#tcpsocksslhandshake"&gt;sslhandshake&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#tcpsocksend"&gt;send&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#tcpsockreceive"&gt;receive&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#tcpsockclose"&gt;close&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#tcpsocksettimeout"&gt;settimeout&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#tcpsocksettimeouts"&gt;settimeouts&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#tcpsocksetoption"&gt;setoption&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#tcpsockreceiveany"&gt;receiveany&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#tcpsockreceiveuntil"&gt;receiveuntil&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#tcpsocksetkeepalive"&gt;setkeepalive&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#tcpsockgetreusedtimes"&gt;getreusedtimes&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;It is intended to be compatible with the TCP API of the &lt;a href="http://w3.impa.br/~diego/software/luasocket/tcp.html" rel="nofollow"&gt;LuaSocket&lt;/a&gt; library but is 100% nonblocking out of the box. Also, we introduce some new APIs to provide more functionalities.&lt;/p&gt;
&lt;p&gt;The cosocket object created by this API function has exactly the same lifetime as the Lua handler creating it. So never pass the cosocket object to any other Lua handler (including ngx.timer callback functions) and never share the cosocket object between different Nginx requests.&lt;/p&gt;
&lt;p&gt;For every cosocket object's underlying connection, if you do not
explicitly close it (via &lt;a href="#tcpsockclose"&gt;close&lt;/a&gt;) or put it back to the connection
pool (via &lt;a href="#tcpsocksetkeepalive"&gt;setkeepalive&lt;/a&gt;), then it is automatically closed when one of
the following two events happens:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;the current request handler completes, or&lt;/li&gt;
&lt;li&gt;the Lua cosocket object value gets collected by the Lua GC.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Fatal errors in cosocket operations always automatically close the current
connection (note that, read timeout error is the only error that is
not fatal), and if you call &lt;a href="#tcpsockclose"&gt;close&lt;/a&gt; on a closed connection, you will get
the "closed" error.&lt;/p&gt;
&lt;p&gt;Starting from the &lt;code&gt;0.9.9&lt;/code&gt; release, the cosocket object here is full-duplex, that is, a reader "light thread" and a writer "light thread" can operate on a single cosocket object simultaneously (both "light threads" must belong to the same Lua handler though, see reasons above). But you cannot have two "light threads" both reading (or writing or connecting) the same cosocket, otherwise you might get an error like "socket busy reading" when calling the methods of the cosocket object.&lt;/p&gt;
&lt;p&gt;This feature was first introduced in the &lt;code&gt;v0.5.0rc1&lt;/code&gt; release.&lt;/p&gt;
&lt;p&gt;See also &lt;a href="#ngxsocketudp"&gt;ngx.socket.udp&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;&lt;a href="#nginx-api-for-lua"&gt;Back to TOC&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-tcpsockconnect" class="anchor" aria-hidden="true" href="#tcpsockconnect"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;tcpsock:connect&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;syntax:&lt;/strong&gt; &lt;em&gt;ok, err = tcpsock:connect(host, port, options_table?)&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;syntax:&lt;/strong&gt; &lt;em&gt;ok, err = tcpsock:connect("unix:/path/to/unix-domain.socket", options_table?)&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;context:&lt;/strong&gt; &lt;em&gt;rewrite_by_lua*, access_by_lua*, content_by_lua*, ngx.timer.*, ssl_certificate_by_lua*, ssl_session_fetch_by_lua*&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;Attempts to connect a TCP socket object to a remote server or to a stream unix domain socket file without blocking.&lt;/p&gt;
&lt;p&gt;Before actually resolving the host name and connecting to the remote backend, this method will always look up the connection pool for matched idle connections created by previous calls of this method (or the &lt;a href="#ngxsocketconnect"&gt;ngx.socket.connect&lt;/a&gt; function).&lt;/p&gt;
&lt;p&gt;Both IP addresses and domain names can be specified as the &lt;code&gt;host&lt;/code&gt; argument. In case of domain names, this method will use Nginx core's dynamic resolver to parse the domain name without blocking and it is required to configure the &lt;a href="http://nginx.org/en/docs/http/ngx_http_core_module.html#resolver" rel="nofollow"&gt;resolver&lt;/a&gt; directive in the &lt;code&gt;nginx.conf&lt;/code&gt; file like this:&lt;/p&gt;
&lt;div class="highlight highlight-source-nginx"&gt;&lt;pre&gt; &lt;span class="pl-k"&gt;resolver&lt;/span&gt; &lt;span class="pl-s"&gt;8.8.8.8&lt;/span&gt;;  &lt;span class="pl-c"&gt;# use Google's public DNS nameserver&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;If the nameserver returns multiple IP addresses for the host name, this method will pick up one randomly.&lt;/p&gt;
&lt;p&gt;In case of error, the method returns &lt;code&gt;nil&lt;/code&gt; followed by a string describing the error. In case of success, the method returns &lt;code&gt;1&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;Here is an example for connecting to a TCP server:&lt;/p&gt;
&lt;div class="highlight highlight-source-nginx"&gt;&lt;pre&gt; &lt;span class="pl-k"&gt;location&lt;/span&gt; &lt;span class="pl-en"&gt;/test &lt;/span&gt;{
     &lt;span class="pl-k"&gt;resolver&lt;/span&gt; &lt;span class="pl-s"&gt;8.8.8.8&lt;/span&gt;;

     &lt;span class="pl-k"&gt;content_by_lua_block&lt;/span&gt; {
         &lt;span class="pl-k"&gt;local&lt;/span&gt; sock = ngx.socket.tcp()
         &lt;span class="pl-k"&gt;local&lt;/span&gt; ok, err = sock:connect(&lt;span class="pl-s"&gt;"www.google.com"&lt;/span&gt;, 80)
         &lt;span class="pl-k"&gt;if&lt;/span&gt; not ok then
             ngx.say("&lt;span class="pl-k"&gt;failed&lt;/span&gt; to connect to google: &lt;span class="pl-s"&gt;", err)&lt;/span&gt;
&lt;span class="pl-s"&gt;             return&lt;/span&gt;
&lt;span class="pl-s"&gt;         end&lt;/span&gt;
&lt;span class="pl-s"&gt;         ngx.say("&lt;/span&gt;successfully connected to google!&lt;span class="pl-s"&gt;")&lt;/span&gt;
&lt;span class="pl-s"&gt;         sock:close()&lt;/span&gt;
&lt;span class="pl-s"&gt;     }&lt;/span&gt;
&lt;span class="pl-s"&gt; }&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Connecting to a Unix Domain Socket file is also possible:&lt;/p&gt;
&lt;div class="highlight highlight-source-lua"&gt;&lt;pre&gt; &lt;span class="pl-k"&gt;local&lt;/span&gt; sock &lt;span class="pl-k"&gt;=&lt;/span&gt; ngx.&lt;span class="pl-smi"&gt;socket&lt;/span&gt;.&lt;span class="pl-c1"&gt;tcp&lt;/span&gt;()
 &lt;span class="pl-k"&gt;local&lt;/span&gt; ok, err &lt;span class="pl-k"&gt;=&lt;/span&gt; sock:&lt;span class="pl-c1"&gt;connect&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;unix:/tmp/memcached.sock&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
 &lt;span class="pl-k"&gt;if&lt;/span&gt; &lt;span class="pl-k"&gt;not&lt;/span&gt; ok &lt;span class="pl-k"&gt;then&lt;/span&gt;
     ngx.&lt;span class="pl-c1"&gt;say&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;failed to connect to the memcached unix domain socket: &lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, err)
     &lt;span class="pl-k"&gt;return&lt;/span&gt;
 &lt;span class="pl-k"&gt;end&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;assuming memcached (or something else) is listening on the unix domain socket file &lt;code&gt;/tmp/memcached.sock&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;Timeout for the connecting operation is controlled by the &lt;a href="#lua_socket_connect_timeout"&gt;lua_socket_connect_timeout&lt;/a&gt; config directive and the &lt;a href="#tcpsocksettimeout"&gt;settimeout&lt;/a&gt; method. And the latter takes priority. For example:&lt;/p&gt;
&lt;div class="highlight highlight-source-lua"&gt;&lt;pre&gt; &lt;span class="pl-k"&gt;local&lt;/span&gt; sock &lt;span class="pl-k"&gt;=&lt;/span&gt; ngx.&lt;span class="pl-smi"&gt;socket&lt;/span&gt;.&lt;span class="pl-c1"&gt;tcp&lt;/span&gt;()
 sock:&lt;span class="pl-c1"&gt;settimeout&lt;/span&gt;(&lt;span class="pl-c1"&gt;1000&lt;/span&gt;)  &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;--&lt;/span&gt; one second timeout&lt;/span&gt;
 &lt;span class="pl-k"&gt;local&lt;/span&gt; ok, err &lt;span class="pl-k"&gt;=&lt;/span&gt; sock:&lt;span class="pl-c1"&gt;connect&lt;/span&gt;(host, port)&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;It is important here to call the &lt;a href="#tcpsocksettimeout"&gt;settimeout&lt;/a&gt; method &lt;em&gt;before&lt;/em&gt; calling this method.&lt;/p&gt;
&lt;p&gt;Calling this method on an already connected socket object will cause the original connection to be closed first.&lt;/p&gt;
&lt;p&gt;An optional Lua table can be specified as the last argument to this method to specify various connect options:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;pool&lt;/code&gt;
specify a custom name for the connection pool being used. If omitted, then the connection pool name will be generated from the string template &lt;code&gt;"&amp;lt;host&amp;gt;:&amp;lt;port&amp;gt;"&lt;/code&gt; or &lt;code&gt;"&amp;lt;unix-socket-path&amp;gt;"&lt;/code&gt;.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;pool_size&lt;/code&gt;
specify the size of the connection pool. If omitted and no
&lt;code&gt;backlog&lt;/code&gt; option was provided, no pool will be created. If omitted
but &lt;code&gt;backlog&lt;/code&gt; was provided, the pool will be created with a default
size equal to the value of the &lt;a href="#lua_socket_pool_size"&gt;lua_socket_pool_size&lt;/a&gt;
directive.
The connection pool holds up to &lt;code&gt;pool_size&lt;/code&gt; alive connections
ready to be reused by subsequent calls to &lt;a href="#tcpsockconnect"&gt;connect&lt;/a&gt;, but
note that there is no upper limit to the total number of opened connections
outside of the pool. If you need to restrict the total number of opened
connections, specify the &lt;code&gt;backlog&lt;/code&gt; option.
When the connection pool would exceed its size limit, the least recently used
(kept-alive) connection already in the pool will be closed to make room for
the current connection.
Note that the cosocket connection pool is per Nginx worker process rather
than per Nginx server instance, so the size limit specified here also applies
to every single Nginx worker process. Also note that the size of the connection
pool cannot be changed once it has been created.
This option was first introduced in the &lt;code&gt;v0.10.14&lt;/code&gt; release.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;backlog&lt;/code&gt;
if specified, this module will limit the total number of opened connections
for this pool. No more connections than &lt;code&gt;pool_size&lt;/code&gt; can be opened
for this pool at any time. If the connection pool is full, subsequent
connect operations will be queued into a queue equal to this option's
value (the "backlog" queue).
If the number of queued connect operations is equal to &lt;code&gt;backlog&lt;/code&gt;,
subsequent connect operations will fail and return &lt;code&gt;nil&lt;/code&gt; plus the
error string &lt;code&gt;"too many waiting connect operations"&lt;/code&gt;.
The queued connect operations will be resumed once the number of connections
in the pool is less than &lt;code&gt;pool_size&lt;/code&gt;.
The queued connect operation will abort once they have been queued for more
than &lt;code&gt;connect_timeout&lt;/code&gt;, controlled by
&lt;a href="#tcpsocksettimeouts"&gt;settimeouts&lt;/a&gt;, and will return &lt;code&gt;nil&lt;/code&gt; plus
the error string &lt;code&gt;"timeout"&lt;/code&gt;.
This option was first introduced in the &lt;code&gt;v0.10.14&lt;/code&gt; release.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;The support for the options table argument was first introduced in the &lt;code&gt;v0.5.7&lt;/code&gt; release.&lt;/p&gt;
&lt;p&gt;This method was first introduced in the &lt;code&gt;v0.5.0rc1&lt;/code&gt; release.&lt;/p&gt;
&lt;p&gt;&lt;a href="#nginx-api-for-lua"&gt;Back to TOC&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-tcpsocksslhandshake" class="anchor" aria-hidden="true" href="#tcpsocksslhandshake"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;tcpsock:sslhandshake&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;syntax:&lt;/strong&gt; &lt;em&gt;session, err = tcpsock:sslhandshake(reused_session?, server_name?, ssl_verify?, send_status_req?)&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;context:&lt;/strong&gt; &lt;em&gt;rewrite_by_lua*, access_by_lua*, content_by_lua*, ngx.timer.*, ssl_certificate_by_lua*, ssl_session_fetch_by_lua*&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;Does SSL/TLS handshake on the currently established connection.&lt;/p&gt;
&lt;p&gt;The optional &lt;code&gt;reused_session&lt;/code&gt; argument can take a former SSL
session userdata returned by a previous &lt;code&gt;sslhandshake&lt;/code&gt;
call for exactly the same target. For short-lived connections, reusing SSL
sessions can usually speed up the handshake by one order by magnitude but it
is not so useful if the connection pool is enabled. This argument defaults to
&lt;code&gt;nil&lt;/code&gt;. If this argument takes the boolean &lt;code&gt;false&lt;/code&gt; value, no SSL session
userdata would return by this call and only a Lua boolean will be returned as
the first return value; otherwise the current SSL session will
always be returned as the first argument in case of successes.&lt;/p&gt;
&lt;p&gt;The optional &lt;code&gt;server_name&lt;/code&gt; argument is used to specify the server
name for the new TLS extension Server Name Indication (SNI). Use of SNI can
make different servers share the same IP address on the server side. Also,
when SSL verification is enabled, this &lt;code&gt;server_name&lt;/code&gt; argument is
also used to validate the server name specified in the server certificate sent from
the remote.&lt;/p&gt;
&lt;p&gt;The optional &lt;code&gt;ssl_verify&lt;/code&gt; argument takes a Lua boolean value to
control whether to perform SSL verification. When set to &lt;code&gt;true&lt;/code&gt;, the server
certificate will be verified according to the CA certificates specified by
the &lt;a href="#lua_ssl_trusted_certificate"&gt;lua_ssl_trusted_certificate&lt;/a&gt; directive.
You may also need to adjust the &lt;a href="#lua_ssl_verify_depth"&gt;lua_ssl_verify_depth&lt;/a&gt;
directive to control how deep we should follow along the certificate chain.
Also, when the &lt;code&gt;ssl_verify&lt;/code&gt; argument is true and the
&lt;code&gt;server_name&lt;/code&gt; argument is also specified, the latter will be used
to validate the server name in the server certificate.&lt;/p&gt;
&lt;p&gt;The optional &lt;code&gt;send_status_req&lt;/code&gt; argument takes a boolean that controls whether to send
the OCSP status request in the SSL handshake request (which is for requesting OCSP stapling).&lt;/p&gt;
&lt;p&gt;For connections that have already done SSL/TLS handshake, this method returns
immediately.&lt;/p&gt;
&lt;p&gt;This method was first introduced in the &lt;code&gt;v0.9.11&lt;/code&gt; release.&lt;/p&gt;
&lt;p&gt;&lt;a href="#nginx-api-for-lua"&gt;Back to TOC&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-tcpsocksend" class="anchor" aria-hidden="true" href="#tcpsocksend"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;tcpsock:send&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;syntax:&lt;/strong&gt; &lt;em&gt;bytes, err = tcpsock:send(data)&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;context:&lt;/strong&gt; &lt;em&gt;rewrite_by_lua*, access_by_lua*, content_by_lua*, ngx.timer.*, ssl_certificate_by_lua*, ssl_session_fetch_by_lua*&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;Sends data without blocking on the current TCP or Unix Domain Socket connection.&lt;/p&gt;
&lt;p&gt;This method is a synchronous operation that will not return until &lt;em&gt;all&lt;/em&gt; the data has been flushed into the system socket send buffer or an error occurs.&lt;/p&gt;
&lt;p&gt;In case of success, it returns the total number of bytes that have been sent. Otherwise, it returns &lt;code&gt;nil&lt;/code&gt; and a string describing the error.&lt;/p&gt;
&lt;p&gt;The input argument &lt;code&gt;data&lt;/code&gt; can either be a Lua string or a (nested) Lua table holding string fragments. In case of table arguments, this method will copy all the string elements piece by piece to the underlying Nginx socket send buffers, which is usually optimal than doing string concatenation operations on the Lua land.&lt;/p&gt;
&lt;p&gt;Timeout for the sending operation is controlled by the &lt;a href="#lua_socket_send_timeout"&gt;lua_socket_send_timeout&lt;/a&gt; config directive and the &lt;a href="#tcpsocksettimeout"&gt;settimeout&lt;/a&gt; method. And the latter takes priority. For example:&lt;/p&gt;
&lt;div class="highlight highlight-source-lua"&gt;&lt;pre&gt; sock:&lt;span class="pl-c1"&gt;settimeout&lt;/span&gt;(&lt;span class="pl-c1"&gt;1000&lt;/span&gt;)  &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;--&lt;/span&gt; one second timeout&lt;/span&gt;
 &lt;span class="pl-k"&gt;local&lt;/span&gt; bytes, err &lt;span class="pl-k"&gt;=&lt;/span&gt; sock:&lt;span class="pl-c1"&gt;send&lt;/span&gt;(request)&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;It is important here to call the &lt;a href="#tcpsocksettimeout"&gt;settimeout&lt;/a&gt; method &lt;em&gt;before&lt;/em&gt; calling this method.&lt;/p&gt;
&lt;p&gt;In case of any connection errors, this method always automatically closes the current connection.&lt;/p&gt;
&lt;p&gt;This feature was first introduced in the &lt;code&gt;v0.5.0rc1&lt;/code&gt; release.&lt;/p&gt;
&lt;p&gt;&lt;a href="#nginx-api-for-lua"&gt;Back to TOC&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-tcpsockreceive" class="anchor" aria-hidden="true" href="#tcpsockreceive"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;tcpsock:receive&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;syntax:&lt;/strong&gt; &lt;em&gt;data, err, partial = tcpsock:receive(size)&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;syntax:&lt;/strong&gt; &lt;em&gt;data, err, partial = tcpsock:receive(pattern?)&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;context:&lt;/strong&gt; &lt;em&gt;rewrite_by_lua*, access_by_lua*, content_by_lua*, ngx.timer.*, ssl_certificate_by_lua*, ssl_session_fetch_by_lua*&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;Receives data from the connected socket according to the reading pattern or size.&lt;/p&gt;
&lt;p&gt;This method is a synchronous operation just like the &lt;a href="#tcpsocksend"&gt;send&lt;/a&gt; method and is 100% nonblocking.&lt;/p&gt;
&lt;p&gt;In case of success, it returns the data received; in case of error, it returns &lt;code&gt;nil&lt;/code&gt; with a string describing the error and the partial data received so far.&lt;/p&gt;
&lt;p&gt;If a number-like argument is specified (including strings that look like numbers), then it is interpreted as a size. This method will not return until it reads exactly this size of data or an error occurs.&lt;/p&gt;
&lt;p&gt;If a non-number-like string argument is specified, then it is interpreted as a "pattern". The following patterns are supported:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;'*a'&lt;/code&gt;: reads from the socket until the connection is closed. No end-of-line translation is performed;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;'*l'&lt;/code&gt;: reads a line of text from the socket. The line is terminated by a &lt;code&gt;Line Feed&lt;/code&gt; (LF) character (ASCII 10), optionally preceded by a &lt;code&gt;Carriage Return&lt;/code&gt; (CR) character (ASCII 13). The CR and LF characters are not included in the returned line. In fact, all CR characters are ignored by the pattern.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;If no argument is specified, then it is assumed to be the pattern &lt;code&gt;'*l'&lt;/code&gt;, that is, the line reading pattern.&lt;/p&gt;
&lt;p&gt;Timeout for the reading operation is controlled by the &lt;a href="#lua_socket_read_timeout"&gt;lua_socket_read_timeout&lt;/a&gt; config directive and the &lt;a href="#tcpsocksettimeout"&gt;settimeout&lt;/a&gt; method. And the latter takes priority. For example:&lt;/p&gt;
&lt;div class="highlight highlight-source-lua"&gt;&lt;pre&gt; sock:&lt;span class="pl-c1"&gt;settimeout&lt;/span&gt;(&lt;span class="pl-c1"&gt;1000&lt;/span&gt;)  &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;--&lt;/span&gt; one second timeout&lt;/span&gt;
 &lt;span class="pl-k"&gt;local&lt;/span&gt; line, err, partial &lt;span class="pl-k"&gt;=&lt;/span&gt; sock:&lt;span class="pl-c1"&gt;receive&lt;/span&gt;()
 &lt;span class="pl-k"&gt;if&lt;/span&gt; &lt;span class="pl-k"&gt;not&lt;/span&gt; line &lt;span class="pl-k"&gt;then&lt;/span&gt;
     ngx.&lt;span class="pl-c1"&gt;say&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;failed to read a line: &lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, err)
     &lt;span class="pl-k"&gt;return&lt;/span&gt;
 &lt;span class="pl-k"&gt;end&lt;/span&gt;
 ngx.&lt;span class="pl-c1"&gt;say&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;successfully read a line: &lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, line)&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;It is important here to call the &lt;a href="#tcpsocksettimeout"&gt;settimeout&lt;/a&gt; method &lt;em&gt;before&lt;/em&gt; calling this method.&lt;/p&gt;
&lt;p&gt;Since the &lt;code&gt;v0.8.8&lt;/code&gt; release, this method no longer automatically closes the current connection when the read timeout error happens. For other connection errors, this method always automatically closes the connection.&lt;/p&gt;
&lt;p&gt;This feature was first introduced in the &lt;code&gt;v0.5.0rc1&lt;/code&gt; release.&lt;/p&gt;
&lt;p&gt;&lt;a href="#nginx-api-for-lua"&gt;Back to TOC&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-tcpsockreceiveany" class="anchor" aria-hidden="true" href="#tcpsockreceiveany"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;tcpsock:receiveany&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;syntax:&lt;/strong&gt; &lt;em&gt;data, err = tcpsock:receiveany(max)&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;context:&lt;/strong&gt; &lt;em&gt;rewrite_by_lua*, access_by_lua*, content_by_lua*, ngx.timer.*, ssl_certificate_by_lua*, ssl_session_fetch_by_lua*&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;Returns any data received by the connected socket, at most &lt;code&gt;max&lt;/code&gt; bytes.&lt;/p&gt;
&lt;p&gt;This method is a synchronous operation just like the &lt;a href="#tcpsocksend"&gt;send&lt;/a&gt; method and is 100% nonblocking.&lt;/p&gt;
&lt;p&gt;In case of success, it returns the data received; in case of error, it returns &lt;code&gt;nil&lt;/code&gt; with a string describing the error.&lt;/p&gt;
&lt;p&gt;If the received data is more than this size, this method will return with exactly this size of data.
The remaining data in the underlying receive buffer could be returned in the next reading operation.&lt;/p&gt;
&lt;p&gt;Timeout for the reading operation is controlled by the &lt;a href="#lua_socket_read_timeout"&gt;lua_socket_read_timeout&lt;/a&gt; config directive and the &lt;a href="#tcpsocksettimeouts"&gt;settimeouts&lt;/a&gt; method. And the latter takes priority. For example:&lt;/p&gt;
&lt;div class="highlight highlight-source-lua"&gt;&lt;pre&gt; sock:&lt;span class="pl-c1"&gt;settimeouts&lt;/span&gt;(&lt;span class="pl-c1"&gt;1000&lt;/span&gt;, &lt;span class="pl-c1"&gt;1000&lt;/span&gt;, &lt;span class="pl-c1"&gt;1000&lt;/span&gt;)  &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;--&lt;/span&gt; one second timeout for connect/read/write&lt;/span&gt;
 &lt;span class="pl-k"&gt;local&lt;/span&gt; data, err &lt;span class="pl-k"&gt;=&lt;/span&gt; sock:&lt;span class="pl-c1"&gt;receiveany&lt;/span&gt;(&lt;span class="pl-c1"&gt;10&lt;/span&gt; &lt;span class="pl-k"&gt;*&lt;/span&gt; &lt;span class="pl-c1"&gt;1024&lt;/span&gt;) &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;--&lt;/span&gt; read any data, at most 10K&lt;/span&gt;
 &lt;span class="pl-k"&gt;if&lt;/span&gt; &lt;span class="pl-k"&gt;not&lt;/span&gt; data &lt;span class="pl-k"&gt;then&lt;/span&gt;
     ngx.&lt;span class="pl-c1"&gt;say&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;failed to read any data: &lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, err)
     &lt;span class="pl-k"&gt;return&lt;/span&gt;
 &lt;span class="pl-k"&gt;end&lt;/span&gt;
 ngx.&lt;span class="pl-c1"&gt;say&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;successfully read: &lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, data)&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;This method doesn't automatically close the current connection when the read timeout error occurs. For other connection errors, this method always automatically closes the connection.&lt;/p&gt;
&lt;p&gt;This feature was first introduced in the &lt;code&gt;v0.10.14&lt;/code&gt; release.&lt;/p&gt;
&lt;p&gt;&lt;a href="#nginx-api-for-lua"&gt;Back to TOC&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-tcpsockreceiveuntil" class="anchor" aria-hidden="true" href="#tcpsockreceiveuntil"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;tcpsock:receiveuntil&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;syntax:&lt;/strong&gt; &lt;em&gt;iterator = tcpsock:receiveuntil(pattern, options?)&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;context:&lt;/strong&gt; &lt;em&gt;rewrite_by_lua*, access_by_lua*, content_by_lua*, ngx.timer.*, ssl_certificate_by_lua*, ssl_session_fetch_by_lua*&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;This method returns an iterator Lua function that can be called to read the data stream until it sees the specified pattern or an error occurs.&lt;/p&gt;
&lt;p&gt;Here is an example for using this method to read a data stream with the boundary sequence &lt;code&gt;--abcedhb&lt;/code&gt;:&lt;/p&gt;
&lt;div class="highlight highlight-source-lua"&gt;&lt;pre&gt; &lt;span class="pl-k"&gt;local&lt;/span&gt; reader &lt;span class="pl-k"&gt;=&lt;/span&gt; sock:&lt;span class="pl-c1"&gt;receiveuntil&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;span class="pl-cce"&gt;\r\n&lt;/span&gt;--abcedhb&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
 &lt;span class="pl-k"&gt;local&lt;/span&gt; data, err, partial &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;reader&lt;/span&gt;()
 &lt;span class="pl-k"&gt;if&lt;/span&gt; &lt;span class="pl-k"&gt;not&lt;/span&gt; data &lt;span class="pl-k"&gt;then&lt;/span&gt;
     ngx.&lt;span class="pl-c1"&gt;say&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;failed to read the data stream: &lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, err)
 &lt;span class="pl-k"&gt;end&lt;/span&gt;
 ngx.&lt;span class="pl-c1"&gt;say&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;read the data stream: &lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, data)&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;When called without any argument, the iterator function returns the received data right &lt;em&gt;before&lt;/em&gt; the specified pattern string in the incoming data stream. So for the example above, if the incoming data stream is &lt;code&gt;'hello, world! -agentzh\r\n--abcedhb blah blah'&lt;/code&gt;, then the string &lt;code&gt;'hello, world! -agentzh'&lt;/code&gt; will be returned.&lt;/p&gt;
&lt;p&gt;In case of error, the iterator function will return &lt;code&gt;nil&lt;/code&gt; along with a string describing the error and the partial data bytes that have been read so far.&lt;/p&gt;
&lt;p&gt;The iterator function can be called multiple times and can be mixed safely with other cosocket method calls or other iterator function calls.&lt;/p&gt;
&lt;p&gt;The iterator function behaves differently (i.e., like a real iterator) when it is called with a &lt;code&gt;size&lt;/code&gt; argument. That is, it will read that &lt;code&gt;size&lt;/code&gt; of data on each invocation and will return &lt;code&gt;nil&lt;/code&gt; at the last invocation (either sees the boundary pattern or meets an error). For the last successful invocation of the iterator function, the &lt;code&gt;err&lt;/code&gt; return value will be &lt;code&gt;nil&lt;/code&gt; too. The iterator function will be reset after the last successful invocation that returns &lt;code&gt;nil&lt;/code&gt; data and &lt;code&gt;nil&lt;/code&gt; error. Consider the following example:&lt;/p&gt;
&lt;div class="highlight highlight-source-lua"&gt;&lt;pre&gt; &lt;span class="pl-k"&gt;local&lt;/span&gt; reader &lt;span class="pl-k"&gt;=&lt;/span&gt; sock:&lt;span class="pl-c1"&gt;receiveuntil&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;span class="pl-cce"&gt;\r\n&lt;/span&gt;--abcedhb&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)

 &lt;span class="pl-k"&gt;while&lt;/span&gt; &lt;span class="pl-c1"&gt;true&lt;/span&gt; &lt;span class="pl-k"&gt;do&lt;/span&gt;
     &lt;span class="pl-k"&gt;local&lt;/span&gt; data, err, partial &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;reader&lt;/span&gt;(&lt;span class="pl-c1"&gt;4&lt;/span&gt;)
     &lt;span class="pl-k"&gt;if&lt;/span&gt; &lt;span class="pl-k"&gt;not&lt;/span&gt; data &lt;span class="pl-k"&gt;then&lt;/span&gt;
         &lt;span class="pl-k"&gt;if&lt;/span&gt; err &lt;span class="pl-k"&gt;then&lt;/span&gt;
             ngx.&lt;span class="pl-c1"&gt;say&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;failed to read the data stream: &lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, err)
             &lt;span class="pl-k"&gt;break&lt;/span&gt;
         &lt;span class="pl-k"&gt;end&lt;/span&gt;

         ngx.&lt;span class="pl-c1"&gt;say&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;read done&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
         &lt;span class="pl-k"&gt;break&lt;/span&gt;
     &lt;span class="pl-k"&gt;end&lt;/span&gt;
     ngx.&lt;span class="pl-c1"&gt;say&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;read chunk: [&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, data, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;]&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
 &lt;span class="pl-k"&gt;end&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Then for the incoming data stream &lt;code&gt;'hello, world! -agentzh\r\n--abcedhb blah blah'&lt;/code&gt;, we shall get the following output from the sample code above:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;read chunk: [hell]
read chunk: [o, w]
read chunk: [orld]
read chunk: [! -a]
read chunk: [gent]
read chunk: [zh]
read done
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Note that, the actual data returned &lt;em&gt;might&lt;/em&gt; be a little longer than the size limit specified by the &lt;code&gt;size&lt;/code&gt; argument when the boundary pattern has ambiguity for streaming parsing. Near the boundary of the data stream, the data string actually returned could also be shorter than the size limit.&lt;/p&gt;
&lt;p&gt;Timeout for the iterator function's reading operation is controlled by the &lt;a href="#lua_socket_read_timeout"&gt;lua_socket_read_timeout&lt;/a&gt; config directive and the &lt;a href="#tcpsocksettimeout"&gt;settimeout&lt;/a&gt; method. And the latter takes priority. For example:&lt;/p&gt;
&lt;div class="highlight highlight-source-lua"&gt;&lt;pre&gt; &lt;span class="pl-k"&gt;local&lt;/span&gt; readline &lt;span class="pl-k"&gt;=&lt;/span&gt; sock:&lt;span class="pl-c1"&gt;receiveuntil&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;span class="pl-cce"&gt;\r\n&lt;/span&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)

 sock:&lt;span class="pl-c1"&gt;settimeout&lt;/span&gt;(&lt;span class="pl-c1"&gt;1000&lt;/span&gt;)  &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;--&lt;/span&gt; one second timeout&lt;/span&gt;
 line, err, partial &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;readline&lt;/span&gt;()
 &lt;span class="pl-k"&gt;if&lt;/span&gt; &lt;span class="pl-k"&gt;not&lt;/span&gt; line &lt;span class="pl-k"&gt;then&lt;/span&gt;
     ngx.&lt;span class="pl-c1"&gt;say&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;failed to read a line: &lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, err)
     &lt;span class="pl-k"&gt;return&lt;/span&gt;
 &lt;span class="pl-k"&gt;end&lt;/span&gt;
 ngx.&lt;span class="pl-c1"&gt;say&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;successfully read a line: &lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, line)&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;It is important here to call the &lt;a href="#tcpsocksettimeout"&gt;settimeout&lt;/a&gt; method &lt;em&gt;before&lt;/em&gt; calling the iterator function (note that the &lt;code&gt;receiveuntil&lt;/code&gt; call is irrelevant here).&lt;/p&gt;
&lt;p&gt;As from the &lt;code&gt;v0.5.1&lt;/code&gt; release, this method also takes an optional &lt;code&gt;options&lt;/code&gt; table argument to control the behavior. The following options are supported:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;inclusive&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;The &lt;code&gt;inclusive&lt;/code&gt; takes a boolean value to control whether to include the pattern string in the returned data string. Default to &lt;code&gt;false&lt;/code&gt;. For example,&lt;/p&gt;
&lt;div class="highlight highlight-source-lua"&gt;&lt;pre&gt; &lt;span class="pl-k"&gt;local&lt;/span&gt; reader &lt;span class="pl-k"&gt;=&lt;/span&gt; tcpsock:&lt;span class="pl-c1"&gt;receiveuntil&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;_END_&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, { inclusive &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;true&lt;/span&gt; })
 &lt;span class="pl-k"&gt;local&lt;/span&gt; data &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;reader&lt;/span&gt;()
 ngx.&lt;span class="pl-c1"&gt;say&lt;/span&gt;(data)&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Then for the input data stream &lt;code&gt;"hello world _END_ blah blah blah"&lt;/code&gt;, then the example above will output &lt;code&gt;hello world _END_&lt;/code&gt;, including the pattern string &lt;code&gt;_END_&lt;/code&gt; itself.&lt;/p&gt;
&lt;p&gt;Since the &lt;code&gt;v0.8.8&lt;/code&gt; release, this method no longer automatically closes the current connection when the read timeout error happens. For other connection errors, this method always automatically closes the connection.&lt;/p&gt;
&lt;p&gt;This method was first introduced in the &lt;code&gt;v0.5.0rc1&lt;/code&gt; release.&lt;/p&gt;
&lt;p&gt;&lt;a href="#nginx-api-for-lua"&gt;Back to TOC&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-tcpsockclose" class="anchor" aria-hidden="true" href="#tcpsockclose"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;tcpsock:close&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;syntax:&lt;/strong&gt; &lt;em&gt;ok, err = tcpsock:close()&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;context:&lt;/strong&gt; &lt;em&gt;rewrite_by_lua*, access_by_lua*, content_by_lua*, ngx.timer.*, ssl_certificate_by_lua*, ssl_session_fetch_by_lua*&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;Closes the current TCP or stream unix domain socket. It returns the &lt;code&gt;1&lt;/code&gt; in case of success and returns &lt;code&gt;nil&lt;/code&gt; with a string describing the error otherwise.&lt;/p&gt;
&lt;p&gt;Note that there is no need to call this method on socket objects that have invoked the &lt;a href="#tcpsocksetkeepalive"&gt;setkeepalive&lt;/a&gt; method because the socket object is already closed (and the current connection is saved into the built-in connection pool).&lt;/p&gt;
&lt;p&gt;Socket objects that have not invoked this method (and associated connections) will be closed when the socket object is released by the Lua GC (Garbage Collector) or the current client HTTP request finishes processing.&lt;/p&gt;
&lt;p&gt;This feature was first introduced in the &lt;code&gt;v0.5.0rc1&lt;/code&gt; release.&lt;/p&gt;
&lt;p&gt;&lt;a href="#nginx-api-for-lua"&gt;Back to TOC&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-tcpsocksettimeout" class="anchor" aria-hidden="true" href="#tcpsocksettimeout"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;tcpsock:settimeout&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;syntax:&lt;/strong&gt; &lt;em&gt;tcpsock:settimeout(time)&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;context:&lt;/strong&gt; &lt;em&gt;rewrite_by_lua*, access_by_lua*, content_by_lua*, ngx.timer.*, ssl_certificate_by_lua*, ssl_session_fetch_by_lua*&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;Set the timeout value in milliseconds for subsequent socket operations (&lt;a href="#tcpsockconnect"&gt;connect&lt;/a&gt;, &lt;a href="#tcpsockreceive"&gt;receive&lt;/a&gt;, and iterators returned from &lt;a href="#tcpsockreceiveuntil"&gt;receiveuntil&lt;/a&gt;).&lt;/p&gt;
&lt;p&gt;Settings done by this method take priority over those specified via config directives (i.e. &lt;a href="#lua_socket_connect_timeout"&gt;lua_socket_connect_timeout&lt;/a&gt;, &lt;a href="#lua_socket_send_timeout"&gt;lua_socket_send_timeout&lt;/a&gt;, and &lt;a href="#lua_socket_read_timeout"&gt;lua_socket_read_timeout&lt;/a&gt;).&lt;/p&gt;
&lt;p&gt;Note that this method does &lt;em&gt;not&lt;/em&gt; affect the &lt;a href="#lua_socket_keepalive_timeout"&gt;lua_socket_keepalive_timeout&lt;/a&gt; setting; the &lt;code&gt;timeout&lt;/code&gt; argument to the &lt;a href="#tcpsocksetkeepalive"&gt;setkeepalive&lt;/a&gt; method should be used for this purpose instead.&lt;/p&gt;
&lt;p&gt;This feature was first introduced in the &lt;code&gt;v0.5.0rc1&lt;/code&gt; release.&lt;/p&gt;
&lt;p&gt;&lt;a href="#nginx-api-for-lua"&gt;Back to TOC&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-tcpsocksettimeouts" class="anchor" aria-hidden="true" href="#tcpsocksettimeouts"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;tcpsock:settimeouts&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;syntax:&lt;/strong&gt; &lt;em&gt;tcpsock:settimeouts(connect_timeout, send_timeout, read_timeout)&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;context:&lt;/strong&gt; &lt;em&gt;rewrite_by_lua*, access_by_lua*, content_by_lua*, ngx.timer.*, ssl_certificate_by_lua*, ssl_session_fetch_by_lua*&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;Respectively sets the connect, send, and read timeout thresholds (in milliseconds) for subsequent socket
operations (&lt;a href="#tcpsockconnect"&gt;connect&lt;/a&gt;, &lt;a href="#tcpsocksend"&gt;send&lt;/a&gt;, &lt;a href="#tcpsockreceive"&gt;receive&lt;/a&gt;, and iterators returned from &lt;a href="#tcpsockreceiveuntil"&gt;receiveuntil&lt;/a&gt;).&lt;/p&gt;
&lt;p&gt;Settings done by this method take priority over those specified via config directives (i.e. &lt;a href="#lua_socket_connect_timeout"&gt;lua_socket_connect_timeout&lt;/a&gt;, &lt;a href="#lua_socket_send_timeout"&gt;lua_socket_send_timeout&lt;/a&gt;, and &lt;a href="#lua_socket_read_timeout"&gt;lua_socket_read_timeout&lt;/a&gt;).&lt;/p&gt;
&lt;p&gt;It is recommended to use &lt;a href="#tcpsocksettimeouts"&gt;settimeouts&lt;/a&gt; instead of &lt;a href="#tcpsocksettimeout"&gt;settimeout&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Note that this method does &lt;em&gt;not&lt;/em&gt; affect the &lt;a href="#lua_socket_keepalive_timeout"&gt;lua_socket_keepalive_timeout&lt;/a&gt; setting; the &lt;code&gt;timeout&lt;/code&gt; argument to the &lt;a href="#tcpsocksetkeepalive"&gt;setkeepalive&lt;/a&gt; method should be used for this purpose instead.&lt;/p&gt;
&lt;p&gt;This feature was first introduced in the &lt;code&gt;v0.10.7&lt;/code&gt; release.&lt;/p&gt;
&lt;p&gt;&lt;a href="#nginx-api-for-lua"&gt;Back to TOC&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-tcpsocksetoption" class="anchor" aria-hidden="true" href="#tcpsocksetoption"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;tcpsock:setoption&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;syntax:&lt;/strong&gt; &lt;em&gt;tcpsock:setoption(option, value?)&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;context:&lt;/strong&gt; &lt;em&gt;rewrite_by_lua*, access_by_lua*, content_by_lua*, ngx.timer.*, ssl_certificate_by_lua*, ssl_session_fetch_by_lua*&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;This function is added for &lt;a href="http://w3.impa.br/~diego/software/luasocket/tcp.html" rel="nofollow"&gt;LuaSocket&lt;/a&gt; API compatibility and does nothing for now. Its functionality will be implemented in future.&lt;/p&gt;
&lt;p&gt;This feature was first introduced in the &lt;code&gt;v0.5.0rc1&lt;/code&gt; release.&lt;/p&gt;
&lt;p&gt;&lt;a href="#nginx-api-for-lua"&gt;Back to TOC&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-tcpsocksetkeepalive" class="anchor" aria-hidden="true" href="#tcpsocksetkeepalive"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;tcpsock:setkeepalive&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;syntax:&lt;/strong&gt; &lt;em&gt;ok, err = tcpsock:setkeepalive(timeout?, size?)&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;context:&lt;/strong&gt; &lt;em&gt;rewrite_by_lua*, access_by_lua*, content_by_lua*, ngx.timer.*, ssl_certificate_by_lua*, ssl_session_fetch_by_lua*&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;Puts the current socket's connection immediately into the cosocket built-in connection pool and keep it alive until other &lt;a href="#tcpsockconnect"&gt;connect&lt;/a&gt; method calls request it or the associated maximal idle timeout is expired.&lt;/p&gt;
&lt;p&gt;The first optional argument, &lt;code&gt;timeout&lt;/code&gt;, can be used to specify the maximal idle timeout (in milliseconds) for the current connection. If omitted, the default setting in the &lt;a href="#lua_socket_keepalive_timeout"&gt;lua_socket_keepalive_timeout&lt;/a&gt; config directive will be used. If the &lt;code&gt;0&lt;/code&gt; value is given, then the timeout interval is unlimited.&lt;/p&gt;
&lt;p&gt;The second optional argument &lt;code&gt;size&lt;/code&gt; is considered deprecated since
the &lt;code&gt;v0.10.14&lt;/code&gt; release of this module, in favor of the
&lt;code&gt;pool_size&lt;/code&gt; option of the &lt;a href="#tcpsockconnect"&gt;connect&lt;/a&gt; method.
Since the &lt;code&gt;v0.10.14&lt;/code&gt; release, this option will only take effect if
the call to &lt;a href="#tcpsockconnect"&gt;connect&lt;/a&gt; did not already create a connection
pool.
When this option takes effect (no connection pool was previously created by
&lt;a href="#tcpsockconnect"&gt;connect&lt;/a&gt;), it will specify the size of the connection pool,
and create it.
If omitted (and no pool was previously created), the default size is the value
of the &lt;a href="#lua_socket_pool_size"&gt;lua_socket_pool_size&lt;/a&gt; directive.
The connection pool holds up to &lt;code&gt;size&lt;/code&gt; alive connections ready to be
reused by subsequent calls to &lt;a href="#tcpsockconnect"&gt;connect&lt;/a&gt;, but note that there
is no upper limit to the total number of opened connections outside of the
pool.
When the connection pool would exceed its size limit, the least recently used
(kept-alive) connection already in the pool will be closed to make room for
the current connection.
Note that the cosocket connection pool is per Nginx worker process rather
than per Nginx server instance, so the size limit specified here also applies
to every single Nginx worker process. Also note that the size of the connection
pool cannot be changed once it has been created.
If you need to restrict the total number of opened connections, specify both
the &lt;code&gt;pool_size&lt;/code&gt; and &lt;code&gt;backlog&lt;/code&gt; option in the call to
&lt;a href="#tcpsockconnect"&gt;connect&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;In case of success, this method returns &lt;code&gt;1&lt;/code&gt;; otherwise, it returns &lt;code&gt;nil&lt;/code&gt; and a string describing the error.&lt;/p&gt;
&lt;p&gt;When the system receive buffer for the current connection has unread data, then this method will return the "connection in dubious state" error message (as the second return value) because the previous session has unread data left behind for the next session and the connection is not safe to be reused.&lt;/p&gt;
&lt;p&gt;This method also makes the current cosocket object enter the "closed" state, so there is no need to manually call the &lt;a href="#tcpsockclose"&gt;close&lt;/a&gt; method on it afterwards.&lt;/p&gt;
&lt;p&gt;This feature was first introduced in the &lt;code&gt;v0.5.0rc1&lt;/code&gt; release.&lt;/p&gt;
&lt;p&gt;&lt;a href="#nginx-api-for-lua"&gt;Back to TOC&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-tcpsockgetreusedtimes" class="anchor" aria-hidden="true" href="#tcpsockgetreusedtimes"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;tcpsock:getreusedtimes&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;syntax:&lt;/strong&gt; &lt;em&gt;count, err = tcpsock:getreusedtimes()&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;context:&lt;/strong&gt; &lt;em&gt;rewrite_by_lua*, access_by_lua*, content_by_lua*, ngx.timer.*, ssl_certificate_by_lua*, ssl_session_fetch_by_lua*&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;This method returns the (successfully) reused times for the current connection. In case of error, it returns &lt;code&gt;nil&lt;/code&gt; and a string describing the error.&lt;/p&gt;
&lt;p&gt;If the current connection does not come from the built-in connection pool, then this method always returns &lt;code&gt;0&lt;/code&gt;, that is, the connection has never been reused (yet). If the connection comes from the connection pool, then the return value is always non-zero. So this method can also be used to determine if the current connection comes from the pool.&lt;/p&gt;
&lt;p&gt;This feature was first introduced in the &lt;code&gt;v0.5.0rc1&lt;/code&gt; release.&lt;/p&gt;
&lt;p&gt;&lt;a href="#nginx-api-for-lua"&gt;Back to TOC&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-ngxsocketconnect" class="anchor" aria-hidden="true" href="#ngxsocketconnect"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;ngx.socket.connect&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;syntax:&lt;/strong&gt; &lt;em&gt;tcpsock, err = ngx.socket.connect(host, port)&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;syntax:&lt;/strong&gt; &lt;em&gt;tcpsock, err = ngx.socket.connect("unix:/path/to/unix-domain.socket")&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;context:&lt;/strong&gt; &lt;em&gt;rewrite_by_lua*, access_by_lua*, content_by_lua*, ngx.timer.*&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;This function is a shortcut for combining &lt;a href="#ngxsockettcp"&gt;ngx.socket.tcp()&lt;/a&gt; and the &lt;a href="#tcpsockconnect"&gt;connect()&lt;/a&gt; method call in a single operation. It is actually implemented like this:&lt;/p&gt;
&lt;div class="highlight highlight-source-lua"&gt;&lt;pre&gt; &lt;span class="pl-k"&gt;local&lt;/span&gt; sock &lt;span class="pl-k"&gt;=&lt;/span&gt; ngx.&lt;span class="pl-smi"&gt;socket&lt;/span&gt;.&lt;span class="pl-c1"&gt;tcp&lt;/span&gt;()
 &lt;span class="pl-k"&gt;local&lt;/span&gt; ok, err &lt;span class="pl-k"&gt;=&lt;/span&gt; sock:&lt;span class="pl-c1"&gt;connect&lt;/span&gt;(&lt;span class="pl-c1"&gt;...&lt;/span&gt;)
 &lt;span class="pl-k"&gt;if&lt;/span&gt; &lt;span class="pl-k"&gt;not&lt;/span&gt; ok &lt;span class="pl-k"&gt;then&lt;/span&gt;
     &lt;span class="pl-k"&gt;return&lt;/span&gt; &lt;span class="pl-c1"&gt;nil&lt;/span&gt;, err
 &lt;span class="pl-k"&gt;end&lt;/span&gt;
 &lt;span class="pl-k"&gt;return&lt;/span&gt; sock&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;There is no way to use the &lt;a href="#tcpsocksettimeout"&gt;settimeout&lt;/a&gt; method to specify connecting timeout for this method and the &lt;a href="#lua_socket_connect_timeout"&gt;lua_socket_connect_timeout&lt;/a&gt; directive must be set at configure time instead.&lt;/p&gt;
&lt;p&gt;This feature was first introduced in the &lt;code&gt;v0.5.0rc1&lt;/code&gt; release.&lt;/p&gt;
&lt;p&gt;&lt;a href="#nginx-api-for-lua"&gt;Back to TOC&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-ngxget_phase" class="anchor" aria-hidden="true" href="#ngxget_phase"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;ngx.get_phase&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;syntax:&lt;/strong&gt; &lt;em&gt;str = ngx.get_phase()&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;context:&lt;/strong&gt; &lt;em&gt;init_by_lua*, init_worker_by_lua*, set_by_lua*, rewrite_by_lua*, access_by_lua*, content_by_lua*, header_filter_by_lua*, body_filter_by_lua*, log_by_lua*, ngx.timer.*, balancer_by_lua*, ssl_certificate_by_lua*, ssl_session_fetch_by_lua*, ssl_session_store_by_lua*&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;Retrieves the current running phase name. Possible return values are&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;init&lt;/code&gt;
for the context of &lt;a href="#init_by_lua"&gt;init_by_lua*&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;init_worker&lt;/code&gt;
for the context of &lt;a href="#init_worker_by_lua"&gt;init_worker_by_lua*&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;ssl_cert&lt;/code&gt;
for the context of &lt;a href="#ssl_certificate_by_lua_block"&gt;ssl_certificate_by_lua*&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;ssl_session_fetch&lt;/code&gt;
for the context of &lt;a href="#ssl_session_fetch_by_lua_block"&gt;ssl_session_fetch_by_lua*&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;ssl_session_store&lt;/code&gt;
for the context of &lt;a href="#ssl_session_store_by_lua_block"&gt;ssl_session_store_by_lua*&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;set&lt;/code&gt;
for the context of &lt;a href="#set_by_lua"&gt;set_by_lua*&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;rewrite&lt;/code&gt;
for the context of &lt;a href="#rewrite_by_lua"&gt;rewrite_by_lua*&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;balancer&lt;/code&gt;
for the context of &lt;a href="#balancer_by_lua_block"&gt;balancer_by_lua*&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;access&lt;/code&gt;
for the context of &lt;a href="#access_by_lua"&gt;access_by_lua*&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;content&lt;/code&gt;
for the context of &lt;a href="#content_by_lua"&gt;content_by_lua*&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;header_filter&lt;/code&gt;
for the context of &lt;a href="#header_filter_by_lua"&gt;header_filter_by_lua*&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;body_filter&lt;/code&gt;
for the context of &lt;a href="#body_filter_by_lua"&gt;body_filter_by_lua*&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;log&lt;/code&gt;
for the context of &lt;a href="#log_by_lua"&gt;log_by_lua*&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;timer&lt;/code&gt;
for the context of user callback functions for &lt;a href="#ngxtimerat"&gt;ngx.timer.*&lt;/a&gt;.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;This API was first introduced in the &lt;code&gt;v0.5.10&lt;/code&gt; release.&lt;/p&gt;
&lt;p&gt;&lt;a href="#nginx-api-for-lua"&gt;Back to TOC&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-ngxthreadspawn" class="anchor" aria-hidden="true" href="#ngxthreadspawn"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;ngx.thread.spawn&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;syntax:&lt;/strong&gt; &lt;em&gt;co = ngx.thread.spawn(func, arg1, arg2, ...)&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;context:&lt;/strong&gt; &lt;em&gt;rewrite_by_lua*, access_by_lua*, content_by_lua*, ngx.timer.*, ssl_certificate_by_lua*, ssl_session_fetch_by_lua*&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;Spawns a new user "light thread" with the Lua function &lt;code&gt;func&lt;/code&gt; as well as those optional arguments &lt;code&gt;arg1&lt;/code&gt;, &lt;code&gt;arg2&lt;/code&gt;, and etc. Returns a Lua thread (or Lua coroutine) object represents this "light thread".&lt;/p&gt;
&lt;p&gt;"Light threads" are just a special kind of Lua coroutines that are scheduled by the ngx_lua module.&lt;/p&gt;
&lt;p&gt;Before &lt;code&gt;ngx.thread.spawn&lt;/code&gt; returns, the &lt;code&gt;func&lt;/code&gt; will be called with those optional arguments until it returns, aborts with an error, or gets yielded due to I/O operations via the &lt;a href="#nginx-api-for-lua"&gt;Nginx API for Lua&lt;/a&gt; (like &lt;a href="#tcpsockreceive"&gt;tcpsock:receive&lt;/a&gt;).&lt;/p&gt;
&lt;p&gt;After &lt;code&gt;ngx.thread.spawn&lt;/code&gt; returns, the newly-created "light thread" will keep running asynchronously usually at various I/O events.&lt;/p&gt;
&lt;p&gt;All the Lua code chunks running by &lt;a href="#rewrite_by_lua"&gt;rewrite_by_lua&lt;/a&gt;, &lt;a href="#access_by_lua"&gt;access_by_lua&lt;/a&gt;, and &lt;a href="#content_by_lua"&gt;content_by_lua&lt;/a&gt; are in a boilerplate "light thread" created automatically by ngx_lua. Such boilerplate "light thread" are also called "entry threads".&lt;/p&gt;
&lt;p&gt;By default, the corresponding Nginx handler (e.g., &lt;a href="#rewrite_by_lua"&gt;rewrite_by_lua&lt;/a&gt; handler) will not terminate until&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;both the "entry thread" and all the user "light threads" terminates,&lt;/li&gt;
&lt;li&gt;a "light thread" (either the "entry thread" or a user "light thread" aborts by calling &lt;a href="#ngxexit"&gt;ngx.exit&lt;/a&gt;, &lt;a href="#ngxexec"&gt;ngx.exec&lt;/a&gt;, &lt;a href="#ngxredirect"&gt;ngx.redirect&lt;/a&gt;, or &lt;a href="#ngxreqset_uri"&gt;ngx.req.set_uri(uri, true)&lt;/a&gt;, or&lt;/li&gt;
&lt;li&gt;the "entry thread" terminates with a Lua error.&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;When the user "light thread" terminates with a Lua error, however, it will not abort other running "light threads" like the "entry thread" does.&lt;/p&gt;
&lt;p&gt;Due to the limitation in the Nginx subrequest model, it is not allowed to abort a running Nginx subrequest in general. So it is also prohibited to abort a running "light thread" that is pending on one ore more Nginx subrequests. You must call &lt;a href="#ngxthreadwait"&gt;ngx.thread.wait&lt;/a&gt; to wait for those "light thread" to terminate before quitting the "world". A notable exception here is that you can abort pending subrequests by calling &lt;a href="#ngxexit"&gt;ngx.exit&lt;/a&gt; with and only with the status code &lt;code&gt;ngx.ERROR&lt;/code&gt; (-1), &lt;code&gt;408&lt;/code&gt;, &lt;code&gt;444&lt;/code&gt;, or &lt;code&gt;499&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;The "light threads" are not scheduled in a pre-emptive way. In other words, no time-slicing is performed automatically. A "light thread" will keep running exclusively on the CPU until&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;a (nonblocking) I/O operation cannot be completed in a single run,&lt;/li&gt;
&lt;li&gt;it calls &lt;a href="#coroutineyield"&gt;coroutine.yield&lt;/a&gt; to actively give up execution, or&lt;/li&gt;
&lt;li&gt;it is aborted by a Lua error or an invocation of &lt;a href="#ngxexit"&gt;ngx.exit&lt;/a&gt;, &lt;a href="#ngxexec"&gt;ngx.exec&lt;/a&gt;, &lt;a href="#ngxredirect"&gt;ngx.redirect&lt;/a&gt;, or &lt;a href="#ngxreqset_uri"&gt;ngx.req.set_uri(uri, true)&lt;/a&gt;.&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;For the first two cases, the "light thread" will usually be resumed later by the ngx_lua scheduler unless a "stop-the-world" event happens.&lt;/p&gt;
&lt;p&gt;User "light threads" can create "light threads" themselves. And normal user coroutines created by &lt;a href="#coroutinecreate"&gt;coroutine.create&lt;/a&gt; can also create "light threads". The coroutine (be it a normal Lua coroutine or a "light thread") that directly spawns the "light thread" is called the "parent coroutine" for the "light thread" newly spawned.&lt;/p&gt;
&lt;p&gt;The "parent coroutine" can call &lt;a href="#ngxthreadwait"&gt;ngx.thread.wait&lt;/a&gt; to wait on the termination of its child "light thread".&lt;/p&gt;
&lt;p&gt;You can call coroutine.status() and coroutine.yield() on the "light thread" coroutines.&lt;/p&gt;
&lt;p&gt;The status of the "light thread" coroutine can be "zombie" if&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;the current "light thread" already terminates (either successfully or with an error),&lt;/li&gt;
&lt;li&gt;its parent coroutine is still alive, and&lt;/li&gt;
&lt;li&gt;its parent coroutine is not waiting on it with &lt;a href="#ngxthreadwait"&gt;ngx.thread.wait&lt;/a&gt;.&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;The following example demonstrates the use of coroutine.yield() in the "light thread" coroutines
to do manual time-slicing:&lt;/p&gt;
&lt;div class="highlight highlight-source-lua"&gt;&lt;pre&gt; &lt;span class="pl-k"&gt;local&lt;/span&gt; yield &lt;span class="pl-k"&gt;=&lt;/span&gt; coroutine.&lt;span class="pl-smi"&gt;yield&lt;/span&gt;

 &lt;span class="pl-k"&gt;function&lt;/span&gt; &lt;span class="pl-en"&gt;f&lt;/span&gt;()
     &lt;span class="pl-k"&gt;local&lt;/span&gt; &lt;span class="pl-c1"&gt;self&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;coroutine.running&lt;/span&gt;()
     ngx.&lt;span class="pl-c1"&gt;say&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;f 1&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
     &lt;span class="pl-c1"&gt;yield&lt;/span&gt;(&lt;span class="pl-c1"&gt;self&lt;/span&gt;)
     ngx.&lt;span class="pl-c1"&gt;say&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;f 2&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
     &lt;span class="pl-c1"&gt;yield&lt;/span&gt;(&lt;span class="pl-c1"&gt;self&lt;/span&gt;)
     ngx.&lt;span class="pl-c1"&gt;say&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;f 3&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
 &lt;span class="pl-k"&gt;end&lt;/span&gt;

 &lt;span class="pl-k"&gt;local&lt;/span&gt; &lt;span class="pl-c1"&gt;self&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;coroutine.running&lt;/span&gt;()
 ngx.&lt;span class="pl-c1"&gt;say&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;0&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
 &lt;span class="pl-c1"&gt;yield&lt;/span&gt;(&lt;span class="pl-c1"&gt;self&lt;/span&gt;)

 ngx.&lt;span class="pl-c1"&gt;say&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;1&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
 ngx.&lt;span class="pl-smi"&gt;thread&lt;/span&gt;.&lt;span class="pl-c1"&gt;spawn&lt;/span&gt;(f)

 ngx.&lt;span class="pl-c1"&gt;say&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;2&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
 &lt;span class="pl-c1"&gt;yield&lt;/span&gt;(&lt;span class="pl-c1"&gt;self&lt;/span&gt;)

 ngx.&lt;span class="pl-c1"&gt;say&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;3&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
 &lt;span class="pl-c1"&gt;yield&lt;/span&gt;(&lt;span class="pl-c1"&gt;self&lt;/span&gt;)

 ngx.&lt;span class="pl-c1"&gt;say&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;4&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Then it will generate the output&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;0
1
f 1
2
f 2
3
f 3
4
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;"Light threads" are mostly useful for making concurrent upstream requests in a single Nginx request handler, much like a generalized version of &lt;a href="#ngxlocationcapture_multi"&gt;ngx.location.capture_multi&lt;/a&gt; that can work with all the &lt;a href="#nginx-api-for-lua"&gt;Nginx API for Lua&lt;/a&gt;. The following example demonstrates parallel requests to MySQL, Memcached, and upstream HTTP services in a single Lua handler, and outputting the results in the order that they actually return (similar to Facebook's BigPipe model):&lt;/p&gt;
&lt;div class="highlight highlight-source-lua"&gt;&lt;pre&gt; &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;--&lt;/span&gt; query mysql, memcached, and a remote http service at the same time,&lt;/span&gt;
 &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;--&lt;/span&gt; output the results in the order that they&lt;/span&gt;
 &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;--&lt;/span&gt; actually return the results.&lt;/span&gt;

 &lt;span class="pl-k"&gt;local&lt;/span&gt; mysql &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;require&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;resty.mysql&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;
 &lt;span class="pl-k"&gt;local&lt;/span&gt; memcached &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;require&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;resty.memcached&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;

 &lt;span class="pl-k"&gt;local&lt;/span&gt; &lt;span class="pl-k"&gt;function&lt;/span&gt; &lt;span class="pl-en"&gt;query_mysql&lt;/span&gt;()
     &lt;span class="pl-k"&gt;local&lt;/span&gt; db &lt;span class="pl-k"&gt;=&lt;/span&gt; mysql:&lt;span class="pl-c1"&gt;new&lt;/span&gt;()
     db:&lt;span class="pl-c1"&gt;connect&lt;/span&gt;{
                 host &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;127.0.0.1&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;,
                 port &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;3306&lt;/span&gt;,
                 database &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;test&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;,
                 user &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;monty&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;,
                 password &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;mypass&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;
               }
     &lt;span class="pl-k"&gt;local&lt;/span&gt; res, err, errno, sqlstate &lt;span class="pl-k"&gt;=&lt;/span&gt;
             db:&lt;span class="pl-c1"&gt;query&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;select * from cats order by id asc&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
     db:&lt;span class="pl-c1"&gt;set_keepalive&lt;/span&gt;(&lt;span class="pl-c1"&gt;0&lt;/span&gt;, &lt;span class="pl-c1"&gt;100&lt;/span&gt;)
     ngx.&lt;span class="pl-c1"&gt;say&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;mysql done: &lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, cjson.&lt;span class="pl-c1"&gt;encode&lt;/span&gt;(res))
 &lt;span class="pl-k"&gt;end&lt;/span&gt;

 &lt;span class="pl-k"&gt;local&lt;/span&gt; &lt;span class="pl-k"&gt;function&lt;/span&gt; &lt;span class="pl-en"&gt;query_memcached&lt;/span&gt;()
     &lt;span class="pl-k"&gt;local&lt;/span&gt; memc &lt;span class="pl-k"&gt;=&lt;/span&gt; memcached:&lt;span class="pl-c1"&gt;new&lt;/span&gt;()
     memc:&lt;span class="pl-c1"&gt;connect&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;127.0.0.1&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-c1"&gt;11211&lt;/span&gt;)
     &lt;span class="pl-k"&gt;local&lt;/span&gt; res, err &lt;span class="pl-k"&gt;=&lt;/span&gt; memc:&lt;span class="pl-c1"&gt;get&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;some_key&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
     ngx.&lt;span class="pl-c1"&gt;say&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;memcached done: &lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, res)
 &lt;span class="pl-k"&gt;end&lt;/span&gt;

 &lt;span class="pl-k"&gt;local&lt;/span&gt; &lt;span class="pl-k"&gt;function&lt;/span&gt; &lt;span class="pl-en"&gt;query_http&lt;/span&gt;()
     &lt;span class="pl-k"&gt;local&lt;/span&gt; res &lt;span class="pl-k"&gt;=&lt;/span&gt; ngx.&lt;span class="pl-smi"&gt;location&lt;/span&gt;.&lt;span class="pl-c1"&gt;capture&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;/my-http-proxy&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
     ngx.&lt;span class="pl-c1"&gt;say&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;http done: &lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, res.&lt;span class="pl-smi"&gt;body&lt;/span&gt;)
 &lt;span class="pl-k"&gt;end&lt;/span&gt;

 ngx.&lt;span class="pl-smi"&gt;thread&lt;/span&gt;.&lt;span class="pl-c1"&gt;spawn&lt;/span&gt;(query_mysql)      &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;--&lt;/span&gt; create thread 1&lt;/span&gt;
 ngx.&lt;span class="pl-smi"&gt;thread&lt;/span&gt;.&lt;span class="pl-c1"&gt;spawn&lt;/span&gt;(query_memcached)  &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;--&lt;/span&gt; create thread 2&lt;/span&gt;
 ngx.&lt;span class="pl-smi"&gt;thread&lt;/span&gt;.&lt;span class="pl-c1"&gt;spawn&lt;/span&gt;(query_http)       &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;--&lt;/span&gt; create thread 3&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;This API was first enabled in the &lt;code&gt;v0.7.0&lt;/code&gt; release.&lt;/p&gt;
&lt;p&gt;&lt;a href="#nginx-api-for-lua"&gt;Back to TOC&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-ngxthreadwait" class="anchor" aria-hidden="true" href="#ngxthreadwait"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;ngx.thread.wait&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;syntax:&lt;/strong&gt; &lt;em&gt;ok, res1, res2, ... = ngx.thread.wait(thread1, thread2, ...)&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;context:&lt;/strong&gt; &lt;em&gt;rewrite_by_lua*, access_by_lua*, content_by_lua*, ngx.timer.*, ssl_certificate_by_lua*, ssl_session_fetch_by_lua*&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;Waits on one or more child "light threads" and returns the results of the first "light thread" that terminates (either successfully or with an error).&lt;/p&gt;
&lt;p&gt;The arguments &lt;code&gt;thread1&lt;/code&gt;, &lt;code&gt;thread2&lt;/code&gt;, and etc are the Lua thread objects returned by earlier calls of &lt;a href="#ngxthreadspawn"&gt;ngx.thread.spawn&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;The return values have exactly the same meaning as &lt;a href="#coroutineresume"&gt;coroutine.resume&lt;/a&gt;, that is, the first value returned is a boolean value indicating whether the "light thread" terminates successfully or not, and subsequent values returned are the return values of the user Lua function that was used to spawn the "light thread" (in case of success) or the error object (in case of failure).&lt;/p&gt;
&lt;p&gt;Only the direct "parent coroutine" can wait on its child "light thread", otherwise a Lua exception will be raised.&lt;/p&gt;
&lt;p&gt;The following example demonstrates the use of &lt;code&gt;ngx.thread.wait&lt;/code&gt; and &lt;a href="#ngxlocationcapture"&gt;ngx.location.capture&lt;/a&gt; to emulate &lt;a href="#ngxlocationcapture_multi"&gt;ngx.location.capture_multi&lt;/a&gt;:&lt;/p&gt;
&lt;div class="highlight highlight-source-lua"&gt;&lt;pre&gt; &lt;span class="pl-k"&gt;local&lt;/span&gt; capture &lt;span class="pl-k"&gt;=&lt;/span&gt; ngx.&lt;span class="pl-smi"&gt;location&lt;/span&gt;.&lt;span class="pl-smi"&gt;capture&lt;/span&gt;
 &lt;span class="pl-k"&gt;local&lt;/span&gt; spawn &lt;span class="pl-k"&gt;=&lt;/span&gt; ngx.&lt;span class="pl-smi"&gt;thread&lt;/span&gt;.&lt;span class="pl-smi"&gt;spawn&lt;/span&gt;
 &lt;span class="pl-k"&gt;local&lt;/span&gt; wait &lt;span class="pl-k"&gt;=&lt;/span&gt; ngx.&lt;span class="pl-smi"&gt;thread&lt;/span&gt;.&lt;span class="pl-smi"&gt;wait&lt;/span&gt;
 &lt;span class="pl-k"&gt;local&lt;/span&gt; say &lt;span class="pl-k"&gt;=&lt;/span&gt; ngx.&lt;span class="pl-smi"&gt;say&lt;/span&gt;

 &lt;span class="pl-k"&gt;local&lt;/span&gt; &lt;span class="pl-k"&gt;function&lt;/span&gt; &lt;span class="pl-en"&gt;fetch&lt;/span&gt;(&lt;span class="pl-smi"&gt;uri&lt;/span&gt;)
     &lt;span class="pl-k"&gt;return&lt;/span&gt; &lt;span class="pl-c1"&gt;capture&lt;/span&gt;(uri)
 &lt;span class="pl-k"&gt;end&lt;/span&gt;

 &lt;span class="pl-k"&gt;local&lt;/span&gt; threads &lt;span class="pl-k"&gt;=&lt;/span&gt; {
     &lt;span class="pl-c1"&gt;spawn&lt;/span&gt;(fetch, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;/foo&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;),
     &lt;span class="pl-c1"&gt;spawn&lt;/span&gt;(fetch, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;/bar&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;),
     &lt;span class="pl-c1"&gt;spawn&lt;/span&gt;(fetch, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;/baz&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
 }

 &lt;span class="pl-k"&gt;for&lt;/span&gt; i &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;1&lt;/span&gt;, &lt;span class="pl-k"&gt;#&lt;/span&gt;threads &lt;span class="pl-k"&gt;do&lt;/span&gt;
     &lt;span class="pl-k"&gt;local&lt;/span&gt; ok, res &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;wait&lt;/span&gt;(threads[i])
     &lt;span class="pl-k"&gt;if&lt;/span&gt; &lt;span class="pl-k"&gt;not&lt;/span&gt; ok &lt;span class="pl-k"&gt;then&lt;/span&gt;
         &lt;span class="pl-c1"&gt;say&lt;/span&gt;(i, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;: failed to run: &lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, res)
     &lt;span class="pl-k"&gt;else&lt;/span&gt;
         &lt;span class="pl-c1"&gt;say&lt;/span&gt;(i, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;: status: &lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, res.&lt;span class="pl-smi"&gt;status&lt;/span&gt;)
         &lt;span class="pl-c1"&gt;say&lt;/span&gt;(i, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;: body: &lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, res.&lt;span class="pl-smi"&gt;body&lt;/span&gt;)
     &lt;span class="pl-k"&gt;end&lt;/span&gt;
 &lt;span class="pl-k"&gt;end&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Here it essentially implements the "wait all" model.&lt;/p&gt;
&lt;p&gt;And below is an example demonstrating the "wait any" model:&lt;/p&gt;
&lt;div class="highlight highlight-source-lua"&gt;&lt;pre&gt; &lt;span class="pl-k"&gt;function&lt;/span&gt; &lt;span class="pl-en"&gt;f&lt;/span&gt;()
     ngx.&lt;span class="pl-c1"&gt;sleep&lt;/span&gt;(&lt;span class="pl-c1"&gt;0.2&lt;/span&gt;)
     ngx.&lt;span class="pl-c1"&gt;say&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;f: hello&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
     &lt;span class="pl-k"&gt;return&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;f done&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;
 &lt;span class="pl-k"&gt;end&lt;/span&gt;

 &lt;span class="pl-k"&gt;function&lt;/span&gt; &lt;span class="pl-en"&gt;g&lt;/span&gt;()
     ngx.&lt;span class="pl-c1"&gt;sleep&lt;/span&gt;(&lt;span class="pl-c1"&gt;0.1&lt;/span&gt;)
     ngx.&lt;span class="pl-c1"&gt;say&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;g: hello&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
     &lt;span class="pl-k"&gt;return&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;g done&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;
 &lt;span class="pl-k"&gt;end&lt;/span&gt;

 &lt;span class="pl-k"&gt;local&lt;/span&gt; tf, err &lt;span class="pl-k"&gt;=&lt;/span&gt; ngx.&lt;span class="pl-smi"&gt;thread&lt;/span&gt;.&lt;span class="pl-c1"&gt;spawn&lt;/span&gt;(f)
 &lt;span class="pl-k"&gt;if&lt;/span&gt; &lt;span class="pl-k"&gt;not&lt;/span&gt; tf &lt;span class="pl-k"&gt;then&lt;/span&gt;
     ngx.&lt;span class="pl-c1"&gt;say&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;failed to spawn thread f: &lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, err)
     &lt;span class="pl-k"&gt;return&lt;/span&gt;
 &lt;span class="pl-k"&gt;end&lt;/span&gt;

 ngx.&lt;span class="pl-c1"&gt;say&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;f thread created: &lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-c1"&gt;coroutine.status&lt;/span&gt;(tf))

 &lt;span class="pl-k"&gt;local&lt;/span&gt; tg, err &lt;span class="pl-k"&gt;=&lt;/span&gt; ngx.&lt;span class="pl-smi"&gt;thread&lt;/span&gt;.&lt;span class="pl-c1"&gt;spawn&lt;/span&gt;(g)
 &lt;span class="pl-k"&gt;if&lt;/span&gt; &lt;span class="pl-k"&gt;not&lt;/span&gt; tg &lt;span class="pl-k"&gt;then&lt;/span&gt;
     ngx.&lt;span class="pl-c1"&gt;say&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;failed to spawn thread g: &lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, err)
     &lt;span class="pl-k"&gt;return&lt;/span&gt;
 &lt;span class="pl-k"&gt;end&lt;/span&gt;

 ngx.&lt;span class="pl-c1"&gt;say&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;g thread created: &lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-c1"&gt;coroutine.status&lt;/span&gt;(tg))

 ok, res &lt;span class="pl-k"&gt;=&lt;/span&gt; ngx.&lt;span class="pl-smi"&gt;thread&lt;/span&gt;.&lt;span class="pl-c1"&gt;wait&lt;/span&gt;(tf, tg)
 &lt;span class="pl-k"&gt;if&lt;/span&gt; &lt;span class="pl-k"&gt;not&lt;/span&gt; ok &lt;span class="pl-k"&gt;then&lt;/span&gt;
     ngx.&lt;span class="pl-c1"&gt;say&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;failed to wait: &lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, res)
     &lt;span class="pl-k"&gt;return&lt;/span&gt;
 &lt;span class="pl-k"&gt;end&lt;/span&gt;

 ngx.&lt;span class="pl-c1"&gt;say&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;res: &lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, res)

 &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;--&lt;/span&gt; stop the "world", aborting other running threads&lt;/span&gt;
 ngx.&lt;span class="pl-c1"&gt;exit&lt;/span&gt;(ngx.&lt;span class="pl-smi"&gt;OK&lt;/span&gt;)&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;And it will generate the following output:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;f thread created: running
g thread created: running
g: hello
res: g done
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;This API was first enabled in the &lt;code&gt;v0.7.0&lt;/code&gt; release.&lt;/p&gt;
&lt;p&gt;&lt;a href="#nginx-api-for-lua"&gt;Back to TOC&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-ngxthreadkill" class="anchor" aria-hidden="true" href="#ngxthreadkill"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;ngx.thread.kill&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;syntax:&lt;/strong&gt; &lt;em&gt;ok, err = ngx.thread.kill(thread)&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;context:&lt;/strong&gt; &lt;em&gt;rewrite_by_lua*, access_by_lua*, content_by_lua*, ngx.timer.*, ssl_certificate_by_lua*, ssl_session_fetch_by_lua*&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;Kills a running "light thread" created by &lt;a href="#ngxthreadspawn"&gt;ngx.thread.spawn&lt;/a&gt;. Returns a true value when successful or &lt;code&gt;nil&lt;/code&gt; and a string describing the error otherwise.&lt;/p&gt;
&lt;p&gt;According to the current implementation, only the parent coroutine (or "light thread") can kill a thread. Also, a running "light thread" with pending Nginx subrequests (initiated by &lt;a href="#ngxlocationcapture"&gt;ngx.location.capture&lt;/a&gt; for example) cannot be killed due to a limitation in the Nginx core.&lt;/p&gt;
&lt;p&gt;This API was first enabled in the &lt;code&gt;v0.9.9&lt;/code&gt; release.&lt;/p&gt;
&lt;p&gt;&lt;a href="#nginx-api-for-lua"&gt;Back to TOC&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-ngxon_abort" class="anchor" aria-hidden="true" href="#ngxon_abort"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;ngx.on_abort&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;syntax:&lt;/strong&gt; &lt;em&gt;ok, err = ngx.on_abort(callback)&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;context:&lt;/strong&gt; &lt;em&gt;rewrite_by_lua*, access_by_lua*, content_by_lua*&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;Registers a user Lua function as the callback which gets called automatically when the client closes the (downstream) connection prematurely.&lt;/p&gt;
&lt;p&gt;Returns &lt;code&gt;1&lt;/code&gt; if the callback is registered successfully or returns &lt;code&gt;nil&lt;/code&gt; and a string describing the error otherwise.&lt;/p&gt;
&lt;p&gt;All the &lt;a href="#nginx-api-for-lua"&gt;Nginx API for Lua&lt;/a&gt; can be used in the callback function because the function is run in a special "light thread", just as those "light threads" created by &lt;a href="#ngxthreadspawn"&gt;ngx.thread.spawn&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;The callback function can decide what to do with the client abortion event all by itself. For example, it can simply ignore the event by doing nothing and the current Lua request handler will continue executing without interruptions. And the callback function can also decide to terminate everything by calling &lt;a href="#ngxexit"&gt;ngx.exit&lt;/a&gt;, for example,&lt;/p&gt;
&lt;div class="highlight highlight-source-lua"&gt;&lt;pre&gt; &lt;span class="pl-k"&gt;local&lt;/span&gt; &lt;span class="pl-k"&gt;function&lt;/span&gt; &lt;span class="pl-en"&gt;my_cleanup&lt;/span&gt;()
     &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;--&lt;/span&gt; custom cleanup work goes here, like cancelling a pending DB transaction&lt;/span&gt;

     &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;--&lt;/span&gt; now abort all the "light threads" running in the current request handler&lt;/span&gt;
     ngx.&lt;span class="pl-c1"&gt;exit&lt;/span&gt;(&lt;span class="pl-c1"&gt;499&lt;/span&gt;)
 &lt;span class="pl-k"&gt;end&lt;/span&gt;

 &lt;span class="pl-k"&gt;local&lt;/span&gt; ok, err &lt;span class="pl-k"&gt;=&lt;/span&gt; ngx.&lt;span class="pl-c1"&gt;on_abort&lt;/span&gt;(my_cleanup)
 &lt;span class="pl-k"&gt;if&lt;/span&gt; &lt;span class="pl-k"&gt;not&lt;/span&gt; ok &lt;span class="pl-k"&gt;then&lt;/span&gt;
     ngx.&lt;span class="pl-c1"&gt;log&lt;/span&gt;(ngx.&lt;span class="pl-smi"&gt;ERR&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;failed to register the on_abort callback: &lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, err)
     ngx.&lt;span class="pl-c1"&gt;exit&lt;/span&gt;(&lt;span class="pl-c1"&gt;500&lt;/span&gt;)
 &lt;span class="pl-k"&gt;end&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;When &lt;a href="#lua_check_client_abort"&gt;lua_check_client_abort&lt;/a&gt; is set to &lt;code&gt;off&lt;/code&gt; (which is the default), then this function call will always return the error message "lua_check_client_abort is off".&lt;/p&gt;
&lt;p&gt;According to the current implementation, this function can only be called once in a single request handler; subsequent calls will return the error message "duplicate call".&lt;/p&gt;
&lt;p&gt;This API was first introduced in the &lt;code&gt;v0.7.4&lt;/code&gt; release.&lt;/p&gt;
&lt;p&gt;See also &lt;a href="#lua_check_client_abort"&gt;lua_check_client_abort&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;&lt;a href="#nginx-api-for-lua"&gt;Back to TOC&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-ngxtimerat" class="anchor" aria-hidden="true" href="#ngxtimerat"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;ngx.timer.at&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;syntax:&lt;/strong&gt; &lt;em&gt;hdl, err = ngx.timer.at(delay, callback, user_arg1, user_arg2, ...)&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;context:&lt;/strong&gt; &lt;em&gt;init_worker_by_lua*, set_by_lua*, rewrite_by_lua*, access_by_lua*, content_by_lua*, header_filter_by_lua*, body_filter_by_lua*, log_by_lua*, ngx.timer.*, balancer_by_lua*, ssl_certificate_by_lua*, ssl_session_fetch_by_lua*, ssl_session_store_by_lua*&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;Creates an Nginx timer with a user callback function as well as optional user arguments.&lt;/p&gt;
&lt;p&gt;The first argument, &lt;code&gt;delay&lt;/code&gt;, specifies the delay for the timer,
in seconds. One can specify fractional seconds like &lt;code&gt;0.001&lt;/code&gt; to mean 1
millisecond here. &lt;code&gt;0&lt;/code&gt; delay can also be specified, in which case the
timer will immediately expire when the current handler yields
execution.&lt;/p&gt;
&lt;p&gt;The second argument, &lt;code&gt;callback&lt;/code&gt;, can
be any Lua function, which will be invoked later in a background
"light thread" after the delay specified. The user callback will be
called automatically by the Nginx core with the arguments &lt;code&gt;premature&lt;/code&gt;,
&lt;code&gt;user_arg1&lt;/code&gt;, &lt;code&gt;user_arg2&lt;/code&gt;, and etc, where the &lt;code&gt;premature&lt;/code&gt;
argument takes a boolean value indicating whether it is a premature timer
expiration or not, and &lt;code&gt;user_arg1&lt;/code&gt;, &lt;code&gt;user_arg2&lt;/code&gt;, and etc, are
those (extra) user arguments specified when calling &lt;code&gt;ngx.timer.at&lt;/code&gt;
as the remaining arguments.&lt;/p&gt;
&lt;p&gt;Premature timer expiration happens when the Nginx worker process is
trying to shut down, as in an Nginx configuration reload triggered by
the &lt;code&gt;HUP&lt;/code&gt; signal or in an Nginx server shutdown. When the Nginx worker
is trying to shut down, one can no longer call &lt;code&gt;ngx.timer.at&lt;/code&gt; to
create new timers with nonzero delays and in that case &lt;code&gt;ngx.timer.at&lt;/code&gt; will return a "conditional false" value and
a string describing the error, that is, "process exiting".&lt;/p&gt;
&lt;p&gt;Starting from the &lt;code&gt;v0.9.3&lt;/code&gt; release, it is allowed to create zero-delay timers even when the Nginx worker process starts shutting down.&lt;/p&gt;
&lt;p&gt;When a timer expires, the user Lua code in the timer callback is
running in a "light thread" detached completely from the original
request creating the timer. So objects with the same lifetime as the
request creating them, like &lt;a href="#ngxsockettcp"&gt;cosockets&lt;/a&gt;, cannot be shared between the
original request and the timer user callback function.&lt;/p&gt;
&lt;p&gt;Here is a simple example:&lt;/p&gt;
&lt;div class="highlight highlight-source-nginx"&gt;&lt;pre&gt; &lt;span class="pl-k"&gt;location&lt;/span&gt; &lt;span class="pl-en"&gt;/ &lt;/span&gt;{
     ...
     &lt;span class="pl-k"&gt;log_by_lua_block&lt;/span&gt; {
         &lt;span class="pl-k"&gt;local&lt;/span&gt; function push_data(premature, uri, args, status)
             -- &lt;span class="pl-k"&gt;push&lt;/span&gt; the data uri, args, and status to the remote
             -- &lt;span class="pl-k"&gt;via&lt;/span&gt; ngx.socket.tcp or ngx.socket.udp
             -- (&lt;span class="pl-k"&gt;one&lt;/span&gt; may want to buffer the data in Lua &lt;span class="pl-s"&gt;a&lt;/span&gt; bit to
             -- &lt;span class="pl-k"&gt;save&lt;/span&gt; I/O operations)
         &lt;span class="pl-k"&gt;end&lt;/span&gt;
         &lt;span class="pl-k"&gt;local&lt;/span&gt; ok, err = ngx.timer.at(0, push_data,
                                      ngx.var.uri, ngx.var.args, ngx.header.status)
         &lt;span class="pl-k"&gt;if&lt;/span&gt; not ok then
             ngx.log(ngx.ERR, "&lt;span class="pl-k"&gt;failed&lt;/span&gt; to create timer: &lt;span class="pl-s"&gt;", err)&lt;/span&gt;
&lt;span class="pl-s"&gt;             return&lt;/span&gt;
&lt;span class="pl-s"&gt;         end&lt;/span&gt;
&lt;span class="pl-s"&gt;     }&lt;/span&gt;
&lt;span class="pl-s"&gt; }&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;One can also create infinite re-occurring timers, for instance, a timer getting triggered every &lt;code&gt;5&lt;/code&gt; seconds, by calling &lt;code&gt;ngx.timer.at&lt;/code&gt; recursively in the timer callback function. Here is such an example,&lt;/p&gt;
&lt;div class="highlight highlight-source-lua"&gt;&lt;pre&gt; &lt;span class="pl-k"&gt;local&lt;/span&gt; delay &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;5&lt;/span&gt;
 &lt;span class="pl-k"&gt;local&lt;/span&gt; handler
 handler &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-k"&gt;function&lt;/span&gt; (&lt;span class="pl-smi"&gt;premature&lt;/span&gt;)
     &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;--&lt;/span&gt; do some routine job in Lua just like a cron job&lt;/span&gt;
     &lt;span class="pl-k"&gt;if&lt;/span&gt; premature &lt;span class="pl-k"&gt;then&lt;/span&gt;
         &lt;span class="pl-k"&gt;return&lt;/span&gt;
     &lt;span class="pl-k"&gt;end&lt;/span&gt;
     &lt;span class="pl-k"&gt;local&lt;/span&gt; ok, err &lt;span class="pl-k"&gt;=&lt;/span&gt; ngx.&lt;span class="pl-smi"&gt;timer&lt;/span&gt;.&lt;span class="pl-c1"&gt;at&lt;/span&gt;(delay, handler)
     &lt;span class="pl-k"&gt;if&lt;/span&gt; &lt;span class="pl-k"&gt;not&lt;/span&gt; ok &lt;span class="pl-k"&gt;then&lt;/span&gt;
         ngx.&lt;span class="pl-c1"&gt;log&lt;/span&gt;(ngx.&lt;span class="pl-smi"&gt;ERR&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;failed to create the timer: &lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, err)
         &lt;span class="pl-k"&gt;return&lt;/span&gt;
     &lt;span class="pl-k"&gt;end&lt;/span&gt;
 &lt;span class="pl-k"&gt;end&lt;/span&gt;

 &lt;span class="pl-k"&gt;local&lt;/span&gt; ok, err &lt;span class="pl-k"&gt;=&lt;/span&gt; ngx.&lt;span class="pl-smi"&gt;timer&lt;/span&gt;.&lt;span class="pl-c1"&gt;at&lt;/span&gt;(delay, handler)
 &lt;span class="pl-k"&gt;if&lt;/span&gt; &lt;span class="pl-k"&gt;not&lt;/span&gt; ok &lt;span class="pl-k"&gt;then&lt;/span&gt;
     ngx.&lt;span class="pl-c1"&gt;log&lt;/span&gt;(ngx.&lt;span class="pl-smi"&gt;ERR&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;failed to create the timer: &lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, err)
     &lt;span class="pl-k"&gt;return&lt;/span&gt;
 &lt;span class="pl-k"&gt;end&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;It is recommended, however, to use the &lt;a href="#ngxtimerevery"&gt;ngx.timer.every&lt;/a&gt; API function
instead for creating recurring timers since it is more robust.&lt;/p&gt;
&lt;p&gt;Because timer callbacks run in the background and their running time
will not add to any client request's response time, they can easily
accumulate in the server and exhaust system resources due to either
Lua programming mistakes or just too much client traffic. To prevent
extreme consequences like crashing the Nginx server, there are
built-in limitations on both the number of "pending timers" and the
number of "running timers" in an Nginx worker process. The "pending
timers" here mean timers that have not yet been expired and "running
timers" are those whose user callbacks are currently running.&lt;/p&gt;
&lt;p&gt;The maximal number of pending timers allowed in an Nginx
worker is controlled by the &lt;a href="#lua_max_pending_timers"&gt;lua_max_pending_timers&lt;/a&gt;
directive. The maximal number of running timers is controlled by the
&lt;a href="#lua_max_running_timers"&gt;lua_max_running_timers&lt;/a&gt; directive.&lt;/p&gt;
&lt;p&gt;According to the current implementation, each "running timer" will
take one (fake) connection record from the global connection record
list configured by the standard &lt;a href="http://nginx.org/en/docs/ngx_core_module.html#worker_connections" rel="nofollow"&gt;worker_connections&lt;/a&gt; directive in
&lt;code&gt;nginx.conf&lt;/code&gt;. So ensure that the
&lt;a href="http://nginx.org/en/docs/ngx_core_module.html#worker_connections" rel="nofollow"&gt;worker_connections&lt;/a&gt; directive is set to
a large enough value that takes into account both the real connections
and fake connections required by timer callbacks (as limited by the
&lt;a href="#lua_max_running_timers"&gt;lua_max_running_timers&lt;/a&gt; directive).&lt;/p&gt;
&lt;p&gt;A lot of the Lua APIs for Nginx are enabled in the context of the timer
callbacks, like stream/datagram cosockets (&lt;a href="#ngxsockettcp"&gt;ngx.socket.tcp&lt;/a&gt; and &lt;a href="#ngxsocketudp"&gt;ngx.socket.udp&lt;/a&gt;), shared
memory dictionaries (&lt;a href="#ngxshareddict"&gt;ngx.shared.DICT&lt;/a&gt;), user coroutines (&lt;a href="#coroutinecreate"&gt;coroutine.*&lt;/a&gt;),
user "light threads" (&lt;a href="#ngxthreadspawn"&gt;ngx.thread.*&lt;/a&gt;), &lt;a href="#ngxexit"&gt;ngx.exit&lt;/a&gt;, &lt;a href="#ngxnow"&gt;ngx.now&lt;/a&gt;/&lt;a href="#ngxtime"&gt;ngx.time&lt;/a&gt;,
&lt;a href="#ngxmd5"&gt;ngx.md5&lt;/a&gt;/&lt;a href="#ngxsha1_bin"&gt;ngx.sha1_bin&lt;/a&gt;, are all allowed. But the subrequest API (like
&lt;a href="#ngxlocationcapture"&gt;ngx.location.capture&lt;/a&gt;), the &lt;a href="#ngxreqstart_time"&gt;ngx.req.*&lt;/a&gt; API, the downstream output API
(like &lt;a href="#ngxsay"&gt;ngx.say&lt;/a&gt;, &lt;a href="#ngxprint"&gt;ngx.print&lt;/a&gt;, and &lt;a href="#ngxflush"&gt;ngx.flush&lt;/a&gt;) are explicitly disabled in
this context.&lt;/p&gt;
&lt;p&gt;You can pass most of the standard Lua values (nils, booleans, numbers, strings, tables, closures, file handles, and etc) into the timer callback, either explicitly as user arguments or implicitly as upvalues for the callback closure. There are several exceptions, however: you &lt;em&gt;cannot&lt;/em&gt; pass any thread objects returned by &lt;a href="#coroutinecreate"&gt;coroutine.create&lt;/a&gt; and &lt;a href="#ngxthreadspawn"&gt;ngx.thread.spawn&lt;/a&gt; or any cosocket objects returned by &lt;a href="#ngxsockettcp"&gt;ngx.socket.tcp&lt;/a&gt;, &lt;a href="#ngxsocketudp"&gt;ngx.socket.udp&lt;/a&gt;, and &lt;a href="#ngxreqsocket"&gt;ngx.req.socket&lt;/a&gt; because these objects' lifetime is bound to the request context creating them while the timer callback is detached from the creating request's context (by design) and runs in its own (fake) request context. If you try to share the thread or cosocket objects across the boundary of the creating request, then you will get the "no co ctx found" error (for threads) or "bad request" (for cosockets). It is fine, however, to create all these objects inside your timer callback.&lt;/p&gt;
&lt;p&gt;This API was first introduced in the &lt;code&gt;v0.8.0&lt;/code&gt; release.&lt;/p&gt;
&lt;p&gt;&lt;a href="#nginx-api-for-lua"&gt;Back to TOC&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-ngxtimerevery" class="anchor" aria-hidden="true" href="#ngxtimerevery"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;ngx.timer.every&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;syntax:&lt;/strong&gt; &lt;em&gt;hdl, err = ngx.timer.every(delay, callback, user_arg1, user_arg2, ...)&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;context:&lt;/strong&gt; &lt;em&gt;init_worker_by_lua*, set_by_lua*, rewrite_by_lua*, access_by_lua*, content_by_lua*, header_filter_by_lua*, body_filter_by_lua*, log_by_lua*, ngx.timer.*, balancer_by_lua*, ssl_certificate_by_lua*, ssl_session_fetch_by_lua*, ssl_session_store_by_lua*&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;Similar to the &lt;a href="#ngxtimerat"&gt;ngx.timer.at&lt;/a&gt; API function, but&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;&lt;code&gt;delay&lt;/code&gt; &lt;em&gt;cannot&lt;/em&gt; be zero,&lt;/li&gt;
&lt;li&gt;timer will be created every &lt;code&gt;delay&lt;/code&gt; seconds until the current Nginx worker process starts exiting.&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;When success, returns a "conditional true" value (but not a &lt;code&gt;true&lt;/code&gt;). Otherwise, returns a "conditional false" value and a string describing the error.&lt;/p&gt;
&lt;p&gt;This API also respect the &lt;a href="#lua_max_pending_timers"&gt;lua_max_pending_timers&lt;/a&gt; and &lt;a href="#lua_max_running_timers"&gt;lua_max_running_timers&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;This API was first introduced in the &lt;code&gt;v0.10.9&lt;/code&gt; release.&lt;/p&gt;
&lt;p&gt;&lt;a href="#nginx-api-for-lua"&gt;Back to TOC&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-ngxtimerrunning_count" class="anchor" aria-hidden="true" href="#ngxtimerrunning_count"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;ngx.timer.running_count&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;syntax:&lt;/strong&gt; &lt;em&gt;count = ngx.timer.running_count()&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;context:&lt;/strong&gt; &lt;em&gt;init_worker_by_lua*, set_by_lua*, rewrite_by_lua*, access_by_lua*, content_by_lua*, header_filter_by_lua*, body_filter_by_lua*, log_by_lua*, ngx.timer.*, balancer_by_lua*, ssl_certificate_by_lua*, ssl_session_fetch_by_lua*, ssl_session_store_by_lua*&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;Returns the number of timers currently running.&lt;/p&gt;
&lt;p&gt;This directive was first introduced in the &lt;code&gt;v0.9.20&lt;/code&gt; release.&lt;/p&gt;
&lt;p&gt;&lt;a href="#nginx-api-for-lua"&gt;Back to TOC&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-ngxtimerpending_count" class="anchor" aria-hidden="true" href="#ngxtimerpending_count"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;ngx.timer.pending_count&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;syntax:&lt;/strong&gt; &lt;em&gt;count = ngx.timer.pending_count()&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;context:&lt;/strong&gt; &lt;em&gt;init_worker_by_lua*, set_by_lua*, rewrite_by_lua*, access_by_lua*, content_by_lua*, header_filter_by_lua*, body_filter_by_lua*, log_by_lua*, ngx.timer.*, balancer_by_lua*, ssl_certificate_by_lua*, ssl_session_fetch_by_lua*, ssl_session_store_by_lua*&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;Returns the number of pending timers.&lt;/p&gt;
&lt;p&gt;This directive was first introduced in the &lt;code&gt;v0.9.20&lt;/code&gt; release.&lt;/p&gt;
&lt;p&gt;&lt;a href="#nginx-api-for-lua"&gt;Back to TOC&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-ngxconfigsubsystem" class="anchor" aria-hidden="true" href="#ngxconfigsubsystem"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;ngx.config.subsystem&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;syntax:&lt;/strong&gt; &lt;em&gt;subsystem = ngx.config.subsystem&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;context:&lt;/strong&gt; &lt;em&gt;set_by_lua*, rewrite_by_lua*, access_by_lua*, content_by_lua*, header_filter_by_lua*, body_filter_by_lua*, log_by_lua*, ngx.timer.*, init_by_lua*, init_worker_by_lua*&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;This string field indicates the current Nginx subsystem the current Lua environment is based on. For this module, this field always takes the string value &lt;code&gt;"http"&lt;/code&gt;. For
&lt;a href="https://github.com/openresty/stream-lua-nginx-module#readme"&gt;ngx_stream_lua_module&lt;/a&gt;, however, this field takes the value &lt;code&gt;"stream"&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;This field was first introduced in the &lt;code&gt;0.10.1&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;&lt;a href="#nginx-api-for-lua"&gt;Back to TOC&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-ngxconfigdebug" class="anchor" aria-hidden="true" href="#ngxconfigdebug"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;ngx.config.debug&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;syntax:&lt;/strong&gt; &lt;em&gt;debug = ngx.config.debug&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;context:&lt;/strong&gt; &lt;em&gt;set_by_lua*, rewrite_by_lua*, access_by_lua*, content_by_lua*, header_filter_by_lua*, body_filter_by_lua*, log_by_lua*, ngx.timer.*, init_by_lua*, init_worker_by_lua*&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;This boolean field indicates whether the current Nginx is a debug build, i.e., being built by the &lt;code&gt;./configure&lt;/code&gt; option &lt;code&gt;--with-debug&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;This field was first introduced in the &lt;code&gt;0.8.7&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;&lt;a href="#nginx-api-for-lua"&gt;Back to TOC&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-ngxconfigprefix" class="anchor" aria-hidden="true" href="#ngxconfigprefix"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;ngx.config.prefix&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;syntax:&lt;/strong&gt; &lt;em&gt;prefix = ngx.config.prefix()&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;context:&lt;/strong&gt; &lt;em&gt;set_by_lua*, rewrite_by_lua*, access_by_lua*, content_by_lua*, header_filter_by_lua*, body_filter_by_lua*, log_by_lua*, ngx.timer.*, init_by_lua*, init_worker_by_lua*&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;Returns the Nginx server "prefix" path, as determined by the &lt;code&gt;-p&lt;/code&gt; command-line option when running the Nginx executable, or the path specified by the &lt;code&gt;--prefix&lt;/code&gt; command-line option when building Nginx with the &lt;code&gt;./configure&lt;/code&gt; script.&lt;/p&gt;
&lt;p&gt;This function was first introduced in the &lt;code&gt;0.9.2&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;&lt;a href="#nginx-api-for-lua"&gt;Back to TOC&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-ngxconfignginx_version" class="anchor" aria-hidden="true" href="#ngxconfignginx_version"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;ngx.config.nginx_version&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;syntax:&lt;/strong&gt; &lt;em&gt;ver = ngx.config.nginx_version&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;context:&lt;/strong&gt; &lt;em&gt;set_by_lua*, rewrite_by_lua*, access_by_lua*, content_by_lua*, header_filter_by_lua*, body_filter_by_lua*, log_by_lua*, ngx.timer.*, init_by_lua*, init_worker_by_lua*&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;This field take an integral value indicating the version number of the current Nginx core being used. For example, the version number &lt;code&gt;1.4.3&lt;/code&gt; results in the Lua number 1004003.&lt;/p&gt;
&lt;p&gt;This API was first introduced in the &lt;code&gt;0.9.3&lt;/code&gt; release.&lt;/p&gt;
&lt;p&gt;&lt;a href="#nginx-api-for-lua"&gt;Back to TOC&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-ngxconfignginx_configure" class="anchor" aria-hidden="true" href="#ngxconfignginx_configure"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;ngx.config.nginx_configure&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;syntax:&lt;/strong&gt; &lt;em&gt;str = ngx.config.nginx_configure()&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;context:&lt;/strong&gt; &lt;em&gt;set_by_lua*, rewrite_by_lua*, access_by_lua*, content_by_lua*, header_filter_by_lua*, body_filter_by_lua*, log_by_lua*, ngx.timer.*, init_by_lua*&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;This function returns a string for the Nginx &lt;code&gt;./configure&lt;/code&gt; command's arguments string.&lt;/p&gt;
&lt;p&gt;This API was first introduced in the &lt;code&gt;0.9.5&lt;/code&gt; release.&lt;/p&gt;
&lt;p&gt;&lt;a href="#nginx-api-for-lua"&gt;Back to TOC&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-ngxconfigngx_lua_version" class="anchor" aria-hidden="true" href="#ngxconfigngx_lua_version"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;ngx.config.ngx_lua_version&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;syntax:&lt;/strong&gt; &lt;em&gt;ver = ngx.config.ngx_lua_version&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;context:&lt;/strong&gt; &lt;em&gt;set_by_lua*, rewrite_by_lua*, access_by_lua*, content_by_lua*, header_filter_by_lua*, body_filter_by_lua*, log_by_lua*, ngx.timer.*, init_by_lua*&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;This field take an integral value indicating the version number of the current &lt;code&gt;ngx_lua&lt;/code&gt; module being used. For example, the version number &lt;code&gt;0.9.3&lt;/code&gt; results in the Lua number 9003.&lt;/p&gt;
&lt;p&gt;This API was first introduced in the &lt;code&gt;0.9.3&lt;/code&gt; release.&lt;/p&gt;
&lt;p&gt;&lt;a href="#nginx-api-for-lua"&gt;Back to TOC&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-ngxworkerexiting" class="anchor" aria-hidden="true" href="#ngxworkerexiting"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;ngx.worker.exiting&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;syntax:&lt;/strong&gt; &lt;em&gt;exiting = ngx.worker.exiting()&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;context:&lt;/strong&gt; &lt;em&gt;set_by_lua*, rewrite_by_lua*, access_by_lua*, content_by_lua*, header_filter_by_lua*, body_filter_by_lua*, log_by_lua*, ngx.timer.*, init_by_lua*, init_worker_by_lua*&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;This function returns a boolean value indicating whether the current Nginx worker process already starts exiting. Nginx worker process exiting happens on Nginx server quit or configuration reload (aka HUP reload).&lt;/p&gt;
&lt;p&gt;This API was first introduced in the &lt;code&gt;0.9.3&lt;/code&gt; release.&lt;/p&gt;
&lt;p&gt;&lt;a href="#nginx-api-for-lua"&gt;Back to TOC&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-ngxworkerpid" class="anchor" aria-hidden="true" href="#ngxworkerpid"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;ngx.worker.pid&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;syntax:&lt;/strong&gt; &lt;em&gt;pid = ngx.worker.pid()&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;context:&lt;/strong&gt; &lt;em&gt;set_by_lua*, rewrite_by_lua*, access_by_lua*, content_by_lua*, header_filter_by_lua*, body_filter_by_lua*, log_by_lua*, ngx.timer.*, init_by_lua*, init_worker_by_lua*&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;This function returns a Lua number for the process ID (PID) of the current Nginx worker process. This API is more efficient than &lt;code&gt;ngx.var.pid&lt;/code&gt; and can be used in contexts where the &lt;a href="#ngxvarvariable"&gt;ngx.var.VARIABLE&lt;/a&gt; API cannot be used (like &lt;a href="#init_worker_by_lua"&gt;init_worker_by_lua&lt;/a&gt;).&lt;/p&gt;
&lt;p&gt;This API was first introduced in the &lt;code&gt;0.9.5&lt;/code&gt; release.&lt;/p&gt;
&lt;p&gt;&lt;a href="#nginx-api-for-lua"&gt;Back to TOC&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-ngxworkercount" class="anchor" aria-hidden="true" href="#ngxworkercount"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;ngx.worker.count&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;syntax:&lt;/strong&gt; &lt;em&gt;count = ngx.worker.count()&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;context:&lt;/strong&gt; &lt;em&gt;set_by_lua*, rewrite_by_lua*, access_by_lua*, content_by_lua*, header_filter_by_lua*, body_filter_by_lua*, log_by_lua*, ngx.timer.*, init_by_lua*, init_worker_by_lua*&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;Returns the total number of the Nginx worker processes (i.e., the value configured
by the &lt;a href="https://nginx.org/en/docs/ngx_core_module.html#worker_processes" rel="nofollow"&gt;worker_processes&lt;/a&gt;
directive in &lt;code&gt;nginx.conf&lt;/code&gt;).&lt;/p&gt;
&lt;p&gt;This API was first introduced in the &lt;code&gt;0.9.20&lt;/code&gt; release.&lt;/p&gt;
&lt;p&gt;&lt;a href="#nginx-api-for-lua"&gt;Back to TOC&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-ngxworkerid" class="anchor" aria-hidden="true" href="#ngxworkerid"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;ngx.worker.id&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;syntax:&lt;/strong&gt; &lt;em&gt;count = ngx.worker.id()&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;context:&lt;/strong&gt; &lt;em&gt;set_by_lua*, rewrite_by_lua*, access_by_lua*, content_by_lua*, header_filter_by_lua*, body_filter_by_lua*, log_by_lua*, ngx.timer.*, init_worker_by_lua*&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;Returns the ordinal number of the current Nginx worker processes (starting from number 0).&lt;/p&gt;
&lt;p&gt;So if the total number of workers is &lt;code&gt;N&lt;/code&gt;, then this method may return a number between 0
and &lt;code&gt;N - 1&lt;/code&gt; (inclusive).&lt;/p&gt;
&lt;p&gt;This function returns meaningful values only for Nginx 1.9.1+. With earlier versions of Nginx, it
always returns &lt;code&gt;nil&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;See also &lt;a href="#ngxworkercount"&gt;ngx.worker.count&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;This API was first introduced in the &lt;code&gt;0.9.20&lt;/code&gt; release.&lt;/p&gt;
&lt;p&gt;&lt;a href="#nginx-api-for-lua"&gt;Back to TOC&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-ngxsemaphore" class="anchor" aria-hidden="true" href="#ngxsemaphore"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;ngx.semaphore&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;syntax:&lt;/strong&gt; &lt;em&gt;local semaphore = require "ngx.semaphore"&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;This is a Lua module that implements a classic-style semaphore API for efficient synchronizations among
different "light threads". Sharing the same semaphore among different "light threads" created in different (request)
contexts are also supported as long as the "light threads" reside in the same Nginx worker process
and the &lt;a href="#lua_code_cache"&gt;lua_code_cache&lt;/a&gt; directive is turned on (which is the default).&lt;/p&gt;
&lt;p&gt;This Lua module does not ship with this ngx_lua module itself rather it is shipped with
the
&lt;a href="https://github.com/openresty/lua-resty-core"&gt;lua-resty-core&lt;/a&gt; library.&lt;/p&gt;
&lt;p&gt;Please refer to the &lt;a href="https://github.com/openresty/lua-resty-core/blob/master/lib/ngx/semaphore.md"&gt;documentation&lt;/a&gt;
for this &lt;code&gt;ngx.semaphore&lt;/code&gt; Lua module in &lt;a href="https://github.com/openresty/lua-resty-core"&gt;lua-resty-core&lt;/a&gt;
for more details.&lt;/p&gt;
&lt;p&gt;This feature requires at least ngx_lua &lt;code&gt;v0.10.0&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;&lt;a href="#nginx-api-for-lua"&gt;Back to TOC&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-ngxbalancer" class="anchor" aria-hidden="true" href="#ngxbalancer"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;ngx.balancer&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;syntax:&lt;/strong&gt; &lt;em&gt;local balancer = require "ngx.balancer"&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;This is a Lua module that provides a Lua API to allow defining completely dynamic load balancers
in pure Lua.&lt;/p&gt;
&lt;p&gt;This Lua module does not ship with this ngx_lua module itself rather it is shipped with
the
&lt;a href="https://github.com/openresty/lua-resty-core"&gt;lua-resty-core&lt;/a&gt; library.&lt;/p&gt;
&lt;p&gt;Please refer to the &lt;a href="https://github.com/openresty/lua-resty-core/blob/master/lib/ngx/balancer.md"&gt;documentation&lt;/a&gt;
for this &lt;code&gt;ngx.balancer&lt;/code&gt; Lua module in &lt;a href="https://github.com/openresty/lua-resty-core"&gt;lua-resty-core&lt;/a&gt;
for more details.&lt;/p&gt;
&lt;p&gt;This feature requires at least ngx_lua &lt;code&gt;v0.10.0&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;&lt;a href="#nginx-api-for-lua"&gt;Back to TOC&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-ngxssl" class="anchor" aria-hidden="true" href="#ngxssl"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;ngx.ssl&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;syntax:&lt;/strong&gt; &lt;em&gt;local ssl = require "ngx.ssl"&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;This Lua module provides API functions to control the SSL handshake process in contexts like
&lt;a href="#ssl_certificate_by_lua_block"&gt;ssl_certificate_by_lua*&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;This Lua module does not ship with this ngx_lua module itself rather it is shipped with
the
&lt;a href="https://github.com/openresty/lua-resty-core"&gt;lua-resty-core&lt;/a&gt; library.&lt;/p&gt;
&lt;p&gt;Please refer to the &lt;a href="https://github.com/openresty/lua-resty-core/blob/master/lib/ngx/ssl.md"&gt;documentation&lt;/a&gt;
for this &lt;code&gt;ngx.ssl&lt;/code&gt; Lua module for more details.&lt;/p&gt;
&lt;p&gt;This feature requires at least ngx_lua &lt;code&gt;v0.10.0&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;&lt;a href="#nginx-api-for-lua"&gt;Back to TOC&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-ngxocsp" class="anchor" aria-hidden="true" href="#ngxocsp"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;ngx.ocsp&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;syntax:&lt;/strong&gt; &lt;em&gt;local ocsp = require "ngx.ocsp"&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;This Lua module provides API to perform OCSP queries, OCSP response validations, and
OCSP stapling planting.&lt;/p&gt;
&lt;p&gt;Usually, this module is used together with the &lt;a href="https://github.com/openresty/lua-resty-core/blob/master/lib/ngx/ssl.md"&gt;ngx.ssl&lt;/a&gt;
module in the
context of &lt;a href="#ssl_certificate_by_lua_block"&gt;ssl_certificate_by_lua*&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;This Lua module does not ship with this ngx_lua module itself rather it is shipped with
the
&lt;a href="https://github.com/openresty/lua-resty-core"&gt;lua-resty-core&lt;/a&gt; library.&lt;/p&gt;
&lt;p&gt;Please refer to the &lt;a href="https://github.com/openresty/lua-resty-core/blob/master/lib/ngx/ocsp.md"&gt;documentation&lt;/a&gt;
for this &lt;code&gt;ngx.ocsp&lt;/code&gt; Lua module for more details.&lt;/p&gt;
&lt;p&gt;This feature requires at least ngx_lua &lt;code&gt;v0.10.0&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;&lt;a href="#nginx-api-for-lua"&gt;Back to TOC&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-ndkset_vardirective" class="anchor" aria-hidden="true" href="#ndkset_vardirective"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;ndk.set_var.DIRECTIVE&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;syntax:&lt;/strong&gt; &lt;em&gt;res = ndk.set_var.DIRECTIVE_NAME&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;context:&lt;/strong&gt; &lt;em&gt;init_worker_by_lua*, set_by_lua*, rewrite_by_lua*, access_by_lua*, content_by_lua*, header_filter_by_lua*, body_filter_by_lua*, log_by_lua*, ngx.timer.*, balancer_by_lua*, ssl_certificate_by_lua*, ssl_session_fetch_by_lua*, ssl_session_store_by_lua*&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;This mechanism allows calling other Nginx C modules' directives that are implemented by &lt;a href="https://github.com/simplresty/ngx_devel_kit"&gt;Nginx Devel Kit&lt;/a&gt; (NDK)'s set_var submodule's &lt;code&gt;ndk_set_var_value&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;For example, the following &lt;a href="http://github.com/openresty/set-misc-nginx-module"&gt;set-misc-nginx-module&lt;/a&gt; directives can be invoked this way:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://github.com/openresty/set-misc-nginx-module#set_quote_sql_str"&gt;set_quote_sql_str&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://github.com/openresty/set-misc-nginx-module#set_quote_pgsql_str"&gt;set_quote_pgsql_str&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://github.com/openresty/set-misc-nginx-module#set_quote_json_str"&gt;set_quote_json_str&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://github.com/openresty/set-misc-nginx-module#set_unescape_uri"&gt;set_unescape_uri&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://github.com/openresty/set-misc-nginx-module#set_escape_uri"&gt;set_escape_uri&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://github.com/openresty/set-misc-nginx-module#set_encode_base32"&gt;set_encode_base32&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://github.com/openresty/set-misc-nginx-module#set_decode_base32"&gt;set_decode_base32&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://github.com/openresty/set-misc-nginx-module#set_encode_base64"&gt;set_encode_base64&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://github.com/openresty/set-misc-nginx-module#set_decode_base64"&gt;set_decode_base64&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://github.com/openresty/set-misc-nginx-module#set_encode_base64"&gt;set_encode_hex&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://github.com/openresty/set-misc-nginx-module#set_decode_base64"&gt;set_decode_hex&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://github.com/openresty/set-misc-nginx-module#set_encode_base64"&gt;set_sha1&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://github.com/openresty/set-misc-nginx-module#set_decode_base64"&gt;set_md5&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;For instance,&lt;/p&gt;
&lt;div class="highlight highlight-source-lua"&gt;&lt;pre&gt; &lt;span class="pl-k"&gt;local&lt;/span&gt; res &lt;span class="pl-k"&gt;=&lt;/span&gt; ndk.&lt;span class="pl-smi"&gt;set_var&lt;/span&gt;.&lt;span class="pl-c1"&gt;set_escape_uri&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;a/b&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;);
 &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;--&lt;/span&gt; now res == 'a%2fb'&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Similarly, the following directives provided by &lt;a href="http://github.com/openresty/encrypted-session-nginx-module"&gt;encrypted-session-nginx-module&lt;/a&gt; can be invoked from within Lua too:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://github.com/openresty/encrypted-session-nginx-module#set_encrypt_session"&gt;set_encrypt_session&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://github.com/openresty/encrypted-session-nginx-module#set_decrypt_session"&gt;set_decrypt_session&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;This feature requires the &lt;a href="https://github.com/simplresty/ngx_devel_kit"&gt;ngx_devel_kit&lt;/a&gt; module.&lt;/p&gt;
&lt;p&gt;&lt;a href="#nginx-api-for-lua"&gt;Back to TOC&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-coroutinecreate" class="anchor" aria-hidden="true" href="#coroutinecreate"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;coroutine.create&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;syntax:&lt;/strong&gt; &lt;em&gt;co = coroutine.create(f)&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;context:&lt;/strong&gt; &lt;em&gt;rewrite_by_lua*, access_by_lua*, content_by_lua*, init_by_lua*, ngx.timer.*, header_filter_by_lua*, body_filter_by_lua*, ssl_certificate_by_lua*, ssl_session_fetch_by_lua*, ssl_session_store_by_lua*&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;Creates a user Lua coroutines with a Lua function, and returns a coroutine object.&lt;/p&gt;
&lt;p&gt;Similar to the standard Lua &lt;a href="https://www.lua.org/manual/5.1/manual.html#pdf-coroutine.create" rel="nofollow"&gt;coroutine.create&lt;/a&gt; API, but works in the context of the Lua coroutines created by ngx_lua.&lt;/p&gt;
&lt;p&gt;This API was first usable in the context of &lt;a href="#init_by_lua"&gt;init_by_lua*&lt;/a&gt; since the &lt;code&gt;0.9.2&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;This API was first introduced in the &lt;code&gt;v0.6.0&lt;/code&gt; release.&lt;/p&gt;
&lt;p&gt;&lt;a href="#nginx-api-for-lua"&gt;Back to TOC&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-coroutineresume" class="anchor" aria-hidden="true" href="#coroutineresume"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;coroutine.resume&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;syntax:&lt;/strong&gt; &lt;em&gt;ok, ... = coroutine.resume(co, ...)&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;context:&lt;/strong&gt; &lt;em&gt;rewrite_by_lua*, access_by_lua*, content_by_lua*, init_by_lua*, ngx.timer.*, header_filter_by_lua*, body_filter_by_lua*, ssl_certificate_by_lua*, ssl_session_fetch_by_lua*, ssl_session_store_by_lua*&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;Resumes the executation of a user Lua coroutine object previously yielded or just created.&lt;/p&gt;
&lt;p&gt;Similar to the standard Lua &lt;a href="https://www.lua.org/manual/5.1/manual.html#pdf-coroutine.resume" rel="nofollow"&gt;coroutine.resume&lt;/a&gt; API, but works in the context of the Lua coroutines created by ngx_lua.&lt;/p&gt;
&lt;p&gt;This API was first usable in the context of &lt;a href="#init_by_lua"&gt;init_by_lua*&lt;/a&gt; since the &lt;code&gt;0.9.2&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;This API was first introduced in the &lt;code&gt;v0.6.0&lt;/code&gt; release.&lt;/p&gt;
&lt;p&gt;&lt;a href="#nginx-api-for-lua"&gt;Back to TOC&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-coroutineyield" class="anchor" aria-hidden="true" href="#coroutineyield"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;coroutine.yield&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;syntax:&lt;/strong&gt; &lt;em&gt;... = coroutine.yield(...)&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;context:&lt;/strong&gt; &lt;em&gt;rewrite_by_lua*, access_by_lua*, content_by_lua*, init_by_lua*, ngx.timer.*, header_filter_by_lua*, body_filter_by_lua*, ssl_certificate_by_lua*, ssl_session_fetch_by_lua*, ssl_session_store_by_lua*&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;Yields the execution of the current user Lua coroutine.&lt;/p&gt;
&lt;p&gt;Similar to the standard Lua &lt;a href="https://www.lua.org/manual/5.1/manual.html#pdf-coroutine.yield" rel="nofollow"&gt;coroutine.yield&lt;/a&gt; API, but works in the context of the Lua coroutines created by ngx_lua.&lt;/p&gt;
&lt;p&gt;This API was first usable in the context of &lt;a href="#init_by_lua"&gt;init_by_lua*&lt;/a&gt; since the &lt;code&gt;0.9.2&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;This API was first introduced in the &lt;code&gt;v0.6.0&lt;/code&gt; release.&lt;/p&gt;
&lt;p&gt;&lt;a href="#nginx-api-for-lua"&gt;Back to TOC&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-coroutinewrap" class="anchor" aria-hidden="true" href="#coroutinewrap"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;coroutine.wrap&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;syntax:&lt;/strong&gt; &lt;em&gt;co = coroutine.wrap(f)&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;context:&lt;/strong&gt; &lt;em&gt;rewrite_by_lua*, access_by_lua*, content_by_lua*, init_by_lua*, ngx.timer.*, header_filter_by_lua*, body_filter_by_lua*, ssl_certificate_by_lua*, ssl_session_fetch_by_lua*, ssl_session_store_by_lua*&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;Similar to the standard Lua &lt;a href="https://www.lua.org/manual/5.1/manual.html#pdf-coroutine.wrap" rel="nofollow"&gt;coroutine.wrap&lt;/a&gt; API, but works in the context of the Lua coroutines created by ngx_lua.&lt;/p&gt;
&lt;p&gt;This API was first usable in the context of &lt;a href="#init_by_lua"&gt;init_by_lua*&lt;/a&gt; since the &lt;code&gt;0.9.2&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;This API was first introduced in the &lt;code&gt;v0.6.0&lt;/code&gt; release.&lt;/p&gt;
&lt;p&gt;&lt;a href="#nginx-api-for-lua"&gt;Back to TOC&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-coroutinerunning" class="anchor" aria-hidden="true" href="#coroutinerunning"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;coroutine.running&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;syntax:&lt;/strong&gt; &lt;em&gt;co = coroutine.running()&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;context:&lt;/strong&gt; &lt;em&gt;rewrite_by_lua*, access_by_lua*, content_by_lua*, init_by_lua*, ngx.timer.*, header_filter_by_lua*, body_filter_by_lua*, ssl_certificate_by_lua*, ssl_session_fetch_by_lua*, ssl_session_store_by_lua*&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;Identical to the standard Lua &lt;a href="https://www.lua.org/manual/5.1/manual.html#pdf-coroutine.running" rel="nofollow"&gt;coroutine.running&lt;/a&gt; API.&lt;/p&gt;
&lt;p&gt;This API was first usable in the context of &lt;a href="#init_by_lua"&gt;init_by_lua*&lt;/a&gt; since the &lt;code&gt;0.9.2&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;This API was first enabled in the &lt;code&gt;v0.6.0&lt;/code&gt; release.&lt;/p&gt;
&lt;p&gt;&lt;a href="#nginx-api-for-lua"&gt;Back to TOC&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-coroutinestatus" class="anchor" aria-hidden="true" href="#coroutinestatus"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;coroutine.status&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;syntax:&lt;/strong&gt; &lt;em&gt;status = coroutine.status(co)&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;context:&lt;/strong&gt; &lt;em&gt;rewrite_by_lua*, access_by_lua*, content_by_lua*, init_by_lua*, ngx.timer.*, header_filter_by_lua*, body_filter_by_lua*, ssl_certificate_by_lua*, ssl_session_fetch_by_lua*, ssl_session_store_by_lua*&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;Identical to the standard Lua &lt;a href="https://www.lua.org/manual/5.1/manual.html#pdf-coroutine.status" rel="nofollow"&gt;coroutine.status&lt;/a&gt; API.&lt;/p&gt;
&lt;p&gt;This API was first usable in the context of &lt;a href="#init_by_lua"&gt;init_by_lua*&lt;/a&gt; since the &lt;code&gt;0.9.2&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;This API was first enabled in the &lt;code&gt;v0.6.0&lt;/code&gt; release.&lt;/p&gt;
&lt;p&gt;&lt;a href="#nginx-api-for-lua"&gt;Back to TOC&lt;/a&gt;&lt;/p&gt;
&lt;h1&gt;&lt;a id="user-content-obsolete-sections" class="anchor" aria-hidden="true" href="#obsolete-sections"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Obsolete Sections&lt;/h1&gt;
&lt;p&gt;This section is just holding obsolete documentation sections that have been either renamed or removed so that existing links over the web are still valid.&lt;/p&gt;
&lt;p&gt;&lt;a href="#table-of-contents"&gt;Back to TOC&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-special-pcre-sequences" class="anchor" aria-hidden="true" href="#special-pcre-sequences"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Special PCRE Sequences&lt;/h2&gt;
&lt;p&gt;This section has been renamed to &lt;a href="#special-escaping-sequences"&gt;Special Escaping Sequences&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;&lt;a href="#table-of-contents"&gt;Back to TOC&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-lualuajit-bytecode-support" class="anchor" aria-hidden="true" href="#lualuajit-bytecode-support"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Lua/LuaJIT bytecode support&lt;/h2&gt;
&lt;p&gt;This section has been renamed to
&lt;a href="#luajit-bytecode-support"&gt;LuaJIT bytecode support&lt;/a&gt;. As of version
&lt;code&gt;v0.10.16&lt;/code&gt; of this module, the standard Lua interpreter (also known
as "PUC-Rio Lua") is not supported anymore.&lt;/p&gt;
&lt;/article&gt;&lt;/div&gt;</description><author>openresty</author><guid isPermaLink="false">https://github.com/openresty/lua-nginx-module</guid><pubDate>Fri, 20 Dec 2019 00:10:00 GMT</pubDate></item><item><title>openwrt/openwrt #11 in C, This week</title><link>https://github.com/openwrt/openwrt</link><description>&lt;p&gt;&lt;i&gt;This repository is a mirror of https://git.openwrt.org/openwrt/openwrt.git It is for reference only and is not active for check-ins or for reporting issues.  We will continue to accept Pull Requests here. They will be merged via staging trees then into openwrt.git. All issues should be reported at: https://bugs.openwrt.org&lt;/i&gt;&lt;/p&gt;&lt;div id="readme" class="" data-path="README"&gt;&lt;div class="plain"&gt;&lt;pre style="white-space: pre-wrap"&gt;  _______                     ________        __
 |       |.-----.-----.-----.|  |  |  |.----.|  |_
 |   -   ||  _  |  -__|     ||  |  |  ||   _||   _|
 |_______||   __|_____|__|__||________||__|  |____|
          |__| W I R E L E S S   F R E E D O M
 -----------------------------------------------------

This is the buildsystem for the OpenWrt Linux distribution.

To build your own firmware you need a Linux, BSD or MacOSX system (case
sensitive filesystem required). Cygwin is unsupported because of the lack
of a case sensitive file system.

You need gcc, binutils, bzip2, flex, python3.5+, perl, make, find, grep, diff,
unzip, gawk, getopt, subversion, libz-dev and libc headers installed.

1. Run "./scripts/feeds update -a" to obtain all the latest package definitions
defined in feeds.conf / feeds.conf.default

2. Run "./scripts/feeds install -a" to install symlinks for all obtained
packages into package/feeds/

3. Run "make menuconfig" to select your preferred configuration for the
toolchain, target system &amp;amp; firmware packages.

4. Run "make" to build your firmware. This will download all sources, build
the cross-compile toolchain and then cross-compile the Linux kernel &amp;amp; all
chosen applications for your target system.

Sunshine!
	Your OpenWrt Community
	&lt;a href="http://www.openwrt.org" rel="nofollow"&gt;http://www.openwrt.org&lt;/a&gt;


&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;</description><author>openwrt</author><guid isPermaLink="false">https://github.com/openwrt/openwrt</guid><pubDate>Fri, 20 Dec 2019 00:11:00 GMT</pubDate></item><item><title>fluent/fluent-bit #12 in C, This week</title><link>https://github.com/fluent/fluent-bit</link><description>&lt;p&gt;&lt;i&gt;Fast and Lightweight Log processor and forwarder for Linux, BSD and OSX&lt;/i&gt;&lt;/p&gt;&lt;div id="readme" class="md" data-path="README.md"&gt;&lt;article class="markdown-body entry-content p-5" itemprop="text"&gt;&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="fluentbit_logo.png"&gt;&lt;img src="fluentbit_logo.png" alt="" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Travis CI:
&lt;a href="https://travis-ci.org/fluent/fluent-bit" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/7e5c6dc27614241977d0c7c6de4a5e6b56d355ac/68747470733a2f2f7472617669732d63692e6f72672f666c75656e742f666c75656e742d6269742e7376673f6272616e63683d6d6173746572" alt="Build Status" data-canonical-src="https://travis-ci.org/fluent/fluent-bit.svg?branch=master" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href="http://fluentbit.io" rel="nofollow"&gt;Fluent Bit&lt;/a&gt; is a fast Log Processor and Forwarder for Linux, Embedded Linux, MacOS and BSD family operating systems. It's part of the &lt;a href="http://fluentd.org" rel="nofollow"&gt;Fluentd&lt;/a&gt; Ecosystem and a &lt;a href="https://cncf.io" rel="nofollow"&gt;CNCF&lt;/a&gt; sub-project.&lt;/p&gt;
&lt;p&gt;Fluent Bit allows to collect log events or metrics from different sources, process them and deliver them to different backends such as &lt;a href="http://fluentd.org" rel="nofollow"&gt;Fluentd&lt;/a&gt;, Elasticsearch, NATS, InfluxDB or any custom HTTP end-point within others.&lt;/p&gt;
&lt;p&gt;In addition, Fluent Bit comes with full &lt;a href="https://docs.fluentbit.io/stream-processing/" rel="nofollow"&gt;Stream Processing&lt;/a&gt; capabilities: data manipulation and analytics using SQL queries.&lt;/p&gt;
&lt;p&gt;Fluent Bit runs on x86_64, x86, arm32v7 and arm64v8 architectures.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-features" class="anchor" aria-hidden="true" href="#features"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Features&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;High Performance&lt;/li&gt;
&lt;li&gt;Data Parsing
&lt;ul&gt;
&lt;li&gt;Convert your unstructured messages using our parsers: &lt;a href="https://docs.fluentbit.io/manual/parser/json" rel="nofollow"&gt;JSON&lt;/a&gt;, &lt;a href="https://docs.fluentbit.io/manual/parser/regular_expression" rel="nofollow"&gt;Regex&lt;/a&gt;, &lt;a href="https://docs.fluentbit.io/manual/parser/ltsv" rel="nofollow"&gt;LTSV&lt;/a&gt; and &lt;a href="https://docs.fluentbit.io/manual/parser/logfmt" rel="nofollow"&gt;Logfmt&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Reliability and Data Integrity
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://docs.fluentbit.io/manual/configuration/backpressure" rel="nofollow"&gt;Backpressure&lt;/a&gt; Handling&lt;/li&gt;
&lt;li&gt;&lt;a href="https://docs.fluentbit.io/manual/configuration/buffering" rel="nofollow"&gt;Data Buffering&lt;/a&gt; in memory and file system&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Networking
&lt;ul&gt;
&lt;li&gt;Security: built-in TLS/SSL support&lt;/li&gt;
&lt;li&gt;Asynchronous I/O&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Pluggable Architecture and &lt;a href="https://docs.fluentbit.io/manual/development" rel="nofollow"&gt;Extensibility&lt;/a&gt;: Inputs, Filters and Outputs
&lt;ul&gt;
&lt;li&gt;More than 50 built-in plugins available&lt;/li&gt;
&lt;li&gt;Extensibility
&lt;ul&gt;
&lt;li&gt;Write any input, filter or output plugin in C language&lt;/li&gt;
&lt;li&gt;Bonus: write &lt;a href="https://docs.fluentbit.io/manual/filter/lua" rel="nofollow"&gt;Filters in Lua&lt;/a&gt; or &lt;a href="https://docs.fluentbit.io/manual/development/golang_plugins" rel="nofollow"&gt;Output plugins in Golang&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="https://docs.fluentbit.io/manual/configuration/monitoring" rel="nofollow"&gt;Monitoring&lt;/a&gt;: expose internal metrics over HTTP in JSON and &lt;a href="https://prometheus.io/" rel="nofollow"&gt;Prometheus&lt;/a&gt; format&lt;/li&gt;
&lt;li&gt;&lt;a href="https://docs.fluentbit.io/stream-processing/" rel="nofollow"&gt;Stream Processing&lt;/a&gt;: Perform data selection and transformation using simple SQL queries
&lt;ul&gt;
&lt;li&gt;Create new streams of data using query results&lt;/li&gt;
&lt;li&gt;Aggregation Windows&lt;/li&gt;
&lt;li&gt;Data analysis and prediction: Timeseries forecasting&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Portable: runs on Linux, MacOS, Windows and BSD systems&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-documentation" class="anchor" aria-hidden="true" href="#documentation"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;a href="https://docs.fluentbit.io" rel="nofollow"&gt;Documentation&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;Our official project documentation for &lt;a href="https://docs.fluentbit.io/manual/installation" rel="nofollow"&gt;installation&lt;/a&gt;, &lt;a href="https://docs.fluentbit.io/manual/configuration" rel="nofollow"&gt;configuration&lt;/a&gt;, deployment and development topics is located here:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://fluentbit.io" rel="nofollow"&gt;https://docs.fluentbit.io&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;&lt;a id="user-content-quick-start" class="anchor" aria-hidden="true" href="#quick-start"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Quick Start&lt;/h3&gt;
&lt;h4&gt;&lt;a id="user-content-build-from-scratch" class="anchor" aria-hidden="true" href="#build-from-scratch"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Build from Scratch&lt;/h4&gt;
&lt;p&gt;If you aim to build Fluent Bit from sources, you can go ahead and start with the following commands.&lt;/p&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt;$ &lt;span class="pl-c1"&gt;cd&lt;/span&gt; build
$ cmake ..
$ make
$ bin/fluent-bit -i cpu -o stdout -f 1&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;If you are interested into more details, please refer to the &lt;a href="https://docs.fluentbit.io/manual/installation/build_install" rel="nofollow"&gt;Build &amp;amp; Install&lt;/a&gt; section.&lt;/p&gt;
&lt;h4&gt;&lt;a id="user-content-linux-packages" class="anchor" aria-hidden="true" href="#linux-packages"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Linux Packages&lt;/h4&gt;
&lt;p&gt;We provide packages for most common Linux distributions:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://docs.fluentbit.io/manual/installation/debian" rel="nofollow"&gt;Debian&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://docs.fluentbit.io/manual/installation/raspberry_pi" rel="nofollow"&gt;Raspbian&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://docs.fluentbit.io/manual/installation/ubuntu" rel="nofollow"&gt;Ubuntu&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://docs.fluentbit.io/manual/installation/redhat_centos" rel="nofollow"&gt;CentOS&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h4&gt;&lt;a id="user-content-linux--docker-container-images" class="anchor" aria-hidden="true" href="#linux--docker-container-images"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Linux / Docker Container Images&lt;/h4&gt;
&lt;p&gt;Our Linux containers images are the most common deployment model, thousands of new installation happen every day, learn more about the available images and tags here:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://docs.fluentbit.io/manual/installation/docker" rel="nofollow"&gt;https://docs.fluentbit.io/manual/installation/docker&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h4&gt;&lt;a id="user-content-windows-packages" class="anchor" aria-hidden="true" href="#windows-packages"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Windows Packages&lt;/h4&gt;
&lt;p&gt;Fluent Bit is fully supported on Windows environments, get started with the following instructions:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://docs.fluentbit.io/manual/installation/windows" rel="nofollow"&gt;https://docs.fluentbit.io/manual/installation/windows&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;&lt;a id="user-content-plugins-inputs-filters-and-outputs" class="anchor" aria-hidden="true" href="#plugins-inputs-filters-and-outputs"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Plugins: Inputs, Filters and Outputs&lt;/h3&gt;
&lt;p&gt;&lt;a href="http://fluentbit.io" rel="nofollow"&gt;Fluent Bit&lt;/a&gt; is based in a pluggable architecture where different plugins plays a major role in the data pipeline:&lt;/p&gt;
&lt;h4&gt;&lt;a id="user-content-input-plugins" class="anchor" aria-hidden="true" href="#input-plugins"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Input Plugins&lt;/h4&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th align="left"&gt;name&lt;/th&gt;
&lt;th align="left"&gt;title&lt;/th&gt;
&lt;th align="left"&gt;description&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td align="left"&gt;&lt;a href="https://docs.fluentbit.io/manual/input/collectd" rel="nofollow"&gt;collectd&lt;/a&gt;&lt;/td&gt;
&lt;td align="left"&gt;Collectd&lt;/td&gt;
&lt;td align="left"&gt;Listen for UDP packets from Collectd.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="left"&gt;&lt;a href="https://docs.fluentbit.io/manual/input/cpu" rel="nofollow"&gt;cpu&lt;/a&gt;&lt;/td&gt;
&lt;td align="left"&gt;CPU Usage&lt;/td&gt;
&lt;td align="left"&gt;measure total CPU usage of the system.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="left"&gt;&lt;a href="https://docs.fluentbit.io/manual/input/disk" rel="nofollow"&gt;disk&lt;/a&gt;&lt;/td&gt;
&lt;td align="left"&gt;Disk Usage&lt;/td&gt;
&lt;td align="left"&gt;measure Disk I/Os.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="left"&gt;&lt;a href="https://docs.fluentbit.io/manual/input/dummy" rel="nofollow"&gt;dummy&lt;/a&gt;&lt;/td&gt;
&lt;td align="left"&gt;Dummy&lt;/td&gt;
&lt;td align="left"&gt;generate dummy event.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="left"&gt;&lt;a href="https://docs.fluentbit.io/manual/input/exec" rel="nofollow"&gt;exec&lt;/a&gt;&lt;/td&gt;
&lt;td align="left"&gt;Exec&lt;/td&gt;
&lt;td align="left"&gt;executes external program and collects event logs.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="left"&gt;&lt;a href="https://docs.fluentbit.io/manual/input/forward" rel="nofollow"&gt;forward&lt;/a&gt;&lt;/td&gt;
&lt;td align="left"&gt;Forward&lt;/td&gt;
&lt;td align="left"&gt;Fluentd forward protocol.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="left"&gt;&lt;a href="https://docs.fluentbit.io/manual/input/head" rel="nofollow"&gt;head&lt;/a&gt;&lt;/td&gt;
&lt;td align="left"&gt;Head&lt;/td&gt;
&lt;td align="left"&gt;read first part of files.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="left"&gt;&lt;a href="https://docs.fluentbit.io/manual/input/health" rel="nofollow"&gt;health&lt;/a&gt;&lt;/td&gt;
&lt;td align="left"&gt;Health&lt;/td&gt;
&lt;td align="left"&gt;Check health of TCP services.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="left"&gt;&lt;a href="https://docs.fluentbit.io/manual/input/kmsg" rel="nofollow"&gt;kmsg&lt;/a&gt;&lt;/td&gt;
&lt;td align="left"&gt;Kernel Log Buffer&lt;/td&gt;
&lt;td align="left"&gt;read the Linux Kernel log buffer messages.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="left"&gt;&lt;a href="https://docs.fluentbit.io/manual/input/mem" rel="nofollow"&gt;mem&lt;/a&gt;&lt;/td&gt;
&lt;td align="left"&gt;Memory Usage&lt;/td&gt;
&lt;td align="left"&gt;measure the total amount of memory used on the system.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="left"&gt;&lt;a href="https://docs.fluentbit.io/manual/input/mqtt" rel="nofollow"&gt;mqtt&lt;/a&gt;&lt;/td&gt;
&lt;td align="left"&gt;MQTT&lt;/td&gt;
&lt;td align="left"&gt;start a MQTT server and receive publish messages.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="left"&gt;&lt;a href="https://docs.fluentbit.io/manual/input/netif" rel="nofollow"&gt;netif&lt;/a&gt;&lt;/td&gt;
&lt;td align="left"&gt;Network Traffic&lt;/td&gt;
&lt;td align="left"&gt;measure network traffic.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="left"&gt;&lt;a href="https://docs.fluentbit.io/manual/input/proc" rel="nofollow"&gt;proc&lt;/a&gt;&lt;/td&gt;
&lt;td align="left"&gt;Process&lt;/td&gt;
&lt;td align="left"&gt;Check health of Process.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="left"&gt;&lt;a href="https://docs.fluentbit.io/manual/input/random" rel="nofollow"&gt;random&lt;/a&gt;&lt;/td&gt;
&lt;td align="left"&gt;Random&lt;/td&gt;
&lt;td align="left"&gt;Generate Random samples.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="left"&gt;&lt;a href="https://docs.fluentbit.io/manual/input/serial" rel="nofollow"&gt;serial&lt;/a&gt;&lt;/td&gt;
&lt;td align="left"&gt;Serial Interface&lt;/td&gt;
&lt;td align="left"&gt;read data information from the serial interface.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="left"&gt;&lt;a href="https://docs.fluentbit.io/manual/input/stdin" rel="nofollow"&gt;stdin&lt;/a&gt;&lt;/td&gt;
&lt;td align="left"&gt;Standard Input&lt;/td&gt;
&lt;td align="left"&gt;read data from the standard input.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="left"&gt;&lt;a href="https://docs.fluentbit.io/manual/input/syslog" rel="nofollow"&gt;syslog&lt;/a&gt;&lt;/td&gt;
&lt;td align="left"&gt;Syslog&lt;/td&gt;
&lt;td align="left"&gt;read syslog messages from a Unix socket.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="left"&gt;&lt;a href="https://docs.fluentbit.io/manual/input/systemd" rel="nofollow"&gt;systemd&lt;/a&gt;&lt;/td&gt;
&lt;td align="left"&gt;Systemd&lt;/td&gt;
&lt;td align="left"&gt;read logs from Systemd/Journald.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="left"&gt;&lt;a href="https://docs.fluentbit.io/manual/input/tail" rel="nofollow"&gt;tail&lt;/a&gt;&lt;/td&gt;
&lt;td align="left"&gt;Tail&lt;/td&gt;
&lt;td align="left"&gt;Tail log files.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="left"&gt;&lt;a href="https://docs.fluentbit.io/manual/input/tcp" rel="nofollow"&gt;tcp&lt;/a&gt;&lt;/td&gt;
&lt;td align="left"&gt;TCP&lt;/td&gt;
&lt;td align="left"&gt;Listen for JSON messages over TCP.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="left"&gt;&lt;a href="https://docs.fluentbit.io/manual/input/thermal" rel="nofollow"&gt;thermal&lt;/a&gt;&lt;/td&gt;
&lt;td align="left"&gt;Thermal&lt;/td&gt;
&lt;td align="left"&gt;measure system temperature(s).&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h4&gt;&lt;a id="user-content-filter-plugins" class="anchor" aria-hidden="true" href="#filter-plugins"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Filter Plugins&lt;/h4&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th align="left"&gt;name&lt;/th&gt;
&lt;th align="left"&gt;title&lt;/th&gt;
&lt;th align="left"&gt;description&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td align="left"&gt;&lt;a href="https://docs.fluentbit.io/manual/filter/grep" rel="nofollow"&gt;grep&lt;/a&gt;&lt;/td&gt;
&lt;td align="left"&gt;Grep&lt;/td&gt;
&lt;td align="left"&gt;Match or exclude specific records by patterns.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="left"&gt;&lt;a href="https://docs.fluentbit.io/manual/filter/kubernetes" rel="nofollow"&gt;kubernetes&lt;/a&gt;&lt;/td&gt;
&lt;td align="left"&gt;Kubernetes&lt;/td&gt;
&lt;td align="left"&gt;Enrich logs with Kubernetes Metadata.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="left"&gt;&lt;a href="https://docs.fluentbit.io/manual/filter/lua" rel="nofollow"&gt;lua&lt;/a&gt;&lt;/td&gt;
&lt;td align="left"&gt;Lua&lt;/td&gt;
&lt;td align="left"&gt;Filter records using Lua Scripts.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="left"&gt;&lt;a href="https://docs.fluentbit.io/manual/filter/parser" rel="nofollow"&gt;parser&lt;/a&gt;&lt;/td&gt;
&lt;td align="left"&gt;Parser&lt;/td&gt;
&lt;td align="left"&gt;Parse record.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="left"&gt;&lt;a href="https://docs.fluentbit.io/manual/filter/record_modifier" rel="nofollow"&gt;record_modifier&lt;/a&gt;&lt;/td&gt;
&lt;td align="left"&gt;Record Modifier&lt;/td&gt;
&lt;td align="left"&gt;Modify record.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="left"&gt;&lt;a href="https://docs.fluentbit.io/manual/filter/stdout" rel="nofollow"&gt;stdout&lt;/a&gt;&lt;/td&gt;
&lt;td align="left"&gt;Stdout&lt;/td&gt;
&lt;td align="left"&gt;Print records to the standard output interface.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="left"&gt;&lt;a href="https://docs.fluentbit.io/manual/filter/throttle" rel="nofollow"&gt;throttle&lt;/a&gt;&lt;/td&gt;
&lt;td align="left"&gt;Throttle&lt;/td&gt;
&lt;td align="left"&gt;Apply rate limit to event flow.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="left"&gt;&lt;a href="https://docs.fluentbit.io/manual/filter/nest" rel="nofollow"&gt;nest&lt;/a&gt;&lt;/td&gt;
&lt;td align="left"&gt;Nest&lt;/td&gt;
&lt;td align="left"&gt;Nest records under a specified key&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="left"&gt;&lt;a href="https://docs.fluentbit.io/manual/filter/modify" rel="nofollow"&gt;modify&lt;/a&gt;&lt;/td&gt;
&lt;td align="left"&gt;Modify&lt;/td&gt;
&lt;td align="left"&gt;Modifications to record.&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h4&gt;&lt;a id="user-content-output-plugins" class="anchor" aria-hidden="true" href="#output-plugins"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Output Plugins&lt;/h4&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th align="left"&gt;name&lt;/th&gt;
&lt;th align="left"&gt;title&lt;/th&gt;
&lt;th align="left"&gt;description&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td align="left"&gt;&lt;a href="https://docs.fluentbit.io/manual/output/azure" rel="nofollow"&gt;azure&lt;/a&gt;&lt;/td&gt;
&lt;td align="left"&gt;Azure Log Analytics&lt;/td&gt;
&lt;td align="left"&gt;Ingest records into Azure Log Analytics&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="left"&gt;&lt;a href="https://docs.fluentbit.io/manual/output/bigquery" rel="nofollow"&gt;bigquery&lt;/a&gt;&lt;/td&gt;
&lt;td align="left"&gt;BigQuery&lt;/td&gt;
&lt;td align="left"&gt;Ingest records into Google BigQuery&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="left"&gt;&lt;a href="https://docs.fluentbit.io/manual/output/counter" rel="nofollow"&gt;counter&lt;/a&gt;&lt;/td&gt;
&lt;td align="left"&gt;Count Records&lt;/td&gt;
&lt;td align="left"&gt;Simple records counter.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="left"&gt;&lt;a href="https://docs.fluentbit.io/manual/output/datadog" rel="nofollow"&gt;datadog&lt;/a&gt;&lt;/td&gt;
&lt;td align="left"&gt;Datadog&lt;/td&gt;
&lt;td align="left"&gt;Ingest logs into Datadog.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="left"&gt;&lt;a href="https://docs.fluentbit.io/manual/output/elasticsearch" rel="nofollow"&gt;es&lt;/a&gt;&lt;/td&gt;
&lt;td align="left"&gt;Elasticsearch&lt;/td&gt;
&lt;td align="left"&gt;flush records to a Elasticsearch server.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="left"&gt;&lt;a href="https://docs.fluentbit.io/manual/output/file" rel="nofollow"&gt;file&lt;/a&gt;&lt;/td&gt;
&lt;td align="left"&gt;File&lt;/td&gt;
&lt;td align="left"&gt;Flush records to a file.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="left"&gt;&lt;a href="https://docs.fluentbit.io/manual/output/flowcounter" rel="nofollow"&gt;flowcounter&lt;/a&gt;&lt;/td&gt;
&lt;td align="left"&gt;FlowCounter&lt;/td&gt;
&lt;td align="left"&gt;Count records.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="left"&gt;&lt;a href="https://docs.fluentbit.io/manual/output/forward" rel="nofollow"&gt;forward&lt;/a&gt;&lt;/td&gt;
&lt;td align="left"&gt;Forward&lt;/td&gt;
&lt;td align="left"&gt;Fluentd forward protocol.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="left"&gt;&lt;a href="https://docs.fluentbit.io/manual/output/http" rel="nofollow"&gt;http&lt;/a&gt;&lt;/td&gt;
&lt;td align="left"&gt;HTTP&lt;/td&gt;
&lt;td align="left"&gt;Flush records to an HTTP end point.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="left"&gt;&lt;a href="https://docs.fluentbit.io/manual/output/influxdb" rel="nofollow"&gt;influxdb&lt;/a&gt;&lt;/td&gt;
&lt;td align="left"&gt;InfluxDB&lt;/td&gt;
&lt;td align="left"&gt;Flush records to InfluxDB time series database.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="left"&gt;&lt;a href="https://docs.fluentbit.io/manual/output/kafka" rel="nofollow"&gt;kafka&lt;/a&gt;&lt;/td&gt;
&lt;td align="left"&gt;Apache Kafka&lt;/td&gt;
&lt;td align="left"&gt;Flush records to Apache Kafka&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="left"&gt;&lt;a href="https://docs.fluentbit.io/manual/output/kafka-rest-proxy" rel="nofollow"&gt;kafka-rest&lt;/a&gt;&lt;/td&gt;
&lt;td align="left"&gt;Kafka REST Proxy&lt;/td&gt;
&lt;td align="left"&gt;Flush records to a Kafka REST Proxy server.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="left"&gt;&lt;a href="https://docs.fluentbit.io/manual/output/stackdriver" rel="nofollow"&gt;stackdriver&lt;/a&gt;&lt;/td&gt;
&lt;td align="left"&gt;Google Stackdriver Logging&lt;/td&gt;
&lt;td align="left"&gt;Flush records to Google Stackdriver Logging service.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="left"&gt;&lt;a href="https://docs.fluentbit.io/manual/output/stdout" rel="nofollow"&gt;stdout&lt;/a&gt;&lt;/td&gt;
&lt;td align="left"&gt;Standard Output&lt;/td&gt;
&lt;td align="left"&gt;Flush records to the standard output.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="left"&gt;&lt;a href="https://docs.fluentbit.io/manual/output/splunk" rel="nofollow"&gt;splunk&lt;/a&gt;&lt;/td&gt;
&lt;td align="left"&gt;Splunk&lt;/td&gt;
&lt;td align="left"&gt;Flush records to a Splunk Enterprise service&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="left"&gt;&lt;a href="https://docs.fluentbit.io/manual/output/tcp" rel="nofollow"&gt;tcp&lt;/a&gt;&lt;/td&gt;
&lt;td align="left"&gt;TCP &amp;amp; TLS&lt;/td&gt;
&lt;td align="left"&gt;flush records to a TCP server.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="left"&gt;&lt;a href="https://docs.fluentbit.io/manual/output/td" rel="nofollow"&gt;td&lt;/a&gt;&lt;/td&gt;
&lt;td align="left"&gt;&lt;a href="http://www.treasuredata.com" rel="nofollow"&gt;Treasure Data&lt;/a&gt;&lt;/td&gt;
&lt;td align="left"&gt;Flush records to the &lt;a href="http://www.treasuredata.com" rel="nofollow"&gt;Treasure Data&lt;/a&gt; cloud service for analytics.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="left"&gt;&lt;a href="https://docs.fluentbit.io/manual/output/nats" rel="nofollow"&gt;nats&lt;/a&gt;&lt;/td&gt;
&lt;td align="left"&gt;NATS&lt;/td&gt;
&lt;td align="left"&gt;flush records to a NATS server.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="left"&gt;&lt;a href="https://docs.fluentbit.io/manual/output/null" rel="nofollow"&gt;null&lt;/a&gt;&lt;/td&gt;
&lt;td align="left"&gt;NULL&lt;/td&gt;
&lt;td align="left"&gt;throw away events.&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h2&gt;&lt;a id="user-content-contributing" class="anchor" aria-hidden="true" href="#contributing"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Contributing&lt;/h2&gt;
&lt;p&gt;&lt;a href="https://fluentbit.io" rel="nofollow"&gt;Fluent Bit&lt;/a&gt; is an open project, several individuals and companies contribute in different forms like coding, documenting, testing, spreading the word at events within others. If you want to learn more about contributing opportunities please reach out to us through our &lt;a href="https://fluentbit.io/community/" rel="nofollow"&gt;Community Channels&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;If you are interested into contribute with bug fixes, new features or coding in general, please refer to the code &lt;a href="CONTRIBUTING.md"&gt;CONTRIBUTING&lt;/a&gt; guidelines.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-community--contact" class="anchor" aria-hidden="true" href="#community--contact"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Community &amp;amp; Contact&lt;/h2&gt;
&lt;p&gt;Feel free to join us on our Slack channel, Mailing List or IRC:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Slack: &lt;a href="http://slack.fluentd.org" rel="nofollow"&gt;http://slack.fluentd.org&lt;/a&gt; (#fluent-bit channel)&lt;/li&gt;
&lt;li&gt;Mailing List: &lt;a href="https://groups.google.com/forum/#!forum/fluent-bit" rel="nofollow"&gt;https://groups.google.com/forum/#!forum/fluent-bit&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Twitter: &lt;a href="http://twitter.com/fluentbit" rel="nofollow"&gt;http://twitter.com/fluentbit&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;IRC: irc.freenode.net #fluent-bit&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-license" class="anchor" aria-hidden="true" href="#license"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;License&lt;/h2&gt;
&lt;p&gt;This program is under the terms of the &lt;a href="http://www.apache.org/licenses/LICENSE-2.0" rel="nofollow"&gt;Apache License v2.0&lt;/a&gt;.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-authors" class="anchor" aria-hidden="true" href="#authors"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Authors&lt;/h2&gt;
&lt;p&gt;&lt;a href="http://fluentbit.io" rel="nofollow"&gt;Fluent Bit&lt;/a&gt; is originally made and currently sponsored by &lt;a href="http://treasuredata.com" rel="nofollow"&gt;Treasure Data&lt;/a&gt; among other &lt;a href="https://github.com/fluent/fluent-bit/graphs/contributors"&gt;contributors&lt;/a&gt;.&lt;/p&gt;
&lt;/article&gt;&lt;/div&gt;</description><author>fluent</author><guid isPermaLink="false">https://github.com/fluent/fluent-bit</guid><pubDate>Fri, 20 Dec 2019 00:12:00 GMT</pubDate></item><item><title>torvalds/linux #13 in C, This week</title><link>https://github.com/torvalds/linux</link><description>&lt;p&gt;&lt;i&gt;Linux kernel source tree&lt;/i&gt;&lt;/p&gt;&lt;div id="readme" class="" data-path="README"&gt;&lt;div class="plain"&gt;&lt;pre style="white-space: pre-wrap"&gt;Linux kernel
============

There are several guides for kernel developers and users. These guides can
be rendered in a number of formats, like HTML and PDF. Please read
Documentation/admin-guide/README.rst first.

In order to build the documentation, use ``make htmldocs`` or
``make pdfdocs``.  The formatted documentation can also be read online at:

    &lt;a href="https://www.kernel.org/doc/html/latest/" rel="nofollow"&gt;https://www.kernel.org/doc/html/latest/&lt;/a&gt;

There are various text files in the Documentation/ subdirectory,
several of them using the Restructured Text markup notation.

Please read the Documentation/process/changes.rst file, as it contains the
requirements for building and running the kernel, and information about
the problems which may result by upgrading your kernel.
&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;</description><author>torvalds</author><guid isPermaLink="false">https://github.com/torvalds/linux</guid><pubDate>Fri, 20 Dec 2019 00:13:00 GMT</pubDate></item><item><title>zlgopen/awtk #14 in C, This week</title><link>https://github.com/zlgopen/awtk</link><description>&lt;p&gt;&lt;i&gt;AWTK = Toolkit AnyWhere(为嵌入式、手机和PC打造的通用GUI系统)&lt;/i&gt;&lt;/p&gt;&lt;div id="readme" class="md" data-path="README.md"&gt;&lt;article class="markdown-body entry-content p-5" itemprop="text"&gt;&lt;h1&gt;&lt;a id="user-content-awtk--toolkit-anywhere" class="anchor" aria-hidden="true" href="#awtk--toolkit-anywhere"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;AWTK = Toolkit AnyWhere&lt;/h1&gt;
&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="docs/images/zlg_adv.jpeg"&gt;&lt;img src="docs/images/zlg_adv.jpeg" alt="zlg" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-一介绍" class="anchor" aria-hidden="true" href="#一介绍"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;一、介绍&lt;/h2&gt;
&lt;p&gt;&lt;a href="README.md"&gt;AWTK&lt;/a&gt; 全称 Toolkit AnyWhere，是 &lt;a href="http://www.zlg.cn/" rel="nofollow"&gt;ZLG&lt;/a&gt; 开发的开源 GUI 引擎，旨在为嵌入式系统、WEB、各种小程序、手机和 PC 打造的通用 GUI 引擎，为用户提供一个功能强大、高效可靠、简单易用、可轻松做出炫酷效果的 GUI 引擎。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;欢迎广大开发者一起参与开发：&lt;a href="docs/awtk_ecology.md"&gt;生态共建计划&lt;/a&gt;。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h4&gt;&lt;a id="user-content-awtk-寓意有两个方面" class="anchor" aria-hidden="true" href="#awtk-寓意有两个方面"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;a href="README.md"&gt;AWTK&lt;/a&gt; 寓意有两个方面：&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;Toolkit AnyWhere。&lt;/li&gt;
&lt;li&gt;ZLG 物联网操作系统 AWorks 内置 GUI。&lt;/li&gt;
&lt;/ul&gt;
&lt;h4&gt;&lt;a id="user-content-awtk-源码仓库" class="anchor" aria-hidden="true" href="#awtk-源码仓库"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;a href="README.md"&gt;AWTK&lt;/a&gt; 源码仓库：&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;主源码仓库：&lt;a href="https://github.com/zlgopen/awtk"&gt;https://github.com/zlgopen/awtk&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;镜像源码仓库：&lt;a href="https://gitee.com/zlgopen/awtk" rel="nofollow"&gt;https://gitee.com/zlgopen/awtk&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;稳定版整合包：&lt;a href="https://pan.baidu.com/s/1_oRgj67M-I4kivk-YzwFWA" rel="nofollow"&gt;https://pan.baidu.com/s/1_oRgj67M-I4kivk-YzwFWA&lt;/a&gt;   提取码: 1cmi&lt;/li&gt;
&lt;/ul&gt;
&lt;h4&gt;&lt;a id="user-content-运行效果截图" class="anchor" aria-hidden="true" href="#运行效果截图"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;运行效果截图：&lt;/h4&gt;
&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="docs/images/chart_main.png"&gt;&lt;img src="docs/images/chart_main.png" alt="Chart-Demo" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="docs/images/musicplayer_main.png"&gt;&lt;img src="docs/images/musicplayer_main.png" alt="MusicPlayer-Demo" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="docs/images/smartwatch_main.png"&gt;&lt;img src="docs/images/smartwatch_main.png" alt="Watch" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-二最终目标" class="anchor" aria-hidden="true" href="#二最终目标"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;二、最终目标：&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;支持开发嵌入式应用程序。&lt;/li&gt;
&lt;li&gt;支持开发 Linux 应用程序。&lt;/li&gt;
&lt;li&gt;支持开发 MacOS 应用程序。&lt;/li&gt;
&lt;li&gt;支持开发 Windows 应用程序。&lt;/li&gt;
&lt;li&gt;支持开发 Web APP。&lt;/li&gt;
&lt;li&gt;支持开发 Android 应用程序。&lt;/li&gt;
&lt;li&gt;支持开发 iOS 应用程序。&lt;/li&gt;
&lt;li&gt;支持开发微信小程序。&lt;/li&gt;
&lt;li&gt;支持开发支付宝小程序。&lt;/li&gt;
&lt;li&gt;支持开发百度小程序。&lt;/li&gt;
&lt;li&gt;支持开发 2D 小游戏。&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-三主要特色" class="anchor" aria-hidden="true" href="#三主要特色"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;三、主要特色&lt;/h2&gt;
&lt;h3&gt;&lt;a id="user-content-1-跨平台" class="anchor" aria-hidden="true" href="#1-跨平台"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;1. 跨平台&lt;/h3&gt;
&lt;p&gt;&lt;a href="README.md"&gt;AWTK&lt;/a&gt; 是跨平台的，这有两个方面的意思：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;AWTK 本身是跨平台的。目前支持的平台有 ZLG AWorks、Windows、Linux、MacOS、嵌入式 Linux、Android、Web 和嵌入式裸系统，可以轻松的移植到各种 RTOS 上。AWTK 以后也可以运行在各种小程序和 iOS 等平台上运行。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;AWTK 同时还提供了一套跨平台的基础工具库。其中包括链表、数组、字符串 (UTF8 和 widechar)，事件发射器、值、对象、文件系统、互斥锁和线程、表达式和字符串解析等等，让你用 AWTK 开发的应用程序可以真正跨平台运行。&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;&lt;a id="user-content-2-高效" class="anchor" aria-hidden="true" href="#2-高效"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;2. 高效&lt;/h3&gt;
&lt;p&gt;&lt;a href="README.md"&gt;AWTK&lt;/a&gt; 通过一系列的手段保证 AWTK 应用程序高效运行：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;通过脏矩算法只更新变化的部分。&lt;/li&gt;
&lt;li&gt;支持 3 FrameBuffer 让界面以最高帧率运行 （可选）。&lt;/li&gt;
&lt;li&gt;UI 描述文件和主题文件使用高效的二进制格式，解析在瞬间完成。&lt;/li&gt;
&lt;li&gt;支持各种 GPU 加速接口。如 OpenGL、DirectX、Vulkan 和 Metal 等。&lt;/li&gt;
&lt;li&gt;支持嵌入式平台的各种 2D 加速接口。目前 STM32 的 DMA2D 和 NXP 的 PXP 接口，厂家可以轻松扩展自己的加速接口。&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;&lt;a id="user-content-3-稳定" class="anchor" aria-hidden="true" href="#3-稳定"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;3. 稳定&lt;/h3&gt;
&lt;p&gt;&lt;a href="README.md"&gt;AWTK&lt;/a&gt; 通过下列方式极力让代码稳定可靠：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;使用 cppcheck 和 facebook infer 进行静态检查。&lt;/li&gt;
&lt;li&gt;使用 valgrind 进行动态内存检查。&lt;/li&gt;
&lt;li&gt;近两万行的单元测试代码。&lt;/li&gt;
&lt;li&gt;ZLG 强大 GUI 团队的支持。&lt;/li&gt;
&lt;li&gt;经过多个实际项目验证。&lt;/li&gt;
&lt;li&gt;多平台 / 多编译器验证。&lt;/li&gt;
&lt;li&gt;优秀的架构设计。&lt;/li&gt;
&lt;li&gt;Code Review。&lt;/li&gt;
&lt;li&gt;手工测试。&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;&lt;a id="user-content-4-强大" class="anchor" aria-hidden="true" href="#4-强大"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;4. 强大&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;丰富的控件 （持续增加中）。&lt;/li&gt;
&lt;li&gt;支持各种图片格式 (png/jpg/gif/svg)。&lt;/li&gt;
&lt;li&gt;支持各种字体格式 （点阵和矢量）。&lt;/li&gt;
&lt;li&gt;支持窗口动画&lt;/li&gt;
&lt;li&gt;支持控件动画&lt;/li&gt;
&lt;li&gt;支持高清屏。&lt;/li&gt;
&lt;li&gt;支持界面描述文件。&lt;/li&gt;
&lt;li&gt;支持主题描述文件。&lt;/li&gt;
&lt;li&gt;主题切换实时生效。&lt;/li&gt;
&lt;li&gt;支持控件布局策略。&lt;/li&gt;
&lt;li&gt;支持对话框高亮策略。&lt;/li&gt;
&lt;li&gt;丰富的辅助工具。&lt;/li&gt;
&lt;li&gt;支持从低端的 Cortex M3 到各种高端 CPU。&lt;/li&gt;
&lt;li&gt;支持无文件系统和自定义的文件系统。&lt;/li&gt;
&lt;li&gt;支持裸系统和 RTOS。&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;&lt;a id="user-content-5-易用" class="anchor" aria-hidden="true" href="#5-易用"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;5. 易用&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;大量的示例代码。&lt;/li&gt;
&lt;li&gt;完善的 API 文档和使用文档。&lt;/li&gt;
&lt;li&gt;ZLG 强大的技术支持团队。&lt;/li&gt;
&lt;li&gt;用 AWTK 本身开发的界面编辑器 （开发中）。&lt;/li&gt;
&lt;li&gt;声明式的界面描述语言。一行代码启用控件动画，启用窗口动画，显示图片 (png/jpg/svg/gif)。&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;&lt;a id="user-content-6-高度扩展性" class="anchor" aria-hidden="true" href="#6-高度扩展性"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;6. 高度扩展性&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;可以扩展自己的控件。&lt;/li&gt;
&lt;li&gt;可以扩展自己的动画。&lt;/li&gt;
&lt;li&gt;可以实现自己的主循环。&lt;/li&gt;
&lt;li&gt;可以扩展自己的软键盘。&lt;/li&gt;
&lt;li&gt;可以扩展自己的图片加载器。&lt;/li&gt;
&lt;li&gt;可以扩展自己的字体加载器。&lt;/li&gt;
&lt;li&gt;可以扩展自己的输入法引擎。&lt;/li&gt;
&lt;li&gt;可以扩展自己的控件布局算法。&lt;/li&gt;
&lt;li&gt;可以扩展自己的对话框高亮策略。&lt;/li&gt;
&lt;li&gt;可以实现自己的 LCD 接口。&lt;/li&gt;
&lt;li&gt;可以扩展自己的矢量引擎 （如使用 skia/cairo)。&lt;/li&gt;
&lt;li&gt;所有扩展组件和内置组件具有相同的待遇。&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;&lt;a id="user-content-7-多种开发语言" class="anchor" aria-hidden="true" href="#7-多种开发语言"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;7. 多种开发语言&lt;/h3&gt;
&lt;p&gt;&lt;a href="README.md"&gt;AWTK&lt;/a&gt; 本身是用 C 语言开发的，可以通过 IDL 生成各种脚本语言的绑定。生成的绑定代码不是简单的把 C 语言的 API 映射到脚本语言，而是生成脚本语言原生代码风格的 API。目前支持以下语言 （以后根据需要增加）：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;C&lt;/li&gt;
&lt;li&gt;Lua&lt;/li&gt;
&lt;li&gt;Javascript on jerryscript&lt;/li&gt;
&lt;li&gt;Javascript on nodejs&lt;/li&gt;
&lt;li&gt;Javascript on quickjs&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;&lt;a id="user-content-8-国际化" class="anchor" aria-hidden="true" href="#8-国际化"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;8. 国际化&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;支持 Unicode。&lt;/li&gt;
&lt;li&gt;支持输入法。&lt;/li&gt;
&lt;li&gt;支持字符串翻译 （实时生效）。&lt;/li&gt;
&lt;li&gt;支持图片翻译 （实时生效）。&lt;/li&gt;
&lt;li&gt;文字双向排版 （计划中）。&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;&lt;a id="user-content-9-开放源码免费商用-lgpl" class="anchor" aria-hidden="true" href="#9-开放源码免费商用-lgpl"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;9. 开放源码，免费商用 (LGPL)。&lt;/h3&gt;
&lt;h2&gt;&lt;a id="user-content-四模拟运行" class="anchor" aria-hidden="true" href="#四模拟运行"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;四、模拟运行：&lt;/h2&gt;
&lt;h3&gt;&lt;a id="user-content-mac" class="anchor" aria-hidden="true" href="#mac"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Mac&lt;/h3&gt;
&lt;p&gt;如果没有安装 scons 和 sdl2，请在终端运行下面的命令 （假定已安装 brew)：&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;brew install scons sdl2
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;编译运行 （在终端下，进入 awtk 所在的目录，并运行下列命令）：&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;scons
./bin/demoui
&lt;/code&gt;&lt;/pre&gt;
&lt;h3&gt;&lt;a id="user-content-ubuntu-版本-16" class="anchor" aria-hidden="true" href="#ubuntu-版本-16"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Ubuntu （版本 &amp;gt;=16)&lt;/h3&gt;
&lt;p&gt;如果没有安装 scons 和依赖的软件包，请在终端运行下面的命令：&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;sudo apt-get install scons libsndio-dev libgtk-3-dev libglu1-mesa libglu1-mesa-dev libgl1-mesa-glx libgl1-mesa-dev git vim clang-format
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;编译运行 （在终端下，进入 awtk 所在的目录，并运行下列命令）：&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;scons
./bin/demoui
&lt;/code&gt;&lt;/pre&gt;
&lt;blockquote&gt;
&lt;p&gt;在 Ubuntu 14 上无法启动，请参考 &lt;a href="docs/faq.md"&gt;FAQ&lt;/a&gt; 修改。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3&gt;&lt;a id="user-content-windows" class="anchor" aria-hidden="true" href="#windows"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Windows&lt;/h3&gt;
&lt;p&gt;（请先安装 python，scons 和 Visual Studio C++（版本 &amp;gt;=2017)&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;如果没有安装 pywin32，请 pip 安装：&lt;/p&gt;
&lt;/blockquote&gt;
&lt;pre&gt;&lt;code&gt;pip install pywin32
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;编译运行 （在命令行模式下，进入 awtk 所在的目录，并运行下列命令）：&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;scons
bin\demoui
&lt;/code&gt;&lt;/pre&gt;
&lt;blockquote&gt;
&lt;p&gt;如果没有安装 PIL，请用 pip 安装。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;pre&gt;&lt;code&gt;pip install Pillow
&lt;/code&gt;&lt;/pre&gt;
&lt;h2&gt;&lt;a id="user-content-五在线演示" class="anchor" aria-hidden="true" href="#五在线演示"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;五、在线演示&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="http://zlgawtk.bceapp.com/awtk/demos/demoui/index.html" rel="nofollow"&gt;基本控件在线演示&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="http://zlgawtk.bceapp.com/awtk/demos/Chart-Demo/index.html" rel="nofollow"&gt;图表演示&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="http://zlgawtk.bceapp.com/awtk/demos/MusicPlayer-Demo/index.html" rel="nofollow"&gt;音乐播放器演示&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="http://zlgawtk.bceapp.com/awtk/demos/SmartWatch-Demo/index.html" rel="nofollow"&gt;智能手表演示&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-六各个平台的移植" class="anchor" aria-hidden="true" href="#六各个平台的移植"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;六、各个平台的移植&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="docs/awtk_ecology.md"&gt;详见 AWTK 生态共建计划&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-七各语言的绑定" class="anchor" aria-hidden="true" href="#七各语言的绑定"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;七、各语言的绑定&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="https://github.com/zlgopen/awtk-binding"&gt;AWTK 绑定代码生成器&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="https://github.com/zlgopen/awtk-lua"&gt;LUA 绑定&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="https://github.com/zlgopen/awtk-quickjs"&gt;JS 绑定之 QuickJS&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="https://github.com/zlgopen/awtk-jerryscript"&gt;JS 绑定之 JerryScript&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-八相关工程" class="anchor" aria-hidden="true" href="#八相关工程"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;八、相关工程&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="https://github.com/zlgopen/awtk-hello"&gt;模板工程&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="https://github.com/zlgopen/awtk-c-demos"&gt;C 示例代码&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="https://github.com/zlgopen/awtk-examples"&gt;精彩示例&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="https://github.com/zlgopen/awtk-mvvm"&gt;AWTK-MVVM&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="https://github.com/CUITzhaoqi/awtk-qr"&gt;扩展控件实例：二维码&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="https://github.com/longyuwlz/awtk_slider_circle"&gt;扩展控件实例：圆形滑块&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-九文档" class="anchor" aria-hidden="true" href="#九文档"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;九、文档&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="docs/README.md"&gt;开发文档&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="docs/changes.md"&gt;最新动态&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="TODO.md"&gt;任务完成情况&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="https://github.com/zlgopen/awtk-docs"&gt;入门指南与手册&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-十生态共建计划" class="anchor" aria-hidden="true" href="#十生态共建计划"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;十、生态共建计划&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="docs/awtk_ecology.md"&gt;生态共建计划&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;深度合作伙伴&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;a href="https://www.nxp.com" rel="nofollow"&gt;&lt;img src="docs/images/logo_nxp.svg" alt="" style="max-width:100%;"&gt;&lt;/a&gt;　&lt;a href="http://www.anyka.com" rel="nofollow"&gt;&lt;img src="docs/images/logo_anyka.jpg" alt="" style="max-width:100%;"&gt;&lt;/a&gt;　&lt;a href="http://www.ingenic.com.cn" rel="nofollow"&gt;&lt;img src="docs/images/logo_ingenic.jpg" alt="" style="max-width:100%;"&gt;&lt;/a&gt;　&lt;a href="http://www.mindmotion.com.cn" rel="nofollow"&gt;&lt;img src="docs/images/logo_mindmotion.png" alt="" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;/article&gt;&lt;/div&gt;</description><author>zlgopen</author><guid isPermaLink="false">https://github.com/zlgopen/awtk</guid><pubDate>Fri, 20 Dec 2019 00:14:00 GMT</pubDate></item><item><title>taosdata/TDengine #15 in C, This week</title><link>https://github.com/taosdata/TDengine</link><description>&lt;p&gt;&lt;i&gt;An open-source big data platform designed and optimized for the Internet of Things (IoT).&lt;/i&gt;&lt;/p&gt;&lt;div id="readme" class="md" data-path="README.md"&gt;&lt;article class="markdown-body entry-content p-5" itemprop="text"&gt;&lt;p&gt;&lt;a href="https://www.taosdata.com" rel="nofollow"&gt;&lt;img src="TDenginelogo.png" alt="TDengine" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h1&gt;&lt;a id="user-content-what-is-tdengine" class="anchor" aria-hidden="true" href="#what-is-tdengine"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;What is TDengine？&lt;/h1&gt;
&lt;p&gt;TDengine is an open-sourced big data platform under &lt;a href="http://www.gnu.org/licenses/agpl-3.0.html" rel="nofollow"&gt;GNU AGPL v3.0&lt;/a&gt;, designed and optimized for the Internet of Things (IoT), Connected Cars, Industrial IoT, and IT Infrastructure and Application Monitoring. Besides the 10x faster time-series database, it provides caching, stream computing, message queuing and other functionalities to reduce the complexity and cost of development and operation.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;10x Faster on Insert/Query Speeds&lt;/strong&gt;: Through the innovative design on storage, on a single-core machine, over 20K requests can be processed, millions of data points can be ingested, and over 10 million data points can be retrieved in a second. It is 10 times faster than other databases.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;1/5 Hardware/Cloud Service Costs&lt;/strong&gt;: Compared with typical big data solutions, less than 1/5 of computing resources are required. Via column-based storage and tuned compression algorithms for different data types, less than 1/10 of storage space is needed.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Full Stack for Time-Series Data&lt;/strong&gt;: By integrating a database with message queuing, caching, and stream computing features together, it is no longer necessary to integrate Kafka/Redis/HBase/Spark or other software. It makes the system architecture much simpler and more robust.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Powerful Data Analysis&lt;/strong&gt;: Whether it is 10 years or one minute ago, data can be queried just by specifying the time range. Data can be aggregated over time, multiple time streams or both. Ad Hoc queries or analyses can be executed via TDengine shell, Python, R or Matlab.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Seamless Integration with Other Tools&lt;/strong&gt;: Telegraf, Grafana, Matlab, R, and other tools can be integrated with TDengine without a line of code. MQTT, OPC, Hadoop, Spark, and many others will be integrated soon.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Zero Management, No Learning Curve&lt;/strong&gt;: It takes only seconds to download, install, and run it successfully; there are no other dependencies. Automatic partitioning on tables or DBs. Standard SQL is used, with C/C++, Python, JDBC, Go and RESTful connectors.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h1&gt;&lt;a id="user-content-documentation" class="anchor" aria-hidden="true" href="#documentation"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Documentation&lt;/h1&gt;
&lt;p&gt;For user manual, system design and architecture, engineering blogs, refer to &lt;a href="https://www.taosdata.com/en/documentation/" rel="nofollow"&gt;TDengine Documentation&lt;/a&gt;
for details. The documentation from our website can also be downloaded locally from &lt;em&gt;documentation/tdenginedocs-en&lt;/em&gt; or &lt;em&gt;documentation/tdenginedocs-cn&lt;/em&gt;.&lt;/p&gt;
&lt;h1&gt;&lt;a id="user-content-building" class="anchor" aria-hidden="true" href="#building"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Building&lt;/h1&gt;
&lt;p&gt;At the moment, TDengine only supports building and running on Linux systems. You can choose to &lt;a href="https://www.taosdata.com/en/getting-started/#Install-from-Package" rel="nofollow"&gt;install from packages&lt;/a&gt; or from the source code. This quick guide is for installation from the source only.&lt;/p&gt;
&lt;p&gt;To build TDengine, use &lt;a href="https://cmake.org/" rel="nofollow"&gt;CMake&lt;/a&gt; 2.8 or higher versions in the project directory. Install CMake for example on Ubuntu:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;sudo apt-get install -y cmake build-essential
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;To compile and package the JDBC driver source code, you should have a Java jdk-8 or higher and Apache Maven 2.7 or higher installed.
To install openjdk-8 on Ubuntu:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;sudo apt-get install openjdk-8-jdk
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;To install Apache Maven on Ubuntu:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;sudo apt-get install maven
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Build TDengine:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;mkdir build &amp;amp;&amp;amp; cd build
cmake .. &amp;amp;&amp;amp; cmake --build .
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;if compiling on an arm64 processor, you need add one parameter:&lt;/p&gt;
&lt;div class="highlight highlight-source-batchfile"&gt;&lt;pre&gt;cmake .. -DARMVER=arm64 &lt;span class="pl-k"&gt;&amp;amp;&amp;amp;&lt;/span&gt; cmake --build .&lt;/pre&gt;&lt;/div&gt;
&lt;h1&gt;&lt;a id="user-content-quick-run" class="anchor" aria-hidden="true" href="#quick-run"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Quick Run&lt;/h1&gt;
&lt;p&gt;To quickly start a TDengine server after building, run the command below in terminal:&lt;/p&gt;
&lt;div class="highlight highlight-source-batchfile"&gt;&lt;pre&gt;./build/bin/taosd -c test/cfg&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;In another terminal, use the TDengine shell to connect the server:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;./build/bin/taos -c test/cfg
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;option "-c test/cfg" specifies the system configuration file directory.&lt;/p&gt;
&lt;h1&gt;&lt;a id="user-content-installing" class="anchor" aria-hidden="true" href="#installing"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Installing&lt;/h1&gt;
&lt;p&gt;After building successfully, TDengine can be installed by:&lt;/p&gt;
&lt;div class="highlight highlight-source-batchfile"&gt;&lt;pre&gt;make install&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Users can find more information about directories installed on the system in the &lt;a href="https://www.taosdata.com/en/documentation/administrator/#Directory-and-Files" rel="nofollow"&gt;directory and files&lt;/a&gt; section. It should be noted that installing from source code does not configure service management for TDengine.
Users can also choose to &lt;a href="https://www.taosdata.com/en/getting-started/#Install-from-Package" rel="nofollow"&gt;install from packages&lt;/a&gt; for it.&lt;/p&gt;
&lt;p&gt;To start the service after installation, in a terminal, use:&lt;/p&gt;
&lt;div class="highlight highlight-source-batchfile"&gt;&lt;pre&gt;taosd&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Then users can use the &lt;a href="https://www.taosdata.com/en/getting-started/#TDengine-Shell" rel="nofollow"&gt;TDengine shell&lt;/a&gt; to connect the TDengine server. In a terminal, use:&lt;/p&gt;
&lt;div class="highlight highlight-source-batchfile"&gt;&lt;pre&gt;taos&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;If TDengine shell connects the server successfully, welcome messages and version info are printed. Otherwise, an error message is shown.&lt;/p&gt;
&lt;h1&gt;&lt;a id="user-content-try-tdengine" class="anchor" aria-hidden="true" href="#try-tdengine"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Try TDengine&lt;/h1&gt;
&lt;p&gt;It is easy to run SQL commands from TDengine shell which is the same as other SQL databases.&lt;/p&gt;
&lt;div class="highlight highlight-source-sql"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;create&lt;/span&gt; &lt;span class="pl-k"&gt;database&lt;/span&gt; &lt;span class="pl-en"&gt;db&lt;/span&gt;;
use db;
&lt;span class="pl-k"&gt;create&lt;/span&gt; &lt;span class="pl-k"&gt;table&lt;/span&gt; &lt;span class="pl-en"&gt;t&lt;/span&gt; (ts &lt;span class="pl-k"&gt;timestamp&lt;/span&gt;, a &lt;span class="pl-k"&gt;int&lt;/span&gt;);
&lt;span class="pl-k"&gt;insert into&lt;/span&gt; t &lt;span class="pl-k"&gt;values&lt;/span&gt; (&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;2019-07-15 00:00:00&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-c1"&gt;1&lt;/span&gt;);
&lt;span class="pl-k"&gt;insert into&lt;/span&gt; t &lt;span class="pl-k"&gt;values&lt;/span&gt; (&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;2019-07-15 01:00:00&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-c1"&gt;2&lt;/span&gt;);
&lt;span class="pl-k"&gt;select&lt;/span&gt; &lt;span class="pl-k"&gt;*&lt;/span&gt; &lt;span class="pl-k"&gt;from&lt;/span&gt; t;
&lt;span class="pl-k"&gt;drop&lt;/span&gt; &lt;span class="pl-k"&gt;database&lt;/span&gt; db;&lt;/pre&gt;&lt;/div&gt;
&lt;h1&gt;&lt;a id="user-content-developing-with-tdengine" class="anchor" aria-hidden="true" href="#developing-with-tdengine"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Developing with TDengine&lt;/h1&gt;
&lt;h3&gt;&lt;a id="user-content-official-connectors" class="anchor" aria-hidden="true" href="#official-connectors"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Official Connectors&lt;/h3&gt;
&lt;p&gt;TDengine provides abundant developing tools for users to develop on TDengine. Follow the links below to find your desired connectors and relevant documentation.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.taosdata.com/en/documentation/connector/#Java-Connector" rel="nofollow"&gt;Java&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.taosdata.com/en/documentation/connector/#C/C++-Connector" rel="nofollow"&gt;C/C++&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.taosdata.com/en/documentation/connector/#Python-Connector" rel="nofollow"&gt;Python&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.taosdata.com/en/documentation/connector/#Go-Connector" rel="nofollow"&gt;Go&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.taosdata.com/en/documentation/connector/#RESTful-Connector" rel="nofollow"&gt;RESTful API&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.taosdata.com/en/documentation/connector/#Node.js-Connector" rel="nofollow"&gt;Node.js&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;&lt;a id="user-content-third-party-connectors" class="anchor" aria-hidden="true" href="#third-party-connectors"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Third Party Connectors&lt;/h3&gt;
&lt;p&gt;The TDengine community has also kindly built some of their own connectors! Follow the links below to find the source code for them.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/taosdata/TDengine/tree/master/tests/examples/rust"&gt;Rust Connector&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/maikebing/Maikebing.EntityFrameworkCore.Taos"&gt;.Net Core Connector&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h1&gt;&lt;a id="user-content-tdengine-roadmap" class="anchor" aria-hidden="true" href="#tdengine-roadmap"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;TDengine Roadmap&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;Support event-driven stream computing&lt;/li&gt;
&lt;li&gt;Support user defined functions&lt;/li&gt;
&lt;li&gt;Support MQTT connection&lt;/li&gt;
&lt;li&gt;Support OPC connection&lt;/li&gt;
&lt;li&gt;Support Hadoop, Spark connections&lt;/li&gt;
&lt;li&gt;Support Tableau and other BI tools&lt;/li&gt;
&lt;/ul&gt;
&lt;h1&gt;&lt;a id="user-content-contribute-to-tdengine" class="anchor" aria-hidden="true" href="#contribute-to-tdengine"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Contribute to TDengine&lt;/h1&gt;
&lt;p&gt;Please follow the &lt;a href="CONTRIBUTING.md"&gt;contribution guidelines&lt;/a&gt; to contribute to the project.&lt;/p&gt;
&lt;/article&gt;&lt;/div&gt;</description><author>taosdata</author><guid isPermaLink="false">https://github.com/taosdata/TDengine</guid><pubDate>Fri, 20 Dec 2019 00:15:00 GMT</pubDate></item><item><title>zfsonlinux/zfs #16 in C, This week</title><link>https://github.com/zfsonlinux/zfs</link><description>&lt;p&gt;&lt;i&gt;ZFS on Linux - the official OpenZFS implementation for Linux.&lt;/i&gt;&lt;/p&gt;&lt;div id="readme" class="md" data-path="README.md"&gt;&lt;article class="markdown-body entry-content p-5" itemprop="text"&gt;&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="https://camo.githubusercontent.com/8fc52c26b88002a9834951c260e65b0991bc3512/687474703a2f2f7a66736f6e6c696e75782e6f72672f696d616765732f7a66732d6c696e75782e706e67"&gt;&lt;img src="https://camo.githubusercontent.com/8fc52c26b88002a9834951c260e65b0991bc3512/687474703a2f2f7a66736f6e6c696e75782e6f72672f696d616765732f7a66732d6c696e75782e706e67" alt="img" data-canonical-src="http://zfsonlinux.org/images/zfs-linux.png" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;ZFS on Linux is an advanced file system and volume manager which was originally
developed for Solaris and is now maintained by the OpenZFS community.&lt;/p&gt;
&lt;p&gt;&lt;a href="https://codecov.io/gh/zfsonlinux/zfs" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/ef39aa9bc2b3a7660f44baa0cdca6059b335c625/68747470733a2f2f636f6465636f762e696f2f67682f7a66736f6e6c696e75782f7a66732f6272616e63682f6d61737465722f67726170682f62616467652e737667" alt="codecov" data-canonical-src="https://codecov.io/gh/zfsonlinux/zfs/branch/master/graph/badge.svg" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://scan.coverity.com/projects/zfsonlinux-zfs" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/3f0420942cbdee3149041d9678ab2ef2949af4ec/68747470733a2f2f7363616e2e636f7665726974792e636f6d2f70726f6a656374732f313937332f62616467652e737667" alt="coverity" data-canonical-src="https://scan.coverity.com/projects/1973/badge.svg" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h1&gt;&lt;a id="user-content-official-resources" class="anchor" aria-hidden="true" href="#official-resources"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Official Resources&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://zfsonlinux.org" rel="nofollow"&gt;Site&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/zfsonlinux/zfs/wiki"&gt;Wiki&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/zfsonlinux/zfs/wiki/Mailing-Lists"&gt;Mailing lists&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://open-zfs.org/" rel="nofollow"&gt;OpenZFS site&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h1&gt;&lt;a id="user-content-installation" class="anchor" aria-hidden="true" href="#installation"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Installation&lt;/h1&gt;
&lt;p&gt;Full documentation for installing ZoL on your favorite Linux distribution can
be found at &lt;a href="http://zfsonlinux.org/" rel="nofollow"&gt;our site&lt;/a&gt;.&lt;/p&gt;
&lt;h1&gt;&lt;a id="user-content-contribute--develop" class="anchor" aria-hidden="true" href="#contribute--develop"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Contribute &amp;amp; Develop&lt;/h1&gt;
&lt;p&gt;We have a separate document with &lt;a href="./.github/CONTRIBUTING.md"&gt;contribution guidelines&lt;/a&gt;.&lt;/p&gt;
&lt;h1&gt;&lt;a id="user-content-release" class="anchor" aria-hidden="true" href="#release"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Release&lt;/h1&gt;
&lt;p&gt;ZFS on Linux is released under a CDDL license.&lt;br&gt;
For more details see the NOTICE, LICENSE and COPYRIGHT files; &lt;code&gt;UCRL-CODE-235197&lt;/code&gt;&lt;/p&gt;
&lt;h1&gt;&lt;a id="user-content-supported-kernels" class="anchor" aria-hidden="true" href="#supported-kernels"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Supported Kernels&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;The &lt;code&gt;META&lt;/code&gt; file contains the officially recognized supported kernel versions.&lt;/li&gt;
&lt;/ul&gt;
&lt;/article&gt;&lt;/div&gt;</description><author>zfsonlinux</author><guid isPermaLink="false">https://github.com/zfsonlinux/zfs</guid><pubDate>Fri, 20 Dec 2019 00:16:00 GMT</pubDate></item><item><title>CTCaer/hekate #17 in C, This week</title><link>https://github.com/CTCaer/hekate</link><description>&lt;p&gt;&lt;i&gt;Nintendo Switch Bootloader - CTCaer mod&lt;/i&gt;&lt;/p&gt;&lt;div id="readme" class="md" data-path="README.md"&gt;&lt;article class="markdown-body entry-content p-5" itemprop="text"&gt;&lt;h1&gt;&lt;a id="user-content-hekate---ctcaer-mod" class="anchor" aria-hidden="true" href="#hekate---ctcaer-mod"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;hekate - CTCaer mod&lt;/h1&gt;
&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="https://user-images.githubusercontent.com/3665130/60391760-bc1e8c00-9afe-11e9-8b7a-b065873081b2.png"&gt;&lt;img src="https://user-images.githubusercontent.com/3665130/60391760-bc1e8c00-9afe-11e9-8b7a-b065873081b2.png" alt="Image of Hekate" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Custom Nintendo Switch bootloader, firmware patcher, and more.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-bootloader-folders-and-files" class="anchor" aria-hidden="true" href="#bootloader-folders-and-files"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Bootloader folders and files&lt;/h2&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Folder/File&lt;/th&gt;
&lt;th&gt;Description&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;bootloader&lt;/td&gt;
&lt;td&gt;Main folder.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;|__ bootlogo.bmp&lt;/td&gt;
&lt;td&gt;It is used when custom is on and no logopath found. Can be skipped.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;|__ hekate_ipl.ini&lt;/td&gt;
&lt;td&gt;Main bootloader configuration and boot entries.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;|__ patches.ini&lt;/td&gt;
&lt;td&gt;Add external patches. Can be skipped. A template can be found &lt;a href="./res/patches_template.ini"&gt;here&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;|__ update.bin&lt;/td&gt;
&lt;td&gt;If newer, it is loaded at boot. For modchips. Auto updated. Can be skipped.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;bootloader/ini/&lt;/td&gt;
&lt;td&gt;For individual inis. 'More configs...' menu. Autoboot is supported.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;bootloader/res/&lt;/td&gt;
&lt;td&gt;Nyx user resources. Icons and more.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;|__ background.bmp&lt;/td&gt;
&lt;td&gt;Nyx - custom background.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;|__ icon_switch.bmp&lt;/td&gt;
&lt;td&gt;Nyx - Default icon for CFWs.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;|__ icon_payload.bmp&lt;/td&gt;
&lt;td&gt;Nyx - Default icon for Payloads.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;|__ icon_lakka.bmp&lt;/td&gt;
&lt;td&gt;Nyx - Default icon for Lakka.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;bootloader/sys/&lt;/td&gt;
&lt;td&gt;For system modules.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;|__ emummc.kipm&lt;/td&gt;
&lt;td&gt;emuMMC KIP1 module. Important!&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;|__ libsys_lp0.bso&lt;/td&gt;
&lt;td&gt;LP0 (sleep mode) module. Important!&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;|__ libsys_minerva.bso&lt;/td&gt;
&lt;td&gt;Minerva Training Cell. Used for DRAM Frequency training. Important!&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;|__ nyx.bin&lt;/td&gt;
&lt;td&gt;Nyx - Our GUI. Important!&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;|__ res.pak&lt;/td&gt;
&lt;td&gt;Nyx resources package. Important!&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;bootloader/screenshots/&lt;/td&gt;
&lt;td&gt;Folder where Nyx screenshots are saved&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;bootloader/payloads/&lt;/td&gt;
&lt;td&gt;For payloads. 'Payloads...' menu. Autoboot only supported by including them into an ini. All CFW bootloaders, tools, Linux payloads are supported.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;bootloader/libtools/&lt;/td&gt;
&lt;td&gt;Future reserved&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;&lt;strong&gt;Note&lt;/strong&gt;: Sept files for booting 7.0.0 and up are expected at /sept folder at root of sd card.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-bootloader-configuration" class="anchor" aria-hidden="true" href="#bootloader-configuration"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Bootloader configuration&lt;/h2&gt;
&lt;p&gt;The bootloader can be configured via 'bootloader/hekate_ipl.ini' (if it is present on the SD card). Each ini section represents a boot entry, except for the special section 'config' that controls the global configuration.&lt;/p&gt;
&lt;p&gt;There are four possible type of entries. "&lt;strong&gt;[ ]&lt;/strong&gt;": Boot entry, "&lt;strong&gt;{ }&lt;/strong&gt;": Caption, "&lt;strong&gt;#&lt;/strong&gt;": Comment, "&lt;em&gt;newline&lt;/em&gt;": .ini cosmetic newline.&lt;/p&gt;
&lt;p&gt;You can find a template &lt;a href="./res/hekate_ipl_template.ini"&gt;Here&lt;/a&gt;&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-global-configuration-keysvalues-when-boot-entry-is-config" class="anchor" aria-hidden="true" href="#global-configuration-keysvalues-when-boot-entry-is-config"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Global Configuration keys/values when boot entry is &lt;strong&gt;config&lt;/strong&gt;:&lt;/h3&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Config option&lt;/th&gt;
&lt;th&gt;Description&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;autoboot=0&lt;/td&gt;
&lt;td&gt;0: Disable, #: Boot entry number to auto boot.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;autoboot_list=0&lt;/td&gt;
&lt;td&gt;0: Read &lt;code&gt;autoboot&lt;/code&gt; boot entry from hekate_ipl.ini, 1: Read from ini folder (ini files are ASCII ordered).&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;bootwait=3&lt;/td&gt;
&lt;td&gt;0: Disable (It also disables bootlogo. Having &lt;strong&gt;VOL-&lt;/strong&gt; pressed since injection goes to menu.), #: Time to wait for &lt;strong&gt;VOL-&lt;/strong&gt; to enter menu.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;verification=2&lt;/td&gt;
&lt;td&gt;0: Disable Backup/Restore verification, 1: Sparse (block based, fast and not 100% reliable), 2: Full (sha256 based, slow and 100% reliable).&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;autohosoff=1&lt;/td&gt;
&lt;td&gt;0: Disable, 1: If woke up from HOS via an RTC alarm, shows logo, then powers off completely, 2: No logo, immediately powers off.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;autonogc=1&lt;/td&gt;
&lt;td&gt;0: Disable, 1: Automatically applies nogc patch if unburnt fuses found and a &amp;gt;= 4.0.0 HOS is booted.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;updater2p=0&lt;/td&gt;
&lt;td&gt;0: Disable, 1: Force updates (if needed) the reboot2payload binary to be hekate.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;backlight=100&lt;/td&gt;
&lt;td&gt;Screen backlight level. 0-255.&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h3&gt;&lt;a id="user-content-possible-boot-entry-keyvalue-combinations" class="anchor" aria-hidden="true" href="#possible-boot-entry-keyvalue-combinations"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Possible boot entry key/value combinations:&lt;/h3&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Config option&lt;/th&gt;
&lt;th&gt;Description&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;warmboot={SD path}&lt;/td&gt;
&lt;td&gt;Replaces the warmboot binary&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;secmon={SD path}&lt;/td&gt;
&lt;td&gt;Replaces the security monitor binary&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;kernel={SD path}&lt;/td&gt;
&lt;td&gt;Replaces the kernel binary&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;kip1={SD path}&lt;/td&gt;
&lt;td&gt;Replaces/Adds kernel initial process. Multiple can be set.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;kip1={SD folder}/*&lt;/td&gt;
&lt;td&gt;Loads every .kip/.kip1 inside a folder. Compatible with single kip1 keys.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;fss0={SD path}&lt;/td&gt;
&lt;td&gt;Takes a fusee-secondary binary and &lt;code&gt;extracts&lt;/code&gt; all needed parts from it.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;kip1patch=patchname&lt;/td&gt;
&lt;td&gt;Enables a kip1 patch. Specify with multiple lines and/or as CSV. If not found, an error will show up&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;fullsvcperm=1&lt;/td&gt;
&lt;td&gt;Disables SVC verification (full services permission)&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;debugmode=1&lt;/td&gt;
&lt;td&gt;Enables Debug mode. Obsolete when used with exosphere as secmon.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;atmosphere=1&lt;/td&gt;
&lt;td&gt;Enables Atmosphère patching.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;nouserexceptions=1&lt;/td&gt;
&lt;td&gt;Disables usermode exception handlers when paired with Exosphère.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;userpmu=1&lt;/td&gt;
&lt;td&gt;Allows user access to PMU when paired with Exosphère.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;emummc_force_disable=1&lt;/td&gt;
&lt;td&gt;Disabled emuMMC if it's enabled.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;stock=1&lt;/td&gt;
&lt;td&gt;Disables unneeded kernel patching when running stock or semi-stock. &lt;code&gt;If emuMMC is enabled, emummc_force_disabled=1&lt;/code&gt; is required to run completely stock.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;id=idname&lt;/td&gt;
&lt;td&gt;Identifies boot entry for forced boot via id. Max 7 chars.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;payload={SD path}&lt;/td&gt;
&lt;td&gt;Payload launching. Tools, Linux, CFW bootloaders, etc.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;logopath={SD path}&lt;/td&gt;
&lt;td&gt;If no logopath, &lt;code&gt;bootloader/bootlogo.bmp&lt;/code&gt; will be used if exists. If logopath exists, it will load the specified bitmap.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;icon={SD path}&lt;/td&gt;
&lt;td&gt;Force Nyx to use the icon defined here. If this is not found, it will check for a bmp named as the boot entry ([Test 2] -&amp;gt; &lt;code&gt;bootloader/res/Test 2.bmp&lt;/code&gt;). Otherwise default will be used.&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;&lt;strong&gt;Note1&lt;/strong&gt;: When using the wildcard (&lt;code&gt;/*&lt;/code&gt;) with &lt;code&gt;kip1&lt;/code&gt; you can still use the normal &lt;code&gt;kip1&lt;/code&gt; after that to load extra single kips.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Note2&lt;/strong&gt;: When using FSS0 it parses exosphere, warmboot and all core kips. You can override the first 2 by using &lt;code&gt;secmon&lt;/code&gt;/&lt;code&gt;warmboot&lt;/code&gt; after defining &lt;code&gt;fss0&lt;/code&gt;.
You can define &lt;code&gt;kip1&lt;/code&gt; to load an extra kip or many via the wildcard (&lt;code&gt;/*&lt;/code&gt;) usage.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Warning&lt;/strong&gt;: Never define &lt;em&gt;fss0 core&lt;/em&gt; kips when using &lt;code&gt;fss0&lt;/code&gt; and make sure that the folder (when using &lt;code&gt;/*&lt;/code&gt;), does not include them.
This is in case the kips are incompatible between them. If compatible, you can override &lt;code&gt;fss0&lt;/code&gt; kips with no issues (useful for testing with intermediate kip changes).&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-payload-storage" class="anchor" aria-hidden="true" href="#payload-storage"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Payload storage:&lt;/h3&gt;
&lt;p&gt;hekate has a boot storage in the binary that helps it configure it outside of BPMP enviroment:&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Offset / Name&lt;/th&gt;
&lt;th&gt;Description&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;'0x94' boot_cfg&lt;/td&gt;
&lt;td&gt;bit0: Force AutoBoot, bit1: Show launch log, bit2: Boot from ID, bit7: sept run.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;'0x95' autoboot&lt;/td&gt;
&lt;td&gt;If &lt;code&gt;Force AutoBoot&lt;/code&gt;: 0: Force go to menu, else boot that entry.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;'0x96' autoboot_list&lt;/td&gt;
&lt;td&gt;If &lt;code&gt;Force AutoBoot&lt;/code&gt; and &lt;code&gt;autoboot&lt;/code&gt; then it boots from ini folder.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;'0x97' extra_cfg&lt;/td&gt;
&lt;td&gt;bit7: Force Nyx to run &lt;code&gt;Dump pkg1/2&lt;/code&gt;.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;'0x98' id[8]&lt;/td&gt;
&lt;td&gt;When Boot from ID is set, it will search all inis automatically and find the boot entry with that id and boot it. Must be NULL terminated.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;'0x98' xt_str[128]&lt;/td&gt;
&lt;td&gt;Depends on the set cfg bits.&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;If the main .ini is not found, it is created on the first hekate boot.&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;hekate     (C) 2018 naehrwert, st4rk
CTCaer mod (C) 2018 CTCaer.

Thanks to: derrek, nedwill, plutoo, shuffle2, smea, thexyz, yellows8.
Greetings to: fincs, hexkyz, SciresM, Shiny Quagsire, WinterMute.

Open source and free packages used:
 - FatFs R0.13a, Copyright (C) 2017, ChaN
 - bcl-1.2.0, Copyright (C) 2003-2006, Marcus Geelnard
 - Atmosphère (Exosphere types/panic, prc id kernel patches),
   Copyright (C) 2018-2019, Atmosphère-NX
 - elfload, Copyright (C) 2014 Owen Shepherd, Copyright (C) 2018 M4xw

                         ___
                      .-'   `'.
                     /         \
                     |         ;
                     |         |           ___.--,
            _.._     |0) = (0) |    _.---'`__.-( (_.
     __.--'`_.. '.__.\    '--. \_.-' ,.--'`     `""`
    ( ,.--'`   ',__ /./;   ;, '.__.'`    __
    _`) )  .---.__.' / |   |\   \__..--""  """--.,_
   `---' .'.''-._.-'`_./  /\ '.  \ _.--''````'''--._`-.__.'
         | |  .' _.-' |  |  \  \  '.               `----`
          \ \/ .'     \  \   '. '-._)
           \/ /        \  \    `=.__`'-.
           / /\         `) )    / / `"".`\
     , _.-'.'\ \        / /    ( (     / /
      `--'`   ) )    .-'.'      '.'.  | (
             (/`    ( (`          ) )  '-;   [switchbrew]
&lt;/code&gt;&lt;/pre&gt;
&lt;/article&gt;&lt;/div&gt;</description><author>CTCaer</author><guid isPermaLink="false">https://github.com/CTCaer/hekate</guid><pubDate>Fri, 20 Dec 2019 00:17:00 GMT</pubDate></item><item><title>acidanthera/OpenCorePkg #18 in C, This week</title><link>https://github.com/acidanthera/OpenCorePkg</link><description>&lt;p&gt;&lt;i&gt;OpenCore front end&lt;/i&gt;&lt;/p&gt;&lt;div id="readme" class="md" data-path="README.md"&gt;&lt;article class="markdown-body entry-content p-5" itemprop="text"&gt;&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="https://github.com/acidanthera/OpenCorePkg/blob/master/Docs/Logos/OpenCore_with_text_Small.png"&gt;&lt;img src="https://github.com/acidanthera/OpenCorePkg/raw/master/Docs/Logos/OpenCore_with_text_Small.png" width="200" height="48" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content--" class="anchor" aria-hidden="true" href="#-"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;a href="https://travis-ci.com/acidanthera/OpenCorePkg" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/db77e5e95b6fb6d136ed05696bd9da939b16ec34/68747470733a2f2f7472617669732d63692e636f6d2f61636964616e74686572612f4f70656e436f7265506b672e7376673f6272616e63683d6d6173746572" alt="Build Status" data-canonical-src="https://travis-ci.com/acidanthera/OpenCorePkg.svg?branch=master" style="max-width:100%;"&gt;&lt;/a&gt; &lt;a href="https://scan.coverity.com/projects/18169" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/52e7e3f4c55e4023af135a707d39f07048b2e776/68747470733a2f2f7363616e2e636f7665726974792e636f6d2f70726f6a656374732f31383136392f62616467652e7376673f666c61743d31" alt="Scan Status" data-canonical-src="https://scan.coverity.com/projects/18169/badge.svg?flat=1" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;OpenCore bootloader front end.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-discussion" class="anchor" aria-hidden="true" href="#discussion"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Discussion&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://applelife.ru/threads/razrabotka-opencore.2943955" rel="nofollow"&gt;AppleLife.ru&lt;/a&gt; in Russian&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.hackintosh-forum.de/forum/thread/42353-opencore-bootloader" rel="nofollow"&gt;Hackintosh-Forum.de&lt;/a&gt; in German&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.insanelymac.com/forum/topic/338527-opencore-development/" rel="nofollow"&gt;InsanelyMac.com&lt;/a&gt; in English&lt;/li&gt;
&lt;li&gt;&lt;a href="https://forums.macrumors.com/threads/opencore-on-the-mac-pro.2207814/" rel="nofollow"&gt;MacRumors.com&lt;/a&gt; in English, legacy Apple hardware&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.macos86.it/showthread.php?4570-OpenCore-aka-OC-Nuovo-BootLoader" rel="nofollow"&gt;macOS86.it&lt;/a&gt; in Italian&lt;/li&gt;
&lt;li&gt;&lt;a href="http://bbs.pcbeta.com/viewthread-1815623-1-1.html" rel="nofollow"&gt;PCbeta.com&lt;/a&gt; in Chinese&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-credits" class="anchor" aria-hidden="true" href="#credits"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Credits&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;The HermitCrabs Lab&lt;/li&gt;
&lt;li&gt;All projects providing third-party code (refer to file headers)&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/al3xtjames"&gt;al3xtjames&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/Andrey1970AppleLife"&gt;Andrey1970AppleLife&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/Download-Fritz"&gt;Download-Fritz&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/Goldfish64"&gt;Goldfish64&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/PMHeart"&gt;PMHeart&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/savvamitrofanov"&gt;savvamitrofanov&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/vit9696"&gt;vit9696&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/article&gt;&lt;/div&gt;</description><author>acidanthera</author><guid isPermaLink="false">https://github.com/acidanthera/OpenCorePkg</guid><pubDate>Fri, 20 Dec 2019 00:18:00 GMT</pubDate></item><item><title>KevinOConnor/klipper #19 in C, This week</title><link>https://github.com/KevinOConnor/klipper</link><description>&lt;p&gt;&lt;i&gt;Klipper is a 3d-printer firmware&lt;/i&gt;&lt;/p&gt;&lt;div id="readme" class="md" data-path="README.md"&gt;&lt;article class="markdown-body entry-content p-5" itemprop="text"&gt;&lt;p&gt;Welcome to the Klipper project!&lt;/p&gt;
&lt;p&gt;&lt;a href="https://www.klipper3d.org/" rel="nofollow"&gt;&lt;img src="docs/img/klipper-logo-small.png" alt="Klipper" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href="https://www.klipper3d.org/" rel="nofollow"&gt;https://www.klipper3d.org/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Klipper is a 3d-Printer firmware. It combines the power of a general
purpose computer with one or more micro-controllers. See the
&lt;a href="https://www.klipper3d.org/Features.html" rel="nofollow"&gt;features document&lt;/a&gt; for more
information on why you should use Klipper.&lt;/p&gt;
&lt;p&gt;To begin using Klipper start by
&lt;a href="https://www.klipper3d.org/Installation.html" rel="nofollow"&gt;installing&lt;/a&gt; it.&lt;/p&gt;
&lt;p&gt;Klipper is Free Software. See the &lt;a href="COPYING"&gt;license&lt;/a&gt; or read the
&lt;a href="https://www.klipper3d.org/Overview.html" rel="nofollow"&gt;documentation&lt;/a&gt;.&lt;/p&gt;
&lt;/article&gt;&lt;/div&gt;</description><author>KevinOConnor</author><guid isPermaLink="false">https://github.com/KevinOConnor/klipper</guid><pubDate>Fri, 20 Dec 2019 00:19:00 GMT</pubDate></item><item><title>aws/amazon-freertos #20 in C, This week</title><link>https://github.com/aws/amazon-freertos</link><description>&lt;p&gt;&lt;i&gt;IoT operating system for microcontrollers.&lt;/i&gt;&lt;/p&gt;&lt;div id="readme" class="md" data-path="README.md"&gt;&lt;article class="markdown-body entry-content p-5" itemprop="text"&gt;&lt;h2&gt;&lt;a id="user-content-cloning" class="anchor" aria-hidden="true" href="#cloning"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Cloning&lt;/h2&gt;
&lt;p&gt;This repo uses &lt;a href="https://git-scm.com/book/en/v2/Git-Tools-Submodules" rel="nofollow"&gt;Git Submodules&lt;/a&gt; to bring in dependent components.&lt;/p&gt;
&lt;p&gt;Note: If you download the ZIP file provided by GitHub UI, you will not get the contents of the submodules. (The ZIP file is also not a valid git repository)&lt;/p&gt;
&lt;p&gt;To clone using HTTPS:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;git clone https://github.com/aws/amazon-freertos.git --recurse-submodules
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Using SSH:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;git clone git@github.com:aws/amazon-freertos.git --recurse-submodules
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;If you have downloaded the repo without using the &lt;code&gt;--recurse-submodules&lt;/code&gt; argument, you need to run:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;git submodule update --init --recursive
&lt;/code&gt;&lt;/pre&gt;
&lt;h2&gt;&lt;a id="user-content-important-branches-to-know" class="anchor" aria-hidden="true" href="#important-branches-to-know"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Important branches to know&lt;/h2&gt;
&lt;p&gt;master            --&amp;gt; Development is done continuously on this branch&lt;br&gt;
release           --&amp;gt; Fully tested released source code&lt;br&gt;
release-candidate --&amp;gt; Preview of upcoming release&lt;br&gt;
feature/*         --&amp;gt; Alpha/beta of an upcoming feature&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-getting-started" class="anchor" aria-hidden="true" href="#getting-started"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Getting Started&lt;/h2&gt;
&lt;p&gt;For more information on Amazon FreeRTOS, refer to the &lt;a href="https://aws.amazon.com/freertos" rel="nofollow"&gt;Getting Started section of Amazon FreeRTOS webpage&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;To directly access the &lt;strong&gt;Getting Started Guide&lt;/strong&gt; for supported hardware platforms, click the corresponding link in the Supported Hardware section below.&lt;/p&gt;
&lt;p&gt;For detailed documentation on Amazon FreeRTOS, refer to the &lt;a href="https://aws.amazon.com/documentation/freertos" rel="nofollow"&gt;Amazon FreeRTOS User Guide&lt;/a&gt;.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-supported-hardware" class="anchor" aria-hidden="true" href="#supported-hardware"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Supported Hardware&lt;/h2&gt;
&lt;p&gt;For additional boards that are supported for Amazon FreeRTOS, please visit the &lt;a href="https://devices.amazonaws.com/search?kw=freertos" rel="nofollow"&gt;AWS Device Catalog&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;The following MCU boards are supported for Amazon FreeRTOS:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;&lt;strong&gt;Texas Instruments&lt;/strong&gt; - &lt;a href="http://www.ti.com/tool/cc3220sf-launchxl" rel="nofollow"&gt;CC3220SF-LAUNCHXL&lt;/a&gt;.
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://docs.aws.amazon.com/freertos/latest/userguide/getting_started_ti.html" rel="nofollow"&gt;Getting Started Guide&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;IDEs: &lt;a href="http://www.ti.com/tools-software/ccs.html" rel="nofollow"&gt;Code Composer Studio&lt;/a&gt;, &lt;a href="https://www.iar.com/iar-embedded-workbench/partners/texas-instruments" rel="nofollow"&gt;IAR Embedded Workbench&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;STMicroelectronics&lt;/strong&gt; - &lt;a href="http://www.st.com/en/evaluation-tools/b-l475e-iot01a.html" rel="nofollow"&gt;STM32L4 Discovery kit IoT node&lt;/a&gt;.
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://docs.aws.amazon.com/freertos/latest/userguide/getting_started_st.html" rel="nofollow"&gt;Getting Started Guide&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;IDE: &lt;a href="http://openstm32.org/HomePage" rel="nofollow"&gt;STM32 System Workbench&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;NXP&lt;/strong&gt; - &lt;a href="http://www.nxp.com/LPC-AWS-Module" rel="nofollow"&gt;LPC54018 IoT Module&lt;/a&gt;.
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://docs.aws.amazon.com/freertos/latest/userguide/getting_started_nxp.html" rel="nofollow"&gt;Getting Started Guide&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;IDEs: &lt;a href="https://www.iar.com/iar-embedded-workbench/partners/nxp" rel="nofollow"&gt;IAR Embedded Workbench&lt;/a&gt;, &lt;a href="https://www.nxp.com/mcuxpresso/ide/download" rel="nofollow"&gt;MCUXpresso IDE&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Microchip&lt;/strong&gt; - &lt;a href="http://www.microchipdirect.com/product/search/all/dm320104-BNDL" rel="nofollow"&gt;Curiosity PIC32MZEF&lt;/a&gt;.
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://docs.aws.amazon.com/freertos/latest/userguide/getting_started_mch.html" rel="nofollow"&gt;Getting Started Guide&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;IDE: &lt;a href="http://www.microchip.com/mplab/mplab-x-ide" rel="nofollow"&gt;MPLAB X IDE&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Espressif&lt;/strong&gt; - &lt;a href="https://www.espressif.com/en/products/hardware/esp32-devkitc/overview" rel="nofollow"&gt;ESP32-DevKitC&lt;/a&gt;, &lt;a href="https://www.espressif.com/en/products/hardware/esp-wrover-kit/overview" rel="nofollow"&gt;ESP-WROVER-KIT&lt;/a&gt;.
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://docs.aws.amazon.com/freertos/latest/userguide/getting_started_espressif.html" rel="nofollow"&gt;Getting Started Guide&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Infineon&lt;/strong&gt; - &lt;a href="https://www.infineon.com/connectivitykit" rel="nofollow"&gt;Infineon XMC4800 IoT Connectivity Kit&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://docs.aws.amazon.com/freertos/latest/userguide/getting_started_infineon.html" rel="nofollow"&gt;Getting Started Guide&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;IDE: &lt;a href="https://infineoncommunity.com/dave-download_ID645" rel="nofollow"&gt;DAVE&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Xilinx&lt;/strong&gt; - &lt;a href="http://www.zedboard.org/product/microzed-iiot-bundle-afreertos" rel="nofollow"&gt;Xilinx Zynq-7000 based MicroZed Industrial IoT Bundle&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://docs.aws.amazon.com/freertos/latest/userguide/getting_started_xilinx.html" rel="nofollow"&gt;Getting Started Guide&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;IDE: &lt;a href="https://www.xilinx.com/products/design-tools/embedded-software/sdk.html" rel="nofollow"&gt;Xilinx SDK&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;MediaTek&lt;/strong&gt; - &lt;a href="https://www.mediatek.com/products/smartHome/mt7697h" rel="nofollow"&gt;MediaTek MT7697Hx Development Kit&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://docs.aws.amazon.com/freertos/latest/userguide/getting_started_mediatek.html" rel="nofollow"&gt;Getting Started Guide&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;IDE: &lt;a href="http://www2.keil.com/mdk5/install/" rel="nofollow"&gt;Keil uVision&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Renesas&lt;/strong&gt; - &lt;a href="https://www.renesas.com/us/en/products/software-tools/boards-and-kits/renesas-starter-kits/renesas-starter-kitplus-for-rx65n-2mb.html" rel="nofollow"&gt;Renesas Starter Kit+ for RX65N-2MB&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://docs.aws.amazon.com/freertos/latest/userguide/getting_started_renesas.html" rel="nofollow"&gt;Getting Started Guide&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;IDE: &lt;a href="https://www.renesas.com/us/en/products/software-tools/tools/ide/e2studio.html" rel="nofollow"&gt;e2 studio&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Cypress CYW54907&lt;/strong&gt; - &lt;a href="https://www.cypress.com/documentation/development-kitsboards/cyw954907aeval1f-evaluation-kit" rel="nofollow"&gt;Cypress CYW954907AEVAL1F Evaluation Kit&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://docs.aws.amazon.com/freertos/latest/userguide/getting_started_cypress_54.html" rel="nofollow"&gt;Getting Started Guide&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;IDE: &lt;a href="https://community.cypress.com/community/wiced-wifi" rel="nofollow"&gt;WICED Studio&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Cypress CYW43907&lt;/strong&gt; - &lt;a href="https://www.cypress.com/documentation/development-kitsboards/cyw943907aeval1f-evaluation-kit" rel="nofollow"&gt;Cypress CYW943907AEVAL1F Evaluation Kit&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://docs.aws.amazon.com/freertos/latest/userguide/getting_started_cypress_43.html" rel="nofollow"&gt;Getting Started Guide&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;IDE: &lt;a href="https://community.cypress.com/community/wiced-wifi" rel="nofollow"&gt;WICED Studio&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Marvell MW320&lt;/strong&gt; - &lt;a href="https://www.marvell.com/microcontrollers/aws-iot-starter-kit/" rel="nofollow"&gt;Marvell MW320 AWS IoT Starter Kit&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://docs.aws.amazon.com/freertos/latest/userguide/getting_started_marvell320.html" rel="nofollow"&gt;Getting Started Guide&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Marvell MW322&lt;/strong&gt; - &lt;a href="https://www.marvell.com/microcontrollers/aws-iot-starter-kit/" rel="nofollow"&gt;Marvell MW322 AWS IoT Starter Kit&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://docs.aws.amazon.com/freertos/latest/userguide/getting_started_marvell322.html" rel="nofollow"&gt;Getting Started Guide&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Nordic nRF52840 DK&lt;/strong&gt; - &lt;a href="https://www.nordicsemi.com/Software-and-Tools/Development-Kits/nRF52840-DK/" rel="nofollow"&gt;nRF52840 DK Development kit&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://docs.aws.amazon.com/freertos/latest/userguide/getting_started_nordic.html" rel="nofollow"&gt;Getting Started Guide&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Nuvoton&lt;/strong&gt; - &lt;a href="https://direct.nuvoton.com/en/numaker-iot-m487" rel="nofollow"&gt;NuMaker-IoT-M487&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://docs.aws.amazon.com/freertos/latest/userguide/getting-started-nuvoton-m487.html" rel="nofollow"&gt;Getting Started Guide&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Windows Simulator&lt;/strong&gt; - To evaluate Amazon FreeRTOS without using MCU-based hardware, you can use the Windows Simulator.
&lt;ul&gt;
&lt;li&gt;Requirements: Microsoft Windows 7 or newer, with at least a dual core and a hard-wired Ethernet connection&lt;/li&gt;
&lt;li&gt;&lt;a href="https://docs.aws.amazon.com/freertos/latest/userguide/getting_started_windows.html" rel="nofollow"&gt;Getting Started Guide&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;IDE: &lt;a href="https://www.visualstudio.com/downloads/" rel="nofollow"&gt;Visual Studio Community Edition&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h2&gt;&lt;a id="user-content-amazon-freertosprojects" class="anchor" aria-hidden="true" href="#amazon-freertosprojects"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;amazon-freeRTOS/projects&lt;/h2&gt;
&lt;p&gt;The &lt;code&gt;./projects&lt;/code&gt; folder contains the IDE test and demo projects for each vendor and their boards. The majority of boards can be built with both IDE and cmake (there are some exceptions!). Please refer to the Getting Started Guides above for board specific instructions.&lt;/p&gt;
&lt;/article&gt;&lt;/div&gt;</description><author>aws</author><guid isPermaLink="false">https://github.com/aws/amazon-freertos</guid><pubDate>Fri, 20 Dec 2019 00:20:00 GMT</pubDate></item><item><title>cloudwu/skynet #21 in C, This week</title><link>https://github.com/cloudwu/skynet</link><description>&lt;p&gt;&lt;i&gt;A lightweight online game framework&lt;/i&gt;&lt;/p&gt;&lt;div id="readme" class="md" data-path="README.md"&gt;&lt;article class="markdown-body entry-content p-5" itemprop="text"&gt;&lt;h2&gt;&lt;a id="" class="anchor" aria-hidden="true" href="#"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;a target="_blank" rel="noopener noreferrer" href="https://github.com/cloudwu/skynet/wiki/image/skynet_metro.jpg"&gt;&lt;img src="https://github.com/cloudwu/skynet/wiki/image/skynet_metro.jpg" alt="skynet logo" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;Skynet is a lightweight online game framework which can be used in many other fields.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-build" class="anchor" aria-hidden="true" href="#build"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Build&lt;/h2&gt;
&lt;p&gt;For Linux, install autoconf first for jemalloc:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;git clone https://github.com/cloudwu/skynet.git
cd skynet
make 'PLATFORM'  # PLATFORM can be linux, macosx, freebsd now
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Or:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;export PLAT=linux
make
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;For FreeBSD , use gmake instead of make.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-test" class="anchor" aria-hidden="true" href="#test"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Test&lt;/h2&gt;
&lt;p&gt;Run these in different consoles:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;./skynet examples/config	# Launch first skynet node  (Gate server) and a skynet-master (see config for standalone option)
./3rd/lua/lua examples/client.lua 	# Launch a client, and try to input hello.
&lt;/code&gt;&lt;/pre&gt;
&lt;h2&gt;&lt;a id="user-content-about-lua-version" class="anchor" aria-hidden="true" href="#about-lua-version"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;About Lua version&lt;/h2&gt;
&lt;p&gt;Skynet now uses a modified version of lua 5.3.5 ( &lt;a href="https://github.com/ejoy/lua/tree/skynet"&gt;https://github.com/ejoy/lua/tree/skynet&lt;/a&gt; ) for multiple lua states.&lt;/p&gt;
&lt;p&gt;Official Lua versions can also be used as long as the Makefile is edited.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-how-to-use-sorry-currently-only-available-in-chinese" class="anchor" aria-hidden="true" href="#how-to-use-sorry-currently-only-available-in-chinese"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;How To Use (Sorry, currently only available in Chinese)&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Read Wiki for documents &lt;a href="https://github.com/cloudwu/skynet/wiki"&gt;https://github.com/cloudwu/skynet/wiki&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;The FAQ in wiki &lt;a href="https://github.com/cloudwu/skynet/wiki/FAQ"&gt;https://github.com/cloudwu/skynet/wiki/FAQ&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/article&gt;&lt;/div&gt;</description><author>cloudwu</author><guid isPermaLink="false">https://github.com/cloudwu/skynet</guid><pubDate>Fri, 20 Dec 2019 00:21:00 GMT</pubDate></item><item><title>radareorg/radare2 #22 in C, This week</title><link>https://github.com/radareorg/radare2</link><description>&lt;p&gt;&lt;i&gt;unix-like reverse engineering framework and commandline tools&lt;/i&gt;&lt;/p&gt;&lt;div id="readme" class="md" data-path="README.md"&gt;&lt;article class="markdown-body entry-content p-5" itemprop="text"&gt;&lt;pre&gt;&lt;code&gt; ____  ___  ___  ___ ____  ___   ____
|  _ \/   \|   \/   \  _ \/ _ \ (__  \
|    (  -  | |  ) -  |   (   _/ /  __/
|__\__|_|__|___/__|__|_\__|___| |____|

             https://www.radare.org

                             --pancake
&lt;/code&gt;&lt;/pre&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Service&lt;/th&gt;
&lt;th&gt;Badge&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;TravisCI&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href="https://travis-ci.com/radareorg/radare2" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/12fadb0ff3e7c8e748a2a1891290dc4e8cfceb75/68747470733a2f2f7472617669732d63692e636f6d2f7261646172656f72672f726164617265322e7376673f6272616e63683d6d6173746572" alt="Build Status" data-canonical-src="https://travis-ci.com/radareorg/radare2.svg?branch=master" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;AppVeyor&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href="https://ci.appveyor.com/project/radareorg/radare2/branch/master" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/4bf52d54fb36a89a6397bcaadb965983fda9872a/68747470733a2f2f63692e6170707665796f722e636f6d2f6170692f70726f6a656374732f7374617475732f3963676b67786b6333323033666d316f2f6272616e63682f6d61737465723f7376673d74727565" alt="Build status" data-canonical-src="https://ci.appveyor.com/api/projects/status/9cgkgxkc3203fm1o/branch/master?svg=true" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;FreeBSD (sr.ht)&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href="https://builds.sr.ht/~xvilka/radare2/freebsd.yml?" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/33ead05158c847e44927a2913f3955b0af36db2b/68747470733a2f2f6275696c64732e73722e68742f7e7876696c6b612f726164617265322f667265656273642e796d6c2e737667" alt="builds.sr.ht status" data-canonical-src="https://builds.sr.ht/~xvilka/radare2/freebsd.yml.svg" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;OpenBSD (sr.ht)&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href="https://builds.sr.ht/~xvilka/radare2/openbsd.yml?" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/97d2ddd6d23af85785a223ee53cec8d7f4ef7137/68747470733a2f2f6275696c64732e73722e68742f7e7876696c6b612f726164617265322f6f70656e6273642e796d6c2e737667" alt="builds.sr.ht status" data-canonical-src="https://builds.sr.ht/~xvilka/radare2/openbsd.yml.svg" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;Coverity&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href="https://scan.coverity.com/projects/416" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/2580a02f062c889dc84f4cdaf5a545f480426729/68747470733a2f2f7363616e2e636f7665726974792e636f6d2f70726f6a656374732f3431362f62616467652e737667" alt="Build Status" data-canonical-src="https://scan.coverity.com/projects/416/badge.svg" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;LGTM&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href="https://lgtm.com/projects/g/radareorg/radare2/alerts/" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/babd5ee2673f5530c15bb38d3b83f8dfd185cfe0/68747470733a2f2f696d672e736869656c64732e696f2f6c67746d2f616c657274732f672f7261646172656f72672f726164617265322e7376673f6c6f676f3d6c67746d266c6f676f57696474683d3138" alt="Total alerts" data-canonical-src="https://img.shields.io/lgtm/alerts/g/radareorg/radare2.svg?logo=lgtm&amp;amp;logoWidth=18" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;Infrastructure&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href="https://bestpractices.coreinfrastructure.org/projects/741" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/7b702f37fb965f702b50d1ef37a088fe80fb1abd/68747470733a2f2f626573747072616374696365732e636f7265696e6672617374727563747572652e6f72672f70726f6a656374732f3734312f6261646765" alt="CII Best Practices" data-canonical-src="https://bestpractices.coreinfrastructure.org/projects/741/badge" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;Codecov&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href="https://codecov.io/gh/radareorg/radare2" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/27b414732dd1c67cc2c42384de991c60c8e8aba6/68747470733a2f2f636f6465636f762e696f2f67682f7261646172656f72672f726164617265322f6272616e63682f6d61737465722f67726170682f62616467652e737667" alt="codecov" data-canonical-src="https://codecov.io/gh/radareorg/radare2/branch/master/graph/badge.svg" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;Fuzzit&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href="https://app.fuzzit.dev/admin/2zv5qI33roZkRm0oO2Mi/target" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/2a0d657c032134df2cb13cdff6ef2c93101d96b9/68747470733a2f2f6170702e66757a7a69742e6465762f62616467653f6f72675f69643d327a763571493333726f5a6b526d306f4f324d69267461726765745f69643d59566b6b5336525056704b685369787946576354266272616e63683d6d6173746572" alt="fuzzit" data-canonical-src="https://app.fuzzit.dev/badge?org_id=2zv5qI33roZkRm0oO2Mi&amp;amp;target_id=YVkkS6RPVpKhSixyFWcT&amp;amp;branch=master" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;a href="https://repology.org/metapackage/radare2" rel="nofollow"&gt;
&lt;img src="https://camo.githubusercontent.com/8fba3669af45ae0c8c91beb9100ca47aac416639/68747470733a2f2f7265706f6c6f67792e6f72672f62616467652f766572746963616c2d616c6c7265706f732f726164617265322e737667" alt="Packaging status" align="right" width="150px" data-canonical-src="https://repology.org/badge/vertical-allrepos/radare2.svg" style="max-width:100%;"&gt;
&lt;/a&gt;
&lt;h1&gt;&lt;a id="user-content-introduction" class="anchor" aria-hidden="true" href="#introduction"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Introduction&lt;/h1&gt;
&lt;p&gt;r2 is a rewrite from scratch of radare in order to provide
a set of libraries and tools to work with binary files.&lt;/p&gt;
&lt;p&gt;Radare project started as a forensics tool, a scriptable
command-line hexadecimal editor able to open disk files,
but later added support for analyzing binaries, disassembling
code, debugging programs, attaching to remote gdb servers...&lt;/p&gt;
&lt;p&gt;radare2 is portable.&lt;/p&gt;
&lt;p&gt;To learn more on radare2 you may want to read the &lt;a href="https://radare.gitbooks.io/radare2book/content/" rel="nofollow"&gt;official radare2 book&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;You can also use &lt;a href="https://github.com/0ki/r2lrn"&gt;r2lrn&lt;/a&gt; or r2golf for a hands-on learning experience.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-operating-systems" class="anchor" aria-hidden="true" href="#operating-systems"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Operating Systems&lt;/h2&gt;
&lt;p&gt;Windows (since XP), GNU/Linux, OS X, [Net|Free|Open]BSD,
Android, iOS, OSX, QNX, Solaris, Haiku, FirefoxOS.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-architectures" class="anchor" aria-hidden="true" href="#architectures"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Architectures&lt;/h2&gt;
&lt;p&gt;i386, x86-64, ARM, MIPS, PowerPC, SPARC, RISC-V, SH, m68k, m680x, AVR,
XAP, System Z, XCore, CR16, HPPA, ARC, Blackfin, Z80, H8/300, V810,
V850, CRIS, XAP, PIC, LM32, 8051, 6502, i4004, i8080, Propeller,
Tricore, CHIP-8, LH5801, T8200, GameBoy, SNES, SPC700, MSP430, Xtensa,
NIOS II, Java, Dalvik, WebAssembly, MSIL, EBC, TMS320 (c54x, c55x,
c55+, c66), Hexagon, Brainfuck, Malbolge, whitespace, DCPU16, LANAI,
MCORE, mcs96, RSP, SuperH-4, VAX.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-file-formats" class="anchor" aria-hidden="true" href="#file-formats"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;File Formats&lt;/h2&gt;
&lt;p&gt;ELF, Mach-O, Fatmach-O, PE, PE+, MZ, COFF, OMF, TE, XBE, BIOS/UEFI,
Dyldcache, DEX, ART, CGC, Java class, Android boot image, Plan9 executable,
ZIMG, MBN/SBL bootloader, ELF coredump, MDMP (Windows minidump),
WASM (WebAssembly binary), Commodore VICE emulator, QNX,
Game Boy (Advance), Nintendo DS ROMs and Nintendo 3DS FIRMs, various filesystems.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-scripting" class="anchor" aria-hidden="true" href="#scripting"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Scripting&lt;/h2&gt;
&lt;p&gt;Native bindings are supported but the recommended way to interact with r2
from other languages is by using &lt;a href="https://github.com/radareorg/radare2-r2pipe"&gt;r2pipe&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Python, Ruby, JavaScript, Lua, Perl, PHP, Go, Rust, Swift, C#, Java,
Shell, OCaml, Haskell, Scheme (Guile), CommonLisp, Clojure, Erlang, D,
Vala/Genie, Prolog, Nim, Newlisp...&lt;/p&gt;
&lt;h1&gt;&lt;a id="user-content-install--update" class="anchor" aria-hidden="true" href="#install--update"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Install / Update&lt;/h1&gt;
&lt;p&gt;The recommended way to install or update radare2 from git for single-user systems:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;$ sys/install.sh
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;If you don't have root, or just want to install it in your home use:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;$ sys/user.sh
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Note that those scripts will install using configure+make using symlinks, so you
don't need to reinstall every time you change something in the builddir.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;If you don't like symlinks use &lt;code&gt;sys/install.sh --install&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;To use capstone5 use the &lt;code&gt;--with-capstone5&lt;/code&gt; flag.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Alternatively you can also build with meson + ninja:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;$ ./sys/meson.py --prefix=/usr --shared --install
&lt;/code&gt;&lt;/pre&gt;
&lt;h2&gt;&lt;a id="user-content-uninstall" class="anchor" aria-hidden="true" href="#uninstall"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Uninstall&lt;/h2&gt;
&lt;p&gt;In case of a polluted filesystem, you can uninstall the current
version or remove all previous installations:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;$ make uninstall
$ make purge
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;To remove all stuff including libraries, use&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;$ make system-purge
&lt;/code&gt;&lt;/pre&gt;
&lt;h2&gt;&lt;a id="user-content-package-manager" class="anchor" aria-hidden="true" href="#package-manager"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Package Manager&lt;/h2&gt;
&lt;p&gt;Radare2 has its own package manager - r2pm. Its packages
repository is on &lt;a href="https://github.com/radareorg/radare2-pm"&gt;GitHub too&lt;/a&gt;.
To start to using it for the first time, you need to initialize packages:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;$ r2pm init
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Refresh the packages database before installing any package:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;$ r2pm update
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;To install a package, use the following command:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;$ r2pm install [package name]
&lt;/code&gt;&lt;/pre&gt;
&lt;h1&gt;&lt;a id="user-content-development" class="anchor" aria-hidden="true" href="#development"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Development&lt;/h1&gt;
&lt;h2&gt;&lt;a id="user-content-coding-style" class="anchor" aria-hidden="true" href="#coding-style"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Coding Style&lt;/h2&gt;
&lt;p&gt;Look at &lt;a href="https://github.com/radareorg/radare2/blob/master/CONTRIBUTING.md"&gt;CONTRIBUTING.md&lt;/a&gt;.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-tests" class="anchor" aria-hidden="true" href="#tests"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Tests&lt;/h2&gt;
&lt;p&gt;Running &lt;code&gt;make tests&lt;/code&gt; will fetch the test binaries
repository and run all the tests in order to verify that no changes break any functionality.&lt;/p&gt;
&lt;p&gt;We run those tests on every commit, and they are also executed with ASAN
and valgrind on different platforms to catch other unwanted 'features'.&lt;/p&gt;
&lt;h1&gt;&lt;a id="user-content-community" class="anchor" aria-hidden="true" href="#community"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Community&lt;/h1&gt;
&lt;p&gt;Website: &lt;a href="https://www.radare.org/" rel="nofollow"&gt;https://www.radare.org/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Telegram: &lt;a href="https://t.me/radare" rel="nofollow"&gt;https://t.me/radare&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Twitter: &lt;a href="https://twitter.com/radareorg" rel="nofollow"&gt;@radareorg&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;IRC: irc.freenode.net #radare&lt;/p&gt;
&lt;p&gt;Matrix: @radare2:matrix.org&lt;/p&gt;
&lt;/article&gt;&lt;/div&gt;</description><author>radareorg</author><guid isPermaLink="false">https://github.com/radareorg/radare2</guid><pubDate>Fri, 20 Dec 2019 00:22:00 GMT</pubDate></item><item><title>processhacker/processhacker #23 in C, This week</title><link>https://github.com/processhacker/processhacker</link><description>&lt;p&gt;&lt;i&gt;A free, powerful, multi-purpose tool that helps you monitor system resources, debug software and detect malware.&lt;/i&gt;&lt;/p&gt;&lt;div id="readme" class="md" data-path="README.md"&gt;&lt;article class="markdown-body entry-content p-5" itemprop="text"&gt;&lt;p&gt;&lt;a href="https://ci.appveyor.com/project/processhacker/processhacker" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/fc6eb10cb9bb28d0f5d6eb44424372a4201f1a8e/68747470733a2f2f696d672e736869656c64732e696f2f6170707665796f722f63692f70726f636573736861636b65722f70726f636573736861636b65722e7376673f7374796c653d666f722d7468652d6261646765" alt="Build status" data-canonical-src="https://img.shields.io/appveyor/ci/processhacker/processhacker.svg?style=for-the-badge" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://github.com/processhacker/processhacker/graphs/contributors"&gt;&lt;img src="https://camo.githubusercontent.com/89d3aca771fef90704d799059981f2b44c6245fe/68747470733a2f2f696d672e736869656c64732e696f2f6769746875622f636f6e7472696275746f72732f70726f636573736861636b65722f70726f636573736861636b65722e7376673f7374796c653d666f722d7468652d626164676526636f6c6f723d626c7565" alt="Build contributors" data-canonical-src="https://img.shields.io/github/contributors/processhacker/processhacker.svg?style=for-the-badge&amp;amp;color=blue" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://www.gnu.org/licenses/gpl-3.0.en.html" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/9c58fa6cdb455908295f111bcac700294e07f292/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f6c6963656e73652d47504c76332d626c75652e7376673f7374796c653d666f722d7468652d6261646765" alt="Licence" data-canonical-src="https://img.shields.io/badge/license-GPLv3-blue.svg?style=for-the-badge" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://github.com/processhacker/processhacker/releases"&gt;&lt;img src="https://camo.githubusercontent.com/5f606117e8ed1aaaee5478d64bf78408748b302c/68747470733a2f2f696d672e736869656c64732e696f2f6769746875622f646f776e6c6f6164732f70726f636573736861636b65722f70726f636573736861636b65722f746f74616c2e7376673f7374796c653d666f722d7468652d626164676526636f6c6f723d726564" alt="Github stats" data-canonical-src="https://img.shields.io/github/downloads/processhacker/processhacker/total.svg?style=for-the-badge&amp;amp;color=red" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://sourceforge.net/projects/processhacker/" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/dc4ac6d1eeac470a9680fef36652914199a9e3a7/68747470733a2f2f696d672e736869656c64732e696f2f736f75726365666f7267652f64742f70726f636573736861636b65722e7376673f7374796c653d666f722d7468652d626164676526636f6c6f723d726564" alt="SourceForge stats" data-canonical-src="https://img.shields.io/sourceforge/dt/processhacker.svg?style=for-the-badge&amp;amp;color=red" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="https://raw.githubusercontent.com/processhacker2/processhacker/master/ProcessHacker/resources/ProcessHacker.png"&gt;&lt;img src="https://raw.githubusercontent.com/processhacker2/processhacker/master/ProcessHacker/resources/ProcessHacker.png" alt="Logo" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-process-hacker" class="anchor" aria-hidden="true" href="#process-hacker"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Process Hacker&lt;/h2&gt;
&lt;p&gt;A free, powerful, multi-purpose tool that helps you monitor system resources, debug software and detect malware.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://processhacker.sourceforge.io/" rel="nofollow"&gt;Official Website&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://wj32.org/processhacker/nightly.php" rel="nofollow"&gt;Nightly Builds&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-system-requirements" class="anchor" aria-hidden="true" href="#system-requirements"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;System requirements&lt;/h2&gt;
&lt;p&gt;Windows 7 or higher, 32-bit or 64-bit.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-features" class="anchor" aria-hidden="true" href="#features"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Features&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;A detailed overview of system activity with highlighting.&lt;/li&gt;
&lt;li&gt;Graphs and statistics allow you quickly to track down resource hogs and runaway processes.&lt;/li&gt;
&lt;li&gt;Can't edit or delete a file? Discover which processes are using that file.&lt;/li&gt;
&lt;li&gt;See what programs have active network connections, and close them if necessary.&lt;/li&gt;
&lt;li&gt;Get real-time information on disk access.&lt;/li&gt;
&lt;li&gt;View detailed stack traces with kernel-mode, WOW64 and .NET support.&lt;/li&gt;
&lt;li&gt;Go beyond services.msc: create, edit and control services.&lt;/li&gt;
&lt;li&gt;Small, portable and no installation required.&lt;/li&gt;
&lt;li&gt;100% &lt;a href="http://www.gnu.org/philosophy/free-sw.en.html" rel="nofollow"&gt;Free Software&lt;/a&gt; (&lt;a href="http://www.gnu.org/licenses/gpl-3.0.en.html" rel="nofollow"&gt;GPL v3&lt;/a&gt;)&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-building-the-project" class="anchor" aria-hidden="true" href="#building-the-project"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Building the project&lt;/h2&gt;
&lt;p&gt;Requires Visual Studio (2017 or later).&lt;/p&gt;
&lt;p&gt;Execute &lt;code&gt;build_release.cmd&lt;/code&gt; located in the &lt;code&gt;build&lt;/code&gt; directory to compile the project or load the &lt;code&gt;ProcessHacker.sln&lt;/code&gt; and &lt;code&gt;Plugins.sln&lt;/code&gt; solutions if you prefer building the project using Visual Studio.&lt;/p&gt;
&lt;p&gt;You can download the free &lt;a href="https://www.visualstudio.com/vs/community/" rel="nofollow"&gt;Visual Studio Community Edition&lt;/a&gt;
to build, run or develop Process Hacker.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-additional-information" class="anchor" aria-hidden="true" href="#additional-information"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Additional information&lt;/h2&gt;
&lt;p&gt;You cannot run the 32-bit version of Process Hacker on a
64-bit system and expect it to work correctly, unlike other programs.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-enhancementsbugs" class="anchor" aria-hidden="true" href="#enhancementsbugs"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Enhancements/Bugs&lt;/h2&gt;
&lt;p&gt;Please use the &lt;a href="https://github.com/processhacker2/processhacker/issues"&gt;GitHub issue tracker&lt;/a&gt;
for reporting problems or suggesting new features.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-settings" class="anchor" aria-hidden="true" href="#settings"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Settings&lt;/h2&gt;
&lt;p&gt;If you are running Process Hacker from a USB drive, you may want to
save Process Hacker's settings there as well. To do this, create a
blank file named "ProcessHacker.exe.settings.xml" in the same
directory as ProcessHacker.exe. You can do this using Windows Explorer:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Make sure "Hide extensions for known file types" is unticked in
Tools &amp;gt; Folder options &amp;gt; View.&lt;/li&gt;
&lt;li&gt;Right-click in the folder and choose New &amp;gt; Text Document.&lt;/li&gt;
&lt;li&gt;Rename the file to ProcessHacker.exe.settings.xml (delete the ".txt"
extension).&lt;/li&gt;
&lt;/ol&gt;
&lt;h2&gt;&lt;a id="user-content-plugins" class="anchor" aria-hidden="true" href="#plugins"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Plugins&lt;/h2&gt;
&lt;p&gt;Plugins can be configured from Hacker &amp;gt; Plugins.&lt;/p&gt;
&lt;p&gt;If you experience any crashes involving plugins, make sure they
are up to date.&lt;/p&gt;
&lt;p&gt;Disk and Network information provided by the ExtendedTools plugin is
only available when running Process Hacker with administrative
rights.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-kprocesshacker" class="anchor" aria-hidden="true" href="#kprocesshacker"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;KProcessHacker&lt;/h2&gt;
&lt;p&gt;Process Hacker uses a kernel-mode driver, KProcessHacker, to
assist with certain functionality. This includes:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Capturing kernel-mode stack traces&lt;/li&gt;
&lt;li&gt;More efficiently enumerating process handles&lt;/li&gt;
&lt;li&gt;Retrieving names for file handles&lt;/li&gt;
&lt;li&gt;Retrieving names for EtwRegistration objects&lt;/li&gt;
&lt;li&gt;Setting handle attributes&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Note that by default, KProcessHacker only allows connections from
processes with administrative privileges (SeDebugPrivilege). To allow Process Hacker
to show details for all processes when it is not running as administrator:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;In Registry Editor, navigate to:
HKEY_LOCAL_MACHINE\SYSTEM\CurrentControlSet\Services\KProcessHacker3&lt;/li&gt;
&lt;li&gt;Under this key, create a key named Parameters if it does not exist.&lt;/li&gt;
&lt;li&gt;Create a DWORD value named SecurityLevel and set it to 2. If you are
not using an official build, you may need to set it to 0 instead.&lt;/li&gt;
&lt;li&gt;Restart the KProcessHacker3 service (sc stop KProcessHacker3,
sc start KProcessHacker3).&lt;/li&gt;
&lt;/ol&gt;
&lt;/article&gt;&lt;/div&gt;</description><author>processhacker</author><guid isPermaLink="false">https://github.com/processhacker/processhacker</guid><pubDate>Fri, 20 Dec 2019 00:23:00 GMT</pubDate></item><item><title>h2o/h2o #24 in C, This week</title><link>https://github.com/h2o/h2o</link><description>&lt;p&gt;&lt;i&gt;H2O - the optimized HTTP/1, HTTP/2, HTTP/3 server&lt;/i&gt;&lt;/p&gt;&lt;div id="readme" class="md" data-path="README.md"&gt;&lt;article class="markdown-body entry-content p-5" itemprop="text"&gt;&lt;h1&gt;&lt;a id="user-content-h2o---an-optimized-http-server-with-support-for-http1x-http2-and-http3-experimental" class="anchor" aria-hidden="true" href="#h2o---an-optimized-http-server-with-support-for-http1x-http2-and-http3-experimental"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;H2O - an optimized HTTP server with support for HTTP/1.x, HTTP/2 and HTTP/3 (experimental)&lt;/h1&gt;
&lt;p&gt;&lt;a href="https://travis-ci.org/h2o/h2o" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/334178ab289e8dee6e97bcd0a72c8dcf3d368ffa/68747470733a2f2f7472617669732d63692e6f72672f68326f2f68326f2e7376673f6272616e63683d6d6173746572" alt="Build Status" data-canonical-src="https://travis-ci.org/h2o/h2o.svg?branch=master" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://scan.coverity.com/projects/h2o-h2o" rel="nofollow"&gt;
&lt;img alt="Coverity Scan Build Status" src="https://camo.githubusercontent.com/e686f6d86cbfdbbe999d2d9237b2a7e0da7fdc46/68747470733a2f2f7363616e2e636f7665726974792e636f6d2f70726f6a656374732f31303635342f62616467652e737667" data-canonical-src="https://scan.coverity.com/projects/10654/badge.svg" style="max-width:100%;"&gt;
&lt;/a&gt;
&lt;a href="https://bugs.chromium.org/p/oss-fuzz/issues/list?sort=-opened&amp;amp;can=1&amp;amp;q=proj:h2o" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/035357902c3628371674f45c494d64a284a33b8a/68747470733a2f2f6f73732d66757a7a2d6275696c642d6c6f67732e73746f726167652e676f6f676c65617069732e636f6d2f6261646765732f68326f2e737667" alt="Fuzzing Status" data-canonical-src="https://oss-fuzz-build-logs.storage.googleapis.com/badges/h2o.svg" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Copyright (c) 2014-2019 &lt;a href="http://dena.com/" rel="nofollow"&gt;DeNA Co., Ltd.&lt;/a&gt;, &lt;a href="https://github.com/kazuho/"&gt;Kazuho Oku&lt;/a&gt;, &lt;a href="https://github.com/cubicdaiya/"&gt;Tatsuhiko Kubo&lt;/a&gt;, &lt;a href="https://github.com/mingodad/"&gt;Domingo Alvarez Duarte&lt;/a&gt;, &lt;a href="https://github.com/nickdesaulniers/"&gt;Nick Desaulniers&lt;/a&gt;, &lt;a href="https://github.com/mback2k"&gt;Marc Hörsken&lt;/a&gt;, &lt;a href="https://github.com/kazeburo/"&gt;Masahiro Nagano&lt;/a&gt;, Jeff Marrison, &lt;a href="https://github.com/lestrrat/"&gt;Daisuke Maki&lt;/a&gt;, &lt;a href="https://github.com/GrayShade/"&gt;Laurentiu Nicola&lt;/a&gt;, &lt;a href="https://github.com/zlm2012/"&gt;Justin Zhu&lt;/a&gt;, &lt;a href="https://github.com/tatsuhiro-t"&gt;Tatsuhiro Tsujikawa&lt;/a&gt;, &lt;a href="https://github.com/matsumotory"&gt;Ryosuke Matsumoto&lt;/a&gt;, &lt;a href="https://github.com/mochipon"&gt;Masaki TAGAWA&lt;/a&gt;, &lt;a href="https://github.com/takahashim"&gt;Masayoshi Takahashi&lt;/a&gt;, &lt;a href="https://github.com/cwyang"&gt;Chul-Woong Yang&lt;/a&gt;, &lt;a href="https://github.com/sorah"&gt;Shota Fukumori&lt;/a&gt;, &lt;a href="https://github.com/cho45"&gt;Satoh Hiroh&lt;/a&gt;, &lt;a href="https://www.fastly.com" rel="nofollow"&gt;Fastly, Inc.&lt;/a&gt;, &lt;a href="https://github.com/devnexen"&gt;David Carlier&lt;/a&gt;, &lt;a href="https://github.com/deweerdt"&gt;Frederik Deweerdt&lt;/a&gt;, &lt;a href="https://github.com/jfoote"&gt;Jonathan Foote&lt;/a&gt;, &lt;a href="https://github.com/yannick"&gt;Yannick Koechlin&lt;/a&gt;, &lt;a href="https://github.com/hbowden"&gt;Harrison Bowden&lt;/a&gt;, &lt;a href="https://github.com/kazan417"&gt;Kazantsev Mikhail&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;H2O is a new generation HTTP server.
Not only is it very fast, it also provides much quicker response to end-users when compared to older generations of HTTP servers.&lt;/p&gt;
&lt;p&gt;Written in C and licensed under &lt;a href="http://opensource.org/licenses/MIT" rel="nofollow"&gt;the MIT License&lt;/a&gt;, it can also be used as a library.&lt;/p&gt;
&lt;p&gt;For more information, please refer to the documentation at &lt;a href="https://h2o.examp1e.net" rel="nofollow"&gt;h2o.examp1e.net&lt;/a&gt;.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-reporting-security-issues" class="anchor" aria-hidden="true" href="#reporting-security-issues"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Reporting Security Issues&lt;/h2&gt;
&lt;p&gt;Please report vulnerabilities to &lt;a href="mailto:h2o-vuln@googlegroups.com"&gt;h2o-vuln@googlegroups.com&lt;/a&gt;.&lt;/p&gt;
&lt;/article&gt;&lt;/div&gt;</description><author>h2o</author><guid isPermaLink="false">https://github.com/h2o/h2o</guid><pubDate>Fri, 20 Dec 2019 00:24:00 GMT</pubDate></item><item><title>meetecho/janus-gateway #25 in C, This week</title><link>https://github.com/meetecho/janus-gateway</link><description>&lt;p&gt;&lt;i&gt;Janus WebRTC Server&lt;/i&gt;&lt;/p&gt;&lt;div id="readme" class="md" data-path="README.md"&gt;&lt;article class="markdown-body entry-content p-5" itemprop="text"&gt;&lt;h1&gt;&lt;a id="user-content-janus-webrtc-server" class="anchor" aria-hidden="true" href="#janus-webrtc-server"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Janus WebRTC Server&lt;/h1&gt;
&lt;p&gt;Janus is an open source, general purpose, WebRTC server designed and developed by &lt;a href="http://www.meetecho.com" rel="nofollow"&gt;Meetecho&lt;/a&gt;. This version of the server is tailored for Linux systems, although it can be compiled for, and installed on, MacOS machines as well. Windows is not supported, but if that's a requirement, Janus is known to work in the "Windows Subsystem for Linux" on Windows 10.&lt;/p&gt;
&lt;p&gt;For some online demos and documentations, make sure you pay the &lt;a href="https://janus.conf.meetecho.com/" rel="nofollow"&gt;project website&lt;/a&gt; a visit!&lt;/p&gt;
&lt;p&gt;To discuss Janus with us and other users, there's a Google Group called &lt;a href="https://groups.google.com/forum/#!forum/meetecho-janus" rel="nofollow"&gt;meetecho-janus&lt;/a&gt; that you can use. If you encounter bugs, though, please submit an issue on &lt;a href="https://github.com/meetecho/janus-gateway/issues"&gt;github&lt;/a&gt; instead.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-dependencies" class="anchor" aria-hidden="true" href="#dependencies"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Dependencies&lt;/h2&gt;
&lt;p&gt;To install it, you'll need to satisfy the following dependencies:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://www.digip.org/jansson/" rel="nofollow"&gt;Jansson&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://hyperrealm.github.io/libconfig/" rel="nofollow"&gt;libconfig&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://nice.freedesktop.org/wiki/" rel="nofollow"&gt;libnice&lt;/a&gt; (at least v0.1.15 suggested, master recommended)&lt;/li&gt;
&lt;li&gt;&lt;a href="http://www.openssl.org/" rel="nofollow"&gt;OpenSSL&lt;/a&gt; (at least v1.0.1e)&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/cisco/libsrtp"&gt;libsrtp&lt;/a&gt; (at least v1.5 suggested)&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/sctplab/usrsctp"&gt;usrsctp&lt;/a&gt; (only needed if you are interested in Data Channels)&lt;/li&gt;
&lt;li&gt;&lt;a href="http://www.gnu.org/software/libmicrohttpd/" rel="nofollow"&gt;libmicrohttpd&lt;/a&gt; (only needed if you are interested in REST support for the Janus API)&lt;/li&gt;
&lt;li&gt;&lt;a href="https://libwebsockets.org/" rel="nofollow"&gt;libwebsockets&lt;/a&gt; (only needed if you are interested in WebSockets support for the Janus API)&lt;/li&gt;
&lt;li&gt;&lt;a href="http://www.cmake.org/" rel="nofollow"&gt;cmake&lt;/a&gt; (only needed if you are interested in WebSockets and/or BoringSSL support, as they make use of it)&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/alanxz/rabbitmq-c"&gt;rabbitmq-c&lt;/a&gt; (only needed if you are interested in RabbitMQ support for the Janus API or events)&lt;/li&gt;
&lt;li&gt;&lt;a href="https://eclipse.org/paho/clients/c" rel="nofollow"&gt;paho.mqtt.c&lt;/a&gt; (only needed if you are interested in MQTT support for the Janus API or events)&lt;/li&gt;
&lt;li&gt;&lt;a href="https://nanomsg.org/" rel="nofollow"&gt;nanomsg&lt;/a&gt; (only needed if you are interested in Nanomsg support for the Janus API)&lt;/li&gt;
&lt;li&gt;&lt;a href="https://curl.haxx.se/libcurl/" rel="nofollow"&gt;libcurl&lt;/a&gt; (only needed if you are interested in the TURN REST API support)&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;A couple of plugins depend on a few more libraries:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://sofia-sip.sourceforge.net/" rel="nofollow"&gt;Sofia-SIP&lt;/a&gt; (only needed for the SIP plugin)&lt;/li&gt;
&lt;li&gt;&lt;a href="http://opus-codec.org/" rel="nofollow"&gt;libopus&lt;/a&gt; (only needed for the bridge plugin)&lt;/li&gt;
&lt;li&gt;&lt;a href="http://xiph.org/ogg/" rel="nofollow"&gt;libogg&lt;/a&gt; (needed for the voicemail plugin and/or post-processor)&lt;/li&gt;
&lt;li&gt;&lt;a href="https://curl.haxx.se/libcurl/" rel="nofollow"&gt;libcurl&lt;/a&gt; (only needed if you are interested in RTSP support in the Streaming plugin or in the sample Event Handler plugin)&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.lua.org/download.html" rel="nofollow"&gt;Lua&lt;/a&gt; (only needed for the Lua plugin)&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Additionally, you'll need the following libraries and tools:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://library.gnome.org/devel/glib/" rel="nofollow"&gt;GLib&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://zlib.net/" rel="nofollow"&gt;zlib&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://www.freedesktop.org/wiki/Software/pkg-config/" rel="nofollow"&gt;pkg-config&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://www.gnu.org/software/gengetopt/" rel="nofollow"&gt;gengetopt&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;All of those libraries are usually available on most of the most common distributions. Installing these libraries on a recent Fedora, for instance, is very simple:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;yum install libmicrohttpd-devel jansson-devel \
   openssl-devel libsrtp-devel sofia-sip-devel glib2-devel \
   opus-devel libogg-devel libcurl-devel pkgconfig gengetopt \
   libconfig-devel libtool autoconf automake
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Notice that you may have to &lt;code&gt;yum install epel-release&lt;/code&gt; as well if you're attempting an installation on a CentOS machine instead.&lt;/p&gt;
&lt;p&gt;On Ubuntu or Debian, it would require something like this:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;aptitude install libmicrohttpd-dev libjansson-dev \
	libssl-dev libsrtp-dev libsofia-sip-ua-dev libglib2.0-dev \
	libopus-dev libogg-dev libcurl4-openssl-dev liblua5.3-dev \
	libconfig-dev pkg-config gengetopt libtool automake
&lt;/code&gt;&lt;/pre&gt;
&lt;ul&gt;
&lt;li&gt;&lt;em&gt;Note:&lt;/em&gt; please notice that libopus may not be available out of the box on Ubuntu or Debian, unless you're using a recent version (e.g., Ubuntu 14.04 LTS). In that case, you'll have to &lt;a href="http://www.opus-codec.org" rel="nofollow"&gt;install it manually&lt;/a&gt;.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;While &lt;code&gt;libnice&lt;/code&gt; is typically available in most distros as a package, the version available out of the box in Ubuntu is known to cause problems. As such, we always recommend manually compiling and installing the master version of libnice. Installation of libnice master is quite straightforward:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;git clone https://gitlab.freedesktop.org/libnice/libnice
cd libnice
./autogen.sh
./configure --prefix=/usr
make &amp;amp;&amp;amp; sudo make install
&lt;/code&gt;&lt;/pre&gt;
&lt;ul&gt;
&lt;li&gt;&lt;em&gt;Note:&lt;/em&gt; Make sure you remove the distro version first, or you'll cause conflicts between the installations. In case you want to keep both for some reason, for custom installations of libnice you can also run &lt;code&gt;pkg-config --cflags --libs nice&lt;/code&gt; to make sure Janus can find the right installation. If that fails, you may need to set the &lt;code&gt;PKG_CONFIG_PATH&lt;/code&gt; environment variable prior to compiling Janus, e.g., &lt;code&gt;export PKG_CONFIG_PATH=/path/to/libnice/lib/pkgconfig&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;In case you're interested in compiling the sample Event Handler plugin, you'll need to install the development version of libcurl as well (usually &lt;code&gt;libcurl-devel&lt;/code&gt; on Fedora/CentOS, &lt;code&gt;libcurl4-openssl-dev&lt;/code&gt; on Ubuntu/Debian).&lt;/p&gt;
&lt;p&gt;If your distro ships a pre-1.5 version of libsrtp, you'll have to uninstall that version and &lt;a href="https://github.com/cisco/libsrtp/releases"&gt;install 1.5.x, 1.6.x or 2.x manually&lt;/a&gt;. In fact, 1.4.x is known to cause several issues with WebRTC. Installation of version 1.5.4 is quite straightforward:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;wget https://github.com/cisco/libsrtp/archive/v1.5.4.tar.gz
tar xfv v1.5.4.tar.gz
cd libsrtp-1.5.4
./configure --prefix=/usr --enable-openssl
make shared_library &amp;amp;&amp;amp; sudo make install
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;The instructions for version 2.x are practically the same. Notice that the following steps are for version 2.2.0, but there may be more recent versions available:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;wget https://github.com/cisco/libsrtp/archive/v2.2.0.tar.gz
tar xfv v2.2.0.tar.gz
cd libsrtp-2.2.0
./configure --prefix=/usr --enable-openssl
make shared_library &amp;amp;&amp;amp; sudo make install
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;The Janus configure script autodetects which one you have installed and links to the correct library automatically, choosing 2.x if both are installed. If you want 1.5 or 1.6 to be picked, pass &lt;code&gt;--disable-libsrtp2&lt;/code&gt; when configuring Janus to force it to use the older version instead.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;em&gt;Note:&lt;/em&gt; when installing libsrtp, no matter which version, you may need to pass &lt;code&gt;--libdir=/usr/lib64&lt;/code&gt; to the configure script if you're installing on a x86_64 distribution.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;If you want to make use of BoringSSL instead of OpenSSL (e.g., because you want to take advantage of &lt;code&gt;--enable-dtls-settimeout&lt;/code&gt;), you'll have to manually install it to a specific location. Use the following steps:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;git clone https://boringssl.googlesource.com/boringssl
cd boringssl
# Don't barf on errors
sed -i s/" -Werror"//g CMakeLists.txt
# Build
mkdir -p build
cd build
cmake -DCMAKE_CXX_FLAGS="-lrt" ..
make
cd ..
# Install
sudo mkdir -p /opt/boringssl
sudo cp -R include /opt/boringssl/
sudo mkdir -p /opt/boringssl/lib
sudo cp build/ssl/libssl.a /opt/boringssl/lib/
sudo cp build/crypto/libcrypto.a /opt/boringssl/lib/
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Once the library is installed, you'll have to pass an additional &lt;code&gt;--enable-boringssl&lt;/code&gt; flag to the configure script, as by default Janus will be built assuming OpenSSL will be used. By default, Janus expects BoringSSL to be installed in &lt;code&gt;/opt/boringssl&lt;/code&gt; -- if it's installed in another location, pass the path to the configure script as such: &lt;code&gt;--enable-boringssl=/path/to/boringssl&lt;/code&gt; If you were using OpenSSL and want to switch to BoringSSL, make sure you also do a &lt;code&gt;make clean&lt;/code&gt; in the Janus folder before compiling with the new BoringSSL support. If you enabled BoringSSL support and also want Janus to detect and react to DTLS timeouts with faster retransmissions, then pass &lt;code&gt;--enable-dtls-settimeout&lt;/code&gt; to the configure script too.&lt;/p&gt;
&lt;p&gt;For what concerns usrsctp, which is needed for Data Channels support, it is usually not available in repositories, so if you're interested in them (support is optional) you'll have to install it manually. It is a pretty easy and standard process:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;git clone https://github.com/sctplab/usrsctp
cd usrsctp
./bootstrap
./configure --prefix=/usr &amp;amp;&amp;amp; make &amp;amp;&amp;amp; sudo make install
&lt;/code&gt;&lt;/pre&gt;
&lt;ul&gt;
&lt;li&gt;&lt;em&gt;Note:&lt;/em&gt; you may need to pass &lt;code&gt;--libdir=/usr/lib64&lt;/code&gt; to the configure script if you're installing on a x86_64 distribution.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;The same applies for libwebsockets, which is needed for the optional WebSockets support. If you're interested in supporting WebSockets to control Janus, as an alternative (or replacement) to the default plain HTTP REST API, you'll have to install it manually:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;git clone https://libwebsockets.org/repo/libwebsockets
cd libwebsockets
# If you want the stable version of libwebsockets, uncomment the next line
# git checkout v2.4-stable
mkdir build
cd build
# See https://github.com/meetecho/janus-gateway/issues/732 re: LWS_MAX_SMP
cmake -DLWS_MAX_SMP=1 -DCMAKE_INSTALL_PREFIX:PATH=/usr -DCMAKE_C_FLAGS="-fpic" ..
make &amp;amp;&amp;amp; sudo make install
&lt;/code&gt;&lt;/pre&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;em&gt;Note:&lt;/em&gt; if libwebsockets.org is unreachable for any reason, replace the first line with this:&lt;/p&gt;
&lt;p&gt;git clone &lt;a href="https://github.com/warmcat/libwebsockets.git"&gt;https://github.com/warmcat/libwebsockets.git&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;The same applies for Eclipse Paho MQTT C client library, which is needed for the optional MQTT support. If you're interested in integrating MQTT channels as an alternative (or replacement) to HTTP and/or WebSockets to control Janus, or as a carrier of Janus Events, you can install the latest version with the following steps:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;git clone https://github.com/eclipse/paho.mqtt.c.git
cd paho.mqtt.c
make &amp;amp;&amp;amp; sudo make install
&lt;/code&gt;&lt;/pre&gt;
&lt;ul&gt;
&lt;li&gt;&lt;em&gt;Note:&lt;/em&gt; you may want to set up a different install path for the library, to achieve that, replace the last command by 'sudo prefix=/usr make install'.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;In case you're interested in Nanomsg support, you'll need to install the related C library. It is usually available as an easily installable package in pretty much all repositories. The following is an example on how to install it on Ubuntu:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;aptitude install libnanomsg-dev
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Finally, the same can be said for rabbitmq-c as well, which is needed for the optional RabbitMQ support. In fact, several different versions of the library can be found, and the versions usually available in most distribution repositories are not up-do-date with respect to the current state of the development. As such, if you're interested in integrating RabbitMQ queues as an alternative (or replacement) to HTTP and/or WebSockets to control Janus, you can install the latest version with the following steps:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;git clone https://github.com/alanxz/rabbitmq-c
cd rabbitmq-c
git submodule init
git submodule update
mkdir build &amp;amp;&amp;amp; cd build
cmake -DCMAKE_INSTALL_PREFIX=/usr ..
make &amp;amp;&amp;amp; sudo make install
&lt;/code&gt;&lt;/pre&gt;
&lt;ul&gt;
&lt;li&gt;&lt;em&gt;Note:&lt;/em&gt; you may need to pass &lt;code&gt;--libdir=/usr/lib64&lt;/code&gt; to the configure script if you're installing on a x86_64 distribution.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;To conclude, should you be interested in building the Janus documentation as well, you'll need some additional tools too:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://www.doxygen.org" rel="nofollow"&gt;Doxygen&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://www.graphviz.org/" rel="nofollow"&gt;Graphviz&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;On Fedora:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;yum install doxygen graphviz
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;On Ubuntu/Debian:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;aptitude install doxygen graphviz
&lt;/code&gt;&lt;/pre&gt;
&lt;h2&gt;&lt;a id="user-content-compile" class="anchor" aria-hidden="true" href="#compile"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Compile&lt;/h2&gt;
&lt;p&gt;Once you have installed all the dependencies, get the code:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;git clone https://github.com/meetecho/janus-gateway.git
cd janus-gateway
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Then just use:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;sh autogen.sh
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;to generate the configure file. After that, configure and compile as usual to start the whole compilation process:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;./configure --prefix=/opt/janus
make
make install
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Since Janus requires configuration files for both the core and its modules in order to work, you'll probably also want to install the default configuration files to use, which you can do this way:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;make configs
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Remember to only do this once, or otherwise a subsequent &lt;code&gt;make configs&lt;/code&gt; will overwrite any configuration file you may have modified in themeanwhile.&lt;/p&gt;
&lt;p&gt;If you've installed the above libraries but are not interested, for instance, in Data Channels, WebSockets, MQTT and/or RabbitMQ, you can disable them when configuring:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;./configure --disable-websockets --disable-data-channels --disable-rabbitmq --disable-mqtt
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;There are configuration flags for pretty much all external modules and many of the features, so you may want to issue a &lt;code&gt;./configure --help&lt;/code&gt; to dig through the available options. A summary of what's going to be built will always appear after you do a configure, allowing you to double check if what you need and don't need is there.&lt;/p&gt;
&lt;p&gt;If Doxygen and graphviz are available, the process can also build the documentation for you. By default the compilation process will not try to build the documentation, so if you instead prefer to build it, use the &lt;code&gt;--enable-docs&lt;/code&gt; configuration option:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;./configure --enable-docs
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;You can also selectively enable/disable other features (e.g., specific plugins you don't care about, or whether or not you want to build the recordings post-processor). Use the --help option when configuring for more info.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-building-on-macos" class="anchor" aria-hidden="true" href="#building-on-macos"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Building on MacOS&lt;/h3&gt;
&lt;p&gt;While most of the above instructions will work when compiling Janus on MacOS as well, there are a few aspects to highlight when doing that.&lt;/p&gt;
&lt;p&gt;First of all, you can use &lt;code&gt;brew&lt;/code&gt; to install most of the dependencies:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;brew install jansson libnice openssl srtp libusrsctp libmicrohttpd \
	libwebsockets cmake rabbitmq-c sofia-sip opus libogg curl glib \
	libconfig pkg-config gengetopt autoconf automake libtool
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;For what concerns libwebsockets, though, make sure that the installed version is higher than &lt;code&gt;2.4.1&lt;/code&gt;, or you might encounter the problems described in &lt;a href="https://groups.google.com/forum/#!topic/meetecho-janus/HsFaEXBz4Cg" rel="nofollow"&gt;this post&lt;/a&gt;. If &lt;code&gt;brew&lt;/code&gt; doesn't provide a more recent version, you'll have to install the library manually.&lt;/p&gt;
&lt;p&gt;Notice that you may need to provide a custom &lt;code&gt;prefix&lt;/code&gt; and &lt;code&gt;PKG_CONFIG_PATH&lt;/code&gt; when configuring Janus as well, e.g.:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;./configure --prefix=/usr/local/janus PKG_CONFIG_PATH=/usr/local/opt/openssl/lib/pkgconfig
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Everything else works exactly the same way as on Linux.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-configure-and-start" class="anchor" aria-hidden="true" href="#configure-and-start"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Configure and start&lt;/h2&gt;
&lt;p&gt;To start the server, you can use the &lt;code&gt;janus&lt;/code&gt; executable. There are several things you can configure, either in a configuration file:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;&amp;lt;installdir&amp;gt;/etc/janus/janus.jcfg
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;or on the command line:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;&amp;lt;installdir&amp;gt;/bin/janus --help

janus 0.8.1

Usage: janus [OPTIONS]...

-h, --help                    Print help and exit
-V, --version                 Print version and exit
-b, --daemon                  Launch Janus in background as a daemon
                              (default=off)
-p, --pid-file=path           Open the specified PID file when starting Janus
                              (default=none)
-N, --disable-stdout          Disable stdout based logging  (default=off)
-L, --log-file=path           Log to the specified file (default=stdout only)
-H  --cwd-path                Working directory for Janus daemon process
                              (default=/)
-i, --interface=ipaddress     Interface to use (will be the public IP)
-P, --plugins-folder=path     Plugins folder (default=./plugins)
-C, --config=filename         Configuration file to use
-F, --configs-folder=path     Configuration files folder (default=./conf)
-c, --cert-pem=filename       DTLS certificate
-k, --cert-key=filename       DTLS certificate key
-K, --cert-pwd=text           DTLS certificate key passphrase (if needed)
-S, --stun-server=filename    STUN server(:port) to use, if needed (e.g.,
							  Janus behind NAT, default=none)
-1, --nat-1-1=ip              Public IP to put in all host candidates,
                              assuming a 1:1 NAT is in place (e.g., Amazon
                              EC2 instances, default=none)
-E, --ice-enforce-list=list   Comma-separated list of the only interfaces to
                              use for ICE gathering; partial strings are
                              supported (e.g., eth0 or eno1,wlan0,
                              default=none)
-X, --ice-ignore-list=list    Comma-separated list of interfaces or IP
                              addresses to ignore for ICE gathering;
                              partial strings are supported (e.g.,
                              vmnet8,192.168.0.1,10.0.0.1 or
                              vmnet,192.168., default=vmnet)
-6, --ipv6-candidates         Whether to enable IPv6 candidates or not
                              (experimental)  (default=off)
-l, --libnice-debug           Whether to enable libnice debugging or not
                              (default=off)
-f, --full-trickle            Do full-trickle instead of half-trickle
                              (default=off)
-I, --ice-lite                Whether to enable the ICE Lite mode or not
                              (default=off)
-T, --ice-tcp                 Whether to enable ICE-TCP or not (warning: only
                              works with ICE Lite)
                              (default=off)
-q, --max-nack-queue=number   Maximum size of the NACK queue (in ms) per user
                              for retransmissions
-t, --no-media-timer=number   Time (in s) that should pass with no media
                              (audio or video) being received before Janus
                              notifies you about this
-W, --slowlink-threshold=number
                              Number of lost packets (per s) that should
                              trigger a 'slowlink' Janus API event to users
-r, --rtp-port-range=min-max  Port range to use for RTP/RTCP (only available
							  if the installed libnice supports it)
-B, --twcc-period=number      How often (in ms) to send TWCC feedback back to
                              senders, if negotiated (default=200ms)
-n, --server-name=name        Public name of this Janus instance
                              (default=MyJanusInstance)
-s, --session-timeout=number  Session timeout value, in seconds (default=60)
-m, --reclaim-session-timeout=number
                              Reclaim session timeout value, in seconds
                              (default=0)
-d, --debug-level=1-7         Debug/logging level (0=disable debugging,
                              7=maximum debug level; default=4)
-D, --debug-timestamps        Enable debug/logging timestamps  (default=off)
-o, --disable-colors          Disable color in the logging  (default=off)
-M, --debug-locks             Enable debugging of locks/mutexes (very
                              verbose!)  (default=off)
-a, --apisecret=randomstring  API secret all requests need to pass in order
                              to be accepted by Janus (useful when wrapping
                              Janus API requests in a server, none by
                              default)
-A, --token-auth              Enable token-based authentication for all
                              requests  (default=off)
-e, --event-handlers          Enable event handlers  (default=off)
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Options passed through the command line have the precedence on those specified in the configuration file. To start the server, simply run:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;&amp;lt;installdir&amp;gt;/bin/janus
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;This will start the server, and have it look at the configuration file.&lt;/p&gt;
&lt;p&gt;Make sure you have a look at all of the configuration files, to tailor Janus to your specific needs: each configuration file is documented, so it shouldn't be hard to make changes according to your requirements. The repo comes with some defaults (assuming you issues &lt;code&gt;make configs&lt;/code&gt; after installing the server) that tend to make sense for generic deployments, and also includes some sample configurations for all the plugins (e.g., web servers to listen on, conference rooms to create, streaming mountpoints to make available at startup, etc.).&lt;/p&gt;
&lt;p&gt;To test whether it's working correctly, you can use the demos provided with this package in the &lt;code&gt;html&lt;/code&gt; folder: these are exactly the same demos available online on the &lt;a href="http://janus.conf.meetecho.com/" rel="nofollow"&gt;project website&lt;/a&gt;. Just copy the file it contains in a webserver, or use a userspace webserver to serve the files in the &lt;code&gt;html&lt;/code&gt; folder (e.g., with php or python), and open the &lt;code&gt;index.html&lt;/code&gt; page in either Chrome or Firefox. A list of demo pages exploiting the different plugins will be available. Remember to edit the transport/port details in the demo JavaScript files if you changed any transport-related configuration from its defaults. Besides, the demos refer to the pre-configured plugin resources, so if you add some new resources (e.g., a new videoconference) you may have to tweak the demo pages to actually use them.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-documentation" class="anchor" aria-hidden="true" href="#documentation"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Documentation&lt;/h2&gt;
&lt;p&gt;Janus is thoroughly documented. You can find the current documentation, automatically generated with Doxygen, on the &lt;a href="http://janus.conf.meetecho.com/docs/" rel="nofollow"&gt;project website&lt;/a&gt;.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-help-us" class="anchor" aria-hidden="true" href="#help-us"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Help us!&lt;/h2&gt;
&lt;p&gt;Any thought, feedback or (hopefully not!) insult is welcome!&lt;/p&gt;
&lt;p&gt;Developed by &lt;a href="https://github.com/meetecho"&gt;@meetecho&lt;/a&gt;&lt;/p&gt;
&lt;/article&gt;&lt;/div&gt;</description><author>meetecho</author><guid isPermaLink="false">https://github.com/meetecho/janus-gateway</guid><pubDate>Fri, 20 Dec 2019 00:25:00 GMT</pubDate></item></channel></rss>