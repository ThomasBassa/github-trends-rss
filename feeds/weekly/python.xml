<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0"><channel><title>GitHub Trending: Python, This week</title><link>https://github.com/trending/python?since=weekly</link><description>The top repositories on GitHub for python, measured weekly</description><pubDate>Mon, 10 Feb 2020 01:18:44 GMT</pubDate><lastBuildDate>Mon, 10 Feb 2020 01:18:44 GMT</lastBuildDate><generator>PyRSS2Gen-1.1.0</generator><docs>http://blogs.law.harvard.edu/tech/rss</docs><ttl>720</ttl><item><title>facebookresearch/pytorch3d #1 in Python, This week</title><link>https://github.com/facebookresearch/pytorch3d</link><description>&lt;p&gt;&lt;i&gt;PyTorch3D is FAIR's library of reusable components for deep learning with 3D data&lt;/i&gt;&lt;/p&gt;&lt;div id="readme" class="md" data-path="README.md"&gt;&lt;article class="markdown-body entry-content p-5" itemprop="text"&gt;&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="https://raw.githubusercontent.com/facebookresearch/pytorch3d/master/.github/pytorch3dlogo.png"&gt;&lt;img src="https://raw.githubusercontent.com/facebookresearch/pytorch3d/master/.github/pytorch3dlogo.png" width="900" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href="https://circleci.com/gh/facebookresearch/pytorch3d" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/13c43da53efe5f2c4656ff495c9b5c4eb9f75ebe/68747470733a2f2f636972636c6563692e636f6d2f67682f66616365626f6f6b72657365617263682f7079746f72636833642e7376673f7374796c653d737667" alt="CircleCI" data-canonical-src="https://circleci.com/gh/facebookresearch/pytorch3d.svg?style=svg" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://anaconda.org/pytorch3d/pytorch3d" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/47eb16cb1c002cb33475be4abb126a6eb9f222c6/68747470733a2f2f616e61636f6e64612e6f72672f7079746f72636833642f7079746f72636833642f6261646765732f76657273696f6e2e737667" alt="Anaconda-Server Badge" data-canonical-src="https://anaconda.org/pytorch3d/pytorch3d/badges/version.svg" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h1&gt;&lt;a id="user-content-introduction" class="anchor" aria-hidden="true" href="#introduction"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Introduction&lt;/h1&gt;
&lt;p&gt;PyTorch3d provides efficient, reusable components for 3D Computer Vision research with &lt;a href="https://pytorch.org" rel="nofollow"&gt;PyTorch&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Key features include:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Data structure for storing and manipulating triangle meshes&lt;/li&gt;
&lt;li&gt;Efficient operations on triangle meshes (projective transformations, graph convolution, sampling, loss functions)&lt;/li&gt;
&lt;li&gt;A differentiable mesh renderer&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;PyTorch3d is designed to integrate smoothly with deep learning methods for predicting and manipulating 3D data.
For this reason, all operators in PyTorch3d:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Are implemented using PyTorch tensors&lt;/li&gt;
&lt;li&gt;Can handle minibatches of hetereogenous data&lt;/li&gt;
&lt;li&gt;Can be differentiated&lt;/li&gt;
&lt;li&gt;Can utilize GPUs for acceleration&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Within FAIR, PyTorch3d has been used to power research projects such as &lt;a href="https://arxiv.org/abs/1906.02739" rel="nofollow"&gt;Mesh R-CNN&lt;/a&gt;.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-installation" class="anchor" aria-hidden="true" href="#installation"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Installation&lt;/h2&gt;
&lt;p&gt;For detailed instructions refer to &lt;a href="INSTALL.md"&gt;INSTALL.md&lt;/a&gt;.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-license" class="anchor" aria-hidden="true" href="#license"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;License&lt;/h2&gt;
&lt;p&gt;PyTorch3d is released under the &lt;a href="LICENSE"&gt;BSD-3-Clause License&lt;/a&gt;.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-tutorials" class="anchor" aria-hidden="true" href="#tutorials"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Tutorials&lt;/h2&gt;
&lt;p&gt;Get started with PyTorch3d by trying one of the tutorial notebooks.&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th align="center"&gt;&lt;a target="_blank" rel="noopener noreferrer" href="https://raw.githubusercontent.com/facebookresearch/pytorch3d/master/.github/dolphin_deform.gif"&gt;&lt;img src="https://raw.githubusercontent.com/facebookresearch/pytorch3d/master/.github/dolphin_deform.gif" width="310" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/th&gt;
&lt;th align="center"&gt;&lt;a target="_blank" rel="noopener noreferrer" href="https://raw.githubusercontent.com/facebookresearch/pytorch3d/master/.github/bundle_adjust.gif"&gt;&lt;img src="https://raw.githubusercontent.com/facebookresearch/pytorch3d/master/.github/bundle_adjust.gif" width="310" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td align="center"&gt;&lt;a href="https://github.com/facebookresearch/pytorch3d/blob/master/docs/tutorials/deform_source_mesh_to_target_mesh.ipynb"&gt;Deform a sphere mesh to dolphin&lt;/a&gt;&lt;/td&gt;
&lt;td align="center"&gt;&lt;a href="https://github.com/facebookresearch/pytorch3d/blob/master/docs/tutorials/bundle_adjustment.ipynb"&gt;Bundle adjustment&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th align="center"&gt;&lt;a target="_blank" rel="noopener noreferrer" href="https://raw.githubusercontent.com/facebookresearch/pytorch3d/master/.github/render_textured_mesh.gif"&gt;&lt;img src="https://raw.githubusercontent.com/facebookresearch/pytorch3d/master/.github/render_textured_mesh.gif" width="310" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/th&gt;
&lt;th align="center"&gt;&lt;a target="_blank" rel="noopener noreferrer" href="https://raw.githubusercontent.com/facebookresearch/pytorch3d/master/.github/camera_position_teapot.gif"&gt;&lt;img src="https://raw.githubusercontent.com/facebookresearch/pytorch3d/master/.github/camera_position_teapot.gif" width="310" height="310" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td align="center"&gt;&lt;a href="https://github.com/facebookresearch/pytorch3d/blob/master/docs/tutorials/render_textured_meshes.ipynb"&gt;Render textured meshes&lt;/a&gt;&lt;/td&gt;
&lt;td align="center"&gt;&lt;a href="https://github.com/facebookresearch/pytorch3d/blob/master/docs/tutorials/camera_position_optimization_with_differentiable_rendering.ipynb"&gt;Camera position optimization&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h2&gt;&lt;a id="user-content-documentation" class="anchor" aria-hidden="true" href="#documentation"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Documentation&lt;/h2&gt;
&lt;p&gt;Learn more about the API by reading the PyTorch3d &lt;a href="https://pytorch3d.readthedocs.org/" rel="nofollow"&gt;documentation&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;We also have deep dive notes on several API components:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/facebookresearch/pytorch3d/tree/master/docs/notes/batching.md"&gt;Heterogeneous Batching&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/facebookresearch/pytorch3d/tree/master/docs/notes/meshes_io.md"&gt;Mesh IO&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/facebookresearch/pytorch3d/tree/master/docs/notes/renderer_getting_started.md"&gt;Differentiable Rendering&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-development" class="anchor" aria-hidden="true" href="#development"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Development&lt;/h2&gt;
&lt;p&gt;We welcome new contributions to Pytorch3d and we will be actively maintaining this library! Please refer to &lt;a href="./.github/CONTRIBUTING.md"&gt;CONTRIBUTING.md&lt;/a&gt; for full instructions on how to run the code, tests and linter, and submit your pull requests.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-contributors" class="anchor" aria-hidden="true" href="#contributors"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Contributors&lt;/h2&gt;
&lt;p&gt;PyTorch3d is written and maintained by the Facebook AI Research Computer Vision Team.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-citation" class="anchor" aria-hidden="true" href="#citation"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Citation&lt;/h2&gt;
&lt;p&gt;If you find PyTorch3d useful in your research, please cite:&lt;/p&gt;
&lt;div class="highlight highlight-text-bibtex"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;@misc&lt;/span&gt;{&lt;span class="pl-en"&gt;ravi2020pytorch3d&lt;/span&gt;,
  &lt;span class="pl-s"&gt;author&lt;/span&gt; =       &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;{&lt;/span&gt;Nikhila Ravi and Jeremy Reizenstein and David Novotny and Taylor Gordon&lt;/span&gt;
&lt;span class="pl-s"&gt;                  and Wan-Yen Lo and Justin Johnson and Georgia Gkioxari&lt;span class="pl-pds"&gt;}&lt;/span&gt;&lt;/span&gt;,
  &lt;span class="pl-s"&gt;title&lt;/span&gt; =        &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;{&lt;/span&gt;PyTorch3D&lt;span class="pl-pds"&gt;}&lt;/span&gt;&lt;/span&gt;,
  &lt;span class="pl-s"&gt;howpublished&lt;/span&gt; = &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;{&lt;/span&gt;\url{https://github.com/facebookresearch/pytorch3d}&lt;span class="pl-pds"&gt;}&lt;/span&gt;&lt;/span&gt;,
  &lt;span class="pl-s"&gt;year&lt;/span&gt; =         &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;{&lt;/span&gt;2020&lt;span class="pl-pds"&gt;}&lt;/span&gt;&lt;/span&gt;
}&lt;/pre&gt;&lt;/div&gt;
&lt;/article&gt;&lt;/div&gt;</description><author>facebookresearch</author><guid isPermaLink="false">https://github.com/facebookresearch/pytorch3d</guid><pubDate>Mon, 10 Feb 2020 00:01:00 GMT</pubDate></item><item><title>BlankerL/DXY-2019-nCoV-Crawler #2 in Python, This week</title><link>https://github.com/BlankerL/DXY-2019-nCoV-Crawler</link><description>&lt;p&gt;&lt;i&gt;2019新型冠状病毒疫情实时爬虫&lt;/i&gt;&lt;/p&gt;&lt;div id="readme" class="md" data-path="README.md"&gt;&lt;article class="markdown-body entry-content p-5" itemprop="text"&gt;&lt;h1&gt;&lt;a id="user-content-2019新型冠状病毒疫情实时爬虫" class="anchor" aria-hidden="true" href="#2019新型冠状病毒疫情实时爬虫"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;2019新型冠状病毒疫情实时爬虫&lt;/h1&gt;
&lt;p&gt;&lt;a href="https://lab.isaaclin.cn/nCoV/" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/42371a096456c9957561b53d845de591ddb79702/68747470733a2f2f696d672e736869656c64732e696f2f776562736974653f75726c3d68747470732533412532462532466c61622e69736161636c696e2e636e" alt="API Status" data-canonical-src="https://img.shields.io/website?url=https%3A%2F%2Flab.isaaclin.cn" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://lab.isaaclin.cn/nCoV/" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/c06524eebeb8686736cd1f49156ec9727821836e/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f64796e616d69632f6a736f6e3f636f6c6f723d6f72616e6765266c6162656c3d41504925323043616c6c2671756572793d2532342e636f756e742675726c3d68747470732533412532462532466c61622e69736161636c696e2e636e2532466e436f562532466170692532467573616765" alt="API Usage" data-canonical-src="https://img.shields.io/badge/dynamic/json?color=orange&amp;amp;label=API%20Call&amp;amp;query=%24.count&amp;amp;url=https%3A%2F%2Flab.isaaclin.cn%2FnCoV%2Fapi%2Fusage" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://github.com/BlankerL/DXY-2019-nCoV-Crawler/blob/master/LICENSE"&gt;&lt;img src="https://camo.githubusercontent.com/64e4fbb9574df49b96060619383614f2f35febbb/68747470733a2f2f696d672e736869656c64732e696f2f6769746875622f6c6963656e73652f426c616e6b65724c2f4458592d323031392d6e436f562d437261776c6572" alt="license" data-canonical-src="https://img.shields.io/github/license/BlankerL/DXY-2019-nCoV-Crawler" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;简体中文 | &lt;a href="README.en.md"&gt;English&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;本项目为2019新型冠状病毒（2019-nCoV）疫情状况的实时爬虫，数据来源为&lt;a href="https://3g.dxy.cn/newh5/view/pneumonia" rel="nofollow"&gt;丁香园&lt;/a&gt;。&lt;/p&gt;
&lt;p&gt;感谢大家对本项目的支持，为了不让爬虫泛滥占用过多流量，导致其他更有需要的用户无法及时获取到丁香园的数据，请大家减少对爬虫的部署。&lt;/p&gt;
&lt;p&gt;我已经开放了一个API接口，其他人如果需要这份数据做其他的可视化，可以直接查看并调用API来获取数据，把丁香园的流量让给更有需要的人。&lt;/p&gt;
&lt;p&gt;API：&lt;a href="https://lab.isaaclin.cn/nCoV/" rel="nofollow"&gt;https://lab.isaaclin.cn/nCoV/&lt;/a&gt;&lt;br&gt;
注：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;&lt;strong&gt;于2020年1月30日17:15开始统计API使用总人次，绝不统计单个IP的使用频率。&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;为保证跨域请求能够正常进行，于2020年1月29日&lt;strong&gt;切换至HTTPS协议&lt;/strong&gt;，若无法正常访问，请确认是否已经切换至HTTPS！&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;strong&gt;本项目遵循MIT开源许可，同时，若引用本API，烦请在您的项目中声明引用。&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;科研人员&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;近期多位高校师生与我联系，希望用这些数据做科研之用。然而，并非所有人都熟悉API的使用和JSON数据的处理，因此我部署了一个&lt;a href="https://github.com/BlankerL/DXY-2019-nCoV-Data"&gt;数据仓库&lt;/a&gt;，直接推送大部分统计/数据分析软件可以直接打开的csv文件，希望能够减轻各位的负担。&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-初衷" class="anchor" aria-hidden="true" href="#初衷"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;初衷&lt;/h2&gt;
&lt;p&gt;衷心感谢各位医疗工作者的付出和努力，苦于没有医学背景，只能通过自己的方式，让大家增强对疫情的关注，让未感染者做好更全面的防护。&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-项目介绍" class="anchor" aria-hidden="true" href="#项目介绍"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;项目介绍&lt;/h2&gt;
&lt;p&gt;本项目每分钟访问并爬取一次数据，储存在MongoDB中，并且保存所有历史数据的更新，希望能够在未来回溯病情时能有所帮助。&lt;/p&gt;
&lt;p&gt;爬虫本身并不复杂，可以&lt;strong&gt;移步上方API，查看本爬虫能够获取到的所有信息条目&lt;/strong&gt;。&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-数据异常" class="anchor" aria-hidden="true" href="#数据异常"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;数据异常&lt;/h2&gt;
&lt;p&gt;目前发现浙江省/湖北省部分时间序列数据存在数据异常，可能的原因是丁香园数据为人工录入，某些数据可能录入错误，比如某一次爬虫获取的浙江省治愈人数为537人，数分钟后被修改回正常人数。&lt;/p&gt;
&lt;p&gt;本项目爬虫仅从丁香园公开的数据中获取并储存数据，并不会对异常值进行判断和处理，因此如果将本数据用作科研目的，请自己对数据进行清洗。同时，我已经在Issue中开放了&lt;a href="https://github.com/BlankerL/DXY-2019-nCoV-Crawler/issues/34"&gt;异常数据反馈通道&lt;/a&gt;，可以直接在此问题中反馈潜在的异常数据，我会定期检查并处理。&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-reference" class="anchor" aria-hidden="true" href="#reference"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Reference&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;如果您仅希望通过本API在网页端实现实时数据可视化，可以参考&lt;a href="https://github.com/shfshanyue/2019-ncov"&gt;shfshanyue/2019-ncov&lt;/a&gt;项目。该项目能够在网页后端每隔30分钟自动运行爬虫，获取最新数据，并渲染在前端直接返回，不会受到API数据返回速度的影响。&lt;/li&gt;
&lt;li&gt;如果您希望使用R语言对数据进行分析，可以参考&lt;a href="https://github.com/pzhaonet/ncovr"&gt;pzhaonet/ncovr&lt;/a&gt;项目，该项目整合通过GitHub数据仓库/API数据提取两种模式。&lt;/li&gt;
&lt;/ol&gt;
&lt;h2&gt;&lt;a id="user-content-demo" class="anchor" aria-hidden="true" href="#demo"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Demo&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;&lt;a href="https://github.com/pzhaonet/ncov"&gt;pzhaonet/ncov&lt;/a&gt;&lt;br&gt;
网站：&lt;a href="https://ncov2020.org" rel="nofollow"&gt;https://ncov2020.org&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/cuihuan/2020_wuhan"&gt;cuihuan/2020_wuhan&lt;/a&gt;&lt;br&gt;
可视化效果：&lt;a href="http://cuihuan.net/wuhan/news.html" rel="nofollow"&gt;http://cuihuan.net/wuhan/news.html&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/hack-fang/nCov"&gt;hack-fang/nCov&lt;/a&gt;&lt;br&gt;
可视化效果：&lt;a href="http://yiqing.ahusmart.com/" rel="nofollow"&gt;http://yiqing.ahusmart.com/&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/Moyck/2019NCOV"&gt;Moyck/2019NCOV&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;h2&gt;&lt;a id="user-content-捐赠" class="anchor" aria-hidden="true" href="#捐赠"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;捐赠&lt;/h2&gt;
&lt;p&gt;本项目不需要任何捐赠。&lt;/p&gt;
&lt;p&gt;全国各地的医疗资源都处于短缺的状态。如果希望捐赠的人，请移步各个红十字会或者官方认可的捐赠平台，他们能够更加妥善地运用这笔资金，帮助更有需要的人。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;祝大家一切都好。&lt;/strong&gt;&lt;/p&gt;
&lt;/article&gt;&lt;/div&gt;</description><author>BlankerL</author><guid isPermaLink="false">https://github.com/BlankerL/DXY-2019-nCoV-Crawler</guid><pubDate>Mon, 10 Feb 2020 00:02:00 GMT</pubDate></item><item><title>pandas-dev/pandas #3 in Python, This week</title><link>https://github.com/pandas-dev/pandas</link><description>&lt;p&gt;&lt;i&gt;Flexible and powerful data analysis / manipulation library for Python, providing labeled data structures similar to R data.frame objects, statistical functions, and much more&lt;/i&gt;&lt;/p&gt;&lt;div id="readme" class="md" data-path="README.md"&gt;&lt;article class="markdown-body entry-content p-5" itemprop="text"&gt;&lt;div align="center"&gt;
  &lt;a target="_blank" rel="noopener noreferrer" href="https://camo.githubusercontent.com/5cb734f6fc37f645dc900e35559c60d91cc6b550/68747470733a2f2f6465762e70616e6461732e696f2f7374617469632f696d672f70616e6461732e737667"&gt;&lt;img src="https://camo.githubusercontent.com/5cb734f6fc37f645dc900e35559c60d91cc6b550/68747470733a2f2f6465762e70616e6461732e696f2f7374617469632f696d672f70616e6461732e737667" data-canonical-src="https://dev.pandas.io/static/img/pandas.svg" style="max-width:100%;"&gt;&lt;/a&gt;&lt;br&gt;
&lt;/div&gt;
&lt;hr&gt;
&lt;h1&gt;&lt;a id="user-content-pandas-powerful-python-data-analysis-toolkit" class="anchor" aria-hidden="true" href="#pandas-powerful-python-data-analysis-toolkit"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;pandas: powerful Python data analysis toolkit&lt;/h1&gt;
&lt;p&gt;&lt;a href="https://pypi.org/project/pandas/" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/0478449c23a65b3a5c72bdcda14a957b473f32d7/68747470733a2f2f696d672e736869656c64732e696f2f707970692f762f70616e6461732e737667" alt="PyPI Latest Release" data-canonical-src="https://img.shields.io/pypi/v/pandas.svg" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://anaconda.org/anaconda/pandas/" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/648d53d019be087dec2c296ede54ce5076386215/68747470733a2f2f616e61636f6e64612e6f72672f636f6e64612d666f7267652f70616e6461732f6261646765732f76657273696f6e2e737667" alt="Conda Latest Release" data-canonical-src="https://anaconda.org/conda-forge/pandas/badges/version.svg" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://pypi.org/project/pandas/" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/cd31982c75831c063fb3b9a3977994cabac40ec1/68747470733a2f2f696d672e736869656c64732e696f2f707970692f7374617475732f70616e6461732e737667" alt="Package Status" data-canonical-src="https://img.shields.io/pypi/status/pandas.svg" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://github.com/pandas-dev/pandas/blob/master/LICENSE"&gt;&lt;img src="https://camo.githubusercontent.com/102808689f0625350eb8a5dcd0bca9b843d42064/68747470733a2f2f696d672e736869656c64732e696f2f707970692f6c2f70616e6461732e737667" alt="License" data-canonical-src="https://img.shields.io/pypi/l/pandas.svg" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://travis-ci.org/pandas-dev/pandas" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/1a5ad213967c3966f2cdf4bb7abdeb257d4589d9/68747470733a2f2f7472617669732d63692e6f72672f70616e6461732d6465762f70616e6461732e7376673f6272616e63683d6d6173746572" alt="Travis Build Status" data-canonical-src="https://travis-ci.org/pandas-dev/pandas.svg?branch=master" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://dev.azure.com/pandas-dev/pandas/_build/latest?definitionId=1&amp;amp;branch=master" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/521b8d04b7e476e5d78e7497527d8b4593649782/68747470733a2f2f6465762e617a7572652e636f6d2f70616e6461732d6465762f70616e6461732f5f617069732f6275696c642f7374617475732f70616e6461732d6465762e70616e6461733f6272616e63683d6d6173746572" alt="Azure Build Status" data-canonical-src="https://dev.azure.com/pandas-dev/pandas/_apis/build/status/pandas-dev.pandas?branch=master" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://codecov.io/gh/pandas-dev/pandas" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/141595bb5eadcc9952ad8593c54b3a4aa62327a7/68747470733a2f2f636f6465636f762e696f2f6769746875622f70616e6461732d6465762f70616e6461732f636f7665726167652e7376673f6272616e63683d6d6173746572" alt="Coverage" data-canonical-src="https://codecov.io/github/pandas-dev/pandas/coverage.svg?branch=master" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://pandas.pydata.org" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/9c9bd93488cea17ae2ddb225cc8244a4175d26f8/68747470733a2f2f616e61636f6e64612e6f72672f636f6e64612d666f7267652f70616e6461732f6261646765732f646f776e6c6f6164732e737667" alt="Downloads" data-canonical-src="https://anaconda.org/conda-forge/pandas/badges/downloads.svg" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://gitter.im/pydata/pandas" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/da2edb525cde1455a622c58c0effc3a90b9a181c/68747470733a2f2f6261646765732e6769747465722e696d2f4a6f696e253230436861742e737667" alt="Gitter" data-canonical-src="https://badges.gitter.im/Join%20Chat.svg" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://numfocus.org" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/a8484140207659af672a0a1784c5b9277647bb79/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f706f776572656425323062792d4e756d464f4355532d6f72616e67652e7376673f7374796c653d666c617426636f6c6f72413d45313532334426636f6c6f72423d303037443841" alt="Powered by NumFOCUS" data-canonical-src="https://img.shields.io/badge/powered%20by-NumFOCUS-orange.svg?style=flat&amp;amp;colorA=E1523D&amp;amp;colorB=007D8A" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-what-is-it" class="anchor" aria-hidden="true" href="#what-is-it"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;What is it?&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;pandas&lt;/strong&gt; is a Python package providing fast, flexible, and expressive data
structures designed to make working with "relational" or "labeled" data both
easy and intuitive. It aims to be the fundamental high-level building block for
doing practical, &lt;strong&gt;real world&lt;/strong&gt; data analysis in Python. Additionally, it has
the broader goal of becoming &lt;strong&gt;the most powerful and flexible open source data
analysis / manipulation tool available in any language&lt;/strong&gt;. It is already well on
its way towards this goal.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-main-features" class="anchor" aria-hidden="true" href="#main-features"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Main Features&lt;/h2&gt;
&lt;p&gt;Here are just a few of the things that pandas does well:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Easy handling of &lt;a href="https://pandas.pydata.org/pandas-docs/stable/missing_data.html#working-with-missing-data" rel="nofollow"&gt;&lt;strong&gt;missing data&lt;/strong&gt;&lt;/a&gt; (represented as
&lt;code&gt;NaN&lt;/code&gt;) in floating point as well as non-floating point data&lt;/li&gt;
&lt;li&gt;Size mutability: columns can be &lt;a href="https://pandas.pydata.org/pandas-docs/stable/dsintro.html#column-selection-addition-deletion" rel="nofollow"&gt;&lt;strong&gt;inserted and
deleted&lt;/strong&gt;&lt;/a&gt; from DataFrame and higher dimensional
objects&lt;/li&gt;
&lt;li&gt;Automatic and explicit &lt;a href="https://pandas.pydata.org/pandas-docs/stable/dsintro.html?highlight=alignment#intro-to-data-structures" rel="nofollow"&gt;&lt;strong&gt;data alignment&lt;/strong&gt;&lt;/a&gt;: objects can
be explicitly aligned to a set of labels, or the user can simply
ignore the labels and let &lt;code&gt;Series&lt;/code&gt;, &lt;code&gt;DataFrame&lt;/code&gt;, etc. automatically
align the data for you in computations&lt;/li&gt;
&lt;li&gt;Powerful, flexible &lt;a href="https://pandas.pydata.org/pandas-docs/stable/groupby.html#group-by-split-apply-combine" rel="nofollow"&gt;&lt;strong&gt;group by&lt;/strong&gt;&lt;/a&gt; functionality to perform
split-apply-combine operations on data sets, for both aggregating
and transforming data&lt;/li&gt;
&lt;li&gt;Make it &lt;a href="https://pandas.pydata.org/pandas-docs/stable/dsintro.html#dataframe" rel="nofollow"&gt;&lt;strong&gt;easy to convert&lt;/strong&gt;&lt;/a&gt; ragged,
differently-indexed data in other Python and NumPy data structures
into DataFrame objects&lt;/li&gt;
&lt;li&gt;Intelligent label-based &lt;a href="https://pandas.pydata.org/pandas-docs/stable/indexing.html#slicing-ranges" rel="nofollow"&gt;&lt;strong&gt;slicing&lt;/strong&gt;&lt;/a&gt;, &lt;a href="https://pandas.pydata.org/pandas-docs/stable/indexing.html#advanced-indexing-with-ix" rel="nofollow"&gt;&lt;strong&gt;fancy
indexing&lt;/strong&gt;&lt;/a&gt;, and &lt;a href="https://pandas.pydata.org/pandas-docs/stable/indexing.html#boolean-indexing" rel="nofollow"&gt;&lt;strong&gt;subsetting&lt;/strong&gt;&lt;/a&gt; of
large data sets&lt;/li&gt;
&lt;li&gt;Intuitive &lt;a href="https://pandas.pydata.org/pandas-docs/stable/merging.html#database-style-dataframe-joining-merging" rel="nofollow"&gt;&lt;strong&gt;merging&lt;/strong&gt;&lt;/a&gt; and &lt;a href="https://pandas.pydata.org/pandas-docs/stable/merging.html#joining-on-index" rel="nofollow"&gt;&lt;strong&gt;joining&lt;/strong&gt;&lt;/a&gt; data
sets&lt;/li&gt;
&lt;li&gt;Flexible &lt;a href="https://pandas.pydata.org/pandas-docs/stable/reshaping.html#reshaping-and-pivot-tables" rel="nofollow"&gt;&lt;strong&gt;reshaping&lt;/strong&gt;&lt;/a&gt; and &lt;a href="https://pandas.pydata.org/pandas-docs/stable/reshaping.html#pivot-tables-and-cross-tabulations" rel="nofollow"&gt;&lt;strong&gt;pivoting&lt;/strong&gt;&lt;/a&gt; of
data sets&lt;/li&gt;
&lt;li&gt;&lt;a href="https://pandas.pydata.org/pandas-docs/stable/indexing.html#hierarchical-indexing-multiindex" rel="nofollow"&gt;&lt;strong&gt;Hierarchical&lt;/strong&gt;&lt;/a&gt; labeling of axes (possible to have multiple
labels per tick)&lt;/li&gt;
&lt;li&gt;Robust IO tools for loading data from &lt;a href="https://pandas.pydata.org/pandas-docs/stable/io.html#csv-text-files" rel="nofollow"&gt;&lt;strong&gt;flat files&lt;/strong&gt;&lt;/a&gt;
(CSV and delimited), &lt;a href="https://pandas.pydata.org/pandas-docs/stable/io.html#excel-files" rel="nofollow"&gt;&lt;strong&gt;Excel files&lt;/strong&gt;&lt;/a&gt;, &lt;a href="https://pandas.pydata.org/pandas-docs/stable/io.html#sql-queries" rel="nofollow"&gt;&lt;strong&gt;databases&lt;/strong&gt;&lt;/a&gt;,
and saving/loading data from the ultrafast &lt;a href="https://pandas.pydata.org/pandas-docs/stable/io.html#hdf5-pytables" rel="nofollow"&gt;&lt;strong&gt;HDF5 format&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://pandas.pydata.org/pandas-docs/stable/timeseries.html#time-series-date-functionality" rel="nofollow"&gt;&lt;strong&gt;Time series&lt;/strong&gt;&lt;/a&gt;-specific functionality: date range
generation and frequency conversion, moving window statistics,
date shifting and lagging.&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-where-to-get-it" class="anchor" aria-hidden="true" href="#where-to-get-it"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Where to get it&lt;/h2&gt;
&lt;p&gt;The source code is currently hosted on GitHub at:
&lt;a href="https://github.com/pandas-dev/pandas"&gt;https://github.com/pandas-dev/pandas&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Binary installers for the latest released version are available at the &lt;a href="https://pypi.org/project/pandas" rel="nofollow"&gt;Python
package index&lt;/a&gt; and on conda.&lt;/p&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; conda&lt;/span&gt;
conda install pandas&lt;/pre&gt;&lt;/div&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; or PyPI&lt;/span&gt;
pip install pandas&lt;/pre&gt;&lt;/div&gt;
&lt;h2&gt;&lt;a id="user-content-dependencies" class="anchor" aria-hidden="true" href="#dependencies"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Dependencies&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.numpy.org" rel="nofollow"&gt;NumPy&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://labix.org/python-dateutil" rel="nofollow"&gt;python-dateutil&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://pythonhosted.org/pytz" rel="nofollow"&gt;pytz&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;See the &lt;a href="https://pandas.pydata.org/pandas-docs/stable/install.html#dependencies" rel="nofollow"&gt;full installation instructions&lt;/a&gt; for minimum supported versions of required, recommended and optional dependencies.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-installation-from-sources" class="anchor" aria-hidden="true" href="#installation-from-sources"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Installation from sources&lt;/h2&gt;
&lt;p&gt;To install pandas from source you need Cython in addition to the normal
dependencies above. Cython can be installed from pypi:&lt;/p&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt;pip install cython&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;In the &lt;code&gt;pandas&lt;/code&gt; directory (same one where you found this file after
cloning the git repo), execute:&lt;/p&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt;python setup.py install&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;or for installing in &lt;a href="https://pip.pypa.io/en/latest/reference/pip_install.html#editable-installs" rel="nofollow"&gt;development mode&lt;/a&gt;:&lt;/p&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt;python -m pip install -e &lt;span class="pl-c1"&gt;.&lt;/span&gt; --no-build-isolation --no-use-pep517&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;If you have &lt;code&gt;make&lt;/code&gt;, you can also use &lt;code&gt;make develop&lt;/code&gt; to run the same command.&lt;/p&gt;
&lt;p&gt;or alternatively&lt;/p&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt;python setup.py develop&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;See the full instructions for &lt;a href="https://pandas.pydata.org/pandas-docs/stable/install.html#installing-from-source" rel="nofollow"&gt;installing from source&lt;/a&gt;.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-license" class="anchor" aria-hidden="true" href="#license"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;License&lt;/h2&gt;
&lt;p&gt;&lt;a href="LICENSE"&gt;BSD 3&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-documentation" class="anchor" aria-hidden="true" href="#documentation"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Documentation&lt;/h2&gt;
&lt;p&gt;The official documentation is hosted on PyData.org: &lt;a href="https://pandas.pydata.org/pandas-docs/stable" rel="nofollow"&gt;https://pandas.pydata.org/pandas-docs/stable&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-background" class="anchor" aria-hidden="true" href="#background"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Background&lt;/h2&gt;
&lt;p&gt;Work on &lt;code&gt;pandas&lt;/code&gt; started at AQR (a quantitative hedge fund) in 2008 and
has been under active development since then.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-getting-help" class="anchor" aria-hidden="true" href="#getting-help"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Getting Help&lt;/h2&gt;
&lt;p&gt;For usage questions, the best place to go to is &lt;a href="https://stackoverflow.com/questions/tagged/pandas" rel="nofollow"&gt;StackOverflow&lt;/a&gt;.
Further, general questions and discussions can also take place on the &lt;a href="https://groups.google.com/forum/?fromgroups#!forum/pydata" rel="nofollow"&gt;pydata mailing list&lt;/a&gt;.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-discussion-and-development" class="anchor" aria-hidden="true" href="#discussion-and-development"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Discussion and Development&lt;/h2&gt;
&lt;p&gt;Most development discussion is taking place on github in this repo. Further, the &lt;a href="https://mail.python.org/mailman/listinfo/pandas-dev" rel="nofollow"&gt;pandas-dev mailing list&lt;/a&gt; can also be used for specialized discussions or design issues, and a &lt;a href="https://gitter.im/pydata/pandas" rel="nofollow"&gt;Gitter channel&lt;/a&gt; is available for quick development related questions.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-contributing-to-pandas-" class="anchor" aria-hidden="true" href="#contributing-to-pandas-"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Contributing to pandas &lt;a href="https://www.codetriage.com/pandas-dev/pandas" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/6332f3d9633f4d7fac6d388358c971829b9c8aff/68747470733a2f2f7777772e636f64657472696167652e636f6d2f70616e6461732d6465762f70616e6461732f6261646765732f75736572732e737667" alt="Open Source Helpers" data-canonical-src="https://www.codetriage.com/pandas-dev/pandas/badges/users.svg" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;All contributions, bug reports, bug fixes, documentation improvements, enhancements and ideas are welcome.&lt;/p&gt;
&lt;p&gt;A detailed overview on how to contribute can be found in the &lt;strong&gt;&lt;a href="https://dev.pandas.io/docs/contributing.html" rel="nofollow"&gt;contributing guide&lt;/a&gt;&lt;/strong&gt;. There is also an &lt;a href=".github/CONTRIBUTING.md"&gt;overview&lt;/a&gt; on GitHub.&lt;/p&gt;
&lt;p&gt;If you are simply looking to start working with the pandas codebase, navigate to the &lt;a href="https://github.com/pandas-dev/pandas/issues"&gt;GitHub "issues" tab&lt;/a&gt; and start looking through interesting issues. There are a number of issues listed under &lt;a href="https://github.com/pandas-dev/pandas/issues?labels=Docs&amp;amp;sort=updated&amp;amp;state=open"&gt;Docs&lt;/a&gt; and &lt;a href="https://github.com/pandas-dev/pandas/issues?labels=good+first+issue&amp;amp;sort=updated&amp;amp;state=open"&gt;good first issue&lt;/a&gt; where you could start out.&lt;/p&gt;
&lt;p&gt;You can also triage issues which may include reproducing bug reports, or asking for vital information such as version numbers or reproduction instructions. If you would like to start triaging issues, one easy way to get started is to &lt;a href="https://www.codetriage.com/pandas-dev/pandas" rel="nofollow"&gt;subscribe to pandas on CodeTriage&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Or maybe through using pandas you have an idea of your own or are looking for something in the documentation and thinking ‘this can be improved’...you can do something about it!&lt;/p&gt;
&lt;p&gt;Feel free to ask questions on the &lt;a href="https://groups.google.com/forum/?fromgroups#!forum/pydata" rel="nofollow"&gt;mailing list&lt;/a&gt; or on &lt;a href="https://gitter.im/pydata/pandas" rel="nofollow"&gt;Gitter&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;As contributors and maintainers to this project, you are expected to abide by pandas' code of conduct. More information can be found at: &lt;a href="https://github.com/pandas-dev/pandas/blob/master/.github/CODE_OF_CONDUCT.md"&gt;Contributor Code of Conduct&lt;/a&gt;&lt;/p&gt;
&lt;/article&gt;&lt;/div&gt;</description><author>pandas-dev</author><guid isPermaLink="false">https://github.com/pandas-dev/pandas</guid><pubDate>Mon, 10 Feb 2020 00:03:00 GMT</pubDate></item><item><title>NVlabs/stylegan2 #4 in Python, This week</title><link>https://github.com/NVlabs/stylegan2</link><description>&lt;p&gt;&lt;i&gt;StyleGAN2 - Official TensorFlow Implementation&lt;/i&gt;&lt;/p&gt;&lt;div id="readme" class="md" data-path="README.md"&gt;&lt;article class="markdown-body entry-content p-5" itemprop="text"&gt;&lt;h2&gt;&lt;a id="user-content-stylegan2--official-tensorflow-implementation" class="anchor" aria-hidden="true" href="#stylegan2--official-tensorflow-implementation"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;StyleGAN2 — Official TensorFlow Implementation&lt;/h2&gt;
&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="./docs/stylegan2-teaser-1024x256.png"&gt;&lt;img src="./docs/stylegan2-teaser-1024x256.png" alt="Teaser image" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Analyzing and Improving the Image Quality of StyleGAN&lt;/strong&gt;&lt;br&gt;
Tero Karras, Samuli Laine, Miika Aittala, Janne Hellsten, Jaakko Lehtinen, Timo Aila&lt;br&gt;&lt;/p&gt;
&lt;p&gt;Paper: &lt;a href="http://arxiv.org/abs/1912.04958" rel="nofollow"&gt;http://arxiv.org/abs/1912.04958&lt;/a&gt;&lt;br&gt;
Video: &lt;a href="https://youtu.be/c-NJtV9Jvp0" rel="nofollow"&gt;https://youtu.be/c-NJtV9Jvp0&lt;/a&gt;&lt;br&gt;&lt;/p&gt;
&lt;p&gt;Abstract: &lt;em&gt;The style-based GAN architecture (StyleGAN) yields state-of-the-art results in data-driven unconditional generative image modeling. We expose and analyze several of its characteristic artifacts, and propose changes in both model architecture and training methods to address them. In particular, we redesign generator normalization, revisit progressive growing, and regularize the generator to encourage good conditioning in the mapping from latent vectors to images. In addition to improving image quality, this path length regularizer yields the additional benefit that the generator becomes significantly easier to invert. This makes it possible to reliably detect if an image is generated by a particular network. We furthermore visualize how well the generator utilizes its output resolution, and identify a capacity problem, motivating us to train larger models for additional quality improvements. Overall, our improved model redefines the state of the art in unconditional image modeling, both in terms of existing distribution quality metrics as well as perceived image quality.&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;For business inquiries, please contact &lt;a href="mailto:researchinquiries@nvidia.com"&gt;researchinquiries@nvidia.com&lt;/a&gt;&lt;br&gt;
For press and other inquiries, please contact Hector Marinez at &lt;a href="mailto:hmarinez@nvidia.com"&gt;hmarinez@nvidia.com&lt;/a&gt;&lt;br&gt;&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th align="left"&gt;Additional material&lt;/th&gt;
&lt;th align="left"&gt; &lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td align="left"&gt;&lt;a href="https://drive.google.com/open?id=1QHc-yF5C3DChRwSdZKcx1w6K8JvSxQi7" rel="nofollow"&gt;StyleGAN2&lt;/a&gt;&lt;/td&gt;
&lt;td align="left"&gt;Main Google Drive folder&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="left"&gt;├  &lt;a href="https://drive.google.com/open?id=1fnF-QsiQeKaxF-HbvFiGtzHF_Bf3CzJu" rel="nofollow"&gt;stylegan2-paper.pdf&lt;/a&gt;&lt;/td&gt;
&lt;td align="left"&gt;High-quality version of the paper&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="left"&gt;├  &lt;a href="https://drive.google.com/open?id=1f_gbKW6FUUHKkUxciJ_lQx29mCq_fSBy" rel="nofollow"&gt;stylegan2-video.mp4&lt;/a&gt;&lt;/td&gt;
&lt;td align="left"&gt;High-quality version of the video&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="left"&gt;├  &lt;a href="https://drive.google.com/open?id=1Sak157_DLX84ytqHHqZaH_59HoEWzfB7" rel="nofollow"&gt;images&lt;/a&gt;&lt;/td&gt;
&lt;td align="left"&gt;Example images produced using our method&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="left"&gt;│  ├   &lt;a href="https://drive.google.com/open?id=1ydWb8xCHzDKMTW9kQ7sL-B1R0zATHVHp" rel="nofollow"&gt;curated-images&lt;/a&gt;&lt;/td&gt;
&lt;td align="left"&gt;Hand-picked images showcasing our results&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="left"&gt;│  └   &lt;a href="https://drive.google.com/open?id=1BA2OZ1GshdfFZGYZPob5QWOGBuJCdu5q" rel="nofollow"&gt;100k-generated-images&lt;/a&gt;&lt;/td&gt;
&lt;td align="left"&gt;Random images with and without truncation&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="left"&gt;├  &lt;a href="https://drive.google.com/open?id=1yXDV96SFXoUiZKU7AyE6DyKgDpIk4wUZ" rel="nofollow"&gt;videos&lt;/a&gt;&lt;/td&gt;
&lt;td align="left"&gt;Individual clips of the video as high-quality MP4&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="left"&gt;└  &lt;a href="https://drive.google.com/open?id=1yanUI9m4b4PWzR0eurKNq6JR1Bbfbh6L" rel="nofollow"&gt;networks&lt;/a&gt;&lt;/td&gt;
&lt;td align="left"&gt;Pre-trained networks&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="left"&gt;   ├   &lt;a href="http://d36zk2xti64re0.cloudfront.net/stylegan2/networks/stylegan2-ffhq-config-f.pkl" rel="nofollow"&gt;stylegan2-ffhq-config-f.pkl&lt;/a&gt;&lt;/td&gt;
&lt;td align="left"&gt;StyleGAN2 for &lt;span&gt;FFHQ&lt;/span&gt; dataset at 1024×1024&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="left"&gt;   ├   &lt;a href="http://d36zk2xti64re0.cloudfront.net/stylegan2/networks/stylegan2-car-config-f.pkl" rel="nofollow"&gt;stylegan2-car-config-f.pkl&lt;/a&gt;&lt;/td&gt;
&lt;td align="left"&gt;StyleGAN2 for &lt;span&gt;LSUN Car&lt;/span&gt; dataset at 512×384&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="left"&gt;   ├   &lt;a href="http://d36zk2xti64re0.cloudfront.net/stylegan2/networks/stylegan2-cat-config-f.pkl" rel="nofollow"&gt;stylegan2-cat-config-f.pkl&lt;/a&gt;&lt;/td&gt;
&lt;td align="left"&gt;StyleGAN2 for &lt;span&gt;LSUN Cat&lt;/span&gt; dataset at 256×256&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="left"&gt;   ├   &lt;a href="http://d36zk2xti64re0.cloudfront.net/stylegan2/networks/stylegan2-church-config-f.pkl" rel="nofollow"&gt;stylegan2-church-config-f.pkl&lt;/a&gt;&lt;/td&gt;
&lt;td align="left"&gt;StyleGAN2 for &lt;span&gt;LSUN Church&lt;/span&gt; dataset at 256×256&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="left"&gt;   ├   &lt;a href="http://d36zk2xti64re0.cloudfront.net/stylegan2/networks/stylegan2-horse-config-f.pkl" rel="nofollow"&gt;stylegan2-horse-config-f.pkl&lt;/a&gt;&lt;/td&gt;
&lt;td align="left"&gt;StyleGAN2 for &lt;span&gt;LSUN Horse&lt;/span&gt; dataset at 256×256&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="left"&gt;   └ ⋯&lt;/td&gt;
&lt;td align="left"&gt;Other training configurations used in the paper&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h2&gt;&lt;a id="user-content-requirements" class="anchor" aria-hidden="true" href="#requirements"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Requirements&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Both Linux and Windows are supported. Linux is recommended for performance and compatibility reasons.&lt;/li&gt;
&lt;li&gt;64-bit Python 3.6 installation. We recommend Anaconda3 with numpy 1.14.3 or newer.&lt;/li&gt;
&lt;li&gt;TensorFlow 1.14 or 1.15 with GPU support. The code does not support TensorFlow 2.0.&lt;/li&gt;
&lt;li&gt;On Windows, you need to use TensorFlow 1.14 — TensorFlow 1.15 will not work.&lt;/li&gt;
&lt;li&gt;One or more high-end NVIDIA GPUs, NVIDIA drivers, CUDA 10.0 toolkit and cuDNN 7.5. To reproduce the results reported in the paper, you need an NVIDIA GPU with at least 16 GB of DRAM.&lt;/li&gt;
&lt;li&gt;Docker users: use the &lt;a href="./Dockerfile"&gt;provided Dockerfile&lt;/a&gt; to build an image with the required library dependencies.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;StyleGAN2 relies on custom TensorFlow ops that are compiled on the fly using &lt;a href="https://docs.nvidia.com/cuda/cuda-compiler-driver-nvcc/index.html" rel="nofollow"&gt;NVCC&lt;/a&gt;. To test that your NVCC installation is working correctly, run:&lt;/p&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt;nvcc test_nvcc.cu -o test_nvcc -run
&lt;span class="pl-k"&gt;|&lt;/span&gt; CPU says hello.
&lt;span class="pl-k"&gt;|&lt;/span&gt; GPU says hello.&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;On Windows, the compilation requires Microsoft Visual Studio to be in &lt;code&gt;PATH&lt;/code&gt;. We recommend installing &lt;a href="https://visualstudio.microsoft.com/vs/" rel="nofollow"&gt;Visual Studio Community Edition&lt;/a&gt; and adding into &lt;code&gt;PATH&lt;/code&gt; using &lt;code&gt;"C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Auxiliary\Build\vcvars64.bat"&lt;/code&gt;.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-using-pre-trained-networks" class="anchor" aria-hidden="true" href="#using-pre-trained-networks"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Using pre-trained networks&lt;/h2&gt;
&lt;p&gt;Pre-trained networks are stored as &lt;code&gt;*.pkl&lt;/code&gt; files on the &lt;a href="https://drive.google.com/open?id=1QHc-yF5C3DChRwSdZKcx1w6K8JvSxQi7" rel="nofollow"&gt;StyleGAN2 Google Drive folder&lt;/a&gt;. Below, you can either reference them directly using the syntax &lt;code&gt;gdrive:networks/&amp;lt;filename&amp;gt;.pkl&lt;/code&gt;, or download them manually and reference by filename.&lt;/p&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; Generate uncurated ffhq images (matches paper Figure 12)&lt;/span&gt;
python run_generator.py generate-images --network=gdrive:networks/stylegan2-ffhq-config-f.pkl \
  --seeds=6600-6625 --truncation-psi=0.5

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; Generate curated ffhq images (matches paper Figure 11)&lt;/span&gt;
python run_generator.py generate-images --network=gdrive:networks/stylegan2-ffhq-config-f.pkl \
  --seeds=66,230,389,1518 --truncation-psi=1.0

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; Generate uncurated car images&lt;/span&gt;
python run_generator.py generate-images --network=gdrive:networks/stylegan2-car-config-f.pkl \
  --seeds=6000-6025 --truncation-psi=0.5

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; Example of style mixing (matches the corresponding video clip)&lt;/span&gt;
python run_generator.py style-mixing-example --network=gdrive:networks/stylegan2-ffhq-config-f.pkl \
  --row-seeds=85,100,75,458,1500 --col-seeds=55,821,1789,293 --truncation-psi=1.0&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;The results are placed in &lt;code&gt;results/&amp;lt;RUNNING_ID&amp;gt;/*.png&lt;/code&gt;. You can change the location with &lt;code&gt;--result-dir&lt;/code&gt;. For example, &lt;code&gt;--result-dir=~/my-stylegan2-results&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;You can import the networks in your own Python code using &lt;code&gt;pickle.load()&lt;/code&gt;. For this to work, you need to include the &lt;code&gt;dnnlib&lt;/code&gt; source directory in &lt;code&gt;PYTHONPATH&lt;/code&gt; and create a default TensorFlow session by calling &lt;code&gt;dnnlib.tflib.init_tf()&lt;/code&gt;. See &lt;a href="./run_generator.py"&gt;run_generator.py&lt;/a&gt; and &lt;a href="./pretrained_networks.py"&gt;pretrained_networks.py&lt;/a&gt; for examples.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-preparing-datasets" class="anchor" aria-hidden="true" href="#preparing-datasets"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Preparing datasets&lt;/h2&gt;
&lt;p&gt;Datasets are stored as multi-resolution TFRecords, similar to the &lt;a href="https://github.com/NVlabs/stylegan"&gt;original StyleGAN&lt;/a&gt;. Each dataset consists of multiple &lt;code&gt;*.tfrecords&lt;/code&gt; files stored under a common directory, e.g., &lt;code&gt;~/datasets/ffhq/ffhq-r*.tfrecords&lt;/code&gt;. In the following sections, the datasets are referenced using a combination of &lt;code&gt;--dataset&lt;/code&gt; and &lt;code&gt;--data-dir&lt;/code&gt; arguments, e.g., &lt;code&gt;--dataset=ffhq --data-dir=~/datasets&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;FFHQ&lt;/strong&gt;. To download the &lt;a href="https://github.com/NVlabs/ffhq-dataset"&gt;Flickr-Faces-HQ&lt;/a&gt; dataset as multi-resolution TFRecords, run:&lt;/p&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt;&lt;span class="pl-c1"&gt;pushd&lt;/span&gt; &lt;span class="pl-k"&gt;~&lt;/span&gt;
git clone https://github.com/NVlabs/ffhq-dataset.git
&lt;span class="pl-c1"&gt;cd&lt;/span&gt; ffhq-dataset
python download_ffhq.py --tfrecords
&lt;span class="pl-c1"&gt;popd&lt;/span&gt;
python dataset_tool.py display &lt;span class="pl-k"&gt;~&lt;/span&gt;/ffhq-dataset/tfrecords/ffhq&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;strong&gt;LSUN&lt;/strong&gt;. Download the desired LSUN categories in LMDB format from the &lt;a href="https://www.yf.io/p/lsun" rel="nofollow"&gt;LSUN project page&lt;/a&gt;. To convert the data to multi-resolution TFRecords, run:&lt;/p&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt;python dataset_tool.py create_lsun_wide &lt;span class="pl-k"&gt;~&lt;/span&gt;/datasets/car &lt;span class="pl-k"&gt;~&lt;/span&gt;/lsun/car_lmdb --width=512 --height=384
python dataset_tool.py create_lsun &lt;span class="pl-k"&gt;~&lt;/span&gt;/datasets/cat &lt;span class="pl-k"&gt;~&lt;/span&gt;/lsun/cat_lmdb --resolution=256
python dataset_tool.py create_lsun &lt;span class="pl-k"&gt;~&lt;/span&gt;/datasets/church &lt;span class="pl-k"&gt;~&lt;/span&gt;/lsun/church_outdoor_train_lmdb --resolution=256
python dataset_tool.py create_lsun &lt;span class="pl-k"&gt;~&lt;/span&gt;/datasets/horse &lt;span class="pl-k"&gt;~&lt;/span&gt;/lsun/horse_lmdb --resolution=256&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;strong&gt;Custom&lt;/strong&gt;. Create custom datasets by placing all training images under a single directory. The images must be square-shaped and they must all have the same power-of-two dimensions. To convert the images to multi-resolution TFRecords, run:&lt;/p&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt;python dataset_tool.py create_from_images &lt;span class="pl-k"&gt;~&lt;/span&gt;/datasets/my-custom-dataset &lt;span class="pl-k"&gt;~&lt;/span&gt;/my-custom-images
python dataset_tool.py display &lt;span class="pl-k"&gt;~&lt;/span&gt;/datasets/my-custom-dataset&lt;/pre&gt;&lt;/div&gt;
&lt;h2&gt;&lt;a id="user-content-projecting-images-to-latent-space" class="anchor" aria-hidden="true" href="#projecting-images-to-latent-space"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Projecting images to latent space&lt;/h2&gt;
&lt;p&gt;To find the matching latent vectors for a set of images, run:&lt;/p&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; Project generated images&lt;/span&gt;
python run_projector.py project-generated-images --network=gdrive:networks/stylegan2-car-config-f.pkl \
  --seeds=0,1,5

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; Project real images&lt;/span&gt;
python run_projector.py project-real-images --network=gdrive:networks/stylegan2-car-config-f.pkl \
  --dataset=car --data-dir=&lt;span class="pl-k"&gt;~&lt;/span&gt;/datasets&lt;/pre&gt;&lt;/div&gt;
&lt;h2&gt;&lt;a id="user-content-training-networks" class="anchor" aria-hidden="true" href="#training-networks"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Training networks&lt;/h2&gt;
&lt;p&gt;To reproduce the training runs for config F in Tables 1 and 3, run:&lt;/p&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt;python run_training.py --num-gpus=8 --data-dir=&lt;span class="pl-k"&gt;~&lt;/span&gt;/datasets --config=config-f \
  --dataset=ffhq --mirror-augment=true
python run_training.py --num-gpus=8 --data-dir=&lt;span class="pl-k"&gt;~&lt;/span&gt;/datasets --config=config-f \
  --dataset=car --total-kimg=57000
python run_training.py --num-gpus=8 --data-dir=&lt;span class="pl-k"&gt;~&lt;/span&gt;/datasets --config=config-f \
  --dataset=cat --total-kimg=88000
python run_training.py --num-gpus=8 --data-dir=&lt;span class="pl-k"&gt;~&lt;/span&gt;/datasets --config=config-f \
  --dataset=church --total-kimg 88000 --gamma=100
python run_training.py --num-gpus=8 --data-dir=&lt;span class="pl-k"&gt;~&lt;/span&gt;/datasets --config=config-f \
  --dataset=horse --total-kimg 100000 --gamma=100&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;For other configurations, see &lt;code&gt;python run_training.py --help&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;We have verified that the results match the paper when training with 1, 2, 4, or 8 GPUs. Note that training FFHQ at 1024×1024 resolution requires GPU(s) with at least 16 GB of memory. The following table lists typical training times using NVIDIA DGX-1 with 8 Tesla V100 GPUs:&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th align="left"&gt;Configuration&lt;/th&gt;
&lt;th align="center"&gt;Resolution&lt;/th&gt;
&lt;th align="center"&gt;Total kimg&lt;/th&gt;
&lt;th align="center"&gt;1 GPU&lt;/th&gt;
&lt;th align="center"&gt;2 GPUs&lt;/th&gt;
&lt;th align="center"&gt;4 GPUs&lt;/th&gt;
&lt;th align="center"&gt;8 GPUs&lt;/th&gt;
&lt;th align="center"&gt;GPU mem&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td align="left"&gt;&lt;code&gt;config-f&lt;/code&gt;&lt;/td&gt;
&lt;td align="center"&gt;1024×1024&lt;/td&gt;
&lt;td align="center"&gt;25000&lt;/td&gt;
&lt;td align="center"&gt;69d 23h&lt;/td&gt;
&lt;td align="center"&gt;36d 4h&lt;/td&gt;
&lt;td align="center"&gt;18d 14h&lt;/td&gt;
&lt;td align="center"&gt;9d 18h&lt;/td&gt;
&lt;td align="center"&gt;13.3 GB&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="left"&gt;&lt;code&gt;config-f&lt;/code&gt;&lt;/td&gt;
&lt;td align="center"&gt;1024×1024&lt;/td&gt;
&lt;td align="center"&gt;10000&lt;/td&gt;
&lt;td align="center"&gt;27d 23h&lt;/td&gt;
&lt;td align="center"&gt;14d 11h&lt;/td&gt;
&lt;td align="center"&gt;7d 10h&lt;/td&gt;
&lt;td align="center"&gt;3d 22h&lt;/td&gt;
&lt;td align="center"&gt;13.3 GB&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="left"&gt;&lt;code&gt;config-e&lt;/code&gt;&lt;/td&gt;
&lt;td align="center"&gt;1024×1024&lt;/td&gt;
&lt;td align="center"&gt;25000&lt;/td&gt;
&lt;td align="center"&gt;35d 11h&lt;/td&gt;
&lt;td align="center"&gt;18d 15h&lt;/td&gt;
&lt;td align="center"&gt;9d 15h&lt;/td&gt;
&lt;td align="center"&gt;5d 6h&lt;/td&gt;
&lt;td align="center"&gt;8.6 GB&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="left"&gt;&lt;code&gt;config-e&lt;/code&gt;&lt;/td&gt;
&lt;td align="center"&gt;1024×1024&lt;/td&gt;
&lt;td align="center"&gt;10000&lt;/td&gt;
&lt;td align="center"&gt;14d 4h&lt;/td&gt;
&lt;td align="center"&gt;7d 11h&lt;/td&gt;
&lt;td align="center"&gt;3d 20h&lt;/td&gt;
&lt;td align="center"&gt;2d 3h&lt;/td&gt;
&lt;td align="center"&gt;8.6 GB&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="left"&gt;&lt;code&gt;config-f&lt;/code&gt;&lt;/td&gt;
&lt;td align="center"&gt;256×256&lt;/td&gt;
&lt;td align="center"&gt;25000&lt;/td&gt;
&lt;td align="center"&gt;32d 13h&lt;/td&gt;
&lt;td align="center"&gt;16d 23h&lt;/td&gt;
&lt;td align="center"&gt;8d 21h&lt;/td&gt;
&lt;td align="center"&gt;4d 18h&lt;/td&gt;
&lt;td align="center"&gt;6.4 GB&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="left"&gt;&lt;code&gt;config-f&lt;/code&gt;&lt;/td&gt;
&lt;td align="center"&gt;256×256&lt;/td&gt;
&lt;td align="center"&gt;10000&lt;/td&gt;
&lt;td align="center"&gt;13d 0h&lt;/td&gt;
&lt;td align="center"&gt;6d 19h&lt;/td&gt;
&lt;td align="center"&gt;3d 13h&lt;/td&gt;
&lt;td align="center"&gt;1d 22h&lt;/td&gt;
&lt;td align="center"&gt;6.4 GB&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;Training curves for FFHQ config F (StyleGAN2) compared to original StyleGAN using 8 GPUs:&lt;/p&gt;
&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="./docs/stylegan2-training-curves.png"&gt;&lt;img src="./docs/stylegan2-training-curves.png" alt="Training curves" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;After training, the resulting networks can be used the same way as the official pre-trained networks:&lt;/p&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; Generate 1000 random images without truncation&lt;/span&gt;
python run_generator.py generate-images --seeds=0-999 --truncation-psi=1.0 \
  --network=results/00006-stylegan2-ffhq-8gpu-config-f/networks-final.pkl&lt;/pre&gt;&lt;/div&gt;
&lt;h2&gt;&lt;a id="user-content-evaluation-metrics" class="anchor" aria-hidden="true" href="#evaluation-metrics"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Evaluation metrics&lt;/h2&gt;
&lt;p&gt;To reproduce the numbers for config F in Tables 1 and 3, run:&lt;/p&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt;python run_metrics.py --data-dir=&lt;span class="pl-k"&gt;~&lt;/span&gt;/datasets --network=gdrive:networks/stylegan2-ffhq-config-f.pkl \
  --metrics=fid50k,ppl_wend --dataset=ffhq --mirror-augment=true
python run_metrics.py --data-dir=&lt;span class="pl-k"&gt;~&lt;/span&gt;/datasets --network=gdrive:networks/stylegan2-car-config-f.pkl \
  --metrics=fid50k,ppl2_wend --dataset=car
python run_metrics.py --data-dir=&lt;span class="pl-k"&gt;~&lt;/span&gt;/datasets --network=gdrive:networks/stylegan2-cat-config-f.pkl \
  --metrics=fid50k,ppl2_wend --dataset=cat
python run_metrics.py --data-dir=&lt;span class="pl-k"&gt;~&lt;/span&gt;/datasets --network=gdrive:networks/stylegan2-church-config-f.pkl \
  --metrics=fid50k,ppl2_wend --dataset=church
python run_metrics.py --data-dir=&lt;span class="pl-k"&gt;~&lt;/span&gt;/datasets --network=gdrive:networks/stylegan2-horse-config-f.pkl \
  --metrics=fid50k,ppl2_wend --dataset=horse&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;For other configurations, see the &lt;a href="https://drive.google.com/open?id=1QHc-yF5C3DChRwSdZKcx1w6K8JvSxQi7" rel="nofollow"&gt;StyleGAN2 Google Drive folder&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Note that the metrics are evaluated using a different random seed each time, so the results will vary between runs. In the paper, we reported the average result of running each metric 10 times. The following table lists the available metrics along with their expected runtimes and random variation:&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th align="left"&gt;Metric&lt;/th&gt;
&lt;th align="center"&gt;FFHQ config F&lt;/th&gt;
&lt;th align="center"&gt;1 GPU&lt;/th&gt;
&lt;th align="center"&gt;2 GPUs&lt;/th&gt;
&lt;th align="center"&gt;4 GPUs&lt;/th&gt;
&lt;th align="left"&gt;Description&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td align="left"&gt;&lt;code&gt;fid50k&lt;/code&gt;&lt;/td&gt;
&lt;td align="center"&gt;2.84 ± 0.03&lt;/td&gt;
&lt;td align="center"&gt;22 min&lt;/td&gt;
&lt;td align="center"&gt;14 min&lt;/td&gt;
&lt;td align="center"&gt;10 min&lt;/td&gt;
&lt;td align="left"&gt;&lt;a href="https://arxiv.org/abs/1706.08500" rel="nofollow"&gt;Fréchet Inception Distance&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="left"&gt;&lt;code&gt;is50k&lt;/code&gt;&lt;/td&gt;
&lt;td align="center"&gt;5.13 ± 0.02&lt;/td&gt;
&lt;td align="center"&gt;23 min&lt;/td&gt;
&lt;td align="center"&gt;14 min&lt;/td&gt;
&lt;td align="center"&gt;8 min&lt;/td&gt;
&lt;td align="left"&gt;&lt;a href="https://arxiv.org/abs/1606.03498" rel="nofollow"&gt;Inception Score&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="left"&gt;&lt;code&gt;ppl_zfull&lt;/code&gt;&lt;/td&gt;
&lt;td align="center"&gt;348.0 ± 3.8&lt;/td&gt;
&lt;td align="center"&gt;41 min&lt;/td&gt;
&lt;td align="center"&gt;22 min&lt;/td&gt;
&lt;td align="center"&gt;14 min&lt;/td&gt;
&lt;td align="left"&gt;&lt;a href="https://arxiv.org/abs/1812.04948" rel="nofollow"&gt;Perceptual Path Length&lt;/a&gt; in Z, full paths&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="left"&gt;&lt;code&gt;ppl_wfull&lt;/code&gt;&lt;/td&gt;
&lt;td align="center"&gt;126.9 ± 0.2&lt;/td&gt;
&lt;td align="center"&gt;42 min&lt;/td&gt;
&lt;td align="center"&gt;22 min&lt;/td&gt;
&lt;td align="center"&gt;13 min&lt;/td&gt;
&lt;td align="left"&gt;&lt;a href="https://arxiv.org/abs/1812.04948" rel="nofollow"&gt;Perceptual Path Length&lt;/a&gt; in W, full paths&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="left"&gt;&lt;code&gt;ppl_zend&lt;/code&gt;&lt;/td&gt;
&lt;td align="center"&gt;348.6 ± 3.0&lt;/td&gt;
&lt;td align="center"&gt;41 min&lt;/td&gt;
&lt;td align="center"&gt;22 min&lt;/td&gt;
&lt;td align="center"&gt;14 min&lt;/td&gt;
&lt;td align="left"&gt;&lt;a href="https://arxiv.org/abs/1812.04948" rel="nofollow"&gt;Perceptual Path Length&lt;/a&gt; in Z, path endpoints&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="left"&gt;&lt;code&gt;ppl_wend&lt;/code&gt;&lt;/td&gt;
&lt;td align="center"&gt;129.4 ± 0.8&lt;/td&gt;
&lt;td align="center"&gt;40 min&lt;/td&gt;
&lt;td align="center"&gt;23 min&lt;/td&gt;
&lt;td align="center"&gt;13 min&lt;/td&gt;
&lt;td align="left"&gt;&lt;a href="https://arxiv.org/abs/1812.04948" rel="nofollow"&gt;Perceptual Path Length&lt;/a&gt; in W, path endpoints&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="left"&gt;&lt;code&gt;ppl2_wend&lt;/code&gt;&lt;/td&gt;
&lt;td align="center"&gt;145.0 ± 0.5&lt;/td&gt;
&lt;td align="center"&gt;41 min&lt;/td&gt;
&lt;td align="center"&gt;23 min&lt;/td&gt;
&lt;td align="center"&gt;14 min&lt;/td&gt;
&lt;td align="left"&gt;&lt;a href="https://arxiv.org/abs/1812.04948" rel="nofollow"&gt;Perceptual Path Length&lt;/a&gt; without center crop&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="left"&gt;&lt;code&gt;ls&lt;/code&gt;&lt;/td&gt;
&lt;td align="center"&gt;154.2 / 4.27&lt;/td&gt;
&lt;td align="center"&gt;10 hrs&lt;/td&gt;
&lt;td align="center"&gt;6 hrs&lt;/td&gt;
&lt;td align="center"&gt;4 hrs&lt;/td&gt;
&lt;td align="left"&gt;&lt;a href="https://arxiv.org/abs/1812.04948" rel="nofollow"&gt;Linear Separability&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="left"&gt;&lt;code&gt;pr50k3&lt;/code&gt;&lt;/td&gt;
&lt;td align="center"&gt;0.689 / 0.492&lt;/td&gt;
&lt;td align="center"&gt;26 min&lt;/td&gt;
&lt;td align="center"&gt;17 min&lt;/td&gt;
&lt;td align="center"&gt;12 min&lt;/td&gt;
&lt;td align="left"&gt;&lt;a href="https://arxiv.org/abs/1904.06991" rel="nofollow"&gt;Precision and Recall&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;Note that some of the metrics cache dataset-specific data on the disk, and they will take somewhat longer when run for the first time.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-license" class="anchor" aria-hidden="true" href="#license"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;License&lt;/h2&gt;
&lt;p&gt;Copyright © 2019, NVIDIA Corporation. All rights reserved.&lt;/p&gt;
&lt;p&gt;This work is made available under the Nvidia Source Code License-NC. To view a copy of this license, visit &lt;a href="https://nvlabs.github.io/stylegan2/license.html" rel="nofollow"&gt;https://nvlabs.github.io/stylegan2/license.html&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-citation" class="anchor" aria-hidden="true" href="#citation"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Citation&lt;/h2&gt;
&lt;pre&gt;&lt;code&gt;@article{Karras2019stylegan2,
  title   = {Analyzing and Improving the Image Quality of {StyleGAN}},
  author  = {Tero Karras and Samuli Laine and Miika Aittala and Janne Hellsten and Jaakko Lehtinen and Timo Aila},
  journal = {CoRR},
  volume  = {abs/1912.04958},
  year    = {2019},
}
&lt;/code&gt;&lt;/pre&gt;
&lt;h2&gt;&lt;a id="user-content-acknowledgements" class="anchor" aria-hidden="true" href="#acknowledgements"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Acknowledgements&lt;/h2&gt;
&lt;p&gt;We thank Ming-Yu Liu for an early review, Timo Viitanen for his help with code release, and Tero Kuosmanen for compute infrastructure.&lt;/p&gt;
&lt;/article&gt;&lt;/div&gt;</description><author>NVlabs</author><guid isPermaLink="false">https://github.com/NVlabs/stylegan2</guid><pubDate>Mon, 10 Feb 2020 00:04:00 GMT</pubDate></item><item><title>jonnyhyman/Chaos #5 in Python, This week</title><link>https://github.com/jonnyhyman/Chaos</link><description>&lt;p&gt;&lt;i&gt;Visualizations of the connections between chaos theory and fractals through the logistic map; made for Veritasium YouTube video&lt;/i&gt;&lt;/p&gt;&lt;div id="readme" class="md" data-path="README.md"&gt;&lt;article class="markdown-body entry-content p-5" itemprop="text"&gt;&lt;h1&gt;&lt;a id="user-content-chaos" class="anchor" aria-hidden="true" href="#chaos"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Chaos&lt;/h1&gt;
&lt;h4&gt;&lt;a id="user-content-visualizations-connecting-chaos-theory-fractals-and--the-logistic-map" class="anchor" aria-hidden="true" href="#visualizations-connecting-chaos-theory-fractals-and--the-logistic-map"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Visualizations connecting chaos theory, fractals, and  the logistic map!&lt;/h4&gt;
&lt;h6&gt;&lt;a id="user-content-written-by-jonny-hyman-2020" class="anchor" aria-hidden="true" href="#written-by-jonny-hyman-2020"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Written by &lt;a href="https://www.jonnyhyman.com" rel="nofollow"&gt;Jonny Hyman&lt;/a&gt;, 2020&lt;/h6&gt;
&lt;p&gt;This code was developed for &lt;a href="https://www.youtube.com/watch?v=ovJcsL7vyrk" rel="nofollow"&gt;this YouTube video from Veritasium&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;This is not a library, but rather a collection of standalone scripts! As such, there is a bit of code duplication between scripts.&lt;/p&gt;
&lt;h1&gt;&lt;a id="user-content-quick-start-guide" class="anchor" aria-hidden="true" href="#quick-start-guide"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Quick start guide&lt;/h1&gt;
&lt;h4&gt;&lt;a id="user-content-install-these-requirements" class="anchor" aria-hidden="true" href="#install-these-requirements"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Install these requirements&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.anaconda.com/distribution/" rel="nofollow"&gt;Python 3.6+&lt;/a&gt; (tested on Python 3.6 and Python 3.7, macOS Catalina and Windows 10)&lt;/li&gt;
&lt;li&gt;&lt;a href="https://numpy.org" rel="nofollow"&gt;Numpy&lt;/a&gt; package : &lt;code&gt;pip install numpy&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://numba.pydata.org" rel="nofollow"&gt;Numba&lt;/a&gt; package : &lt;code&gt;pip install numba&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h4&gt;&lt;a id="user-content-run-guide-for-total-beginners" class="anchor" aria-hidden="true" href="#run-guide-for-total-beginners"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Run guide for total beginners&lt;/h4&gt;
&lt;ol start="0"&gt;
&lt;li&gt;Open "Terminal" on macOS &amp;amp; Linux, "Powershell" or "Command Prompt" on Windows&lt;/li&gt;
&lt;li&gt;Download this repository and unzip it or run &lt;code&gt;git clone https://github.com/jonnyhyman/Chaos.git&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Change directory into the folder where you extracted files &lt;code&gt;cd ~/route/to/your/folder&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Run the program you're interested in, like &lt;code&gt;python logistic_interactive.py&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;To make changes to the code, install a text editor like &lt;a href="https://atom.io" rel="nofollow"&gt;Atom&lt;/a&gt; and then open the file you want to edit. If this is your first python project, GO FOT IT, but also it might not be the easiest to get your head wrapped around (I use a lot of nuanced python functionality).&lt;/li&gt;
&lt;/ol&gt;
&lt;h4&gt;&lt;a id="user-content-if-you-run-into-problems" class="anchor" aria-hidden="true" href="#if-you-run-into-problems"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;If you run into problems&lt;/h4&gt;
&lt;ol start="0"&gt;
&lt;li&gt;Google the problem you're running into&lt;/li&gt;
&lt;li&gt;If it seems to be a problem with &lt;strong&gt;this&lt;/strong&gt; code, post in "Issues"&lt;/li&gt;
&lt;/ol&gt;
&lt;hr&gt;
&lt;h2&gt;&lt;a id="user-content-logistic-map---interactive" class="anchor" aria-hidden="true" href="#logistic-map---interactive"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Logistic Map - Interactive&lt;/h2&gt;
&lt;p&gt;&lt;code&gt;python logistic_interactive.py&lt;/code&gt;
&lt;a target="_blank" rel="noopener noreferrer" href="https://github.com/jonnyhyman/Chaos/blob/master/images/logistic-interactive.png?raw=true"&gt;&lt;img src="https://github.com/jonnyhyman/Chaos/raw/master/images/logistic-interactive.png?raw=true" alt="Interactive" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h4&gt;&lt;a id="user-content-additional-requirements" class="anchor" aria-hidden="true" href="#additional-requirements"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Additional Requirements&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;PyQt5 : &lt;code&gt;pip install pyqt5&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;PyQtGraph : &lt;code&gt;pip install pyqtgraph&lt;/code&gt; (Python 3.6, 3.7) or &lt;code&gt;pip install pyqtgraph==0.11.0rc0&lt;/code&gt; (Python 3.8)&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;This visualization creates a cobweb plot, time series graph, and bifurcation plot for visualizing the logistic map. The font pictured is "Avenir Next" which is licensed as part of macOS. Other OSes will see their default font.&lt;/p&gt;
&lt;h4&gt;&lt;a id="user-content-shortcuts" class="anchor" aria-hidden="true" href="#shortcuts"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Shortcuts:&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;Spacebar: play/pause&lt;/li&gt;
&lt;li&gt;Backspace: reset view &amp;amp; animation&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
&lt;h2&gt;&lt;a id="user-content-3d-mandelbrot-set" class="anchor" aria-hidden="true" href="#3d-mandelbrot-set"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;3D Mandelbrot Set&lt;/h2&gt;
&lt;p&gt;&lt;code&gt;python logistic_mandelbrot.py&lt;/code&gt;
&lt;a target="_blank" rel="noopener noreferrer" href="https://github.com/jonnyhyman/Chaos/blob/master/images/logistic-mandelbrot.gif?raw=true"&gt;&lt;img src="https://github.com/jonnyhyman/Chaos/raw/master/images/logistic-mandelbrot.gif?raw=true" alt="Mandelbrot Set within Logistic Map GIF" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Here we see the Mandelbrot set on the x-y plane, and iterations of the Mandelbrot set in the z axis. This reveals the bifurcation plot beneath the Mandelbrot set!&lt;/p&gt;
&lt;p&gt;Final visualization is accomplished by a volume rendering of 1000x1000x1000 voxels, oversampled by 16 to reduce aliasing.&lt;/p&gt;
&lt;h4&gt;&lt;a id="user-content-additional-requirements-1" class="anchor" aria-hidden="true" href="#additional-requirements-1"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Additional Requirements&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://vispy.org" rel="nofollow"&gt;Vispy&lt;/a&gt; : &lt;code&gt;pip install vispy&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://matplotlib.org" rel="nofollow"&gt;Matplotlib&lt;/a&gt; : &lt;code&gt;pip install matplotlib&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://pypi.org/project/PyOpenGL/" rel="nofollow"&gt;PyOpenGL&lt;/a&gt; : &lt;code&gt;pip install pyopengl&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.ffmpeg.org" rel="nofollow"&gt;ffmpeg&lt;/a&gt; if you want to auto-stitch rendered frames to .movs
&lt;ul&gt;
&lt;li&gt;macOS: &lt;a href="https://brew.sh" rel="nofollow"&gt;Install homebrew&lt;/a&gt; then &lt;code&gt;brew install ffmpeg&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Windows: &lt;a href="https://chocolatey.org" rel="nofollow"&gt;Install chocolatey&lt;/a&gt; then &lt;code&gt;choco install ffmpeg&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
&lt;h2&gt;&lt;a id="user-content-logistic-map-zoom" class="anchor" aria-hidden="true" href="#logistic-map-zoom"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Logistic Map Zoom&lt;/h2&gt;
&lt;p&gt;&lt;code&gt;python logistic_zoom.py&lt;/code&gt;
&lt;a target="_blank" rel="noopener noreferrer" href="https://github.com/jonnyhyman/Chaos/blob/master/images/logistic-zoom.gif?raw=true"&gt;&lt;img src="https://github.com/jonnyhyman/Chaos/raw/master/images/logistic-zoom.gif?raw=true" alt="Logistic Map Zoom GIF" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://vispy.org" rel="nofollow"&gt;Vispy&lt;/a&gt; : &lt;code&gt;pip install vispy&lt;/code&gt;
&lt;ul&gt;
&lt;li&gt;Note: The final version of the visualization used a custom version of Vispy, modified to improve the appearance of axes. I have not released this and don't plan to, but if you really need it please post in Issues a feature request.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/article&gt;&lt;/div&gt;</description><author>jonnyhyman</author><guid isPermaLink="false">https://github.com/jonnyhyman/Chaos</guid><pubDate>Mon, 10 Feb 2020 00:05:00 GMT</pubDate></item><item><title>smicallef/spiderfoot #6 in Python, This week</title><link>https://github.com/smicallef/spiderfoot</link><description>&lt;p&gt;&lt;i&gt;SpiderFoot, the most complete OSINT collection and reconnaissance tool.&lt;/i&gt;&lt;/p&gt;&lt;div id="readme" class="md" data-path="README.md"&gt;&lt;article class="markdown-body entry-content p-5" itemprop="text"&gt;&lt;h1 align="center"&gt;&lt;a id="user-content---" class="anchor" aria-hidden="true" href="#--"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;
  &lt;a href="https://www.spiderfoot.net" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/962ecfa39841af8d4b3131405527261dd111210f/68747470733a2f2f7777772e737069646572666f6f742e6e65742f77702d636f6e74656e742f7468656d65732f737069646572666f6f742f696d672f737069646572666f6f742d776964652e706e67" data-canonical-src="https://www.spiderfoot.net/wp-content/themes/spiderfoot/img/spiderfoot-wide.png" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;/h1&gt;
&lt;h3&gt;&lt;a id="user-content-about" class="anchor" aria-hidden="true" href="#about"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;ABOUT&lt;/h3&gt;
&lt;p&gt;SpiderFoot is an open source intelligence (OSINT) automation tool. It integrates with just about every data source available and utilises a range of methods for data analysis, making that data easy to navigate.&lt;/p&gt;
&lt;p&gt;SpiderFoot has an embedded web-server for providing a clean and intuitive web-based interface but can also be used completely via the command-line.  It's written in &lt;strong&gt;Python 3&lt;/strong&gt; and &lt;strong&gt;GPL-licensed&lt;/strong&gt;.&lt;/p&gt;
&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="https://camo.githubusercontent.com/c7af43a3891bcfcd9104ff5bd8722241d544d040/68747470733a2f2f7777772e737069646572666f6f742e6e65742f77702d636f6e74656e742f7468656d65732f737069646572666f6f742f696d672f737069646572666f6f742d62726f7773652e706e67"&gt;&lt;img src="https://camo.githubusercontent.com/c7af43a3891bcfcd9104ff5bd8722241d544d040/68747470733a2f2f7777772e737069646572666f6f742e6e65742f77702d636f6e74656e742f7468656d65732f737069646572666f6f742f696d672f737069646572666f6f742d62726f7773652e706e67" data-canonical-src="https://www.spiderfoot.net/wp-content/themes/spiderfoot/img/spiderfoot-browse.png" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-features" class="anchor" aria-hidden="true" href="#features"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;FEATURES&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;Web based UI or CLI&lt;/li&gt;
&lt;li&gt;Over 170 modules (see below)&lt;/li&gt;
&lt;li&gt;Python 3&lt;/li&gt;
&lt;li&gt;CSV/JSON/GEXF export&lt;/li&gt;
&lt;li&gt;API key export/import&lt;/li&gt;
&lt;li&gt;SQLite back-end for custom querying&lt;/li&gt;
&lt;li&gt;Highly configurable&lt;/li&gt;
&lt;li&gt;Fully documented&lt;/li&gt;
&lt;li&gt;Visualisations&lt;/li&gt;
&lt;li&gt;TOR integration for dark web searching&lt;/li&gt;
&lt;li&gt;Dockerfile for Docker-based deployments&lt;/li&gt;
&lt;li&gt;Can call other tools like DNSTwist, Whatweb and CMSeeK&lt;/li&gt;
&lt;li&gt;Actively developed since 2012!&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;&lt;a id="user-content-uses" class="anchor" aria-hidden="true" href="#uses"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;USES&lt;/h3&gt;
&lt;p&gt;SpiderFoot's 170+ modules feed each other in a pub/sub model to ensure maximum data extraction to do things like:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Host/sub-domain/TLD enumeration/extraction&lt;/li&gt;
&lt;li&gt;E-mail address enumeration/extraction&lt;/li&gt;
&lt;li&gt;Phone number extraction&lt;/li&gt;
&lt;li&gt;Bitcoin and Ethereum address extraction&lt;/li&gt;
&lt;li&gt;DNS zone transfers&lt;/li&gt;
&lt;li&gt;Threat intelligence and Blacklist queries&lt;/li&gt;
&lt;li&gt;API integraiton with SHODAN, HaveIBeenPwned, Censys, AlienVault, SecurityTrails, etc.&lt;/li&gt;
&lt;li&gt;Social media account enumeration&lt;/li&gt;
&lt;li&gt;S3/Azure/Digitalocean bucket enumeration/scraping&lt;/li&gt;
&lt;li&gt;IP geo-location&lt;/li&gt;
&lt;li&gt;Web scraping, web content analysis&lt;/li&gt;
&lt;li&gt;Image and binary file meta data analysis&lt;/li&gt;
&lt;li&gt;Office document meta data analysis&lt;/li&gt;
&lt;li&gt;Dark web searches&lt;/li&gt;
&lt;li&gt;So much more...&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;See it in action here, performing some DNS recon:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://asciinema.org/a/295912" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/278a702859f9c480172d8762e8ef80140e6997e0/68747470733a2f2f61736369696e656d612e6f72672f612f3239353931322e737667" alt="asciicast" data-canonical-src="https://asciinema.org/a/295912.svg" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-purpose" class="anchor" aria-hidden="true" href="#purpose"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;PURPOSE&lt;/h3&gt;
&lt;p&gt;SpiderFoot can be used offensively (e.g. in a red team exercise or penetration test) for reconnaissance of your target or defensively to gather information about what you or your organisation might have exposed over the Internet.&lt;/p&gt;
&lt;p&gt;You can target the following entities in a SpiderFoot scan:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;IP address&lt;/li&gt;
&lt;li&gt;Domain/sub-domain name&lt;/li&gt;
&lt;li&gt;Hostname&lt;/li&gt;
&lt;li&gt;Network subnet (CIDR)&lt;/li&gt;
&lt;li&gt;ASN&lt;/li&gt;
&lt;li&gt;E-mail address&lt;/li&gt;
&lt;li&gt;Phone number&lt;/li&gt;
&lt;li&gt;Username&lt;/li&gt;
&lt;li&gt;Person's name&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;&lt;a id="user-content-modules" class="anchor" aria-hidden="true" href="#modules"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;MODULES&lt;/h3&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th align="left"&gt;Module&lt;/th&gt;
&lt;th align="left"&gt;Name&lt;/th&gt;
&lt;th align="left"&gt;Description&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td align="left"&gt;sfp_abusech.py&lt;/td&gt;
&lt;td align="left"&gt;abuse.ch&lt;/td&gt;
&lt;td align="left"&gt;Check if a host/domain, IP or netblock is malicious according to abuse.ch.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="left"&gt;sfp_abuseipdb.py&lt;/td&gt;
&lt;td align="left"&gt;AbuseIPDB&lt;/td&gt;
&lt;td align="left"&gt;Check if a netblock or IP is malicious according to AbuseIPDB.com.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="left"&gt;sfp_accounts.py&lt;/td&gt;
&lt;td align="left"&gt;Accounts&lt;/td&gt;
&lt;td align="left"&gt;Look for possible associated accounts on nearly 200 websites like Ebay, Slashdot, reddit, etc.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="left"&gt;sfp_adblock.py&lt;/td&gt;
&lt;td align="left"&gt;AdBlock Check&lt;/td&gt;
&lt;td align="left"&gt;Check if linked pages would be blocked by AdBlock Plus.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="left"&gt;sfp_ahmia.py&lt;/td&gt;
&lt;td align="left"&gt;Ahmia&lt;/td&gt;
&lt;td align="left"&gt;Search Tor 'Ahmia' search engine for mentions of the target domain.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="left"&gt;sfp_alienvaultiprep.py&lt;/td&gt;
&lt;td align="left"&gt;AlienVault IP Reputation&lt;/td&gt;
&lt;td align="left"&gt;Check if an IP or netblock is malicious according to the AlienVault IP Reputation database.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="left"&gt;sfp_alienvault.py&lt;/td&gt;
&lt;td align="left"&gt;AlienVault OTX&lt;/td&gt;
&lt;td align="left"&gt;Obtain information from AlienVault Open Threat Exchange (OTX)&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="left"&gt;sfp_apility.py&lt;/td&gt;
&lt;td align="left"&gt;Apility&lt;/td&gt;
&lt;td align="left"&gt;Search Apility API for IP address and domain reputation.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="left"&gt;sfp_archiveorg.py&lt;/td&gt;
&lt;td align="left"&gt;Archive.org&lt;/td&gt;
&lt;td align="left"&gt;Identifies historic versions of interesting files/pages from the Wayback Machine.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="left"&gt;sfp_arin.py&lt;/td&gt;
&lt;td align="left"&gt;ARIN&lt;/td&gt;
&lt;td align="left"&gt;Queries ARIN registry for contact information.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="left"&gt;sfp_azureblobstorage.py&lt;/td&gt;
&lt;td align="left"&gt;Azure Blob Finder&lt;/td&gt;
&lt;td align="left"&gt;Search for potential Azure blobs associated with the target and attempt to list their contents.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="left"&gt;sfp_badipscom.py&lt;/td&gt;
&lt;td align="left"&gt;badips.com&lt;/td&gt;
&lt;td align="left"&gt;Check if a domain or IP is malicious according to badips.com.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="left"&gt;sfp_bambenek.py&lt;/td&gt;
&lt;td align="left"&gt;Bambenek C&amp;amp;C List&lt;/td&gt;
&lt;td align="left"&gt;Check if a host/domain or IP appears on Bambenek Consulting's C&amp;amp;C tracker lists.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="left"&gt;sfp_base64.py&lt;/td&gt;
&lt;td align="left"&gt;Base64&lt;/td&gt;
&lt;td align="left"&gt;Identify Base64-encoded strings in any content and URLs, often revealing interesting hidden information.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="left"&gt;sfp_bgpview.py&lt;/td&gt;
&lt;td align="left"&gt;BGPView&lt;/td&gt;
&lt;td align="left"&gt;Obtain network information from BGPView API.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="left"&gt;sfp_binaryedge.py&lt;/td&gt;
&lt;td align="left"&gt;BinaryEdge&lt;/td&gt;
&lt;td align="left"&gt;Obtain information from BinaryEdge.io's Internet scanning systems about breaches, vulerabilities, torrents and passive DNS.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="left"&gt;sfp_bingsearch.py&lt;/td&gt;
&lt;td align="left"&gt;Bing&lt;/td&gt;
&lt;td align="left"&gt;Obtain information from bing to identify sub-domains and links.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="left"&gt;sfp_bingsharedip.py&lt;/td&gt;
&lt;td align="left"&gt;Bing (Shared IPs)&lt;/td&gt;
&lt;td align="left"&gt;Search Bing for hosts sharing the same IP.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="left"&gt;sfp_binstring.py&lt;/td&gt;
&lt;td align="left"&gt;Binary String Extractor&lt;/td&gt;
&lt;td align="left"&gt;Attempt to identify strings in binary content.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="left"&gt;sfp_bitcoin.py&lt;/td&gt;
&lt;td align="left"&gt;Bitcoin Finder&lt;/td&gt;
&lt;td align="left"&gt;Identify bitcoin addresses in scraped webpages.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="left"&gt;sfp_blockchain.py&lt;/td&gt;
&lt;td align="left"&gt;Blockchain&lt;/td&gt;
&lt;td align="left"&gt;Queries blockchain.info to find the balance of identified bitcoin wallet addresses.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="left"&gt;sfp_blocklistde.py&lt;/td&gt;
&lt;td align="left"&gt;blocklist.de&lt;/td&gt;
&lt;td align="left"&gt;Check if a netblock or IP is malicious according to blocklist.de.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="left"&gt;sfp_botscout.py&lt;/td&gt;
&lt;td align="left"&gt;BotScout&lt;/td&gt;
&lt;td align="left"&gt;Searches botscout.com's database of spam-bot IPs and e-mail addresses.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="left"&gt;sfp_builtwith.py&lt;/td&gt;
&lt;td align="left"&gt;BuiltWith&lt;/td&gt;
&lt;td align="left"&gt;Query BuiltWith.com's Domain API for information about your target's web technology stack, e-mail addresses and more.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="left"&gt;sfp_callername.py&lt;/td&gt;
&lt;td align="left"&gt;CallerName&lt;/td&gt;
&lt;td align="left"&gt;Lookup US phone number location and reputation information.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="left"&gt;sfp_censys.py&lt;/td&gt;
&lt;td align="left"&gt;Censys&lt;/td&gt;
&lt;td align="left"&gt;Obtain information from Censys.io&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="left"&gt;sfp_cinsscore.py&lt;/td&gt;
&lt;td align="left"&gt;CINS Army List&lt;/td&gt;
&lt;td align="left"&gt;Check if a netblock or IP is malicious according to cinsscore.com's Army List.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="left"&gt;sfp_circllu.py&lt;/td&gt;
&lt;td align="left"&gt;CIRCL.LU&lt;/td&gt;
&lt;td align="left"&gt;Obtain information from CIRCL.LU's Passive DNS and Passive SSL databases.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="left"&gt;sfp_citadel.py&lt;/td&gt;
&lt;td align="left"&gt;Citadel Engine&lt;/td&gt;
&lt;td align="left"&gt;Searches Leak-Lookup.com's database of breaches.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="left"&gt;sfp_cleanbrowsing.py&lt;/td&gt;
&lt;td align="left"&gt;Cleanbrowsing.org&lt;/td&gt;
&lt;td align="left"&gt;Check if a host would be blocked by Cleanbrowsing.org DNS&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="left"&gt;sfp_cleantalk.py&lt;/td&gt;
&lt;td align="left"&gt;CleanTalk Spam List&lt;/td&gt;
&lt;td align="left"&gt;Check if an IP is on CleanTalk.org's spam IP list.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="left"&gt;sfp_clearbit.py&lt;/td&gt;
&lt;td align="left"&gt;Clearbit&lt;/td&gt;
&lt;td align="left"&gt;Check for names, addresses, domains and more based on lookups of e-mail addresses on clearbit.com.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="left"&gt;sfp_coinblocker.py&lt;/td&gt;
&lt;td align="left"&gt;CoinBlocker Lists&lt;/td&gt;
&lt;td align="left"&gt;Check if a host/domain or IP appears on CoinBlocker lists.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="left"&gt;sfp_commoncrawl.py&lt;/td&gt;
&lt;td align="left"&gt;CommonCrawl&lt;/td&gt;
&lt;td align="left"&gt;Searches for URLs found through CommonCrawl.org.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="left"&gt;sfp_comodo.py&lt;/td&gt;
&lt;td align="left"&gt;Comodo&lt;/td&gt;
&lt;td align="left"&gt;Check if a host would be blocked by Comodo DNS&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="left"&gt;sfp_company.py&lt;/td&gt;
&lt;td align="left"&gt;Company Names&lt;/td&gt;
&lt;td align="left"&gt;Identify company names in any obtained data.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="left"&gt;sfp_cookie.py&lt;/td&gt;
&lt;td align="left"&gt;Cookies&lt;/td&gt;
&lt;td align="left"&gt;Extract Cookies from HTTP headers.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="left"&gt;sfp_crossref.py&lt;/td&gt;
&lt;td align="left"&gt;Cross-Reference&lt;/td&gt;
&lt;td align="left"&gt;Identify whether other domains are associated ('Affiliates') of the target.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="left"&gt;sfp_crt.py&lt;/td&gt;
&lt;td align="left"&gt;Certificate Transparency&lt;/td&gt;
&lt;td align="left"&gt;Gather hostnames from historical certificates in crt.sh.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="left"&gt;sfp_customfeed.py&lt;/td&gt;
&lt;td align="left"&gt;Custom Threat Feed&lt;/td&gt;
&lt;td align="left"&gt;Check if a host/domain, netblock, ASN or IP is malicious according to your custom feed.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="left"&gt;sfp_cybercrimetracker.py&lt;/td&gt;
&lt;td align="left"&gt;cybercrime-tracker.net&lt;/td&gt;
&lt;td align="left"&gt;Check if a host/domain or IP is malicious according to cybercrime-tracker.net.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="left"&gt;sfp_darksearch.py&lt;/td&gt;
&lt;td align="left"&gt;Darksearch&lt;/td&gt;
&lt;td align="left"&gt;Search the Darksearch.io Tor search engine for mentions of the target domain.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="left"&gt;sfp_digitaloceanspace.py&lt;/td&gt;
&lt;td align="left"&gt;Digital Ocean Space Finder&lt;/td&gt;
&lt;td align="left"&gt;Search for potential Digital Ocean Spaces associated with the target and attempt to list their contents.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="left"&gt;sfp_dnsbrute.py&lt;/td&gt;
&lt;td align="left"&gt;DNS Brute-force&lt;/td&gt;
&lt;td align="left"&gt;Attempts to identify hostnames through brute-forcing common names and iterations.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="left"&gt;sfp_dnscommonsrv.py&lt;/td&gt;
&lt;td align="left"&gt;DNS Common SRV&lt;/td&gt;
&lt;td align="left"&gt;Attempts to identify hostnames through common SRV.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="left"&gt;sfp_dnsneighbor.py&lt;/td&gt;
&lt;td align="left"&gt;DNS Look-aside&lt;/td&gt;
&lt;td align="left"&gt;Attempt to reverse-resolve the IP addresses next to your target to see if they are related.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="left"&gt;sfp_dnsraw.py&lt;/td&gt;
&lt;td align="left"&gt;DNS Raw Records&lt;/td&gt;
&lt;td align="left"&gt;Retrieves raw DNS records such as MX, TXT and others.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="left"&gt;sfp_dnsresolve.py&lt;/td&gt;
&lt;td align="left"&gt;DNS Resolver&lt;/td&gt;
&lt;td align="left"&gt;Resolves Hosts and IP Addresses identified, also extracted from raw content.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="left"&gt;sfp_dnszonexfer.py&lt;/td&gt;
&lt;td align="left"&gt;DNS Zone Transfer&lt;/td&gt;
&lt;td align="left"&gt;Attempts to perform a full DNS zone transfer.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="left"&gt;sfp_dronebl.py&lt;/td&gt;
&lt;td align="left"&gt;DroneBL&lt;/td&gt;
&lt;td align="left"&gt;Query the DroneBL database for open relays, open proxies, vulnerable servers, etc.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="left"&gt;sfp_duckduckgo.py&lt;/td&gt;
&lt;td align="left"&gt;DuckDuckGo&lt;/td&gt;
&lt;td align="left"&gt;Query DuckDuckGo's API for descriptive information about your target.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="left"&gt;sfp_emailformat.py&lt;/td&gt;
&lt;td align="left"&gt;EmailFormat&lt;/td&gt;
&lt;td align="left"&gt;Look up e-mail addresses on email-format.com.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="left"&gt;sfp_email.py&lt;/td&gt;
&lt;td align="left"&gt;E-Mail&lt;/td&gt;
&lt;td align="left"&gt;Identify e-mail addresses in any obtained data.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="left"&gt;sfp_emailrep.py&lt;/td&gt;
&lt;td align="left"&gt;EmailRep&lt;/td&gt;
&lt;td align="left"&gt;Search EmailRep.io for email address reputation.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="left"&gt;sfp_errors.py&lt;/td&gt;
&lt;td align="left"&gt;Errors&lt;/td&gt;
&lt;td align="left"&gt;Identify common error messages in content like SQL errors, etc.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="left"&gt;sfp_ethereum.py&lt;/td&gt;
&lt;td align="left"&gt;Ethereum Finder&lt;/td&gt;
&lt;td align="left"&gt;Identify ethereum addresses in scraped webpages.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="left"&gt;sfp_filemeta.py&lt;/td&gt;
&lt;td align="left"&gt;File Metadata&lt;/td&gt;
&lt;td align="left"&gt;Extracts meta data from documents and images.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="left"&gt;sfp_flickr.py&lt;/td&gt;
&lt;td align="left"&gt;Flickr&lt;/td&gt;
&lt;td align="left"&gt;Look up e-mail addresses on Flickr.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="left"&gt;sfp_fortinet.py&lt;/td&gt;
&lt;td align="left"&gt;Fortiguard.com&lt;/td&gt;
&lt;td align="left"&gt;Check if an IP is malicious according to Fortiguard.com.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="left"&gt;sfp_fraudguard.py&lt;/td&gt;
&lt;td align="left"&gt;Fraudguard&lt;/td&gt;
&lt;td align="left"&gt;Obtain threat information from Fraudguard.io&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="left"&gt;sfp_fringeproject.py&lt;/td&gt;
&lt;td align="left"&gt;Fringe Project&lt;/td&gt;
&lt;td align="left"&gt;Obtain network information from Fringe Project API.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="left"&gt;sfp_fsecure_riddler.py&lt;/td&gt;
&lt;td align="left"&gt;F-Secure Riddler.io&lt;/td&gt;
&lt;td align="left"&gt;Obtain network information from F-Secure Riddler.io API.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="left"&gt;sfp_fullcontact.py&lt;/td&gt;
&lt;td align="left"&gt;FullContact&lt;/td&gt;
&lt;td align="left"&gt;Gather domain and e-mail information from fullcontact.com.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="left"&gt;sfp_github.py&lt;/td&gt;
&lt;td align="left"&gt;Github&lt;/td&gt;
&lt;td align="left"&gt;Identify associated public code repositories on Github.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="left"&gt;sfp_googlemaps.py&lt;/td&gt;
&lt;td align="left"&gt;Google Maps&lt;/td&gt;
&lt;td align="left"&gt;Identifies potential physical addresses and latitude/longitude coordinates.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="left"&gt;sfp_googlesearch.py&lt;/td&gt;
&lt;td align="left"&gt;Google&lt;/td&gt;
&lt;td align="left"&gt;Obtain information from the Google Custom Search API to identify sub-domains and links.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="left"&gt;sfp_gravatar.py&lt;/td&gt;
&lt;td align="left"&gt;Gravatar&lt;/td&gt;
&lt;td align="left"&gt;Retrieve user information from Gravatar API.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="left"&gt;sfp_greynoise.py&lt;/td&gt;
&lt;td align="left"&gt;Greynoise&lt;/td&gt;
&lt;td align="left"&gt;Obtain information from Greynoise.io's Enterprise API.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="left"&gt;sfp_h1nobbdde.py&lt;/td&gt;
&lt;td align="left"&gt;HackerOne (Unofficial)&lt;/td&gt;
&lt;td align="left"&gt;Check external vulnerability scanning/reporting service h1.nobbd.de to see if the target is listed.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="left"&gt;sfp_hackertarget.py&lt;/td&gt;
&lt;td align="left"&gt;HackerTarget.com&lt;/td&gt;
&lt;td align="left"&gt;Search HackerTarget.com for hosts sharing the same IP.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="left"&gt;sfp_haveibeenpwned.py&lt;/td&gt;
&lt;td align="left"&gt;HaveIBeenPwned&lt;/td&gt;
&lt;td align="left"&gt;Check HaveIBeenPwned.com for hacked e-mail addresses identified in breaches.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="left"&gt;sfp_honeypot.py&lt;/td&gt;
&lt;td align="left"&gt;Honeypot Checker&lt;/td&gt;
&lt;td align="left"&gt;Query the projecthoneypot.org database for entries.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="left"&gt;sfp_hosting.py&lt;/td&gt;
&lt;td align="left"&gt;Hosting Providers&lt;/td&gt;
&lt;td align="left"&gt;Find out if any IP addresses identified fall within known 3rd party hosting ranges, e.g. Amazon, Azure, etc.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="left"&gt;sfp_hostsfilenet.py&lt;/td&gt;
&lt;td align="left"&gt;hosts-file.net Malicious Hosts&lt;/td&gt;
&lt;td align="left"&gt;Check if a host/domain is malicious according to hosts-file.net Malicious Hosts.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="left"&gt;sfp_hunter.py&lt;/td&gt;
&lt;td align="left"&gt;Hunter.io&lt;/td&gt;
&lt;td align="left"&gt;Check for e-mail addresses and names on hunter.io.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="left"&gt;sfp_iknowwhatyoudownload.py&lt;/td&gt;
&lt;td align="left"&gt;Iknowwhatyoudownload.com&lt;/td&gt;
&lt;td align="left"&gt;Check iknowwhatyoudownload.com for IP addresses that have been using BitTorrent.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="left"&gt;sfp_instagram.py&lt;/td&gt;
&lt;td align="left"&gt;Instagram&lt;/td&gt;
&lt;td align="left"&gt;Gather information from Instagram profiles.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="left"&gt;sfp_intelx.py&lt;/td&gt;
&lt;td align="left"&gt;IntelligenceX&lt;/td&gt;
&lt;td align="left"&gt;Obtain information from IntelligenceX about identified IP addresses, domains, e-mail addresses and phone numbers.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="left"&gt;sfp_intfiles.py&lt;/td&gt;
&lt;td align="left"&gt;Interesting Files&lt;/td&gt;
&lt;td align="left"&gt;Identifies potential files of interest, e.g. office documents, zip files.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="left"&gt;sfp_ipinfo.py&lt;/td&gt;
&lt;td align="left"&gt;IPInfo.io&lt;/td&gt;
&lt;td align="left"&gt;Identifies the physical location of IP addresses identified using ipinfo.io.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="left"&gt;sfp_ipstack.py&lt;/td&gt;
&lt;td align="left"&gt;ipstack&lt;/td&gt;
&lt;td align="left"&gt;Identifies the physical location of IP addresses identified using ipstack.com.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="left"&gt;sfp_isc.py&lt;/td&gt;
&lt;td align="left"&gt;Internet Storm Center&lt;/td&gt;
&lt;td align="left"&gt;Check if an IP is malicious according to SANS ISC.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="left"&gt;sfp_junkfiles.py&lt;/td&gt;
&lt;td align="left"&gt;Junk Files&lt;/td&gt;
&lt;td align="left"&gt;Looks for old/temporary and other similar files.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="left"&gt;sfp_malwaredomainlist.py&lt;/td&gt;
&lt;td align="left"&gt;malwaredomainlist.com&lt;/td&gt;
&lt;td align="left"&gt;Check if a host/domain, IP or netblock is malicious according to malwaredomainlist.com.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="left"&gt;sfp_malwaredomains.py&lt;/td&gt;
&lt;td align="left"&gt;malwaredomains.com&lt;/td&gt;
&lt;td align="left"&gt;Check if a host/domain is malicious according to malwaredomains.com.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="left"&gt;sfp_malwarepatrol.py&lt;/td&gt;
&lt;td align="left"&gt;MalwarePatrol&lt;/td&gt;
&lt;td align="left"&gt;Searches malwarepatrol.net's database of malicious URLs/IPs.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="left"&gt;sfp_metadefender.py&lt;/td&gt;
&lt;td align="left"&gt;MetaDefender&lt;/td&gt;
&lt;td align="left"&gt;Search MetaDefender API for IP address and domain IP reputation.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="left"&gt;sfp_mnemonic.py&lt;/td&gt;
&lt;td align="left"&gt;Mnemonic PassiveDNS&lt;/td&gt;
&lt;td align="left"&gt;Obtain Passive DNS information from PassiveDNS.mnemonic.no.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="left"&gt;sfp_multiproxy.py&lt;/td&gt;
&lt;td align="left"&gt;multiproxy.org Open Proxies&lt;/td&gt;
&lt;td align="left"&gt;Check if an IP is an open proxy according to multiproxy.org' open proxy list.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="left"&gt;sfp_myspace.py&lt;/td&gt;
&lt;td align="left"&gt;MySpace&lt;/td&gt;
&lt;td align="left"&gt;Gather username and location from MySpace.com profiles.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="left"&gt;sfp_names.py&lt;/td&gt;
&lt;td align="left"&gt;Name Extractor&lt;/td&gt;
&lt;td align="left"&gt;Attempt to identify human names in fetched content.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="left"&gt;sfp_neutrinoapi.py&lt;/td&gt;
&lt;td align="left"&gt;NeutrinoAPI&lt;/td&gt;
&lt;td align="left"&gt;Search NeutrinoAPI for IP address info and check IP reputation.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="left"&gt;sfp_norton.py&lt;/td&gt;
&lt;td align="left"&gt;Norton ConnectSafe&lt;/td&gt;
&lt;td align="left"&gt;Check if a host would be blocked by Norton ConnectSafe DNS&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="left"&gt;sfp_nothink.py&lt;/td&gt;
&lt;td align="left"&gt;Nothink.org&lt;/td&gt;
&lt;td align="left"&gt;Check if a host/domain, netblock or IP is malicious according to Nothink.org.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="left"&gt;sfp_numpi.py&lt;/td&gt;
&lt;td align="left"&gt;numpi&lt;/td&gt;
&lt;td align="left"&gt;Lookup USA/Canada phone number location and carrier information from numpi.com.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="left"&gt;sfp_numverify.py&lt;/td&gt;
&lt;td align="left"&gt;numverify&lt;/td&gt;
&lt;td align="left"&gt;Lookup phone number location and carrier information from numverify.com.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="left"&gt;sfp_onioncity.py&lt;/td&gt;
&lt;td align="left"&gt;Onion.link&lt;/td&gt;
&lt;td align="left"&gt;Search Tor 'Onion City' search engine for mentions of the target domain.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="left"&gt;sfp_onionsearchengine.py&lt;/td&gt;
&lt;td align="left"&gt;Onionsearchengine.com&lt;/td&gt;
&lt;td align="left"&gt;Search Tor onionsearchengine.com for mentions of the target domain.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="left"&gt;sfp_openbugbounty.py&lt;/td&gt;
&lt;td align="left"&gt;Open Bug Bounty&lt;/td&gt;
&lt;td align="left"&gt;Check external vulnerability scanning/reporting service openbugbounty.org to see if the target is listed.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="left"&gt;sfp_opencorporates.py&lt;/td&gt;
&lt;td align="left"&gt;OpenCorporates&lt;/td&gt;
&lt;td align="left"&gt;Look up company information from OpenCorporates.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="left"&gt;sfp_opendns.py&lt;/td&gt;
&lt;td align="left"&gt;OpenDNS&lt;/td&gt;
&lt;td align="left"&gt;Check if a host would be blocked by OpenDNS DNS&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="left"&gt;sfp_openphish.py&lt;/td&gt;
&lt;td align="left"&gt;OpenPhish&lt;/td&gt;
&lt;td align="left"&gt;Check if a host/domain is malicious according to OpenPhish.com.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="left"&gt;sfp_openstreetmap.py&lt;/td&gt;
&lt;td align="left"&gt;OpenStreetMap&lt;/td&gt;
&lt;td align="left"&gt;Retrieves latitude/longitude coordinates for physical addresses from OpenStreetMap API.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="left"&gt;sfp_pageinfo.py&lt;/td&gt;
&lt;td align="left"&gt;Page Info&lt;/td&gt;
&lt;td align="left"&gt;Obtain information about web pages (do they take passwords, do they contain forms, etc.)&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="left"&gt;sfp_pastebin.py&lt;/td&gt;
&lt;td align="left"&gt;PasteBin&lt;/td&gt;
&lt;td align="left"&gt;PasteBin scraping (via Google) to identify related content.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="left"&gt;sfp_pgp.py&lt;/td&gt;
&lt;td align="left"&gt;PGP Key Look-up&lt;/td&gt;
&lt;td align="left"&gt;Look up e-mail addresses in PGP public key servers.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="left"&gt;sfp_phishtank.py&lt;/td&gt;
&lt;td align="left"&gt;PhishTank&lt;/td&gt;
&lt;td align="left"&gt;Check if a host/domain is malicious according to PhishTank.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="left"&gt;sfp_phone.py&lt;/td&gt;
&lt;td align="left"&gt;Phone Numbers&lt;/td&gt;
&lt;td align="left"&gt;Identify phone numbers in scraped webpages.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="left"&gt;sfp_portscan_tcp.py&lt;/td&gt;
&lt;td align="left"&gt;Port Scanner - TCP&lt;/td&gt;
&lt;td align="left"&gt;Scans for commonly open TCP ports on Internet-facing systems.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="left"&gt;sfp_psbdmp.py&lt;/td&gt;
&lt;td align="left"&gt;Psbdmp.com&lt;/td&gt;
&lt;td align="left"&gt;Check psbdmp.cc (PasteBin Dump) for potentially hacked e-mails and domains.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="left"&gt;sfp_pulsedive.py&lt;/td&gt;
&lt;td align="left"&gt;Pulsedive&lt;/td&gt;
&lt;td align="left"&gt;Obtain information from Pulsedive's API.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="left"&gt;sfp_quad9.py&lt;/td&gt;
&lt;td align="left"&gt;Quad9&lt;/td&gt;
&lt;td align="left"&gt;Check if a host would be blocked by Quad9&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="left"&gt;sfp_ripe.py&lt;/td&gt;
&lt;td align="left"&gt;RIPE&lt;/td&gt;
&lt;td align="left"&gt;Queries the RIPE registry (includes ARIN data) to identify netblocks and other info.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="left"&gt;sfp_riskiq.py&lt;/td&gt;
&lt;td align="left"&gt;RiskIQ&lt;/td&gt;
&lt;td align="left"&gt;Obtain information from RiskIQ's (formerly PassiveTotal) Passive DNS and Passive SSL databases.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="left"&gt;sfp_robtex.py&lt;/td&gt;
&lt;td align="left"&gt;Robtex&lt;/td&gt;
&lt;td align="left"&gt;Search Robtex.com for hosts sharing the same IP.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="left"&gt;sfp_s3bucket.py&lt;/td&gt;
&lt;td align="left"&gt;Amazon S3 Bucket Finder&lt;/td&gt;
&lt;td align="left"&gt;Search for potential Amazon S3 buckets associated with the target and attempt to list their contents.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="left"&gt;sfp_scylla.py&lt;/td&gt;
&lt;td align="left"&gt;Scylla&lt;/td&gt;
&lt;td align="left"&gt;Gather breach data from Scylla API.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="left"&gt;sfp_securitytrails.py&lt;/td&gt;
&lt;td align="left"&gt;SecurityTrails&lt;/td&gt;
&lt;td align="left"&gt;Obtain Passive DNS and other information from SecurityTrails&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="left"&gt;sfp_shodan.py&lt;/td&gt;
&lt;td align="left"&gt;SHODAN&lt;/td&gt;
&lt;td align="left"&gt;Obtain information from SHODAN about identified IP addresses.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="left"&gt;sfp_similar.py&lt;/td&gt;
&lt;td align="left"&gt;Similar Domains&lt;/td&gt;
&lt;td align="left"&gt;Search various sources to identify similar looking domain names, for instance squatted domains.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="left"&gt;sfp_skymem.py&lt;/td&gt;
&lt;td align="left"&gt;Skymem&lt;/td&gt;
&lt;td align="left"&gt;Look up e-mail addresses on Skymem.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="left"&gt;sfp_slideshare.py&lt;/td&gt;
&lt;td align="left"&gt;SlideShare&lt;/td&gt;
&lt;td align="left"&gt;Gather name and location from SlideShare profiles.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="left"&gt;sfp_socialprofiles.py&lt;/td&gt;
&lt;td align="left"&gt;Social Media Profiles&lt;/td&gt;
&lt;td align="left"&gt;Tries to discover the social media profiles for human names identified.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="left"&gt;sfp_social.py&lt;/td&gt;
&lt;td align="left"&gt;Social Networks&lt;/td&gt;
&lt;td align="left"&gt;Identify presence on social media networks such as LinkedIn, Twitter and others.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="left"&gt;sfp_sorbs.py&lt;/td&gt;
&lt;td align="left"&gt;SORBS&lt;/td&gt;
&lt;td align="left"&gt;Query the SORBS database for open relays, open proxies, vulnerable servers, etc.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="left"&gt;sfp_spamcop.py&lt;/td&gt;
&lt;td align="left"&gt;SpamCop&lt;/td&gt;
&lt;td align="left"&gt;Query various spamcop databases for open relays, open proxies, vulnerable servers, etc.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="left"&gt;sfp_spamhaus.py&lt;/td&gt;
&lt;td align="left"&gt;Spamhaus&lt;/td&gt;
&lt;td align="left"&gt;Query the Spamhaus databases for open relays, open proxies, vulnerable servers, etc.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="left"&gt;sfp_spider.py&lt;/td&gt;
&lt;td align="left"&gt;Spider&lt;/td&gt;
&lt;td align="left"&gt;Spidering of web-pages to extract content for searching.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="left"&gt;sfp_spyonweb.py&lt;/td&gt;
&lt;td align="left"&gt;SpyOnWeb&lt;/td&gt;
&lt;td align="left"&gt;Search SpyOnWeb for hosts sharing the same IP address, Google Analytics code, or Google Adsense code.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="left"&gt;sfp_sslcert.py&lt;/td&gt;
&lt;td align="left"&gt;SSL Certificates&lt;/td&gt;
&lt;td align="left"&gt;Gather information about SSL certificates used by the target's HTTPS sites.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="left"&gt;sfp_ssltools.py&lt;/td&gt;
&lt;td align="left"&gt;SSL Tools&lt;/td&gt;
&lt;td align="left"&gt;Gather information about SSL certificates from SSLTools.com.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="left"&gt;sfp__stor_db.py&lt;/td&gt;
&lt;td align="left"&gt;Storage&lt;/td&gt;
&lt;td align="left"&gt;Stores scan results into the back-end SpiderFoot database. You will need this.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="left"&gt;sfp__stor_stdout.py&lt;/td&gt;
&lt;td align="left"&gt;Command-line output&lt;/td&gt;
&lt;td align="left"&gt;Dumps output to standard out. Used for when a SpiderFoot scan is run via the command-line.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="left"&gt;sfp_strangeheaders.py&lt;/td&gt;
&lt;td align="left"&gt;Strange Headers&lt;/td&gt;
&lt;td align="left"&gt;Obtain non-standard HTTP headers returned by web servers.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="left"&gt;sfp_talosintel.py&lt;/td&gt;
&lt;td align="left"&gt;Talos Intelligence&lt;/td&gt;
&lt;td align="left"&gt;Check if a netblock or IP is malicious according to talosintelligence.com.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="left"&gt;sfp_threatcrowd.py&lt;/td&gt;
&lt;td align="left"&gt;ThreatCrowd&lt;/td&gt;
&lt;td align="left"&gt;Obtain information from ThreatCrowd about identified IP addresses, domains and e-mail addresses.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="left"&gt;sfp_threatexpert.py&lt;/td&gt;
&lt;td align="left"&gt;ThreatExpert.com&lt;/td&gt;
&lt;td align="left"&gt;Check if a host/domain or IP is malicious according to ThreatExpert.com.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="left"&gt;sfp_threatminer.py&lt;/td&gt;
&lt;td align="left"&gt;ThreatMiner&lt;/td&gt;
&lt;td align="left"&gt;Obtain information from ThreatMiner's database for passive DNS and threat intelligence.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="left"&gt;sfp_tldsearch.py&lt;/td&gt;
&lt;td align="left"&gt;TLD Search&lt;/td&gt;
&lt;td align="left"&gt;Search all Internet TLDs for domains with the same name as the target (this can be very slow.)&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="left"&gt;sfp_tool_cmseek.py&lt;/td&gt;
&lt;td align="left"&gt;Tool - CMSeeK&lt;/td&gt;
&lt;td align="left"&gt;Identify what Content Management System (CMS) might be used.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="left"&gt;sfp_tool_dnstwist.py&lt;/td&gt;
&lt;td align="left"&gt;Tool - DNSTwist&lt;/td&gt;
&lt;td align="left"&gt;Identify bit-squatting, typo and other similar domains to the target using a local DNSTwist installation.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="left"&gt;sfp_tool_whatweb.py&lt;/td&gt;
&lt;td align="left"&gt;Tool - WhatWeb&lt;/td&gt;
&lt;td align="left"&gt;Identify what software is in use on the specified website.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="left"&gt;sfp_torch.py&lt;/td&gt;
&lt;td align="left"&gt;TORCH&lt;/td&gt;
&lt;td align="left"&gt;Search Tor 'TORCH' search engine for mentions of the target domain.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="left"&gt;sfp_torexits.py&lt;/td&gt;
&lt;td align="left"&gt;TOR Exit Nodes&lt;/td&gt;
&lt;td align="left"&gt;Check if an IP or netblock appears on the torproject.org exit node list.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="left"&gt;sfp_totalhash.py&lt;/td&gt;
&lt;td align="left"&gt;TotalHash.com&lt;/td&gt;
&lt;td align="left"&gt;Check if a host/domain or IP is malicious according to TotalHash.com.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="left"&gt;sfp_twitter.py&lt;/td&gt;
&lt;td align="left"&gt;Twitter&lt;/td&gt;
&lt;td align="left"&gt;Gather name and location from Twitter profiles.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="left"&gt;sfp_uceprotect.py&lt;/td&gt;
&lt;td align="left"&gt;UCEPROTECT&lt;/td&gt;
&lt;td align="left"&gt;Query the UCEPROTECT databases for open relays, open proxies, vulnerable servers, etc.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="left"&gt;sfp_urlscan.py&lt;/td&gt;
&lt;td align="left"&gt;URLScan.io&lt;/td&gt;
&lt;td align="left"&gt;Search URLScan.io cache for domain information.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="left"&gt;sfp_venmo.py&lt;/td&gt;
&lt;td align="left"&gt;Venmo&lt;/td&gt;
&lt;td align="left"&gt;Gather user information from Venmo API.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="left"&gt;sfp_viewdns.py&lt;/td&gt;
&lt;td align="left"&gt;ViewDNS.info&lt;/td&gt;
&lt;td align="left"&gt;Reverse Whois lookups using ViewDNS.info.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="left"&gt;sfp_virustotal.py&lt;/td&gt;
&lt;td align="left"&gt;VirusTotal&lt;/td&gt;
&lt;td align="left"&gt;Obtain information from VirusTotal about identified IP addresses.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="left"&gt;sfp_voipbl.py&lt;/td&gt;
&lt;td align="left"&gt;VoIPBL OpenPBX IPs&lt;/td&gt;
&lt;td align="left"&gt;Check if an IP or netblock is an open PBX according to VoIPBL OpenPBX IPs.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="left"&gt;sfp_vxvault.py&lt;/td&gt;
&lt;td align="left"&gt;VXVault.net&lt;/td&gt;
&lt;td align="left"&gt;Check if a domain or IP is malicious according to VXVault.net.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="left"&gt;sfp_watchguard.py&lt;/td&gt;
&lt;td align="left"&gt;Watchguard&lt;/td&gt;
&lt;td align="left"&gt;Check if an IP is malicious according to Watchguard's reputationauthority.org.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="left"&gt;sfp_webanalytics.py&lt;/td&gt;
&lt;td align="left"&gt;Web Analytics&lt;/td&gt;
&lt;td align="left"&gt;Identify web analytics IDs in scraped webpages and DNS TXT records.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="left"&gt;sfp_webframework.py&lt;/td&gt;
&lt;td align="left"&gt;Web Framework&lt;/td&gt;
&lt;td align="left"&gt;Identify the usage of popular web frameworks like jQuery, YUI and others.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="left"&gt;sfp_webserver.py&lt;/td&gt;
&lt;td align="left"&gt;Web Server&lt;/td&gt;
&lt;td align="left"&gt;Obtain web server banners to identify versions of web servers being used.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="left"&gt;sfp_whatcms.py&lt;/td&gt;
&lt;td align="left"&gt;WhatCMS&lt;/td&gt;
&lt;td align="left"&gt;Check web technology using WhatCMS.org API.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="left"&gt;sfp_whoisology.py&lt;/td&gt;
&lt;td align="left"&gt;Whoisology&lt;/td&gt;
&lt;td align="left"&gt;Reverse Whois lookups using Whoisology.com.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="left"&gt;sfp_whois.py&lt;/td&gt;
&lt;td align="left"&gt;Whois&lt;/td&gt;
&lt;td align="left"&gt;Perform a WHOIS look-up on domain names and owned netblocks.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="left"&gt;sfp_whoxy.py&lt;/td&gt;
&lt;td align="left"&gt;Whoxy&lt;/td&gt;
&lt;td align="left"&gt;Reverse Whois lookups using Whoxy.com.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="left"&gt;sfp_wigle.py&lt;/td&gt;
&lt;td align="left"&gt;Wigle.net&lt;/td&gt;
&lt;td align="left"&gt;Query wigle.net to identify nearby WiFi access points.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="left"&gt;sfp_wikileaks.py&lt;/td&gt;
&lt;td align="left"&gt;Wikileaks&lt;/td&gt;
&lt;td align="left"&gt;Search Wikileaks for mentions of domain names and e-mail addresses.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="left"&gt;sfp_wikipediaedits.py&lt;/td&gt;
&lt;td align="left"&gt;Wikipedia Edits&lt;/td&gt;
&lt;td align="left"&gt;Identify edits to Wikipedia articles made from a given IP address or username.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="left"&gt;sfp_xforce.py&lt;/td&gt;
&lt;td align="left"&gt;XForce Exchange&lt;/td&gt;
&lt;td align="left"&gt;Obtain information from IBM X-Force Exchange&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="left"&gt;sfp_yandexdns.py&lt;/td&gt;
&lt;td align="left"&gt;Yandex DNS&lt;/td&gt;
&lt;td align="left"&gt;Check if a host would be blocked by Yandex DNS&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="left"&gt;sfp_zoneh.py&lt;/td&gt;
&lt;td align="left"&gt;Zone-H Defacement Check&lt;/td&gt;
&lt;td align="left"&gt;Check if a hostname/domain appears on the zone-h.org 'special defacements' RSS feed.&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h3&gt;&lt;a id="user-content-documentation" class="anchor" aria-hidden="true" href="#documentation"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;DOCUMENTATION&lt;/h3&gt;
&lt;p&gt;Read more at the &lt;a href="https://www.spiderfoot.net" rel="nofollow"&gt;project website&lt;/a&gt;, including more complete documentation, blog posts with tutorials/guides, plus information about &lt;a href="https://www.spiderfoot.net/hx" rel="nofollow"&gt;SpiderFoot HX&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Latest updates announced on &lt;a href="https://twitter.com/spiderfoot" rel="nofollow"&gt;Twitter&lt;/a&gt;.&lt;/p&gt;
&lt;/article&gt;&lt;/div&gt;</description><author>smicallef</author><guid isPermaLink="false">https://github.com/smicallef/spiderfoot</guid><pubDate>Mon, 10 Feb 2020 00:06:00 GMT</pubDate></item><item><title>domlysz/BlenderGIS #7 in Python, This week</title><link>https://github.com/domlysz/BlenderGIS</link><description>&lt;p&gt;&lt;i&gt;Blender addons to make the bridge between Blender and geographic data&lt;/i&gt;&lt;/p&gt;&lt;div id="readme" class="md" data-path="README.md"&gt;&lt;article class="markdown-body entry-content p-5" itemprop="text"&gt;&lt;h1&gt;&lt;a id="user-content-blender-gis" class="anchor" aria-hidden="true" href="#blender-gis"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Blender GIS&lt;/h1&gt;
&lt;p&gt;Blender minimal version : 2.8&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Mac users warning :&lt;/strong&gt; currently the addon does not work anymore on Mac because of an issue relative to Blender Mac build itself. Please do not report the issue here. It should be fixed by the Blender team soon. Check &lt;a href="https://developer.blender.org/T68243" rel="nofollow"&gt;the bug report&lt;/a&gt; to follow the progress on it.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-wiki---faq---quick-start-guide" class="anchor" aria-hidden="true" href="#wiki---faq---quick-start-guide"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;a href="https://github.com/domlysz/BlenderGIS/wiki/Home"&gt;Wiki&lt;/a&gt; - &lt;a href="https://github.com/domlysz/BlenderGIS/wiki/FAQ"&gt;FAQ&lt;/a&gt; - &lt;a href="https://github.com/domlysz/BlenderGIS/wiki/Quick-start"&gt;Quick start guide&lt;/a&gt;&lt;/h2&gt;
&lt;h2&gt;&lt;a id="user-content-basemaps" class="anchor" aria-hidden="true" href="#basemaps"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;a href="https://github.com/domlysz/BlenderGIS/wiki/Basemaps"&gt;Basemaps&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;Display web map service like OpenStreetMap directly in Blender&lt;/p&gt;
&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="https://raw.githubusercontent.com/wiki/domlysz/blenderGIS/Blender27x/images/basemaps_demo.gif"&gt;&lt;img src="https://raw.githubusercontent.com/wiki/domlysz/blenderGIS/Blender27x/images/basemaps_demo.gif" alt="" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-srtm-download" class="anchor" aria-hidden="true" href="#srtm-download"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;a href="https://github.com/domlysz/BlenderGIS/wiki/SRTM"&gt;SRTM download&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;Get SRTM topographic data and apply it as height texture&lt;/p&gt;
&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="https://raw.githubusercontent.com/wiki/domlysz/blenderGIS/Blender27x/images/srtm_demo.gif"&gt;&lt;img src="https://raw.githubusercontent.com/wiki/domlysz/blenderGIS/Blender27x/images/srtm_demo.gif" alt="" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-esri-shapefile-import--export" class="anchor" aria-hidden="true" href="#esri-shapefile-import--export"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;a href="https://github.com/domlysz/BlenderGIS/wiki/Shapefile-import"&gt;ESRI Shapefile import / export&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;A &lt;a href="http://en.wikipedia.org/wiki/Shapefile" rel="nofollow"&gt;Shapefile&lt;/a&gt; is a popular geospatial vector data format for geographic information system software.&lt;/p&gt;
&lt;p&gt;This tool can import into Blender most of shapefile feature type. It can also uses attributes data to define Z elevation values or Z extrusion values.&lt;/p&gt;
&lt;p&gt;Exporter script can export a mesh to pointZ, polylineZ or polygonZ shapefile. Note that currently this tool does not re-export attribute data include in the dbase file linked to the shapefile. So if you want to import a shapefile for edit it into Blender and then re-export it, you will lose attribute data.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-georeferenced-raster-importer" class="anchor" aria-hidden="true" href="#georeferenced-raster-importer"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;a href="https://github.com/domlysz/BlenderGIS/wiki/Import-georef-raster"&gt;Georeferenced raster importer&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;Import geotiff or common image format georeferenced with a &lt;a href="http://en.wikipedia.org/wiki/World_file" rel="nofollow"&gt;world file&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;You can import the raster as a plane mesh, as backgound image for orthographic view, as UV texture mapping on a mesh or &lt;a href="https://github.com/domlysz/BlenderGIS/wiki/Import-DEM-grid"&gt;as DEM&lt;/a&gt; for warp a mesh with the displace modifier.&lt;/p&gt;
&lt;p&gt;ESRI ASCII GRID format is also supported through a dedicated import tool.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-openstreetmap-import" class="anchor" aria-hidden="true" href="#openstreetmap-import"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;a href="https://github.com/domlysz/BlenderGIS/wiki/OSM-import"&gt;OpenStreetMap import&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="https://raw.githubusercontent.com/wiki/domlysz/blenderGIS/Blender27x/images/osm_demo.gif"&gt;&lt;img src="https://raw.githubusercontent.com/wiki/domlysz/blenderGIS/Blender27x/images/osm_demo.gif" alt="" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-georeferenced-render-output" class="anchor" aria-hidden="true" href="#georeferenced-render-output"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;a href="https://github.com/domlysz/BlenderGIS/wiki/Make-a-georef-render"&gt;Georeferenced render output&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;This is a tool to create a new camera correctly setup for produce a map render. Georeferencing data (worldfile) are writing in text file accessible from the Blender text editor.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-delaunay-triangulation--voronoi-diagram" class="anchor" aria-hidden="true" href="#delaunay-triangulation--voronoi-diagram"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;a href="https://github.com/domlysz/BlenderGIS/wiki/Make-terrain-mesh-with-Delaunay-triangulation"&gt;Delaunay triangulation &amp;amp; Voronoi diagram&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;This script computes &lt;a href="http://en.wikipedia.org/wiki/Delaunay_triangulation" rel="nofollow"&gt;Delaunay triangulation&lt;/a&gt; in 2.5D. This triangulation is suitable for create a 3D terrain mesh from &lt;a href="http://en.wikipedia.org/wiki/Point_cloud" rel="nofollow"&gt;points cloud&lt;/a&gt; or &lt;a href="http://en.wikipedia.org/wiki/Contour_line" rel="nofollow"&gt;contour lines&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;The script can also compute &lt;a href="http://en.wikipedia.org/wiki/Voronoi" rel="nofollow"&gt;Voronoi tessellation&lt;/a&gt; in 2D which is the dual of delaunay triangulation. Voronoi diagram is suitable to make neighborhood analysis map.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-terrain-analysis" class="anchor" aria-hidden="true" href="#terrain-analysis"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;a href="https://github.com/domlysz/BlenderGIS/wiki/Terrain-analysis"&gt;Terrain analysis&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;This part of Blender GIS is designed to assist in the analysis of the topography : height, slope and azimuth (aspect).&lt;/p&gt;
&lt;p&gt;There are 2 tools, one to build materials nodes setup for Cycles engine, and a second to configure the color ramp as usual in common GIS software (reclassify values and apply color ramp presets).&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-georeferencing-management" class="anchor" aria-hidden="true" href="#georeferencing-management"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;a href="https://github.com/domlysz/BlenderGIS/wiki/Gereferencing-management"&gt;Georeferencing management&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;Handle various projection systems with reprojection capabilities and compatibility with some others addons&lt;/p&gt;
&lt;/article&gt;&lt;/div&gt;</description><author>domlysz</author><guid isPermaLink="false">https://github.com/domlysz/BlenderGIS</guid><pubDate>Mon, 10 Feb 2020 00:07:00 GMT</pubDate></item><item><title>aj-4/tinder-swipe-bot #8 in Python, This week</title><link>https://github.com/aj-4/tinder-swipe-bot</link><description>&lt;p&gt;&lt;i&gt;[No description found.]&lt;/i&gt;&lt;/p&gt;&lt;div id="readme" class="md" data-path="README.md"&gt;&lt;article class="markdown-body entry-content p-5" itemprop="text"&gt;&lt;p&gt;to run:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;download chromedriver, unzip, move to &lt;code&gt;/usr/local/bin&lt;/code&gt; (mac os / linux)&lt;/li&gt;
&lt;li&gt;&lt;code&gt;pip install selenium&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;create a secrets.py file with variables:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt; username = 'your_username'
 password = 'your_password'
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;please add more features to this, would be awesome to see what you can come up w&lt;/p&gt;
&lt;p&gt;cheers&lt;/p&gt;
&lt;/article&gt;&lt;/div&gt;</description><author>aj-4</author><guid isPermaLink="false">https://github.com/aj-4/tinder-swipe-bot</guid><pubDate>Mon, 10 Feb 2020 00:08:00 GMT</pubDate></item><item><title>TheAlgorithms/Python #9 in Python, This week</title><link>https://github.com/TheAlgorithms/Python</link><description>&lt;p&gt;&lt;i&gt;All Algorithms implemented in Python&lt;/i&gt;&lt;/p&gt;&lt;div id="readme" class="md" data-path="README.md"&gt;&lt;article class="markdown-body entry-content p-5" itemprop="text"&gt;&lt;h1&gt;&lt;a id="user-content-the-algorithms---python" class="anchor" aria-hidden="true" href="#the-algorithms---python"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;The Algorithms - Python&lt;/h1&gt;
&lt;p&gt;&lt;a href="https://www.paypal.me/TheAlgorithms/100" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/6e317052a97af57d39fafda024dec0e418ed447a/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f446f6e6174652d50617950616c2d677265656e2e7376673f6c6f676f3d70617970616c267374796c653d666c61742d737175617265" alt="Donate" data-canonical-src="https://img.shields.io/badge/Donate-PayPal-green.svg?logo=paypal&amp;amp;style=flat-square" style="max-width:100%;"&gt;&lt;/a&gt; 
&lt;a href="https://travis-ci.com/TheAlgorithms/Python" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/ba096466b22c899fe7f5e02f25b5a4eb9c4981bf/68747470733a2f2f696d672e736869656c64732e696f2f7472617669732f546865416c676f726974686d732f507974686f6e2e7376673f6c6162656c3d5472617669732532304349266c6f676f3d747261766973267374796c653d666c61742d737175617265" alt="Build Status" data-canonical-src="https://img.shields.io/travis/TheAlgorithms/Python.svg?label=Travis%20CI&amp;amp;logo=travis&amp;amp;style=flat-square" style="max-width:100%;"&gt;&lt;/a&gt; 
&lt;a href="https://lgtm.com/projects/g/TheAlgorithms/Python/alerts" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/5d3181d5ebb9d039f3db9c12cc98e4733966ad45/68747470733a2f2f696d672e736869656c64732e696f2f6c67746d2f616c657274732f6769746875622f546865416c676f726974686d732f507974686f6e2e7376673f6c6162656c3d4c47544d266c6f676f3d4c47544d267374796c653d666c61742d737175617265" alt="LGTM" data-canonical-src="https://img.shields.io/lgtm/alerts/github/TheAlgorithms/Python.svg?label=LGTM&amp;amp;logo=LGTM&amp;amp;style=flat-square" style="max-width:100%;"&gt;&lt;/a&gt; 
&lt;a href="https://gitter.im/TheAlgorithms" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/f697eee68d1130a571859375f6e3cf3b666d3c50/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f436861742d4769747465722d6666363962342e7376673f6c6162656c3d43686174266c6f676f3d676974746572267374796c653d666c61742d737175617265" alt="Gitter chat" data-canonical-src="https://img.shields.io/badge/Chat-Gitter-ff69b4.svg?label=Chat&amp;amp;logo=gitter&amp;amp;style=flat-square" style="max-width:100%;"&gt;&lt;/a&gt; 
&lt;a href="https://github.com/TheAlgorithms/Python/blob/master/CONTRIBUTING.md"&gt;&lt;img src="https://camo.githubusercontent.com/71dbcf9e251926ae5ab25476d1d449d107103fe7/68747470733a2f2f696d672e736869656c64732e696f2f7374617469632f76312e7376673f6c6162656c3d436f6e747269627574696f6e73266d6573736167653d57656c636f6d6526636f6c6f723d303035396233267374796c653d666c61742d737175617265" alt="contributions welcome" data-canonical-src="https://img.shields.io/static/v1.svg?label=Contributions&amp;amp;message=Welcome&amp;amp;color=0059b3&amp;amp;style=flat-square" style="max-width:100%;"&gt;&lt;/a&gt; 
&lt;a target="_blank" rel="noopener noreferrer" href="https://camo.githubusercontent.com/310362fb8e8936dc040af9adce51341ad65bf5d7/68747470733a2f2f696d672e736869656c64732e696f2f6769746875622f7265706f2d73697a652f546865416c676f726974686d732f507974686f6e2e7376673f6c6162656c3d5265706f25323073697a65267374796c653d666c61742d737175617265"&gt;&lt;img src="https://camo.githubusercontent.com/310362fb8e8936dc040af9adce51341ad65bf5d7/68747470733a2f2f696d672e736869656c64732e696f2f6769746875622f7265706f2d73697a652f546865416c676f726974686d732f507974686f6e2e7376673f6c6162656c3d5265706f25323073697a65267374796c653d666c61742d737175617265" alt="" data-canonical-src="https://img.shields.io/github/repo-size/TheAlgorithms/Python.svg?label=Repo%20size&amp;amp;style=flat-square" style="max-width:100%;"&gt;&lt;/a&gt; &lt;/p&gt;

&lt;h3&gt;&lt;a id="user-content-all-algorithms-implemented-in-python-for-education" class="anchor" aria-hidden="true" href="#all-algorithms-implemented-in-python-for-education"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;All algorithms implemented in Python (for education)&lt;/h3&gt;
&lt;p&gt;These implementations are for learning purposes. They may be less efficient than the implementations in the Python standard library.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-contribution-guidelines" class="anchor" aria-hidden="true" href="#contribution-guidelines"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Contribution Guidelines&lt;/h2&gt;
&lt;p&gt;Read our &lt;a href="CONTRIBUTING.md"&gt;Contribution Guidelines&lt;/a&gt; before you contribute.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-community-channel" class="anchor" aria-hidden="true" href="#community-channel"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Community Channel&lt;/h2&gt;
&lt;p&gt;We're on &lt;a href="https://gitter.im/TheAlgorithms" rel="nofollow"&gt;Gitter&lt;/a&gt;! Please join us.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-list-of-algorithms" class="anchor" aria-hidden="true" href="#list-of-algorithms"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;List of Algorithms&lt;/h2&gt;
&lt;p&gt;See our &lt;a href="DIRECTORY.md"&gt;directory&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;&lt;a href="https://gitpod.io/#https://github.com/TheAlgorithms/Python" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/6af3650e2f9523e898e3e314ab356b675875483e/68747470733a2f2f676974706f642e696f2f627574746f6e2f6f70656e2d696e2d676974706f642e7376673f7374796c653d666c61742d737175617265" alt="Open in Gitpod" data-canonical-src="https://gitpod.io/button/open-in-gitpod.svg?style=flat-square" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;/article&gt;&lt;/div&gt;</description><author>TheAlgorithms</author><guid isPermaLink="false">https://github.com/TheAlgorithms/Python</guid><pubDate>Mon, 10 Feb 2020 00:09:00 GMT</pubDate></item><item><title>521xueweihan/HelloGitHub #10 in Python, This week</title><link>https://github.com/521xueweihan/HelloGitHub</link><description>&lt;p&gt;&lt;i&gt;:octocat: Find pearls on open-source seashore 分享 GitHub 上有趣、入门级的开源项目&lt;/i&gt;&lt;/p&gt;&lt;div id="readme" class="md" data-path="README.md"&gt;&lt;article class="markdown-body entry-content p-5" itemprop="text"&gt;&lt;p align="center"&gt;
  &lt;a target="_blank" rel="noopener noreferrer" href="https://raw.githubusercontent.com/521xueweihan/img/master/hellogithub/logo/readme.gif"&gt;&lt;img src="https://raw.githubusercontent.com/521xueweihan/img/master/hellogithub/logo/readme.gif" style="max-width:100%;"&gt;&lt;/a&gt;
  &lt;br&gt;中文 | &lt;a href="README_en.md"&gt;English&lt;/a&gt;
  &lt;br&gt;&lt;strong&gt;HelloGitHub&lt;/strong&gt; 分享 GitHub 上有趣、入门级的开源项目。&lt;br&gt;兴趣是最好的老师，这里能够帮你找到编程的兴趣！
&lt;/p&gt;
&lt;p align="center"&gt;
  &lt;a href="https://raw.githubusercontent.com/521xueweihan/img/master/hellogithub/logo/weixin.png" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/61343b85520a4714ddb37eb300f8268cc881ae7e/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f54616c6b2d2545352542452541452545342542462541312545372542452541342d627269676874677265656e2e7376673f7374796c653d706f706f75742d737175617265" alt="WeiXin" data-canonical-src="https://img.shields.io/badge/Talk-%E5%BE%AE%E4%BF%A1%E7%BE%A4-brightgreen.svg?style=popout-square" style="max-width:100%;"&gt;&lt;/a&gt;
  &lt;a href="https://github.com/521xueweihan/HelloGitHub/stargazers"&gt;&lt;img src="https://camo.githubusercontent.com/0aec7fa1a5647255bbe8af37a82a007be69d8739/68747470733a2f2f696d672e736869656c64732e696f2f6769746875622f73746172732f35323178756577656968616e2f48656c6c6f4769744875622e7376673f7374796c653d706f706f75742d737175617265" alt="GitHub stars" data-canonical-src="https://img.shields.io/github/stars/521xueweihan/HelloGitHub.svg?style=popout-square" style="max-width:100%;"&gt;&lt;/a&gt;
  &lt;a href="https://github.com/521xueweihan/HelloGitHub/issues"&gt;&lt;img src="https://camo.githubusercontent.com/a8367e38e94eccf7e469023edfec05db15132454/68747470733a2f2f696d672e736869656c64732e696f2f6769746875622f6973737565732f35323178756577656968616e2f48656c6c6f4769744875622e7376673f7374796c653d706f706f75742d737175617265" alt="GitHub issues" data-canonical-src="https://img.shields.io/github/issues/521xueweihan/HelloGitHub.svg?style=popout-square" style="max-width:100%;"&gt;&lt;/a&gt;
    &lt;a href="https://weibo.com/hellogithub" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/4627590b5d81a690c6c83abaf47f678d70d26e6b/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f2545362539362542302545362542352541412d576569626f2d7265642e7376673f7374796c653d706f706f75742d737175617265" alt="Sina Weibo" data-canonical-src="https://img.shields.io/badge/%E6%96%B0%E6%B5%AA-Weibo-red.svg?style=popout-square" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-简介" class="anchor" aria-hidden="true" href="#简介"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;简介&lt;/h2&gt;
&lt;p&gt;这是一个面向编程新手、热爱编程、对开源社区感兴趣人群的项目，内容&lt;strong&gt;每月 28 号&lt;/strong&gt;以月刊的形式更新发布。内容包括：&lt;strong&gt;流行项目&lt;/strong&gt;、&lt;strong&gt;入门级项目&lt;/strong&gt;、&lt;strong&gt;让生活变得更美好的工具&lt;/strong&gt;、&lt;strong&gt;书籍&lt;/strong&gt;、&lt;strong&gt;学习心得笔记&lt;/strong&gt;、&lt;strong&gt;企业级项目&lt;/strong&gt;等，这些开源项目大多都是非常容易上手、很 Cool，能够让你用很短时间感受到编程的魅力和便捷。从而让大家感受到编程的乐趣，动手开始编程。&lt;/p&gt;
&lt;p&gt;希望通过本项目能够有更多人加入到开源社区、回馈社区。&lt;strong&gt;让有趣、有价值的项目被更多人发现和加入&lt;/strong&gt;。在参与这些项目的过程中，你将得到：&lt;strong&gt;热爱编程的小伙伴&lt;/strong&gt;&lt;g-emoji class="g-emoji" alias="man_dancing" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f57a.png"&gt;🕺&lt;/g-emoji&gt; 、&lt;strong&gt;更多编程知识&lt;/strong&gt;&lt;g-emoji class="g-emoji" alias="books" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f4da.png"&gt;📚&lt;/g-emoji&gt; 、&lt;strong&gt;优秀的编程技巧&lt;/strong&gt;&lt;g-emoji class="g-emoji" alias="computer" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f4bb.png"&gt;💻&lt;/g-emoji&gt; 、&lt;strong&gt;找到编程的乐趣&lt;/strong&gt;&lt;g-emoji class="g-emoji" alias="video_game" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f3ae.png"&gt;🎮&lt;/g-emoji&gt; 。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;『每日精选』&lt;/strong&gt; 关注我们的&lt;a href="https://weibo.com/hellogithub" rel="nofollow"&gt;最惨官微&lt;/a&gt;获取每日项目推荐。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;『讲解开源项目』&lt;/strong&gt; 有趣的项目不知道怎么运行和玩耍？&lt;a href="https://github.com/HelloGitHub-Team/Article"&gt;点击阅读&lt;/a&gt;讲解开源系列。&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-内容" class="anchor" aria-hidden="true" href="#内容"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;内容&lt;/h2&gt;
&lt;p&gt;每月 28 号发布&lt;a href="/content/last.md"&gt;最新一期&lt;/a&gt; | &lt;a href="https://hellogithub.com" rel="nofollow"&gt;官网&lt;/a&gt;&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;&lt;img class="emoji" title=":shipit:" alt=":shipit:" src="https://github.githubassets.com/images/icons/emoji/shipit.png" height="20" width="20" align="absmiddle"&gt;&lt;/th&gt;
&lt;th&gt;&lt;g-emoji class="g-emoji" alias="jack_o_lantern" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f383.png"&gt;🎃&lt;/g-emoji&gt;&lt;/th&gt;
&lt;th&gt;&lt;g-emoji class="g-emoji" alias="beer" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f37a.png"&gt;🍺&lt;/g-emoji&gt;&lt;/th&gt;
&lt;th&gt;&lt;g-emoji class="g-emoji" alias="fish_cake" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f365.png"&gt;🍥&lt;/g-emoji&gt;&lt;/th&gt;
&lt;th&gt;&lt;img class="emoji" title=":octocat:" alt=":octocat:" src="https://github.githubassets.com/images/icons/emoji/octocat.png" height="20" width="20" align="absmiddle"&gt;&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href="/content/46/HelloGitHub46.md"&gt;第 46 期&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href="/content/45/HelloGitHub45.md"&gt;第 45 期&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href="/content/44/HelloGitHub44.md"&gt;第 44 期&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href="/content/43/HelloGitHub43.md"&gt;第 43 期&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href="/content/42/HelloGitHub42.md"&gt;第 42 期&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href="/content/41/HelloGitHub41.md"&gt;第 41 期&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href="/content/40/HelloGitHub40.md"&gt;第 40 期&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href="/content/39/HelloGitHub39.md"&gt;第 39 期&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href="/content/38/HelloGitHub38.md"&gt;第 38 期&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href="/content/37/HelloGitHub37.md"&gt;第 37 期&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href="/content/36/HelloGitHub36.md"&gt;第 36 期&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href="/content/35/HelloGitHub35.md"&gt;第 35 期&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href="/content/34/HelloGitHub34.md"&gt;第 34 期&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href="/content/33/HelloGitHub33.md"&gt;第 33 期&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href="/content/32/HelloGitHub32.md"&gt;第 32 期&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href="/content/31/HelloGitHub31.md"&gt;第 31 期&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href="/content/30/HelloGitHub30.md"&gt;第 30 期&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href="/content/29/HelloGitHub29.md"&gt;第 29 期&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href="/content/28/HelloGitHub28.md"&gt;第 28 期&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href="/content/27/HelloGitHub27.md"&gt;第 27 期&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href="/content/26/HelloGitHub26.md"&gt;第 26 期&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href="/content/25/HelloGitHub25.md"&gt;第 25 期&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href="/content/24/HelloGitHub24.md"&gt;第 24 期&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href="/content/23/HelloGitHub23.md"&gt;第 23 期&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href="/content/22/HelloGitHub22.md"&gt;第 22 期&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href="/content/21/HelloGitHub21.md"&gt;第 21 期&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href="/content/20/HelloGitHub20.md"&gt;第 20 期&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href="/content/19/HelloGitHub19.md"&gt;第 19 期&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href="/content/18/HelloGitHub18.md"&gt;第 18 期&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href="/content/17/HelloGitHub17.md"&gt;第 17 期&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href="/content/16/HelloGitHub16.md"&gt;第 16 期&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href="/content/15/HelloGitHub15.md"&gt;第 15 期&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href="/content/14/HelloGitHub14.md"&gt;第 14 期&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href="/content/13/HelloGitHub13.md"&gt;第 13 期&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href="/content/12/HelloGitHub12.md"&gt;第 12 期&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href="/content/11/HelloGitHub11.md"&gt;第 11 期&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href="/content/10/HelloGitHub10.md"&gt;第 10 期&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href="/content/09/HelloGitHub09.md"&gt;第 09 期&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href="/content/08/HelloGitHub08.md"&gt;第 08 期&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href="/content/07/HelloGitHub07.md"&gt;第 07 期&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href="/content/06/HelloGitHub06.md"&gt;第 06 期&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href="/content/05/HelloGitHub05.md"&gt;第 05 期&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href="/content/04/HelloGitHub04.md"&gt;第 04 期&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href="/content/03/HelloGitHub03.md"&gt;第 03 期&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href="/content/02/HelloGitHub02.md"&gt;第 02 期&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href="/content/01/HelloGitHub01.md"&gt;第 01 期&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;欢迎&lt;a href="https://github.com/521xueweihan/HelloGitHub/issues/new"&gt;推荐或自荐项目&lt;/a&gt;成为 &lt;strong&gt;HelloGitHub&lt;/strong&gt; 的&lt;a href="https://github.com/521xueweihan/HelloGitHub/blob/master/content/contributors.md"&gt;贡献者&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-贡献者" class="anchor" aria-hidden="true" href="#贡献者"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;贡献者&lt;/h2&gt;
&lt;table&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;th align="center"&gt;
        &lt;a href="https://github.com/521xueweihan"&gt;
          &lt;img src="https://avatars2.githubusercontent.com/u/8255800?s=50&amp;amp;v=4" style="max-width:100%;"&gt;&lt;br&gt;
          &lt;sub&gt;削微寒&lt;/sub&gt;
        &lt;/a&gt;&lt;br&gt;
      &lt;/th&gt;
      &lt;th align="center"&gt;
        &lt;a href="https://github.com/ming995"&gt;
          &lt;img src="https://avatars0.githubusercontent.com/u/46031112?s=50&amp;amp;v=4" style="max-width:100%;"&gt;&lt;br&gt;
          &lt;sub&gt;糖醋里脊&lt;/sub&gt;
        &lt;/a&gt;&lt;br&gt;
      &lt;/th&gt;
      &lt;th align="center"&gt;
        &lt;a href="https://github.com/FrontMage"&gt;
          &lt;img src="https://avatars0.githubusercontent.com/u/17007026?s=50&amp;amp;v=4" style="max-width:100%;"&gt;&lt;br&gt;
          &lt;sub&gt;FrontMage&lt;/sub&gt;
        &lt;/a&gt;&lt;br&gt;
      &lt;/th&gt;
      &lt;th align="center"&gt;
        &lt;a href="https://github.com/xibinyue"&gt;
          &lt;img src="https://avatars0.githubusercontent.com/u/14122146?s=50&amp;amp;v=4" style="max-width:100%;"&gt;&lt;br&gt;
          &lt;sub&gt;xibinyue&lt;/sub&gt;
        &lt;/a&gt;&lt;br&gt;
      &lt;/th&gt;
      &lt;th align="center"&gt;
        &lt;a href="https://github.com/Eurus-Holmes"&gt;
          &lt;img src="https://avatars3.githubusercontent.com/u/34226570?s=50&amp;amp;v=4" style="max-width:100%;"&gt;&lt;br&gt;
          &lt;sub&gt;Feiyang Chen&lt;/sub&gt;
        &lt;/a&gt;&lt;br&gt;
      &lt;/th&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th align="center"&gt;
        &lt;a href="https://github.com/ChungZH"&gt;
          &lt;img src="https://avatars1.githubusercontent.com/u/42088872?s=50&amp;amp;v=4" style="max-width:100%;"&gt;&lt;br&gt;
          &lt;sub&gt;ChungZH&lt;/sub&gt;
        &lt;/a&gt;&lt;br&gt;
      &lt;/th&gt;
      &lt;th align="center"&gt;
        &lt;a href="https://github.com/daixiang0"&gt;
          &lt;img src="https://avatars3.githubusercontent.com/u/26538619?s=50&amp;amp;v=4" style="max-width:100%;"&gt;&lt;br&gt;
          &lt;sub&gt;daixiang0&lt;/sub&gt;
        &lt;/a&gt;&lt;br&gt;
      &lt;/th&gt;
      &lt;th align="center"&gt;
        &lt;a href="https://github.com/nivance"&gt;
          &lt;img src="https://avatars3.githubusercontent.com/u/3291404?s=50&amp;amp;v=4" style="max-width:100%;"&gt;&lt;br&gt;
          &lt;sub&gt;nivance&lt;/sub&gt;
        &lt;/a&gt;&lt;br&gt;
      &lt;/th&gt;
      &lt;th align="center"&gt;
        &lt;a href="https://github.com/hellowHuaairen"&gt;
          &lt;img src="https://avatars2.githubusercontent.com/u/19610305?s=50&amp;amp;v=4" style="max-width:100%;"&gt;&lt;br&gt;
          &lt;sub&gt;hellowHuaairen&lt;/sub&gt;
        &lt;/a&gt;&lt;br&gt;
      &lt;/th&gt;
      &lt;th align="center"&gt;
        &lt;a href="https://github.com/521xueweihan/HelloGitHub/blob/master/content/contributors.md"&gt;
          &lt;img src="https://avatars1.githubusercontent.com/u/17665302?s=50&amp;amp;v=4" style="max-width:100%;"&gt;&lt;br&gt;
          &lt;sub&gt;更多贡献者&lt;/sub&gt;
        &lt;/a&gt;&lt;br&gt;
      &lt;/th&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;
&lt;h2&gt;&lt;a id="user-content-合作组织" class="anchor" aria-hidden="true" href="#合作组织"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;合作组织&lt;/h2&gt;
&lt;p&gt;欢迎各种&lt;img class="emoji" title=":octocat:" alt=":octocat:" src="https://github.githubassets.com/images/icons/emoji/octocat.png" height="20" width="20" align="absmiddle"&gt;开源组织合作&lt;a href="Mailto:595666367@qq.com"&gt;点击联系我&lt;/a&gt;&lt;/p&gt;
&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th align="center"&gt;
        &lt;a href="https://github.com/FGDBTKD"&gt;
          &lt;img src="https://avatars3.githubusercontent.com/u/40509403?s=50&amp;amp;v=4" style="max-width:100%;"&gt;&lt;br&gt;
          &lt;sub&gt;FGDBTKD&lt;/sub&gt;&lt;br&gt;
          &lt;sub&gt;AI/ML/DL/NLP&lt;/sub&gt;
        &lt;/a&gt;&lt;br&gt;
      &lt;/th&gt;
      &lt;th align="center"&gt;
        &lt;a href="https://github.com/d2-projects"&gt;
          &lt;img src="https://avatars3.githubusercontent.com/u/40857578?s=50&amp;amp;v=4" style="max-width:100%;"&gt;&lt;br&gt;
          &lt;sub&gt;D2 Projects&lt;/sub&gt;&lt;br&gt;
          &lt;sub&gt;Vue/JavaScript&lt;/sub&gt;
        &lt;/a&gt;&lt;br&gt;
      &lt;/th&gt;
      &lt;th align="center"&gt;
        &lt;a href="https://github.com/doocs"&gt;
          &lt;img src="https://avatars1.githubusercontent.com/u/43716716?s=50&amp;amp;v=4" style="max-width:100%;"&gt;&lt;br&gt;
          &lt;sub&gt;Doocs&lt;/sub&gt;&lt;br&gt;
          &lt;sub&gt;Technical Knowledge&lt;/sub&gt;
        &lt;/a&gt;&lt;br&gt;
      &lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
&lt;/table&gt;
&lt;h2&gt;&lt;a id="user-content-声明" class="anchor" aria-hidden="true" href="#声明"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;声明&lt;/h2&gt;
&lt;p&gt;&lt;a href="https://creativecommons.org/licenses/by-nc-nd/4.0/deed.zh" rel="nofollow"&gt;&lt;img alt="知识共享许可协议" src="https://camo.githubusercontent.com/1ae74a56e22c4897b6fbfb9f301bd829c77429a7/68747470733a2f2f6c6963656e7365627574746f6e732e6e65742f6c2f62792d6e632d6e642f342e302f38387833312e706e67" data-canonical-src="https://licensebuttons.net/l/by-nc-nd/4.0/88x31.png" style="max-width:100%;"&gt;&lt;/a&gt;&lt;br&gt;本作品采用 &lt;a href="https://creativecommons.org/licenses/by-nc-nd/4.0/deed.zh" rel="nofollow"&gt;署名-非商业性使用-禁止演绎 4.0 国际&lt;/a&gt; 进行许可。&lt;/p&gt;
&lt;/article&gt;&lt;/div&gt;</description><author>521xueweihan</author><guid isPermaLink="false">https://github.com/521xueweihan/HelloGitHub</guid><pubDate>Mon, 10 Feb 2020 00:10:00 GMT</pubDate></item><item><title>deezer/spleeter #11 in Python, This week</title><link>https://github.com/deezer/spleeter</link><description>&lt;p&gt;&lt;i&gt;Deezer source separation library including pretrained models.&lt;/i&gt;&lt;/p&gt;&lt;div id="readme" class="md" data-path="README.md"&gt;&lt;article class="markdown-body entry-content p-5" itemprop="text"&gt;&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="https://github.com/deezer/spleeter/raw/master/images/spleeter_logo.png"&gt;&lt;img src="https://github.com/deezer/spleeter/raw/master/images/spleeter_logo.png" height="80" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href="https://circleci.com/gh/deezer/spleeter/tree/master" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/5309218919f0dd07b62c1543e79f8765026f028c/68747470733a2f2f636972636c6563692e636f6d2f67682f6465657a65722f73706c65657465722f747265652f6d61737465722e7376673f7374796c653d736869656c64" alt="CircleCI" data-canonical-src="https://circleci.com/gh/deezer/spleeter/tree/master.svg?style=shield" style="max-width:100%;"&gt;&lt;/a&gt; &lt;a target="_blank" rel="noopener noreferrer" href="https://camo.githubusercontent.com/b20de8e30b90fda67073582722d7cf1b26ffa3e2/68747470733a2f2f696d672e736869656c64732e696f2f707970692f707976657273696f6e732f73706c6565746572"&gt;&lt;img src="https://camo.githubusercontent.com/b20de8e30b90fda67073582722d7cf1b26ffa3e2/68747470733a2f2f696d672e736869656c64732e696f2f707970692f707976657273696f6e732f73706c6565746572" alt="PyPI - Python Version" data-canonical-src="https://img.shields.io/pypi/pyversions/spleeter" style="max-width:100%;"&gt;&lt;/a&gt; &lt;a href="https://badge.fury.io/py/spleeter" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/384c6765b84c81f0c37f7f1504ef7d512a97ee9f/68747470733a2f2f62616467652e667572792e696f2f70792f73706c65657465722e737667" alt="PyPI version" data-canonical-src="https://badge.fury.io/py/spleeter.svg" style="max-width:100%;"&gt;&lt;/a&gt; &lt;a href="https://anaconda.org/conda-forge/spleeter" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/c0bf059587f3514959bc38b37ba293816c8e6ad7/68747470733a2f2f696d672e736869656c64732e696f2f636f6e64612f766e2f636f6e64612d666f7267652f73706c6565746572" alt="Conda" data-canonical-src="https://img.shields.io/conda/vn/conda-forge/spleeter" style="max-width:100%;"&gt;&lt;/a&gt; &lt;a href="https://hub.docker.com/r/researchdeezer/spleeter" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/b99187b88e42d3d8ecadca2d07491b8619806840/68747470733a2f2f696d672e736869656c64732e696f2f646f636b65722f70756c6c732f72657365617263686465657a65722f73706c6565746572" alt="Docker Pulls" data-canonical-src="https://img.shields.io/docker/pulls/researchdeezer/spleeter" style="max-width:100%;"&gt;&lt;/a&gt; &lt;a href="https://colab.research.google.com/github/deezer/spleeter/blob/master/spleeter.ipynb" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/52feade06f2fecbf006889a904d221e6a730c194/68747470733a2f2f636f6c61622e72657365617263682e676f6f676c652e636f6d2f6173736574732f636f6c61622d62616467652e737667" alt="Open In Colab" data-canonical-src="https://colab.research.google.com/assets/colab-badge.svg" style="max-width:100%;"&gt;&lt;/a&gt; &lt;a href="https://gitter.im/spleeter/community" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/20d7543bc8280bf8134b686c46c7b7e2c0a467fd/68747470733a2f2f6261646765732e6769747465722e696d2f67697474657248512f6769747465722e706e67" alt="Gitter chat" data-canonical-src="https://badges.gitter.im/gitterHQ/gitter.png" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-about" class="anchor" aria-hidden="true" href="#about"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;About&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;Spleeter&lt;/strong&gt; is the &lt;a href="https://www.deezer.com/" rel="nofollow"&gt;Deezer&lt;/a&gt; source separation library with pretrained models
written in &lt;a href="https://www.python.org/" rel="nofollow"&gt;Python&lt;/a&gt; and uses &lt;a href="https://tensorflow.org/" rel="nofollow"&gt;Tensorflow&lt;/a&gt;. It makes it easy
to train source separation model (assuming you have a dataset of isolated sources), and provides
already trained state of the art model for performing various flavour of separation :&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Vocals (singing voice) / accompaniment separation (&lt;a href="https://github.com/deezer/spleeter/wiki/2.-Getting-started#using-2stems-model"&gt;2 stems&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;Vocals / drums / bass / other separation (&lt;a href="https://github.com/deezer/spleeter/wiki/2.-Getting-started#using-4stems-model"&gt;4 stems&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;Vocals / drums / bass / piano / other separation (&lt;a href="https://github.com/deezer/spleeter/wiki/2.-Getting-started#using-5stems-model"&gt;5 stems&lt;/a&gt;)&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;2 stems and 4 stems models have state of the art performances on the &lt;a href="https://sigsep.github.io/datasets/musdb.html" rel="nofollow"&gt;musdb&lt;/a&gt; dataset. &lt;strong&gt;Spleeter&lt;/strong&gt; is also very fast as it can perform separation of audio files to 4 stems 100x faster than real-time when run on a GPU.&lt;/p&gt;
&lt;p&gt;We designed &lt;strong&gt;Spleeter&lt;/strong&gt; so you can use it straight from &lt;a href="https://github.com/deezer/spleeter/wiki/2.-Getting-started#usage"&gt;command line&lt;/a&gt;
as well as directly in your own development pipeline as a &lt;a href="https://github.com/deezer/spleeter/wiki/4.-API-Reference#separator"&gt;Python library&lt;/a&gt;. It can be installed with &lt;a href="https://github.com/deezer/spleeter/wiki/1.-Installation#using-conda"&gt;Conda&lt;/a&gt;,
with &lt;a href="https://github.com/deezer/spleeter/wiki/1.-Installation#using-pip"&gt;pip&lt;/a&gt; or be used with
&lt;a href="https://github.com/deezer/spleeter/wiki/2.-Getting-started#using-docker-image"&gt;Docker&lt;/a&gt;.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-quick-start" class="anchor" aria-hidden="true" href="#quick-start"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Quick start&lt;/h2&gt;
&lt;p&gt;Want to try it out ? Just clone the repository and install a
&lt;a href="https://github.com/deezer/spleeter/wiki/1.-Installation#using-conda"&gt;Conda&lt;/a&gt;
environment to start separating audio file as follows:&lt;/p&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt;git clone https://github.com/Deezer/spleeter
conda install -c conda-forge spleeter
spleeter separate -i spleeter/audio_example.mp3 -p spleeter:2stems -o output&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;You should get two separated audio files (&lt;code&gt;vocals.wav&lt;/code&gt; and &lt;code&gt;accompaniment.wav&lt;/code&gt;)
in the &lt;code&gt;output/audio_example&lt;/code&gt; folder.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-windows-users" class="anchor" aria-hidden="true" href="#windows-users"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Windows users&lt;/h3&gt;
&lt;p&gt;It appears that sometimes the shortcut command &lt;code&gt;spleeter&lt;/code&gt; does not work properly on windows. This is a known issue that we will hopefully fix soon. In the meantime replace &lt;code&gt;spleeter separate&lt;/code&gt; by &lt;code&gt;python -m spleeter separate&lt;/code&gt; in the above line and it should work.&lt;/p&gt;
&lt;p&gt;For a more detailed documentation, please check the &lt;a href="https://github.com/deezer/spleeter/wiki"&gt;repository wiki&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Want to try it out but don't want to install anything ? we've setup a &lt;a href="https://colab.research.google.com/github/deezer/spleeter/blob/master/spleeter.ipynb" rel="nofollow"&gt;Google Colab&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-reference" class="anchor" aria-hidden="true" href="#reference"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Reference&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Deezer Research - Source Separation Engine Story - deezer.io blog post:
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://deezer.io/releasing-spleeter-deezer-r-d-source-separation-engine-2b88985e797e" rel="nofollow"&gt;English version&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://dzr.fm/splitterjp" rel="nofollow"&gt;Japanese version&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="http://archives.ismir.net/ismir2019/latebreaking/000036.pdf" rel="nofollow"&gt;Music Source Separation tool with pre-trained models / ISMIR2019 extended abstract&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;If you use &lt;strong&gt;Spleeter&lt;/strong&gt; in your work, please cite:&lt;/p&gt;
&lt;div class="highlight highlight-text-bibtex"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;@misc&lt;/span&gt;{&lt;span class="pl-en"&gt;spleeter2019&lt;/span&gt;,
  &lt;span class="pl-s"&gt;title&lt;/span&gt;=&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;{&lt;/span&gt;Spleeter: A Fast And State-of-the Art Music Source Separation Tool With Pre-trained Models&lt;span class="pl-pds"&gt;}&lt;/span&gt;&lt;/span&gt;,
  &lt;span class="pl-s"&gt;author&lt;/span&gt;=&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;{&lt;/span&gt;Romain Hennequin and Anis Khlif and Felix Voituret and Manuel Moussallam&lt;span class="pl-pds"&gt;}&lt;/span&gt;&lt;/span&gt;,
  &lt;span class="pl-s"&gt;howpublished&lt;/span&gt;=&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;{&lt;/span&gt;Late-Breaking/Demo ISMIR 2019&lt;span class="pl-pds"&gt;}&lt;/span&gt;&lt;/span&gt;,
  &lt;span class="pl-s"&gt;month&lt;/span&gt;=&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;{&lt;/span&gt;November&lt;span class="pl-pds"&gt;}&lt;/span&gt;&lt;/span&gt;,
  &lt;span class="pl-s"&gt;note&lt;/span&gt;=&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;{&lt;/span&gt;Deezer Research&lt;span class="pl-pds"&gt;}&lt;/span&gt;&lt;/span&gt;,
  &lt;span class="pl-s"&gt;year&lt;/span&gt;=&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;{&lt;/span&gt;2019&lt;span class="pl-pds"&gt;}&lt;/span&gt;&lt;/span&gt;
}&lt;/pre&gt;&lt;/div&gt;
&lt;h2&gt;&lt;a id="user-content-license" class="anchor" aria-hidden="true" href="#license"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;License&lt;/h2&gt;
&lt;p&gt;The code of &lt;strong&gt;Spleeter&lt;/strong&gt; is MIT-licensed.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-disclaimer" class="anchor" aria-hidden="true" href="#disclaimer"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Disclaimer&lt;/h2&gt;
&lt;p&gt;If you plan to use Spleeter on copyrighted material, make sure you get proper authorization from right owners beforehand.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-note" class="anchor" aria-hidden="true" href="#note"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Note&lt;/h2&gt;
&lt;p&gt;This repository include a demo audio file &lt;code&gt;audio_example.mp3&lt;/code&gt; which is an excerpt
from Slow Motion Dream by Steven M Bryant (c) copyright 2011 Licensed under a Creative
Commons Attribution (3.0) license. &lt;a href="http://dig.ccmixter.org/files/stevieb357/34740" rel="nofollow"&gt;http://dig.ccmixter.org/files/stevieb357/34740&lt;/a&gt;
Ft: CSoul,Alex Beroza &amp;amp; Robert Siekawitch&lt;/p&gt;
&lt;/article&gt;&lt;/div&gt;</description><author>deezer</author><guid isPermaLink="false">https://github.com/deezer/spleeter</guid><pubDate>Mon, 10 Feb 2020 00:11:00 GMT</pubDate></item><item><title>baowenbo/DAIN #12 in Python, This week</title><link>https://github.com/baowenbo/DAIN</link><description>&lt;p&gt;&lt;i&gt;Depth-Aware Video Frame Interpolation (CVPR 2019)&lt;/i&gt;&lt;/p&gt;&lt;div id="readme" class="md" data-path="README.md"&gt;&lt;article class="markdown-body entry-content p-5" itemprop="text"&gt;&lt;h1&gt;&lt;a id="user-content-dain-depth-aware-video-frame-interpolation" class="anchor" aria-hidden="true" href="#dain-depth-aware-video-frame-interpolation"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;DAIN (Depth-Aware Video Frame Interpolation)&lt;/h1&gt;
&lt;p&gt;&lt;a href="https://sites.google.com/view/wenbobao/dain" rel="nofollow"&gt;Project&lt;/a&gt; &lt;strong&gt;|&lt;/strong&gt; &lt;a href="http://arxiv.org/abs/1904.00830" rel="nofollow"&gt;Paper&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href="https://sites.google.com/view/wenbobao/home" rel="nofollow"&gt;Wenbo Bao&lt;/a&gt;,
&lt;a href="http://graduatestudents.ucmerced.edu/wlai24/" rel="nofollow"&gt;Wei-Sheng Lai&lt;/a&gt;,
&lt;a href="https://sites.google.com/site/chaoma99/" rel="nofollow"&gt;Chao Ma&lt;/a&gt;,
Xiaoyun Zhang,
Zhiyong Gao,
and &lt;a href="http://faculty.ucmerced.edu/mhyang/" rel="nofollow"&gt;Ming-Hsuan Yang&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;IEEE Conference on Computer Vision and Pattern Recognition, Long Beach, CVPR 2019&lt;/p&gt;
&lt;p&gt;This work is developed based on our TPAMI work &lt;a href="https://github.com/baowenbo/MEMC-Net"&gt;MEMC-Net&lt;/a&gt;, where we propose the adaptive warping layer. Please also consider referring to it.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-table-of-contents" class="anchor" aria-hidden="true" href="#table-of-contents"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Table of Contents&lt;/h3&gt;
&lt;ol&gt;
&lt;li&gt;&lt;a href="#introduction"&gt;Introduction&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#citation"&gt;Citation&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#requirements-and-dependencies"&gt;Requirements and Dependencies&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#installation"&gt;Installation&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#testing-pre-trained-models"&gt;Testing Pre-trained Models&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#downloading-results"&gt;Downloading Results&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#slow-motion-generation"&gt;Slow-motion Generation&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#training-new-models"&gt;Training New Models&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;h3&gt;&lt;a id="user-content-introduction" class="anchor" aria-hidden="true" href="#introduction"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Introduction&lt;/h3&gt;
&lt;p&gt;We propose the &lt;strong&gt;D&lt;/strong&gt;epth-&lt;strong&gt;A&lt;/strong&gt;ware video frame &lt;strong&gt;IN&lt;/strong&gt;terpolation (&lt;strong&gt;DAIN&lt;/strong&gt;) model to explicitly detect the occlusion by exploring the depth cue.
We develop a depth-aware flow projection layer to synthesize intermediate flows that preferably sample closer objects than farther ones.
Our method achieves state-of-the-art performance on the Middlebury dataset.
We provide videos &lt;a href="https://www.youtube.com/watch?v=-f8f0igQi5I&amp;amp;t=5s" rel="nofollow"&gt;here&lt;/a&gt;.&lt;/p&gt;


&lt;p&gt;
&lt;a target="_blank" rel="noopener noreferrer" href="https://camo.githubusercontent.com/6250fdda565ca8b72bb40fd5abdfeb62e2da394e/68747470733a2f2f64726976652e676f6f676c652e636f6d2f75633f6578706f72743d766965772669643d3159574179414a33543438664d4676324b386a38774956636d516d333963526f66"&gt;&lt;img src="https://camo.githubusercontent.com/6250fdda565ca8b72bb40fd5abdfeb62e2da394e/68747470733a2f2f64726976652e676f6f676c652e636f6d2f75633f6578706f72743d766965772669643d3159574179414a33543438664d4676324b386a38774956636d516d333963526f66" width="200" data-canonical-src="https://drive.google.com/uc?export=view&amp;amp;id=1YWAyAJ3T48fMFv2K8j8wIVcmQm39cRof" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a target="_blank" rel="noopener noreferrer" href="https://camo.githubusercontent.com/0c626cd20e01cb53df7f8aaf28b6853ba2d58da0/68747470733a2f2f64726976652e676f6f676c652e636f6d2f75633f6578706f72743d766965772669643d314367434c6d56435f575456544163415f496457624c7152384d5331387a486f61"&gt;&lt;img src="https://camo.githubusercontent.com/0c626cd20e01cb53df7f8aaf28b6853ba2d58da0/68747470733a2f2f64726976652e676f6f676c652e636f6d2f75633f6578706f72743d766965772669643d314367434c6d56435f575456544163415f496457624c7152384d5331387a486f61" width="200" data-canonical-src="https://drive.google.com/uc?export=view&amp;amp;id=1CgCLmVC_WTVTAcA_IdWbLqR8MS18zHoa" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a target="_blank" rel="noopener noreferrer" href="https://camo.githubusercontent.com/28a8d756ef122a38b057b9fcb2b3f64f8af59ae5/68747470733a2f2f64726976652e676f6f676c652e636f6d2f75633f6578706f72743d766965772669643d31705748747942535a734f5443374e5456644854727631572d6478613935424c6f"&gt;&lt;img src="https://camo.githubusercontent.com/28a8d756ef122a38b057b9fcb2b3f64f8af59ae5/68747470733a2f2f64726976652e676f6f676c652e636f6d2f75633f6578706f72743d766965772669643d31705748747942535a734f5443374e5456644854727631572d6478613935424c6f" width="200" data-canonical-src="https://drive.google.com/uc?export=view&amp;amp;id=1pWHtyBSZsOTC7NTVdHTrv1W-dxa95BLo" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a target="_blank" rel="noopener noreferrer" href="https://camo.githubusercontent.com/bd4633d487b2a4f9a596990f651641f7df9ff12c/68747470733a2f2f64726976652e676f6f676c652e636f6d2f75633f6578706f72743d766965772669643d313730766478414e476f4e4b4f355f384d594f756944766f49587a756376374857"&gt;&lt;img src="https://camo.githubusercontent.com/bd4633d487b2a4f9a596990f651641f7df9ff12c/68747470733a2f2f64726976652e676f6f676c652e636f6d2f75633f6578706f72743d766965772669643d313730766478414e476f4e4b4f355f384d594f756944766f49587a756376374857" width="200" data-canonical-src="https://drive.google.com/uc?export=view&amp;amp;id=170vdxANGoNKO5_8MYOuiDvoIXzucv7HW" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;
&lt;a target="_blank" rel="noopener noreferrer" href="https://camo.githubusercontent.com/0e7e1066b97887c91d4d7ebcb070743af55fdfb0/68747470733a2f2f64726976652e676f6f676c652e636f6d2f75633f6578706f72743d766965772669643d31734a4c776451644c364a595853516f5f4265763061514d6c655761637843734e"&gt;&lt;img src="https://camo.githubusercontent.com/0e7e1066b97887c91d4d7ebcb070743af55fdfb0/68747470733a2f2f64726976652e676f6f676c652e636f6d2f75633f6578706f72743d766965772669643d31734a4c776451644c364a595853516f5f4265763061514d6c655761637843734e" width="200" data-canonical-src="https://drive.google.com/uc?export=view&amp;amp;id=1sJLwdQdL6JYXSQo_Bev0aQMleWacxCsN" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a target="_blank" rel="noopener noreferrer" href="https://camo.githubusercontent.com/764633e1b37eeac66cc4c18460f1e64f6c6f40f2/68747470733a2f2f64726976652e676f6f676c652e636f6d2f75633f6578706f72743d766965772669643d316a476a3355644770706f4a4f30324f66385a614e5871444834666e587551384f"&gt;&lt;img src="https://camo.githubusercontent.com/764633e1b37eeac66cc4c18460f1e64f6c6f40f2/68747470733a2f2f64726976652e676f6f676c652e636f6d2f75633f6578706f72743d766965772669643d316a476a3355644770706f4a4f30324f66385a614e5871444834666e587551384f" width="200" data-canonical-src="https://drive.google.com/uc?export=view&amp;amp;id=1jGj3UdGppoJO02Of8ZaNXqDH4fnXuQ8O" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a target="_blank" rel="noopener noreferrer" href="https://camo.githubusercontent.com/05155533ceb32decb97dc3e4f48b417b79fb14ed/68747470733a2f2f64726976652e676f6f676c652e636f6d2f75633f6578706f72743d766965772669643d31763537524d6d397835764d33366d43675079356872657358445a577477335673"&gt;&lt;img src="https://camo.githubusercontent.com/05155533ceb32decb97dc3e4f48b417b79fb14ed/68747470733a2f2f64726976652e676f6f676c652e636f6d2f75633f6578706f72743d766965772669643d31763537524d6d397835764d33366d43675079356872657358445a577477335673" width="200" data-canonical-src="https://drive.google.com/uc?export=view&amp;amp;id=1v57RMm9x5vM36mCgPy5hresXDZWtw3Vs" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a target="_blank" rel="noopener noreferrer" href="https://camo.githubusercontent.com/50c764e2a7d9376881d0237e1db20e3c3569fba7/68747470733a2f2f64726976652e676f6f676c652e636f6d2f75633f6578706f72743d766965772669643d314c4d77535530507247345f4761446a5752493276396876577059777a524b6361"&gt;&lt;img src="https://camo.githubusercontent.com/50c764e2a7d9376881d0237e1db20e3c3569fba7/68747470733a2f2f64726976652e676f6f676c652e636f6d2f75633f6578706f72743d766965772669643d314c4d77535530507247345f4761446a5752493276396876577059777a524b6361" width="200" data-canonical-src="https://drive.google.com/uc?export=view&amp;amp;id=1LMwSU0PrG4_GaDjWRI2v9hvWpYwzRKca" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;
&lt;a target="_blank" rel="noopener noreferrer" href="https://camo.githubusercontent.com/abfa335f54af8f2e5df0d2d5f2fc8f37bf3b2967/68747470733a2f2f64726976652e676f6f676c652e636f6d2f75633f6578706f72743d766965772669643d317069506e456578754861694172345a7a575341784769317531586f5f36765070"&gt;&lt;img src="https://camo.githubusercontent.com/abfa335f54af8f2e5df0d2d5f2fc8f37bf3b2967/68747470733a2f2f64726976652e676f6f676c652e636f6d2f75633f6578706f72743d766965772669643d317069506e456578754861694172345a7a575341784769317531586f5f36765070" width="200" data-canonical-src="https://drive.google.com/uc?export=view&amp;amp;id=1piPnEexuHaiAr4ZzWSAxGi1u1Xo_6vPp" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a target="_blank" rel="noopener noreferrer" href="https://camo.githubusercontent.com/e5706dbb382ffae897f35558f3a50f798149da36/68747470733a2f2f64726976652e676f6f676c652e636f6d2f75633f6578706f72743d766965772669643d316b6f72625873477053674a6e37544842486b4c5256724a4d74437435595a5042"&gt;&lt;img src="https://camo.githubusercontent.com/e5706dbb382ffae897f35558f3a50f798149da36/68747470733a2f2f64726976652e676f6f676c652e636f6d2f75633f6578706f72743d766965772669643d316b6f72625873477053674a6e37544842486b4c5256724a4d74437435595a5042" width="200" data-canonical-src="https://drive.google.com/uc?export=view&amp;amp;id=1korbXsGpSgJn7THBHkLRVrJMtCt5YZPB" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a target="_blank" rel="noopener noreferrer" href="https://camo.githubusercontent.com/56ba4b81bd2b0883cd7e279322f60839ac428a64/68747470733a2f2f64726976652e676f6f676c652e636f6d2f75633f6578706f72743d766965772669643d315f346b566c6876726d4376353461586937765a4d6b332d467452514637733073"&gt;&lt;img src="https://camo.githubusercontent.com/56ba4b81bd2b0883cd7e279322f60839ac428a64/68747470733a2f2f64726976652e676f6f676c652e636f6d2f75633f6578706f72743d766965772669643d315f346b566c6876726d4376353461586937765a4d6b332d467452514637733073" width="200" data-canonical-src="https://drive.google.com/uc?export=view&amp;amp;id=1_4kVlhvrmCv54aXi7vZMk3-FtRQF7s0s" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a target="_blank" rel="noopener noreferrer" href="https://camo.githubusercontent.com/73436fed8985b61b2ea7af3607b786c35463b061/68747470733a2f2f64726976652e676f6f676c652e636f6d2f75633f6578706f72743d766965772669643d31346e3778766239686a544b71666372375a70454679664d76783645384e68445f"&gt;&lt;img src="https://camo.githubusercontent.com/73436fed8985b61b2ea7af3607b786c35463b061/68747470733a2f2f64726976652e676f6f676c652e636f6d2f75633f6578706f72743d766965772669643d31346e3778766239686a544b71666372375a70454679664d76783645384e68445f" width="200" data-canonical-src="https://drive.google.com/uc?export=view&amp;amp;id=14n7xvb9hjTKqfcr7ZpEFyfMvx6E8NhD_" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-citation" class="anchor" aria-hidden="true" href="#citation"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Citation&lt;/h3&gt;
&lt;p&gt;If you find the code and datasets useful in your research, please cite:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;@inproceedings{DAIN,
    author    = {Bao, Wenbo and Lai, Wei-Sheng and Ma, Chao and Zhang, Xiaoyun and Gao, Zhiyong and Yang, Ming-Hsuan}, 
    title     = {Depth-Aware Video Frame Interpolation}, 
    booktitle = {IEEE Conference on Computer Vision and Pattern Recognition},
    year      = {2019}
}
@article{MEMC-Net,
     title={MEMC-Net: Motion Estimation and Motion Compensation Driven Neural Network for Video Interpolation and Enhancement},
     author={Bao, Wenbo and Lai, Wei-Sheng, and Zhang, Xiaoyun and Gao, Zhiyong and Yang, Ming-Hsuan},
     journal={IEEE Transactions on Pattern Analysis and Machine Intelligence},
     doi={10.1109/TPAMI.2019.2941941},
     year={2018}
}
&lt;/code&gt;&lt;/pre&gt;
&lt;h3&gt;&lt;a id="user-content-requirements-and-dependencies" class="anchor" aria-hidden="true" href="#requirements-and-dependencies"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Requirements and Dependencies&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;Ubuntu (We test with Ubuntu = 16.04.5 LTS)&lt;/li&gt;
&lt;li&gt;Python (We test with Python = 3.6.8 in Anaconda3 = 4.1.1)&lt;/li&gt;
&lt;li&gt;Cuda &amp;amp; Cudnn (We test with Cuda = 9.0 and Cudnn = 7.0)&lt;/li&gt;
&lt;li&gt;PyTorch (The customized depth-aware flow projection and other layers require ATen API in PyTorch = 1.0.0)&lt;/li&gt;
&lt;li&gt;GCC (Compiling PyTorch 1.0.0 extension files (.c/.cu) requires gcc = 4.9.1 and nvcc = 9.0 compilers)&lt;/li&gt;
&lt;li&gt;NVIDIA GPU (We use Titan X (Pascal) with compute = 6.1, but we support compute_50/52/60/61 devices, should you have devices with higher compute capability, please revise &lt;a href="https://github.com/baowenbo/DAIN/blob/master/my_package/DepthFlowProjection/setup.py"&gt;this&lt;/a&gt;)&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;&lt;a id="user-content-installation" class="anchor" aria-hidden="true" href="#installation"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Installation&lt;/h3&gt;
&lt;p&gt;Download repository:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;$ git clone https://github.com/baowenbo/DAIN.git
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Before building Pytorch extensions, be sure you have &lt;code&gt;pytorch &amp;gt;= 1.0.0&lt;/code&gt;:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;$ python -c "import torch; print(torch.__version__)"
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Generate our PyTorch extensions:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;$ cd DAIN
$ cd my_package 
$ ./build.sh
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Generate the Correlation package required by &lt;a href="https://github.com/NVlabs/PWC-Net/tree/master/PyTorch/external_packages/correlation-pytorch-master"&gt;PWCNet&lt;/a&gt;:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;$ cd ../PWCNet/correlation_package_pytorch1_0
$ ./build.sh
&lt;/code&gt;&lt;/pre&gt;
&lt;h3&gt;&lt;a id="user-content-testing-pre-trained-models" class="anchor" aria-hidden="true" href="#testing-pre-trained-models"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Testing Pre-trained Models&lt;/h3&gt;
&lt;p&gt;Make model weights dir and Middlebury dataset dir:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;$ cd DAIN
$ mkdir model_weights
$ mkdir MiddleBurySet
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Download pretrained models,&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;$ cd model_weights
$ wget http://vllab1.ucmerced.edu/~wenbobao/DAIN/best.pth
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;and Middlebury dataset:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;$ cd ../MiddleBurySet
$ wget http://vision.middlebury.edu/flow/data/comp/zip/other-color-allframes.zip
$ unzip other-color-allframes.zip
$ wget http://vision.middlebury.edu/flow/data/comp/zip/other-gt-interp.zip
$ unzip other-gt-interp.zip
$ cd ..
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;We are good to go by:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;$ CUDA_VISIBLE_DEVICES=0 python demo_MiddleBury.py
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;The interpolated results are under &lt;code&gt;MiddleBurySet/other-result-author/[random number]/&lt;/code&gt;, where the &lt;code&gt;random number&lt;/code&gt; is used to distinguish different runnings.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-downloading-results" class="anchor" aria-hidden="true" href="#downloading-results"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Downloading Results&lt;/h3&gt;
&lt;p&gt;Our DAIN model achieves the state-of-the-art performance on the UCF101, Vimeo90K, and Middlebury (&lt;a href="http://vision.middlebury.edu/flow/eval/results/results-n1.php" rel="nofollow"&gt;&lt;em&gt;eval&lt;/em&gt;&lt;/a&gt; and &lt;em&gt;other&lt;/em&gt;).
Dowload our interpolated results with:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;$ wget http://vllab1.ucmerced.edu/~wenbobao/DAIN/UCF101_DAIN.zip
$ wget http://vllab1.ucmerced.edu/~wenbobao/DAIN/Vimeo90K_interp_DAIN.zip
$ wget http://vllab1.ucmerced.edu/~wenbobao/DAIN/Middlebury_eval_DAIN.zip
$ wget http://vllab1.ucmerced.edu/~wenbobao/DAIN/Middlebury_other_DAIN.zip
&lt;/code&gt;&lt;/pre&gt;
&lt;h3&gt;&lt;a id="user-content-slow-motion-generation" class="anchor" aria-hidden="true" href="#slow-motion-generation"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Slow-motion Generation&lt;/h3&gt;
&lt;p&gt;Our model is fully capable of generating slow-motion effect with minor modification on the network architecture.
Run the following code by specifying &lt;code&gt;time_step = 0.25&lt;/code&gt; to generate x4 slow-motion effect:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;$ CUDA_VISIBLE_DEVICES=0 python demo_MiddleBury_slowmotion.py --netName DAIN_slowmotion --time_step 0.25
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;or set &lt;code&gt;time_step&lt;/code&gt; to &lt;code&gt;0.125&lt;/code&gt; or &lt;code&gt;0.1&lt;/code&gt; as follows&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;$ CUDA_VISIBLE_DEVICES=0 python demo_MiddleBury_slowmotion.py --netName DAIN_slowmotion --time_step 0.125
$ CUDA_VISIBLE_DEVICES=0 python demo_MiddleBury_slowmotion.py --netName DAIN_slowmotion --time_step 0.1
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;to generate x8 and x10 slow-motion respectively. Or if you would like to have x100 slow-motion for a little fun.&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;$ CUDA_VISIBLE_DEVICES=0 python demo_MiddleBury_slowmotion.py --netName DAIN_slowmotion --time_step 0.01
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;You may also want to create gif animations by:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;$ cd MiddleBurySet/other-result-author/[random number]/Beanbags
$ convert -delay 1 *.png -loop 0 Beanbags.gif //1*10ms delay 
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Have fun and enjoy yourself!&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-training-new-models" class="anchor" aria-hidden="true" href="#training-new-models"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Training New Models&lt;/h3&gt;
&lt;p&gt;Download the Vimeo90K triplet dataset for video frame interpolation task, also see &lt;a href="https://github.com/anchen1011/toflow/blob/master/download_dataset.sh"&gt;here&lt;/a&gt; by &lt;a href="https://arxiv.org/abs/1711.09078" rel="nofollow"&gt;Xue et al., IJCV19&lt;/a&gt;.&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;$ cd DAIN
$ mkdir /path/to/your/dataset &amp;amp; cd /path/to/your/dataset 
$ wget http://data.csail.mit.edu/tofu/dataset/vimeo_triplet.zip
$ unzip vimeo_triplet.zip
$ rm vimeo_triplet.zip
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Download the pretrained MegaDepth and PWCNet models&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;$ cd MegaDepth/checkpoints/test_local
$ wget http://vllab1.ucmerced.edu/~wenbobao/DAIN/best_generalization_net_G.pth
$ cd ../../../PWCNet
$ wget http://vllab1.ucmerced.edu/~wenbobao/DAIN/pwc_net.pth.tar
$ cd  ..
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Run the training script:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;$ CUDA_VISIBLE_DEVICES=0 python train.py --datasetPath /path/to/your/dataset --batch_size 1 --save_which 1 --lr 0.0001 --rectify_lr 0.0001 --flow_lr_coe 0.01 --occ_lr_coe 0.0 --filter_lr_coe 1.0 --ctx_lr_coe 1.0 --alpha 0.0 1.0 --patience 4 --factor 0.2
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;The optimized models will be saved to the &lt;code&gt;model_weights/[random number]&lt;/code&gt; directory, where [random number] is generated for different runs.&lt;/p&gt;
&lt;p&gt;Replace the pre-trained &lt;code&gt;model_weights/best.pth&lt;/code&gt; model with the newly trained &lt;code&gt;model_weights/[random number]/best.pth&lt;/code&gt; model.
Then test the new model by executing:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;$ CUDA_VISIBLE_DEVICES=0 python demo_MiddleBury.py
&lt;/code&gt;&lt;/pre&gt;
&lt;h3&gt;&lt;a id="user-content-contact" class="anchor" aria-hidden="true" href="#contact"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Contact&lt;/h3&gt;
&lt;p&gt;&lt;a href="mailto:bwb0813@gmail.com"&gt;Wenbo Bao&lt;/a&gt;; &lt;a href="mailto:phoenix104104@gmail.com"&gt;Wei-Sheng (Jason) Lai&lt;/a&gt;&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-license" class="anchor" aria-hidden="true" href="#license"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;License&lt;/h3&gt;
&lt;p&gt;See &lt;a href="https://github.com/baowenbo/DAIN/blob/master/LICENSE"&gt;MIT License&lt;/a&gt;&lt;/p&gt;
&lt;/article&gt;&lt;/div&gt;</description><author>baowenbo</author><guid isPermaLink="false">https://github.com/baowenbo/DAIN</guid><pubDate>Mon, 10 Feb 2020 00:12:00 GMT</pubDate></item><item><title>ReFirmLabs/binwalk #13 in Python, This week</title><link>https://github.com/ReFirmLabs/binwalk</link><description>&lt;p&gt;&lt;i&gt;Firmware Analysis Tool&lt;/i&gt;&lt;/p&gt;&lt;div id="readme" class="md" data-path="README.md"&gt;&lt;article class="markdown-body entry-content p-5" itemprop="text"&gt;&lt;h1&gt;&lt;a id="user-content-binwalk" class="anchor" aria-hidden="true" href="#binwalk"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Binwalk&lt;/h1&gt;
&lt;p&gt;&lt;a href="https://travis-ci.org/ReFirmLabs/binwalk" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/23716dc6ba56b5aaf4afd5f04e36693c84d74a0b/68747470733a2f2f7472617669732d63692e6f72672f52654669726d4c6162732f62696e77616c6b2e7376673f6272616e63683d6d6173746572" alt="Build Status" data-canonical-src="https://travis-ci.org/ReFirmLabs/binwalk.svg?branch=master" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://GitHub.com/ReFirmLabs/binwalk/graphs/commit-activity"&gt;&lt;img src="https://camo.githubusercontent.com/0e6a3f975d68b438efec82fef1f9491600606df8/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f4d61696e7461696e65642533462d7965732d677265656e2e737667" alt="Maintenance" data-canonical-src="https://img.shields.io/badge/Maintained%3F-yes-green.svg" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://github.com/ReFirmLabs/binwalk/blob/master/LICENSE"&gt;&lt;img src="https://camo.githubusercontent.com/6aaa91b431e6d63e7a240d0c06ee3cddad523e92/68747470733a2f2f696d672e736869656c64732e696f2f6769746875622f6c6963656e73652f52654669726d4c6162732f62696e77616c6b2e737667" alt="GitHub license" data-canonical-src="https://img.shields.io/github/license/ReFirmLabs/binwalk.svg" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://github.com/ReFirmLabs/binwalk/stargazers"&gt;&lt;img src="https://camo.githubusercontent.com/a88519a3a41aa4684f66a4e6bcf581461373f93b/68747470733a2f2f696d672e736869656c64732e696f2f6769746875622f73746172732f6261646765732f736869656c64732e7376673f7374796c653d736f6369616c266c6162656c3d5374617273" alt="GitHub stars" data-canonical-src="https://img.shields.io/github/stars/badges/shields.svg?style=social&amp;amp;label=Stars" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Binwalk is a fast, easy to use tool for analyzing, reverse engineering, and extracting firmware images.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-installation-and-usage" class="anchor" aria-hidden="true" href="#installation-and-usage"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Installation and Usage&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="./INSTALL.md"&gt;Installation&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="./API.md"&gt;API&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/ReFirmLabs/binwalk/wiki/Supported-Platforms"&gt;Supported Platforms&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/ReFirmLabs/binwalk/wiki/Quick-Start-Guide"&gt;Getting Started&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/ReFirmLabs/binwalk/wiki/Usage"&gt;Binwalk Command Line Usage&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/ReFirmLabs/binwalk/wiki/Creating-Custom-Plugins"&gt;Binwalk IDA Plugin Usage&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;More information on &lt;a href="https://github.com/ReFirmLabs/binwalk/wiki"&gt;Wiki&lt;/a&gt;&lt;/p&gt;
&lt;h1&gt;&lt;a id="user-content-binwalk-professional-edition" class="anchor" aria-hidden="true" href="#binwalk-professional-edition"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Binwalk Professional Edition&lt;/h1&gt;
&lt;p&gt;After years of developing and supporting binwalk as an open source project we have finally sold out to the man and released a cloud-based firmware extraction engine called &lt;em&gt;Binwalk Pro&lt;/em&gt;. After all someone needs to pay devttys0 so he can buy more milling equipment and feed his children (in that order). Please consider subscribing and reap the benefits of getting actual customer support for all your firmware extraction needs. Please visit &lt;a href="https://www.refirmlabs.com/binwalk-pro/" rel="nofollow"&gt;https://www.refirmlabs.com/binwalk-pro/&lt;/a&gt; for more information.&lt;/p&gt;
&lt;/article&gt;&lt;/div&gt;</description><author>ReFirmLabs</author><guid isPermaLink="false">https://github.com/ReFirmLabs/binwalk</guid><pubDate>Mon, 10 Feb 2020 00:13:00 GMT</pubDate></item><item><title>KevinMusgrave/pytorch-metric-learning #14 in Python, This week</title><link>https://github.com/KevinMusgrave/pytorch-metric-learning</link><description>&lt;p&gt;&lt;i&gt;The easiest way to use deep metric learning in your application. Modular, flexible, and extensible. Written in PyTorch.&lt;/i&gt;&lt;/p&gt;&lt;div id="readme" class="md" data-path="README.md"&gt;&lt;article class="markdown-body entry-content p-5" itemprop="text"&gt;&lt;h1 align="center"&gt;&lt;a id="user-content-pytorch-metric-learning" class="anchor" aria-hidden="true" href="#pytorch-metric-learning"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;
PyTorch Metric Learning
&lt;/h1&gt;
&lt;p align="center"&gt;
 &lt;a href="https://badge.fury.io/py/pytorch-metric-learning" rel="nofollow"&gt;
     &lt;img alt="PyPi version" src="https://camo.githubusercontent.com/2fd28a878826d82d51a644705baba387404389c9/68747470733a2f2f62616467652e667572792e696f2f70792f7079746f7263682d6d65747269632d6c6561726e696e672e737667" data-canonical-src="https://badge.fury.io/py/pytorch-metric-learning.svg" style="max-width:100%;"&gt;
 &lt;/a&gt;
&lt;a href="https://pypistats.org/packages/pytorch-metric-learning" rel="nofollow"&gt;
     &lt;img alt="PyPi stats" src="https://camo.githubusercontent.com/b0010eb0806232873d5ae28d6be2ac82a464d923/68747470733a2f2f696d672e736869656c64732e696f2f707970692f646d2f7079746f7263682d6d65747269632d6c6561726e696e67" data-canonical-src="https://img.shields.io/pypi/dm/pytorch-metric-learning" style="max-width:100%;"&gt;
 &lt;/a&gt;
&lt;/p&gt;
 &lt;p align="center"&gt;
&lt;a href="https://anaconda.org/metric-learning/pytorch-metric-learning" rel="nofollow"&gt;
     &lt;img alt="Anaconda version" src="https://camo.githubusercontent.com/4215a2c49c6f8e8fdb241beecde502069065f168/68747470733a2f2f696d672e736869656c64732e696f2f636f6e64612f762f6d65747269632d6c6561726e696e672f7079746f7263682d6d65747269632d6c6561726e696e673f636f6c6f723d6272696768742d677265656e" data-canonical-src="https://img.shields.io/conda/v/metric-learning/pytorch-metric-learning?color=bright-green" style="max-width:100%;"&gt;
 &lt;/a&gt;
&lt;a href="https://anaconda.org/metric-learning/pytorch-metric-learning" rel="nofollow"&gt;
     &lt;img alt="Anaconda downloads" src="https://camo.githubusercontent.com/8d30ca06cca277b1e32d5d0f6998bbe47393b5f2/68747470733a2f2f696d672e736869656c64732e696f2f636f6e64612f646e2f6d65747269632d6c6561726e696e672f7079746f7263682d6d65747269632d6c6561726e696e673f636f6c6f723d6272696768742d677265656e" data-canonical-src="https://img.shields.io/conda/dn/metric-learning/pytorch-metric-learning?color=bright-green" style="max-width:100%;"&gt;
 &lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
 &lt;p align="center"&gt;
&lt;a href="https://github.com/KevinMusgrave/pytorch-metric-learning/commits/master"&gt;
     &lt;img alt="Commit activity" src="https://camo.githubusercontent.com/adb7bdf6a6bea905396f91569995778a067ad448/68747470733a2f2f696d672e736869656c64732e696f2f6769746875622f636f6d6d69742d61637469766974792f6d2f4b6576696e4d757367726176652f7079746f7263682d6d65747269632d6c6561726e696e67" data-canonical-src="https://img.shields.io/github/commit-activity/m/KevinMusgrave/pytorch-metric-learning" style="max-width:100%;"&gt;
 &lt;/a&gt;
&lt;a href="https://github.com/KevinMusgrave/pytorch-metric-learning/blob/master/LICENSE"&gt;
     &lt;img alt="License" src="https://camo.githubusercontent.com/4f7f2a04e5c5b9ebd108b5545eba7405c8e849c6/68747470733a2f2f696d672e736869656c64732e696f2f6769746875622f6c6963656e73652f4b6576696e4d757367726176652f7079746f7263682d6d65747269632d6c6561726e696e673f636f6c6f723d6272696768742d677265656e" data-canonical-src="https://img.shields.io/github/license/KevinMusgrave/pytorch-metric-learning?color=bright-green" style="max-width:100%;"&gt;
 &lt;/a&gt;
&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-documentation" class="anchor" aria-hidden="true" href="#documentation"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Documentation&lt;/h2&gt;
&lt;p&gt;&lt;a href="https://kevinmusgrave.github.io/pytorch-metric-learning/" rel="nofollow"&gt;&lt;strong&gt;View the documentation here&lt;/strong&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-benefits-of-this-library" class="anchor" aria-hidden="true" href="#benefits-of-this-library"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Benefits of this library&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;Ease of use
&lt;ul&gt;
&lt;li&gt;Add metric learning to your application with just 2 lines of code in your training loop.&lt;/li&gt;
&lt;li&gt;Mine pairs and triplets with a single function call.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Flexibility
&lt;ul&gt;
&lt;li&gt;Mix and match losses, miners, and trainers in ways that other libraries don't allow.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h2&gt;&lt;a id="user-content-installation" class="anchor" aria-hidden="true" href="#installation"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Installation:&lt;/h2&gt;
&lt;p&gt;Conda:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;conda install pytorch-metric-learning -c metric-learning
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Pip:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;pip install pytorch-metric-learning
&lt;/code&gt;&lt;/pre&gt;
&lt;h2&gt;&lt;a id="user-content-benchmark-results" class="anchor" aria-hidden="true" href="#benchmark-results"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Benchmark results&lt;/h2&gt;
&lt;p&gt;See &lt;a href="https://github.com/KevinMusgrave/powerful-benchmarker/"&gt;powerful-benchmarker&lt;/a&gt; to view benchmark results and to use the benchmarking tool.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-library-contents" class="anchor" aria-hidden="true" href="#library-contents"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Library contents&lt;/h2&gt;
&lt;h3&gt;&lt;a id="user-content-losses" class="anchor" aria-hidden="true" href="#losses"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;a href="https://kevinmusgrave.github.io/pytorch-metric-learning/losses" rel="nofollow"&gt;Losses&lt;/a&gt;:&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://kevinmusgrave.github.io/pytorch-metric-learning/losses/#angularloss" rel="nofollow"&gt;&lt;strong&gt;AngularLoss&lt;/strong&gt;&lt;/a&gt; (&lt;a href="https://arxiv.org/pdf/1708.01682.pdf" rel="nofollow"&gt;Deep Metric Learning with Angular Loss&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;a href="https://kevinmusgrave.github.io/pytorch-metric-learning/losses/#arcfaceloss" rel="nofollow"&gt;&lt;strong&gt;ArcFaceLoss&lt;/strong&gt;&lt;/a&gt; (&lt;a href="https://arxiv.org/pdf/1801.07698.pdf" rel="nofollow"&gt;ArcFace: Additive Angular Margin Loss for Deep Face Recognition&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;a href="https://kevinmusgrave.github.io/pytorch-metric-learning/losses/#contrastiveloss" rel="nofollow"&gt;&lt;strong&gt;ContrastiveLoss&lt;/strong&gt;&lt;/a&gt; (&lt;a href="http://yann.lecun.com/exdb/publis/pdf/chopra-05.pdf" rel="nofollow"&gt;Learning a similarity metric discriminatively, with application to face verification&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;a href="https://kevinmusgrave.github.io/pytorch-metric-learning/losses/#cosfaceloss" rel="nofollow"&gt;&lt;strong&gt;CosFaceLoss&lt;/strong&gt;&lt;/a&gt; (&lt;a href="https://arxiv.org/pdf/1801.09414.pdf" rel="nofollow"&gt;CosFace: Large Margin Cosine Loss for Deep Face Recognition&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;a href="https://kevinmusgrave.github.io/pytorch-metric-learning/losses/#fastaploss" rel="nofollow"&gt;&lt;strong&gt;FastAPLoss&lt;/strong&gt;&lt;/a&gt; (&lt;a href="http://openaccess.thecvf.com/content_CVPR_2019/papers/Cakir_Deep_Metric_Learning_to_Rank_CVPR_2019_paper.pdf" rel="nofollow"&gt;Deep Metric Learning to Rank&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;a href="https://kevinmusgrave.github.io/pytorch-metric-learning/losses/#generalizedliftedstructureloss" rel="nofollow"&gt;&lt;strong&gt;GeneralizedLiftedStructureLoss&lt;/strong&gt;&lt;/a&gt; (&lt;a href="https://arxiv.org/pdf/1511.06452.pdf" rel="nofollow"&gt;Deep Metric Learning via Lifted Structured Feature Embedding&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;a href="https://kevinmusgrave.github.io/pytorch-metric-learning/losses/#largemarginsoftmaxloss" rel="nofollow"&gt;&lt;strong&gt;LargeMarginSoftmaxLoss&lt;/strong&gt;&lt;/a&gt; (&lt;a href="https://arxiv.org/pdf/1612.02295.pdf" rel="nofollow"&gt;Large-Margin Softmax Loss for Convolutional Neural Networks&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;a href="https://kevinmusgrave.github.io/pytorch-metric-learning/losses/#marginloss" rel="nofollow"&gt;&lt;strong&gt;MarginLoss&lt;/strong&gt;&lt;/a&gt; (&lt;a href="https://arxiv.org/pdf/1706.07567.pdf" rel="nofollow"&gt;Sampling Matters in Deep Embedding Learning&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;a href="https://kevinmusgrave.github.io/pytorch-metric-learning/losses/#multisimilarityloss" rel="nofollow"&gt;&lt;strong&gt;MultiSimilarityLoss&lt;/strong&gt;&lt;/a&gt; (&lt;a href="http://openaccess.thecvf.com/content_CVPR_2019/papers/Wang_Multi-Similarity_Loss_With_General_Pair_Weighting_for_Deep_Metric_Learning_CVPR_2019_paper.pdf" rel="nofollow"&gt;Multi-Similarity Loss with General Pair Weighting for Deep Metric Learning&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;a href="https://kevinmusgrave.github.io/pytorch-metric-learning/losses/#ncaloss" rel="nofollow"&gt;&lt;strong&gt;NCALoss&lt;/strong&gt;&lt;/a&gt; (&lt;a href="https://www.cs.toronto.edu/~hinton/absps/nca.pdf" rel="nofollow"&gt;Neighbourhood Components Analysis&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;a href="https://kevinmusgrave.github.io/pytorch-metric-learning/losses/#normalizedsoftmaxloss" rel="nofollow"&gt;&lt;strong&gt;NormalizedSoftmaxLoss&lt;/strong&gt;&lt;/a&gt; (&lt;a href="https://arxiv.org/pdf/1811.12649.pdf" rel="nofollow"&gt;Classification is a Strong Baseline for DeepMetric Learning&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;a href="https://kevinmusgrave.github.io/pytorch-metric-learning/losses/#npairsloss" rel="nofollow"&gt;&lt;strong&gt;NPairsLoss&lt;/strong&gt;&lt;/a&gt; (&lt;a href="http://www.nec-labs.com/uploads/images/Department-Images/MediaAnalytics/papers/nips16_npairmetriclearning.pdf" rel="nofollow"&gt;Improved Deep Metric Learning with Multi-class N-pair Loss Objective&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;a href="https://kevinmusgrave.github.io/pytorch-metric-learning/losses/#proxyncaloss" rel="nofollow"&gt;&lt;strong&gt;ProxyNCALoss&lt;/strong&gt;&lt;/a&gt; (&lt;a href="https://arxiv.org/pdf/1703.07464.pdf" rel="nofollow"&gt;No Fuss Distance Metric Learning using Proxies&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;a href="https://kevinmusgrave.github.io/pytorch-metric-learning/losses/#signaltonoiseratiocontrastiveloss" rel="nofollow"&gt;&lt;strong&gt;SignalToNoiseRatioContrastiveLoss&lt;/strong&gt;&lt;/a&gt; (&lt;a href="http://openaccess.thecvf.com/content_CVPR_2019/papers/Yuan_Signal-To-Noise_Ratio_A_Robust_Distance_Metric_for_Deep_Metric_Learning_CVPR_2019_paper.pdf" rel="nofollow"&gt;Signal-to-Noise Ratio: A Robust Distance Metric for Deep Metric Learning&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;a href="https://kevinmusgrave.github.io/pytorch-metric-learning/losses/#softtripleloss" rel="nofollow"&gt;&lt;strong&gt;SoftTripleLoss&lt;/strong&gt;&lt;/a&gt; (&lt;a href="http://openaccess.thecvf.com/content_ICCV_2019/papers/Qian_SoftTriple_Loss_Deep_Metric_Learning_Without_Triplet_Sampling_ICCV_2019_paper.pdf" rel="nofollow"&gt;SoftTriple Loss: Deep Metric Learning Without Triplet Sampling&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;a href="https://kevinmusgrave.github.io/pytorch-metric-learning/losses/#spherefaceloss" rel="nofollow"&gt;&lt;strong&gt;SphereFaceLoss&lt;/strong&gt;&lt;/a&gt; (&lt;a href="https://arxiv.org/pdf/1704.08063.pdf" rel="nofollow"&gt;SphereFace: Deep Hypersphere Embedding for Face Recognition&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;a href="https://kevinmusgrave.github.io/pytorch-metric-learning/losses/#tripletmarginloss" rel="nofollow"&gt;&lt;strong&gt;TripletMarginLoss&lt;/strong&gt;&lt;/a&gt; (&lt;a href="https://papers.nips.cc/paper/2795-distance-metric-learning-for-large-margin-nearest-neighbor-classification.pdf" rel="nofollow"&gt;Distance Metric Learning for Large Margin Nearest Neighbor Classification&lt;/a&gt;)&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;&lt;a id="user-content-miners" class="anchor" aria-hidden="true" href="#miners"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;a href="https://kevinmusgrave.github.io/pytorch-metric-learning/miners" rel="nofollow"&gt;Miners&lt;/a&gt;:&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://kevinmusgrave.github.io/pytorch-metric-learning/miners/#angularminer" rel="nofollow"&gt;&lt;strong&gt;AngularMiner&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://kevinmusgrave.github.io/pytorch-metric-learning/miners/#batchhardminer" rel="nofollow"&gt;&lt;strong&gt;BatchHardMiner&lt;/strong&gt;&lt;/a&gt; (&lt;a href="https://arxiv.org/pdf/1703.07737.pdf" rel="nofollow"&gt;In Defense of the Triplet Loss for Person Re-Identification&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;a href="https://kevinmusgrave.github.io/pytorch-metric-learning/miners/#distanceweightedminer" rel="nofollow"&gt;&lt;strong&gt;DistanceWeightedMiner&lt;/strong&gt;&lt;/a&gt; (&lt;a href="https://arxiv.org/pdf/1706.07567.pdf" rel="nofollow"&gt;Sampling Matters in Deep Embedding Learning&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;a href="https://kevinmusgrave.github.io/pytorch-metric-learning/miners/#embeddingsalreadypackagedastriplets" rel="nofollow"&gt;&lt;strong&gt;EmbeddingsAlreadyPackagedAsTriplets&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://kevinmusgrave.github.io/pytorch-metric-learning/miners/#hdcminer" rel="nofollow"&gt;&lt;strong&gt;HDCMiner&lt;/strong&gt;&lt;/a&gt; (&lt;a href="http://openaccess.thecvf.com/content_ICCV_2017/papers/Yuan_Hard-Aware_Deeply_Cascaded_ICCV_2017_paper.pdf" rel="nofollow"&gt;Hard-Aware Deeply Cascaded Embedding&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;a href="https://kevinmusgrave.github.io/pytorch-metric-learning/miners/#maximumlossminer" rel="nofollow"&gt;&lt;strong&gt;MaximumLossMiner&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://kevinmusgrave.github.io/pytorch-metric-learning/miners/#multisimilarityminer" rel="nofollow"&gt;&lt;strong&gt;MultiSimilarityMiner&lt;/strong&gt;&lt;/a&gt; (&lt;a href="http://openaccess.thecvf.com/content_CVPR_2019/papers/Wang_Multi-Similarity_Loss_With_General_Pair_Weighting_for_Deep_Metric_Learning_CVPR_2019_paper.pdf" rel="nofollow"&gt;Multi-Similarity Loss with General Pair Weighting for Deep Metric Learning&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;a href="https://kevinmusgrave.github.io/pytorch-metric-learning/miners/#pairmarginminer" rel="nofollow"&gt;&lt;strong&gt;PairMarginMiner&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://kevinmusgrave.github.io/pytorch-metric-learning/miners/#tripletmarginminer" rel="nofollow"&gt;&lt;strong&gt;TripletMarginMiner&lt;/strong&gt;&lt;/a&gt; (&lt;a href="https://arxiv.org/pdf/1503.03832.pdf" rel="nofollow"&gt;FaceNet: A Unified Embedding for Face Recognition and Clustering&lt;/a&gt;)&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;&lt;a id="user-content-regularizers" class="anchor" aria-hidden="true" href="#regularizers"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;a href="https://kevinmusgrave.github.io/pytorch-metric-learning/regularizers" rel="nofollow"&gt;Regularizers&lt;/a&gt;:&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://kevinmusgrave.github.io/pytorch-metric-learning/regularizers/#centerinvariantregularizer" rel="nofollow"&gt;&lt;strong&gt;CenterInvariantRegularizer&lt;/strong&gt;&lt;/a&gt; (&lt;a href="http://www1.ece.neu.edu/~yuewu/files/2017/twu024.pdf" rel="nofollow"&gt;Deep Face Recognition with Center Invariant Loss&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;a href="https://kevinmusgrave.github.io/pytorch-metric-learning/regularizers/#regularfaceregularizer" rel="nofollow"&gt;&lt;strong&gt;RegularFaceRegularizer&lt;/strong&gt;&lt;/a&gt; (&lt;a href="http://openaccess.thecvf.com/content_CVPR_2019/papers/Zhao_RegularFace_Deep_Face_Recognition_via_Exclusive_Regularization_CVPR_2019_paper.pdf" rel="nofollow"&gt;RegularFace: Deep Face Recognition via Exclusive Regularization&lt;/a&gt;)&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;&lt;a id="user-content-samplers" class="anchor" aria-hidden="true" href="#samplers"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;a href="https://kevinmusgrave.github.io/pytorch-metric-learning/samplers" rel="nofollow"&gt;Samplers&lt;/a&gt;:&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://kevinmusgrave.github.io/pytorch-metric-learning/samplers/#mperclasssampler" rel="nofollow"&gt;&lt;strong&gt;MPerClassSampler&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://kevinmusgrave.github.io/pytorch-metric-learning/samplers/#fixedsetoftriplets" rel="nofollow"&gt;&lt;strong&gt;FixedSetOfTriplets&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;&lt;a id="user-content-trainers" class="anchor" aria-hidden="true" href="#trainers"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;a href="https://kevinmusgrave.github.io/pytorch-metric-learning/trainers" rel="nofollow"&gt;Trainers&lt;/a&gt;:&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://kevinmusgrave.github.io/pytorch-metric-learning/trainers/#metriclossonly" rel="nofollow"&gt;&lt;strong&gt;MetricLossOnly&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://kevinmusgrave.github.io/pytorch-metric-learning/trainers/#trainwithclassifier" rel="nofollow"&gt;&lt;strong&gt;TrainWithClassifier&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://kevinmusgrave.github.io/pytorch-metric-learning/trainers/#cascadedembeddings" rel="nofollow"&gt;&lt;strong&gt;CascadedEmbeddings&lt;/strong&gt;&lt;/a&gt; (&lt;a href="http://openaccess.thecvf.com/content_ICCV_2017/papers/Yuan_Hard-Aware_Deeply_Cascaded_ICCV_2017_paper.pdf" rel="nofollow"&gt;Hard-Aware Deeply Cascaded Embedding&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;a href="https://kevinmusgrave.github.io/pytorch-metric-learning/trainers/#deepadversarialmetriclearning" rel="nofollow"&gt;&lt;strong&gt;DeepAdversarialMetricLearning&lt;/strong&gt;&lt;/a&gt; (&lt;a href="http://openaccess.thecvf.com/content_cvpr_2018/papers/Duan_Deep_Adversarial_Metric_CVPR_2018_paper.pdf" rel="nofollow"&gt;Deep Adversarial Metric Learning&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;a href="https://kevinmusgrave.github.io/pytorch-metric-learning/trainers/#unsupervisedembeddingsusingaugmentations" rel="nofollow"&gt;&lt;strong&gt;UnsupervisedEmbeddingsUsingAugmentations&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;&lt;a id="user-content-testers" class="anchor" aria-hidden="true" href="#testers"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;a href="https://kevinmusgrave.github.io/pytorch-metric-learning/testers" rel="nofollow"&gt;Testers&lt;/a&gt;:&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://kevinmusgrave.github.io/pytorch-metric-learning/testers/#globalembeddingspacetester" rel="nofollow"&gt;&lt;strong&gt;GlobalEmbeddingSpaceTester&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://kevinmusgrave.github.io/pytorch-metric-learning/testers/#withsameparentlabeltester" rel="nofollow"&gt;&lt;strong&gt;WithSameParentLabelTester&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;&lt;a id="user-content-utils" class="anchor" aria-hidden="true" href="#utils"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;a href="https://kevinmusgrave.github.io/pytorch-metric-learning/utils" rel="nofollow"&gt;Utils&lt;/a&gt;:&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://kevinmusgrave.github.io/pytorch-metric-learning/utils/#hookcontainer" rel="nofollow"&gt;&lt;strong&gt;HookContainer&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;&lt;a id="user-content-base-classes-mixins-and-wrappers" class="anchor" aria-hidden="true" href="#base-classes-mixins-and-wrappers"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Base Classes, Mixins, and Wrappers:&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://kevinmusgrave.github.io/pytorch-metric-learning/losses/#basemetriclossfunction" rel="nofollow"&gt;&lt;strong&gt;BaseMetricLossFunction&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://kevinmusgrave.github.io/pytorch-metric-learning/miners/#baseminer" rel="nofollow"&gt;&lt;strong&gt;BaseMiner&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://kevinmusgrave.github.io/pytorch-metric-learning/miners/#basepostgradientminer" rel="nofollow"&gt;&lt;strong&gt;BasePostGradientMiner&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://kevinmusgrave.github.io/pytorch-metric-learning/miners/#basepregradientminer" rel="nofollow"&gt;&lt;strong&gt;BasePreGradientMiner&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://kevinmusgrave.github.io/pytorch-metric-learning/regularizers/#baseweightregularizer" rel="nofollow"&gt;&lt;strong&gt;BaseWeightRegularizer&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://kevinmusgrave.github.io/pytorch-metric-learning/trainers/#basetrainer" rel="nofollow"&gt;&lt;strong&gt;BaseTrainer&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://kevinmusgrave.github.io/pytorch-metric-learning/testers/#basetester" rel="nofollow"&gt;&lt;strong&gt;BaseTester&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://kevinmusgrave.github.io/pytorch-metric-learning/losses/#genericpairloss" rel="nofollow"&gt;&lt;strong&gt;GenericPairLoss&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://kevinmusgrave.github.io/pytorch-metric-learning/losses/#multiplelosses" rel="nofollow"&gt;&lt;strong&gt;MultipleLosses&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://kevinmusgrave.github.io/pytorch-metric-learning/losses/#weightregularizermixin" rel="nofollow"&gt;&lt;strong&gt;WeightRegularizerMixin&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-overview" class="anchor" aria-hidden="true" href="#overview"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Overview&lt;/h2&gt;
&lt;p&gt;Let’s try the vanilla triplet margin loss. In all examples, embeddings is assumed to be of size (N, embedding_size), and labels is of size (N).&lt;/p&gt;
&lt;div class="highlight highlight-source-python"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;from&lt;/span&gt; pytorch_metric_learning &lt;span class="pl-k"&gt;import&lt;/span&gt; losses
loss_func &lt;span class="pl-k"&gt;=&lt;/span&gt; losses.TripletMarginLoss(&lt;span class="pl-v"&gt;margin&lt;/span&gt;&lt;span class="pl-k"&gt;=&lt;/span&gt;&lt;span class="pl-c1"&gt;0.1&lt;/span&gt;)
loss &lt;span class="pl-k"&gt;=&lt;/span&gt; loss_func(embeddings, labels)&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Loss functions typically come with a variety of parameters. For example, with the TripletMarginLoss, you can control how many triplets per sample to use in each batch. You can also use all possible triplets within each batch:&lt;/p&gt;
&lt;div class="highlight highlight-source-python"&gt;&lt;pre&gt;loss_func &lt;span class="pl-k"&gt;=&lt;/span&gt; losses.TripletMarginLoss(&lt;span class="pl-v"&gt;triplets_per_anchor&lt;/span&gt;&lt;span class="pl-k"&gt;=&lt;/span&gt;&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;all&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Sometimes it can help to add a mining function:&lt;/p&gt;
&lt;div class="highlight highlight-source-python"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;from&lt;/span&gt; pytorch_metric_learning &lt;span class="pl-k"&gt;import&lt;/span&gt; miners, losses
miner &lt;span class="pl-k"&gt;=&lt;/span&gt; miners.MultiSimilarityMiner(&lt;span class="pl-v"&gt;epsilon&lt;/span&gt;&lt;span class="pl-k"&gt;=&lt;/span&gt;&lt;span class="pl-c1"&gt;0.1&lt;/span&gt;)
loss_func &lt;span class="pl-k"&gt;=&lt;/span&gt; losses.TripletMarginLoss(&lt;span class="pl-v"&gt;margin&lt;/span&gt;&lt;span class="pl-k"&gt;=&lt;/span&gt;&lt;span class="pl-c1"&gt;0.1&lt;/span&gt;)
hard_pairs &lt;span class="pl-k"&gt;=&lt;/span&gt; miner(embeddings, labels)
loss &lt;span class="pl-k"&gt;=&lt;/span&gt; loss_func(embeddings, labels, hard_pairs)&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;In the above code, the miner finds positive and negative pairs that it thinks are particularly difficult. Note that even though the TripletMarginLoss operates on triplets, it’s still possible to pass in pairs. This is because the library automatically converts pairs to triplets and triplets to pairs, when necessary.&lt;/p&gt;
&lt;p&gt;In general, all loss functions take in embeddings and labels, with an optional indices_tuple argument (i.e. the output of a miner):&lt;/p&gt;
&lt;div class="highlight highlight-source-python"&gt;&lt;pre&gt;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; From BaseMetricLossFunction&lt;/span&gt;
&lt;span class="pl-k"&gt;def&lt;/span&gt; &lt;span class="pl-en"&gt;forward&lt;/span&gt;(&lt;span class="pl-smi"&gt;&lt;span class="pl-smi"&gt;self&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-smi"&gt;embeddings&lt;/span&gt;, &lt;span class="pl-smi"&gt;labels&lt;/span&gt;, &lt;span class="pl-smi"&gt;indices_tuple&lt;/span&gt;&lt;span class="pl-k"&gt;=&lt;/span&gt;&lt;span class="pl-c1"&gt;None&lt;/span&gt;)&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;And (almost) all mining functions take in embeddings and labels:&lt;/p&gt;
&lt;div class="highlight highlight-source-python"&gt;&lt;pre&gt;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; From BaseMiner&lt;/span&gt;
&lt;span class="pl-k"&gt;def&lt;/span&gt; &lt;span class="pl-en"&gt;forward&lt;/span&gt;(&lt;span class="pl-smi"&gt;&lt;span class="pl-smi"&gt;self&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-smi"&gt;embeddings&lt;/span&gt;, &lt;span class="pl-smi"&gt;labels&lt;/span&gt;)&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;For more complex approaches, like deep adversarial metric learning, use one of the &lt;a href="https://kevinmusgrave.github.io/pytorch-metric-learning/trainers" rel="nofollow"&gt;trainers&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;To check the accuracy of your model, use one of the &lt;a href="https://kevinmusgrave.github.io/pytorch-metric-learning/testers" rel="nofollow"&gt;testers&lt;/a&gt;. Which tester should you use? Almost definitely &lt;a href="https://kevinmusgrave.github.io/pytorch-metric-learning/testers/#globalembeddingspacetester" rel="nofollow"&gt;GlobalEmbeddingSpaceTester&lt;/a&gt;, because it does what most metric-learning papers do.&lt;/p&gt;
&lt;p&gt;Also check out the &lt;a href="https://github.com/KevinMusgrave/pytorch-metric-learning/tree/master/examples"&gt;example scripts&lt;/a&gt;. Each one shows how to set up models, optimizers, losses etc for a particular trainer.&lt;/p&gt;
&lt;p&gt;To learn more about all of the above, &lt;a href="https://kevinmusgrave.github.io/pytorch-metric-learning" rel="nofollow"&gt;see the documentation&lt;/a&gt;.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-acknowledgements" class="anchor" aria-hidden="true" href="#acknowledgements"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Acknowledgements&lt;/h2&gt;
&lt;h3&gt;&lt;a id="user-content-facebook-ai" class="anchor" aria-hidden="true" href="#facebook-ai"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Facebook AI&lt;/h3&gt;
&lt;p&gt;Thank you to &lt;a href="https://research.fb.com/people/lim-ser-nam/" rel="nofollow"&gt;Ser-Nam Lim&lt;/a&gt; at &lt;a href="https://ai.facebook.com/" rel="nofollow"&gt;Facebook AI&lt;/a&gt;, and my research advisor, &lt;a href="https://vision.cornell.edu/se3/people/serge-belongie/" rel="nofollow"&gt;Professor Serge Belongie&lt;/a&gt;. This project began during my internship at Facebook AI where I received valuable feedback from Ser-Nam, and his team of computer vision and machine learning engineers and research scientists. In particular, thanks to &lt;a href="https://www.linkedin.com/in/ashish217/" rel="nofollow"&gt;Ashish Shah&lt;/a&gt; and &lt;a href="https://www.linkedin.com/in/austin-reiter-3962aa7/" rel="nofollow"&gt;Austin Reiter&lt;/a&gt; for reviewing my code during its early stages of development.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-open-source-repos" class="anchor" aria-hidden="true" href="#open-source-repos"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Open-source repos&lt;/h3&gt;
&lt;p&gt;This library contains code that has been adapted and modified from the following great open-source repos:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/bnu-wangxun/Deep_Metric"&gt;https://github.com/bnu-wangxun/Deep_Metric&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/chaoyuaw/incubator-mxnet/blob/master/example/gluon/embedding_learning"&gt;https://github.com/chaoyuaw/incubator-mxnet/blob/master/example/gluon/embedding_learning&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/facebookresearch/deepcluster"&gt;https://github.com/facebookresearch/deepcluster&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/idstcv/SoftTriple"&gt;https://github.com/idstcv/SoftTriple&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/kunhe/FastAP-metric-learning"&gt;https://github.com/kunhe/FastAP-metric-learning&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/ronekko/deep_metric_learning"&gt;https://github.com/ronekko/deep_metric_learning&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://kaizhao.net/regularface" rel="nofollow"&gt;http://kaizhao.net/regularface&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-citing-this-library" class="anchor" aria-hidden="true" href="#citing-this-library"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Citing this library&lt;/h2&gt;
&lt;p&gt;If you'd like to cite pytorch-metric-learning in your paper, you can use this bibtex:&lt;/p&gt;
&lt;div class="highlight highlight-text-tex-latex"&gt;&lt;pre&gt;@misc{Musgrave2019,
  author = {Musgrave, Kevin and Lim, Ser-Nam and Belongie, Serge},
  title = {PyTorch Metric Learning},
  year = {2019},
  publisher = {GitHub},
  journal = {GitHub repository},
  howpublished = {&lt;span class="pl-c1"&gt;\url&lt;/span&gt;{https://github.com/KevinMusgrave/pytorch-metric-learning}},
}&lt;/pre&gt;&lt;/div&gt;
&lt;/article&gt;&lt;/div&gt;</description><author>KevinMusgrave</author><guid isPermaLink="false">https://github.com/KevinMusgrave/pytorch-metric-learning</guid><pubDate>Mon, 10 Feb 2020 00:14:00 GMT</pubDate></item><item><title>jackzhenguo/python-small-examples #15 in Python, This week</title><link>https://github.com/jackzhenguo/python-small-examples</link><description>&lt;p&gt;&lt;i&gt;Python有趣的小例子一网打尽。Python基础、Python坑点、Python字符串和正则、Python绘图、Python日期和文件、Web开发、数据科学、机器学习、深度学习、TensorFlow、Pytorch，一切都是简单易懂的小例子。&lt;/i&gt;&lt;/p&gt;&lt;div id="readme" class="md" data-path="README.md"&gt;&lt;article class="markdown-body entry-content p-5" itemprop="text"&gt;&lt;p&gt;告别枯燥，60秒学会一个小例子，系统学习Python，从入门到大师。&lt;strong&gt;Python之路&lt;/strong&gt;已有&lt;code&gt;200&lt;/code&gt;个例子：&lt;/p&gt;
&lt;p&gt;感受Python之美 | 一、Python基础 |二、Python字符串和正则|三、Python文件和日期|四、Python三大利器|五、Python绘图|六、Python之坑|七、Python第三方包|八、机器学习和深度学必知算法|九、Python实战|十、Pandas数据分析案例实战&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;目前，正在编写第十一章：一步一步掌握Flask web 开发&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;已发&lt;a href="https://github.com/jackzhenguo/python-small-examples/releases/tag/V1.3"&gt;《我的Python之路V1.3.pdf》&lt;/a&gt;最新版本&lt;code&gt;V1.3包括&lt;/code&gt;9个章节：&lt;code&gt;Python基础&lt;/code&gt;，&lt;code&gt;Python字符串和正则&lt;/code&gt;，&lt;code&gt;Python文件和日期&lt;/code&gt;，&lt;code&gt;Python多线程&lt;/code&gt;, &lt;code&gt;Python三大利器&lt;/code&gt;，&lt;code&gt;Python画图&lt;/code&gt; ,&lt;code&gt;Python之坑&lt;/code&gt;,&lt;code&gt;基础算法小例子&lt;/code&gt;，&lt;code&gt;Python实战&lt;/code&gt;，目前超过&lt;code&gt;200个&lt;/code&gt;小例子。&lt;/p&gt;
&lt;p&gt;欢迎直接在线阅读和学习：&lt;a href="https://python-small-examples.readthedocs.io/en/latest/" rel="nofollow"&gt;https://python-small-examples.readthedocs.io/en/latest/&lt;/a&gt;&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-感受python之美" class="anchor" aria-hidden="true" href="#感受python之美"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;感受Python之美&lt;/h3&gt;
&lt;h4&gt;&lt;a id="user-content-1-简洁之美" class="anchor" aria-hidden="true" href="#1-简洁之美"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;1 简洁之美&lt;/h4&gt;
&lt;p&gt;通过一行代码，体会Python语言简洁之美&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;一行代码交换&lt;code&gt;a&lt;/code&gt;,&lt;code&gt;b&lt;/code&gt;：&lt;/li&gt;
&lt;/ol&gt;
&lt;div class="highlight highlight-source-python"&gt;&lt;pre&gt;a, b &lt;span class="pl-k"&gt;=&lt;/span&gt; b, a&lt;/pre&gt;&lt;/div&gt;
&lt;ol start="2"&gt;
&lt;li&gt;一行代码反转列表&lt;/li&gt;
&lt;/ol&gt;
&lt;div class="highlight highlight-source-python"&gt;&lt;pre&gt;[&lt;span class="pl-c1"&gt;1&lt;/span&gt;,&lt;span class="pl-c1"&gt;2&lt;/span&gt;,&lt;span class="pl-c1"&gt;3&lt;/span&gt;][::&lt;span class="pl-k"&gt;-&lt;/span&gt;&lt;span class="pl-c1"&gt;1&lt;/span&gt;] &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; [3,2,1]&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;ol start="3"&gt;
&lt;li&gt;一行代码合并两个字典&lt;/li&gt;
&lt;/ol&gt;
&lt;div class="highlight highlight-source-python"&gt;&lt;pre&gt;{&lt;span class="pl-k"&gt;**&lt;/span&gt;{&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;a&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;:&lt;span class="pl-c1"&gt;1&lt;/span&gt;,&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;b&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;:&lt;span class="pl-c1"&gt;2&lt;/span&gt;}, &lt;span class="pl-k"&gt;**&lt;/span&gt;{&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;c&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;:&lt;span class="pl-c1"&gt;3&lt;/span&gt;}} &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; {'a': 1, 'b': 2, 'c': 3}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;ol start="4"&gt;
&lt;li&gt;一行代码列表去重&lt;/li&gt;
&lt;/ol&gt;
&lt;div class="highlight highlight-source-python"&gt;&lt;pre&gt;&lt;span class="pl-c1"&gt;set&lt;/span&gt;([&lt;span class="pl-c1"&gt;1&lt;/span&gt;,&lt;span class="pl-c1"&gt;2&lt;/span&gt;,&lt;span class="pl-c1"&gt;2&lt;/span&gt;,&lt;span class="pl-c1"&gt;3&lt;/span&gt;,&lt;span class="pl-c1"&gt;3&lt;/span&gt;,&lt;span class="pl-c1"&gt;3&lt;/span&gt;]) &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; {1, 2, 3}&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;ol start="5"&gt;
&lt;li&gt;一行代码求多个列表中的最大值&lt;/li&gt;
&lt;/ol&gt;
&lt;div class="highlight highlight-source-python"&gt;&lt;pre&gt;&lt;span class="pl-c1"&gt;max&lt;/span&gt;(&lt;span class="pl-c1"&gt;max&lt;/span&gt;([ [&lt;span class="pl-c1"&gt;1&lt;/span&gt;,&lt;span class="pl-c1"&gt;2&lt;/span&gt;,&lt;span class="pl-c1"&gt;3&lt;/span&gt;], [&lt;span class="pl-c1"&gt;5&lt;/span&gt;,&lt;span class="pl-c1"&gt;1&lt;/span&gt;], [&lt;span class="pl-c1"&gt;4&lt;/span&gt;] ], &lt;span class="pl-v"&gt;key&lt;/span&gt;&lt;span class="pl-k"&gt;=&lt;/span&gt;&lt;span class="pl-k"&gt;lambda&lt;/span&gt; &lt;span class="pl-smi"&gt;v&lt;/span&gt;: &lt;span class="pl-c1"&gt;max&lt;/span&gt;(v))) &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; 5&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;ol start="6"&gt;
&lt;li&gt;一行代码生成逆序序列&lt;/li&gt;
&lt;/ol&gt;
&lt;div class="highlight highlight-source-python"&gt;&lt;pre&gt;&lt;span class="pl-c1"&gt;list&lt;/span&gt;(&lt;span class="pl-c1"&gt;range&lt;/span&gt;(&lt;span class="pl-c1"&gt;10&lt;/span&gt;,&lt;span class="pl-k"&gt;-&lt;/span&gt;&lt;span class="pl-c1"&gt;1&lt;/span&gt;,&lt;span class="pl-k"&gt;-&lt;/span&gt;&lt;span class="pl-c1"&gt;1&lt;/span&gt;)) &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; [10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0]&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h4&gt;&lt;a id="user-content-2-python绘图" class="anchor" aria-hidden="true" href="#2-python绘图"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;2 Python绘图&lt;/h4&gt;
&lt;p&gt;Python绘图方便、漂亮，画图神器pyecharts几行代码就能绘制出热力图：&lt;/p&gt;
&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="./img/image-20191229101724665.png"&gt;&lt;img src="./img/image-20191229101724665.png" alt="" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;炫酷的水球图：&lt;/p&gt;
&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="./img/liquid.gif"&gt;&lt;img src="./img/liquid.gif" alt="" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;经常使用的词云图：&lt;/p&gt;
&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="./img/1578809198185.png"&gt;&lt;img src="./img/1578809198185.png" alt="1578809198185" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h4&gt;&lt;a id="user-content-3-python动画" class="anchor" aria-hidden="true" href="#3-python动画"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;3 Python动画&lt;/h4&gt;
&lt;p&gt;仅适用Python的常用绘图库：Matplotlib，就能制作出动画，辅助算法新手入门基本的排序算法。如下为一个随机序列，使用&lt;code&gt;快速排序算法&lt;/code&gt;，由小到大排序的过程动画展示：&lt;/p&gt;
&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="./img/640.gif"&gt;&lt;img src="./img/640.gif" alt="" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;归并排序动画展示：&lt;/p&gt;
&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="./img/641.gif"&gt;&lt;img src="./img/641.gif" alt="" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;使用turtule绘制的漫天雪花：&lt;/p&gt;
&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="./img/turtlesnow.gif"&gt;&lt;img src="./img/turtlesnow.gif" alt="Sample" width="600" height="300" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;timeline时间轮播图：&lt;/p&gt;
&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="./img/timeline.gif"&gt;&lt;img src="./img/timeline.gif" alt="" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h4&gt;&lt;a id="user-content-4-python数据分析" class="anchor" aria-hidden="true" href="#4-python数据分析"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;4 Python数据分析&lt;/h4&gt;
&lt;p&gt;Python非常适合做数值计算、数据分析，一行代码完成数据透视：&lt;/p&gt;
&lt;div class="highlight highlight-source-python"&gt;&lt;pre&gt;pd.pivot_table(df, &lt;span class="pl-v"&gt;index&lt;/span&gt;&lt;span class="pl-k"&gt;=&lt;/span&gt;[&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;Manager&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;Rep&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;], &lt;span class="pl-v"&gt;values&lt;/span&gt;&lt;span class="pl-k"&gt;=&lt;/span&gt;[&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;Price&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;], &lt;span class="pl-v"&gt;aggfunc&lt;/span&gt;&lt;span class="pl-k"&gt;=&lt;/span&gt;np.sum)&lt;/pre&gt;&lt;/div&gt;
&lt;h4&gt;&lt;a id="user-content-5-python机器学习" class="anchor" aria-hidden="true" href="#5-python机器学习"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;5 Python机器学习&lt;/h4&gt;
&lt;p&gt;Python机器学习库&lt;code&gt;Sklearn&lt;/code&gt;功能强大，接口易用，包括数据预处理模块、回归、分类、聚类、降维等。一行代码创建一个KMeans聚类模型：&lt;/p&gt;
&lt;div class="highlight highlight-source-python"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;from&lt;/span&gt; sklearn.cluster &lt;span class="pl-k"&gt;import&lt;/span&gt; KMeans
KMeans( &lt;span class="pl-v"&gt;n_clusters&lt;/span&gt;&lt;span class="pl-k"&gt;=&lt;/span&gt;&lt;span class="pl-c1"&gt;3&lt;/span&gt; )&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="./img/kmeans.png"&gt;&lt;img src="./img/kmeans.png" alt="img" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h4&gt;&lt;a id="user-content-6-python-gui" class="anchor" aria-hidden="true" href="#6-python-gui"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;6 Python-GUI&lt;/h4&gt;
&lt;p&gt;PyQt设计器开发GUI，能够迅速通过拖动组建搭建出来，使用方便。如下为使用PyQt，定制的一个专属自己的小而美的计算器。&lt;/p&gt;
&lt;p&gt;除此之外，使用Python的Flask框架搭建Web框架，也非常方便。&lt;/p&gt;
&lt;p&gt;总之，在这个&lt;code&gt;Python小例子&lt;/code&gt;，你都能学到关于使用Python干活的方方面面的有趣的小例子，欢迎关注。&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-一python基础" class="anchor" aria-hidden="true" href="#一python基础"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;一、Python基础&lt;/h3&gt;
&lt;p&gt;&lt;code&gt;Python基础&lt;/code&gt;主要总结Python常用内置函数；Python独有的语法特性、关键词&lt;code&gt;nonlocal&lt;/code&gt;, &lt;code&gt; global&lt;/code&gt;等；内置数据结构包括：列表(list),  字典(dict),  集合(set),  元组(tuple) 以及相关的高级模块&lt;code&gt;collections&lt;/code&gt;中的&lt;code&gt;Counter&lt;/code&gt;,  &lt;code&gt;namedtuple&lt;/code&gt;, &lt;code&gt;defaultdict&lt;/code&gt;，&lt;code&gt;heapq&lt;/code&gt;模块。目前共有&lt;code&gt;86&lt;/code&gt;个小例子。&lt;/p&gt;
&lt;h4&gt;&lt;a id="user-content-1-求绝对值" class="anchor" aria-hidden="true" href="#1-求绝对值"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;1 求绝对值&lt;/h4&gt;
&lt;p&gt;绝对值或复数的模&lt;/p&gt;
&lt;div class="highlight highlight-source-python"&gt;&lt;pre&gt;In [&lt;span class="pl-c1"&gt;1&lt;/span&gt;]: &lt;span class="pl-c1"&gt;abs&lt;/span&gt;(&lt;span class="pl-k"&gt;-&lt;/span&gt;&lt;span class="pl-c1"&gt;6&lt;/span&gt;)
Out[&lt;span class="pl-c1"&gt;1&lt;/span&gt;]: &lt;span class="pl-c1"&gt;6&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h4&gt;&lt;a id="user-content-2-元素都为真" class="anchor" aria-hidden="true" href="#2-元素都为真"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;2 元素都为真&lt;/h4&gt;
&lt;p&gt;接受一个迭代器，如果迭代器的&lt;code&gt;所有元素&lt;/code&gt;都为真，那么返回&lt;code&gt;True&lt;/code&gt;，否则返回&lt;code&gt;False&lt;/code&gt;&lt;/p&gt;
&lt;div class="highlight highlight-source-python"&gt;&lt;pre&gt;In [&lt;span class="pl-c1"&gt;2&lt;/span&gt;]: &lt;span class="pl-c1"&gt;all&lt;/span&gt;([&lt;span class="pl-c1"&gt;1&lt;/span&gt;,&lt;span class="pl-c1"&gt;0&lt;/span&gt;,&lt;span class="pl-c1"&gt;3&lt;/span&gt;,&lt;span class="pl-c1"&gt;6&lt;/span&gt;])
Out[&lt;span class="pl-c1"&gt;2&lt;/span&gt;]: &lt;span class="pl-c1"&gt;False&lt;/span&gt;

In [&lt;span class="pl-c1"&gt;3&lt;/span&gt;]: &lt;span class="pl-c1"&gt;all&lt;/span&gt;([&lt;span class="pl-c1"&gt;1&lt;/span&gt;,&lt;span class="pl-c1"&gt;2&lt;/span&gt;,&lt;span class="pl-c1"&gt;3&lt;/span&gt;])
Out[&lt;span class="pl-c1"&gt;3&lt;/span&gt;]: &lt;span class="pl-c1"&gt;True&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h4&gt;&lt;a id="user-content-3-元素至少一个为真" class="anchor" aria-hidden="true" href="#3-元素至少一个为真"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;3 元素至少一个为真　&lt;/h4&gt;
&lt;p&gt;接受一个迭代器，如果迭代器里&lt;code&gt;至少有一个&lt;/code&gt;元素为真，那么返回&lt;code&gt;True&lt;/code&gt;，否则返回&lt;code&gt;False&lt;/code&gt;&lt;/p&gt;
&lt;div class="highlight highlight-source-python"&gt;&lt;pre&gt;In [&lt;span class="pl-c1"&gt;4&lt;/span&gt;]: &lt;span class="pl-c1"&gt;any&lt;/span&gt;([&lt;span class="pl-c1"&gt;0&lt;/span&gt;,&lt;span class="pl-c1"&gt;0&lt;/span&gt;,&lt;span class="pl-c1"&gt;0&lt;/span&gt;,[]])
Out[&lt;span class="pl-c1"&gt;4&lt;/span&gt;]: &lt;span class="pl-c1"&gt;False&lt;/span&gt;

In [&lt;span class="pl-c1"&gt;5&lt;/span&gt;]: &lt;span class="pl-c1"&gt;any&lt;/span&gt;([&lt;span class="pl-c1"&gt;0&lt;/span&gt;,&lt;span class="pl-c1"&gt;0&lt;/span&gt;,&lt;span class="pl-c1"&gt;1&lt;/span&gt;])
Out[&lt;span class="pl-c1"&gt;5&lt;/span&gt;]: &lt;span class="pl-c1"&gt;True&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h4&gt;&lt;a id="user-content-4-ascii展示对象" class="anchor" aria-hidden="true" href="#4-ascii展示对象"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;4 ascii展示对象　　&lt;/h4&gt;
&lt;p&gt;调用对象的__repr__() 方法，获得该方法的返回值，如下例子返回值为字符串&lt;/p&gt;
&lt;div class="highlight highlight-source-python"&gt;&lt;pre&gt;In [&lt;span class="pl-c1"&gt;1&lt;/span&gt;]: &lt;span class="pl-k"&gt;class&lt;/span&gt; &lt;span class="pl-en"&gt;Student&lt;/span&gt;():
   &lt;span class="pl-c1"&gt;...&lt;/span&gt;:     &lt;span class="pl-k"&gt;def&lt;/span&gt; &lt;span class="pl-c1"&gt;__init__&lt;/span&gt;(&lt;span class="pl-smi"&gt;&lt;span class="pl-smi"&gt;self&lt;/span&gt;&lt;/span&gt;,&lt;span class="pl-smi"&gt;id&lt;/span&gt;,&lt;span class="pl-smi"&gt;name&lt;/span&gt;):
   &lt;span class="pl-c1"&gt;...&lt;/span&gt;:         &lt;span class="pl-c1"&gt;self&lt;/span&gt;.id &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;id&lt;/span&gt;
   &lt;span class="pl-c1"&gt;...&lt;/span&gt;:         &lt;span class="pl-c1"&gt;self&lt;/span&gt;.name &lt;span class="pl-k"&gt;=&lt;/span&gt; name
   &lt;span class="pl-c1"&gt;...&lt;/span&gt;:     &lt;span class="pl-k"&gt;def&lt;/span&gt; &lt;span class="pl-c1"&gt;__repr__&lt;/span&gt;(&lt;span class="pl-smi"&gt;&lt;span class="pl-smi"&gt;self&lt;/span&gt;&lt;/span&gt;):
   &lt;span class="pl-c1"&gt;...&lt;/span&gt;:         &lt;span class="pl-k"&gt;return&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;id = &lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;&lt;span class="pl-k"&gt;+&lt;/span&gt;&lt;span class="pl-c1"&gt;self&lt;/span&gt;.id &lt;span class="pl-k"&gt;+&lt;/span&gt;&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;, name = &lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;&lt;span class="pl-k"&gt;+&lt;/span&gt;&lt;span class="pl-c1"&gt;self&lt;/span&gt;.name
   &lt;span class="pl-c1"&gt;...&lt;/span&gt;: 
   &lt;span class="pl-c1"&gt;...&lt;/span&gt;: 

In [&lt;span class="pl-c1"&gt;2&lt;/span&gt;]: xiaoming &lt;span class="pl-k"&gt;=&lt;/span&gt; Student(&lt;span class="pl-v"&gt;id&lt;/span&gt;&lt;span class="pl-k"&gt;=&lt;/span&gt;&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;001&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;,&lt;span class="pl-v"&gt;name&lt;/span&gt;&lt;span class="pl-k"&gt;=&lt;/span&gt;&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;xiaoming&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;)

In [&lt;span class="pl-c1"&gt;3&lt;/span&gt;]: &lt;span class="pl-c1"&gt;print&lt;/span&gt;(xiaoming)
&lt;span class="pl-c1"&gt;id&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;0&lt;span class="pl-ii"&gt;01&lt;/span&gt;&lt;/span&gt;, name &lt;span class="pl-k"&gt;=&lt;/span&gt; xiaoming

In [&lt;span class="pl-c1"&gt;4&lt;/span&gt;]: &lt;span class="pl-c1"&gt;ascii&lt;/span&gt;(xiaoming)
Out[&lt;span class="pl-c1"&gt;4&lt;/span&gt;]: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;id = 001, name = xiaoming&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h4&gt;&lt;a id="user-content-5--十转二" class="anchor" aria-hidden="true" href="#5--十转二"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;5  十转二&lt;/h4&gt;
&lt;p&gt;将&lt;code&gt;十进制&lt;/code&gt;转换为&lt;code&gt;二进制&lt;/code&gt;&lt;/p&gt;
&lt;div class="highlight highlight-source-python"&gt;&lt;pre&gt;In [&lt;span class="pl-c1"&gt;1&lt;/span&gt;]: &lt;span class="pl-c1"&gt;bin&lt;/span&gt;(&lt;span class="pl-c1"&gt;10&lt;/span&gt;)
Out[&lt;span class="pl-c1"&gt;1&lt;/span&gt;]: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;0b1010&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h4&gt;&lt;a id="user-content-6-十转八" class="anchor" aria-hidden="true" href="#6-十转八"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;6 十转八&lt;/h4&gt;
&lt;p&gt;将&lt;code&gt;十进制&lt;/code&gt;转换为&lt;code&gt;八进制&lt;/code&gt;&lt;/p&gt;
&lt;div class="highlight highlight-source-python"&gt;&lt;pre&gt;In [&lt;span class="pl-c1"&gt;1&lt;/span&gt;]: &lt;span class="pl-c1"&gt;oct&lt;/span&gt;(&lt;span class="pl-c1"&gt;9&lt;/span&gt;)
Out[&lt;span class="pl-c1"&gt;1&lt;/span&gt;]: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;0o11&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h4&gt;&lt;a id="user-content-7-十转十六" class="anchor" aria-hidden="true" href="#7-十转十六"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;7 十转十六&lt;/h4&gt;
&lt;p&gt;将&lt;code&gt;十进制&lt;/code&gt;转换为&lt;code&gt;十六进制&lt;/code&gt;&lt;/p&gt;
&lt;div class="highlight highlight-source-python"&gt;&lt;pre&gt;In [&lt;span class="pl-c1"&gt;1&lt;/span&gt;]: &lt;span class="pl-c1"&gt;hex&lt;/span&gt;(&lt;span class="pl-c1"&gt;15&lt;/span&gt;)
Out[&lt;span class="pl-c1"&gt;1&lt;/span&gt;]: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;0xf&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h4&gt;&lt;a id="user-content-8-判断是真是假" class="anchor" aria-hidden="true" href="#8-判断是真是假"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;8 判断是真是假　　&lt;/h4&gt;
&lt;p&gt;测试一个对象是True, 还是False.&lt;/p&gt;
&lt;div class="highlight highlight-source-python"&gt;&lt;pre&gt;In [&lt;span class="pl-c1"&gt;1&lt;/span&gt;]: &lt;span class="pl-c1"&gt;bool&lt;/span&gt;([&lt;span class="pl-c1"&gt;0&lt;/span&gt;,&lt;span class="pl-c1"&gt;0&lt;/span&gt;,&lt;span class="pl-c1"&gt;0&lt;/span&gt;])
Out[&lt;span class="pl-c1"&gt;1&lt;/span&gt;]: &lt;span class="pl-c1"&gt;True&lt;/span&gt;

In [&lt;span class="pl-c1"&gt;2&lt;/span&gt;]: &lt;span class="pl-c1"&gt;bool&lt;/span&gt;([])
Out[&lt;span class="pl-c1"&gt;2&lt;/span&gt;]: &lt;span class="pl-c1"&gt;False&lt;/span&gt;

In [&lt;span class="pl-c1"&gt;3&lt;/span&gt;]: &lt;span class="pl-c1"&gt;bool&lt;/span&gt;([&lt;span class="pl-c1"&gt;1&lt;/span&gt;,&lt;span class="pl-c1"&gt;0&lt;/span&gt;,&lt;span class="pl-c1"&gt;1&lt;/span&gt;])
Out[&lt;span class="pl-c1"&gt;3&lt;/span&gt;]: &lt;span class="pl-c1"&gt;True&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h4&gt;&lt;a id="user-content-9--字符串转字节" class="anchor" aria-hidden="true" href="#9--字符串转字节"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;9  字符串转字节　　&lt;/h4&gt;
&lt;p&gt;将一个&lt;code&gt;字符串&lt;/code&gt;转换成&lt;code&gt;字节&lt;/code&gt;类型&lt;/p&gt;
&lt;div class="highlight highlight-source-python"&gt;&lt;pre&gt;In [&lt;span class="pl-c1"&gt;1&lt;/span&gt;]: s &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;apple&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;

In [&lt;span class="pl-c1"&gt;2&lt;/span&gt;]: &lt;span class="pl-c1"&gt;bytes&lt;/span&gt;(s,&lt;span class="pl-v"&gt;encoding&lt;/span&gt;&lt;span class="pl-k"&gt;=&lt;/span&gt;&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;utf-8&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;)
Out[&lt;span class="pl-c1"&gt;2&lt;/span&gt;]: &lt;span class="pl-s"&gt;&lt;span class="pl-k"&gt;b&lt;/span&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;apple&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h4&gt;&lt;a id="user-content-10-转为字符串" class="anchor" aria-hidden="true" href="#10-转为字符串"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;10 转为字符串　　&lt;/h4&gt;
&lt;p&gt;将&lt;code&gt;字符类型&lt;/code&gt;、&lt;code&gt;数值类型&lt;/code&gt;等转换为&lt;code&gt;字符串&lt;/code&gt;类型&lt;/p&gt;
&lt;div class="highlight highlight-source-python"&gt;&lt;pre&gt;In [&lt;span class="pl-c1"&gt;1&lt;/span&gt;]: i &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;100&lt;/span&gt;

In [&lt;span class="pl-c1"&gt;2&lt;/span&gt;]: &lt;span class="pl-c1"&gt;str&lt;/span&gt;(i)
Out[&lt;span class="pl-c1"&gt;2&lt;/span&gt;]: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;100&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h4&gt;&lt;a id="user-content-11-是否可调用" class="anchor" aria-hidden="true" href="#11-是否可调用"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;11 是否可调用　　&lt;/h4&gt;
&lt;p&gt;判断对象是否可被调用，能被调用的对象就是一个&lt;code&gt;callable&lt;/code&gt; 对象，比如函数 &lt;code&gt;str&lt;/code&gt;, &lt;code&gt;int&lt;/code&gt; 等都是可被调用的，但是例子&lt;strong&gt;4&lt;/strong&gt; 中&lt;code&gt;xiaoming&lt;/code&gt;实例是不可被调用的：&lt;/p&gt;
&lt;div class="highlight highlight-source-python"&gt;&lt;pre&gt;In [&lt;span class="pl-c1"&gt;1&lt;/span&gt;]: &lt;span class="pl-c1"&gt;callable&lt;/span&gt;(&lt;span class="pl-c1"&gt;str&lt;/span&gt;)
Out[&lt;span class="pl-c1"&gt;1&lt;/span&gt;]: &lt;span class="pl-c1"&gt;True&lt;/span&gt;

In [&lt;span class="pl-c1"&gt;2&lt;/span&gt;]: &lt;span class="pl-c1"&gt;callable&lt;/span&gt;(&lt;span class="pl-c1"&gt;int&lt;/span&gt;)
Out[&lt;span class="pl-c1"&gt;2&lt;/span&gt;]: &lt;span class="pl-c1"&gt;True&lt;/span&gt;

In [&lt;span class="pl-c1"&gt;3&lt;/span&gt;]: xiaoming
Out[&lt;span class="pl-c1"&gt;3&lt;/span&gt;]: &lt;span class="pl-c1"&gt;id&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;0&lt;span class="pl-ii"&gt;01&lt;/span&gt;&lt;/span&gt;, name &lt;span class="pl-k"&gt;=&lt;/span&gt; xiaoming

In [&lt;span class="pl-c1"&gt;4&lt;/span&gt;]: &lt;span class="pl-c1"&gt;callable&lt;/span&gt;(xiaoming)
Out[&lt;span class="pl-c1"&gt;4&lt;/span&gt;]: &lt;span class="pl-c1"&gt;False&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;如果想让&lt;code&gt;xiaoming&lt;/code&gt;能被调用 xiaoming(), 需要重写&lt;code&gt;Student&lt;/code&gt;类的&lt;code&gt;__call__&lt;/code&gt;方法：&lt;/p&gt;
&lt;div class="highlight highlight-source-python"&gt;&lt;pre&gt;In [&lt;span class="pl-c1"&gt;1&lt;/span&gt;]: &lt;span class="pl-k"&gt;class&lt;/span&gt; &lt;span class="pl-en"&gt;Student&lt;/span&gt;():
    &lt;span class="pl-c1"&gt;...&lt;/span&gt;:     &lt;span class="pl-k"&gt;def&lt;/span&gt; &lt;span class="pl-c1"&gt;__init__&lt;/span&gt;(&lt;span class="pl-smi"&gt;&lt;span class="pl-smi"&gt;self&lt;/span&gt;&lt;/span&gt;,&lt;span class="pl-smi"&gt;id&lt;/span&gt;,&lt;span class="pl-smi"&gt;name&lt;/span&gt;):
    &lt;span class="pl-c1"&gt;...&lt;/span&gt;:         &lt;span class="pl-c1"&gt;self&lt;/span&gt;.id &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;id&lt;/span&gt;
    &lt;span class="pl-c1"&gt;...&lt;/span&gt;:         &lt;span class="pl-c1"&gt;self&lt;/span&gt;.name &lt;span class="pl-k"&gt;=&lt;/span&gt; name
    &lt;span class="pl-c1"&gt;...&lt;/span&gt;:     &lt;span class="pl-k"&gt;def&lt;/span&gt; &lt;span class="pl-c1"&gt;__repr__&lt;/span&gt;(&lt;span class="pl-smi"&gt;&lt;span class="pl-smi"&gt;self&lt;/span&gt;&lt;/span&gt;):
    &lt;span class="pl-c1"&gt;...&lt;/span&gt;:         &lt;span class="pl-k"&gt;return&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;id = &lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;&lt;span class="pl-k"&gt;+&lt;/span&gt;&lt;span class="pl-c1"&gt;self&lt;/span&gt;.id &lt;span class="pl-k"&gt;+&lt;/span&gt;&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;, name = &lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;&lt;span class="pl-k"&gt;+&lt;/span&gt;&lt;span class="pl-c1"&gt;self&lt;/span&gt;.name
    &lt;span class="pl-c1"&gt;...&lt;/span&gt;:     &lt;span class="pl-k"&gt;def&lt;/span&gt; &lt;span class="pl-c1"&gt;__call__&lt;/span&gt;(&lt;span class="pl-smi"&gt;&lt;span class="pl-smi"&gt;self&lt;/span&gt;&lt;/span&gt;):
    &lt;span class="pl-c1"&gt;...&lt;/span&gt;:         &lt;span class="pl-c1"&gt;print&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;I can be called&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;)
    &lt;span class="pl-c1"&gt;...&lt;/span&gt;:         &lt;span class="pl-c1"&gt;print&lt;/span&gt;(&lt;span class="pl-s"&gt;f&lt;/span&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;span class="pl-s"&gt;my name is &lt;/span&gt;&lt;span class="pl-c1"&gt;{&lt;/span&gt;&lt;span class="pl-c1"&gt;self&lt;/span&gt;.name&lt;span class="pl-c1"&gt;}&lt;/span&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;)
    &lt;span class="pl-c1"&gt;...&lt;/span&gt;: 
    &lt;span class="pl-c1"&gt;...&lt;/span&gt;: 

In [&lt;span class="pl-c1"&gt;2&lt;/span&gt;]: t &lt;span class="pl-k"&gt;=&lt;/span&gt; Student(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;001&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;,&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;xiaoming&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;)

In [&lt;span class="pl-c1"&gt;3&lt;/span&gt;]: t()
I can be called
my name &lt;span class="pl-k"&gt;is&lt;/span&gt; xiaoming
&lt;/pre&gt;&lt;/div&gt;
&lt;h4&gt;&lt;a id="user-content-12-十转ascii" class="anchor" aria-hidden="true" href="#12-十转ascii"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;12 十转ASCII&lt;/h4&gt;
&lt;p&gt;查看十进制整数对应的&lt;code&gt;ASCII字符&lt;/code&gt;&lt;/p&gt;
&lt;div class="highlight highlight-source-python"&gt;&lt;pre&gt;In [&lt;span class="pl-c1"&gt;1&lt;/span&gt;]: &lt;span class="pl-c1"&gt;chr&lt;/span&gt;(&lt;span class="pl-c1"&gt;65&lt;/span&gt;)
Out[&lt;span class="pl-c1"&gt;1&lt;/span&gt;]: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;A&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h4&gt;&lt;a id="user-content-13-ascii转十" class="anchor" aria-hidden="true" href="#13-ascii转十"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;13 ASCII转十&lt;/h4&gt;
&lt;p&gt;查看某个&lt;code&gt;ASCII字符&lt;/code&gt;对应的十进制数&lt;/p&gt;
&lt;div class="highlight highlight-source-python"&gt;&lt;pre&gt;In [&lt;span class="pl-c1"&gt;1&lt;/span&gt;]: &lt;span class="pl-c1"&gt;ord&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;A&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;)
Out[&lt;span class="pl-c1"&gt;1&lt;/span&gt;]: &lt;span class="pl-c1"&gt;65&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h4&gt;&lt;a id="user-content-14-静态方法" class="anchor" aria-hidden="true" href="#14-静态方法"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;14 静态方法　&lt;/h4&gt;
&lt;p&gt;&lt;code&gt;classmethod&lt;/code&gt; 装饰器对应的函数不需要实例化，不需要 &lt;code&gt;self &lt;/code&gt;参数，但第一个参数需要是表示自身类的 cls 参数，可以来调用类的属性，类的方法，实例化对象等。&lt;/p&gt;
&lt;div class="highlight highlight-source-python"&gt;&lt;pre&gt;In [&lt;span class="pl-c1"&gt;1&lt;/span&gt;]: &lt;span class="pl-k"&gt;class&lt;/span&gt; &lt;span class="pl-en"&gt;Student&lt;/span&gt;():
    &lt;span class="pl-c1"&gt;...&lt;/span&gt;:     &lt;span class="pl-k"&gt;def&lt;/span&gt; &lt;span class="pl-c1"&gt;__init__&lt;/span&gt;(&lt;span class="pl-smi"&gt;&lt;span class="pl-smi"&gt;self&lt;/span&gt;&lt;/span&gt;,&lt;span class="pl-smi"&gt;id&lt;/span&gt;,&lt;span class="pl-smi"&gt;name&lt;/span&gt;):
    &lt;span class="pl-c1"&gt;...&lt;/span&gt;:         &lt;span class="pl-c1"&gt;self&lt;/span&gt;.id &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;id&lt;/span&gt;
    &lt;span class="pl-c1"&gt;...&lt;/span&gt;:         &lt;span class="pl-c1"&gt;self&lt;/span&gt;.name &lt;span class="pl-k"&gt;=&lt;/span&gt; name
    &lt;span class="pl-c1"&gt;...&lt;/span&gt;:     &lt;span class="pl-k"&gt;def&lt;/span&gt; &lt;span class="pl-c1"&gt;__repr__&lt;/span&gt;(&lt;span class="pl-smi"&gt;&lt;span class="pl-smi"&gt;self&lt;/span&gt;&lt;/span&gt;):
    &lt;span class="pl-c1"&gt;...&lt;/span&gt;:         &lt;span class="pl-k"&gt;return&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;id = &lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;&lt;span class="pl-k"&gt;+&lt;/span&gt;&lt;span class="pl-c1"&gt;self&lt;/span&gt;.id &lt;span class="pl-k"&gt;+&lt;/span&gt;&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;, name = &lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;&lt;span class="pl-k"&gt;+&lt;/span&gt;&lt;span class="pl-c1"&gt;self&lt;/span&gt;.name
    &lt;span class="pl-c1"&gt;...&lt;/span&gt;:     &lt;span class="pl-k"&gt;@&lt;/span&gt;&lt;span class="pl-c1"&gt;classmethod&lt;/span&gt;
    &lt;span class="pl-c1"&gt;...&lt;/span&gt;:     &lt;span class="pl-k"&gt;def&lt;/span&gt; &lt;span class="pl-en"&gt;f&lt;/span&gt;(&lt;span class="pl-smi"&gt;&lt;span class="pl-smi"&gt;cls&lt;/span&gt;&lt;/span&gt;):
    &lt;span class="pl-c1"&gt;...&lt;/span&gt;:         &lt;span class="pl-c1"&gt;print&lt;/span&gt;(&lt;span class="pl-c1"&gt;cls&lt;/span&gt;)&lt;/pre&gt;&lt;/div&gt;
&lt;h4&gt;&lt;a id="user-content-15-执行字符串表示的代码" class="anchor" aria-hidden="true" href="#15-执行字符串表示的代码"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;15 执行字符串表示的代码&lt;/h4&gt;
&lt;p&gt;将字符串编译成python能识别或可执行的代码，也可以将文字读成字符串再编译。&lt;/p&gt;
&lt;div class="highlight highlight-source-python"&gt;&lt;pre&gt;In [&lt;span class="pl-c1"&gt;1&lt;/span&gt;]: s  &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;print('helloworld')&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;
    
In [&lt;span class="pl-c1"&gt;2&lt;/span&gt;]: r &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;compile&lt;/span&gt;(s,&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;&amp;lt;string&amp;gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;exec&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
    
In [&lt;span class="pl-c1"&gt;3&lt;/span&gt;]: r
Out[&lt;span class="pl-c1"&gt;3&lt;/span&gt;]: &lt;span class="pl-k"&gt;&amp;lt;&lt;/span&gt;code &lt;span class="pl-c1"&gt;object&lt;/span&gt; &lt;span class="pl-k"&gt;&amp;lt;&lt;/span&gt;module&lt;span class="pl-k"&gt;&amp;gt;&lt;/span&gt; at &lt;span class="pl-c1"&gt;&lt;span class="pl-k"&gt;0x&lt;/span&gt;0000000005DE75D0&lt;/span&gt;, &lt;span class="pl-v"&gt;file&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;&amp;lt;string&amp;gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, line &lt;span class="pl-c1"&gt;1&lt;/span&gt;&lt;span class="pl-k"&gt;&amp;gt;&lt;/span&gt;
    
In [&lt;span class="pl-c1"&gt;4&lt;/span&gt;]: &lt;span class="pl-c1"&gt;exec&lt;/span&gt;(r)
helloworld&lt;/pre&gt;&lt;/div&gt;
&lt;h4&gt;&lt;a id="user-content-16--创建复数" class="anchor" aria-hidden="true" href="#16--创建复数"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;16  创建复数&lt;/h4&gt;
&lt;p&gt;创建一个复数&lt;/p&gt;
&lt;div class="highlight highlight-source-python"&gt;&lt;pre&gt;In [&lt;span class="pl-c1"&gt;1&lt;/span&gt;]: &lt;span class="pl-c1"&gt;complex&lt;/span&gt;(&lt;span class="pl-c1"&gt;1&lt;/span&gt;,&lt;span class="pl-c1"&gt;2&lt;/span&gt;)
Out[&lt;span class="pl-c1"&gt;1&lt;/span&gt;]: (&lt;span class="pl-c1"&gt;1&lt;/span&gt;&lt;span class="pl-k"&gt;+&lt;/span&gt;&lt;span class="pl-c1"&gt;2&lt;span class="pl-k"&gt;j&lt;/span&gt;&lt;/span&gt;)&lt;/pre&gt;&lt;/div&gt;
&lt;h4&gt;&lt;a id="user-content-17-动态删除属性" class="anchor" aria-hidden="true" href="#17-动态删除属性"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;17 动态删除属性　　&lt;/h4&gt;
&lt;p&gt;删除对象的属性&lt;/p&gt;
&lt;div class="highlight highlight-source-python"&gt;&lt;pre&gt;In [&lt;span class="pl-c1"&gt;1&lt;/span&gt;]: &lt;span class="pl-c1"&gt;delattr&lt;/span&gt;(xiaoming,&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;id&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;)

In [&lt;span class="pl-c1"&gt;2&lt;/span&gt;]: &lt;span class="pl-c1"&gt;hasattr&lt;/span&gt;(xiaoming,&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;id&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;)
Out[&lt;span class="pl-c1"&gt;2&lt;/span&gt;]: &lt;span class="pl-c1"&gt;False&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h4&gt;&lt;a id="user-content-18-转为字典" class="anchor" aria-hidden="true" href="#18-转为字典"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;18 转为字典　　&lt;/h4&gt;
&lt;p&gt;创建数据字典&lt;/p&gt;
&lt;div class="highlight highlight-source-python"&gt;&lt;pre&gt;In [&lt;span class="pl-c1"&gt;1&lt;/span&gt;]: &lt;span class="pl-c1"&gt;dict&lt;/span&gt;()
Out[&lt;span class="pl-c1"&gt;1&lt;/span&gt;]: {}

In [&lt;span class="pl-c1"&gt;2&lt;/span&gt;]: &lt;span class="pl-c1"&gt;dict&lt;/span&gt;(&lt;span class="pl-v"&gt;a&lt;/span&gt;&lt;span class="pl-k"&gt;=&lt;/span&gt;&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;a&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;,&lt;span class="pl-v"&gt;b&lt;/span&gt;&lt;span class="pl-k"&gt;=&lt;/span&gt;&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;b&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;)
Out[&lt;span class="pl-c1"&gt;2&lt;/span&gt;]: {&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;a&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;a&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;b&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;b&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;}

In [&lt;span class="pl-c1"&gt;3&lt;/span&gt;]: &lt;span class="pl-c1"&gt;dict&lt;/span&gt;(&lt;span class="pl-c1"&gt;zip&lt;/span&gt;([&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;a&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;,&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;b&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;],[&lt;span class="pl-c1"&gt;1&lt;/span&gt;,&lt;span class="pl-c1"&gt;2&lt;/span&gt;]))
Out[&lt;span class="pl-c1"&gt;3&lt;/span&gt;]: {&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;a&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;: &lt;span class="pl-c1"&gt;1&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;b&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;: &lt;span class="pl-c1"&gt;2&lt;/span&gt;}

In [&lt;span class="pl-c1"&gt;4&lt;/span&gt;]: &lt;span class="pl-c1"&gt;dict&lt;/span&gt;([(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;a&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;,&lt;span class="pl-c1"&gt;1&lt;/span&gt;),(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;b&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;,&lt;span class="pl-c1"&gt;2&lt;/span&gt;)])
Out[&lt;span class="pl-c1"&gt;4&lt;/span&gt;]: {&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;a&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;: &lt;span class="pl-c1"&gt;1&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;b&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;: &lt;span class="pl-c1"&gt;2&lt;/span&gt;}&lt;/pre&gt;&lt;/div&gt;
&lt;h4&gt;&lt;a id="user-content-19-一键查看对象所有方法" class="anchor" aria-hidden="true" href="#19-一键查看对象所有方法"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;19 一键查看对象所有方法　&lt;/h4&gt;
&lt;p&gt;不带参数时返回&lt;code&gt;当前范围&lt;/code&gt;内的变量、方法和定义的类型列表；带参数时返回&lt;code&gt;参数&lt;/code&gt;的属性，方法列表。&lt;/p&gt;
&lt;div class="highlight highlight-source-python"&gt;&lt;pre&gt;In [&lt;span class="pl-c1"&gt;96&lt;/span&gt;]: &lt;span class="pl-c1"&gt;dir&lt;/span&gt;(xiaoming)
Out[&lt;span class="pl-c1"&gt;96&lt;/span&gt;]:
[&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;__class__&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;,
 &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;__delattr__&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;,
 &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;__dict__&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;,
 &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;__dir__&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;,
 &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;__doc__&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;,
 &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;__eq__&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;,
 &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;__format__&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;,
 &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;__ge__&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;,
 &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;__getattribute__&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;,
 &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;__gt__&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;,
 &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;__hash__&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;,
 &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;__init__&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;,
 &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;__init_subclass__&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;,
 &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;__le__&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;,
 &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;__lt__&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;,
 &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;__module__&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;,
 &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;__ne__&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;,
 &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;__new__&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;,
 &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;__reduce__&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;,
 &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;__reduce_ex__&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;,
 &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;__repr__&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;,
 &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;__setattr__&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;,
 &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;__sizeof__&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;,
 &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;__str__&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;,
 &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;__subclasshook__&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;,
 &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;__weakref__&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;,
 
 &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;name&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;]&lt;/pre&gt;&lt;/div&gt;
&lt;h4&gt;&lt;a id="user-content-20-取商和余数" class="anchor" aria-hidden="true" href="#20-取商和余数"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;20 取商和余数　　&lt;/h4&gt;
&lt;p&gt;分别取商和余数&lt;/p&gt;
&lt;div class="highlight highlight-source-python"&gt;&lt;pre&gt;In [&lt;span class="pl-c1"&gt;1&lt;/span&gt;]: &lt;span class="pl-c1"&gt;divmod&lt;/span&gt;(&lt;span class="pl-c1"&gt;10&lt;/span&gt;,&lt;span class="pl-c1"&gt;3&lt;/span&gt;)
Out[&lt;span class="pl-c1"&gt;1&lt;/span&gt;]: (&lt;span class="pl-c1"&gt;3&lt;/span&gt;, &lt;span class="pl-c1"&gt;1&lt;/span&gt;)&lt;/pre&gt;&lt;/div&gt;
&lt;h4&gt;&lt;a id="user-content-21-枚举对象" class="anchor" aria-hidden="true" href="#21-枚举对象"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;21 枚举对象　　&lt;/h4&gt;
&lt;p&gt;返回一个可以枚举的对象，该对象的next()方法将返回一个元组。&lt;/p&gt;
&lt;div class="highlight highlight-source-python"&gt;&lt;pre&gt;In [&lt;span class="pl-c1"&gt;1&lt;/span&gt;]: s &lt;span class="pl-k"&gt;=&lt;/span&gt; [&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;a&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;,&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;b&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;,&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;c&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;]
    &lt;span class="pl-c1"&gt;...&lt;/span&gt;: &lt;span class="pl-k"&gt;for&lt;/span&gt; i ,v &lt;span class="pl-k"&gt;in&lt;/span&gt; &lt;span class="pl-c1"&gt;enumerate&lt;/span&gt;(s,&lt;span class="pl-c1"&gt;1&lt;/span&gt;):
    &lt;span class="pl-c1"&gt;...&lt;/span&gt;:     &lt;span class="pl-c1"&gt;print&lt;/span&gt;(i,v)
    &lt;span class="pl-c1"&gt;...&lt;/span&gt;:
&lt;span class="pl-c1"&gt;1&lt;/span&gt; a
&lt;span class="pl-c1"&gt;2&lt;/span&gt; b
&lt;span class="pl-c1"&gt;3&lt;/span&gt; c&lt;/pre&gt;&lt;/div&gt;
&lt;h4&gt;&lt;a id="user-content-22-计算表达式" class="anchor" aria-hidden="true" href="#22-计算表达式"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;22 计算表达式&lt;/h4&gt;
&lt;p&gt;将字符串str 当成有效的表达式来求值并返回计算结果取出字符串中内容&lt;/p&gt;
&lt;div class="highlight highlight-source-python"&gt;&lt;pre&gt;In [&lt;span class="pl-c1"&gt;1&lt;/span&gt;]: s &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;1 + 3 +5&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;
    &lt;span class="pl-c1"&gt;...&lt;/span&gt;: &lt;span class="pl-c1"&gt;eval&lt;/span&gt;(s)
    &lt;span class="pl-c1"&gt;...&lt;/span&gt;:
Out[&lt;span class="pl-c1"&gt;1&lt;/span&gt;]: &lt;span class="pl-c1"&gt;9&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h4&gt;&lt;a id="user-content-23-查看变量所占字节数" class="anchor" aria-hidden="true" href="#23-查看变量所占字节数"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;23 查看变量所占字节数&lt;/h4&gt;
&lt;div class="highlight highlight-source-python"&gt;&lt;pre&gt;In [&lt;span class="pl-c1"&gt;1&lt;/span&gt;]: &lt;span class="pl-k"&gt;import&lt;/span&gt; sys

In [&lt;span class="pl-c1"&gt;2&lt;/span&gt;]: a &lt;span class="pl-k"&gt;=&lt;/span&gt; {&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;a&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;:&lt;span class="pl-c1"&gt;1&lt;/span&gt;,&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;b&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;:&lt;span class="pl-c1"&gt;2.0&lt;/span&gt;}

In [&lt;span class="pl-c1"&gt;3&lt;/span&gt;]: sys.getsizeof(a) &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; 占用240个字节&lt;/span&gt;
Out[&lt;span class="pl-c1"&gt;3&lt;/span&gt;]: &lt;span class="pl-c1"&gt;240&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h4&gt;&lt;a id="user-content-24-过滤器" class="anchor" aria-hidden="true" href="#24-过滤器"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;24 过滤器　　&lt;/h4&gt;
&lt;p&gt;在函数中设定过滤条件，迭代元素，保留返回值为&lt;code&gt;True&lt;/code&gt;的元素：&lt;/p&gt;
&lt;div class="highlight highlight-source-python"&gt;&lt;pre&gt;In [&lt;span class="pl-c1"&gt;1&lt;/span&gt;]: fil &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;filter&lt;/span&gt;(&lt;span class="pl-k"&gt;lambda&lt;/span&gt; &lt;span class="pl-smi"&gt;x&lt;/span&gt;: x&lt;span class="pl-k"&gt;&amp;gt;&lt;/span&gt;&lt;span class="pl-c1"&gt;10&lt;/span&gt;,[&lt;span class="pl-c1"&gt;1&lt;/span&gt;,&lt;span class="pl-c1"&gt;11&lt;/span&gt;,&lt;span class="pl-c1"&gt;2&lt;/span&gt;,&lt;span class="pl-c1"&gt;45&lt;/span&gt;,&lt;span class="pl-c1"&gt;7&lt;/span&gt;,&lt;span class="pl-c1"&gt;6&lt;/span&gt;,&lt;span class="pl-c1"&gt;13&lt;/span&gt;])

In [&lt;span class="pl-c1"&gt;2&lt;/span&gt;]: &lt;span class="pl-c1"&gt;list&lt;/span&gt;(fil)
Out[&lt;span class="pl-c1"&gt;2&lt;/span&gt;]: [&lt;span class="pl-c1"&gt;11&lt;/span&gt;, &lt;span class="pl-c1"&gt;45&lt;/span&gt;, &lt;span class="pl-c1"&gt;13&lt;/span&gt;]&lt;/pre&gt;&lt;/div&gt;
&lt;h4&gt;&lt;a id="user-content-25-转为浮点类型" class="anchor" aria-hidden="true" href="#25-转为浮点类型"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;25 转为浮点类型　&lt;/h4&gt;
&lt;p&gt;将一个整数或数值型字符串转换为浮点数&lt;/p&gt;
&lt;div class="highlight highlight-source-python"&gt;&lt;pre&gt;In [&lt;span class="pl-c1"&gt;1&lt;/span&gt;]: &lt;span class="pl-c1"&gt;float&lt;/span&gt;(&lt;span class="pl-c1"&gt;3&lt;/span&gt;)
Out[&lt;span class="pl-c1"&gt;1&lt;/span&gt;]: &lt;span class="pl-c1"&gt;3.0&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;如果不能转化为浮点数，则会报&lt;code&gt;ValueError&lt;/code&gt;:&lt;/p&gt;
&lt;div class="highlight highlight-source-python"&gt;&lt;pre&gt;In [&lt;span class="pl-c1"&gt;2&lt;/span&gt;]: &lt;span class="pl-c1"&gt;float&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;a&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;)
&lt;span class="pl-c1"&gt;ValueError&lt;/span&gt;                                Traceback (most recent call last)
&lt;span class="pl-k"&gt;&amp;lt;&lt;/span&gt;ipython&lt;span class="pl-k"&gt;-&lt;/span&gt;&lt;span class="pl-c1"&gt;input&lt;/span&gt;&lt;span class="pl-k"&gt;-&lt;/span&gt;&lt;span class="pl-c1"&gt;11&lt;/span&gt;&lt;span class="pl-k"&gt;-&lt;/span&gt;&lt;span class="pl-ii"&gt;99859da4e72c&lt;/span&gt;&lt;span class="pl-k"&gt;&amp;gt;&lt;/span&gt; &lt;span class="pl-k"&gt;in&lt;/span&gt; &lt;span class="pl-k"&gt;&amp;lt;&lt;/span&gt;module&lt;span class="pl-k"&gt;&amp;gt;&lt;/span&gt;()
&lt;span class="pl-ii"&gt;----&lt;/span&gt;&lt;span class="pl-k"&gt;&amp;gt;&lt;/span&gt; &lt;span class="pl-c1"&gt;1&lt;/span&gt; &lt;span class="pl-c1"&gt;float&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;a&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;)

&lt;span class="pl-c1"&gt;ValueError&lt;/span&gt;: could &lt;span class="pl-k"&gt;not&lt;/span&gt; convert string to &lt;span class="pl-c1"&gt;float&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;a&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;h4&gt;&lt;a id="user-content-26-字符串格式化" class="anchor" aria-hidden="true" href="#26-字符串格式化"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;26 字符串格式化　&lt;/h4&gt;
&lt;p&gt;格式化输出字符串，format(value, format_spec)实质上是调用了value的__format__(format_spec)方法。&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;In [104]: print("i am {0},age{1}".format("tom",18))
i am tom,age18
&lt;/code&gt;&lt;/pre&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;3.1415926&lt;/th&gt;
&lt;th&gt;{:.2f}&lt;/th&gt;
&lt;th&gt;3.14&lt;/th&gt;
&lt;th&gt;保留小数点后两位&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;3.1415926&lt;/td&gt;
&lt;td&gt;{:+.2f}&lt;/td&gt;
&lt;td&gt;+3.14&lt;/td&gt;
&lt;td&gt;带符号保留小数点后两位&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;-1&lt;/td&gt;
&lt;td&gt;{:+.2f}&lt;/td&gt;
&lt;td&gt;-1.00&lt;/td&gt;
&lt;td&gt;带符号保留小数点后两位&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;2.71828&lt;/td&gt;
&lt;td&gt;{:.0f}&lt;/td&gt;
&lt;td&gt;3&lt;/td&gt;
&lt;td&gt;不带小数&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;5&lt;/td&gt;
&lt;td&gt;{:0&amp;gt;2d}&lt;/td&gt;
&lt;td&gt;05&lt;/td&gt;
&lt;td&gt;数字补零 (填充左边, 宽度为2)&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;5&lt;/td&gt;
&lt;td&gt;{:x&amp;lt;4d}&lt;/td&gt;
&lt;td&gt;5xxx&lt;/td&gt;
&lt;td&gt;数字补x (填充右边, 宽度为4)&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;10&lt;/td&gt;
&lt;td&gt;{:x&amp;lt;4d}&lt;/td&gt;
&lt;td&gt;10xx&lt;/td&gt;
&lt;td&gt;数字补x (填充右边, 宽度为4)&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;1000000&lt;/td&gt;
&lt;td&gt;{:,}&lt;/td&gt;
&lt;td&gt;1,000,000&lt;/td&gt;
&lt;td&gt;以逗号分隔的数字格式&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;0.25&lt;/td&gt;
&lt;td&gt;{:.2%}&lt;/td&gt;
&lt;td&gt;25.00%&lt;/td&gt;
&lt;td&gt;百分比格式&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;1000000000&lt;/td&gt;
&lt;td&gt;{:.2e}&lt;/td&gt;
&lt;td&gt;1.00e+09&lt;/td&gt;
&lt;td&gt;指数记法&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;18&lt;/td&gt;
&lt;td&gt;{:&amp;gt;10d}&lt;/td&gt;
&lt;td&gt;' 18'&lt;/td&gt;
&lt;td&gt;右对齐 (默认, 宽度为10)&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;18&lt;/td&gt;
&lt;td&gt;{:&amp;lt;10d}&lt;/td&gt;
&lt;td&gt;'18 '&lt;/td&gt;
&lt;td&gt;左对齐 (宽度为10)&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;18&lt;/td&gt;
&lt;td&gt;{:^10d}&lt;/td&gt;
&lt;td&gt;' 18 '&lt;/td&gt;
&lt;td&gt;中间对齐 (宽度为10)&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h4&gt;&lt;a id="user-content-27-冻结集合" class="anchor" aria-hidden="true" href="#27-冻结集合"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;27 冻结集合　　&lt;/h4&gt;
&lt;p&gt;创建一个不可修改的集合。&lt;/p&gt;
&lt;div class="highlight highlight-source-python"&gt;&lt;pre&gt;In [&lt;span class="pl-c1"&gt;1&lt;/span&gt;]: &lt;span class="pl-c1"&gt;frozenset&lt;/span&gt;([&lt;span class="pl-c1"&gt;1&lt;/span&gt;,&lt;span class="pl-c1"&gt;1&lt;/span&gt;,&lt;span class="pl-c1"&gt;3&lt;/span&gt;,&lt;span class="pl-c1"&gt;2&lt;/span&gt;,&lt;span class="pl-c1"&gt;3&lt;/span&gt;])
Out[&lt;span class="pl-c1"&gt;1&lt;/span&gt;]: &lt;span class="pl-c1"&gt;frozenset&lt;/span&gt;({&lt;span class="pl-c1"&gt;1&lt;/span&gt;, &lt;span class="pl-c1"&gt;2&lt;/span&gt;, &lt;span class="pl-c1"&gt;3&lt;/span&gt;})&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;因为不可修改，所以没有像&lt;code&gt;set&lt;/code&gt;那样的&lt;code&gt;add&lt;/code&gt;和&lt;code&gt;pop&lt;/code&gt;方法&lt;/p&gt;
&lt;h4&gt;&lt;a id="user-content-28-动态获取对象属性" class="anchor" aria-hidden="true" href="#28-动态获取对象属性"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;28 动态获取对象属性　&lt;/h4&gt;
&lt;p&gt;获取对象的属性&lt;/p&gt;
&lt;div class="highlight highlight-source-python"&gt;&lt;pre&gt;In [&lt;span class="pl-c1"&gt;1&lt;/span&gt;]: &lt;span class="pl-k"&gt;class&lt;/span&gt; &lt;span class="pl-en"&gt;Student&lt;/span&gt;():
   &lt;span class="pl-c1"&gt;...&lt;/span&gt;:     &lt;span class="pl-k"&gt;def&lt;/span&gt; &lt;span class="pl-c1"&gt;__init__&lt;/span&gt;(&lt;span class="pl-smi"&gt;&lt;span class="pl-smi"&gt;self&lt;/span&gt;&lt;/span&gt;,&lt;span class="pl-smi"&gt;id&lt;/span&gt;,&lt;span class="pl-smi"&gt;name&lt;/span&gt;):
   &lt;span class="pl-c1"&gt;...&lt;/span&gt;:         &lt;span class="pl-c1"&gt;self&lt;/span&gt;.id &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;id&lt;/span&gt;
   &lt;span class="pl-c1"&gt;...&lt;/span&gt;:         &lt;span class="pl-c1"&gt;self&lt;/span&gt;.name &lt;span class="pl-k"&gt;=&lt;/span&gt; name
   &lt;span class="pl-c1"&gt;...&lt;/span&gt;:     &lt;span class="pl-k"&gt;def&lt;/span&gt; &lt;span class="pl-c1"&gt;__repr__&lt;/span&gt;(&lt;span class="pl-smi"&gt;&lt;span class="pl-smi"&gt;self&lt;/span&gt;&lt;/span&gt;):
   &lt;span class="pl-c1"&gt;...&lt;/span&gt;:         &lt;span class="pl-k"&gt;return&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;id = &lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;&lt;span class="pl-k"&gt;+&lt;/span&gt;&lt;span class="pl-c1"&gt;self&lt;/span&gt;.id &lt;span class="pl-k"&gt;+&lt;/span&gt;&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;, name = &lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;&lt;span class="pl-k"&gt;+&lt;/span&gt;&lt;span class="pl-c1"&gt;self&lt;/span&gt;.name

In [&lt;span class="pl-c1"&gt;2&lt;/span&gt;]: xiaoming &lt;span class="pl-k"&gt;=&lt;/span&gt; Student(&lt;span class="pl-v"&gt;id&lt;/span&gt;&lt;span class="pl-k"&gt;=&lt;/span&gt;&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;001&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;,&lt;span class="pl-v"&gt;name&lt;/span&gt;&lt;span class="pl-k"&gt;=&lt;/span&gt;&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;xiaoming&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;)
In [&lt;span class="pl-c1"&gt;3&lt;/span&gt;]: &lt;span class="pl-c1"&gt;getattr&lt;/span&gt;(xiaoming,&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;name&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;) &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; 获取xiaoming这个实例的name属性值&lt;/span&gt;
Out[&lt;span class="pl-c1"&gt;3&lt;/span&gt;]: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;xiaoming&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h4&gt;&lt;a id="user-content-29-对象是否有这个属性" class="anchor" aria-hidden="true" href="#29-对象是否有这个属性"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;29 对象是否有这个属性&lt;/h4&gt;
&lt;div class="highlight highlight-source-python"&gt;&lt;pre&gt;In [&lt;span class="pl-c1"&gt;1&lt;/span&gt;]: &lt;span class="pl-k"&gt;class&lt;/span&gt; &lt;span class="pl-en"&gt;Student&lt;/span&gt;():
   &lt;span class="pl-c1"&gt;...&lt;/span&gt;:     &lt;span class="pl-k"&gt;def&lt;/span&gt; &lt;span class="pl-c1"&gt;__init__&lt;/span&gt;(&lt;span class="pl-smi"&gt;&lt;span class="pl-smi"&gt;self&lt;/span&gt;&lt;/span&gt;,&lt;span class="pl-smi"&gt;id&lt;/span&gt;,&lt;span class="pl-smi"&gt;name&lt;/span&gt;):
   &lt;span class="pl-c1"&gt;...&lt;/span&gt;:         &lt;span class="pl-c1"&gt;self&lt;/span&gt;.id &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;id&lt;/span&gt;
   &lt;span class="pl-c1"&gt;...&lt;/span&gt;:         &lt;span class="pl-c1"&gt;self&lt;/span&gt;.name &lt;span class="pl-k"&gt;=&lt;/span&gt; name
   &lt;span class="pl-c1"&gt;...&lt;/span&gt;:     &lt;span class="pl-k"&gt;def&lt;/span&gt; &lt;span class="pl-c1"&gt;__repr__&lt;/span&gt;(&lt;span class="pl-smi"&gt;&lt;span class="pl-smi"&gt;self&lt;/span&gt;&lt;/span&gt;):
   &lt;span class="pl-c1"&gt;...&lt;/span&gt;:         &lt;span class="pl-k"&gt;return&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;id = &lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;&lt;span class="pl-k"&gt;+&lt;/span&gt;&lt;span class="pl-c1"&gt;self&lt;/span&gt;.id &lt;span class="pl-k"&gt;+&lt;/span&gt;&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;, name = &lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;&lt;span class="pl-k"&gt;+&lt;/span&gt;&lt;span class="pl-c1"&gt;self&lt;/span&gt;.name

In [&lt;span class="pl-c1"&gt;2&lt;/span&gt;]: xiaoming &lt;span class="pl-k"&gt;=&lt;/span&gt; Student(&lt;span class="pl-v"&gt;id&lt;/span&gt;&lt;span class="pl-k"&gt;=&lt;/span&gt;&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;001&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;,&lt;span class="pl-v"&gt;name&lt;/span&gt;&lt;span class="pl-k"&gt;=&lt;/span&gt;&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;xiaoming&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;)
In [&lt;span class="pl-c1"&gt;3&lt;/span&gt;]: &lt;span class="pl-c1"&gt;hasattr&lt;/span&gt;(xiaoming,&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;name&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;)
Out[&lt;span class="pl-c1"&gt;3&lt;/span&gt;]: &lt;span class="pl-c1"&gt;True&lt;/span&gt;

In [&lt;span class="pl-c1"&gt;4&lt;/span&gt;]: &lt;span class="pl-c1"&gt;hasattr&lt;/span&gt;(xiaoming,&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;address&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;)
Out[&lt;span class="pl-c1"&gt;4&lt;/span&gt;]: &lt;span class="pl-c1"&gt;False&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h4&gt;&lt;a id="user-content-30-返回对象的哈希值" class="anchor" aria-hidden="true" href="#30-返回对象的哈希值"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;30 返回对象的哈希值　　&lt;/h4&gt;
&lt;p&gt;返回对象的哈希值，值得注意的是自定义的实例都是可哈希的，&lt;code&gt;list&lt;/code&gt;, &lt;code&gt;dict&lt;/code&gt;, &lt;code&gt;set&lt;/code&gt;等可变对象都是不可哈希的(unhashable)&lt;/p&gt;
&lt;div class="highlight highlight-source-python"&gt;&lt;pre&gt;In [&lt;span class="pl-c1"&gt;1&lt;/span&gt;]: &lt;span class="pl-c1"&gt;hash&lt;/span&gt;(xiaoming)
Out[&lt;span class="pl-c1"&gt;1&lt;/span&gt;]: &lt;span class="pl-c1"&gt;6139638&lt;/span&gt;

In [&lt;span class="pl-c1"&gt;2&lt;/span&gt;]: &lt;span class="pl-c1"&gt;hash&lt;/span&gt;([&lt;span class="pl-c1"&gt;1&lt;/span&gt;,&lt;span class="pl-c1"&gt;2&lt;/span&gt;,&lt;span class="pl-c1"&gt;3&lt;/span&gt;])
&lt;span class="pl-c1"&gt;TypeError&lt;/span&gt;                                 Traceback (most recent call last)
&lt;span class="pl-k"&gt;&amp;lt;&lt;/span&gt;ipython&lt;span class="pl-k"&gt;-&lt;/span&gt;&lt;span class="pl-c1"&gt;input&lt;/span&gt;&lt;span class="pl-k"&gt;-&lt;/span&gt;&lt;span class="pl-c1"&gt;32&lt;/span&gt;&lt;span class="pl-k"&gt;-&lt;/span&gt;fb5b1b1d9906&lt;span class="pl-k"&gt;&amp;gt;&lt;/span&gt; &lt;span class="pl-k"&gt;in&lt;/span&gt; &lt;span class="pl-k"&gt;&amp;lt;&lt;/span&gt;module&lt;span class="pl-k"&gt;&amp;gt;&lt;/span&gt;()
&lt;span class="pl-ii"&gt;----&lt;/span&gt;&lt;span class="pl-k"&gt;&amp;gt;&lt;/span&gt; &lt;span class="pl-c1"&gt;1&lt;/span&gt; &lt;span class="pl-c1"&gt;hash&lt;/span&gt;([&lt;span class="pl-c1"&gt;1&lt;/span&gt;,&lt;span class="pl-c1"&gt;2&lt;/span&gt;,&lt;span class="pl-c1"&gt;3&lt;/span&gt;])

&lt;span class="pl-c1"&gt;TypeError&lt;/span&gt;: unhashable &lt;span class="pl-c1"&gt;type&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;list&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h4&gt;&lt;a id="user-content-31--一键帮助" class="anchor" aria-hidden="true" href="#31--一键帮助"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;31  一键帮助　&lt;/h4&gt;
&lt;p&gt;返回对象的帮助文档&lt;/p&gt;
&lt;div class="highlight highlight-source-python"&gt;&lt;pre&gt;In [&lt;span class="pl-c1"&gt;1&lt;/span&gt;]: &lt;span class="pl-c1"&gt;help&lt;/span&gt;(xiaoming)
Help on Student &lt;span class="pl-k"&gt;in&lt;/span&gt; module __main__ &lt;span class="pl-c1"&gt;object&lt;/span&gt;:

&lt;span class="pl-k"&gt;class&lt;/span&gt; &lt;span class="pl-en"&gt;Student&lt;/span&gt;(&lt;span class="pl-e"&gt;builtins&lt;/span&gt;.&lt;span class="pl-e"&gt;object&lt;/span&gt;)
 |  &lt;span class="pl-en"&gt;Methods&lt;/span&gt; &lt;span class="pl-en"&gt;defined&lt;/span&gt; &lt;span class="pl-en"&gt;here&lt;/span&gt;:
 &lt;span class="pl-k"&gt;|&lt;/span&gt;
 &lt;span class="pl-k"&gt;|&lt;/span&gt;  &lt;span class="pl-c1"&gt;__init__&lt;/span&gt;(&lt;span class="pl-c1"&gt;self&lt;/span&gt;, &lt;span class="pl-c1"&gt;id&lt;/span&gt;, name)
 &lt;span class="pl-k"&gt;|&lt;/span&gt;
 &lt;span class="pl-k"&gt;|&lt;/span&gt;  &lt;span class="pl-c1"&gt;__repr__&lt;/span&gt;(&lt;span class="pl-c1"&gt;self&lt;/span&gt;)
 &lt;span class="pl-k"&gt;|&lt;/span&gt;
 &lt;span class="pl-k"&gt;|&lt;/span&gt;  Data descriptors defined here:
 &lt;span class="pl-k"&gt;|&lt;/span&gt;
 &lt;span class="pl-k"&gt;|&lt;/span&gt;  &lt;span class="pl-c1"&gt;__dict__&lt;/span&gt;
 &lt;span class="pl-k"&gt;|&lt;/span&gt;      dictionary &lt;span class="pl-k"&gt;for&lt;/span&gt; instance variables (&lt;span class="pl-k"&gt;if&lt;/span&gt; defined)
 &lt;span class="pl-k"&gt;|&lt;/span&gt;
 &lt;span class="pl-k"&gt;|&lt;/span&gt;  &lt;span class="pl-c1"&gt;__weakref__&lt;/span&gt;
 &lt;span class="pl-k"&gt;|&lt;/span&gt;      &lt;span class="pl-c1"&gt;list&lt;/span&gt; of weak references to the &lt;span class="pl-c1"&gt;object&lt;/span&gt; (&lt;span class="pl-k"&gt;if&lt;/span&gt; defined)&lt;/pre&gt;&lt;/div&gt;
&lt;h4&gt;&lt;a id="user-content-32-对象门牌号" class="anchor" aria-hidden="true" href="#32-对象门牌号"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;32 对象门牌号　&lt;/h4&gt;
&lt;p&gt;返回对象的内存地址&lt;/p&gt;
&lt;div class="highlight highlight-source-python"&gt;&lt;pre&gt;In [&lt;span class="pl-c1"&gt;1&lt;/span&gt;]: &lt;span class="pl-c1"&gt;id&lt;/span&gt;(xiaoming)
Out[&lt;span class="pl-c1"&gt;1&lt;/span&gt;]: &lt;span class="pl-c1"&gt;98234208&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h4&gt;&lt;a id="user-content-33-获取用户输入" class="anchor" aria-hidden="true" href="#33-获取用户输入"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;33 获取用户输入　&lt;/h4&gt;
&lt;p&gt;获取用户输入内容&lt;/p&gt;
&lt;div class="highlight highlight-source-python"&gt;&lt;pre&gt;In [&lt;span class="pl-c1"&gt;1&lt;/span&gt;]: &lt;span class="pl-c1"&gt;input&lt;/span&gt;()
aa
Out[&lt;span class="pl-c1"&gt;1&lt;/span&gt;]: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;aa&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h4&gt;&lt;a id="user-content-34--转为整型" class="anchor" aria-hidden="true" href="#34--转为整型"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;34  转为整型　　&lt;/h4&gt;
&lt;p&gt;int(x, base =10) , x可能为字符串或数值，将x 转换为一个普通整数。如果参数是字符串，那么它可能包含符号和小数点。如果超出了普通整数的表示范围，一个长整数被返回。&lt;/p&gt;
&lt;div class="highlight highlight-source-python"&gt;&lt;pre&gt;In [&lt;span class="pl-c1"&gt;1&lt;/span&gt;]: &lt;span class="pl-c1"&gt;int&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;12&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;,&lt;span class="pl-c1"&gt;16&lt;/span&gt;)
Out[&lt;span class="pl-c1"&gt;1&lt;/span&gt;]: &lt;span class="pl-c1"&gt;18&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h4&gt;&lt;a id="user-content-35-isinstance" class="anchor" aria-hidden="true" href="#35-isinstance"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;35 isinstance&lt;/h4&gt;
&lt;p&gt;判断&lt;em&gt;object&lt;/em&gt;是否为类&lt;em&gt;classinfo&lt;/em&gt;的实例，是返回true&lt;/p&gt;
&lt;div class="highlight highlight-source-python"&gt;&lt;pre&gt;In [&lt;span class="pl-c1"&gt;1&lt;/span&gt;]: &lt;span class="pl-k"&gt;class&lt;/span&gt; &lt;span class="pl-en"&gt;Student&lt;/span&gt;():
   &lt;span class="pl-c1"&gt;...&lt;/span&gt;:     &lt;span class="pl-k"&gt;def&lt;/span&gt; &lt;span class="pl-c1"&gt;__init__&lt;/span&gt;(&lt;span class="pl-smi"&gt;&lt;span class="pl-smi"&gt;self&lt;/span&gt;&lt;/span&gt;,&lt;span class="pl-smi"&gt;id&lt;/span&gt;,&lt;span class="pl-smi"&gt;name&lt;/span&gt;):
   &lt;span class="pl-c1"&gt;...&lt;/span&gt;:         &lt;span class="pl-c1"&gt;self&lt;/span&gt;.id &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;id&lt;/span&gt;
   &lt;span class="pl-c1"&gt;...&lt;/span&gt;:         &lt;span class="pl-c1"&gt;self&lt;/span&gt;.name &lt;span class="pl-k"&gt;=&lt;/span&gt; name
   &lt;span class="pl-c1"&gt;...&lt;/span&gt;:     &lt;span class="pl-k"&gt;def&lt;/span&gt; &lt;span class="pl-c1"&gt;__repr__&lt;/span&gt;(&lt;span class="pl-smi"&gt;&lt;span class="pl-smi"&gt;self&lt;/span&gt;&lt;/span&gt;):
   &lt;span class="pl-c1"&gt;...&lt;/span&gt;:         &lt;span class="pl-k"&gt;return&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;id = &lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;&lt;span class="pl-k"&gt;+&lt;/span&gt;&lt;span class="pl-c1"&gt;self&lt;/span&gt;.id &lt;span class="pl-k"&gt;+&lt;/span&gt;&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;, name = &lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;&lt;span class="pl-k"&gt;+&lt;/span&gt;&lt;span class="pl-c1"&gt;self&lt;/span&gt;.name

In [&lt;span class="pl-c1"&gt;2&lt;/span&gt;]: xiaoming &lt;span class="pl-k"&gt;=&lt;/span&gt; Student(&lt;span class="pl-v"&gt;id&lt;/span&gt;&lt;span class="pl-k"&gt;=&lt;/span&gt;&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;001&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;,&lt;span class="pl-v"&gt;name&lt;/span&gt;&lt;span class="pl-k"&gt;=&lt;/span&gt;&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;xiaoming&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;)

In [&lt;span class="pl-c1"&gt;3&lt;/span&gt;]: &lt;span class="pl-c1"&gt;isinstance&lt;/span&gt;(xiaoming,Student)
Out[&lt;span class="pl-c1"&gt;3&lt;/span&gt;]: &lt;span class="pl-c1"&gt;True&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h4&gt;&lt;a id="user-content-36-父子关系鉴定" class="anchor" aria-hidden="true" href="#36-父子关系鉴定"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;36 父子关系鉴定&lt;/h4&gt;
&lt;div class="highlight highlight-source-python"&gt;&lt;pre&gt;In [&lt;span class="pl-c1"&gt;1&lt;/span&gt;]: &lt;span class="pl-k"&gt;class&lt;/span&gt; &lt;span class="pl-en"&gt;undergraduate&lt;/span&gt;(&lt;span class="pl-e"&gt;Student&lt;/span&gt;):
    &lt;span class="pl-c1"&gt;...&lt;/span&gt;:     &lt;span class="pl-k"&gt;def&lt;/span&gt; &lt;span class="pl-en"&gt;studyClass&lt;/span&gt;(&lt;span class="pl-smi"&gt;&lt;span class="pl-smi"&gt;self&lt;/span&gt;&lt;/span&gt;):
    &lt;span class="pl-c1"&gt;...&lt;/span&gt;:         &lt;span class="pl-k"&gt;pass&lt;/span&gt;
    &lt;span class="pl-c1"&gt;...&lt;/span&gt;:     &lt;span class="pl-k"&gt;def&lt;/span&gt; &lt;span class="pl-en"&gt;attendActivity&lt;/span&gt;(&lt;span class="pl-smi"&gt;&lt;span class="pl-smi"&gt;self&lt;/span&gt;&lt;/span&gt;):
    &lt;span class="pl-c1"&gt;...&lt;/span&gt;:         &lt;span class="pl-k"&gt;pass&lt;/span&gt;

In [&lt;span class="pl-c1"&gt;2&lt;/span&gt;]: &lt;span class="pl-c1"&gt;issubclass&lt;/span&gt;(undergraduate,Student)
Out[&lt;span class="pl-c1"&gt;2&lt;/span&gt;]: &lt;span class="pl-c1"&gt;True&lt;/span&gt;

In [&lt;span class="pl-c1"&gt;3&lt;/span&gt;]: &lt;span class="pl-c1"&gt;issubclass&lt;/span&gt;(&lt;span class="pl-c1"&gt;object&lt;/span&gt;,Student)
Out[&lt;span class="pl-c1"&gt;3&lt;/span&gt;]: &lt;span class="pl-c1"&gt;False&lt;/span&gt;

In [&lt;span class="pl-c1"&gt;4&lt;/span&gt;]: &lt;span class="pl-c1"&gt;issubclass&lt;/span&gt;(Student,&lt;span class="pl-c1"&gt;object&lt;/span&gt;)
Out[&lt;span class="pl-c1"&gt;4&lt;/span&gt;]: &lt;span class="pl-c1"&gt;True&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;如果class是classinfo元组中某个元素的子类，也会返回True&lt;/p&gt;
&lt;div class="highlight highlight-source-python"&gt;&lt;pre&gt;In [&lt;span class="pl-c1"&gt;1&lt;/span&gt;]: &lt;span class="pl-c1"&gt;issubclass&lt;/span&gt;(&lt;span class="pl-c1"&gt;int&lt;/span&gt;,(&lt;span class="pl-c1"&gt;int&lt;/span&gt;,&lt;span class="pl-c1"&gt;float&lt;/span&gt;))
Out[&lt;span class="pl-c1"&gt;1&lt;/span&gt;]: &lt;span class="pl-c1"&gt;True&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h4&gt;&lt;a id="user-content-37-创建迭代器类型" class="anchor" aria-hidden="true" href="#37-创建迭代器类型"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;37 创建迭代器类型&lt;/h4&gt;
&lt;p&gt;使用&lt;code&gt;iter(obj, sentinel)&lt;/code&gt;, 返回一个可迭代对象, sentinel可省略(一旦迭代到此元素，立即终止)&lt;/p&gt;
&lt;div class="highlight highlight-source-python"&gt;&lt;pre&gt;In [&lt;span class="pl-c1"&gt;1&lt;/span&gt;]: lst &lt;span class="pl-k"&gt;=&lt;/span&gt; [&lt;span class="pl-c1"&gt;1&lt;/span&gt;,&lt;span class="pl-c1"&gt;3&lt;/span&gt;,&lt;span class="pl-c1"&gt;5&lt;/span&gt;]

In [&lt;span class="pl-c1"&gt;2&lt;/span&gt;]: &lt;span class="pl-k"&gt;for&lt;/span&gt; i &lt;span class="pl-k"&gt;in&lt;/span&gt; &lt;span class="pl-c1"&gt;iter&lt;/span&gt;(lst):
    &lt;span class="pl-c1"&gt;...&lt;/span&gt;:     &lt;span class="pl-c1"&gt;print&lt;/span&gt;(i)
    &lt;span class="pl-c1"&gt;...&lt;/span&gt;:
&lt;span class="pl-c1"&gt;1&lt;/span&gt;
&lt;span class="pl-c1"&gt;3&lt;/span&gt;
&lt;span class="pl-c1"&gt;5&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;div class="highlight highlight-source-python"&gt;&lt;pre&gt;In [&lt;span class="pl-c1"&gt;1&lt;/span&gt;]: &lt;span class="pl-k"&gt;class&lt;/span&gt; &lt;span class="pl-en"&gt;TestIter&lt;/span&gt;(&lt;span class="pl-c1"&gt;object&lt;/span&gt;):
    &lt;span class="pl-c1"&gt;...&lt;/span&gt;:     &lt;span class="pl-k"&gt;def&lt;/span&gt; &lt;span class="pl-c1"&gt;__init__&lt;/span&gt;(&lt;span class="pl-smi"&gt;&lt;span class="pl-smi"&gt;self&lt;/span&gt;&lt;/span&gt;):
    &lt;span class="pl-c1"&gt;...&lt;/span&gt;:         &lt;span class="pl-c1"&gt;self&lt;/span&gt;.l&lt;span class="pl-k"&gt;=&lt;/span&gt;[&lt;span class="pl-c1"&gt;1&lt;/span&gt;,&lt;span class="pl-c1"&gt;3&lt;/span&gt;,&lt;span class="pl-c1"&gt;2&lt;/span&gt;,&lt;span class="pl-c1"&gt;3&lt;/span&gt;,&lt;span class="pl-c1"&gt;4&lt;/span&gt;,&lt;span class="pl-c1"&gt;5&lt;/span&gt;]
    &lt;span class="pl-c1"&gt;...&lt;/span&gt;:         &lt;span class="pl-c1"&gt;self&lt;/span&gt;.i&lt;span class="pl-k"&gt;=&lt;/span&gt;&lt;span class="pl-c1"&gt;iter&lt;/span&gt;(&lt;span class="pl-c1"&gt;self&lt;/span&gt;.l)
    &lt;span class="pl-c1"&gt;...&lt;/span&gt;:     &lt;span class="pl-k"&gt;def&lt;/span&gt; &lt;span class="pl-c1"&gt;__call__&lt;/span&gt;(&lt;span class="pl-smi"&gt;&lt;span class="pl-smi"&gt;self&lt;/span&gt;&lt;/span&gt;):  &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt;定义了__call__方法的类的实例是可调用的&lt;/span&gt;
    &lt;span class="pl-c1"&gt;...&lt;/span&gt;:         item &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;next&lt;/span&gt;(&lt;span class="pl-c1"&gt;self&lt;/span&gt;.i)
    &lt;span class="pl-c1"&gt;...&lt;/span&gt;:         &lt;span class="pl-c1"&gt;print&lt;/span&gt; (&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;__call__ is called,fowhich would return&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;,item)
    &lt;span class="pl-c1"&gt;...&lt;/span&gt;:         &lt;span class="pl-k"&gt;return&lt;/span&gt; item
    &lt;span class="pl-c1"&gt;...&lt;/span&gt;:     &lt;span class="pl-k"&gt;def&lt;/span&gt; &lt;span class="pl-c1"&gt;__iter__&lt;/span&gt;(&lt;span class="pl-smi"&gt;&lt;span class="pl-smi"&gt;self&lt;/span&gt;&lt;/span&gt;): &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt;支持迭代协议(即定义有__iter__()函数)&lt;/span&gt;
    &lt;span class="pl-c1"&gt;...&lt;/span&gt;:         &lt;span class="pl-c1"&gt;print&lt;/span&gt; (&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;__iter__ is called!!&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
    &lt;span class="pl-c1"&gt;...&lt;/span&gt;:         &lt;span class="pl-k"&gt;return&lt;/span&gt; &lt;span class="pl-c1"&gt;iter&lt;/span&gt;(&lt;span class="pl-c1"&gt;self&lt;/span&gt;.l)
In [&lt;span class="pl-c1"&gt;2&lt;/span&gt;]: t &lt;span class="pl-k"&gt;=&lt;/span&gt; TestIter()
In [&lt;span class="pl-c1"&gt;3&lt;/span&gt;]: t() &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; 因为实现了__call__，所以t实例能被调用&lt;/span&gt;
&lt;span class="pl-c1"&gt;__call__&lt;/span&gt; &lt;span class="pl-k"&gt;is&lt;/span&gt; called,which would &lt;span class="pl-k"&gt;return&lt;/span&gt; &lt;span class="pl-c1"&gt;1&lt;/span&gt;
Out[&lt;span class="pl-c1"&gt;3&lt;/span&gt;]: &lt;span class="pl-c1"&gt;1&lt;/span&gt;

In [&lt;span class="pl-c1"&gt;4&lt;/span&gt;]: &lt;span class="pl-k"&gt;for&lt;/span&gt; e &lt;span class="pl-k"&gt;in&lt;/span&gt; TestIter(): &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; 因为实现了__iter__方法，所以t能被迭代&lt;/span&gt;
    &lt;span class="pl-c1"&gt;...&lt;/span&gt;:     &lt;span class="pl-c1"&gt;print&lt;/span&gt;(e)
    &lt;span class="pl-c1"&gt;...&lt;/span&gt;: 
&lt;span class="pl-c1"&gt;__iter__&lt;/span&gt; &lt;span class="pl-k"&gt;is&lt;/span&gt; called!!
&lt;span class="pl-c1"&gt;1&lt;/span&gt;
&lt;span class="pl-c1"&gt;3&lt;/span&gt;
&lt;span class="pl-c1"&gt;2&lt;/span&gt;
&lt;span class="pl-c1"&gt;3&lt;/span&gt;
&lt;span class="pl-c1"&gt;4&lt;/span&gt;
&lt;span class="pl-c1"&gt;5&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h4&gt;&lt;a id="user-content-38-所有对象之根" class="anchor" aria-hidden="true" href="#38-所有对象之根"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;38 所有对象之根&lt;/h4&gt;
&lt;p&gt;object 是所有类的基类&lt;/p&gt;
&lt;div class="highlight highlight-source-python"&gt;&lt;pre&gt;In [&lt;span class="pl-c1"&gt;1&lt;/span&gt;]: o &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;object&lt;/span&gt;()

In [&lt;span class="pl-c1"&gt;2&lt;/span&gt;]: &lt;span class="pl-c1"&gt;type&lt;/span&gt;(o)
Out[&lt;span class="pl-c1"&gt;2&lt;/span&gt;]: &lt;span class="pl-c1"&gt;object&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h4&gt;&lt;a id="user-content-39-打开文件" class="anchor" aria-hidden="true" href="#39-打开文件"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;39 打开文件&lt;/h4&gt;
&lt;p&gt;返回文件对象&lt;/p&gt;
&lt;div class="highlight highlight-source-python"&gt;&lt;pre&gt;In [&lt;span class="pl-c1"&gt;1&lt;/span&gt;]: fo &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;open&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;D:/a.txt&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;,&lt;span class="pl-v"&gt;mode&lt;/span&gt;&lt;span class="pl-k"&gt;=&lt;/span&gt;&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;r&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-v"&gt;encoding&lt;/span&gt;&lt;span class="pl-k"&gt;=&lt;/span&gt;&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;utf-8&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;)

In [&lt;span class="pl-c1"&gt;2&lt;/span&gt;]: fo.read()
Out[&lt;span class="pl-c1"&gt;2&lt;/span&gt;]: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;span class="pl-cce"&gt;\ufeff&lt;/span&gt;life is not so long,&lt;span class="pl-cce"&gt;\n&lt;/span&gt;I use Python to play.&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;mode取值表：&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th align="left"&gt;字符&lt;/th&gt;
&lt;th align="left"&gt;意义&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td align="left"&gt;&lt;code&gt;'r'&lt;/code&gt;&lt;/td&gt;
&lt;td align="left"&gt;读取（默认）&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="left"&gt;&lt;code&gt;'w'&lt;/code&gt;&lt;/td&gt;
&lt;td align="left"&gt;写入，并先截断文件&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="left"&gt;&lt;code&gt;'x'&lt;/code&gt;&lt;/td&gt;
&lt;td align="left"&gt;排它性创建，如果文件已存在则失败&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="left"&gt;&lt;code&gt;'a'&lt;/code&gt;&lt;/td&gt;
&lt;td align="left"&gt;写入，如果文件存在则在末尾追加&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="left"&gt;&lt;code&gt;'b'&lt;/code&gt;&lt;/td&gt;
&lt;td align="left"&gt;二进制模式&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="left"&gt;&lt;code&gt;'t'&lt;/code&gt;&lt;/td&gt;
&lt;td align="left"&gt;文本模式（默认）&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="left"&gt;&lt;code&gt;'+'&lt;/code&gt;&lt;/td&gt;
&lt;td align="left"&gt;打开用于更新（读取与写入）&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h4&gt;&lt;a id="user-content-40-次幂" class="anchor" aria-hidden="true" href="#40-次幂"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;40 次幂&lt;/h4&gt;
&lt;p&gt;base为底的exp次幂，如果mod给出，取余&lt;/p&gt;
&lt;div class="highlight highlight-source-python"&gt;&lt;pre&gt;In [&lt;span class="pl-c1"&gt;1&lt;/span&gt;]: &lt;span class="pl-c1"&gt;pow&lt;/span&gt;(&lt;span class="pl-c1"&gt;3&lt;/span&gt;, &lt;span class="pl-c1"&gt;2&lt;/span&gt;, &lt;span class="pl-c1"&gt;4&lt;/span&gt;)
Out[&lt;span class="pl-c1"&gt;1&lt;/span&gt;]: &lt;span class="pl-c1"&gt;1&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h4&gt;&lt;a id="user-content-41-打印" class="anchor" aria-hidden="true" href="#41-打印"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;41 打印&lt;/h4&gt;
&lt;div class="highlight highlight-source-python"&gt;&lt;pre&gt;In [&lt;span class="pl-c1"&gt;5&lt;/span&gt;]: lst &lt;span class="pl-k"&gt;=&lt;/span&gt; [&lt;span class="pl-c1"&gt;1&lt;/span&gt;,&lt;span class="pl-c1"&gt;3&lt;/span&gt;,&lt;span class="pl-c1"&gt;5&lt;/span&gt;]

In [&lt;span class="pl-c1"&gt;6&lt;/span&gt;]: &lt;span class="pl-c1"&gt;print&lt;/span&gt;(lst)
[&lt;span class="pl-c1"&gt;1&lt;/span&gt;, &lt;span class="pl-c1"&gt;3&lt;/span&gt;, &lt;span class="pl-c1"&gt;5&lt;/span&gt;]

In [&lt;span class="pl-c1"&gt;7&lt;/span&gt;]: &lt;span class="pl-c1"&gt;print&lt;/span&gt;(&lt;span class="pl-s"&gt;f&lt;/span&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;span class="pl-s"&gt;lst: &lt;/span&gt;&lt;span class="pl-c1"&gt;{&lt;/span&gt;lst&lt;span class="pl-c1"&gt;}&lt;/span&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;)
lst: [&lt;span class="pl-c1"&gt;1&lt;/span&gt;, &lt;span class="pl-c1"&gt;3&lt;/span&gt;, &lt;span class="pl-c1"&gt;5&lt;/span&gt;]

In [&lt;span class="pl-c1"&gt;8&lt;/span&gt;]: &lt;span class="pl-c1"&gt;print&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;lst:&lt;span class="pl-c1"&gt;{}&lt;/span&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;.format(lst))
lst:[&lt;span class="pl-c1"&gt;1&lt;/span&gt;, &lt;span class="pl-c1"&gt;3&lt;/span&gt;, &lt;span class="pl-c1"&gt;5&lt;/span&gt;]

In [&lt;span class="pl-c1"&gt;9&lt;/span&gt;]: &lt;span class="pl-c1"&gt;print&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;lst:&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;,lst)
lst: [&lt;span class="pl-c1"&gt;1&lt;/span&gt;, &lt;span class="pl-c1"&gt;3&lt;/span&gt;, &lt;span class="pl-c1"&gt;5&lt;/span&gt;]&lt;/pre&gt;&lt;/div&gt;
&lt;h4&gt;&lt;a id="user-content-42--创建属性的两种方式" class="anchor" aria-hidden="true" href="#42--创建属性的两种方式"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;42  创建属性的两种方式&lt;/h4&gt;
&lt;p&gt;返回 property 属性，典型的用法：&lt;/p&gt;
&lt;div class="highlight highlight-source-python"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;class&lt;/span&gt; &lt;span class="pl-en"&gt;C&lt;/span&gt;:
    &lt;span class="pl-k"&gt;def&lt;/span&gt; &lt;span class="pl-c1"&gt;__init__&lt;/span&gt;(&lt;span class="pl-smi"&gt;&lt;span class="pl-smi"&gt;self&lt;/span&gt;&lt;/span&gt;):
        &lt;span class="pl-c1"&gt;self&lt;/span&gt;._x &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;None&lt;/span&gt;

    &lt;span class="pl-k"&gt;def&lt;/span&gt; &lt;span class="pl-en"&gt;getx&lt;/span&gt;(&lt;span class="pl-smi"&gt;&lt;span class="pl-smi"&gt;self&lt;/span&gt;&lt;/span&gt;):
        &lt;span class="pl-k"&gt;return&lt;/span&gt; &lt;span class="pl-c1"&gt;self&lt;/span&gt;._x

    &lt;span class="pl-k"&gt;def&lt;/span&gt; &lt;span class="pl-en"&gt;setx&lt;/span&gt;(&lt;span class="pl-smi"&gt;&lt;span class="pl-smi"&gt;self&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-smi"&gt;value&lt;/span&gt;):
        &lt;span class="pl-c1"&gt;self&lt;/span&gt;._x &lt;span class="pl-k"&gt;=&lt;/span&gt; value

    &lt;span class="pl-k"&gt;def&lt;/span&gt; &lt;span class="pl-en"&gt;delx&lt;/span&gt;(&lt;span class="pl-smi"&gt;&lt;span class="pl-smi"&gt;self&lt;/span&gt;&lt;/span&gt;):
        &lt;span class="pl-k"&gt;del&lt;/span&gt; &lt;span class="pl-c1"&gt;self&lt;/span&gt;._x
    &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; 使用property类创建 property 属性&lt;/span&gt;
    x &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;property&lt;/span&gt;(getx, setx, delx, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;I'm the 'x' property.&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;使用python装饰器，实现与上完全一样的效果代码：&lt;/p&gt;
&lt;div class="highlight highlight-source-python"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;class&lt;/span&gt; &lt;span class="pl-en"&gt;C&lt;/span&gt;:
    &lt;span class="pl-k"&gt;def&lt;/span&gt; &lt;span class="pl-c1"&gt;__init__&lt;/span&gt;(&lt;span class="pl-smi"&gt;&lt;span class="pl-smi"&gt;self&lt;/span&gt;&lt;/span&gt;):
        &lt;span class="pl-c1"&gt;self&lt;/span&gt;._x &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;None&lt;/span&gt;

    &lt;span class="pl-en"&gt;@&lt;/span&gt;&lt;span class="pl-c1"&gt;property&lt;/span&gt;
    &lt;span class="pl-k"&gt;def&lt;/span&gt; &lt;span class="pl-en"&gt;x&lt;/span&gt;(&lt;span class="pl-smi"&gt;&lt;span class="pl-smi"&gt;self&lt;/span&gt;&lt;/span&gt;):
        &lt;span class="pl-k"&gt;return&lt;/span&gt; &lt;span class="pl-c1"&gt;self&lt;/span&gt;._x

    &lt;span class="pl-en"&gt;@x.setter&lt;/span&gt;
    &lt;span class="pl-k"&gt;def&lt;/span&gt; &lt;span class="pl-en"&gt;x&lt;/span&gt;(&lt;span class="pl-smi"&gt;&lt;span class="pl-smi"&gt;self&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-smi"&gt;value&lt;/span&gt;):
        &lt;span class="pl-c1"&gt;self&lt;/span&gt;._x &lt;span class="pl-k"&gt;=&lt;/span&gt; value

    &lt;span class="pl-en"&gt;@x.deleter&lt;/span&gt;
    &lt;span class="pl-k"&gt;def&lt;/span&gt; &lt;span class="pl-en"&gt;x&lt;/span&gt;(&lt;span class="pl-smi"&gt;&lt;span class="pl-smi"&gt;self&lt;/span&gt;&lt;/span&gt;):
        &lt;span class="pl-k"&gt;del&lt;/span&gt; &lt;span class="pl-c1"&gt;self&lt;/span&gt;._x&lt;/pre&gt;&lt;/div&gt;
&lt;h4&gt;&lt;a id="user-content-43-创建range序列" class="anchor" aria-hidden="true" href="#43-创建range序列"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;43 创建range序列&lt;/h4&gt;
&lt;ol&gt;
&lt;li&gt;range(stop)&lt;/li&gt;
&lt;li&gt;range(start, stop[,step])&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;生成一个不可变序列：&lt;/p&gt;
&lt;div class="highlight highlight-source-python"&gt;&lt;pre&gt;In [&lt;span class="pl-c1"&gt;1&lt;/span&gt;]: &lt;span class="pl-c1"&gt;range&lt;/span&gt;(&lt;span class="pl-c1"&gt;11&lt;/span&gt;)
Out[&lt;span class="pl-c1"&gt;1&lt;/span&gt;]: &lt;span class="pl-c1"&gt;range&lt;/span&gt;(&lt;span class="pl-c1"&gt;0&lt;/span&gt;, &lt;span class="pl-c1"&gt;11&lt;/span&gt;)

In [&lt;span class="pl-c1"&gt;2&lt;/span&gt;]: &lt;span class="pl-c1"&gt;range&lt;/span&gt;(&lt;span class="pl-c1"&gt;0&lt;/span&gt;,&lt;span class="pl-c1"&gt;11&lt;/span&gt;,&lt;span class="pl-c1"&gt;1&lt;/span&gt;)
Out[&lt;span class="pl-c1"&gt;2&lt;/span&gt;]: &lt;span class="pl-c1"&gt;range&lt;/span&gt;(&lt;span class="pl-c1"&gt;0&lt;/span&gt;, &lt;span class="pl-c1"&gt;11&lt;/span&gt;)&lt;/pre&gt;&lt;/div&gt;
&lt;h4&gt;&lt;a id="user-content-44-反向迭代器" class="anchor" aria-hidden="true" href="#44-反向迭代器"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;44 反向迭代器&lt;/h4&gt;
&lt;div class="highlight highlight-source-python"&gt;&lt;pre&gt;In [&lt;span class="pl-c1"&gt;1&lt;/span&gt;]: rev &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;reversed&lt;/span&gt;([&lt;span class="pl-c1"&gt;1&lt;/span&gt;,&lt;span class="pl-c1"&gt;4&lt;/span&gt;,&lt;span class="pl-c1"&gt;2&lt;/span&gt;,&lt;span class="pl-c1"&gt;3&lt;/span&gt;,&lt;span class="pl-c1"&gt;1&lt;/span&gt;])

In [&lt;span class="pl-c1"&gt;2&lt;/span&gt;]: &lt;span class="pl-k"&gt;for&lt;/span&gt; i &lt;span class="pl-k"&gt;in&lt;/span&gt; rev:
     &lt;span class="pl-c1"&gt;...&lt;/span&gt;:     &lt;span class="pl-c1"&gt;print&lt;/span&gt;(i)
     &lt;span class="pl-c1"&gt;...&lt;/span&gt;:
&lt;span class="pl-c1"&gt;1&lt;/span&gt;
&lt;span class="pl-c1"&gt;3&lt;/span&gt;
&lt;span class="pl-c1"&gt;2&lt;/span&gt;
&lt;span class="pl-c1"&gt;4&lt;/span&gt;
&lt;span class="pl-c1"&gt;1&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h4&gt;&lt;a id="user-content-45-四舍五入" class="anchor" aria-hidden="true" href="#45-四舍五入"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;45 四舍五入&lt;/h4&gt;
&lt;p&gt;四舍五入，&lt;code&gt;ndigits&lt;/code&gt;代表小数点后保留几位：&lt;/p&gt;
&lt;div class="highlight highlight-source-python"&gt;&lt;pre&gt;In [&lt;span class="pl-c1"&gt;11&lt;/span&gt;]: &lt;span class="pl-c1"&gt;round&lt;/span&gt;(&lt;span class="pl-c1"&gt;10.0222222&lt;/span&gt;, &lt;span class="pl-c1"&gt;3&lt;/span&gt;)
Out[&lt;span class="pl-c1"&gt;11&lt;/span&gt;]: &lt;span class="pl-c1"&gt;10.022&lt;/span&gt;

In [&lt;span class="pl-c1"&gt;12&lt;/span&gt;]: &lt;span class="pl-c1"&gt;round&lt;/span&gt;(&lt;span class="pl-c1"&gt;10.05&lt;/span&gt;,&lt;span class="pl-c1"&gt;1&lt;/span&gt;)
Out[&lt;span class="pl-c1"&gt;12&lt;/span&gt;]: &lt;span class="pl-c1"&gt;10.1&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h4&gt;&lt;a id="user-content-46-转为集合类型" class="anchor" aria-hidden="true" href="#46-转为集合类型"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;46 转为集合类型&lt;/h4&gt;
&lt;p&gt;返回一个set对象，集合内不允许有重复元素：&lt;/p&gt;
&lt;div class="highlight highlight-source-python"&gt;&lt;pre&gt;In [&lt;span class="pl-c1"&gt;159&lt;/span&gt;]: a &lt;span class="pl-k"&gt;=&lt;/span&gt; [&lt;span class="pl-c1"&gt;1&lt;/span&gt;,&lt;span class="pl-c1"&gt;4&lt;/span&gt;,&lt;span class="pl-c1"&gt;2&lt;/span&gt;,&lt;span class="pl-c1"&gt;3&lt;/span&gt;,&lt;span class="pl-c1"&gt;1&lt;/span&gt;]

In [&lt;span class="pl-c1"&gt;160&lt;/span&gt;]: &lt;span class="pl-c1"&gt;set&lt;/span&gt;(a)
Out[&lt;span class="pl-c1"&gt;160&lt;/span&gt;]: {&lt;span class="pl-c1"&gt;1&lt;/span&gt;, &lt;span class="pl-c1"&gt;2&lt;/span&gt;, &lt;span class="pl-c1"&gt;3&lt;/span&gt;, &lt;span class="pl-c1"&gt;4&lt;/span&gt;}&lt;/pre&gt;&lt;/div&gt;
&lt;h4&gt;&lt;a id="user-content-47-转为切片对象" class="anchor" aria-hidden="true" href="#47-转为切片对象"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;47 转为切片对象&lt;/h4&gt;
&lt;p&gt;&lt;em&gt;class&lt;/em&gt; slice(&lt;em&gt;start&lt;/em&gt;, &lt;em&gt;stop&lt;/em&gt;[, &lt;em&gt;step&lt;/em&gt;])&lt;/p&gt;
&lt;p&gt;返回一个表示由 range(start, stop, step) 所指定索引集的 slice对象，它让代码可读性、可维护性变好。&lt;/p&gt;
&lt;div class="highlight highlight-source-python"&gt;&lt;pre&gt;In [&lt;span class="pl-c1"&gt;1&lt;/span&gt;]: a &lt;span class="pl-k"&gt;=&lt;/span&gt; [&lt;span class="pl-c1"&gt;1&lt;/span&gt;,&lt;span class="pl-c1"&gt;4&lt;/span&gt;,&lt;span class="pl-c1"&gt;2&lt;/span&gt;,&lt;span class="pl-c1"&gt;3&lt;/span&gt;,&lt;span class="pl-c1"&gt;1&lt;/span&gt;]

In [&lt;span class="pl-c1"&gt;2&lt;/span&gt;]: my_slice_meaning &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;slice&lt;/span&gt;(&lt;span class="pl-c1"&gt;0&lt;/span&gt;,&lt;span class="pl-c1"&gt;5&lt;/span&gt;,&lt;span class="pl-c1"&gt;2&lt;/span&gt;)

In [&lt;span class="pl-c1"&gt;3&lt;/span&gt;]: a[my_slice_meaning]
Out[&lt;span class="pl-c1"&gt;3&lt;/span&gt;]: [&lt;span class="pl-c1"&gt;1&lt;/span&gt;, &lt;span class="pl-c1"&gt;2&lt;/span&gt;, &lt;span class="pl-c1"&gt;1&lt;/span&gt;]&lt;/pre&gt;&lt;/div&gt;
&lt;h4&gt;&lt;a id="user-content-48-拿来就用的排序函数" class="anchor" aria-hidden="true" href="#48-拿来就用的排序函数"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;48 拿来就用的排序函数&lt;/h4&gt;
&lt;p&gt;排序：&lt;/p&gt;
&lt;div class="highlight highlight-source-python"&gt;&lt;pre&gt;In [&lt;span class="pl-c1"&gt;1&lt;/span&gt;]: a &lt;span class="pl-k"&gt;=&lt;/span&gt; [&lt;span class="pl-c1"&gt;1&lt;/span&gt;,&lt;span class="pl-c1"&gt;4&lt;/span&gt;,&lt;span class="pl-c1"&gt;2&lt;/span&gt;,&lt;span class="pl-c1"&gt;3&lt;/span&gt;,&lt;span class="pl-c1"&gt;1&lt;/span&gt;]

In [&lt;span class="pl-c1"&gt;2&lt;/span&gt;]: &lt;span class="pl-c1"&gt;sorted&lt;/span&gt;(a,&lt;span class="pl-v"&gt;reverse&lt;/span&gt;&lt;span class="pl-k"&gt;=&lt;/span&gt;&lt;span class="pl-c1"&gt;True&lt;/span&gt;)
Out[&lt;span class="pl-c1"&gt;2&lt;/span&gt;]: [&lt;span class="pl-c1"&gt;4&lt;/span&gt;, &lt;span class="pl-c1"&gt;3&lt;/span&gt;, &lt;span class="pl-c1"&gt;2&lt;/span&gt;, &lt;span class="pl-c1"&gt;1&lt;/span&gt;, &lt;span class="pl-c1"&gt;1&lt;/span&gt;]

In [&lt;span class="pl-c1"&gt;3&lt;/span&gt;]: a &lt;span class="pl-k"&gt;=&lt;/span&gt; [{&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;name&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;:&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;xiaoming&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;,&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;age&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;:&lt;span class="pl-c1"&gt;18&lt;/span&gt;,&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;gender&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;:&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;male&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;},{&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;name&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;:&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;span class="pl-ii"&gt;&lt;/span&gt;&lt;/span&gt;
     &lt;span class="pl-c1"&gt;...&lt;/span&gt;: xiaohong&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;,&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;age&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;:20,&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;gender&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;:&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;female&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;}]&lt;span class="pl-ii"&gt;&lt;/span&gt;&lt;/span&gt;
In [&lt;span class="pl-c1"&gt;4&lt;/span&gt;]: &lt;span class="pl-c1"&gt;sorted&lt;/span&gt;(a,&lt;span class="pl-v"&gt;key&lt;/span&gt;&lt;span class="pl-k"&gt;=&lt;/span&gt;&lt;span class="pl-k"&gt;lambda&lt;/span&gt; &lt;span class="pl-smi"&gt;x&lt;/span&gt;: x[&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;age&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;],&lt;span class="pl-v"&gt;reverse&lt;/span&gt;&lt;span class="pl-k"&gt;=&lt;/span&gt;&lt;span class="pl-c1"&gt;False&lt;/span&gt;)
Out[&lt;span class="pl-c1"&gt;4&lt;/span&gt;]:
[{&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;name&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;xiaoming&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;age&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;: &lt;span class="pl-c1"&gt;18&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;gender&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;male&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;},
 {&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;name&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;xiaohong&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;age&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;: &lt;span class="pl-c1"&gt;20&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;gender&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;female&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;}]&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;####49 求和函数&lt;/p&gt;
&lt;p&gt;求和：&lt;/p&gt;
&lt;div class="highlight highlight-source-python"&gt;&lt;pre&gt;In [&lt;span class="pl-c1"&gt;181&lt;/span&gt;]: a &lt;span class="pl-k"&gt;=&lt;/span&gt; [&lt;span class="pl-c1"&gt;1&lt;/span&gt;,&lt;span class="pl-c1"&gt;4&lt;/span&gt;,&lt;span class="pl-c1"&gt;2&lt;/span&gt;,&lt;span class="pl-c1"&gt;3&lt;/span&gt;,&lt;span class="pl-c1"&gt;1&lt;/span&gt;]

In [&lt;span class="pl-c1"&gt;182&lt;/span&gt;]: &lt;span class="pl-c1"&gt;sum&lt;/span&gt;(a)
Out[&lt;span class="pl-c1"&gt;182&lt;/span&gt;]: &lt;span class="pl-c1"&gt;11&lt;/span&gt;

In [&lt;span class="pl-c1"&gt;185&lt;/span&gt;]: &lt;span class="pl-c1"&gt;sum&lt;/span&gt;(a,&lt;span class="pl-c1"&gt;10&lt;/span&gt;) &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt;求和的初始值为10&lt;/span&gt;
Out[&lt;span class="pl-c1"&gt;185&lt;/span&gt;]: &lt;span class="pl-c1"&gt;21&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h4&gt;&lt;a id="user-content-50-转元组" class="anchor" aria-hidden="true" href="#50-转元组"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;50 转元组&lt;/h4&gt;
&lt;p&gt;&lt;code&gt;tuple()&lt;/code&gt; 将对象转为一个不可变的序列类型&lt;/p&gt;
&lt;div class="highlight highlight-source-python"&gt;&lt;pre&gt;In [&lt;span class="pl-c1"&gt;16&lt;/span&gt;]: i_am_list &lt;span class="pl-k"&gt;=&lt;/span&gt; [&lt;span class="pl-c1"&gt;1&lt;/span&gt;,&lt;span class="pl-c1"&gt;3&lt;/span&gt;,&lt;span class="pl-c1"&gt;5&lt;/span&gt;]
In [&lt;span class="pl-c1"&gt;17&lt;/span&gt;]: i_am_tuple &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;tuple&lt;/span&gt;(i_am_list)
In [&lt;span class="pl-c1"&gt;18&lt;/span&gt;]: i_am_tuple
Out[&lt;span class="pl-c1"&gt;18&lt;/span&gt;]: (&lt;span class="pl-c1"&gt;1&lt;/span&gt;, &lt;span class="pl-c1"&gt;3&lt;/span&gt;, &lt;span class="pl-c1"&gt;5&lt;/span&gt;)&lt;/pre&gt;&lt;/div&gt;
&lt;h4&gt;&lt;a id="user-content-51-查看对象类型" class="anchor" aria-hidden="true" href="#51-查看对象类型"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;51 查看对象类型&lt;/h4&gt;
&lt;p&gt;&lt;em&gt;class&lt;/em&gt; &lt;code&gt;type&lt;/code&gt;(&lt;em&gt;name&lt;/em&gt;, &lt;em&gt;bases&lt;/em&gt;, &lt;em&gt;dict&lt;/em&gt;)&lt;/p&gt;
&lt;p&gt;传入一个参数时，返回 &lt;em&gt;object&lt;/em&gt; 的类型：&lt;/p&gt;
&lt;div class="highlight highlight-source-python"&gt;&lt;pre&gt;In [&lt;span class="pl-c1"&gt;1&lt;/span&gt;]: &lt;span class="pl-k"&gt;class&lt;/span&gt; &lt;span class="pl-en"&gt;Student&lt;/span&gt;():
   &lt;span class="pl-c1"&gt;...&lt;/span&gt;:     &lt;span class="pl-k"&gt;def&lt;/span&gt; &lt;span class="pl-c1"&gt;__init__&lt;/span&gt;(&lt;span class="pl-smi"&gt;&lt;span class="pl-smi"&gt;self&lt;/span&gt;&lt;/span&gt;,&lt;span class="pl-smi"&gt;id&lt;/span&gt;,&lt;span class="pl-smi"&gt;name&lt;/span&gt;):
   &lt;span class="pl-c1"&gt;...&lt;/span&gt;:         &lt;span class="pl-c1"&gt;self&lt;/span&gt;.id &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;id&lt;/span&gt;
   &lt;span class="pl-c1"&gt;...&lt;/span&gt;:         &lt;span class="pl-c1"&gt;self&lt;/span&gt;.name &lt;span class="pl-k"&gt;=&lt;/span&gt; name
   &lt;span class="pl-c1"&gt;...&lt;/span&gt;:     &lt;span class="pl-k"&gt;def&lt;/span&gt; &lt;span class="pl-c1"&gt;__repr__&lt;/span&gt;(&lt;span class="pl-smi"&gt;&lt;span class="pl-smi"&gt;self&lt;/span&gt;&lt;/span&gt;):
   &lt;span class="pl-c1"&gt;...&lt;/span&gt;:         &lt;span class="pl-k"&gt;return&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;id = &lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;&lt;span class="pl-k"&gt;+&lt;/span&gt;&lt;span class="pl-c1"&gt;self&lt;/span&gt;.id &lt;span class="pl-k"&gt;+&lt;/span&gt;&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;, name = &lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;&lt;span class="pl-k"&gt;+&lt;/span&gt;&lt;span class="pl-c1"&gt;self&lt;/span&gt;.name
   &lt;span class="pl-c1"&gt;...&lt;/span&gt;: 
   &lt;span class="pl-c1"&gt;...&lt;/span&gt;: 

In [&lt;span class="pl-c1"&gt;2&lt;/span&gt;]: xiaoming &lt;span class="pl-k"&gt;=&lt;/span&gt; Student(&lt;span class="pl-v"&gt;id&lt;/span&gt;&lt;span class="pl-k"&gt;=&lt;/span&gt;&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;001&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;,&lt;span class="pl-v"&gt;name&lt;/span&gt;&lt;span class="pl-k"&gt;=&lt;/span&gt;&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;xiaoming&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;)
In [&lt;span class="pl-c1"&gt;3&lt;/span&gt;]: &lt;span class="pl-c1"&gt;type&lt;/span&gt;(xiaoming)
Out[&lt;span class="pl-c1"&gt;3&lt;/span&gt;]: __main__.Student

In [&lt;span class="pl-c1"&gt;4&lt;/span&gt;]: &lt;span class="pl-c1"&gt;type&lt;/span&gt;(&lt;span class="pl-c1"&gt;tuple&lt;/span&gt;())
Out[&lt;span class="pl-c1"&gt;4&lt;/span&gt;]: &lt;span class="pl-c1"&gt;tuple&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h4&gt;&lt;a id="user-content-52-聚合迭代器" class="anchor" aria-hidden="true" href="#52-聚合迭代器"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;52 聚合迭代器&lt;/h4&gt;
&lt;p&gt;创建一个聚合了来自每个可迭代对象中的元素的迭代器：&lt;/p&gt;
&lt;div class="highlight highlight-source-python"&gt;&lt;pre&gt;In [&lt;span class="pl-c1"&gt;1&lt;/span&gt;]: x &lt;span class="pl-k"&gt;=&lt;/span&gt; [&lt;span class="pl-c1"&gt;3&lt;/span&gt;,&lt;span class="pl-c1"&gt;2&lt;/span&gt;,&lt;span class="pl-c1"&gt;1&lt;/span&gt;]
In [&lt;span class="pl-c1"&gt;2&lt;/span&gt;]: y &lt;span class="pl-k"&gt;=&lt;/span&gt; [&lt;span class="pl-c1"&gt;4&lt;/span&gt;,&lt;span class="pl-c1"&gt;5&lt;/span&gt;,&lt;span class="pl-c1"&gt;6&lt;/span&gt;]
In [&lt;span class="pl-c1"&gt;3&lt;/span&gt;]: &lt;span class="pl-c1"&gt;list&lt;/span&gt;(&lt;span class="pl-c1"&gt;zip&lt;/span&gt;(y,x))
Out[&lt;span class="pl-c1"&gt;3&lt;/span&gt;]: [(&lt;span class="pl-c1"&gt;4&lt;/span&gt;, &lt;span class="pl-c1"&gt;3&lt;/span&gt;), (&lt;span class="pl-c1"&gt;5&lt;/span&gt;, &lt;span class="pl-c1"&gt;2&lt;/span&gt;), (&lt;span class="pl-c1"&gt;6&lt;/span&gt;, &lt;span class="pl-c1"&gt;1&lt;/span&gt;)]

In [&lt;span class="pl-c1"&gt;4&lt;/span&gt;]: a &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;range&lt;/span&gt;(&lt;span class="pl-c1"&gt;5&lt;/span&gt;)
In [&lt;span class="pl-c1"&gt;5&lt;/span&gt;]: b &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;list&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;abcde&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;)
In [&lt;span class="pl-c1"&gt;6&lt;/span&gt;]: b
Out[&lt;span class="pl-c1"&gt;6&lt;/span&gt;]: [&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;a&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;b&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;c&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;d&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;e&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;]
In [&lt;span class="pl-c1"&gt;7&lt;/span&gt;]: [&lt;span class="pl-c1"&gt;str&lt;/span&gt;(y) &lt;span class="pl-k"&gt;+&lt;/span&gt; &lt;span class="pl-c1"&gt;str&lt;/span&gt;(x) &lt;span class="pl-k"&gt;for&lt;/span&gt; x,y &lt;span class="pl-k"&gt;in&lt;/span&gt; &lt;span class="pl-c1"&gt;zip&lt;/span&gt;(a,b)]
Out[&lt;span class="pl-c1"&gt;7&lt;/span&gt;]: [&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;a0&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;b1&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;c2&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;d3&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;e4&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;]&lt;/pre&gt;&lt;/div&gt;
&lt;h4&gt;&lt;a id="user-content-53-nonlocal用于内嵌函数中" class="anchor" aria-hidden="true" href="#53-nonlocal用于内嵌函数中"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;53 nonlocal用于内嵌函数中&lt;/h4&gt;
&lt;p&gt;关键词&lt;code&gt;nonlocal&lt;/code&gt;常用于函数嵌套中，声明变量&lt;code&gt;i&lt;/code&gt;为非局部变量；
如果不声明，&lt;code&gt;i+=1&lt;/code&gt;表明&lt;code&gt;i&lt;/code&gt;为函数&lt;code&gt;wrapper&lt;/code&gt;内的局部变量，因为在&lt;code&gt;i+=1&lt;/code&gt;引用(reference)时,i未被声明，所以会报&lt;code&gt;unreferenced variable&lt;/code&gt;的错误。&lt;/p&gt;
&lt;div class="highlight highlight-source-python"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;def&lt;/span&gt; &lt;span class="pl-en"&gt;excepter&lt;/span&gt;(&lt;span class="pl-smi"&gt;f&lt;/span&gt;):
    i &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;0&lt;/span&gt;
    t1 &lt;span class="pl-k"&gt;=&lt;/span&gt; time.time()
    &lt;span class="pl-k"&gt;def&lt;/span&gt; &lt;span class="pl-en"&gt;wrapper&lt;/span&gt;(): 
        &lt;span class="pl-k"&gt;try&lt;/span&gt;:
            f()
        &lt;span class="pl-k"&gt;except&lt;/span&gt; &lt;span class="pl-c1"&gt;Exception&lt;/span&gt; &lt;span class="pl-k"&gt;as&lt;/span&gt; e:
            &lt;span class="pl-k"&gt;nonlocal&lt;/span&gt; i
            i &lt;span class="pl-k"&gt;+=&lt;/span&gt; &lt;span class="pl-c1"&gt;1&lt;/span&gt;
            &lt;span class="pl-c1"&gt;print&lt;/span&gt;(&lt;span class="pl-s"&gt;f&lt;/span&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;span class="pl-c1"&gt;{&lt;/span&gt;e.args[&lt;span class="pl-c1"&gt;0&lt;/span&gt;]&lt;span class="pl-c1"&gt;}&lt;/span&gt;&lt;span class="pl-s"&gt;: &lt;/span&gt;&lt;span class="pl-c1"&gt;{&lt;/span&gt;i&lt;span class="pl-c1"&gt;}&lt;/span&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;)
            t2 &lt;span class="pl-k"&gt;=&lt;/span&gt; time.time()
            &lt;span class="pl-k"&gt;if&lt;/span&gt; i &lt;span class="pl-k"&gt;==&lt;/span&gt; n:
                &lt;span class="pl-c1"&gt;print&lt;/span&gt;(&lt;span class="pl-s"&gt;f&lt;/span&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;span class="pl-s"&gt;spending time:&lt;/span&gt;&lt;span class="pl-c1"&gt;{&lt;/span&gt;&lt;span class="pl-c1"&gt;round&lt;/span&gt;(t2&lt;span class="pl-k"&gt;-&lt;/span&gt;t1,&lt;span class="pl-c1"&gt;2&lt;/span&gt;)&lt;span class="pl-c1"&gt;}&lt;/span&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;)
    &lt;span class="pl-k"&gt;return&lt;/span&gt; wrapper&lt;/pre&gt;&lt;/div&gt;
&lt;h4&gt;&lt;a id="user-content-54-global-声明全局变量" class="anchor" aria-hidden="true" href="#54-global-声明全局变量"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;54 global 声明全局变量&lt;/h4&gt;
&lt;p&gt;先回答为什么要有&lt;code&gt;global&lt;/code&gt;，一个变量被多个函数引用，想让全局变量被所有函数共享。有的伙伴可能会想这还不简单，这样写：&lt;/p&gt;
&lt;div class="highlight highlight-source-python"&gt;&lt;pre&gt;i &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;5&lt;/span&gt;
&lt;span class="pl-k"&gt;def&lt;/span&gt; &lt;span class="pl-en"&gt;f&lt;/span&gt;():
    &lt;span class="pl-c1"&gt;print&lt;/span&gt;(i)

&lt;span class="pl-k"&gt;def&lt;/span&gt; &lt;span class="pl-en"&gt;g&lt;/span&gt;():
    &lt;span class="pl-c1"&gt;print&lt;/span&gt;(i)
    &lt;span class="pl-k"&gt;pass&lt;/span&gt;

f()
g()
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;f和g两个函数都能共享变量&lt;code&gt;i&lt;/code&gt;，程序没有报错，所以他们依然不明白为什么要用&lt;code&gt;global&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;但是，如果我想要有个函数对&lt;code&gt;i&lt;/code&gt;递增，这样：&lt;/p&gt;
&lt;div class="highlight highlight-source-python"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;def&lt;/span&gt; &lt;span class="pl-en"&gt;h&lt;/span&gt;():
    i &lt;span class="pl-k"&gt;+=&lt;/span&gt; &lt;span class="pl-c1"&gt;1&lt;/span&gt;

h()&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;此时执行程序，bang, 出错了！ 抛出异常：&lt;code&gt;UnboundLocalError&lt;/code&gt;，原来编译器在解释&lt;code&gt;i+=1&lt;/code&gt;时会把&lt;code&gt;i&lt;/code&gt;解析为函数&lt;code&gt;h()&lt;/code&gt;内的局部变量，很显然在此函数内，编译器找不到对变量&lt;code&gt;i&lt;/code&gt;的定义，所以会报错。&lt;/p&gt;
&lt;p&gt;&lt;code&gt;global&lt;/code&gt;就是为解决此问题而被提出，在函数h内，显示地告诉编译器&lt;code&gt;i&lt;/code&gt;为全局变量，然后编译器会在函数外面寻找&lt;code&gt;i&lt;/code&gt;的定义，执行完&lt;code&gt;i+=1&lt;/code&gt;后，&lt;code&gt;i&lt;/code&gt;还为全局变量，值加1：&lt;/p&gt;
&lt;div class="highlight highlight-source-python"&gt;&lt;pre&gt;i &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;0&lt;/span&gt;
&lt;span class="pl-k"&gt;def&lt;/span&gt; &lt;span class="pl-en"&gt;h&lt;/span&gt;():
    &lt;span class="pl-k"&gt;global&lt;/span&gt; i
    i &lt;span class="pl-k"&gt;+=&lt;/span&gt; &lt;span class="pl-c1"&gt;1&lt;/span&gt;

h()
&lt;span class="pl-c1"&gt;print&lt;/span&gt;(i)&lt;/pre&gt;&lt;/div&gt;
&lt;h4&gt;&lt;a id="user-content-55-链式比较" class="anchor" aria-hidden="true" href="#55-链式比较"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;55 链式比较&lt;/h4&gt;
&lt;div class="highlight highlight-source-python"&gt;&lt;pre&gt;i &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;3&lt;/span&gt;
&lt;span class="pl-c1"&gt;print&lt;/span&gt;(&lt;span class="pl-c1"&gt;1&lt;/span&gt; &lt;span class="pl-k"&gt;&amp;lt;&lt;/span&gt; i &lt;span class="pl-k"&gt;&amp;lt;&lt;/span&gt; &lt;span class="pl-c1"&gt;3&lt;/span&gt;)  &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; False&lt;/span&gt;
&lt;span class="pl-c1"&gt;print&lt;/span&gt;(&lt;span class="pl-c1"&gt;1&lt;/span&gt; &lt;span class="pl-k"&gt;&amp;lt;&lt;/span&gt; i &lt;span class="pl-k"&gt;&amp;lt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;3&lt;/span&gt;)  &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; True&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h4&gt;&lt;a id="user-content-56-不用else和if实现计算器" class="anchor" aria-hidden="true" href="#56-不用else和if实现计算器"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;56 不用else和if实现计算器&lt;/h4&gt;
&lt;div class="highlight highlight-source-python"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;from&lt;/span&gt; operator &lt;span class="pl-k"&gt;import&lt;/span&gt; &lt;span class="pl-k"&gt;*&lt;/span&gt;


&lt;span class="pl-k"&gt;def&lt;/span&gt; &lt;span class="pl-en"&gt;calculator&lt;/span&gt;(&lt;span class="pl-smi"&gt;a&lt;/span&gt;, &lt;span class="pl-smi"&gt;b&lt;/span&gt;, &lt;span class="pl-smi"&gt;k&lt;/span&gt;):
    &lt;span class="pl-k"&gt;return&lt;/span&gt; {
        &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;+&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;: add,
        &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;-&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;: sub,
        &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;*&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;: mul,
        &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;/&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;: truediv,
        &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;**&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;: &lt;span class="pl-c1"&gt;pow&lt;/span&gt;
    }[k](a, b)


calculator(&lt;span class="pl-c1"&gt;1&lt;/span&gt;, &lt;span class="pl-c1"&gt;2&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;+&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;)  &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; 3&lt;/span&gt;
calculator(&lt;span class="pl-c1"&gt;3&lt;/span&gt;, &lt;span class="pl-c1"&gt;4&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;**&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;)  &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; 81&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h4&gt;&lt;a id="user-content-57-链式操作" class="anchor" aria-hidden="true" href="#57-链式操作"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;57 链式操作&lt;/h4&gt;
&lt;div class="highlight highlight-source-python"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;from&lt;/span&gt; operator &lt;span class="pl-k"&gt;import&lt;/span&gt; (add, sub)


&lt;span class="pl-k"&gt;def&lt;/span&gt; &lt;span class="pl-en"&gt;add_or_sub&lt;/span&gt;(&lt;span class="pl-smi"&gt;a&lt;/span&gt;, &lt;span class="pl-smi"&gt;b&lt;/span&gt;, &lt;span class="pl-smi"&gt;oper&lt;/span&gt;):
    &lt;span class="pl-k"&gt;return&lt;/span&gt; (add &lt;span class="pl-k"&gt;if&lt;/span&gt; oper &lt;span class="pl-k"&gt;==&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;+&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt; &lt;span class="pl-k"&gt;else&lt;/span&gt; sub)(a, b)


add_or_sub(&lt;span class="pl-c1"&gt;1&lt;/span&gt;, &lt;span class="pl-c1"&gt;2&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;-&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;)  &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; -1&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h4&gt;&lt;a id="user-content-58-交换两元素" class="anchor" aria-hidden="true" href="#58-交换两元素"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;58 交换两元素&lt;/h4&gt;
&lt;div class="highlight highlight-source-python"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;def&lt;/span&gt; &lt;span class="pl-en"&gt;swap&lt;/span&gt;(&lt;span class="pl-smi"&gt;a&lt;/span&gt;, &lt;span class="pl-smi"&gt;b&lt;/span&gt;):
    &lt;span class="pl-k"&gt;return&lt;/span&gt; b, a


&lt;span class="pl-c1"&gt;print&lt;/span&gt;(swap(&lt;span class="pl-c1"&gt;1&lt;/span&gt;, &lt;span class="pl-c1"&gt;0&lt;/span&gt;))  &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; (0,1)&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h4&gt;&lt;a id="user-content-59-去最求平均" class="anchor" aria-hidden="true" href="#59-去最求平均"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;59 去最求平均&lt;/h4&gt;
&lt;div class="highlight highlight-source-python"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;def&lt;/span&gt; &lt;span class="pl-en"&gt;score_mean&lt;/span&gt;(&lt;span class="pl-smi"&gt;lst&lt;/span&gt;):
    lst.sort()
    lst2&lt;span class="pl-k"&gt;=&lt;/span&gt;lst[&lt;span class="pl-c1"&gt;1&lt;/span&gt;:(&lt;span class="pl-c1"&gt;len&lt;/span&gt;(lst)&lt;span class="pl-k"&gt;-&lt;/span&gt;&lt;span class="pl-c1"&gt;1&lt;/span&gt;)]
    &lt;span class="pl-k"&gt;return&lt;/span&gt; &lt;span class="pl-c1"&gt;round&lt;/span&gt;((&lt;span class="pl-c1"&gt;sum&lt;/span&gt;(lst2)&lt;span class="pl-k"&gt;/&lt;/span&gt;&lt;span class="pl-c1"&gt;len&lt;/span&gt;(lst2)),&lt;span class="pl-c1"&gt;1&lt;/span&gt;)

lst&lt;span class="pl-k"&gt;=&lt;/span&gt;[&lt;span class="pl-c1"&gt;9.1&lt;/span&gt;, &lt;span class="pl-c1"&gt;9.0&lt;/span&gt;,&lt;span class="pl-c1"&gt;8.1&lt;/span&gt;, &lt;span class="pl-c1"&gt;9.7&lt;/span&gt;, &lt;span class="pl-c1"&gt;19&lt;/span&gt;,&lt;span class="pl-c1"&gt;8.2&lt;/span&gt;, &lt;span class="pl-c1"&gt;8.6&lt;/span&gt;,&lt;span class="pl-c1"&gt;9.8&lt;/span&gt;]
score_mean(lst) &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; 9.1&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h4&gt;&lt;a id="user-content-60-打印99乘法表" class="anchor" aria-hidden="true" href="#60-打印99乘法表"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;60 打印99乘法表&lt;/h4&gt;
&lt;p&gt;打印出如下格式的乘法表&lt;/p&gt;
&lt;div class="highlight highlight-source-python"&gt;&lt;pre&gt;&lt;span class="pl-c1"&gt;1&lt;/span&gt;&lt;span class="pl-k"&gt;*&lt;/span&gt;&lt;span class="pl-c1"&gt;1&lt;/span&gt;&lt;span class="pl-k"&gt;=&lt;/span&gt;&lt;span class="pl-c1"&gt;1&lt;/span&gt;
&lt;span class="pl-c1"&gt;1&lt;/span&gt;&lt;span class="pl-k"&gt;*&lt;/span&gt;&lt;span class="pl-c1"&gt;2&lt;/span&gt;&lt;span class="pl-k"&gt;=&lt;/span&gt;&lt;span class="pl-c1"&gt;2&lt;/span&gt;   &lt;span class="pl-c1"&gt;2&lt;/span&gt;&lt;span class="pl-k"&gt;*&lt;/span&gt;&lt;span class="pl-c1"&gt;2&lt;/span&gt;&lt;span class="pl-k"&gt;=&lt;/span&gt;&lt;span class="pl-c1"&gt;4&lt;/span&gt;
&lt;span class="pl-c1"&gt;1&lt;/span&gt;&lt;span class="pl-k"&gt;*&lt;/span&gt;&lt;span class="pl-c1"&gt;3&lt;/span&gt;&lt;span class="pl-k"&gt;=&lt;/span&gt;&lt;span class="pl-c1"&gt;3&lt;/span&gt;   &lt;span class="pl-c1"&gt;2&lt;/span&gt;&lt;span class="pl-k"&gt;*&lt;/span&gt;&lt;span class="pl-c1"&gt;3&lt;/span&gt;&lt;span class="pl-k"&gt;=&lt;/span&gt;&lt;span class="pl-c1"&gt;6&lt;/span&gt;   &lt;span class="pl-c1"&gt;3&lt;/span&gt;&lt;span class="pl-k"&gt;*&lt;/span&gt;&lt;span class="pl-c1"&gt;3&lt;/span&gt;&lt;span class="pl-k"&gt;=&lt;/span&gt;&lt;span class="pl-c1"&gt;9&lt;/span&gt;
&lt;span class="pl-c1"&gt;1&lt;/span&gt;&lt;span class="pl-k"&gt;*&lt;/span&gt;&lt;span class="pl-c1"&gt;4&lt;/span&gt;&lt;span class="pl-k"&gt;=&lt;/span&gt;&lt;span class="pl-c1"&gt;4&lt;/span&gt;   &lt;span class="pl-c1"&gt;2&lt;/span&gt;&lt;span class="pl-k"&gt;*&lt;/span&gt;&lt;span class="pl-c1"&gt;4&lt;/span&gt;&lt;span class="pl-k"&gt;=&lt;/span&gt;&lt;span class="pl-c1"&gt;8&lt;/span&gt;   &lt;span class="pl-c1"&gt;3&lt;/span&gt;&lt;span class="pl-k"&gt;*&lt;/span&gt;&lt;span class="pl-c1"&gt;4&lt;/span&gt;&lt;span class="pl-k"&gt;=&lt;/span&gt;&lt;span class="pl-c1"&gt;12&lt;/span&gt;  &lt;span class="pl-c1"&gt;4&lt;/span&gt;&lt;span class="pl-k"&gt;*&lt;/span&gt;&lt;span class="pl-c1"&gt;4&lt;/span&gt;&lt;span class="pl-k"&gt;=&lt;/span&gt;&lt;span class="pl-c1"&gt;16&lt;/span&gt;
&lt;span class="pl-c1"&gt;1&lt;/span&gt;&lt;span class="pl-k"&gt;*&lt;/span&gt;&lt;span class="pl-c1"&gt;5&lt;/span&gt;&lt;span class="pl-k"&gt;=&lt;/span&gt;&lt;span class="pl-c1"&gt;5&lt;/span&gt;   &lt;span class="pl-c1"&gt;2&lt;/span&gt;&lt;span class="pl-k"&gt;*&lt;/span&gt;&lt;span class="pl-c1"&gt;5&lt;/span&gt;&lt;span class="pl-k"&gt;=&lt;/span&gt;&lt;span class="pl-c1"&gt;10&lt;/span&gt;  &lt;span class="pl-c1"&gt;3&lt;/span&gt;&lt;span class="pl-k"&gt;*&lt;/span&gt;&lt;span class="pl-c1"&gt;5&lt;/span&gt;&lt;span class="pl-k"&gt;=&lt;/span&gt;&lt;span class="pl-c1"&gt;15&lt;/span&gt;  &lt;span class="pl-c1"&gt;4&lt;/span&gt;&lt;span class="pl-k"&gt;*&lt;/span&gt;&lt;span class="pl-c1"&gt;5&lt;/span&gt;&lt;span class="pl-k"&gt;=&lt;/span&gt;&lt;span class="pl-c1"&gt;20&lt;/span&gt;  &lt;span class="pl-c1"&gt;5&lt;/span&gt;&lt;span class="pl-k"&gt;*&lt;/span&gt;&lt;span class="pl-c1"&gt;5&lt;/span&gt;&lt;span class="pl-k"&gt;=&lt;/span&gt;&lt;span class="pl-c1"&gt;25&lt;/span&gt;
&lt;span class="pl-c1"&gt;1&lt;/span&gt;&lt;span class="pl-k"&gt;*&lt;/span&gt;&lt;span class="pl-c1"&gt;6&lt;/span&gt;&lt;span class="pl-k"&gt;=&lt;/span&gt;&lt;span class="pl-c1"&gt;6&lt;/span&gt;   &lt;span class="pl-c1"&gt;2&lt;/span&gt;&lt;span class="pl-k"&gt;*&lt;/span&gt;&lt;span class="pl-c1"&gt;6&lt;/span&gt;&lt;span class="pl-k"&gt;=&lt;/span&gt;&lt;span class="pl-c1"&gt;12&lt;/span&gt;  &lt;span class="pl-c1"&gt;3&lt;/span&gt;&lt;span class="pl-k"&gt;*&lt;/span&gt;&lt;span class="pl-c1"&gt;6&lt;/span&gt;&lt;span class="pl-k"&gt;=&lt;/span&gt;&lt;span class="pl-c1"&gt;18&lt;/span&gt;  &lt;span class="pl-c1"&gt;4&lt;/span&gt;&lt;span class="pl-k"&gt;*&lt;/span&gt;&lt;span class="pl-c1"&gt;6&lt;/span&gt;&lt;span class="pl-k"&gt;=&lt;/span&gt;&lt;span class="pl-c1"&gt;24&lt;/span&gt;  &lt;span class="pl-c1"&gt;5&lt;/span&gt;&lt;span class="pl-k"&gt;*&lt;/span&gt;&lt;span class="pl-c1"&gt;6&lt;/span&gt;&lt;span class="pl-k"&gt;=&lt;/span&gt;&lt;span class="pl-c1"&gt;30&lt;/span&gt;  &lt;span class="pl-c1"&gt;6&lt;/span&gt;&lt;span class="pl-k"&gt;*&lt;/span&gt;&lt;span class="pl-c1"&gt;6&lt;/span&gt;&lt;span class="pl-k"&gt;=&lt;/span&gt;&lt;span class="pl-c1"&gt;36&lt;/span&gt;
&lt;span class="pl-c1"&gt;1&lt;/span&gt;&lt;span class="pl-k"&gt;*&lt;/span&gt;&lt;span class="pl-c1"&gt;7&lt;/span&gt;&lt;span class="pl-k"&gt;=&lt;/span&gt;&lt;span class="pl-c1"&gt;7&lt;/span&gt;   &lt;span class="pl-c1"&gt;2&lt;/span&gt;&lt;span class="pl-k"&gt;*&lt;/span&gt;&lt;span class="pl-c1"&gt;7&lt;/span&gt;&lt;span class="pl-k"&gt;=&lt;/span&gt;&lt;span class="pl-c1"&gt;14&lt;/span&gt;  &lt;span class="pl-c1"&gt;3&lt;/span&gt;&lt;span class="pl-k"&gt;*&lt;/span&gt;&lt;span class="pl-c1"&gt;7&lt;/span&gt;&lt;span class="pl-k"&gt;=&lt;/span&gt;&lt;span class="pl-c1"&gt;21&lt;/span&gt;  &lt;span class="pl-c1"&gt;4&lt;/span&gt;&lt;span class="pl-k"&gt;*&lt;/span&gt;&lt;span class="pl-c1"&gt;7&lt;/span&gt;&lt;span class="pl-k"&gt;=&lt;/span&gt;&lt;span class="pl-c1"&gt;28&lt;/span&gt;  &lt;span class="pl-c1"&gt;5&lt;/span&gt;&lt;span class="pl-k"&gt;*&lt;/span&gt;&lt;span class="pl-c1"&gt;7&lt;/span&gt;&lt;span class="pl-k"&gt;=&lt;/span&gt;&lt;span class="pl-c1"&gt;35&lt;/span&gt;  &lt;span class="pl-c1"&gt;6&lt;/span&gt;&lt;span class="pl-k"&gt;*&lt;/span&gt;&lt;span class="pl-c1"&gt;7&lt;/span&gt;&lt;span class="pl-k"&gt;=&lt;/span&gt;&lt;span class="pl-c1"&gt;42&lt;/span&gt;  &lt;span class="pl-c1"&gt;7&lt;/span&gt;&lt;span class="pl-k"&gt;*&lt;/span&gt;&lt;span class="pl-c1"&gt;7&lt;/span&gt;&lt;span class="pl-k"&gt;=&lt;/span&gt;&lt;span class="pl-c1"&gt;49&lt;/span&gt;
&lt;span class="pl-c1"&gt;1&lt;/span&gt;&lt;span class="pl-k"&gt;*&lt;/span&gt;&lt;span class="pl-c1"&gt;8&lt;/span&gt;&lt;span class="pl-k"&gt;=&lt;/span&gt;&lt;span class="pl-c1"&gt;8&lt;/span&gt;   &lt;span class="pl-c1"&gt;2&lt;/span&gt;&lt;span class="pl-k"&gt;*&lt;/span&gt;&lt;span class="pl-c1"&gt;8&lt;/span&gt;&lt;span class="pl-k"&gt;=&lt;/span&gt;&lt;span class="pl-c1"&gt;16&lt;/span&gt;  &lt;span class="pl-c1"&gt;3&lt;/span&gt;&lt;span class="pl-k"&gt;*&lt;/span&gt;&lt;span class="pl-c1"&gt;8&lt;/span&gt;&lt;span class="pl-k"&gt;=&lt;/span&gt;&lt;span class="pl-c1"&gt;24&lt;/span&gt;  &lt;span class="pl-c1"&gt;4&lt;/span&gt;&lt;span class="pl-k"&gt;*&lt;/span&gt;&lt;span class="pl-c1"&gt;8&lt;/span&gt;&lt;span class="pl-k"&gt;=&lt;/span&gt;&lt;span class="pl-c1"&gt;32&lt;/span&gt;  &lt;span class="pl-c1"&gt;5&lt;/span&gt;&lt;span class="pl-k"&gt;*&lt;/span&gt;&lt;span class="pl-c1"&gt;8&lt;/span&gt;&lt;span class="pl-k"&gt;=&lt;/span&gt;&lt;span class="pl-c1"&gt;40&lt;/span&gt;  &lt;span class="pl-c1"&gt;6&lt;/span&gt;&lt;span class="pl-k"&gt;*&lt;/span&gt;&lt;span class="pl-c1"&gt;8&lt;/span&gt;&lt;span class="pl-k"&gt;=&lt;/span&gt;&lt;span class="pl-c1"&gt;48&lt;/span&gt;  &lt;span class="pl-c1"&gt;7&lt;/span&gt;&lt;span class="pl-k"&gt;*&lt;/span&gt;&lt;span class="pl-c1"&gt;8&lt;/span&gt;&lt;span class="pl-k"&gt;=&lt;/span&gt;&lt;span class="pl-c1"&gt;56&lt;/span&gt;  &lt;span class="pl-c1"&gt;8&lt;/span&gt;&lt;span class="pl-k"&gt;*&lt;/span&gt;&lt;span class="pl-c1"&gt;8&lt;/span&gt;&lt;span class="pl-k"&gt;=&lt;/span&gt;&lt;span class="pl-c1"&gt;64&lt;/span&gt;
&lt;span class="pl-c1"&gt;1&lt;/span&gt;&lt;span class="pl-k"&gt;*&lt;/span&gt;&lt;span class="pl-c1"&gt;9&lt;/span&gt;&lt;span class="pl-k"&gt;=&lt;/span&gt;&lt;span class="pl-c1"&gt;9&lt;/span&gt;   &lt;span class="pl-c1"&gt;2&lt;/span&gt;&lt;span class="pl-k"&gt;*&lt;/span&gt;&lt;span class="pl-c1"&gt;9&lt;/span&gt;&lt;span class="pl-k"&gt;=&lt;/span&gt;&lt;span class="pl-c1"&gt;18&lt;/span&gt;  &lt;span class="pl-c1"&gt;3&lt;/span&gt;&lt;span class="pl-k"&gt;*&lt;/span&gt;&lt;span class="pl-c1"&gt;9&lt;/span&gt;&lt;span class="pl-k"&gt;=&lt;/span&gt;&lt;span class="pl-c1"&gt;27&lt;/span&gt;  &lt;span class="pl-c1"&gt;4&lt;/span&gt;&lt;span class="pl-k"&gt;*&lt;/span&gt;&lt;span class="pl-c1"&gt;9&lt;/span&gt;&lt;span class="pl-k"&gt;=&lt;/span&gt;&lt;span class="pl-c1"&gt;36&lt;/span&gt;  &lt;span class="pl-c1"&gt;5&lt;/span&gt;&lt;span class="pl-k"&gt;*&lt;/span&gt;&lt;span class="pl-c1"&gt;9&lt;/span&gt;&lt;span class="pl-k"&gt;=&lt;/span&gt;&lt;span class="pl-c1"&gt;45&lt;/span&gt;  &lt;span class="pl-c1"&gt;6&lt;/span&gt;&lt;span class="pl-k"&gt;*&lt;/span&gt;&lt;span class="pl-c1"&gt;9&lt;/span&gt;&lt;span class="pl-k"&gt;=&lt;/span&gt;&lt;span class="pl-c1"&gt;54&lt;/span&gt;  &lt;span class="pl-c1"&gt;7&lt;/span&gt;&lt;span class="pl-k"&gt;*&lt;/span&gt;&lt;span class="pl-c1"&gt;9&lt;/span&gt;&lt;span class="pl-k"&gt;=&lt;/span&gt;&lt;span class="pl-c1"&gt;63&lt;/span&gt;  &lt;span class="pl-c1"&gt;8&lt;/span&gt;&lt;span class="pl-k"&gt;*&lt;/span&gt;&lt;span class="pl-c1"&gt;9&lt;/span&gt;&lt;span class="pl-k"&gt;=&lt;/span&gt;&lt;span class="pl-c1"&gt;72&lt;/span&gt;  &lt;span class="pl-c1"&gt;9&lt;/span&gt;&lt;span class="pl-k"&gt;*&lt;/span&gt;&lt;span class="pl-c1"&gt;9&lt;/span&gt;&lt;span class="pl-k"&gt;=&lt;/span&gt;&lt;span class="pl-c1"&gt;81&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;一共有10 行，第&lt;code&gt;i&lt;/code&gt;行的第&lt;code&gt;j&lt;/code&gt;列等于：&lt;code&gt;j*i&lt;/code&gt;，&lt;/p&gt;
&lt;p&gt;其中,&lt;/p&gt;
&lt;p&gt;&lt;code&gt;i&lt;/code&gt;取值范围：&lt;code&gt;1&amp;lt;=i&amp;lt;=9&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;code&gt;j&lt;/code&gt;取值范围：&lt;code&gt;1&amp;lt;=j&amp;lt;=i&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;根据&lt;code&gt;例子分析&lt;/code&gt;的语言描述，转化为如下代码：&lt;/p&gt;
&lt;div class="highlight highlight-source-python"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;for&lt;/span&gt; i &lt;span class="pl-k"&gt;in&lt;/span&gt; &lt;span class="pl-c1"&gt;range&lt;/span&gt;(&lt;span class="pl-c1"&gt;1&lt;/span&gt;,&lt;span class="pl-c1"&gt;10&lt;/span&gt;):
    &lt;span class="pl-c1"&gt;...&lt;/span&gt;:     &lt;span class="pl-k"&gt;for&lt;/span&gt; j &lt;span class="pl-k"&gt;in&lt;/span&gt; &lt;span class="pl-c1"&gt;range&lt;/span&gt;(&lt;span class="pl-c1"&gt;1&lt;/span&gt;,i&lt;span class="pl-k"&gt;+&lt;/span&gt;&lt;span class="pl-c1"&gt;1&lt;/span&gt;):
    &lt;span class="pl-c1"&gt;...&lt;/span&gt;:         &lt;span class="pl-c1"&gt;print&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;span class="pl-c1"&gt;%d&lt;/span&gt;*&lt;span class="pl-c1"&gt;%d&lt;/span&gt;=&lt;span class="pl-c1"&gt;%d&lt;/span&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;&lt;span class="pl-k"&gt;%&lt;/span&gt;(j,i,j&lt;span class="pl-k"&gt;*&lt;/span&gt;i),&lt;span class="pl-v"&gt;end&lt;/span&gt;&lt;span class="pl-k"&gt;=&lt;/span&gt;&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;span class="pl-cce"&gt;\t&lt;/span&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
    &lt;span class="pl-c1"&gt;...&lt;/span&gt;:     &lt;span class="pl-c1"&gt;print&lt;/span&gt;()&lt;/pre&gt;&lt;/div&gt;
&lt;h4&gt;&lt;a id="user-content-61-全展开" class="anchor" aria-hidden="true" href="#61-全展开"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;61 全展开&lt;/h4&gt;
&lt;p&gt;对于如下数组：&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;[[[1,2,3],[4,5]]]
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;如何完全展开成一维的。这个小例子实现的&lt;code&gt;flatten&lt;/code&gt;是递归版，两个参数分别表示带展开的数组，输出数组。&lt;/p&gt;
&lt;div class="highlight highlight-source-python"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;from&lt;/span&gt; collections.abc &lt;span class="pl-k"&gt;import&lt;/span&gt; &lt;span class="pl-k"&gt;*&lt;/span&gt;

&lt;span class="pl-k"&gt;def&lt;/span&gt; &lt;span class="pl-en"&gt;flatten&lt;/span&gt;(&lt;span class="pl-smi"&gt;lst&lt;/span&gt;, &lt;span class="pl-smi"&gt;out_lst&lt;/span&gt;&lt;span class="pl-k"&gt;=&lt;/span&gt;&lt;span class="pl-c1"&gt;None&lt;/span&gt;):
    &lt;span class="pl-k"&gt;if&lt;/span&gt; out_lst &lt;span class="pl-k"&gt;is&lt;/span&gt; &lt;span class="pl-c1"&gt;None&lt;/span&gt;:
        out_lst &lt;span class="pl-k"&gt;=&lt;/span&gt; []
    &lt;span class="pl-k"&gt;for&lt;/span&gt; i &lt;span class="pl-k"&gt;in&lt;/span&gt; lst:
        &lt;span class="pl-k"&gt;if&lt;/span&gt; &lt;span class="pl-c1"&gt;isinstance&lt;/span&gt;(i, Iterable): &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; 判断i是否可迭代&lt;/span&gt;
            flatten(i, out_lst)  &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; 尾数递归&lt;/span&gt;
        &lt;span class="pl-k"&gt;else&lt;/span&gt;:
            out_lst.append(i)    &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; 产生结果&lt;/span&gt;
    &lt;span class="pl-k"&gt;return&lt;/span&gt; out_lst&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;调用&lt;code&gt;flatten&lt;/code&gt;:&lt;/p&gt;
&lt;div class="highlight highlight-source-python"&gt;&lt;pre&gt;&lt;span class="pl-c1"&gt;print&lt;/span&gt;(flatten([[&lt;span class="pl-c1"&gt;1&lt;/span&gt;,&lt;span class="pl-c1"&gt;2&lt;/span&gt;,&lt;span class="pl-c1"&gt;3&lt;/span&gt;],[&lt;span class="pl-c1"&gt;4&lt;/span&gt;,&lt;span class="pl-c1"&gt;5&lt;/span&gt;]]))
&lt;span class="pl-c1"&gt;print&lt;/span&gt;(flatten([[&lt;span class="pl-c1"&gt;1&lt;/span&gt;,&lt;span class="pl-c1"&gt;2&lt;/span&gt;,&lt;span class="pl-c1"&gt;3&lt;/span&gt;],[&lt;span class="pl-c1"&gt;4&lt;/span&gt;,&lt;span class="pl-c1"&gt;5&lt;/span&gt;]], [&lt;span class="pl-c1"&gt;6&lt;/span&gt;,&lt;span class="pl-c1"&gt;7&lt;/span&gt;]))
&lt;span class="pl-c1"&gt;print&lt;/span&gt;(flatten([[[&lt;span class="pl-c1"&gt;1&lt;/span&gt;,&lt;span class="pl-c1"&gt;2&lt;/span&gt;,&lt;span class="pl-c1"&gt;3&lt;/span&gt;],[&lt;span class="pl-c1"&gt;4&lt;/span&gt;,&lt;span class="pl-c1"&gt;5&lt;/span&gt;,&lt;span class="pl-c1"&gt;6&lt;/span&gt;]]]))
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; 结果：&lt;/span&gt;
[&lt;span class="pl-c1"&gt;1&lt;/span&gt;, &lt;span class="pl-c1"&gt;2&lt;/span&gt;, &lt;span class="pl-c1"&gt;3&lt;/span&gt;, &lt;span class="pl-c1"&gt;4&lt;/span&gt;, &lt;span class="pl-c1"&gt;5&lt;/span&gt;]
[&lt;span class="pl-c1"&gt;6&lt;/span&gt;, &lt;span class="pl-c1"&gt;7&lt;/span&gt;, &lt;span class="pl-c1"&gt;1&lt;/span&gt;, &lt;span class="pl-c1"&gt;2&lt;/span&gt;, &lt;span class="pl-c1"&gt;3&lt;/span&gt;, &lt;span class="pl-c1"&gt;4&lt;/span&gt;, &lt;span class="pl-c1"&gt;5&lt;/span&gt;]
[&lt;span class="pl-c1"&gt;1&lt;/span&gt;, &lt;span class="pl-c1"&gt;2&lt;/span&gt;, &lt;span class="pl-c1"&gt;3&lt;/span&gt;, &lt;span class="pl-c1"&gt;4&lt;/span&gt;, &lt;span class="pl-c1"&gt;5&lt;/span&gt;, &lt;span class="pl-c1"&gt;6&lt;/span&gt;]&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;numpy里的&lt;code&gt;flatten&lt;/code&gt;与上面的函数实现有些微妙的不同：&lt;/p&gt;
&lt;div class="highlight highlight-source-python"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;import&lt;/span&gt; numpy
b &lt;span class="pl-k"&gt;=&lt;/span&gt; numpy.array([[&lt;span class="pl-c1"&gt;1&lt;/span&gt;,&lt;span class="pl-c1"&gt;2&lt;/span&gt;,&lt;span class="pl-c1"&gt;3&lt;/span&gt;],[&lt;span class="pl-c1"&gt;4&lt;/span&gt;,&lt;span class="pl-c1"&gt;5&lt;/span&gt;]])
b.flatten()
array([&lt;span class="pl-c1"&gt;list&lt;/span&gt;([&lt;span class="pl-c1"&gt;1&lt;/span&gt;, &lt;span class="pl-c1"&gt;2&lt;/span&gt;, &lt;span class="pl-c1"&gt;3&lt;/span&gt;]), &lt;span class="pl-c1"&gt;list&lt;/span&gt;([&lt;span class="pl-c1"&gt;4&lt;/span&gt;, &lt;span class="pl-c1"&gt;5&lt;/span&gt;])], &lt;span class="pl-v"&gt;dtype&lt;/span&gt;&lt;span class="pl-k"&gt;=&lt;/span&gt;&lt;span class="pl-c1"&gt;object&lt;/span&gt;)&lt;/pre&gt;&lt;/div&gt;
&lt;h4&gt;&lt;a id="user-content-62-列表等分" class="anchor" aria-hidden="true" href="#62-列表等分"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;62 列表等分&lt;/h4&gt;
&lt;div class="highlight highlight-source-python"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;from&lt;/span&gt; math &lt;span class="pl-k"&gt;import&lt;/span&gt; ceil

&lt;span class="pl-k"&gt;def&lt;/span&gt; &lt;span class="pl-en"&gt;divide&lt;/span&gt;(&lt;span class="pl-smi"&gt;lst&lt;/span&gt;, &lt;span class="pl-smi"&gt;size&lt;/span&gt;):
    &lt;span class="pl-k"&gt;if&lt;/span&gt; size &lt;span class="pl-k"&gt;&amp;lt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;0&lt;/span&gt;:
        &lt;span class="pl-k"&gt;return&lt;/span&gt; [lst]
    &lt;span class="pl-k"&gt;return&lt;/span&gt; [lst[i &lt;span class="pl-k"&gt;*&lt;/span&gt; size:(i&lt;span class="pl-k"&gt;+&lt;/span&gt;&lt;span class="pl-c1"&gt;1&lt;/span&gt;)&lt;span class="pl-k"&gt;*&lt;/span&gt;size] &lt;span class="pl-k"&gt;for&lt;/span&gt; i &lt;span class="pl-k"&gt;in&lt;/span&gt; &lt;span class="pl-c1"&gt;range&lt;/span&gt;(&lt;span class="pl-c1"&gt;0&lt;/span&gt;, ceil(&lt;span class="pl-c1"&gt;len&lt;/span&gt;(lst) &lt;span class="pl-k"&gt;/&lt;/span&gt; size))]


r &lt;span class="pl-k"&gt;=&lt;/span&gt; divide([&lt;span class="pl-c1"&gt;1&lt;/span&gt;, &lt;span class="pl-c1"&gt;3&lt;/span&gt;, &lt;span class="pl-c1"&gt;5&lt;/span&gt;, &lt;span class="pl-c1"&gt;7&lt;/span&gt;, &lt;span class="pl-c1"&gt;9&lt;/span&gt;], &lt;span class="pl-c1"&gt;2&lt;/span&gt;)
&lt;span class="pl-c1"&gt;print&lt;/span&gt;(r)  &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; [[1, 3], [5, 7], [9]]&lt;/span&gt;

r &lt;span class="pl-k"&gt;=&lt;/span&gt; divide([&lt;span class="pl-c1"&gt;1&lt;/span&gt;, &lt;span class="pl-c1"&gt;3&lt;/span&gt;, &lt;span class="pl-c1"&gt;5&lt;/span&gt;, &lt;span class="pl-c1"&gt;7&lt;/span&gt;, &lt;span class="pl-c1"&gt;9&lt;/span&gt;], &lt;span class="pl-c1"&gt;0&lt;/span&gt;)
&lt;span class="pl-c1"&gt;print&lt;/span&gt;(r)  &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; [[1, 3, 5, 7, 9]]&lt;/span&gt;

r &lt;span class="pl-k"&gt;=&lt;/span&gt; divide([&lt;span class="pl-c1"&gt;1&lt;/span&gt;, &lt;span class="pl-c1"&gt;3&lt;/span&gt;, &lt;span class="pl-c1"&gt;5&lt;/span&gt;, &lt;span class="pl-c1"&gt;7&lt;/span&gt;, &lt;span class="pl-c1"&gt;9&lt;/span&gt;], &lt;span class="pl-k"&gt;-&lt;/span&gt;&lt;span class="pl-c1"&gt;3&lt;/span&gt;)
&lt;span class="pl-c1"&gt;print&lt;/span&gt;(r)  &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; [[1, 3, 5, 7, 9]]&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;h4&gt;&lt;a id="user-content-63-列表压缩" class="anchor" aria-hidden="true" href="#63-列表压缩"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;63 列表压缩&lt;/h4&gt;
&lt;div class="highlight highlight-source-python"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;def&lt;/span&gt; &lt;span class="pl-en"&gt;filter_false&lt;/span&gt;(&lt;span class="pl-smi"&gt;lst&lt;/span&gt;):
    &lt;span class="pl-k"&gt;return&lt;/span&gt; &lt;span class="pl-c1"&gt;list&lt;/span&gt;(&lt;span class="pl-c1"&gt;filter&lt;/span&gt;(&lt;span class="pl-c1"&gt;bool&lt;/span&gt;, lst))


r &lt;span class="pl-k"&gt;=&lt;/span&gt; filter_false([&lt;span class="pl-c1"&gt;None&lt;/span&gt;, &lt;span class="pl-c1"&gt;0&lt;/span&gt;, &lt;span class="pl-c1"&gt;False&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;, [], &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;ok&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;, [&lt;span class="pl-c1"&gt;1&lt;/span&gt;, &lt;span class="pl-c1"&gt;2&lt;/span&gt;]])
&lt;span class="pl-c1"&gt;print&lt;/span&gt;(r)  &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; ['ok', [1, 2]]&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;h4&gt;&lt;a id="user-content-64-更长列表" class="anchor" aria-hidden="true" href="#64-更长列表"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;64 更长列表&lt;/h4&gt;
&lt;div class="highlight highlight-source-python"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;def&lt;/span&gt; &lt;span class="pl-en"&gt;max_length&lt;/span&gt;(&lt;span class="pl-k"&gt;*&lt;/span&gt;&lt;span class="pl-smi"&gt;lst&lt;/span&gt;):
    &lt;span class="pl-k"&gt;return&lt;/span&gt; &lt;span class="pl-c1"&gt;max&lt;/span&gt;(&lt;span class="pl-k"&gt;*&lt;/span&gt;lst, &lt;span class="pl-v"&gt;key&lt;/span&gt;&lt;span class="pl-k"&gt;=&lt;/span&gt;&lt;span class="pl-k"&gt;lambda&lt;/span&gt; &lt;span class="pl-smi"&gt;v&lt;/span&gt;: &lt;span class="pl-c1"&gt;len&lt;/span&gt;(v))


r &lt;span class="pl-k"&gt;=&lt;/span&gt; max_length([&lt;span class="pl-c1"&gt;1&lt;/span&gt;, &lt;span class="pl-c1"&gt;2&lt;/span&gt;, &lt;span class="pl-c1"&gt;3&lt;/span&gt;], [&lt;span class="pl-c1"&gt;4&lt;/span&gt;, &lt;span class="pl-c1"&gt;5&lt;/span&gt;, &lt;span class="pl-c1"&gt;6&lt;/span&gt;, &lt;span class="pl-c1"&gt;7&lt;/span&gt;], [&lt;span class="pl-c1"&gt;8&lt;/span&gt;])
&lt;span class="pl-c1"&gt;print&lt;/span&gt;(&lt;span class="pl-s"&gt;f&lt;/span&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;span class="pl-s"&gt;更长的列表是&lt;/span&gt;&lt;span class="pl-c1"&gt;{&lt;/span&gt;r&lt;span class="pl-c1"&gt;}&lt;/span&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;)  &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; [4, 5, 6, 7]&lt;/span&gt;

r &lt;span class="pl-k"&gt;=&lt;/span&gt; max_length([&lt;span class="pl-c1"&gt;1&lt;/span&gt;, &lt;span class="pl-c1"&gt;2&lt;/span&gt;, &lt;span class="pl-c1"&gt;3&lt;/span&gt;], [&lt;span class="pl-c1"&gt;4&lt;/span&gt;, &lt;span class="pl-c1"&gt;5&lt;/span&gt;, &lt;span class="pl-c1"&gt;6&lt;/span&gt;, &lt;span class="pl-c1"&gt;7&lt;/span&gt;], [&lt;span class="pl-c1"&gt;8&lt;/span&gt;, &lt;span class="pl-c1"&gt;9&lt;/span&gt;])
&lt;span class="pl-c1"&gt;print&lt;/span&gt;(&lt;span class="pl-s"&gt;f&lt;/span&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;span class="pl-s"&gt;更长的列表是&lt;/span&gt;&lt;span class="pl-c1"&gt;{&lt;/span&gt;r&lt;span class="pl-c1"&gt;}&lt;/span&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;)  &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; [4, 5, 6, 7]&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h4&gt;&lt;a id="user-content-65-求众数" class="anchor" aria-hidden="true" href="#65-求众数"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;65 求众数&lt;/h4&gt;
&lt;div class="highlight highlight-source-python"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;def&lt;/span&gt; &lt;span class="pl-en"&gt;top1&lt;/span&gt;(&lt;span class="pl-smi"&gt;lst&lt;/span&gt;):
    &lt;span class="pl-k"&gt;return&lt;/span&gt; &lt;span class="pl-c1"&gt;max&lt;/span&gt;(lst, &lt;span class="pl-v"&gt;default&lt;/span&gt;&lt;span class="pl-k"&gt;=&lt;/span&gt;&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;列表为空&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-v"&gt;key&lt;/span&gt;&lt;span class="pl-k"&gt;=&lt;/span&gt;&lt;span class="pl-k"&gt;lambda&lt;/span&gt; &lt;span class="pl-smi"&gt;v&lt;/span&gt;: lst.count(v))

lst &lt;span class="pl-k"&gt;=&lt;/span&gt; [&lt;span class="pl-c1"&gt;1&lt;/span&gt;, &lt;span class="pl-c1"&gt;3&lt;/span&gt;, &lt;span class="pl-c1"&gt;3&lt;/span&gt;, &lt;span class="pl-c1"&gt;2&lt;/span&gt;, &lt;span class="pl-c1"&gt;1&lt;/span&gt;, &lt;span class="pl-c1"&gt;1&lt;/span&gt;, &lt;span class="pl-c1"&gt;2&lt;/span&gt;]
r &lt;span class="pl-k"&gt;=&lt;/span&gt; top1(lst)
&lt;span class="pl-c1"&gt;print&lt;/span&gt;(&lt;span class="pl-s"&gt;f&lt;/span&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;span class="pl-c1"&gt;{&lt;/span&gt;lst&lt;span class="pl-c1"&gt;}&lt;/span&gt;&lt;span class="pl-s"&gt;中出现次数最多的元素为:&lt;/span&gt;&lt;span class="pl-c1"&gt;{&lt;/span&gt;r&lt;span class="pl-c1"&gt;}&lt;/span&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;)  &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; [1, 3, 3, 2, 1, 1, 2]中出现次数最多的元素为:1&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h4&gt;&lt;a id="user-content-66-多表之最" class="anchor" aria-hidden="true" href="#66-多表之最"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;66 多表之最&lt;/h4&gt;
&lt;div class="highlight highlight-source-python"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;def&lt;/span&gt; &lt;span class="pl-en"&gt;max_lists&lt;/span&gt;(&lt;span class="pl-k"&gt;*&lt;/span&gt;&lt;span class="pl-smi"&gt;lst&lt;/span&gt;):
    &lt;span class="pl-k"&gt;return&lt;/span&gt; &lt;span class="pl-c1"&gt;max&lt;/span&gt;(&lt;span class="pl-c1"&gt;max&lt;/span&gt;(&lt;span class="pl-k"&gt;*&lt;/span&gt;lst, &lt;span class="pl-v"&gt;key&lt;/span&gt;&lt;span class="pl-k"&gt;=&lt;/span&gt;&lt;span class="pl-k"&gt;lambda&lt;/span&gt; &lt;span class="pl-smi"&gt;v&lt;/span&gt;: &lt;span class="pl-c1"&gt;max&lt;/span&gt;(v)))


r &lt;span class="pl-k"&gt;=&lt;/span&gt; max_lists([&lt;span class="pl-c1"&gt;1&lt;/span&gt;, &lt;span class="pl-c1"&gt;2&lt;/span&gt;, &lt;span class="pl-c1"&gt;3&lt;/span&gt;], [&lt;span class="pl-c1"&gt;6&lt;/span&gt;, &lt;span class="pl-c1"&gt;7&lt;/span&gt;, &lt;span class="pl-c1"&gt;8&lt;/span&gt;], [&lt;span class="pl-c1"&gt;4&lt;/span&gt;, &lt;span class="pl-c1"&gt;5&lt;/span&gt;])
&lt;span class="pl-c1"&gt;print&lt;/span&gt;(r)  &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; 8&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h4&gt;&lt;a id="user-content-67-列表查重" class="anchor" aria-hidden="true" href="#67-列表查重"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;67 列表查重&lt;/h4&gt;
&lt;div class="highlight highlight-source-python"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;def&lt;/span&gt; &lt;span class="pl-en"&gt;has_duplicates&lt;/span&gt;(&lt;span class="pl-smi"&gt;lst&lt;/span&gt;):
    &lt;span class="pl-k"&gt;return&lt;/span&gt; &lt;span class="pl-c1"&gt;len&lt;/span&gt;(lst) &lt;span class="pl-k"&gt;==&lt;/span&gt; &lt;span class="pl-c1"&gt;len&lt;/span&gt;(&lt;span class="pl-c1"&gt;set&lt;/span&gt;(lst))


x &lt;span class="pl-k"&gt;=&lt;/span&gt; [&lt;span class="pl-c1"&gt;1&lt;/span&gt;, &lt;span class="pl-c1"&gt;1&lt;/span&gt;, &lt;span class="pl-c1"&gt;2&lt;/span&gt;, &lt;span class="pl-c1"&gt;2&lt;/span&gt;, &lt;span class="pl-c1"&gt;3&lt;/span&gt;, &lt;span class="pl-c1"&gt;2&lt;/span&gt;, &lt;span class="pl-c1"&gt;3&lt;/span&gt;, &lt;span class="pl-c1"&gt;4&lt;/span&gt;, &lt;span class="pl-c1"&gt;5&lt;/span&gt;, &lt;span class="pl-c1"&gt;6&lt;/span&gt;]
y &lt;span class="pl-k"&gt;=&lt;/span&gt; [&lt;span class="pl-c1"&gt;1&lt;/span&gt;, &lt;span class="pl-c1"&gt;2&lt;/span&gt;, &lt;span class="pl-c1"&gt;3&lt;/span&gt;, &lt;span class="pl-c1"&gt;4&lt;/span&gt;, &lt;span class="pl-c1"&gt;5&lt;/span&gt;]
has_duplicates(x)  &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; False&lt;/span&gt;
has_duplicates(y)  &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; True&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h4&gt;&lt;a id="user-content-68-列表反转" class="anchor" aria-hidden="true" href="#68-列表反转"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;68 列表反转&lt;/h4&gt;
&lt;div class="highlight highlight-source-python"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;def&lt;/span&gt; &lt;span class="pl-en"&gt;reverse&lt;/span&gt;(&lt;span class="pl-smi"&gt;lst&lt;/span&gt;):
    &lt;span class="pl-k"&gt;return&lt;/span&gt; lst[::&lt;span class="pl-k"&gt;-&lt;/span&gt;&lt;span class="pl-c1"&gt;1&lt;/span&gt;]


r &lt;span class="pl-k"&gt;=&lt;/span&gt; reverse([&lt;span class="pl-c1"&gt;1&lt;/span&gt;, &lt;span class="pl-k"&gt;-&lt;/span&gt;&lt;span class="pl-c1"&gt;2&lt;/span&gt;, &lt;span class="pl-c1"&gt;3&lt;/span&gt;, &lt;span class="pl-c1"&gt;4&lt;/span&gt;, &lt;span class="pl-c1"&gt;1&lt;/span&gt;, &lt;span class="pl-c1"&gt;2&lt;/span&gt;])
&lt;span class="pl-c1"&gt;print&lt;/span&gt;(r)  &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; [2, 1, 4, 3, -2, 1]&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h4&gt;&lt;a id="user-content-69-浮点数等差数列" class="anchor" aria-hidden="true" href="#69-浮点数等差数列"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;69 浮点数等差数列&lt;/h4&gt;
&lt;div class="highlight highlight-source-python"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;def&lt;/span&gt; &lt;span class="pl-en"&gt;rang&lt;/span&gt;(&lt;span class="pl-smi"&gt;start&lt;/span&gt;, &lt;span class="pl-smi"&gt;stop&lt;/span&gt;, &lt;span class="pl-smi"&gt;n&lt;/span&gt;):
    start,stop,n &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;float&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;span class="pl-c1"&gt;%.2f&lt;/span&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt; &lt;span class="pl-k"&gt;%&lt;/span&gt; start), &lt;span class="pl-c1"&gt;float&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;span class="pl-c1"&gt;%.2f&lt;/span&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt; &lt;span class="pl-k"&gt;%&lt;/span&gt; stop),&lt;span class="pl-c1"&gt;int&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;%.d&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt; &lt;span class="pl-k"&gt;%&lt;/span&gt; n)
    step &lt;span class="pl-k"&gt;=&lt;/span&gt; (stop&lt;span class="pl-k"&gt;-&lt;/span&gt;start)&lt;span class="pl-k"&gt;/&lt;/span&gt;n
    lst &lt;span class="pl-k"&gt;=&lt;/span&gt; [start]
    &lt;span class="pl-k"&gt;while&lt;/span&gt; n &lt;span class="pl-k"&gt;&amp;gt;&lt;/span&gt; &lt;span class="pl-c1"&gt;0&lt;/span&gt;:
        start,n &lt;span class="pl-k"&gt;=&lt;/span&gt; start&lt;span class="pl-k"&gt;+&lt;/span&gt;step,n&lt;span class="pl-k"&gt;-&lt;/span&gt;&lt;span class="pl-c1"&gt;1&lt;/span&gt;
        lst.append(&lt;span class="pl-c1"&gt;round&lt;/span&gt;((start), &lt;span class="pl-c1"&gt;2&lt;/span&gt;))
    &lt;span class="pl-k"&gt;return&lt;/span&gt; lst

rang(&lt;span class="pl-c1"&gt;1&lt;/span&gt;, &lt;span class="pl-c1"&gt;8&lt;/span&gt;, &lt;span class="pl-c1"&gt;10&lt;/span&gt;) &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; [1.0, 1.7, 2.4, 3.1, 3.8, 4.5, 5.2, 5.9, 6.6, 7.3, 8.0]&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h4&gt;&lt;a id="user-content-70-按条件分组" class="anchor" aria-hidden="true" href="#70-按条件分组"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;70 按条件分组&lt;/h4&gt;
&lt;div class="highlight highlight-source-python"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;def&lt;/span&gt; &lt;span class="pl-en"&gt;bif_by&lt;/span&gt;(&lt;span class="pl-smi"&gt;lst&lt;/span&gt;, &lt;span class="pl-smi"&gt;f&lt;/span&gt;):
    &lt;span class="pl-k"&gt;return&lt;/span&gt; [ [x &lt;span class="pl-k"&gt;for&lt;/span&gt; x &lt;span class="pl-k"&gt;in&lt;/span&gt; lst &lt;span class="pl-k"&gt;if&lt;/span&gt; f(x)],[x &lt;span class="pl-k"&gt;for&lt;/span&gt; x &lt;span class="pl-k"&gt;in&lt;/span&gt; lst &lt;span class="pl-k"&gt;if&lt;/span&gt; &lt;span class="pl-k"&gt;not&lt;/span&gt; f(x)]]

records &lt;span class="pl-k"&gt;=&lt;/span&gt; [&lt;span class="pl-c1"&gt;25&lt;/span&gt;,&lt;span class="pl-c1"&gt;89&lt;/span&gt;,&lt;span class="pl-c1"&gt;31&lt;/span&gt;,&lt;span class="pl-c1"&gt;34&lt;/span&gt;] 
bif_by(records, &lt;span class="pl-k"&gt;lambda&lt;/span&gt; &lt;span class="pl-smi"&gt;x&lt;/span&gt;: x&lt;span class="pl-k"&gt;&amp;lt;&lt;/span&gt;&lt;span class="pl-c1"&gt;80&lt;/span&gt;) &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; [[25, 31, 34], [89]]&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h4&gt;&lt;a id="user-content-71-map实现向量运算" class="anchor" aria-hidden="true" href="#71-map实现向量运算"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;71 map实现向量运算&lt;/h4&gt;
&lt;div class="highlight highlight-source-python"&gt;&lt;pre&gt;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt;多序列运算函数—map(function,iterabel,iterable2)&lt;/span&gt;
lst1&lt;span class="pl-k"&gt;=&lt;/span&gt;[&lt;span class="pl-c1"&gt;1&lt;/span&gt;,&lt;span class="pl-c1"&gt;2&lt;/span&gt;,&lt;span class="pl-c1"&gt;3&lt;/span&gt;,&lt;span class="pl-c1"&gt;4&lt;/span&gt;,&lt;span class="pl-c1"&gt;5&lt;/span&gt;,&lt;span class="pl-c1"&gt;6&lt;/span&gt;]
lst2&lt;span class="pl-k"&gt;=&lt;/span&gt;[&lt;span class="pl-c1"&gt;3&lt;/span&gt;,&lt;span class="pl-c1"&gt;4&lt;/span&gt;,&lt;span class="pl-c1"&gt;5&lt;/span&gt;,&lt;span class="pl-c1"&gt;6&lt;/span&gt;,&lt;span class="pl-c1"&gt;3&lt;/span&gt;,&lt;span class="pl-c1"&gt;2&lt;/span&gt;]
&lt;span class="pl-c1"&gt;list&lt;/span&gt;(&lt;span class="pl-c1"&gt;map&lt;/span&gt;(&lt;span class="pl-k"&gt;lambda&lt;/span&gt; &lt;span class="pl-smi"&gt;x&lt;/span&gt;,&lt;span class="pl-smi"&gt;y&lt;/span&gt;:x&lt;span class="pl-k"&gt;*&lt;/span&gt;y&lt;span class="pl-k"&gt;+&lt;/span&gt;&lt;span class="pl-c1"&gt;1&lt;/span&gt;,lst1,lst2))
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt;## [4, 9, 16, 25, 16, 13]&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h4&gt;&lt;a id="user-content-72-值最大的字典" class="anchor" aria-hidden="true" href="#72-值最大的字典"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;72 值最大的字典&lt;/h4&gt;
&lt;div class="highlight highlight-source-python"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;def&lt;/span&gt; &lt;span class="pl-en"&gt;max_pairs&lt;/span&gt;(&lt;span class="pl-smi"&gt;dic&lt;/span&gt;):
    &lt;span class="pl-k"&gt;if&lt;/span&gt; &lt;span class="pl-c1"&gt;len&lt;/span&gt;(dic) &lt;span class="pl-k"&gt;==&lt;/span&gt; &lt;span class="pl-c1"&gt;0&lt;/span&gt;:
        &lt;span class="pl-k"&gt;return&lt;/span&gt; dic
    max_val &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;max&lt;/span&gt;(&lt;span class="pl-c1"&gt;map&lt;/span&gt;(&lt;span class="pl-k"&gt;lambda&lt;/span&gt; &lt;span class="pl-smi"&gt;v&lt;/span&gt;: v[&lt;span class="pl-c1"&gt;1&lt;/span&gt;], dic.items()))
    &lt;span class="pl-k"&gt;return&lt;/span&gt; [item &lt;span class="pl-k"&gt;for&lt;/span&gt; item &lt;span class="pl-k"&gt;in&lt;/span&gt; dic.items() &lt;span class="pl-k"&gt;if&lt;/span&gt; item[&lt;span class="pl-c1"&gt;1&lt;/span&gt;] &lt;span class="pl-k"&gt;==&lt;/span&gt; max_val]


r &lt;span class="pl-k"&gt;=&lt;/span&gt; max_pairs({&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;a&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;: &lt;span class="pl-k"&gt;-&lt;/span&gt;&lt;span class="pl-c1"&gt;10&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;b&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;: &lt;span class="pl-c1"&gt;5&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;c&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;: &lt;span class="pl-c1"&gt;3&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;d&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;: &lt;span class="pl-c1"&gt;5&lt;/span&gt;})
&lt;span class="pl-c1"&gt;print&lt;/span&gt;(r)  &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; [('b', 5), ('d', 5)]&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h4&gt;&lt;a id="user-content-73-合并两个字典" class="anchor" aria-hidden="true" href="#73-合并两个字典"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;73 合并两个字典&lt;/h4&gt;
&lt;div class="highlight highlight-source-python"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;def&lt;/span&gt; &lt;span class="pl-en"&gt;merge_dict&lt;/span&gt;(&lt;span class="pl-smi"&gt;dic1&lt;/span&gt;, &lt;span class="pl-smi"&gt;dic2&lt;/span&gt;):
    &lt;span class="pl-k"&gt;return&lt;/span&gt; {&lt;span class="pl-k"&gt;**&lt;/span&gt;dic1, &lt;span class="pl-k"&gt;**&lt;/span&gt;dic2}  &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; python3.5后支持的一行代码实现合并字典&lt;/span&gt;

merge_dict({&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;a&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;: &lt;span class="pl-c1"&gt;1&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;b&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;: &lt;span class="pl-c1"&gt;2&lt;/span&gt;}, {&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;c&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;: &lt;span class="pl-c1"&gt;3&lt;/span&gt;})  &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; {'a': 1, 'b': 2, 'c': 3}&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h4&gt;&lt;a id="user-content-74-topn字典" class="anchor" aria-hidden="true" href="#74-topn字典"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;74 topn字典&lt;/h4&gt;
&lt;div class="highlight highlight-source-python"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;from&lt;/span&gt; heapq &lt;span class="pl-k"&gt;import&lt;/span&gt; nlargest

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; 返回字典d前n个最大值对应的键&lt;/span&gt;

&lt;span class="pl-k"&gt;def&lt;/span&gt; &lt;span class="pl-en"&gt;topn_dict&lt;/span&gt;(&lt;span class="pl-smi"&gt;d&lt;/span&gt;, &lt;span class="pl-smi"&gt;n&lt;/span&gt;):
    &lt;span class="pl-k"&gt;return&lt;/span&gt; nlargest(n, d, &lt;span class="pl-v"&gt;key&lt;/span&gt;&lt;span class="pl-k"&gt;=&lt;/span&gt;&lt;span class="pl-k"&gt;lambda&lt;/span&gt; &lt;span class="pl-smi"&gt;k&lt;/span&gt;: d[k])

topn_dict({&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;a&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;: &lt;span class="pl-c1"&gt;10&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;b&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;: &lt;span class="pl-c1"&gt;8&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;c&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;: &lt;span class="pl-c1"&gt;9&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;d&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;: &lt;span class="pl-c1"&gt;10&lt;/span&gt;}, &lt;span class="pl-c1"&gt;3&lt;/span&gt;)  &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; ['a', 'd', 'c']&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h4&gt;&lt;a id="user-content-75-异位词" class="anchor" aria-hidden="true" href="#75-异位词"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;75 异位词&lt;/h4&gt;
&lt;div class="highlight highlight-source-python"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;from&lt;/span&gt; collections &lt;span class="pl-k"&gt;import&lt;/span&gt; Counter

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; 检查两个字符串是否 相同字母异序词，简称：互为变位词&lt;/span&gt;

&lt;span class="pl-k"&gt;def&lt;/span&gt; &lt;span class="pl-en"&gt;anagram&lt;/span&gt;(&lt;span class="pl-smi"&gt;str1&lt;/span&gt;, &lt;span class="pl-smi"&gt;str2&lt;/span&gt;):
    &lt;span class="pl-k"&gt;return&lt;/span&gt; Counter(str1) &lt;span class="pl-k"&gt;==&lt;/span&gt; Counter(str2)

anagram(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;eleven+two&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;twelve+one&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;)  &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; True 这是一对神器的变位词&lt;/span&gt;
anagram(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;eleven&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;twelve&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;)  &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; False&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h4&gt;&lt;a id="user-content-76-逻辑上合并字典" class="anchor" aria-hidden="true" href="#76-逻辑上合并字典"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;76 逻辑上合并字典&lt;/h4&gt;
&lt;p&gt;(1) 两种合并字典方法
这是一般的字典合并写法&lt;/p&gt;
&lt;div class="highlight highlight-source-python"&gt;&lt;pre&gt;dic1 &lt;span class="pl-k"&gt;=&lt;/span&gt; {&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;x&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;: &lt;span class="pl-c1"&gt;1&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;y&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;: &lt;span class="pl-c1"&gt;2&lt;/span&gt; }
dic2 &lt;span class="pl-k"&gt;=&lt;/span&gt; {&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;y&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;: &lt;span class="pl-c1"&gt;3&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;z&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;: &lt;span class="pl-c1"&gt;4&lt;/span&gt; }
merged1 &lt;span class="pl-k"&gt;=&lt;/span&gt; {&lt;span class="pl-k"&gt;**&lt;/span&gt;dic1, &lt;span class="pl-k"&gt;**&lt;/span&gt;dic2} &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; {'x': 1, 'y': 3, 'z': 4}&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;修改merged['x']=10，dic1中的x值&lt;code&gt;不变&lt;/code&gt;，&lt;code&gt;merged&lt;/code&gt;是重新生成的一个&lt;code&gt;新字典&lt;/code&gt;。&lt;/p&gt;
&lt;p&gt;但是，&lt;code&gt;ChainMap&lt;/code&gt;却不同，它在内部创建了一个容纳这些字典的列表。因此使用ChainMap合并字典，修改merged['x']=10后，dic1中的x值&lt;code&gt;改变&lt;/code&gt;，如下所示：&lt;/p&gt;
&lt;div class="highlight highlight-source-python"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;from&lt;/span&gt; collections &lt;span class="pl-k"&gt;import&lt;/span&gt; ChainMap
merged2 &lt;span class="pl-k"&gt;=&lt;/span&gt; ChainMap(dic1,dic2)
&lt;span class="pl-c1"&gt;print&lt;/span&gt;(merged2) &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; ChainMap({'x': 1, 'y': 2}, {'y': 3, 'z': 4})&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h4&gt;&lt;a id="user-content-77-命名元组提高可读性" class="anchor" aria-hidden="true" href="#77-命名元组提高可读性"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;77 命名元组提高可读性&lt;/h4&gt;
&lt;div class="highlight highlight-source-python"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;from&lt;/span&gt; collections &lt;span class="pl-k"&gt;import&lt;/span&gt; namedtuple
Point &lt;span class="pl-k"&gt;=&lt;/span&gt; namedtuple(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;Point&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;, [&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;x&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;y&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;z&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;])  &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; 定义名字为Point的元祖，字段属性有x,y,z&lt;/span&gt;
lst &lt;span class="pl-k"&gt;=&lt;/span&gt; [Point(&lt;span class="pl-c1"&gt;1.5&lt;/span&gt;, &lt;span class="pl-c1"&gt;2&lt;/span&gt;, &lt;span class="pl-c1"&gt;3.0&lt;/span&gt;), Point(&lt;span class="pl-k"&gt;-&lt;/span&gt;&lt;span class="pl-c1"&gt;0.3&lt;/span&gt;, &lt;span class="pl-k"&gt;-&lt;/span&gt;&lt;span class="pl-c1"&gt;1.0&lt;/span&gt;, &lt;span class="pl-c1"&gt;2.1&lt;/span&gt;), Point(&lt;span class="pl-c1"&gt;1.3&lt;/span&gt;, &lt;span class="pl-c1"&gt;2.8&lt;/span&gt;, &lt;span class="pl-k"&gt;-&lt;/span&gt;&lt;span class="pl-c1"&gt;2.5&lt;/span&gt;)]
&lt;span class="pl-c1"&gt;print&lt;/span&gt;(lst[&lt;span class="pl-c1"&gt;0&lt;/span&gt;].y &lt;span class="pl-k"&gt;-&lt;/span&gt; lst[&lt;span class="pl-c1"&gt;1&lt;/span&gt;].y)&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;使用命名元组写出来的代码可读性更好，尤其处理上百上千个属性时作用更加凸显。&lt;/p&gt;
&lt;h4&gt;&lt;a id="user-content-78-样本抽样" class="anchor" aria-hidden="true" href="#78-样本抽样"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;78 样本抽样&lt;/h4&gt;
&lt;p&gt;使用&lt;code&gt;sample&lt;/code&gt;抽样，如下例子从100个样本中随机抽样10个。&lt;/p&gt;
&lt;div class="highlight highlight-source-python"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;from&lt;/span&gt; random &lt;span class="pl-k"&gt;import&lt;/span&gt; randint,sample
lst &lt;span class="pl-k"&gt;=&lt;/span&gt; [randint(&lt;span class="pl-c1"&gt;0&lt;/span&gt;,&lt;span class="pl-c1"&gt;50&lt;/span&gt;) &lt;span class="pl-k"&gt;for&lt;/span&gt; _ &lt;span class="pl-k"&gt;in&lt;/span&gt; &lt;span class="pl-c1"&gt;range&lt;/span&gt;(&lt;span class="pl-c1"&gt;100&lt;/span&gt;)]
&lt;span class="pl-c1"&gt;print&lt;/span&gt;(lst[:&lt;span class="pl-c1"&gt;5&lt;/span&gt;])&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; [38, 19, 11, 3, 6]&lt;/span&gt;
lst_sample &lt;span class="pl-k"&gt;=&lt;/span&gt; sample(lst,&lt;span class="pl-c1"&gt;10&lt;/span&gt;)
&lt;span class="pl-c1"&gt;print&lt;/span&gt;(lst_sample) &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; [33, 40, 35, 49, 24, 15, 48, 29, 37, 24]&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h4&gt;&lt;a id="user-content-79-重洗数据集" class="anchor" aria-hidden="true" href="#79-重洗数据集"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;79 重洗数据集&lt;/h4&gt;
&lt;p&gt;使用&lt;code&gt;shuffle&lt;/code&gt;用来重洗数据集，&lt;strong&gt;值得注意&lt;code&gt;shuffle&lt;/code&gt;是对lst就地(in place)洗牌，节省存储空间&lt;/strong&gt;&lt;/p&gt;
&lt;div class="highlight highlight-source-python"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;from&lt;/span&gt; random &lt;span class="pl-k"&gt;import&lt;/span&gt; shuffle
lst &lt;span class="pl-k"&gt;=&lt;/span&gt; [randint(&lt;span class="pl-c1"&gt;0&lt;/span&gt;,&lt;span class="pl-c1"&gt;50&lt;/span&gt;) &lt;span class="pl-k"&gt;for&lt;/span&gt; _ &lt;span class="pl-k"&gt;in&lt;/span&gt; &lt;span class="pl-c1"&gt;range&lt;/span&gt;(&lt;span class="pl-c1"&gt;100&lt;/span&gt;)]
shuffle(lst)
&lt;span class="pl-c1"&gt;print&lt;/span&gt;(lst[:&lt;span class="pl-c1"&gt;5&lt;/span&gt;]) &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; [50, 3, 48, 1, 26]&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h4&gt;&lt;a id="user-content-80-10个均匀分布的坐标点" class="anchor" aria-hidden="true" href="#80-10个均匀分布的坐标点"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;80 10个均匀分布的坐标点&lt;/h4&gt;
&lt;p&gt;random模块中的&lt;code&gt;uniform(a,b)&lt;/code&gt;生成[a,b)内的一个随机数，如下生成10个均匀分布的二维坐标点&lt;/p&gt;
&lt;div class="highlight highlight-source-python"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;from&lt;/span&gt; random &lt;span class="pl-k"&gt;import&lt;/span&gt; uniform
In [&lt;span class="pl-c1"&gt;1&lt;/span&gt;]: [(uniform(&lt;span class="pl-c1"&gt;0&lt;/span&gt;,&lt;span class="pl-c1"&gt;10&lt;/span&gt;),uniform(&lt;span class="pl-c1"&gt;0&lt;/span&gt;,&lt;span class="pl-c1"&gt;10&lt;/span&gt;)) &lt;span class="pl-k"&gt;for&lt;/span&gt; _ &lt;span class="pl-k"&gt;in&lt;/span&gt; &lt;span class="pl-c1"&gt;range&lt;/span&gt;(&lt;span class="pl-c1"&gt;10&lt;/span&gt;)]
Out[&lt;span class="pl-c1"&gt;1&lt;/span&gt;]: 
[(&lt;span class="pl-c1"&gt;9.244361194237328&lt;/span&gt;, &lt;span class="pl-c1"&gt;7.684326645514235&lt;/span&gt;),
 (&lt;span class="pl-c1"&gt;8.129267671737324&lt;/span&gt;, &lt;span class="pl-c1"&gt;9.988395854203773&lt;/span&gt;),
 (&lt;span class="pl-c1"&gt;9.505278771040661&lt;/span&gt;, &lt;span class="pl-c1"&gt;2.8650440524834107&lt;/span&gt;),
 (&lt;span class="pl-c1"&gt;3.84320100484284&lt;/span&gt;, &lt;span class="pl-c1"&gt;1.7687190176304601&lt;/span&gt;),
 (&lt;span class="pl-c1"&gt;6.095385729409376&lt;/span&gt;, &lt;span class="pl-c1"&gt;2.377133802224657&lt;/span&gt;),
 (&lt;span class="pl-c1"&gt;8.522913365698605&lt;/span&gt;, &lt;span class="pl-c1"&gt;3.2395995841267844&lt;/span&gt;),
 (&lt;span class="pl-c1"&gt;8.827829601859406&lt;/span&gt;, &lt;span class="pl-c1"&gt;3.9298809217233766&lt;/span&gt;),
 (&lt;span class="pl-c1"&gt;1.4749644859469302&lt;/span&gt;, &lt;span class="pl-c1"&gt;8.038753079253127&lt;/span&gt;),
 (&lt;span class="pl-c1"&gt;9.005430657826324&lt;/span&gt;, &lt;span class="pl-c1"&gt;7.58011186920019&lt;/span&gt;),
 (&lt;span class="pl-c1"&gt;8.700789540392917&lt;/span&gt;, &lt;span class="pl-c1"&gt;1.2217577293254112&lt;/span&gt;)]&lt;/pre&gt;&lt;/div&gt;
&lt;h4&gt;&lt;a id="user-content-81-10个高斯分布的坐标点" class="anchor" aria-hidden="true" href="#81-10个高斯分布的坐标点"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;81 10个高斯分布的坐标点&lt;/h4&gt;
&lt;p&gt;random模块中的&lt;code&gt;gauss(u,sigma)&lt;/code&gt;生成均值为u, 标准差为sigma的满足高斯分布的值，如下生成10个二维坐标点，样本误差(y-2*x-1)满足均值为0，标准差为1的高斯分布：&lt;/p&gt;
&lt;div class="highlight highlight-source-python"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;from&lt;/span&gt; random &lt;span class="pl-k"&gt;import&lt;/span&gt; gauss
x &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;range&lt;/span&gt;(&lt;span class="pl-c1"&gt;10&lt;/span&gt;)
y &lt;span class="pl-k"&gt;=&lt;/span&gt; [&lt;span class="pl-c1"&gt;2&lt;/span&gt;&lt;span class="pl-k"&gt;*&lt;/span&gt;xi&lt;span class="pl-k"&gt;+&lt;/span&gt;&lt;span class="pl-c1"&gt;1&lt;/span&gt;&lt;span class="pl-k"&gt;+&lt;/span&gt;gauss(&lt;span class="pl-c1"&gt;0&lt;/span&gt;,&lt;span class="pl-c1"&gt;1&lt;/span&gt;) &lt;span class="pl-k"&gt;for&lt;/span&gt; xi &lt;span class="pl-k"&gt;in&lt;/span&gt; x]
points &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;list&lt;/span&gt;(&lt;span class="pl-c1"&gt;zip&lt;/span&gt;(x,y))
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt;## 10个二维点：&lt;/span&gt;
[(&lt;span class="pl-c1"&gt;0&lt;/span&gt;, &lt;span class="pl-k"&gt;-&lt;/span&gt;&lt;span class="pl-c1"&gt;0.86789025305992&lt;/span&gt;),
 (&lt;span class="pl-c1"&gt;1&lt;/span&gt;, &lt;span class="pl-c1"&gt;4.738439437453464&lt;/span&gt;),
 (&lt;span class="pl-c1"&gt;2&lt;/span&gt;, &lt;span class="pl-c1"&gt;5.190278040856102&lt;/span&gt;),
 (&lt;span class="pl-c1"&gt;3&lt;/span&gt;, &lt;span class="pl-c1"&gt;8.05270893133576&lt;/span&gt;),
 (&lt;span class="pl-c1"&gt;4&lt;/span&gt;, &lt;span class="pl-c1"&gt;9.979481700775292&lt;/span&gt;),
 (&lt;span class="pl-c1"&gt;5&lt;/span&gt;, &lt;span class="pl-c1"&gt;11.960781766216384&lt;/span&gt;),
 (&lt;span class="pl-c1"&gt;6&lt;/span&gt;, &lt;span class="pl-c1"&gt;13.025427054303737&lt;/span&gt;),
 (&lt;span class="pl-c1"&gt;7&lt;/span&gt;, &lt;span class="pl-c1"&gt;14.02384035204836&lt;/span&gt;),
 (&lt;span class="pl-c1"&gt;8&lt;/span&gt;, &lt;span class="pl-c1"&gt;15.33755823101161&lt;/span&gt;),
 (&lt;span class="pl-c1"&gt;9&lt;/span&gt;, &lt;span class="pl-c1"&gt;17.565074449028497&lt;/span&gt;)]&lt;/pre&gt;&lt;/div&gt;
&lt;h4&gt;&lt;a id="user-content-82-chain高效串联多个容器对象" class="anchor" aria-hidden="true" href="#82-chain高效串联多个容器对象"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;82 chain高效串联多个容器对象&lt;/h4&gt;
&lt;p&gt;&lt;code&gt;chain&lt;/code&gt;函数串联a和b，兼顾内存效率同时写法更加优雅。&lt;/p&gt;
&lt;div class="highlight highlight-source-python"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;from&lt;/span&gt; itertools &lt;span class="pl-k"&gt;import&lt;/span&gt; chain
a &lt;span class="pl-k"&gt;=&lt;/span&gt; [&lt;span class="pl-c1"&gt;1&lt;/span&gt;,&lt;span class="pl-c1"&gt;3&lt;/span&gt;,&lt;span class="pl-c1"&gt;5&lt;/span&gt;,&lt;span class="pl-c1"&gt;0&lt;/span&gt;]
b &lt;span class="pl-k"&gt;=&lt;/span&gt; (&lt;span class="pl-c1"&gt;2&lt;/span&gt;,&lt;span class="pl-c1"&gt;4&lt;/span&gt;,&lt;span class="pl-c1"&gt;6&lt;/span&gt;)

&lt;span class="pl-k"&gt;for&lt;/span&gt; i &lt;span class="pl-k"&gt;in&lt;/span&gt; chain(a,b):
  &lt;span class="pl-c1"&gt;print&lt;/span&gt;(i)
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt;## 结果&lt;/span&gt;
&lt;span class="pl-c1"&gt;1&lt;/span&gt;
&lt;span class="pl-c1"&gt;3&lt;/span&gt;
&lt;span class="pl-c1"&gt;5&lt;/span&gt;
&lt;span class="pl-c1"&gt;0&lt;/span&gt;
&lt;span class="pl-c1"&gt;2&lt;/span&gt;
&lt;span class="pl-c1"&gt;4&lt;/span&gt;
&lt;span class="pl-c1"&gt;6&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h4&gt;&lt;a id="user-content-83-操作函数对象" class="anchor" aria-hidden="true" href="#83-操作函数对象"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;83 操作函数对象&lt;/h4&gt;
&lt;div class="highlight highlight-source-python"&gt;&lt;pre&gt;In [&lt;span class="pl-c1"&gt;31&lt;/span&gt;]: &lt;span class="pl-k"&gt;def&lt;/span&gt; &lt;span class="pl-en"&gt;f&lt;/span&gt;():
    &lt;span class="pl-c1"&gt;...&lt;/span&gt;:     &lt;span class="pl-c1"&gt;print&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;i&lt;span class="pl-cce"&gt;\'&lt;/span&gt;m f&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;)
    &lt;span class="pl-c1"&gt;...&lt;/span&gt;:

In [&lt;span class="pl-c1"&gt;32&lt;/span&gt;]: &lt;span class="pl-k"&gt;def&lt;/span&gt; &lt;span class="pl-en"&gt;g&lt;/span&gt;():
    &lt;span class="pl-c1"&gt;...&lt;/span&gt;:     &lt;span class="pl-c1"&gt;print&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;i&lt;span class="pl-cce"&gt;\'&lt;/span&gt;m g&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;)
    &lt;span class="pl-c1"&gt;...&lt;/span&gt;:

In [&lt;span class="pl-c1"&gt;33&lt;/span&gt;]: [f,g][&lt;span class="pl-c1"&gt;1&lt;/span&gt;]()
i&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;m g&lt;span class="pl-ii"&gt;&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;创建函数对象的list，根据想要调用的index，方便统一调用。&lt;/p&gt;
&lt;h4&gt;&lt;a id="user-content-84-生成逆序序列" class="anchor" aria-hidden="true" href="#84-生成逆序序列"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;84 生成逆序序列&lt;/h4&gt;
&lt;div class="highlight highlight-source-python"&gt;&lt;pre&gt;&lt;span class="pl-c1"&gt;list&lt;/span&gt;(&lt;span class="pl-c1"&gt;range&lt;/span&gt;(&lt;span class="pl-c1"&gt;10&lt;/span&gt;,&lt;span class="pl-k"&gt;-&lt;/span&gt;&lt;span class="pl-c1"&gt;1&lt;/span&gt;,&lt;span class="pl-k"&gt;-&lt;/span&gt;&lt;span class="pl-c1"&gt;1&lt;/span&gt;)) &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; [10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0]&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;第三个参数为负时，表示从第一个参数开始递减，终止到第二个参数(不包括此边界)&lt;/p&gt;
&lt;h4&gt;&lt;a id="user-content-85-函数的五类参数使用例子" class="anchor" aria-hidden="true" href="#85-函数的五类参数使用例子"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;85 函数的五类参数使用例子&lt;/h4&gt;
&lt;p&gt;python五类参数：位置参数，关键字参数，默认参数，可变位置或关键字参数的使用。&lt;/p&gt;
&lt;div class="highlight highlight-source-python"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;def&lt;/span&gt; &lt;span class="pl-en"&gt;f&lt;/span&gt;(&lt;span class="pl-smi"&gt;a&lt;/span&gt;,&lt;span class="pl-k"&gt;*&lt;/span&gt;&lt;span class="pl-smi"&gt;b&lt;/span&gt;,&lt;span class="pl-smi"&gt;c&lt;/span&gt;&lt;span class="pl-k"&gt;=&lt;/span&gt;&lt;span class="pl-c1"&gt;10&lt;/span&gt;,&lt;span class="pl-k"&gt;**&lt;/span&gt;&lt;span class="pl-smi"&gt;d&lt;/span&gt;):
  &lt;span class="pl-c1"&gt;print&lt;/span&gt;(&lt;span class="pl-s"&gt;f&lt;/span&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;span class="pl-s"&gt;a:&lt;/span&gt;&lt;span class="pl-c1"&gt;{&lt;/span&gt;a&lt;span class="pl-c1"&gt;}&lt;/span&gt;&lt;span class="pl-s"&gt;,b:&lt;/span&gt;&lt;span class="pl-c1"&gt;{&lt;/span&gt;b&lt;span class="pl-c1"&gt;}&lt;/span&gt;&lt;span class="pl-s"&gt;,c:&lt;/span&gt;&lt;span class="pl-c1"&gt;{&lt;/span&gt;c&lt;span class="pl-c1"&gt;}&lt;/span&gt;&lt;span class="pl-s"&gt;,d:&lt;/span&gt;&lt;span class="pl-c1"&gt;{&lt;/span&gt;d&lt;span class="pl-c1"&gt;}&lt;/span&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;)&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;em&gt;默认参数&lt;code&gt;c&lt;/code&gt;不能位于可变关键字参数&lt;code&gt;d&lt;/code&gt;后.&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;调用f:&lt;/p&gt;
&lt;div class="highlight highlight-source-python"&gt;&lt;pre&gt;In [&lt;span class="pl-c1"&gt;10&lt;/span&gt;]: f(&lt;span class="pl-c1"&gt;1&lt;/span&gt;,&lt;span class="pl-c1"&gt;2&lt;/span&gt;,&lt;span class="pl-c1"&gt;5&lt;/span&gt;,&lt;span class="pl-v"&gt;width&lt;/span&gt;&lt;span class="pl-k"&gt;=&lt;/span&gt;&lt;span class="pl-c1"&gt;10&lt;/span&gt;,&lt;span class="pl-v"&gt;height&lt;/span&gt;&lt;span class="pl-k"&gt;=&lt;/span&gt;&lt;span class="pl-c1"&gt;20&lt;/span&gt;)
a:&lt;span class="pl-c1"&gt;1&lt;/span&gt;,b:(&lt;span class="pl-c1"&gt;2&lt;/span&gt;, &lt;span class="pl-c1"&gt;5&lt;/span&gt;),c:&lt;span class="pl-c1"&gt;10&lt;/span&gt;,d:{&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;width&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;: &lt;span class="pl-c1"&gt;10&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;height&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;: &lt;span class="pl-c1"&gt;20&lt;/span&gt;}&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;可变位置参数&lt;code&gt;b&lt;/code&gt;实参后被解析为元组&lt;code&gt;(2,5)&lt;/code&gt;;而c取得默认值10; d被解析为字典.&lt;/p&gt;
&lt;p&gt;再次调用f:&lt;/p&gt;
&lt;div class="highlight highlight-source-python"&gt;&lt;pre&gt;In [&lt;span class="pl-c1"&gt;11&lt;/span&gt;]: f(&lt;span class="pl-v"&gt;a&lt;/span&gt;&lt;span class="pl-k"&gt;=&lt;/span&gt;&lt;span class="pl-c1"&gt;1&lt;/span&gt;,&lt;span class="pl-v"&gt;c&lt;/span&gt;&lt;span class="pl-k"&gt;=&lt;/span&gt;&lt;span class="pl-c1"&gt;12&lt;/span&gt;)
a:&lt;span class="pl-c1"&gt;1&lt;/span&gt;,b:(),c:&lt;span class="pl-c1"&gt;12&lt;/span&gt;,d:{}&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;a=1传入时a就是关键字参数，b,d都未传值，c被传入12，而非默认值。&lt;/p&gt;
&lt;p&gt;注意观察参数&lt;code&gt;a&lt;/code&gt;, 既可以&lt;code&gt;f(1)&lt;/code&gt;,也可以&lt;code&gt;f(a=1)&lt;/code&gt; 其可读性比第一种更好，建议使用f(a=1)。如果要强制使用&lt;code&gt;f(a=1)&lt;/code&gt;，需要在前面添加一个&lt;strong&gt;星号&lt;/strong&gt;:&lt;/p&gt;
&lt;div class="highlight highlight-source-python"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;def&lt;/span&gt; &lt;span class="pl-en"&gt;f&lt;/span&gt;(&lt;span class="pl-k"&gt;*&lt;/span&gt;,&lt;span class="pl-smi"&gt;a&lt;/span&gt;,&lt;span class="pl-k"&gt;*&lt;/span&gt;&lt;span class="pl-smi"&gt;b&lt;/span&gt;):
  &lt;span class="pl-c1"&gt;print&lt;/span&gt;(&lt;span class="pl-s"&gt;f&lt;/span&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;span class="pl-s"&gt;a:&lt;/span&gt;&lt;span class="pl-c1"&gt;{&lt;/span&gt;a&lt;span class="pl-c1"&gt;}&lt;/span&gt;&lt;span class="pl-s"&gt;,b:&lt;/span&gt;&lt;span class="pl-c1"&gt;{&lt;/span&gt;b&lt;span class="pl-c1"&gt;}&lt;/span&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;)&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;此时f(1)调用，将会报错：&lt;code&gt;TypeError: f() takes 0 positional arguments but 1 was given&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;只能&lt;code&gt;f(a=1)&lt;/code&gt;才能OK.&lt;/p&gt;
&lt;p&gt;说明前面的&lt;code&gt;*&lt;/code&gt;发挥作用，它变为只能传入关键字参数，那么如何查看这个参数的类型呢？借助python的&lt;code&gt;inspect&lt;/code&gt;模块：&lt;/p&gt;
&lt;div class="highlight highlight-source-python"&gt;&lt;pre&gt;In [&lt;span class="pl-c1"&gt;22&lt;/span&gt;]: &lt;span class="pl-k"&gt;for&lt;/span&gt; name,val &lt;span class="pl-k"&gt;in&lt;/span&gt; signature(f).parameters.items():
    &lt;span class="pl-c1"&gt;...&lt;/span&gt;:     &lt;span class="pl-c1"&gt;print&lt;/span&gt;(name,val.kind)
    &lt;span class="pl-c1"&gt;...&lt;/span&gt;:
a &lt;span class="pl-c1"&gt;KEYWORD_ONLY&lt;/span&gt;
b &lt;span class="pl-c1"&gt;VAR_KEYWORD&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;可看到参数&lt;code&gt;a&lt;/code&gt;的类型为&lt;code&gt;KEYWORD_ONLY&lt;/code&gt;，也就是仅仅为关键字参数。&lt;/p&gt;
&lt;p&gt;但是，如果f定义为：&lt;/p&gt;
&lt;div class="highlight highlight-source-python"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;def&lt;/span&gt; &lt;span class="pl-en"&gt;f&lt;/span&gt;(&lt;span class="pl-smi"&gt;a&lt;/span&gt;,&lt;span class="pl-k"&gt;*&lt;/span&gt;&lt;span class="pl-smi"&gt;b&lt;/span&gt;):
  &lt;span class="pl-c1"&gt;print&lt;/span&gt;(&lt;span class="pl-s"&gt;f&lt;/span&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;span class="pl-s"&gt;a:&lt;/span&gt;&lt;span class="pl-c1"&gt;{&lt;/span&gt;a&lt;span class="pl-c1"&gt;}&lt;/span&gt;&lt;span class="pl-s"&gt;,b:&lt;/span&gt;&lt;span class="pl-c1"&gt;{&lt;/span&gt;b&lt;span class="pl-c1"&gt;}&lt;/span&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;)&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;查看参数类型：&lt;/p&gt;
&lt;div class="highlight highlight-source-python"&gt;&lt;pre&gt;In [&lt;span class="pl-c1"&gt;24&lt;/span&gt;]: &lt;span class="pl-k"&gt;for&lt;/span&gt; name,val &lt;span class="pl-k"&gt;in&lt;/span&gt; signature(f).parameters.items():
    &lt;span class="pl-c1"&gt;...&lt;/span&gt;:     &lt;span class="pl-c1"&gt;print&lt;/span&gt;(name,val.kind)
    &lt;span class="pl-c1"&gt;...&lt;/span&gt;:
a &lt;span class="pl-c1"&gt;POSITIONAL_OR_KEYWORD&lt;/span&gt;
b &lt;span class="pl-c1"&gt;VAR_POSITIONAL&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;可以看到参数&lt;code&gt;a&lt;/code&gt;既可以是位置参数也可是关键字参数。&lt;/p&gt;
&lt;h4&gt;&lt;a id="user-content-86--使用slice对象" class="anchor" aria-hidden="true" href="#86--使用slice对象"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;86  使用slice对象&lt;/h4&gt;
&lt;p&gt;生成关于蛋糕的序列cake1：&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;In [1]: cake1 = list(range(5,0,-1))

In [2]: b = cake1[1:10:2]

In [3]: b
Out[3]: [4, 2]

In [4]: cake1
Out[4]: [5, 4, 3, 2, 1]
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;再生成一个序列：&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;In [5]: from random import randint
   ...: cake2 = [randint(1,100) for _ in range(100)]
   ...: # 同样以间隔为2切前10个元素，得到切片d
   ...: d = cake2[1:10:2]
In [6]: d
Out[6]: [75, 33, 63, 93, 15]
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;你看，我们使用同一种切法，分别切开两个蛋糕cake1,cake2. 后来发现这种切法&lt;code&gt;极为经典&lt;/code&gt;，又拿它去切更多的容器对象。&lt;/p&gt;
&lt;p&gt;那么，为什么不把这种切法封装为一个对象呢？于是就有了slice对象。&lt;/p&gt;
&lt;p&gt;定义slice对象极为简单，如把上面的切法定义成slice对象：&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;perfect_cake_slice_way = slice(1,10,2)
#去切cake1
cake1_slice = cake1[perfect_cake_slice_way] 
cake2_slice = cake2[perfect_cake_slice_way]

In [11]: cake1_slice
Out[11]: [4, 2]

In [12]: cake2_slice
Out[12]: [75, 33, 63, 93, 15]
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;与上面的结果一致。&lt;/p&gt;
&lt;p&gt;对于逆向序列切片，&lt;code&gt;slice&lt;/code&gt;对象一样可行：&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;a = [1,3,5,7,9,0,3,5,7]
a_ = a[5:1:-1]

named_slice = slice(5,1,-1)
a_slice = a[named_slice] 

In [14]: a_
Out[14]: [0, 9, 7, 5]

In [15]: a_slice
Out[15]: [0, 9, 7, 5]
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;频繁使用同一切片的操作可使用slice对象抽出来，复用的同时还能提高代码可读性。&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-二python字符串和正则" class="anchor" aria-hidden="true" href="#二python字符串和正则"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;二、Python字符串和正则&lt;/h3&gt;
&lt;p&gt;字符串无所不在，字符串的处理也是最常见的操作。本章节将总结和字符串处理相关的一切操作。主要包括基本的字符串操作；高级字符串操作之正则。目前共有&lt;code&gt;20&lt;/code&gt;个小例子&lt;/p&gt;
&lt;h4&gt;&lt;a id="user-content-1-反转字符串" class="anchor" aria-hidden="true" href="#1-反转字符串"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;1 反转字符串&lt;/h4&gt;
&lt;div class="highlight highlight-source-python"&gt;&lt;pre&gt;st&lt;span class="pl-k"&gt;=&lt;/span&gt;&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;python&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt;方法1&lt;/span&gt;
&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;.join(&lt;span class="pl-c1"&gt;reversed&lt;/span&gt;(st))
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt;方法2&lt;/span&gt;
st[::&lt;span class="pl-k"&gt;-&lt;/span&gt;&lt;span class="pl-c1"&gt;1&lt;/span&gt;]&lt;/pre&gt;&lt;/div&gt;
&lt;h4&gt;&lt;a id="user-content-2-字符串切片操作" class="anchor" aria-hidden="true" href="#2-字符串切片操作"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;2 字符串切片操作&lt;/h4&gt;
&lt;div class="highlight highlight-source-python"&gt;&lt;pre&gt;字符串切片操作——查找替换&lt;span class="pl-c1"&gt;3&lt;/span&gt;或&lt;span class="pl-c1"&gt;5&lt;/span&gt;的倍数
In [&lt;span class="pl-c1"&gt;1&lt;/span&gt;]:[&lt;span class="pl-c1"&gt;str&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;java&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;[i&lt;span class="pl-k"&gt;%&lt;/span&gt;&lt;span class="pl-c1"&gt;3&lt;/span&gt;&lt;span class="pl-k"&gt;*&lt;/span&gt;&lt;span class="pl-c1"&gt;4&lt;/span&gt;:]&lt;span class="pl-k"&gt;+&lt;/span&gt;&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;python&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;[i&lt;span class="pl-k"&gt;%&lt;/span&gt;&lt;span class="pl-c1"&gt;5&lt;/span&gt;&lt;span class="pl-k"&gt;*&lt;/span&gt;&lt;span class="pl-c1"&gt;6&lt;/span&gt;:] &lt;span class="pl-k"&gt;or&lt;/span&gt; i) &lt;span class="pl-k"&gt;for&lt;/span&gt; i &lt;span class="pl-k"&gt;in&lt;/span&gt; &lt;span class="pl-c1"&gt;range&lt;/span&gt;(&lt;span class="pl-c1"&gt;1&lt;/span&gt;,&lt;span class="pl-c1"&gt;15&lt;/span&gt;)]
&lt;span class="pl-c1"&gt;OUT&lt;/span&gt;[&lt;span class="pl-c1"&gt;1&lt;/span&gt;]:[&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;1&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;,
 &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;2&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;,
 &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;java&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;,
 &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;4&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;,
 &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;python&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;,
 &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;java&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;,
 &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;7&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;,
 &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;8&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;,
 &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;java&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;,
 &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;python&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;,
 &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;11&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;,
 &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;java&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;,
 &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;13&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;,
 &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;14&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;]&lt;/pre&gt;&lt;/div&gt;
&lt;h4&gt;&lt;a id="user-content-3-join串联字符串" class="anchor" aria-hidden="true" href="#3-join串联字符串"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;3 join串联字符串&lt;/h4&gt;
&lt;div class="highlight highlight-source-python"&gt;&lt;pre&gt;In [&lt;span class="pl-c1"&gt;4&lt;/span&gt;]: mystr &lt;span class="pl-k"&gt;=&lt;/span&gt; [&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;1&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;,
   &lt;span class="pl-c1"&gt;...&lt;/span&gt;:  &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;2&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;,
   &lt;span class="pl-c1"&gt;...&lt;/span&gt;:  &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;java&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;,
   &lt;span class="pl-c1"&gt;...&lt;/span&gt;:  &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;4&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;,
   &lt;span class="pl-c1"&gt;...&lt;/span&gt;:  &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;python&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;,
   &lt;span class="pl-c1"&gt;...&lt;/span&gt;:  &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;java&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;,
   &lt;span class="pl-c1"&gt;...&lt;/span&gt;:  &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;7&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;,
   &lt;span class="pl-c1"&gt;...&lt;/span&gt;:  &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;8&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;,
   &lt;span class="pl-c1"&gt;...&lt;/span&gt;:  &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;java&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;,
   &lt;span class="pl-c1"&gt;...&lt;/span&gt;:  &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;python&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;,
   &lt;span class="pl-c1"&gt;...&lt;/span&gt;:  &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;11&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;,
   &lt;span class="pl-c1"&gt;...&lt;/span&gt;:  &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;java&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;,
   &lt;span class="pl-c1"&gt;...&lt;/span&gt;:  &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;13&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;,
   &lt;span class="pl-c1"&gt;...&lt;/span&gt;:  &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;14&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;]

In [&lt;span class="pl-c1"&gt;5&lt;/span&gt;]: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;,&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;.join(mystr) &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt;用逗号连接字符串&lt;/span&gt;
Out[&lt;span class="pl-c1"&gt;5&lt;/span&gt;]: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;1,2,java,4,python,java,7,8,java,python,11,java,13,14&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h4&gt;&lt;a id="user-content-4-字符串的字节长度" class="anchor" aria-hidden="true" href="#4-字符串的字节长度"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;4 字符串的字节长度&lt;/h4&gt;
&lt;div class="highlight highlight-source-python"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;def&lt;/span&gt; &lt;span class="pl-en"&gt;str_byte_len&lt;/span&gt;(&lt;span class="pl-smi"&gt;mystr&lt;/span&gt;):
    &lt;span class="pl-k"&gt;return&lt;/span&gt; (&lt;span class="pl-c1"&gt;len&lt;/span&gt;(mystr.encode(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;utf-8&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;)))


str_byte_len(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;i love python&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;)  &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; 13(个字节)&lt;/span&gt;
str_byte_len(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;字符&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;)  &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; 6(个字节)&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;以下是正则部分&lt;/p&gt;
&lt;div class="highlight highlight-source-python"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;import&lt;/span&gt; re&lt;/pre&gt;&lt;/div&gt;
&lt;h4&gt;&lt;a id="user-content-5-查找第一个匹配串" class="anchor" aria-hidden="true" href="#5-查找第一个匹配串"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;5 查找第一个匹配串&lt;/h4&gt;
&lt;div class="highlight highlight-source-python"&gt;&lt;pre&gt;s &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;i love python very much&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;
pat &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;python&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt; 
r &lt;span class="pl-k"&gt;=&lt;/span&gt; re.search(pat,s)
&lt;span class="pl-c1"&gt;print&lt;/span&gt;(r.span()) &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt;(7,13)&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h4&gt;&lt;a id="user-content-6-查找所有1的索引" class="anchor" aria-hidden="true" href="#6-查找所有1的索引"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;6 查找所有1的索引&lt;/h4&gt;
&lt;div class="highlight highlight-source-python"&gt;&lt;pre&gt;s &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;山东省潍坊市青州第1中学高三1班&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;
pat &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;1&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;
r &lt;span class="pl-k"&gt;=&lt;/span&gt; re.finditer(pat,s)
&lt;span class="pl-k"&gt;for&lt;/span&gt; i &lt;span class="pl-k"&gt;in&lt;/span&gt; r:
    &lt;span class="pl-c1"&gt;print&lt;/span&gt;(i)

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; &amp;lt;re.Match object; span=(9, 10), match='1'&amp;gt;&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; &amp;lt;re.Match object; span=(14, 15), match='1'&amp;gt;&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h4&gt;&lt;a id="user-content-7-d-匹配数字0-9" class="anchor" aria-hidden="true" href="#7-d-匹配数字0-9"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;7 \d 匹配数字[0-9]&lt;/h4&gt;
&lt;p&gt;findall找出全部位置的所有匹配&lt;/p&gt;
&lt;div class="highlight highlight-source-python"&gt;&lt;pre&gt;s &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;一共20行代码运行时间13.59s&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;
pat &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-sr"&gt;&lt;span class="pl-k"&gt;r&lt;/span&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;span class="pl-c1"&gt;\d&lt;/span&gt;&lt;span class="pl-k"&gt;+&lt;/span&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt; &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; +表示匹配数字(\d表示数字的通用字符)1次或多次&lt;/span&gt;
r &lt;span class="pl-k"&gt;=&lt;/span&gt; re.findall(pat,s)
&lt;span class="pl-c1"&gt;print&lt;/span&gt;(r)
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; ['20', '13', '59']&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h4&gt;&lt;a id="user-content-8-匹配浮点数和整数" class="anchor" aria-hidden="true" href="#8-匹配浮点数和整数"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;8 匹配浮点数和整数&lt;/h4&gt;
&lt;p&gt;?表示前一个字符匹配0或1次&lt;/p&gt;
&lt;div class="highlight highlight-source-python"&gt;&lt;pre&gt;s &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;一共20行代码运行时间13.59s&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;
pat &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-sr"&gt;&lt;span class="pl-k"&gt;r&lt;/span&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;span class="pl-c1"&gt;\d&lt;/span&gt;&lt;span class="pl-k"&gt;+&lt;/span&gt;&lt;span class="pl-cce"&gt;\.&lt;/span&gt;&lt;span class="pl-k"&gt;?&lt;/span&gt;&lt;span class="pl-c1"&gt;\d&lt;/span&gt;&lt;span class="pl-k"&gt;+&lt;/span&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt; &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; ?表示匹配小数点(\.)0次或1次，这种写法有个小bug，不能匹配到个位数的整数&lt;/span&gt;
r &lt;span class="pl-k"&gt;=&lt;/span&gt; re.findall(pat,s)
&lt;span class="pl-c1"&gt;print&lt;/span&gt;(r)
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; ['20', '13.59']&lt;/span&gt;

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; 更好的写法：&lt;/span&gt;
pat &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-sr"&gt;&lt;span class="pl-k"&gt;r&lt;/span&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;span class="pl-c1"&gt;\d&lt;/span&gt;&lt;span class="pl-k"&gt;+&lt;/span&gt;&lt;span class="pl-cce"&gt;\.&lt;/span&gt;&lt;span class="pl-c1"&gt;\d&lt;/span&gt;&lt;span class="pl-k"&gt;+&lt;/span&gt;&lt;span class="pl-k"&gt;|&lt;/span&gt;&lt;span class="pl-c1"&gt;\d&lt;/span&gt;&lt;span class="pl-k"&gt;+&lt;/span&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt; &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; A|B，匹配A失败才匹配B&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h4&gt;&lt;a id="user-content-9-匹配字符串的开头" class="anchor" aria-hidden="true" href="#9-匹配字符串的开头"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;9 ^匹配字符串的开头&lt;/h4&gt;
&lt;div class="highlight highlight-source-python"&gt;&lt;pre&gt;s &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;This module provides regular expression matching operations similar to those found in Perl&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;
pat &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-sr"&gt;&lt;span class="pl-k"&gt;r&lt;/span&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;span class="pl-c1"&gt;^&lt;/span&gt;[&lt;span class="pl-c1"&gt;emrt&lt;/span&gt;]&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt; &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; 查找以字符e,m,r或t开始的字符串&lt;/span&gt;
r &lt;span class="pl-k"&gt;=&lt;/span&gt; re.findall(pat,s)
&lt;span class="pl-c1"&gt;print&lt;/span&gt;(r)
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; [],因为字符串的开头是字符`T`，不在emrt匹配范围内，所以返回为空&lt;/span&gt;
&lt;span class="pl-c1"&gt;IN&lt;/span&gt; [&lt;span class="pl-c1"&gt;11&lt;/span&gt;]: s2 &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;email for me is guozhennianhua@163.com&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;
re.findall(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;^[emrt].*&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;,s2)&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; 匹配以e,m,r,t开始的字符串，后面是多个任意字符&lt;/span&gt;
Out[&lt;span class="pl-c1"&gt;11&lt;/span&gt;]: [&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;email for me is guozhennianhua@163.com&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;]
&lt;/pre&gt;&lt;/div&gt;
&lt;h4&gt;&lt;a id="user-content-10-rei-忽略大小写" class="anchor" aria-hidden="true" href="#10-rei-忽略大小写"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;10 re.I 忽略大小写&lt;/h4&gt;
&lt;div class="highlight highlight-source-python"&gt;&lt;pre&gt;s &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;That&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;
pat &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-sr"&gt;&lt;span class="pl-k"&gt;r&lt;/span&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;t&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt; 
r &lt;span class="pl-k"&gt;=&lt;/span&gt; re.findall(pat,s,re.I)
In [&lt;span class="pl-c1"&gt;22&lt;/span&gt;]: r
Out[&lt;span class="pl-c1"&gt;22&lt;/span&gt;]: [&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;T&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;t&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;]&lt;/pre&gt;&lt;/div&gt;
&lt;h4&gt;&lt;a id="user-content-11-理解compile的作用" class="anchor" aria-hidden="true" href="#11-理解compile的作用"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;11 理解compile的作用&lt;/h4&gt;
&lt;p&gt;如果要做很多次匹配，可以先编译匹配串：&lt;/p&gt;
&lt;div class="highlight highlight-source-python"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;import&lt;/span&gt; re
pat &lt;span class="pl-k"&gt;=&lt;/span&gt; re.compile(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;\W+&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;) &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; \W 匹配不是数字和字母的字符&lt;/span&gt;
has_special_chars &lt;span class="pl-k"&gt;=&lt;/span&gt; pat.search(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;ed#2@edc&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;) 
&lt;span class="pl-k"&gt;if&lt;/span&gt; has_special_chars:
    &lt;span class="pl-c1"&gt;print&lt;/span&gt;(&lt;span class="pl-s"&gt;f&lt;/span&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;span class="pl-s"&gt;str contains special characters:&lt;/span&gt;&lt;span class="pl-c1"&gt;{&lt;/span&gt;has_special_chars.group(&lt;span class="pl-c1"&gt;0&lt;/span&gt;)&lt;span class="pl-c1"&gt;}&lt;/span&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;)

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt;##输出结果: &lt;/span&gt;
 &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; str contains special characters:#   &lt;/span&gt;

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt;## 再次使用pat正则编译对象 做匹配&lt;/span&gt;
again_pattern &lt;span class="pl-k"&gt;=&lt;/span&gt; pat.findall(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;guozhennianhua@163.com&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;)
&lt;span class="pl-k"&gt;if&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;@&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt; &lt;span class="pl-k"&gt;in&lt;/span&gt; again_pattern:
    &lt;span class="pl-c1"&gt;print&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;possibly it is an email&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;)
&lt;/pre&gt;&lt;/div&gt;
&lt;h4&gt;&lt;a id="user-content-12-使用捕获单词不想带空格" class="anchor" aria-hidden="true" href="#12-使用捕获单词不想带空格"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;12 使用()捕获单词，不想带空格&lt;/h4&gt;
&lt;p&gt;使用&lt;code&gt;()&lt;/code&gt;捕获&lt;/p&gt;
&lt;div class="highlight highlight-source-python"&gt;&lt;pre&gt;s &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;This module provides regular expression matching operations similar to those found in Perl&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;
pat &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-sr"&gt;&lt;span class="pl-k"&gt;r&lt;/span&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;span class="pl-c1"&gt;\s&lt;/span&gt;&lt;span class="pl-c1"&gt;(&lt;/span&gt;[&lt;span class="pl-c1"&gt;a-zA-Z&lt;/span&gt;]&lt;span class="pl-k"&gt;+&lt;/span&gt;&lt;span class="pl-c1"&gt;)&lt;/span&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;  
r &lt;span class="pl-k"&gt;=&lt;/span&gt; re.findall(pat,s)
&lt;span class="pl-c1"&gt;print&lt;/span&gt;(r) &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt;['module', 'provides', 'regular', 'expression', 'matching', 'operations', 'similar', 'to', 'those', 'found', 'in', 'Perl']&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;看到提取单词中未包括第一个单词，使用&lt;code&gt;?&lt;/code&gt;表示前面字符出现0次或1次，但是此字符还有表示贪心或非贪心匹配含义，使用时要谨慎。&lt;/p&gt;
&lt;div class="highlight highlight-source-python"&gt;&lt;pre&gt;s &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;This module provides regular expression matching operations similar to those found in Perl&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;
pat &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-sr"&gt;&lt;span class="pl-k"&gt;r&lt;/span&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;span class="pl-c1"&gt;\s&lt;/span&gt;&lt;span class="pl-k"&gt;?&lt;/span&gt;&lt;span class="pl-c1"&gt;(&lt;/span&gt;[&lt;span class="pl-c1"&gt;a-zA-Z&lt;/span&gt;]&lt;span class="pl-k"&gt;+&lt;/span&gt;&lt;span class="pl-c1"&gt;)&lt;/span&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;  
r &lt;span class="pl-k"&gt;=&lt;/span&gt; re.findall(pat,s)
&lt;span class="pl-c1"&gt;print&lt;/span&gt;(r) &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt;['This', 'module', 'provides', 'regular', 'expression', 'matching', 'operations', 'similar', 'to', 'those', 'found', 'in', 'Perl']&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h4&gt;&lt;a id="user-content-13-split分割单词" class="anchor" aria-hidden="true" href="#13-split分割单词"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;13 split分割单词&lt;/h4&gt;
&lt;p&gt;使用以上方法分割单词不是简洁的，仅仅是为了演示。分割单词最简单还是使用&lt;code&gt;split&lt;/code&gt;函数。&lt;/p&gt;
&lt;div class="highlight highlight-source-python"&gt;&lt;pre&gt;s &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;This module provides regular expression matching operations similar to those found in Perl&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;
pat &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-sr"&gt;&lt;span class="pl-k"&gt;r&lt;/span&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;span class="pl-c1"&gt;\s&lt;/span&gt;&lt;span class="pl-k"&gt;+&lt;/span&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;  
r &lt;span class="pl-k"&gt;=&lt;/span&gt; re.split(pat,s)
&lt;span class="pl-c1"&gt;print&lt;/span&gt;(r) &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; ['This', 'module', 'provides', 'regular', 'expression', 'matching', 'operations', 'similar', 'to', 'those', 'found', 'in', 'Perl']&lt;/span&gt;

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt;## 上面这句话也可直接使用str自带的split函数：&lt;/span&gt;
s.split(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt; &lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;) &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt;使用空格分隔&lt;/span&gt;

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt;## 但是，对于风格符更加复杂的情况，split无能为力，只能使用正则&lt;/span&gt;

s &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;This,,,   module ; &lt;span class="pl-cce"&gt;\t&lt;/span&gt;   provides|| regular ; &lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;
words &lt;span class="pl-k"&gt;=&lt;/span&gt; re.split(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;[,\s;|]+&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;,s)  &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt;这样分隔出来，最后会有一个空字符串&lt;/span&gt;
words &lt;span class="pl-k"&gt;=&lt;/span&gt; [i &lt;span class="pl-k"&gt;for&lt;/span&gt; i &lt;span class="pl-k"&gt;in&lt;/span&gt; words &lt;span class="pl-k"&gt;if&lt;/span&gt; &lt;span class="pl-c1"&gt;len&lt;/span&gt;(i)&lt;span class="pl-k"&gt;&amp;gt;&lt;/span&gt;&lt;span class="pl-c1"&gt;0&lt;/span&gt;]&lt;/pre&gt;&lt;/div&gt;
&lt;h4&gt;&lt;a id="user-content-14-match从字符串开始位置匹配" class="anchor" aria-hidden="true" href="#14-match从字符串开始位置匹配"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;14 match从字符串开始位置匹配&lt;/h4&gt;
&lt;p&gt;注意&lt;code&gt;match&lt;/code&gt;,&lt;code&gt;search&lt;/code&gt;等的不同：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;match函数&lt;/li&gt;
&lt;/ol&gt;
&lt;div class="highlight highlight-source-python"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;import&lt;/span&gt; re
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt;## match&lt;/span&gt;
mystr &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;This&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;
pat &lt;span class="pl-k"&gt;=&lt;/span&gt; re.compile(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;hi&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;)
pat.match(mystr) &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; None&lt;/span&gt;
pat.match(mystr,&lt;span class="pl-c1"&gt;1&lt;/span&gt;) &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; 从位置1处开始匹配&lt;/span&gt;
Out[&lt;span class="pl-c1"&gt;90&lt;/span&gt;]: &lt;span class="pl-k"&gt;&amp;lt;&lt;/span&gt;re.Match &lt;span class="pl-c1"&gt;object&lt;/span&gt;; span&lt;span class="pl-k"&gt;=&lt;/span&gt;(&lt;span class="pl-c1"&gt;1&lt;/span&gt;, &lt;span class="pl-c1"&gt;3&lt;/span&gt;), match&lt;span class="pl-k"&gt;=&lt;/span&gt;&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;hi&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;&lt;span class="pl-k"&gt;&amp;gt;&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;ol start="2"&gt;
&lt;li&gt;search函数
search是从字符串的任意位置开始匹配&lt;/li&gt;
&lt;/ol&gt;
&lt;div class="highlight highlight-source-python"&gt;&lt;pre&gt;In [&lt;span class="pl-c1"&gt;91&lt;/span&gt;]: mystr &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;This&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;
    &lt;span class="pl-c1"&gt;...&lt;/span&gt;: pat &lt;span class="pl-k"&gt;=&lt;/span&gt; re.compile(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;hi&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;)
    &lt;span class="pl-c1"&gt;...&lt;/span&gt;: pat.search(mystr)
Out[&lt;span class="pl-c1"&gt;91&lt;/span&gt;]: &lt;span class="pl-k"&gt;&amp;lt;&lt;/span&gt;re.Match &lt;span class="pl-c1"&gt;object&lt;/span&gt;; span&lt;span class="pl-k"&gt;=&lt;/span&gt;(&lt;span class="pl-c1"&gt;1&lt;/span&gt;, &lt;span class="pl-c1"&gt;3&lt;/span&gt;), match&lt;span class="pl-k"&gt;=&lt;/span&gt;&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;hi&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;&lt;span class="pl-k"&gt;&amp;gt;&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h4&gt;&lt;a id="user-content-15-替换匹配的子串" class="anchor" aria-hidden="true" href="#15-替换匹配的子串"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;15 替换匹配的子串&lt;/h4&gt;
&lt;p&gt;&lt;code&gt;sub&lt;/code&gt;函数实现对匹配子串的替换&lt;/p&gt;
&lt;div class="highlight highlight-source-python"&gt;&lt;pre&gt;content&lt;span class="pl-k"&gt;=&lt;/span&gt;&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;hello 12345, hello 456321&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;    
pat&lt;span class="pl-k"&gt;=&lt;/span&gt;re.compile(&lt;span class="pl-sr"&gt;&lt;span class="pl-k"&gt;r&lt;/span&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;span class="pl-c1"&gt;\d&lt;/span&gt;&lt;span class="pl-k"&gt;+&lt;/span&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;) &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt;要替换的部分&lt;/span&gt;
m&lt;span class="pl-k"&gt;=&lt;/span&gt;pat.sub(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;666&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;,content)
&lt;span class="pl-c1"&gt;print&lt;/span&gt;(m) &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; hello 666, hello 666&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h4&gt;&lt;a id="user-content-16-贪心捕获" class="anchor" aria-hidden="true" href="#16-贪心捕获"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;16 贪心捕获&lt;/h4&gt;
&lt;p&gt;(.*)表示捕获任意多个字符，尽可能多的匹配字符&lt;/p&gt;
&lt;div class="highlight highlight-source-python"&gt;&lt;pre&gt;content&lt;span class="pl-k"&gt;=&lt;/span&gt;&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;&amp;lt;h&amp;gt;ddedadsad&amp;lt;/h&amp;gt;&amp;lt;div&amp;gt;graph&amp;lt;/div&amp;gt;bb&amp;lt;div&amp;gt;math&amp;lt;/div&amp;gt;cc&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;
pat&lt;span class="pl-k"&gt;=&lt;/span&gt;re.compile(&lt;span class="pl-sr"&gt;&lt;span class="pl-k"&gt;r&lt;/span&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;&amp;lt;div&amp;gt;&lt;span class="pl-c1"&gt;(&lt;/span&gt;&lt;span class="pl-c1"&gt;.&lt;/span&gt;&lt;span class="pl-k"&gt;*&lt;/span&gt;&lt;span class="pl-c1"&gt;)&lt;/span&gt;&amp;lt;/div&amp;gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)  &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt;贪婪模式&lt;/span&gt;
m&lt;span class="pl-k"&gt;=&lt;/span&gt;pat.findall(content)
&lt;span class="pl-c1"&gt;print&lt;/span&gt;(m) &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt;匹配结果为： ['graph&amp;lt;/div&amp;gt;bb&amp;lt;div&amp;gt;math']&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h4&gt;&lt;a id="user-content-17-非贪心捕获" class="anchor" aria-hidden="true" href="#17-非贪心捕获"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;17 非贪心捕获&lt;/h4&gt;
&lt;p&gt;仅添加一个问号(&lt;code&gt;?&lt;/code&gt;)，得到结果完全不同，这是非贪心匹配，通过这个例子体会贪心和非贪心的匹配的不同。&lt;/p&gt;
&lt;div class="highlight highlight-source-python"&gt;&lt;pre&gt;content&lt;span class="pl-k"&gt;=&lt;/span&gt;&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;&amp;lt;h&amp;gt;ddedadsad&amp;lt;/h&amp;gt;&amp;lt;div&amp;gt;graph&amp;lt;/div&amp;gt;bb&amp;lt;div&amp;gt;math&amp;lt;/div&amp;gt;cc&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;
pat&lt;span class="pl-k"&gt;=&lt;/span&gt;re.compile(&lt;span class="pl-sr"&gt;&lt;span class="pl-k"&gt;r&lt;/span&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;&amp;lt;div&amp;gt;&lt;span class="pl-c1"&gt;(&lt;/span&gt;&lt;span class="pl-c1"&gt;.&lt;/span&gt;&lt;span class="pl-k"&gt;*?&lt;/span&gt;&lt;span class="pl-c1"&gt;)&lt;/span&gt;&amp;lt;/div&amp;gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
m&lt;span class="pl-k"&gt;=&lt;/span&gt;pat.findall(content)
&lt;span class="pl-c1"&gt;print&lt;/span&gt;(m) &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; ['graph', 'math']&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;非贪心捕获，见好就收。&lt;/p&gt;
&lt;h4&gt;&lt;a id="user-content-18-常用元字符总结" class="anchor" aria-hidden="true" href="#18-常用元字符总结"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;18 常用元字符总结&lt;/h4&gt;
&lt;pre&gt;&lt;code&gt;. 匹配任意字符  
^ 匹配字符串开始位置 
$ 匹配字符串中结束的位置 
* 前面的原子重复0次、1次、多次 
? 前面的原子重复0次或者1次 
+ 前面的原子重复1次或多次
{n} 前面的原子出现了 n 次
{n,} 前面的原子至少出现 n 次
{n,m} 前面的原子出现次数介于 n-m 之间
( ) 分组,需要输出的部分
&lt;/code&gt;&lt;/pre&gt;
&lt;h4&gt;&lt;a id="user-content-19-常用通用字符总结" class="anchor" aria-hidden="true" href="#19-常用通用字符总结"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;19 常用通用字符总结&lt;/h4&gt;
&lt;pre&gt;&lt;code&gt;\s  匹配空白字符 
\w  匹配任意字母/数字/下划线 
\W  和小写 w 相反，匹配任意字母/数字/下划线以外的字符
\d  匹配十进制数字
\D  匹配除了十进制数以外的值 
[0-9]  匹配一个0-9之间的数字
[a-z]  匹配小写英文字母
[A-Z]  匹配大写英文字母
&lt;/code&gt;&lt;/pre&gt;
&lt;h4&gt;&lt;a id="user-content-20-密码安全检查" class="anchor" aria-hidden="true" href="#20-密码安全检查"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;20 密码安全检查&lt;/h4&gt;
&lt;p&gt;密码安全要求：1)要求密码为6到20位; 2)密码只包含英文字母和数字&lt;/p&gt;
&lt;div class="highlight highlight-source-python"&gt;&lt;pre&gt;pat &lt;span class="pl-k"&gt;=&lt;/span&gt; re.compile(&lt;span class="pl-sr"&gt;&lt;span class="pl-k"&gt;r&lt;/span&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;span class="pl-c1"&gt;\w&lt;/span&gt;&lt;span class="pl-k"&gt;{6,20}&lt;/span&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;) &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; 这是错误的，因为\w通配符匹配的是字母，数字和下划线，题目要求不能含有下划线&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; 使用最稳的方法：\da-zA-Z满足`密码只包含英文字母和数字`&lt;/span&gt;
pat &lt;span class="pl-k"&gt;=&lt;/span&gt; re.compile(&lt;span class="pl-sr"&gt;&lt;span class="pl-k"&gt;r&lt;/span&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;[&lt;span class="pl-c1"&gt;\d&lt;/span&gt;&lt;span class="pl-c1"&gt;a-zA-Z&lt;/span&gt;]&lt;span class="pl-k"&gt;{6,20}&lt;/span&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;)&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;选用最保险的&lt;code&gt;fullmatch&lt;/code&gt;方法，查看是否整个字符串都匹配：&lt;/p&gt;
&lt;div class="highlight highlight-source-python"&gt;&lt;pre&gt;pat.fullmatch(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;qaz12&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;) &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; 返回 None, 长度小于6&lt;/span&gt;
pat.fullmatch(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;qaz12wsxedcrfvtgb67890942234343434&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;) &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; None 长度大于22&lt;/span&gt;
pat.fullmatch(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;qaz_231&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;) &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; None 含有下划线&lt;/span&gt;
pat.fullmatch(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;n0passw0Rd&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;)
Out[&lt;span class="pl-c1"&gt;4&lt;/span&gt;]: &lt;span class="pl-k"&gt;&amp;lt;&lt;/span&gt;re.Match &lt;span class="pl-c1"&gt;object&lt;/span&gt;; span&lt;span class="pl-k"&gt;=&lt;/span&gt;(&lt;span class="pl-c1"&gt;0&lt;/span&gt;, &lt;span class="pl-c1"&gt;10&lt;/span&gt;), match&lt;span class="pl-k"&gt;=&lt;/span&gt;&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;n0passw0Rd&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;&lt;span class="pl-k"&gt;&amp;gt;&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h4&gt;&lt;a id="user-content-21-爬取百度首页标题" class="anchor" aria-hidden="true" href="#21-爬取百度首页标题"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;21 爬取百度首页标题&lt;/h4&gt;
&lt;div class="highlight highlight-source-python"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;import&lt;/span&gt; re
&lt;span class="pl-k"&gt;from&lt;/span&gt; urllib &lt;span class="pl-k"&gt;import&lt;/span&gt; request

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt;爬虫爬取百度首页内容&lt;/span&gt;
data&lt;span class="pl-k"&gt;=&lt;/span&gt;request.urlopen(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;http://www.baidu.com/&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;).read().decode()

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt;分析网页,确定正则表达式&lt;/span&gt;
pat&lt;span class="pl-k"&gt;=&lt;/span&gt;&lt;span class="pl-sr"&gt;&lt;span class="pl-k"&gt;r&lt;/span&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;&amp;lt;title&amp;gt;&lt;span class="pl-c1"&gt;(&lt;/span&gt;&lt;span class="pl-c1"&gt;.&lt;/span&gt;&lt;span class="pl-k"&gt;*?&lt;/span&gt;&lt;span class="pl-c1"&gt;)&lt;/span&gt;&amp;lt;/title&amp;gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;

result&lt;span class="pl-k"&gt;=&lt;/span&gt;re.search(pat,data)
&lt;span class="pl-c1"&gt;print&lt;/span&gt;(result) &lt;span class="pl-k"&gt;&amp;lt;&lt;/span&gt;re.Match &lt;span class="pl-c1"&gt;object&lt;/span&gt;; span&lt;span class="pl-k"&gt;=&lt;/span&gt;(&lt;span class="pl-c1"&gt;1358&lt;/span&gt;, &lt;span class="pl-c1"&gt;1382&lt;/span&gt;), match&lt;span class="pl-k"&gt;=&lt;/span&gt;&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;&amp;lt;title&amp;gt;百度一下，你就知道&amp;lt;/title&amp;gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;&lt;span class="pl-k"&gt;&amp;gt;&lt;/span&gt;

result.group() &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; 百度一下，你就知道&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h4&gt;&lt;a id="user-content-22-批量转化为驼峰格式camel" class="anchor" aria-hidden="true" href="#22-批量转化为驼峰格式camel"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;22 批量转化为驼峰格式(Camel)&lt;/h4&gt;
&lt;p&gt;数据库字段名批量转化为驼峰格式&lt;/p&gt;
&lt;p&gt;分析过程&lt;/p&gt;
&lt;div class="highlight highlight-source-python"&gt;&lt;pre&gt;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; 用到的正则串讲解&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; \s 指匹配： [ \t\n\r\f\v]&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; A|B：表示匹配A串或B串&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; re.sub(pattern, newchar, string): &lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; substitue代替，用newchar字符替代与pattern匹配的字符所有.&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;div class="highlight highlight-source-python"&gt;&lt;pre&gt;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; title(): 转化为大写，例子：&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; 'Hello world'.title() # 'Hello World'&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;div class="highlight highlight-source-python"&gt;&lt;pre&gt;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; print(re.sub(r"\s|_|", "", "He llo_worl\td"))&lt;/span&gt;
s &lt;span class="pl-k"&gt;=&lt;/span&gt; re.sub(&lt;span class="pl-sr"&gt;&lt;span class="pl-k"&gt;r&lt;/span&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;span class="pl-c1"&gt;(&lt;/span&gt;&lt;span class="pl-c1"&gt;\s&lt;/span&gt;&lt;span class="pl-k"&gt;|&lt;/span&gt;_&lt;span class="pl-k"&gt;|&lt;/span&gt;-&lt;span class="pl-c1"&gt;)&lt;/span&gt;&lt;span class="pl-k"&gt;+&lt;/span&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt; &lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;,
           &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;some_database_field_name&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;).title().replace(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt; &lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)  
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt;结果： SomeDatabaseFieldName&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;div class="highlight highlight-source-python"&gt;&lt;pre&gt;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; 可以看到此时的第一个字符为大写，需要转化为小写&lt;/span&gt;
s &lt;span class="pl-k"&gt;=&lt;/span&gt; s[&lt;span class="pl-c1"&gt;0&lt;/span&gt;].lower()&lt;span class="pl-k"&gt;+&lt;/span&gt;s[&lt;span class="pl-c1"&gt;1&lt;/span&gt;:]  &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; 最终结果&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;整理以上分析得到如下代码：&lt;/p&gt;
&lt;div class="highlight highlight-source-python"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;import&lt;/span&gt; re
&lt;span class="pl-k"&gt;def&lt;/span&gt; &lt;span class="pl-en"&gt;camel&lt;/span&gt;(&lt;span class="pl-smi"&gt;s&lt;/span&gt;):
    s &lt;span class="pl-k"&gt;=&lt;/span&gt; re.sub(&lt;span class="pl-sr"&gt;&lt;span class="pl-k"&gt;r&lt;/span&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;span class="pl-c1"&gt;(&lt;/span&gt;&lt;span class="pl-c1"&gt;\s&lt;/span&gt;&lt;span class="pl-k"&gt;|&lt;/span&gt;_&lt;span class="pl-k"&gt;|&lt;/span&gt;-&lt;span class="pl-c1"&gt;)&lt;/span&gt;&lt;span class="pl-k"&gt;+&lt;/span&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt; &lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, s).title().replace(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt; &lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
    &lt;span class="pl-k"&gt;return&lt;/span&gt; s[&lt;span class="pl-c1"&gt;0&lt;/span&gt;].lower() &lt;span class="pl-k"&gt;+&lt;/span&gt; s[&lt;span class="pl-c1"&gt;1&lt;/span&gt;:]

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; 批量转化&lt;/span&gt;
&lt;span class="pl-k"&gt;def&lt;/span&gt; &lt;span class="pl-en"&gt;batch_camel&lt;/span&gt;(&lt;span class="pl-smi"&gt;slist&lt;/span&gt;):
    &lt;span class="pl-k"&gt;return&lt;/span&gt; [camel(s) &lt;span class="pl-k"&gt;for&lt;/span&gt; s &lt;span class="pl-k"&gt;in&lt;/span&gt; slist]&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;测试结果：&lt;/p&gt;
&lt;div class="highlight highlight-source-python"&gt;&lt;pre&gt;s &lt;span class="pl-k"&gt;=&lt;/span&gt; batch_camel([&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;student_id&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;student&lt;span class="pl-cce"&gt;\t&lt;/span&gt;name&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;student-add&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;])
&lt;span class="pl-c1"&gt;print&lt;/span&gt;(s)
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; 结果&lt;/span&gt;
[&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;studentId&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;studentName&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;studentAdd&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;]&lt;/pre&gt;&lt;/div&gt;
&lt;h4&gt;&lt;a id="user-content-23-str1是否为str2的permutation" class="anchor" aria-hidden="true" href="#23-str1是否为str2的permutation"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;23 str1是否为str2的permutation&lt;/h4&gt;
&lt;p&gt;排序词(permutation)：两个字符串含有相同字符，但字符顺序不同。&lt;/p&gt;
&lt;div class="highlight highlight-source-python"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;from&lt;/span&gt; collections &lt;span class="pl-k"&gt;import&lt;/span&gt; defaultdict


&lt;span class="pl-k"&gt;def&lt;/span&gt; &lt;span class="pl-en"&gt;is_permutation&lt;/span&gt;(&lt;span class="pl-smi"&gt;str1&lt;/span&gt;, &lt;span class="pl-smi"&gt;str2&lt;/span&gt;):
    &lt;span class="pl-k"&gt;if&lt;/span&gt; str1 &lt;span class="pl-k"&gt;is&lt;/span&gt; &lt;span class="pl-c1"&gt;None&lt;/span&gt; &lt;span class="pl-k"&gt;or&lt;/span&gt; str2 &lt;span class="pl-k"&gt;is&lt;/span&gt; &lt;span class="pl-c1"&gt;None&lt;/span&gt;:
        &lt;span class="pl-k"&gt;return&lt;/span&gt; &lt;span class="pl-c1"&gt;False&lt;/span&gt;
    &lt;span class="pl-k"&gt;if&lt;/span&gt; &lt;span class="pl-c1"&gt;len&lt;/span&gt;(str1) &lt;span class="pl-k"&gt;!=&lt;/span&gt; &lt;span class="pl-c1"&gt;len&lt;/span&gt;(str2):
        &lt;span class="pl-k"&gt;return&lt;/span&gt; &lt;span class="pl-c1"&gt;False&lt;/span&gt;
    unq_s1 &lt;span class="pl-k"&gt;=&lt;/span&gt; defaultdict(&lt;span class="pl-c1"&gt;int&lt;/span&gt;)
    unq_s2 &lt;span class="pl-k"&gt;=&lt;/span&gt; defaultdict(&lt;span class="pl-c1"&gt;int&lt;/span&gt;)
    &lt;span class="pl-k"&gt;for&lt;/span&gt; c1 &lt;span class="pl-k"&gt;in&lt;/span&gt; unq_s1:
        unq_s1[c1] &lt;span class="pl-k"&gt;+=&lt;/span&gt; &lt;span class="pl-c1"&gt;1&lt;/span&gt;
    &lt;span class="pl-k"&gt;for&lt;/span&gt; c2 &lt;span class="pl-k"&gt;in&lt;/span&gt; unq_s2:
        unq_s2[c2] &lt;span class="pl-k"&gt;+=&lt;/span&gt; &lt;span class="pl-c1"&gt;1&lt;/span&gt;

    &lt;span class="pl-k"&gt;return&lt;/span&gt; unq_s1 &lt;span class="pl-k"&gt;==&lt;/span&gt; unq_s2&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;这个小例子，使用python内置的&lt;code&gt;defaultdict&lt;/code&gt;，默认类型初始化为&lt;code&gt;int&lt;/code&gt;，计数默次数都为0. 这个解法本质是 &lt;code&gt;hash map lookup&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;统计出的两个defaultdict：unq_s1，unq_s2，如果相等，就表明str1、 str2互为排序词。&lt;/p&gt;
&lt;p&gt;下面测试：&lt;/p&gt;
&lt;div class="highlight highlight-source-python"&gt;&lt;pre&gt;r &lt;span class="pl-k"&gt;=&lt;/span&gt; is_permutation(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;nice&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;cine&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;)
&lt;span class="pl-c1"&gt;print&lt;/span&gt;(r)  &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; True&lt;/span&gt;

r &lt;span class="pl-k"&gt;=&lt;/span&gt; is_permutation(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;)
&lt;span class="pl-c1"&gt;print&lt;/span&gt;(r)  &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; True&lt;/span&gt;

r &lt;span class="pl-k"&gt;=&lt;/span&gt; is_permutation(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-c1"&gt;None&lt;/span&gt;)
&lt;span class="pl-c1"&gt;print&lt;/span&gt;(r)  &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; False&lt;/span&gt;

r &lt;span class="pl-k"&gt;=&lt;/span&gt; is_permutation(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;work&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;woo&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;)
&lt;span class="pl-c1"&gt;print&lt;/span&gt;(r)  &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; False&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;以上就是使用defaultdict的小例子，希望对读者朋友理解此类型有帮助。&lt;/p&gt;
&lt;h4&gt;&lt;a id="user-content-24-str1是否由str2旋转而来" class="anchor" aria-hidden="true" href="#24-str1是否由str2旋转而来"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;24 str1是否由str2旋转而来&lt;/h4&gt;
&lt;p&gt;&lt;code&gt;stringbook&lt;/code&gt;旋转后得到&lt;code&gt;bookstring&lt;/code&gt;,写一段代码验证&lt;code&gt;str1&lt;/code&gt;是否为&lt;code&gt;str2&lt;/code&gt;旋转得到。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;思路&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;转化为判断：&lt;code&gt;str1&lt;/code&gt;是否为&lt;code&gt;str2+str2&lt;/code&gt;的子串&lt;/p&gt;
&lt;div class="highlight highlight-source-python"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;def&lt;/span&gt; &lt;span class="pl-en"&gt;is_rotation&lt;/span&gt;(&lt;span class="pl-smi"&gt;s1&lt;/span&gt;: &lt;span class="pl-c1"&gt;str&lt;/span&gt;, &lt;span class="pl-smi"&gt;s2&lt;/span&gt;: &lt;span class="pl-c1"&gt;str&lt;/span&gt;) -&amp;gt; &lt;span class="pl-c1"&gt;bool&lt;/span&gt;:
    &lt;span class="pl-k"&gt;if&lt;/span&gt; s1 &lt;span class="pl-k"&gt;is&lt;/span&gt; &lt;span class="pl-c1"&gt;None&lt;/span&gt; &lt;span class="pl-k"&gt;or&lt;/span&gt; s2 &lt;span class="pl-k"&gt;is&lt;/span&gt; &lt;span class="pl-c1"&gt;None&lt;/span&gt;:
        &lt;span class="pl-k"&gt;return&lt;/span&gt; &lt;span class="pl-c1"&gt;False&lt;/span&gt;
    &lt;span class="pl-k"&gt;if&lt;/span&gt; &lt;span class="pl-c1"&gt;len&lt;/span&gt;(s1) &lt;span class="pl-k"&gt;!=&lt;/span&gt; &lt;span class="pl-c1"&gt;len&lt;/span&gt;(s2):
        &lt;span class="pl-k"&gt;return&lt;/span&gt; &lt;span class="pl-c1"&gt;False&lt;/span&gt;

    &lt;span class="pl-k"&gt;def&lt;/span&gt; &lt;span class="pl-en"&gt;is_substring&lt;/span&gt;(&lt;span class="pl-smi"&gt;s1&lt;/span&gt;: &lt;span class="pl-c1"&gt;str&lt;/span&gt;, &lt;span class="pl-smi"&gt;s2&lt;/span&gt;: &lt;span class="pl-c1"&gt;str&lt;/span&gt;) -&amp;gt; &lt;span class="pl-c1"&gt;bool&lt;/span&gt;:
        &lt;span class="pl-k"&gt;return&lt;/span&gt; s1 &lt;span class="pl-k"&gt;in&lt;/span&gt; s2
    &lt;span class="pl-k"&gt;return&lt;/span&gt; is_substring(s1, s2 &lt;span class="pl-k"&gt;+&lt;/span&gt; s2)&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;strong&gt;测试&lt;/strong&gt;&lt;/p&gt;
&lt;div class="highlight highlight-source-python"&gt;&lt;pre&gt;r &lt;span class="pl-k"&gt;=&lt;/span&gt; is_rotation(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;stringbook&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;bookstring&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;)
&lt;span class="pl-c1"&gt;print&lt;/span&gt;(r)  &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; True&lt;/span&gt;

r &lt;span class="pl-k"&gt;=&lt;/span&gt; is_rotation(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;greatman&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;maneatgr&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;)
&lt;span class="pl-c1"&gt;print&lt;/span&gt;(r)  &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; False&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h3&gt;&lt;/h3&gt;
&lt;h3&gt;&lt;a id="user-content-三python文件日期和多线程" class="anchor" aria-hidden="true" href="#三python文件日期和多线程"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;三、Python文件、日期和多线程&lt;/h3&gt;
&lt;p&gt;Python文件IO操作涉及文件读写操作，获取文件&lt;code&gt;后缀名&lt;/code&gt;，修改后缀名，获取文件修改时间，&lt;code&gt;压缩&lt;/code&gt;文件，&lt;code&gt;加密&lt;/code&gt;文件等操作。&lt;/p&gt;
&lt;p&gt;Python日期章节，由表示大日期的&lt;code&gt;calendar&lt;/code&gt;, &lt;code&gt;date&lt;/code&gt;模块，逐渐过渡到表示时间刻度更小的模块：&lt;code&gt;datetime&lt;/code&gt;, &lt;code&gt;time&lt;/code&gt;模块，按照此逻辑展开。&lt;/p&gt;
&lt;p&gt;Python&lt;code&gt;多线程&lt;/code&gt;希望透过5个小例子，帮助你对多线程模型编程本质有些更清晰的认识。&lt;/p&gt;
&lt;p&gt;一共总结最常用的&lt;code&gt;24&lt;/code&gt;个关于文件和时间处理模块的例子。&lt;/p&gt;
&lt;h4&gt;&lt;a id="user-content-1-获取后缀名" class="anchor" aria-hidden="true" href="#1-获取后缀名"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;1 获取后缀名&lt;/h4&gt;
&lt;div class="highlight highlight-source-python"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;import&lt;/span&gt; os
file_ext &lt;span class="pl-k"&gt;=&lt;/span&gt; os.path.splitext(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;./data/py/test.py&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;)
front,ext &lt;span class="pl-k"&gt;=&lt;/span&gt; file_ext
In [&lt;span class="pl-c1"&gt;5&lt;/span&gt;]: front
Out[&lt;span class="pl-c1"&gt;5&lt;/span&gt;]: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;./data/py/test&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;

In [&lt;span class="pl-c1"&gt;6&lt;/span&gt;]: ext
Out[&lt;span class="pl-c1"&gt;6&lt;/span&gt;]: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;.py&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h4&gt;&lt;a id="user-content-2-文件读操作" class="anchor" aria-hidden="true" href="#2-文件读操作"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;2 文件读操作&lt;/h4&gt;
&lt;div class="highlight highlight-source-python"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;import&lt;/span&gt; os
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; 创建文件夹&lt;/span&gt;

&lt;span class="pl-k"&gt;def&lt;/span&gt; &lt;span class="pl-en"&gt;mkdir&lt;/span&gt;(&lt;span class="pl-smi"&gt;path&lt;/span&gt;):
    isexists &lt;span class="pl-k"&gt;=&lt;/span&gt; os.path.exists(path)
    &lt;span class="pl-k"&gt;if&lt;/span&gt; &lt;span class="pl-k"&gt;not&lt;/span&gt; isexists:
        os.mkdir(path)
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; 读取文件信息&lt;/span&gt;

&lt;span class="pl-k"&gt;def&lt;/span&gt; &lt;span class="pl-en"&gt;openfile&lt;/span&gt;(&lt;span class="pl-smi"&gt;filename&lt;/span&gt;):
    f &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;open&lt;/span&gt;(filename)
    fllist &lt;span class="pl-k"&gt;=&lt;/span&gt; f.read()
    f.close()
    &lt;span class="pl-k"&gt;return&lt;/span&gt; fllist  &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; 返回读取内容&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h4&gt;&lt;a id="user-content-3-文件写操作" class="anchor" aria-hidden="true" href="#3-文件写操作"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;3 文件写操作&lt;/h4&gt;
&lt;div class="highlight highlight-source-python"&gt;&lt;pre&gt;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; 写入文件信息&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; example1&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; w写入，如果文件存在，则清空内容后写入，不存在则创建&lt;/span&gt;
f &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;open&lt;/span&gt;(&lt;span class="pl-sr"&gt;&lt;span class="pl-k"&gt;r&lt;/span&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;span class="pl-c1"&gt;.&lt;/span&gt;/data/test&lt;span class="pl-c1"&gt;.&lt;/span&gt;txt&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;w&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-v"&gt;encoding&lt;/span&gt;&lt;span class="pl-k"&gt;=&lt;/span&gt;&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;utf-8&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
&lt;span class="pl-c1"&gt;print&lt;/span&gt;(f.write(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;测试文件写入&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;))
f.close

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; example2&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; a写入，文件存在，则在文件内容后追加写入，不存在则创建&lt;/span&gt;
f &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;open&lt;/span&gt;(&lt;span class="pl-sr"&gt;&lt;span class="pl-k"&gt;r&lt;/span&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;span class="pl-c1"&gt;.&lt;/span&gt;/data/test&lt;span class="pl-c1"&gt;.&lt;/span&gt;txt&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;a&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-v"&gt;encoding&lt;/span&gt;&lt;span class="pl-k"&gt;=&lt;/span&gt;&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;utf-8&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
&lt;span class="pl-c1"&gt;print&lt;/span&gt;(f.write(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;测试文件写入&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;))
f.close

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; example3&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; with关键字系统会自动关闭文件和处理异常&lt;/span&gt;
&lt;span class="pl-k"&gt;with&lt;/span&gt; &lt;span class="pl-c1"&gt;open&lt;/span&gt;(&lt;span class="pl-sr"&gt;&lt;span class="pl-k"&gt;r&lt;/span&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;span class="pl-c1"&gt;.&lt;/span&gt;/data/test&lt;span class="pl-c1"&gt;.&lt;/span&gt;txt&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;w&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;) &lt;span class="pl-k"&gt;as&lt;/span&gt; f:
    f.write(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;hello world!&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)&lt;/pre&gt;&lt;/div&gt;
&lt;h4&gt;&lt;a id="user-content-4-路径中的文件名" class="anchor" aria-hidden="true" href="#4-路径中的文件名"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;4 路径中的文件名&lt;/h4&gt;
&lt;div class="highlight highlight-source-python"&gt;&lt;pre&gt;In [&lt;span class="pl-c1"&gt;11&lt;/span&gt;]: &lt;span class="pl-k"&gt;import&lt;/span&gt; os
    &lt;span class="pl-c1"&gt;...&lt;/span&gt;: file_ext &lt;span class="pl-k"&gt;=&lt;/span&gt; os.path.split(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;./data/py/test.py&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;)
    &lt;span class="pl-c1"&gt;...&lt;/span&gt;: ipath,ifile &lt;span class="pl-k"&gt;=&lt;/span&gt; file_ext
    &lt;span class="pl-c1"&gt;...&lt;/span&gt;:

In [&lt;span class="pl-c1"&gt;12&lt;/span&gt;]: ipath
Out[&lt;span class="pl-c1"&gt;12&lt;/span&gt;]: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;./data/py&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;

In [&lt;span class="pl-c1"&gt;13&lt;/span&gt;]: ifile
Out[&lt;span class="pl-c1"&gt;13&lt;/span&gt;]: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;test.py&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h4&gt;&lt;a id="user-content-5-批量修改文件后缀" class="anchor" aria-hidden="true" href="#5-批量修改文件后缀"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;5 批量修改文件后缀&lt;/h4&gt;
&lt;p&gt;&lt;strong&gt;批量修改文件后缀&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;本例子使用Python的&lt;code&gt;os&lt;/code&gt;模块和 &lt;code&gt;argparse&lt;/code&gt;模块，将工作目录&lt;code&gt;work_dir&lt;/code&gt;下所有后缀名为&lt;code&gt;old_ext&lt;/code&gt;的文件修改为后缀名为&lt;code&gt;new_ext&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;通过本例子，大家将会大概清楚&lt;code&gt;argparse&lt;/code&gt;模块的主要用法。&lt;/p&gt;
&lt;p&gt;导入模块&lt;/p&gt;
&lt;div class="highlight highlight-source-python"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;import&lt;/span&gt; argparse
&lt;span class="pl-k"&gt;import&lt;/span&gt; os&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;定义脚本参数&lt;/p&gt;
&lt;div class="highlight highlight-source-python"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;def&lt;/span&gt; &lt;span class="pl-en"&gt;get_parser&lt;/span&gt;():
    parser &lt;span class="pl-k"&gt;=&lt;/span&gt; argparse.ArgumentParser(
        &lt;span class="pl-v"&gt;description&lt;/span&gt;&lt;span class="pl-k"&gt;=&lt;/span&gt;&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;工作目录中文件后缀名修改&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;)
    parser.add_argument(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;work_dir&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-v"&gt;metavar&lt;/span&gt;&lt;span class="pl-k"&gt;=&lt;/span&gt;&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;WORK_DIR&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-v"&gt;type&lt;/span&gt;&lt;span class="pl-k"&gt;=&lt;/span&gt;&lt;span class="pl-c1"&gt;str&lt;/span&gt;, &lt;span class="pl-v"&gt;nargs&lt;/span&gt;&lt;span class="pl-k"&gt;=&lt;/span&gt;&lt;span class="pl-c1"&gt;1&lt;/span&gt;,
                        &lt;span class="pl-v"&gt;help&lt;/span&gt;&lt;span class="pl-k"&gt;=&lt;/span&gt;&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;修改后缀名的文件目录&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;)
    parser.add_argument(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;old_ext&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-v"&gt;metavar&lt;/span&gt;&lt;span class="pl-k"&gt;=&lt;/span&gt;&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;OLD_EXT&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;,
                        &lt;span class="pl-v"&gt;type&lt;/span&gt;&lt;span class="pl-k"&gt;=&lt;/span&gt;&lt;span class="pl-c1"&gt;str&lt;/span&gt;, &lt;span class="pl-v"&gt;nargs&lt;/span&gt;&lt;span class="pl-k"&gt;=&lt;/span&gt;&lt;span class="pl-c1"&gt;1&lt;/span&gt;, &lt;span class="pl-v"&gt;help&lt;/span&gt;&lt;span class="pl-k"&gt;=&lt;/span&gt;&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;原来的后缀&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;)
    parser.add_argument(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;new_ext&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-v"&gt;metavar&lt;/span&gt;&lt;span class="pl-k"&gt;=&lt;/span&gt;&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;NEW_EXT&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;,
                        &lt;span class="pl-v"&gt;type&lt;/span&gt;&lt;span class="pl-k"&gt;=&lt;/span&gt;&lt;span class="pl-c1"&gt;str&lt;/span&gt;, &lt;span class="pl-v"&gt;nargs&lt;/span&gt;&lt;span class="pl-k"&gt;=&lt;/span&gt;&lt;span class="pl-c1"&gt;1&lt;/span&gt;, &lt;span class="pl-v"&gt;help&lt;/span&gt;&lt;span class="pl-k"&gt;=&lt;/span&gt;&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;新的后缀&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;)
    &lt;span class="pl-k"&gt;return&lt;/span&gt; parser&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;后缀名批量修改&lt;/p&gt;
&lt;div class="highlight highlight-source-python"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;def&lt;/span&gt; &lt;span class="pl-en"&gt;batch_rename&lt;/span&gt;(&lt;span class="pl-smi"&gt;work_dir&lt;/span&gt;, &lt;span class="pl-smi"&gt;old_ext&lt;/span&gt;, &lt;span class="pl-smi"&gt;new_ext&lt;/span&gt;):
    &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"""&lt;/span&gt;&lt;/span&gt;
&lt;span class="pl-s"&gt;    传递当前目录，原来后缀名，新的后缀名后，批量重命名后缀&lt;/span&gt;
&lt;span class="pl-s"&gt;    &lt;span class="pl-pds"&gt;"""&lt;/span&gt;&lt;/span&gt;
    &lt;span class="pl-k"&gt;for&lt;/span&gt; filename &lt;span class="pl-k"&gt;in&lt;/span&gt; os.listdir(work_dir):
        &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; 获取得到文件后缀&lt;/span&gt;
        split_file &lt;span class="pl-k"&gt;=&lt;/span&gt; os.path.splitext(filename)
        file_ext &lt;span class="pl-k"&gt;=&lt;/span&gt; split_file[&lt;span class="pl-c1"&gt;1&lt;/span&gt;]
        &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; 定位后缀名为old_ext 的文件&lt;/span&gt;
        &lt;span class="pl-k"&gt;if&lt;/span&gt; old_ext &lt;span class="pl-k"&gt;==&lt;/span&gt; file_ext:
            &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; 修改后文件的完整名称&lt;/span&gt;
            newfile &lt;span class="pl-k"&gt;=&lt;/span&gt; split_file[&lt;span class="pl-c1"&gt;0&lt;/span&gt;] &lt;span class="pl-k"&gt;+&lt;/span&gt; new_ext
            &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; 实现重命名操作&lt;/span&gt;
            os.rename(
                os.path.join(work_dir, filename),
                os.path.join(work_dir, newfile)
            )
    &lt;span class="pl-c1"&gt;print&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;完成重命名&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
    &lt;span class="pl-c1"&gt;print&lt;/span&gt;(os.listdir(work_dir))&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;实现Main&lt;/p&gt;
&lt;div class="highlight highlight-source-python"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;def&lt;/span&gt; &lt;span class="pl-en"&gt;main&lt;/span&gt;():
    &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"""&lt;/span&gt;&lt;/span&gt;
&lt;span class="pl-s"&gt;    main函数&lt;/span&gt;
&lt;span class="pl-s"&gt;    &lt;span class="pl-pds"&gt;"""&lt;/span&gt;&lt;/span&gt;
    &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; 命令行参数&lt;/span&gt;
    parser &lt;span class="pl-k"&gt;=&lt;/span&gt; get_parser()
    args &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;vars&lt;/span&gt;(parser.parse_args())
    &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; 从命令行参数中依次解析出参数&lt;/span&gt;
    work_dir &lt;span class="pl-k"&gt;=&lt;/span&gt; args[&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;work_dir&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;][&lt;span class="pl-c1"&gt;0&lt;/span&gt;]
    old_ext &lt;span class="pl-k"&gt;=&lt;/span&gt; args[&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;old_ext&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;][&lt;span class="pl-c1"&gt;0&lt;/span&gt;]
    &lt;span class="pl-k"&gt;if&lt;/span&gt; old_ext[&lt;span class="pl-c1"&gt;0&lt;/span&gt;] &lt;span class="pl-k"&gt;!=&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;.&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;:
        old_ext &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;.&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt; &lt;span class="pl-k"&gt;+&lt;/span&gt; old_ext
    new_ext &lt;span class="pl-k"&gt;=&lt;/span&gt; args[&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;new_ext&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;][&lt;span class="pl-c1"&gt;0&lt;/span&gt;]
    &lt;span class="pl-k"&gt;if&lt;/span&gt; new_ext[&lt;span class="pl-c1"&gt;0&lt;/span&gt;] &lt;span class="pl-k"&gt;!=&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;.&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;:
        new_ext &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;.&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt; &lt;span class="pl-k"&gt;+&lt;/span&gt; new_ext

    batch_rename(work_dir, old_ext, new_ext)&lt;/pre&gt;&lt;/div&gt;
&lt;h4&gt;&lt;a id="user-content-6-xls批量转换成xlsx" class="anchor" aria-hidden="true" href="#6-xls批量转换成xlsx"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;6 xls批量转换成xlsx&lt;/h4&gt;
&lt;div class="highlight highlight-source-python"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;import&lt;/span&gt; os


&lt;span class="pl-k"&gt;def&lt;/span&gt; &lt;span class="pl-en"&gt;xls_to_xlsx&lt;/span&gt;(&lt;span class="pl-smi"&gt;work_dir&lt;/span&gt;):
    &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"""&lt;/span&gt;&lt;/span&gt;
&lt;span class="pl-s"&gt;    传递当前目录，原来后缀名，新的后缀名后，批量重命名后缀&lt;/span&gt;
&lt;span class="pl-s"&gt;    &lt;span class="pl-pds"&gt;"""&lt;/span&gt;&lt;/span&gt;
    old_ext, new_ext &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;.xls&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;.xlsx&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;
    &lt;span class="pl-k"&gt;for&lt;/span&gt; filename &lt;span class="pl-k"&gt;in&lt;/span&gt; os.listdir(work_dir):
        &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; 获取得到文件后缀&lt;/span&gt;
        split_file &lt;span class="pl-k"&gt;=&lt;/span&gt; os.path.splitext(filename)
        file_ext &lt;span class="pl-k"&gt;=&lt;/span&gt; split_file[&lt;span class="pl-c1"&gt;1&lt;/span&gt;]
        &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; 定位后缀名为old_ext 的文件&lt;/span&gt;
        &lt;span class="pl-k"&gt;if&lt;/span&gt; old_ext &lt;span class="pl-k"&gt;==&lt;/span&gt; file_ext:
            &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; 修改后文件的完整名称&lt;/span&gt;
            newfile &lt;span class="pl-k"&gt;=&lt;/span&gt; split_file[&lt;span class="pl-c1"&gt;0&lt;/span&gt;] &lt;span class="pl-k"&gt;+&lt;/span&gt; new_ext
            &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; 实现重命名操作&lt;/span&gt;
            os.rename(
                os.path.join(work_dir, filename),
                os.path.join(work_dir, newfile)
            )
    &lt;span class="pl-c1"&gt;print&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;完成重命名&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
    &lt;span class="pl-c1"&gt;print&lt;/span&gt;(os.listdir(work_dir))


xls_to_xlsx(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;./data&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;)

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; 输出结果：&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; ['cut_words.csv', 'email_list.xlsx', 'email_test.docx', 'email_test.jpg', 'email_test.xlsx', 'geo_data.png', 'geo_data.xlsx',&lt;/span&gt;
&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;iotest.txt&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;pyside2.md&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;PySimpleGUI-4.7.1-py3-none-any.whl&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;test.txt&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;test_excel.xlsx&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;ziptest&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;ziptest.zip&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;]&lt;/pre&gt;&lt;/div&gt;
&lt;h4&gt;&lt;a id="user-content-7-定制文件不同行" class="anchor" aria-hidden="true" href="#7-定制文件不同行"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;7 定制文件不同行&lt;/h4&gt;
&lt;p&gt;比较两个文件在哪些行内容不同，返回这些行的编号，行号编号从1开始。&lt;/p&gt;
&lt;p&gt;定义统计文件行数的函数&lt;/p&gt;
&lt;div class="highlight highlight-source-python"&gt;&lt;pre&gt;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; 统计文件个数&lt;/span&gt;
    &lt;span class="pl-k"&gt;def&lt;/span&gt; &lt;span class="pl-en"&gt;statLineCnt&lt;/span&gt;(&lt;span class="pl-smi"&gt;statfile&lt;/span&gt;):
        &lt;span class="pl-c1"&gt;print&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;文件名：&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;&lt;span class="pl-k"&gt;+&lt;/span&gt;statfile)
        cnt &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;0&lt;/span&gt;
        &lt;span class="pl-k"&gt;with&lt;/span&gt; &lt;span class="pl-c1"&gt;open&lt;/span&gt;(statfile, &lt;span class="pl-v"&gt;encoding&lt;/span&gt;&lt;span class="pl-k"&gt;=&lt;/span&gt;&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;utf-8&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;) &lt;span class="pl-k"&gt;as&lt;/span&gt; f:
            &lt;span class="pl-k"&gt;while&lt;/span&gt; f.readline():
                cnt &lt;span class="pl-k"&gt;+=&lt;/span&gt; &lt;span class="pl-c1"&gt;1&lt;/span&gt;
            &lt;span class="pl-k"&gt;return&lt;/span&gt; cnt&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;统计文件不同之处的子函数：&lt;/p&gt;
&lt;div class="highlight highlight-source-python"&gt;&lt;pre&gt;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; more表示含有更多行数的文件&lt;/span&gt;
        &lt;span class="pl-k"&gt;def&lt;/span&gt; &lt;span class="pl-en"&gt;diff&lt;/span&gt;(&lt;span class="pl-smi"&gt;more&lt;/span&gt;, &lt;span class="pl-smi"&gt;cnt&lt;/span&gt;, &lt;span class="pl-smi"&gt;less&lt;/span&gt;):
            difflist &lt;span class="pl-k"&gt;=&lt;/span&gt; []
            &lt;span class="pl-k"&gt;with&lt;/span&gt; &lt;span class="pl-c1"&gt;open&lt;/span&gt;(less, &lt;span class="pl-v"&gt;encoding&lt;/span&gt;&lt;span class="pl-k"&gt;=&lt;/span&gt;&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;utf-8&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;) &lt;span class="pl-k"&gt;as&lt;/span&gt; l:
                &lt;span class="pl-k"&gt;with&lt;/span&gt; &lt;span class="pl-c1"&gt;open&lt;/span&gt;(more, &lt;span class="pl-v"&gt;encoding&lt;/span&gt;&lt;span class="pl-k"&gt;=&lt;/span&gt;&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;utf-8&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;) &lt;span class="pl-k"&gt;as&lt;/span&gt; m:
                    lines &lt;span class="pl-k"&gt;=&lt;/span&gt; l.readlines()
                    &lt;span class="pl-k"&gt;for&lt;/span&gt; i, line &lt;span class="pl-k"&gt;in&lt;/span&gt; &lt;span class="pl-c1"&gt;enumerate&lt;/span&gt;(lines):
                        &lt;span class="pl-k"&gt;if&lt;/span&gt; line.strip() &lt;span class="pl-k"&gt;!=&lt;/span&gt; m.readline().strip():
                            difflist.append(i)
            &lt;span class="pl-k"&gt;if&lt;/span&gt; cnt &lt;span class="pl-k"&gt;-&lt;/span&gt; i &lt;span class="pl-k"&gt;&amp;gt;&lt;/span&gt; &lt;span class="pl-c1"&gt;1&lt;/span&gt;:
                difflist.extend(&lt;span class="pl-c1"&gt;range&lt;/span&gt;(i &lt;span class="pl-k"&gt;+&lt;/span&gt; &lt;span class="pl-c1"&gt;1&lt;/span&gt;, cnt))
            &lt;span class="pl-k"&gt;return&lt;/span&gt; [no&lt;span class="pl-k"&gt;+&lt;/span&gt;&lt;span class="pl-c1"&gt;1&lt;/span&gt; &lt;span class="pl-k"&gt;for&lt;/span&gt; no &lt;span class="pl-k"&gt;in&lt;/span&gt; difflist]&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;主函数：&lt;/p&gt;
&lt;div class="highlight highlight-source-python"&gt;&lt;pre&gt;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; 返回的结果行号从1开始&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; list表示fileA和fileB不同的行的编号&lt;/span&gt;

&lt;span class="pl-k"&gt;def&lt;/span&gt; &lt;span class="pl-en"&gt;file_diff_line_nos&lt;/span&gt;(&lt;span class="pl-smi"&gt;fileA&lt;/span&gt;, &lt;span class="pl-smi"&gt;fileB&lt;/span&gt;):
    &lt;span class="pl-k"&gt;try&lt;/span&gt;:
        cntA &lt;span class="pl-k"&gt;=&lt;/span&gt; statLineCnt(fileA)
        cntB &lt;span class="pl-k"&gt;=&lt;/span&gt; statLineCnt(fileB)
        &lt;span class="pl-k"&gt;if&lt;/span&gt; cntA &lt;span class="pl-k"&gt;&amp;gt;&lt;/span&gt; cntB:
            &lt;span class="pl-k"&gt;return&lt;/span&gt; diff(fileA, cntA, fileB)
        &lt;span class="pl-k"&gt;return&lt;/span&gt; diff(fileB, cntB, fileA)

    &lt;span class="pl-k"&gt;except&lt;/span&gt; &lt;span class="pl-c1"&gt;Exception&lt;/span&gt; &lt;span class="pl-k"&gt;as&lt;/span&gt; e:
        &lt;span class="pl-c1"&gt;print&lt;/span&gt;(e)&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;比较两个文件A和B，拿相对较短的文件去比较，过滤行后的换行符&lt;code&gt;\n&lt;/code&gt;和空格。&lt;/p&gt;
&lt;p&gt;暂未考虑某个文件最后可能有的多行空行等特殊情况&lt;/p&gt;
&lt;p&gt;使用&lt;code&gt;file_diff_line_nos&lt;/code&gt; 函数：&lt;/p&gt;
&lt;div class="highlight highlight-source-python"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;if&lt;/span&gt; &lt;span class="pl-c1"&gt;__name__&lt;/span&gt; &lt;span class="pl-k"&gt;==&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;__main__&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;:
    &lt;span class="pl-k"&gt;import&lt;/span&gt; os
    &lt;span class="pl-c1"&gt;print&lt;/span&gt;(os.getcwd())

    &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'''&lt;/span&gt;&lt;/span&gt;
&lt;span class="pl-s"&gt;    例子：&lt;/span&gt;
&lt;span class="pl-s"&gt;    fileA = "'hello world!!!!''&lt;span class="pl-c1"&gt;\&lt;/span&gt;&lt;/span&gt;
&lt;span class="pl-s"&gt;            'nice to meet you'&lt;span class="pl-c1"&gt;\&lt;/span&gt;&lt;/span&gt;
&lt;span class="pl-s"&gt;            'yes'&lt;span class="pl-c1"&gt;\&lt;/span&gt;&lt;/span&gt;
&lt;span class="pl-s"&gt;            'no1'&lt;span class="pl-c1"&gt;\&lt;/span&gt;&lt;/span&gt;
&lt;span class="pl-s"&gt;            'jack'"&lt;/span&gt;
&lt;span class="pl-s"&gt;    fileB = "'hello world!!!!''&lt;span class="pl-c1"&gt;\&lt;/span&gt;&lt;/span&gt;
&lt;span class="pl-s"&gt;            'nice to meet you'&lt;span class="pl-c1"&gt;\&lt;/span&gt;&lt;/span&gt;
&lt;span class="pl-s"&gt;            'yes' "&lt;/span&gt;
&lt;span class="pl-s"&gt;    &lt;span class="pl-pds"&gt;'''&lt;/span&gt;&lt;/span&gt;
    diff &lt;span class="pl-k"&gt;=&lt;/span&gt; file_diff_line_nos(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;./testdir/a.txt&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;./testdir/b.txt&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;)
    &lt;span class="pl-c1"&gt;print&lt;/span&gt;(diff)  &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; [4, 5]&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;关于文件比较的，实际上，在Python中有对应模块&lt;code&gt;difflib&lt;/code&gt; , 提供更多其他格式的文件更详细的比较，大家可参考：&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;a href="https://docs.python.org/3/library/difflib.html?highlight=difflib#module-difflib" rel="nofollow"&gt;https://docs.python.org/3/library/difflib.html?highlight=difflib#module-difflib&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h4&gt;&lt;a id="user-content-8-获取指定后缀名的文件" class="anchor" aria-hidden="true" href="#8-获取指定后缀名的文件"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;8 获取指定后缀名的文件&lt;/h4&gt;
&lt;div class="highlight highlight-source-python"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;import&lt;/span&gt; os

&lt;span class="pl-k"&gt;def&lt;/span&gt; &lt;span class="pl-en"&gt;find_file&lt;/span&gt;(&lt;span class="pl-smi"&gt;work_dir&lt;/span&gt;,&lt;span class="pl-smi"&gt;extension&lt;/span&gt;&lt;span class="pl-k"&gt;=&lt;/span&gt;&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;jpg&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;):
    lst &lt;span class="pl-k"&gt;=&lt;/span&gt; []
    &lt;span class="pl-k"&gt;for&lt;/span&gt; filename &lt;span class="pl-k"&gt;in&lt;/span&gt; os.listdir(work_dir):
        &lt;span class="pl-c1"&gt;print&lt;/span&gt;(filename)
        splits &lt;span class="pl-k"&gt;=&lt;/span&gt; os.path.splitext(filename)
        ext &lt;span class="pl-k"&gt;=&lt;/span&gt; splits[&lt;span class="pl-c1"&gt;1&lt;/span&gt;] &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; 拿到扩展名&lt;/span&gt;
        &lt;span class="pl-k"&gt;if&lt;/span&gt; ext &lt;span class="pl-k"&gt;==&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;.&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;&lt;span class="pl-k"&gt;+&lt;/span&gt;extension:
            lst.append(filename)
    &lt;span class="pl-k"&gt;return&lt;/span&gt; lst

r &lt;span class="pl-k"&gt;=&lt;/span&gt; find_file(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;.&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;,&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;md&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;) 
&lt;span class="pl-c1"&gt;print&lt;/span&gt;(r) &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; 返回所有目录下的md文件&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h4&gt;&lt;a id="user-content-9-批量获取文件修改时间" class="anchor" aria-hidden="true" href="#9-批量获取文件修改时间"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;9 批量获取文件修改时间&lt;/h4&gt;
&lt;div class="highlight highlight-source-python"&gt;&lt;pre&gt;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; 获取目录下文件的修改时间&lt;/span&gt;
&lt;span class="pl-k"&gt;import&lt;/span&gt; os
&lt;span class="pl-k"&gt;from&lt;/span&gt; datetime &lt;span class="pl-k"&gt;import&lt;/span&gt; datetime

&lt;span class="pl-c1"&gt;print&lt;/span&gt;(&lt;span class="pl-s"&gt;f&lt;/span&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;span class="pl-s"&gt;当前时间：&lt;/span&gt;&lt;span class="pl-c1"&gt;{&lt;/span&gt;datetime.now().strftime(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;%Y-%m-&lt;span class="pl-c1"&gt;%d&lt;/span&gt; %H:%M:%S&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;)&lt;span class="pl-c1"&gt;}&lt;/span&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;)

&lt;span class="pl-k"&gt;def&lt;/span&gt; &lt;span class="pl-en"&gt;get_modify_time&lt;/span&gt;(&lt;span class="pl-smi"&gt;indir&lt;/span&gt;):
    &lt;span class="pl-k"&gt;for&lt;/span&gt; root, _, files &lt;span class="pl-k"&gt;in&lt;/span&gt; os.walk(indir):  &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; 循环D:\works目录和子目录&lt;/span&gt;
        &lt;span class="pl-k"&gt;for&lt;/span&gt; &lt;span class="pl-v"&gt;file&lt;/span&gt; &lt;span class="pl-k"&gt;in&lt;/span&gt; files:
            absfile &lt;span class="pl-k"&gt;=&lt;/span&gt; os.path.join(root, &lt;span class="pl-v"&gt;file&lt;/span&gt;)
            modtime &lt;span class="pl-k"&gt;=&lt;/span&gt; datetime.fromtimestamp(os.path.getmtime(absfile))
            now &lt;span class="pl-k"&gt;=&lt;/span&gt; datetime.now()
            difftime &lt;span class="pl-k"&gt;=&lt;/span&gt; now&lt;span class="pl-k"&gt;-&lt;/span&gt;modtime
            &lt;span class="pl-k"&gt;if&lt;/span&gt; difftime.days &lt;span class="pl-k"&gt;&amp;lt;&lt;/span&gt; &lt;span class="pl-c1"&gt;20&lt;/span&gt;:  &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; 条件筛选超过指定时间的文件&lt;/span&gt;
                &lt;span class="pl-c1"&gt;print&lt;/span&gt;(&lt;span class="pl-s"&gt;f&lt;/span&gt;&lt;span class="pl-pds"&gt;"""&lt;/span&gt;&lt;span class="pl-c1"&gt;{&lt;/span&gt;absfile&lt;span class="pl-c1"&gt;}&lt;/span&gt;&lt;span class="pl-s"&gt;&lt;/span&gt;
&lt;span class="pl-s"&gt;                    修改时间[&lt;/span&gt;&lt;span class="pl-c1"&gt;{&lt;/span&gt;modtime.strftime(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;%Y-%m-&lt;span class="pl-c1"&gt;%d&lt;/span&gt; %H:%M:%S&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;)&lt;span class="pl-c1"&gt;}&lt;/span&gt;&lt;span class="pl-s"&gt;]&lt;/span&gt;
&lt;span class="pl-s"&gt;                    距今[&lt;/span&gt;&lt;span class="pl-c1"&gt;{&lt;/span&gt;difftime.days&lt;span class="pl-k"&gt;:3d&lt;/span&gt;&lt;span class="pl-c1"&gt;}&lt;/span&gt;&lt;span class="pl-s"&gt;天&lt;/span&gt;&lt;span class="pl-c1"&gt;{&lt;/span&gt;difftime.seconds&lt;span class="pl-k"&gt;//&lt;/span&gt;&lt;span class="pl-c1"&gt;3600&lt;/span&gt;&lt;span class="pl-k"&gt;:2d&lt;/span&gt;&lt;span class="pl-c1"&gt;}&lt;/span&gt;&lt;span class="pl-s"&gt;时&lt;/span&gt;&lt;span class="pl-c1"&gt;{&lt;/span&gt;difftime.seconds&lt;span class="pl-k"&gt;%&lt;/span&gt;&lt;span class="pl-c1"&gt;3600&lt;/span&gt;&lt;span class="pl-k"&gt;//&lt;/span&gt;&lt;span class="pl-c1"&gt;60&lt;/span&gt;&lt;span class="pl-k"&gt;:2d&lt;/span&gt;&lt;span class="pl-c1"&gt;}&lt;/span&gt;&lt;span class="pl-s"&gt;]&lt;/span&gt;&lt;span class="pl-pds"&gt;"""&lt;/span&gt;
                      )  &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; 打印相关信息&lt;/span&gt;


get_modify_time(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;./data&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;)&lt;/pre&gt;&lt;/div&gt;
&lt;pre&gt;&lt;code&gt;打印效果：
当前时间：2019-12-22 16:38:53
./data\cut_words.csv
                    修改时间[2019-12-21 10:34:15]
                    距今[  1天 6时 4]
当前时间：2019-12-22 16:38:53
./data\cut_words.csv
                    修改时间[2019-12-21 10:34:15]
                    距今[  1天 6时 4]
./data\email_test.docx
                    修改时间[2019-12-03 07:46:29]
                    距今[ 19天 8时52]
./data\email_test.jpg
                    修改时间[2019-12-03 07:46:29]
                    距今[ 19天 8时52]
./data\email_test.xlsx
                    修改时间[2019-12-03 07:46:29]
                    距今[ 19天 8时52]
./data\iotest.txt
                    修改时间[2019-12-13 08:23:18]
                    距今[  9天 8时15]
./data\pyside2.md
                    修改时间[2019-12-05 08:17:22]
                    距今[ 17天 8时21]
./data\PySimpleGUI-4.7.1-py3-none-any.whl
                    修改时间[2019-12-05 00:25:47]
                    距今[ 17天16时13]
&lt;/code&gt;&lt;/pre&gt;
&lt;h4&gt;&lt;a id="user-content-10-批量压缩文件" class="anchor" aria-hidden="true" href="#10-批量压缩文件"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;10 批量压缩文件&lt;/h4&gt;
&lt;div class="highlight highlight-source-python"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;import&lt;/span&gt; zipfile  &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; 导入zipfile,这个是用来做压缩和解压的Python模块；&lt;/span&gt;
&lt;span class="pl-k"&gt;import&lt;/span&gt; os
&lt;span class="pl-k"&gt;import&lt;/span&gt; time


&lt;span class="pl-k"&gt;def&lt;/span&gt; &lt;span class="pl-en"&gt;batch_zip&lt;/span&gt;(&lt;span class="pl-smi"&gt;start_dir&lt;/span&gt;):
    start_dir &lt;span class="pl-k"&gt;=&lt;/span&gt; start_dir  &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; 要压缩的文件夹路径&lt;/span&gt;
    file_news &lt;span class="pl-k"&gt;=&lt;/span&gt; start_dir &lt;span class="pl-k"&gt;+&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;.zip&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;  &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; 压缩后文件夹的名字&lt;/span&gt;

    z &lt;span class="pl-k"&gt;=&lt;/span&gt; zipfile.ZipFile(file_news, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;w&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;, zipfile.&lt;span class="pl-c1"&gt;ZIP_DEFLATED&lt;/span&gt;)
    &lt;span class="pl-k"&gt;for&lt;/span&gt; dir_path, dir_names, file_names &lt;span class="pl-k"&gt;in&lt;/span&gt; os.walk(start_dir):
        &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; 这一句很重要，不replace的话，就从根目录开始复制&lt;/span&gt;
        f_path &lt;span class="pl-k"&gt;=&lt;/span&gt; dir_path.replace(start_dir, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;)
        f_path &lt;span class="pl-k"&gt;=&lt;/span&gt; f_path &lt;span class="pl-k"&gt;and&lt;/span&gt; f_path &lt;span class="pl-k"&gt;+&lt;/span&gt; os.sep  &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; 实现当前文件夹以及包含的所有文件的压缩&lt;/span&gt;
        &lt;span class="pl-k"&gt;for&lt;/span&gt; filename &lt;span class="pl-k"&gt;in&lt;/span&gt; file_names:
            z.write(os.path.join(dir_path, filename), f_path &lt;span class="pl-k"&gt;+&lt;/span&gt; filename)
    z.close()
    &lt;span class="pl-k"&gt;return&lt;/span&gt; file_news


batch_zip(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;./data/ziptest&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;)

&lt;/pre&gt;&lt;/div&gt;
&lt;h4&gt;&lt;a id="user-content-11-32位加密" class="anchor" aria-hidden="true" href="#11-32位加密"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;11 32位加密&lt;/h4&gt;
&lt;div class="highlight highlight-source-python"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;import&lt;/span&gt; hashlib
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; 对字符串s实现32位加密&lt;/span&gt;


&lt;span class="pl-k"&gt;def&lt;/span&gt; &lt;span class="pl-en"&gt;hash_cry32&lt;/span&gt;(&lt;span class="pl-smi"&gt;s&lt;/span&gt;):
    m &lt;span class="pl-k"&gt;=&lt;/span&gt; hashlib.md5()
    m.update((&lt;span class="pl-c1"&gt;str&lt;/span&gt;(s).encode(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;utf-8&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;)))
    &lt;span class="pl-k"&gt;return&lt;/span&gt; m.hexdigest()


&lt;span class="pl-c1"&gt;print&lt;/span&gt;(hash_cry32(&lt;span class="pl-c1"&gt;1&lt;/span&gt;))  &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; c4ca4238a0b923820dcc509a6f75849b&lt;/span&gt;
&lt;span class="pl-c1"&gt;print&lt;/span&gt;(hash_cry32(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;hello&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;))  &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; 5d41402abc4b2a76b9719d911017c592&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h4&gt;&lt;a id="user-content-12-年的日历图" class="anchor" aria-hidden="true" href="#12-年的日历图"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;12 年的日历图&lt;/h4&gt;
&lt;div class="highlight highlight-source-python"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;import&lt;/span&gt; calendar
&lt;span class="pl-k"&gt;from&lt;/span&gt; datetime &lt;span class="pl-k"&gt;import&lt;/span&gt; date
mydate &lt;span class="pl-k"&gt;=&lt;/span&gt; date.today()
year_calendar_str &lt;span class="pl-k"&gt;=&lt;/span&gt; calendar.calendar(&lt;span class="pl-c1"&gt;2019&lt;/span&gt;)
&lt;span class="pl-c1"&gt;print&lt;/span&gt;(&lt;span class="pl-s"&gt;f&lt;/span&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;span class="pl-c1"&gt;{&lt;/span&gt;mydate.year&lt;span class="pl-c1"&gt;}&lt;/span&gt;&lt;span class="pl-s"&gt;年的日历图：&lt;/span&gt;&lt;span class="pl-c1"&gt;{&lt;/span&gt;year_calendar_str&lt;span class="pl-c1"&gt;}&lt;/span&gt;&lt;span class="pl-cce"&gt;\n&lt;/span&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;)&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;打印结果：&lt;/p&gt;
&lt;div class="highlight highlight-source-python"&gt;&lt;pre&gt;&lt;span class="pl-c1"&gt;2019&lt;/span&gt;

      January                   February                   March
Mo Tu We Th Fr Sa Su      Mo Tu We Th Fr Sa Su      Mo Tu We Th Fr Sa Su
    &lt;span class="pl-c1"&gt;1&lt;/span&gt;  &lt;span class="pl-c1"&gt;2&lt;/span&gt;  &lt;span class="pl-c1"&gt;3&lt;/span&gt;  &lt;span class="pl-c1"&gt;4&lt;/span&gt;  &lt;span class="pl-c1"&gt;5&lt;/span&gt;  &lt;span class="pl-c1"&gt;6&lt;/span&gt;                   &lt;span class="pl-c1"&gt;1&lt;/span&gt;  &lt;span class="pl-c1"&gt;2&lt;/span&gt;  &lt;span class="pl-c1"&gt;3&lt;/span&gt;                   &lt;span class="pl-c1"&gt;1&lt;/span&gt;  &lt;span class="pl-c1"&gt;2&lt;/span&gt;  &lt;span class="pl-c1"&gt;3&lt;/span&gt;
 &lt;span class="pl-c1"&gt;7&lt;/span&gt;  &lt;span class="pl-c1"&gt;8&lt;/span&gt;  &lt;span class="pl-c1"&gt;9&lt;/span&gt; &lt;span class="pl-c1"&gt;10&lt;/span&gt; &lt;span class="pl-c1"&gt;11&lt;/span&gt; &lt;span class="pl-c1"&gt;12&lt;/span&gt; &lt;span class="pl-c1"&gt;13&lt;/span&gt;       &lt;span class="pl-c1"&gt;4&lt;/span&gt;  &lt;span class="pl-c1"&gt;5&lt;/span&gt;  &lt;span class="pl-c1"&gt;6&lt;/span&gt;  &lt;span class="pl-c1"&gt;7&lt;/span&gt;  &lt;span class="pl-c1"&gt;8&lt;/span&gt;  &lt;span class="pl-c1"&gt;9&lt;/span&gt; &lt;span class="pl-c1"&gt;10&lt;/span&gt;       &lt;span class="pl-c1"&gt;4&lt;/span&gt;  &lt;span class="pl-c1"&gt;5&lt;/span&gt;  &lt;span class="pl-c1"&gt;6&lt;/span&gt;  &lt;span class="pl-c1"&gt;7&lt;/span&gt;  &lt;span class="pl-c1"&gt;8&lt;/span&gt;  &lt;span class="pl-c1"&gt;9&lt;/span&gt; &lt;span class="pl-c1"&gt;10&lt;/span&gt;
&lt;span class="pl-c1"&gt;14&lt;/span&gt; &lt;span class="pl-c1"&gt;15&lt;/span&gt; &lt;span class="pl-c1"&gt;16&lt;/span&gt; &lt;span class="pl-c1"&gt;17&lt;/span&gt; &lt;span class="pl-c1"&gt;18&lt;/span&gt; &lt;span class="pl-c1"&gt;19&lt;/span&gt; &lt;span class="pl-c1"&gt;20&lt;/span&gt;      &lt;span class="pl-c1"&gt;11&lt;/span&gt; &lt;span class="pl-c1"&gt;12&lt;/span&gt; &lt;span class="pl-c1"&gt;13&lt;/span&gt; &lt;span class="pl-c1"&gt;14&lt;/span&gt; &lt;span class="pl-c1"&gt;15&lt;/span&gt; &lt;span class="pl-c1"&gt;16&lt;/span&gt; &lt;span class="pl-c1"&gt;17&lt;/span&gt;      &lt;span class="pl-c1"&gt;11&lt;/span&gt; &lt;span class="pl-c1"&gt;12&lt;/span&gt; &lt;span class="pl-c1"&gt;13&lt;/span&gt; &lt;span class="pl-c1"&gt;14&lt;/span&gt; &lt;span class="pl-c1"&gt;15&lt;/span&gt; &lt;span class="pl-c1"&gt;16&lt;/span&gt; &lt;span class="pl-c1"&gt;17&lt;/span&gt;
&lt;span class="pl-c1"&gt;21&lt;/span&gt; &lt;span class="pl-c1"&gt;22&lt;/span&gt; &lt;span class="pl-c1"&gt;23&lt;/span&gt; &lt;span class="pl-c1"&gt;24&lt;/span&gt; &lt;span class="pl-c1"&gt;25&lt;/span&gt; &lt;span class="pl-c1"&gt;26&lt;/span&gt; &lt;span class="pl-c1"&gt;27&lt;/span&gt;      &lt;span class="pl-c1"&gt;18&lt;/span&gt; &lt;span class="pl-c1"&gt;19&lt;/span&gt; &lt;span class="pl-c1"&gt;20&lt;/span&gt; &lt;span class="pl-c1"&gt;21&lt;/span&gt; &lt;span class="pl-c1"&gt;22&lt;/span&gt; &lt;span class="pl-c1"&gt;23&lt;/span&gt; &lt;span class="pl-c1"&gt;24&lt;/span&gt;      &lt;span class="pl-c1"&gt;18&lt;/span&gt; &lt;span class="pl-c1"&gt;19&lt;/span&gt; &lt;span class="pl-c1"&gt;20&lt;/span&gt; &lt;span class="pl-c1"&gt;21&lt;/span&gt; &lt;span class="pl-c1"&gt;22&lt;/span&gt; &lt;span class="pl-c1"&gt;23&lt;/span&gt; &lt;span class="pl-c1"&gt;24&lt;/span&gt;
&lt;span class="pl-c1"&gt;28&lt;/span&gt; &lt;span class="pl-c1"&gt;29&lt;/span&gt; &lt;span class="pl-c1"&gt;30&lt;/span&gt; &lt;span class="pl-c1"&gt;31&lt;/span&gt;               &lt;span class="pl-c1"&gt;25&lt;/span&gt; &lt;span class="pl-c1"&gt;26&lt;/span&gt; &lt;span class="pl-c1"&gt;27&lt;/span&gt; &lt;span class="pl-c1"&gt;28&lt;/span&gt;               &lt;span class="pl-c1"&gt;25&lt;/span&gt; &lt;span class="pl-c1"&gt;26&lt;/span&gt; &lt;span class="pl-c1"&gt;27&lt;/span&gt; &lt;span class="pl-c1"&gt;28&lt;/span&gt; &lt;span class="pl-c1"&gt;29&lt;/span&gt; &lt;span class="pl-c1"&gt;30&lt;/span&gt; &lt;span class="pl-c1"&gt;31&lt;/span&gt;

       April                      May                       June
Mo Tu We Th Fr Sa Su      Mo Tu We Th Fr Sa Su      Mo Tu We Th Fr Sa Su
 &lt;span class="pl-c1"&gt;1&lt;/span&gt;  &lt;span class="pl-c1"&gt;2&lt;/span&gt;  &lt;span class="pl-c1"&gt;3&lt;/span&gt;  &lt;span class="pl-c1"&gt;4&lt;/span&gt;  &lt;span class="pl-c1"&gt;5&lt;/span&gt;  &lt;span class="pl-c1"&gt;6&lt;/span&gt;  &lt;span class="pl-c1"&gt;7&lt;/span&gt;             &lt;span class="pl-c1"&gt;1&lt;/span&gt;  &lt;span class="pl-c1"&gt;2&lt;/span&gt;  &lt;span class="pl-c1"&gt;3&lt;/span&gt;  &lt;span class="pl-c1"&gt;4&lt;/span&gt;  &lt;span class="pl-c1"&gt;5&lt;/span&gt;                      &lt;span class="pl-c1"&gt;1&lt;/span&gt;  &lt;span class="pl-c1"&gt;2&lt;/span&gt;
 &lt;span class="pl-c1"&gt;8&lt;/span&gt;  &lt;span class="pl-c1"&gt;9&lt;/span&gt; &lt;span class="pl-c1"&gt;10&lt;/span&gt; &lt;span class="pl-c1"&gt;11&lt;/span&gt; &lt;span class="pl-c1"&gt;12&lt;/span&gt; &lt;span class="pl-c1"&gt;13&lt;/span&gt; &lt;span class="pl-c1"&gt;14&lt;/span&gt;       &lt;span class="pl-c1"&gt;6&lt;/span&gt;  &lt;span class="pl-c1"&gt;7&lt;/span&gt;  &lt;span class="pl-c1"&gt;8&lt;/span&gt;  &lt;span class="pl-c1"&gt;9&lt;/span&gt; &lt;span class="pl-c1"&gt;10&lt;/span&gt; &lt;span class="pl-c1"&gt;11&lt;/span&gt; &lt;span class="pl-c1"&gt;12&lt;/span&gt;       &lt;span class="pl-c1"&gt;3&lt;/span&gt;  &lt;span class="pl-c1"&gt;4&lt;/span&gt;  &lt;span class="pl-c1"&gt;5&lt;/span&gt;  &lt;span class="pl-c1"&gt;6&lt;/span&gt;  &lt;span class="pl-c1"&gt;7&lt;/span&gt;  &lt;span class="pl-c1"&gt;8&lt;/span&gt;  &lt;span class="pl-c1"&gt;9&lt;/span&gt;
&lt;span class="pl-c1"&gt;15&lt;/span&gt; &lt;span class="pl-c1"&gt;16&lt;/span&gt; &lt;span class="pl-c1"&gt;17&lt;/span&gt; &lt;span class="pl-c1"&gt;18&lt;/span&gt; &lt;span class="pl-c1"&gt;19&lt;/span&gt; &lt;span class="pl-c1"&gt;20&lt;/span&gt; &lt;span class="pl-c1"&gt;21&lt;/span&gt;      &lt;span class="pl-c1"&gt;13&lt;/span&gt; &lt;span class="pl-c1"&gt;14&lt;/span&gt; &lt;span class="pl-c1"&gt;15&lt;/span&gt; &lt;span class="pl-c1"&gt;16&lt;/span&gt; &lt;span class="pl-c1"&gt;17&lt;/span&gt; &lt;span class="pl-c1"&gt;18&lt;/span&gt; &lt;span class="pl-c1"&gt;19&lt;/span&gt;      &lt;span class="pl-c1"&gt;10&lt;/span&gt; &lt;span class="pl-c1"&gt;11&lt;/span&gt; &lt;span class="pl-c1"&gt;12&lt;/span&gt; &lt;span class="pl-c1"&gt;13&lt;/span&gt; &lt;span class="pl-c1"&gt;14&lt;/span&gt; &lt;span class="pl-c1"&gt;15&lt;/span&gt; &lt;span class="pl-c1"&gt;16&lt;/span&gt;
&lt;span class="pl-c1"&gt;22&lt;/span&gt; &lt;span class="pl-c1"&gt;23&lt;/span&gt; &lt;span class="pl-c1"&gt;24&lt;/span&gt; &lt;span class="pl-c1"&gt;25&lt;/span&gt; &lt;span class="pl-c1"&gt;26&lt;/span&gt; &lt;span class="pl-c1"&gt;27&lt;/span&gt; &lt;span class="pl-c1"&gt;28&lt;/span&gt;      &lt;span class="pl-c1"&gt;20&lt;/span&gt; &lt;span class="pl-c1"&gt;21&lt;/span&gt; &lt;span class="pl-c1"&gt;22&lt;/span&gt; &lt;span class="pl-c1"&gt;23&lt;/span&gt; &lt;span class="pl-c1"&gt;24&lt;/span&gt; &lt;span class="pl-c1"&gt;25&lt;/span&gt; &lt;span class="pl-c1"&gt;26&lt;/span&gt;      &lt;span class="pl-c1"&gt;17&lt;/span&gt; &lt;span class="pl-c1"&gt;18&lt;/span&gt; &lt;span class="pl-c1"&gt;19&lt;/span&gt; &lt;span class="pl-c1"&gt;20&lt;/span&gt; &lt;span class="pl-c1"&gt;21&lt;/span&gt; &lt;span class="pl-c1"&gt;22&lt;/span&gt; &lt;span class="pl-c1"&gt;23&lt;/span&gt;
&lt;span class="pl-c1"&gt;29&lt;/span&gt; &lt;span class="pl-c1"&gt;30&lt;/span&gt;                     &lt;span class="pl-c1"&gt;27&lt;/span&gt; &lt;span class="pl-c1"&gt;28&lt;/span&gt; &lt;span class="pl-c1"&gt;29&lt;/span&gt; &lt;span class="pl-c1"&gt;30&lt;/span&gt; &lt;span class="pl-c1"&gt;31&lt;/span&gt;            &lt;span class="pl-c1"&gt;24&lt;/span&gt; &lt;span class="pl-c1"&gt;25&lt;/span&gt; &lt;span class="pl-c1"&gt;26&lt;/span&gt; &lt;span class="pl-c1"&gt;27&lt;/span&gt; &lt;span class="pl-c1"&gt;28&lt;/span&gt; &lt;span class="pl-c1"&gt;29&lt;/span&gt; &lt;span class="pl-c1"&gt;30&lt;/span&gt;

        July                     August                  September
Mo Tu We Th Fr Sa Su      Mo Tu We Th Fr Sa Su      Mo Tu We Th Fr Sa Su
 &lt;span class="pl-c1"&gt;1&lt;/span&gt;  &lt;span class="pl-c1"&gt;2&lt;/span&gt;  &lt;span class="pl-c1"&gt;3&lt;/span&gt;  &lt;span class="pl-c1"&gt;4&lt;/span&gt;  &lt;span class="pl-c1"&gt;5&lt;/span&gt;  &lt;span class="pl-c1"&gt;6&lt;/span&gt;  &lt;span class="pl-c1"&gt;7&lt;/span&gt;                &lt;span class="pl-c1"&gt;1&lt;/span&gt;  &lt;span class="pl-c1"&gt;2&lt;/span&gt;  &lt;span class="pl-c1"&gt;3&lt;/span&gt;  &lt;span class="pl-c1"&gt;4&lt;/span&gt;                         &lt;span class="pl-c1"&gt;1&lt;/span&gt;
 &lt;span class="pl-c1"&gt;8&lt;/span&gt;  &lt;span class="pl-c1"&gt;9&lt;/span&gt; &lt;span class="pl-c1"&gt;10&lt;/span&gt; &lt;span class="pl-c1"&gt;11&lt;/span&gt; &lt;span class="pl-c1"&gt;12&lt;/span&gt; &lt;span class="pl-c1"&gt;13&lt;/span&gt; &lt;span class="pl-c1"&gt;14&lt;/span&gt;       &lt;span class="pl-c1"&gt;5&lt;/span&gt;  &lt;span class="pl-c1"&gt;6&lt;/span&gt;  &lt;span class="pl-c1"&gt;7&lt;/span&gt;  &lt;span class="pl-c1"&gt;8&lt;/span&gt;  &lt;span class="pl-c1"&gt;9&lt;/span&gt; &lt;span class="pl-c1"&gt;10&lt;/span&gt; &lt;span class="pl-c1"&gt;11&lt;/span&gt;       &lt;span class="pl-c1"&gt;2&lt;/span&gt;  &lt;span class="pl-c1"&gt;3&lt;/span&gt;  &lt;span class="pl-c1"&gt;4&lt;/span&gt;  &lt;span class="pl-c1"&gt;5&lt;/span&gt;  &lt;span class="pl-c1"&gt;6&lt;/span&gt;  &lt;span class="pl-c1"&gt;7&lt;/span&gt;  &lt;span class="pl-c1"&gt;8&lt;/span&gt;
&lt;span class="pl-c1"&gt;15&lt;/span&gt; &lt;span class="pl-c1"&gt;16&lt;/span&gt; &lt;span class="pl-c1"&gt;17&lt;/span&gt; &lt;span class="pl-c1"&gt;18&lt;/span&gt; &lt;span class="pl-c1"&gt;19&lt;/span&gt; &lt;span class="pl-c1"&gt;20&lt;/span&gt; &lt;span class="pl-c1"&gt;21&lt;/span&gt;      &lt;span class="pl-c1"&gt;12&lt;/span&gt; &lt;span class="pl-c1"&gt;13&lt;/span&gt; &lt;span class="pl-c1"&gt;14&lt;/span&gt; &lt;span class="pl-c1"&gt;15&lt;/span&gt; &lt;span class="pl-c1"&gt;16&lt;/span&gt; &lt;span class="pl-c1"&gt;17&lt;/span&gt; &lt;span class="pl-c1"&gt;18&lt;/span&gt;       &lt;span class="pl-c1"&gt;9&lt;/span&gt; &lt;span class="pl-c1"&gt;10&lt;/span&gt; &lt;span class="pl-c1"&gt;11&lt;/span&gt; &lt;span class="pl-c1"&gt;12&lt;/span&gt; &lt;span class="pl-c1"&gt;13&lt;/span&gt; &lt;span class="pl-c1"&gt;14&lt;/span&gt; &lt;span class="pl-c1"&gt;15&lt;/span&gt;
&lt;span class="pl-c1"&gt;22&lt;/span&gt; &lt;span class="pl-c1"&gt;23&lt;/span&gt; &lt;span class="pl-c1"&gt;24&lt;/span&gt; &lt;span class="pl-c1"&gt;25&lt;/span&gt; &lt;span class="pl-c1"&gt;26&lt;/span&gt; &lt;span class="pl-c1"&gt;27&lt;/span&gt; &lt;span class="pl-c1"&gt;28&lt;/span&gt;      &lt;span class="pl-c1"&gt;19&lt;/span&gt; &lt;span class="pl-c1"&gt;20&lt;/span&gt; &lt;span class="pl-c1"&gt;21&lt;/span&gt; &lt;span class="pl-c1"&gt;22&lt;/span&gt; &lt;span class="pl-c1"&gt;23&lt;/span&gt; &lt;span class="pl-c1"&gt;24&lt;/span&gt; &lt;span class="pl-c1"&gt;25&lt;/span&gt;      &lt;span class="pl-c1"&gt;16&lt;/span&gt; &lt;span class="pl-c1"&gt;17&lt;/span&gt; &lt;span class="pl-c1"&gt;18&lt;/span&gt; &lt;span class="pl-c1"&gt;19&lt;/span&gt; &lt;span class="pl-c1"&gt;20&lt;/span&gt; &lt;span class="pl-c1"&gt;21&lt;/span&gt; &lt;span class="pl-c1"&gt;22&lt;/span&gt;
&lt;span class="pl-c1"&gt;29&lt;/span&gt; &lt;span class="pl-c1"&gt;30&lt;/span&gt; &lt;span class="pl-c1"&gt;31&lt;/span&gt;                  &lt;span class="pl-c1"&gt;26&lt;/span&gt; &lt;span class="pl-c1"&gt;27&lt;/span&gt; &lt;span class="pl-c1"&gt;28&lt;/span&gt; &lt;span class="pl-c1"&gt;29&lt;/span&gt; &lt;span class="pl-c1"&gt;30&lt;/span&gt; &lt;span class="pl-c1"&gt;31&lt;/span&gt;         &lt;span class="pl-c1"&gt;23&lt;/span&gt; &lt;span class="pl-c1"&gt;24&lt;/span&gt; &lt;span class="pl-c1"&gt;25&lt;/span&gt; &lt;span class="pl-c1"&gt;26&lt;/span&gt; &lt;span class="pl-c1"&gt;27&lt;/span&gt; &lt;span class="pl-c1"&gt;28&lt;/span&gt; &lt;span class="pl-c1"&gt;29&lt;/span&gt;
                                                    &lt;span class="pl-c1"&gt;30&lt;/span&gt;

      October                   November                  December
Mo Tu We Th Fr Sa Su      Mo Tu We Th Fr Sa Su      Mo Tu We Th Fr Sa Su
    &lt;span class="pl-c1"&gt;1&lt;/span&gt;  &lt;span class="pl-c1"&gt;2&lt;/span&gt;  &lt;span class="pl-c1"&gt;3&lt;/span&gt;  &lt;span class="pl-c1"&gt;4&lt;/span&gt;  &lt;span class="pl-c1"&gt;5&lt;/span&gt;  &lt;span class="pl-c1"&gt;6&lt;/span&gt;                   &lt;span class="pl-c1"&gt;1&lt;/span&gt;  &lt;span class="pl-c1"&gt;2&lt;/span&gt;  &lt;span class="pl-c1"&gt;3&lt;/span&gt;                         &lt;span class="pl-c1"&gt;1&lt;/span&gt;
 &lt;span class="pl-c1"&gt;7&lt;/span&gt;  &lt;span class="pl-c1"&gt;8&lt;/span&gt;  &lt;span class="pl-c1"&gt;9&lt;/span&gt; &lt;span class="pl-c1"&gt;10&lt;/span&gt; &lt;span class="pl-c1"&gt;11&lt;/span&gt; &lt;span class="pl-c1"&gt;12&lt;/span&gt; &lt;span class="pl-c1"&gt;13&lt;/span&gt;       &lt;span class="pl-c1"&gt;4&lt;/span&gt;  &lt;span class="pl-c1"&gt;5&lt;/span&gt;  &lt;span class="pl-c1"&gt;6&lt;/span&gt;  &lt;span class="pl-c1"&gt;7&lt;/span&gt;  &lt;span class="pl-c1"&gt;8&lt;/span&gt;  &lt;span class="pl-c1"&gt;9&lt;/span&gt; &lt;span class="pl-c1"&gt;10&lt;/span&gt;       &lt;span class="pl-c1"&gt;2&lt;/span&gt;  &lt;span class="pl-c1"&gt;3&lt;/span&gt;  &lt;span class="pl-c1"&gt;4&lt;/span&gt;  &lt;span class="pl-c1"&gt;5&lt;/span&gt;  &lt;span class="pl-c1"&gt;6&lt;/span&gt;  &lt;span class="pl-c1"&gt;7&lt;/span&gt;  &lt;span class="pl-c1"&gt;8&lt;/span&gt;
&lt;span class="pl-c1"&gt;14&lt;/span&gt; &lt;span class="pl-c1"&gt;15&lt;/span&gt; &lt;span class="pl-c1"&gt;16&lt;/span&gt; &lt;span class="pl-c1"&gt;17&lt;/span&gt; &lt;span class="pl-c1"&gt;18&lt;/span&gt; &lt;span class="pl-c1"&gt;19&lt;/span&gt; &lt;span class="pl-c1"&gt;20&lt;/span&gt;      &lt;span class="pl-c1"&gt;11&lt;/span&gt; &lt;span class="pl-c1"&gt;12&lt;/span&gt; &lt;span class="pl-c1"&gt;13&lt;/span&gt; &lt;span class="pl-c1"&gt;14&lt;/span&gt; &lt;span class="pl-c1"&gt;15&lt;/span&gt; &lt;span class="pl-c1"&gt;16&lt;/span&gt; &lt;span class="pl-c1"&gt;17&lt;/span&gt;       &lt;span class="pl-c1"&gt;9&lt;/span&gt; &lt;span class="pl-c1"&gt;10&lt;/span&gt; &lt;span class="pl-c1"&gt;11&lt;/span&gt; &lt;span class="pl-c1"&gt;12&lt;/span&gt; &lt;span class="pl-c1"&gt;13&lt;/span&gt; &lt;span class="pl-c1"&gt;14&lt;/span&gt; &lt;span class="pl-c1"&gt;15&lt;/span&gt;
&lt;span class="pl-c1"&gt;21&lt;/span&gt; &lt;span class="pl-c1"&gt;22&lt;/span&gt; &lt;span class="pl-c1"&gt;23&lt;/span&gt; &lt;span class="pl-c1"&gt;24&lt;/span&gt; &lt;span class="pl-c1"&gt;25&lt;/span&gt; &lt;span class="pl-c1"&gt;26&lt;/span&gt; &lt;span class="pl-c1"&gt;27&lt;/span&gt;      &lt;span class="pl-c1"&gt;18&lt;/span&gt; &lt;span class="pl-c1"&gt;19&lt;/span&gt; &lt;span class="pl-c1"&gt;20&lt;/span&gt; &lt;span class="pl-c1"&gt;21&lt;/span&gt; &lt;span class="pl-c1"&gt;22&lt;/span&gt; &lt;span class="pl-c1"&gt;23&lt;/span&gt; &lt;span class="pl-c1"&gt;24&lt;/span&gt;      &lt;span class="pl-c1"&gt;16&lt;/span&gt; &lt;span class="pl-c1"&gt;17&lt;/span&gt; &lt;span class="pl-c1"&gt;18&lt;/span&gt; &lt;span class="pl-c1"&gt;19&lt;/span&gt; &lt;span class="pl-c1"&gt;20&lt;/span&gt; &lt;span class="pl-c1"&gt;21&lt;/span&gt; &lt;span class="pl-c1"&gt;22&lt;/span&gt;
&lt;span class="pl-c1"&gt;28&lt;/span&gt; &lt;span class="pl-c1"&gt;29&lt;/span&gt; &lt;span class="pl-c1"&gt;30&lt;/span&gt; &lt;span class="pl-c1"&gt;31&lt;/span&gt;               &lt;span class="pl-c1"&gt;25&lt;/span&gt; &lt;span class="pl-c1"&gt;26&lt;/span&gt; &lt;span class="pl-c1"&gt;27&lt;/span&gt; &lt;span class="pl-c1"&gt;28&lt;/span&gt; &lt;span class="pl-c1"&gt;29&lt;/span&gt; &lt;span class="pl-c1"&gt;30&lt;/span&gt;         &lt;span class="pl-c1"&gt;23&lt;/span&gt; &lt;span class="pl-c1"&gt;24&lt;/span&gt; &lt;span class="pl-c1"&gt;25&lt;/span&gt; &lt;span class="pl-c1"&gt;26&lt;/span&gt; &lt;span class="pl-c1"&gt;27&lt;/span&gt; &lt;span class="pl-c1"&gt;28&lt;/span&gt; &lt;span class="pl-c1"&gt;29&lt;/span&gt;
                                                    &lt;span class="pl-c1"&gt;30&lt;/span&gt; &lt;span class="pl-c1"&gt;31&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h4&gt;&lt;a id="user-content-13-判断是否为闰年" class="anchor" aria-hidden="true" href="#13-判断是否为闰年"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;13 判断是否为闰年&lt;/h4&gt;
&lt;div class="highlight highlight-source-python"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;import&lt;/span&gt; calendar
&lt;span class="pl-k"&gt;from&lt;/span&gt; datetime &lt;span class="pl-k"&gt;import&lt;/span&gt; date

mydate &lt;span class="pl-k"&gt;=&lt;/span&gt; date.today()
is_leap &lt;span class="pl-k"&gt;=&lt;/span&gt; calendar.isleap(mydate.year)
print_leap_str &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;span class="pl-c1"&gt;%s&lt;/span&gt;年是闰年&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; &lt;span class="pl-k"&gt;if&lt;/span&gt; is_leap &lt;span class="pl-k"&gt;else&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;span class="pl-c1"&gt;%s&lt;/span&gt;年不是闰年&lt;span class="pl-cce"&gt;\n&lt;/span&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;
&lt;span class="pl-c1"&gt;print&lt;/span&gt;(print_leap_str &lt;span class="pl-k"&gt;%&lt;/span&gt; mydate.year)&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;打印结果：&lt;/p&gt;
&lt;div class="highlight highlight-source-python"&gt;&lt;pre&gt;&lt;span class="pl-c1"&gt;2019&lt;/span&gt;年不是闰年&lt;/pre&gt;&lt;/div&gt;
&lt;h4&gt;&lt;a id="user-content-3-月的日历图" class="anchor" aria-hidden="true" href="#3-月的日历图"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;3 月的日历图&lt;/h4&gt;
&lt;div class="highlight highlight-source-python"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;import&lt;/span&gt; calendar
&lt;span class="pl-k"&gt;from&lt;/span&gt; datetime &lt;span class="pl-k"&gt;import&lt;/span&gt; date

mydate &lt;span class="pl-k"&gt;=&lt;/span&gt; date.today()
month_calendar_str &lt;span class="pl-k"&gt;=&lt;/span&gt; calendar.month(mydate.year, mydate.month)

&lt;span class="pl-c1"&gt;print&lt;/span&gt;(&lt;span class="pl-s"&gt;f&lt;/span&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;span class="pl-c1"&gt;{&lt;/span&gt;mydate.year&lt;span class="pl-c1"&gt;}&lt;/span&gt;&lt;span class="pl-s"&gt;年-&lt;/span&gt;&lt;span class="pl-c1"&gt;{&lt;/span&gt;mydate.month&lt;span class="pl-c1"&gt;}&lt;/span&gt;&lt;span class="pl-s"&gt;月的日历图：&lt;/span&gt;&lt;span class="pl-c1"&gt;{&lt;/span&gt;month_calendar_str&lt;span class="pl-c1"&gt;}&lt;/span&gt;&lt;span class="pl-cce"&gt;\n&lt;/span&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;)&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;打印结果：&lt;/p&gt;
&lt;div class="highlight highlight-source-python"&gt;&lt;pre&gt;December &lt;span class="pl-c1"&gt;2019&lt;/span&gt;
Mo Tu We Th Fr Sa Su
                   &lt;span class="pl-c1"&gt;1&lt;/span&gt;
 &lt;span class="pl-c1"&gt;2&lt;/span&gt;  &lt;span class="pl-c1"&gt;3&lt;/span&gt;  &lt;span class="pl-c1"&gt;4&lt;/span&gt;  &lt;span class="pl-c1"&gt;5&lt;/span&gt;  &lt;span class="pl-c1"&gt;6&lt;/span&gt;  &lt;span class="pl-c1"&gt;7&lt;/span&gt;  &lt;span class="pl-c1"&gt;8&lt;/span&gt;
 &lt;span class="pl-c1"&gt;9&lt;/span&gt; &lt;span class="pl-c1"&gt;10&lt;/span&gt; &lt;span class="pl-c1"&gt;11&lt;/span&gt; &lt;span class="pl-c1"&gt;12&lt;/span&gt; &lt;span class="pl-c1"&gt;13&lt;/span&gt; &lt;span class="pl-c1"&gt;14&lt;/span&gt; &lt;span class="pl-c1"&gt;15&lt;/span&gt;
&lt;span class="pl-c1"&gt;16&lt;/span&gt; &lt;span class="pl-c1"&gt;17&lt;/span&gt; &lt;span class="pl-c1"&gt;18&lt;/span&gt; &lt;span class="pl-c1"&gt;19&lt;/span&gt; &lt;span class="pl-c1"&gt;20&lt;/span&gt; &lt;span class="pl-c1"&gt;21&lt;/span&gt; &lt;span class="pl-c1"&gt;22&lt;/span&gt;
&lt;span class="pl-c1"&gt;23&lt;/span&gt; &lt;span class="pl-c1"&gt;24&lt;/span&gt; &lt;span class="pl-c1"&gt;25&lt;/span&gt; &lt;span class="pl-c1"&gt;26&lt;/span&gt; &lt;span class="pl-c1"&gt;27&lt;/span&gt; &lt;span class="pl-c1"&gt;28&lt;/span&gt; &lt;span class="pl-c1"&gt;29&lt;/span&gt;
&lt;span class="pl-c1"&gt;30&lt;/span&gt; &lt;span class="pl-c1"&gt;31&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h4&gt;&lt;a id="user-content-14-月有几天" class="anchor" aria-hidden="true" href="#14-月有几天"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;14 月有几天&lt;/h4&gt;
&lt;div class="highlight highlight-source-python"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;import&lt;/span&gt; calendar
&lt;span class="pl-k"&gt;from&lt;/span&gt; datetime &lt;span class="pl-k"&gt;import&lt;/span&gt; date

mydate &lt;span class="pl-k"&gt;=&lt;/span&gt; date.today()
weekday, days &lt;span class="pl-k"&gt;=&lt;/span&gt; calendar.monthrange(mydate.year, mydate.month)
&lt;span class="pl-c1"&gt;print&lt;/span&gt;(&lt;span class="pl-s"&gt;f&lt;/span&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;span class="pl-c1"&gt;{&lt;/span&gt;mydate.year&lt;span class="pl-c1"&gt;}&lt;/span&gt;&lt;span class="pl-s"&gt;年-&lt;/span&gt;&lt;span class="pl-c1"&gt;{&lt;/span&gt;mydate.month&lt;span class="pl-c1"&gt;}&lt;/span&gt;&lt;span class="pl-s"&gt;月的第一天是那一周的第&lt;/span&gt;&lt;span class="pl-c1"&gt;{&lt;/span&gt;weekday&lt;span class="pl-c1"&gt;}&lt;/span&gt;&lt;span class="pl-s"&gt;天&lt;/span&gt;&lt;span class="pl-cce"&gt;\n&lt;/span&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;)
&lt;span class="pl-c1"&gt;print&lt;/span&gt;(&lt;span class="pl-s"&gt;f&lt;/span&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;span class="pl-c1"&gt;{&lt;/span&gt;mydate.year&lt;span class="pl-c1"&gt;}&lt;/span&gt;&lt;span class="pl-s"&gt;年-&lt;/span&gt;&lt;span class="pl-c1"&gt;{&lt;/span&gt;mydate.month&lt;span class="pl-c1"&gt;}&lt;/span&gt;&lt;span class="pl-s"&gt;月共有&lt;/span&gt;&lt;span class="pl-c1"&gt;{&lt;/span&gt;days&lt;span class="pl-c1"&gt;}&lt;/span&gt;&lt;span class="pl-s"&gt;天&lt;/span&gt;&lt;span class="pl-cce"&gt;\n&lt;/span&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;)&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;打印结果：&lt;/p&gt;
&lt;div class="highlight highlight-source-python"&gt;&lt;pre&gt;&lt;span class="pl-c1"&gt;2019&lt;/span&gt;年&lt;span class="pl-k"&gt;-&lt;/span&gt;&lt;span class="pl-c1"&gt;12&lt;/span&gt;月的第一天是那一周的第&lt;span class="pl-c1"&gt;6&lt;/span&gt;天

&lt;span class="pl-c1"&gt;2019&lt;/span&gt;年&lt;span class="pl-k"&gt;-&lt;/span&gt;&lt;span class="pl-c1"&gt;12&lt;/span&gt;月共有&lt;span class="pl-c1"&gt;31&lt;/span&gt;天&lt;/pre&gt;&lt;/div&gt;
&lt;h4&gt;&lt;a id="user-content-15-月第一天" class="anchor" aria-hidden="true" href="#15-月第一天"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;15 月第一天&lt;/h4&gt;
&lt;div class="highlight highlight-source-python"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;from&lt;/span&gt; datetime &lt;span class="pl-k"&gt;import&lt;/span&gt; date
mydate &lt;span class="pl-k"&gt;=&lt;/span&gt; date.today()
month_first_day &lt;span class="pl-k"&gt;=&lt;/span&gt; date(mydate.year, mydate.month, &lt;span class="pl-c1"&gt;1&lt;/span&gt;)
&lt;span class="pl-c1"&gt;print&lt;/span&gt;(&lt;span class="pl-s"&gt;f&lt;/span&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;span class="pl-s"&gt;当月第一天:&lt;/span&gt;&lt;span class="pl-c1"&gt;{&lt;/span&gt;month_first_day&lt;span class="pl-c1"&gt;}&lt;/span&gt;&lt;span class="pl-cce"&gt;\n&lt;/span&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;)&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;打印结果：&lt;/p&gt;
&lt;div class="highlight highlight-source-python"&gt;&lt;pre&gt;当月第一天:&lt;span class="pl-c1"&gt;2019&lt;/span&gt;&lt;span class="pl-k"&gt;-&lt;/span&gt;&lt;span class="pl-c1"&gt;12&lt;/span&gt;&lt;span class="pl-k"&gt;-&lt;/span&gt;&lt;span class="pl-c1"&gt;0&lt;span class="pl-ii"&gt;1&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h4&gt;&lt;a id="user-content-16-月最后一天" class="anchor" aria-hidden="true" href="#16-月最后一天"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;16 月最后一天&lt;/h4&gt;
&lt;div class="highlight highlight-source-python"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;from&lt;/span&gt; datetime &lt;span class="pl-k"&gt;import&lt;/span&gt; date
&lt;span class="pl-k"&gt;import&lt;/span&gt; calendar
mydate &lt;span class="pl-k"&gt;=&lt;/span&gt; date.today()
_, days &lt;span class="pl-k"&gt;=&lt;/span&gt; calendar.monthrange(mydate.year, mydate.month)
month_last_day &lt;span class="pl-k"&gt;=&lt;/span&gt; date(mydate.year, mydate.month, days)
&lt;span class="pl-c1"&gt;print&lt;/span&gt;(&lt;span class="pl-s"&gt;f&lt;/span&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;span class="pl-s"&gt;当月最后一天:&lt;/span&gt;&lt;span class="pl-c1"&gt;{&lt;/span&gt;month_last_day&lt;span class="pl-c1"&gt;}&lt;/span&gt;&lt;span class="pl-cce"&gt;\n&lt;/span&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;)&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;打印结果：&lt;/p&gt;
&lt;div class="highlight highlight-source-python"&gt;&lt;pre&gt;当月最后一天:&lt;span class="pl-c1"&gt;2019&lt;/span&gt;&lt;span class="pl-k"&gt;-&lt;/span&gt;&lt;span class="pl-c1"&gt;12&lt;/span&gt;&lt;span class="pl-k"&gt;-&lt;/span&gt;&lt;span class="pl-c1"&gt;31&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h4&gt;&lt;a id="user-content-17-获取当前时间" class="anchor" aria-hidden="true" href="#17-获取当前时间"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;17 获取当前时间&lt;/h4&gt;
&lt;div class="highlight highlight-source-python"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;from&lt;/span&gt; datetime &lt;span class="pl-k"&gt;import&lt;/span&gt; date, datetime
&lt;span class="pl-k"&gt;from&lt;/span&gt; time &lt;span class="pl-k"&gt;import&lt;/span&gt; localtime

today_date &lt;span class="pl-k"&gt;=&lt;/span&gt; date.today()
&lt;span class="pl-c1"&gt;print&lt;/span&gt;(today_date)  &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; 2019-12-22&lt;/span&gt;

today_time &lt;span class="pl-k"&gt;=&lt;/span&gt; datetime.today()
&lt;span class="pl-c1"&gt;print&lt;/span&gt;(today_time)  &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; 2019-12-22 18:02:33.398894&lt;/span&gt;

local_time &lt;span class="pl-k"&gt;=&lt;/span&gt; localtime()
&lt;span class="pl-c1"&gt;print&lt;/span&gt;(strftime(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;%Y-%m-&lt;span class="pl-c1"&gt;%d&lt;/span&gt; %H:%M:%S&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, local_time))  &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; 转化为定制的格式 2019-12-22 18:13:41&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h4&gt;&lt;a id="user-content-18-字符时间转时间" class="anchor" aria-hidden="true" href="#18-字符时间转时间"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;18 字符时间转时间&lt;/h4&gt;
&lt;div class="highlight highlight-source-python"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;from&lt;/span&gt; time &lt;span class="pl-k"&gt;import&lt;/span&gt; strptime

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; parse str time to struct time&lt;/span&gt;
struct_time &lt;span class="pl-k"&gt;=&lt;/span&gt; strptime(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;2019-12-22 10:10:08&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;%Y-%m-&lt;span class="pl-c1"&gt;%d&lt;/span&gt; %H:%M:%S&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
&lt;span class="pl-c1"&gt;print&lt;/span&gt;(struct_time) &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; struct_time类型就是time中的一个类&lt;/span&gt;

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; time.struct_time(tm_year=2019, tm_mon=12, tm_mday=22, tm_hour=10, tm_min=10, tm_sec=8, tm_wday=6, tm_yday=356, tm_isdst=-1)&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h4&gt;&lt;a id="user-content-19-时间转字符时间" class="anchor" aria-hidden="true" href="#19-时间转字符时间"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;19 时间转字符时间&lt;/h4&gt;
&lt;div class="highlight highlight-source-python"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;from&lt;/span&gt; time &lt;span class="pl-k"&gt;import&lt;/span&gt; strftime, strptime, localtime

In [&lt;span class="pl-c1"&gt;2&lt;/span&gt;]: &lt;span class="pl-c1"&gt;print&lt;/span&gt;(localtime()) &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt;这是输入的时间&lt;/span&gt;
Out[&lt;span class="pl-c1"&gt;2&lt;/span&gt;]: time.struct_time(&lt;span class="pl-v"&gt;tm_year&lt;/span&gt;&lt;span class="pl-k"&gt;=&lt;/span&gt;&lt;span class="pl-c1"&gt;2019&lt;/span&gt;, &lt;span class="pl-v"&gt;tm_mon&lt;/span&gt;&lt;span class="pl-k"&gt;=&lt;/span&gt;&lt;span class="pl-c1"&gt;12&lt;/span&gt;, &lt;span class="pl-v"&gt;tm_mday&lt;/span&gt;&lt;span class="pl-k"&gt;=&lt;/span&gt;&lt;span class="pl-c1"&gt;22&lt;/span&gt;, &lt;span class="pl-v"&gt;tm_hour&lt;/span&gt;&lt;span class="pl-k"&gt;=&lt;/span&gt;&lt;span class="pl-c1"&gt;18&lt;/span&gt;, &lt;span class="pl-v"&gt;tm_min&lt;/span&gt;&lt;span class="pl-k"&gt;=&lt;/span&gt;&lt;span class="pl-c1"&gt;24&lt;/span&gt;, &lt;span class="pl-v"&gt;tm_sec&lt;/span&gt;&lt;span class="pl-k"&gt;=&lt;/span&gt;&lt;span class="pl-c1"&gt;56&lt;/span&gt;, &lt;span class="pl-v"&gt;tm_wday&lt;/span&gt;&lt;span class="pl-k"&gt;=&lt;/span&gt;&lt;span class="pl-c1"&gt;6&lt;/span&gt;, &lt;span class="pl-v"&gt;tm_yday&lt;/span&gt;&lt;span class="pl-k"&gt;=&lt;/span&gt;&lt;span class="pl-c1"&gt;356&lt;/span&gt;, &lt;span class="pl-v"&gt;tm_isdst&lt;/span&gt;&lt;span class="pl-k"&gt;=&lt;/span&gt;&lt;span class="pl-c1"&gt;0&lt;/span&gt;)

&lt;span class="pl-c1"&gt;print&lt;/span&gt;(strftime(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;%m-&lt;span class="pl-c1"&gt;%d&lt;/span&gt;-%Y %H:%M:%S&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, localtime()))  &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; 转化为定制的格式&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; 这是字符串表示的时间：   12-22-2019 18:26:21&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h4&gt;&lt;a id="user-content-20-默认启动主线程" class="anchor" aria-hidden="true" href="#20-默认启动主线程"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;20 默认启动主线程&lt;/h4&gt;
&lt;p&gt;一般的，程序默认执行只在一个线程，这个线程称为主线程，例子演示如下：&lt;/p&gt;
&lt;p&gt;导入线程相关的模块 &lt;code&gt;threading&lt;/code&gt;:&lt;/p&gt;
&lt;div class="highlight highlight-source-python"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;import&lt;/span&gt; threading&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;threading的类方法 &lt;code&gt;current_thread()&lt;/code&gt;返回当前线程：&lt;/p&gt;
&lt;div class="highlight highlight-source-python"&gt;&lt;pre&gt;t &lt;span class="pl-k"&gt;=&lt;/span&gt; threading.current_thread()
&lt;span class="pl-c1"&gt;print&lt;/span&gt;(t) &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; &amp;lt;_MainThread(MainThread, started 139908235814720)&amp;gt;&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;所以，验证了程序默认是在&lt;code&gt;MainThead&lt;/code&gt;中执行。&lt;/p&gt;
&lt;p&gt;&lt;code&gt;t.getName()&lt;/code&gt;获得这个线程的名字，其他常用方法，&lt;code&gt;getName()&lt;/code&gt;获得线程&lt;code&gt;id&lt;/code&gt;,&lt;code&gt;isAlive()&lt;/code&gt;判断线程是否存活等。&lt;/p&gt;
&lt;div class="highlight highlight-source-python"&gt;&lt;pre&gt;&lt;span class="pl-c1"&gt;print&lt;/span&gt;(t.getName()) &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; MainThread&lt;/span&gt;
&lt;span class="pl-c1"&gt;print&lt;/span&gt;(t.ident) &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; 139908235814720&lt;/span&gt;
&lt;span class="pl-c1"&gt;print&lt;/span&gt;(t.isAlive()) &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; True&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;以上这些仅是介绍多线程的&lt;code&gt;背景知识&lt;/code&gt;，因为到目前为止，我们有且仅有一个"干活"的主线程&lt;/p&gt;
&lt;h4&gt;&lt;a id="user-content-21-创建线程" class="anchor" aria-hidden="true" href="#21-创建线程"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;21 创建线程&lt;/h4&gt;
&lt;p&gt;创建一个线程：&lt;/p&gt;
&lt;div class="highlight highlight-source-python"&gt;&lt;pre&gt;my_thread &lt;span class="pl-k"&gt;=&lt;/span&gt; threading.Thread()&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;创建一个名称为&lt;code&gt;my_thread&lt;/code&gt;的线程：&lt;/p&gt;
&lt;div class="highlight highlight-source-python"&gt;&lt;pre&gt;my_thread &lt;span class="pl-k"&gt;=&lt;/span&gt; threading.Thread(&lt;span class="pl-v"&gt;name&lt;/span&gt;&lt;span class="pl-k"&gt;=&lt;/span&gt;&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;my_thread&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;)&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;创建线程的目的是告诉它帮助我们做些什么，做些什么通过参数&lt;code&gt;target&lt;/code&gt;传入，参数类型为&lt;code&gt;callable&lt;/code&gt;，函数就是可调用的：&lt;/p&gt;
&lt;div class="highlight highlight-source-python"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;def&lt;/span&gt; &lt;span class="pl-en"&gt;print_i&lt;/span&gt;(&lt;span class="pl-smi"&gt;i&lt;/span&gt;):
    &lt;span class="pl-c1"&gt;print&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;打印i:&lt;span class="pl-c1"&gt;%d&lt;/span&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;&lt;span class="pl-k"&gt;%&lt;/span&gt;(i,))
my_thread &lt;span class="pl-k"&gt;=&lt;/span&gt; threading.Thread(&lt;span class="pl-v"&gt;target&lt;/span&gt;&lt;span class="pl-k"&gt;=&lt;/span&gt;print_i,&lt;span class="pl-v"&gt;args&lt;/span&gt;&lt;span class="pl-k"&gt;=&lt;/span&gt;(&lt;span class="pl-c1"&gt;1&lt;/span&gt;,))&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;code&gt;my_thread&lt;/code&gt;线程已经全副武装，但是我们得按下发射按钮，启动start()，它才开始真正起飞。&lt;/p&gt;
&lt;div class="highlight highlight-source-python"&gt;&lt;pre&gt;my_thread().start()&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;打印结果如下，其中&lt;code&gt;args&lt;/code&gt;指定函数&lt;code&gt;print_i&lt;/code&gt;需要的参数i，类型为元祖。&lt;/p&gt;
&lt;div class="highlight highlight-source-python"&gt;&lt;pre&gt;打印i:&lt;span class="pl-c1"&gt;1&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;至此，多线程相关的核心知识点，已经总结完毕。但是，仅仅知道这些，还不够！光纸上谈兵，当然远远不够。&lt;/p&gt;
&lt;p&gt;接下来，聊聊应用多线程编程，最本质的一些东西。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;3 交替获得CPU时间片&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;为了更好解释，假定计算机是单核的，尽管对于&lt;code&gt;cpython&lt;/code&gt;，这个假定有些多余。&lt;/p&gt;
&lt;p&gt;开辟3个线程，装到&lt;code&gt;threads&lt;/code&gt;中:&lt;/p&gt;
&lt;div class="highlight highlight-source-python"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;import&lt;/span&gt; time
&lt;span class="pl-k"&gt;from&lt;/span&gt; datetime &lt;span class="pl-k"&gt;import&lt;/span&gt; datetime
&lt;span class="pl-k"&gt;import&lt;/span&gt; threading


&lt;span class="pl-k"&gt;def&lt;/span&gt; &lt;span class="pl-en"&gt;print_time&lt;/span&gt;():
    &lt;span class="pl-k"&gt;for&lt;/span&gt; _ &lt;span class="pl-k"&gt;in&lt;/span&gt; &lt;span class="pl-c1"&gt;range&lt;/span&gt;(&lt;span class="pl-c1"&gt;5&lt;/span&gt;): &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; 在每个线程中打印5次&lt;/span&gt;
        time.sleep(&lt;span class="pl-c1"&gt;0.1&lt;/span&gt;) &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; 模拟打印前的相关处理逻辑&lt;/span&gt;
        &lt;span class="pl-c1"&gt;print&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;当前线程&lt;span class="pl-c1"&gt;%s&lt;/span&gt;,打印结束时间为:&lt;span class="pl-c1"&gt;%s&lt;/span&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;&lt;span class="pl-k"&gt;%&lt;/span&gt;(threading.current_thread().getName(),datetime.today()))


threads &lt;span class="pl-k"&gt;=&lt;/span&gt; [threading.Thread(&lt;span class="pl-v"&gt;name&lt;/span&gt;&lt;span class="pl-k"&gt;=&lt;/span&gt;&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;t&lt;span class="pl-c1"&gt;%d&lt;/span&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;&lt;span class="pl-k"&gt;%&lt;/span&gt;(i,),&lt;span class="pl-v"&gt;target&lt;/span&gt;&lt;span class="pl-k"&gt;=&lt;/span&gt;print_time) &lt;span class="pl-k"&gt;for&lt;/span&gt; i &lt;span class="pl-k"&gt;in&lt;/span&gt; &lt;span class="pl-c1"&gt;range&lt;/span&gt;(&lt;span class="pl-c1"&gt;3&lt;/span&gt;)]&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;启动3个线程：&lt;/p&gt;
&lt;div class="highlight highlight-source-python"&gt;&lt;pre&gt;[t.start() &lt;span class="pl-k"&gt;for&lt;/span&gt; t &lt;span class="pl-k"&gt;in&lt;/span&gt; threads]&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;打印结果如下，&lt;code&gt;t0&lt;/code&gt;,&lt;code&gt;t1&lt;/code&gt;,&lt;code&gt;t2&lt;/code&gt;三个线程，根据操作系统的调度算法，轮询获得CPU时间片，注意观察，&lt;code&gt;t2&lt;/code&gt;线程可能被连续调度，从而获得时间片。&lt;/p&gt;
&lt;div class="highlight highlight-source-python"&gt;&lt;pre&gt;当前线程t0,打印结束时间为:&lt;span class="pl-c1"&gt;2020&lt;/span&gt;&lt;span class="pl-k"&gt;-&lt;/span&gt;&lt;span class="pl-c1"&gt;0&lt;span class="pl-ii"&gt;1&lt;/span&gt;&lt;/span&gt;&lt;span class="pl-k"&gt;-&lt;/span&gt;&lt;span class="pl-c1"&gt;12&lt;/span&gt; &lt;span class="pl-c1"&gt;0&lt;span class="pl-ii"&gt;2&lt;/span&gt;&lt;/span&gt;:&lt;span class="pl-c1"&gt;27&lt;/span&gt;:&lt;span class="pl-c1"&gt;15.705235&lt;/span&gt;
当前线程t1,打印结束时间为:&lt;span class="pl-c1"&gt;2020&lt;/span&gt;&lt;span class="pl-k"&gt;-&lt;/span&gt;&lt;span class="pl-c1"&gt;0&lt;span class="pl-ii"&gt;1&lt;/span&gt;&lt;/span&gt;&lt;span class="pl-k"&gt;-&lt;/span&gt;&lt;span class="pl-c1"&gt;12&lt;/span&gt; &lt;span class="pl-c1"&gt;0&lt;span class="pl-ii"&gt;2&lt;/span&gt;&lt;/span&gt;:&lt;span class="pl-c1"&gt;27&lt;/span&gt;:&lt;span class="pl-c1"&gt;15.705402&lt;/span&gt;
当前线程t2,打印结束时间为:&lt;span class="pl-c1"&gt;2020&lt;/span&gt;&lt;span class="pl-k"&gt;-&lt;/span&gt;&lt;span class="pl-c1"&gt;0&lt;span class="pl-ii"&gt;1&lt;/span&gt;&lt;/span&gt;&lt;span class="pl-k"&gt;-&lt;/span&gt;&lt;span class="pl-c1"&gt;12&lt;/span&gt; &lt;span class="pl-c1"&gt;0&lt;span class="pl-ii"&gt;2&lt;/span&gt;&lt;/span&gt;:&lt;span class="pl-c1"&gt;27&lt;/span&gt;:&lt;span class="pl-c1"&gt;15.705687&lt;/span&gt;
当前线程t0,打印结束时间为:&lt;span class="pl-c1"&gt;2020&lt;/span&gt;&lt;span class="pl-k"&gt;-&lt;/span&gt;&lt;span class="pl-c1"&gt;0&lt;span class="pl-ii"&gt;1&lt;/span&gt;&lt;/span&gt;&lt;span class="pl-k"&gt;-&lt;/span&gt;&lt;span class="pl-c1"&gt;12&lt;/span&gt; &lt;span class="pl-c1"&gt;0&lt;span class="pl-ii"&gt;2&lt;/span&gt;&lt;/span&gt;:&lt;span class="pl-c1"&gt;27&lt;/span&gt;:&lt;span class="pl-c1"&gt;15.805767&lt;/span&gt;
当前线程t1,打印结束时间为:&lt;span class="pl-c1"&gt;2020&lt;/span&gt;&lt;span class="pl-k"&gt;-&lt;/span&gt;&lt;span class="pl-c1"&gt;0&lt;span class="pl-ii"&gt;1&lt;/span&gt;&lt;/span&gt;&lt;span class="pl-k"&gt;-&lt;/span&gt;&lt;span class="pl-c1"&gt;12&lt;/span&gt; &lt;span class="pl-c1"&gt;0&lt;span class="pl-ii"&gt;2&lt;/span&gt;&lt;/span&gt;:&lt;span class="pl-c1"&gt;27&lt;/span&gt;:&lt;span class="pl-c1"&gt;15.805886&lt;/span&gt;
当前线程t2,打印结束时间为:&lt;span class="pl-c1"&gt;2020&lt;/span&gt;&lt;span class="pl-k"&gt;-&lt;/span&gt;&lt;span class="pl-c1"&gt;0&lt;span class="pl-ii"&gt;1&lt;/span&gt;&lt;/span&gt;&lt;span class="pl-k"&gt;-&lt;/span&gt;&lt;span class="pl-c1"&gt;12&lt;/span&gt; &lt;span class="pl-c1"&gt;0&lt;span class="pl-ii"&gt;2&lt;/span&gt;&lt;/span&gt;:&lt;span class="pl-c1"&gt;27&lt;/span&gt;:&lt;span class="pl-c1"&gt;15.806044&lt;/span&gt;
当前线程t0,打印结束时间为:&lt;span class="pl-c1"&gt;2020&lt;/span&gt;&lt;span class="pl-k"&gt;-&lt;/span&gt;&lt;span class="pl-c1"&gt;0&lt;span class="pl-ii"&gt;1&lt;/span&gt;&lt;/span&gt;&lt;span class="pl-k"&gt;-&lt;/span&gt;&lt;span class="pl-c1"&gt;12&lt;/span&gt; &lt;span class="pl-c1"&gt;0&lt;span class="pl-ii"&gt;2&lt;/span&gt;&lt;/span&gt;:&lt;span class="pl-c1"&gt;27&lt;/span&gt;:&lt;span class="pl-c1"&gt;15.906200&lt;/span&gt;
当前线程t2,打印结束时间为:&lt;span class="pl-c1"&gt;2020&lt;/span&gt;&lt;span class="pl-k"&gt;-&lt;/span&gt;&lt;span class="pl-c1"&gt;0&lt;span class="pl-ii"&gt;1&lt;/span&gt;&lt;/span&gt;&lt;span class="pl-k"&gt;-&lt;/span&gt;&lt;span class="pl-c1"&gt;12&lt;/span&gt; &lt;span class="pl-c1"&gt;0&lt;span class="pl-ii"&gt;2&lt;/span&gt;&lt;/span&gt;:&lt;span class="pl-c1"&gt;27&lt;/span&gt;:&lt;span class="pl-c1"&gt;15.906320&lt;/span&gt;
当前线程t1,打印结束时间为:&lt;span class="pl-c1"&gt;2020&lt;/span&gt;&lt;span class="pl-k"&gt;-&lt;/span&gt;&lt;span class="pl-c1"&gt;0&lt;span class="pl-ii"&gt;1&lt;/span&gt;&lt;/span&gt;&lt;span class="pl-k"&gt;-&lt;/span&gt;&lt;span class="pl-c1"&gt;12&lt;/span&gt; &lt;span class="pl-c1"&gt;0&lt;span class="pl-ii"&gt;2&lt;/span&gt;&lt;/span&gt;:&lt;span class="pl-c1"&gt;27&lt;/span&gt;:&lt;span class="pl-c1"&gt;15.906433&lt;/span&gt;
当前线程t0,打印结束时间为:&lt;span class="pl-c1"&gt;2020&lt;/span&gt;&lt;span class="pl-k"&gt;-&lt;/span&gt;&lt;span class="pl-c1"&gt;0&lt;span class="pl-ii"&gt;1&lt;/span&gt;&lt;/span&gt;&lt;span class="pl-k"&gt;-&lt;/span&gt;&lt;span class="pl-c1"&gt;12&lt;/span&gt; &lt;span class="pl-c1"&gt;0&lt;span class="pl-ii"&gt;2&lt;/span&gt;&lt;/span&gt;:&lt;span class="pl-c1"&gt;27&lt;/span&gt;:&lt;span class="pl-c1"&gt;16.006581&lt;/span&gt;
当前线程t1,打印结束时间为:&lt;span class="pl-c1"&gt;2020&lt;/span&gt;&lt;span class="pl-k"&gt;-&lt;/span&gt;&lt;span class="pl-c1"&gt;0&lt;span class="pl-ii"&gt;1&lt;/span&gt;&lt;/span&gt;&lt;span class="pl-k"&gt;-&lt;/span&gt;&lt;span class="pl-c1"&gt;12&lt;/span&gt; &lt;span class="pl-c1"&gt;0&lt;span class="pl-ii"&gt;2&lt;/span&gt;&lt;/span&gt;:&lt;span class="pl-c1"&gt;27&lt;/span&gt;:&lt;span class="pl-c1"&gt;16.006766&lt;/span&gt;
当前线程t2,打印结束时间为:&lt;span class="pl-c1"&gt;2020&lt;/span&gt;&lt;span class="pl-k"&gt;-&lt;/span&gt;&lt;span class="pl-c1"&gt;0&lt;span class="pl-ii"&gt;1&lt;/span&gt;&lt;/span&gt;&lt;span class="pl-k"&gt;-&lt;/span&gt;&lt;span class="pl-c1"&gt;12&lt;/span&gt; &lt;span class="pl-c1"&gt;0&lt;span class="pl-ii"&gt;2&lt;/span&gt;&lt;/span&gt;:&lt;span class="pl-c1"&gt;27&lt;/span&gt;:&lt;span class="pl-c1"&gt;16.007006&lt;/span&gt;
当前线程t2,打印结束时间为:&lt;span class="pl-c1"&gt;2020&lt;/span&gt;&lt;span class="pl-k"&gt;-&lt;/span&gt;&lt;span class="pl-c1"&gt;0&lt;span class="pl-ii"&gt;1&lt;/span&gt;&lt;/span&gt;&lt;span class="pl-k"&gt;-&lt;/span&gt;&lt;span class="pl-c1"&gt;12&lt;/span&gt; &lt;span class="pl-c1"&gt;0&lt;span class="pl-ii"&gt;2&lt;/span&gt;&lt;/span&gt;:&lt;span class="pl-c1"&gt;27&lt;/span&gt;:&lt;span class="pl-c1"&gt;16.107564&lt;/span&gt;
当前线程t0,打印结束时间为:&lt;span class="pl-c1"&gt;2020&lt;/span&gt;&lt;span class="pl-k"&gt;-&lt;/span&gt;&lt;span class="pl-c1"&gt;0&lt;span class="pl-ii"&gt;1&lt;/span&gt;&lt;/span&gt;&lt;span class="pl-k"&gt;-&lt;/span&gt;&lt;span class="pl-c1"&gt;12&lt;/span&gt; &lt;span class="pl-c1"&gt;0&lt;span class="pl-ii"&gt;2&lt;/span&gt;&lt;/span&gt;:&lt;span class="pl-c1"&gt;27&lt;/span&gt;:&lt;span class="pl-c1"&gt;16.107290&lt;/span&gt;
当前线程t1,打印结束时间为:&lt;span class="pl-c1"&gt;2020&lt;/span&gt;&lt;span class="pl-k"&gt;-&lt;/span&gt;&lt;span class="pl-c1"&gt;0&lt;span class="pl-ii"&gt;1&lt;/span&gt;&lt;/span&gt;&lt;span class="pl-k"&gt;-&lt;/span&gt;&lt;span class="pl-c1"&gt;12&lt;/span&gt; &lt;span class="pl-c1"&gt;0&lt;span class="pl-ii"&gt;2&lt;/span&gt;&lt;/span&gt;:&lt;span class="pl-c1"&gt;27&lt;/span&gt;:&lt;span class="pl-c1"&gt;16.107741&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h4&gt;&lt;a id="user-content-22-多线程抢夺同一个变量" class="anchor" aria-hidden="true" href="#22-多线程抢夺同一个变量"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;22 多线程抢夺同一个变量&lt;/h4&gt;
&lt;p&gt;多线程编程，存在抢夺同一个变量的问题。&lt;/p&gt;
&lt;p&gt;比如下面例子，创建的10个线程同时竞争全局变量&lt;code&gt;a&lt;/code&gt;:
​&lt;/p&gt;
&lt;div class="highlight highlight-source-python"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;import&lt;/span&gt; threading


a &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;0&lt;/span&gt;
&lt;span class="pl-k"&gt;def&lt;/span&gt; &lt;span class="pl-en"&gt;add1&lt;/span&gt;():
    &lt;span class="pl-k"&gt;global&lt;/span&gt; a    
    a &lt;span class="pl-k"&gt;+=&lt;/span&gt; &lt;span class="pl-c1"&gt;1&lt;/span&gt;
    &lt;span class="pl-c1"&gt;print&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;span class="pl-c1"&gt;%s&lt;/span&gt;  adds a to 1: &lt;span class="pl-c1"&gt;%d&lt;/span&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;&lt;span class="pl-k"&gt;%&lt;/span&gt;(threading.current_thread().getName(),a))
    
threads &lt;span class="pl-k"&gt;=&lt;/span&gt; [threading.Thread(&lt;span class="pl-v"&gt;name&lt;/span&gt;&lt;span class="pl-k"&gt;=&lt;/span&gt;&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;t&lt;span class="pl-c1"&gt;%d&lt;/span&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;&lt;span class="pl-k"&gt;%&lt;/span&gt;(i,),&lt;span class="pl-v"&gt;target&lt;/span&gt;&lt;span class="pl-k"&gt;=&lt;/span&gt;add1) &lt;span class="pl-k"&gt;for&lt;/span&gt; i &lt;span class="pl-k"&gt;in&lt;/span&gt; &lt;span class="pl-c1"&gt;range&lt;/span&gt;(&lt;span class="pl-c1"&gt;10&lt;/span&gt;)]
[t.start() &lt;span class="pl-k"&gt;for&lt;/span&gt; t &lt;span class="pl-k"&gt;in&lt;/span&gt; threads]&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;执行结果：&lt;/p&gt;
&lt;div class="highlight highlight-source-python"&gt;&lt;pre&gt;t0  adds a to &lt;span class="pl-c1"&gt;1&lt;/span&gt;: &lt;span class="pl-c1"&gt;1&lt;/span&gt;
t1  adds a to &lt;span class="pl-c1"&gt;1&lt;/span&gt;: &lt;span class="pl-c1"&gt;2&lt;/span&gt;
t2  adds a to &lt;span class="pl-c1"&gt;1&lt;/span&gt;: &lt;span class="pl-c1"&gt;3&lt;/span&gt;
t3  adds a to &lt;span class="pl-c1"&gt;1&lt;/span&gt;: &lt;span class="pl-c1"&gt;4&lt;/span&gt;
t4  adds a to &lt;span class="pl-c1"&gt;1&lt;/span&gt;: &lt;span class="pl-c1"&gt;5&lt;/span&gt;
t5  adds a to &lt;span class="pl-c1"&gt;1&lt;/span&gt;: &lt;span class="pl-c1"&gt;6&lt;/span&gt;
t6  adds a to &lt;span class="pl-c1"&gt;1&lt;/span&gt;: &lt;span class="pl-c1"&gt;7&lt;/span&gt;
t7  adds a to &lt;span class="pl-c1"&gt;1&lt;/span&gt;: &lt;span class="pl-c1"&gt;8&lt;/span&gt;
t8  adds a to &lt;span class="pl-c1"&gt;1&lt;/span&gt;: &lt;span class="pl-c1"&gt;9&lt;/span&gt;
t9  adds a to &lt;span class="pl-c1"&gt;1&lt;/span&gt;: &lt;span class="pl-c1"&gt;10&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;结果一切正常，每个线程执行一次，把&lt;code&gt;a&lt;/code&gt;的值加1，最后&lt;code&gt;a&lt;/code&gt; 变为10，一切正常。&lt;/p&gt;
&lt;p&gt;运行上面代码十几遍，一切也都正常。&lt;/p&gt;
&lt;p&gt;所以，我们能下结论：这段代码是线程安全的吗？&lt;/p&gt;
&lt;p&gt;NO！&lt;/p&gt;
&lt;p&gt;多线程中，只要存在同时读取和修改一个全局变量的情况，如果不采取其他措施，就一定不是线程安全的。&lt;/p&gt;
&lt;p&gt;尽管，有时，某些情况的资源竞争，暴露出问题的概率&lt;code&gt;极低极低&lt;/code&gt;：&lt;/p&gt;
&lt;p&gt;本例中，如果线程0 在修改a后，其他某些线程还是get到的是没有修改前的值，就会暴露问题。&lt;/p&gt;
&lt;p&gt;但是在本例中，&lt;code&gt;a = a + 1&lt;/code&gt;这种修改操作，花费的时间太短了，短到我们无法想象。所以，线程间轮询执行时，都能get到最新的a值。所以，暴露问题的概率就变得微乎其微。&lt;/p&gt;
&lt;h4&gt;&lt;a id="user-content-23-代码稍作改动叫问题暴露出来" class="anchor" aria-hidden="true" href="#23-代码稍作改动叫问题暴露出来"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;23 代码稍作改动，叫问题暴露出来&lt;/h4&gt;
&lt;p&gt;只要弄明白问题暴露的原因，叫问题出现还是不困难的。&lt;/p&gt;
&lt;p&gt;想象数据库的写入操作，一般需要耗费我们可以感知的时间。&lt;/p&gt;
&lt;p&gt;为了模拟这个写入动作，简化期间，我们只需要延长修改变量&lt;code&gt;a&lt;/code&gt;的时间，问题很容易就会还原出来。&lt;/p&gt;
&lt;div class="highlight highlight-source-python"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;import&lt;/span&gt; threading
&lt;span class="pl-k"&gt;import&lt;/span&gt; time


a &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;0&lt;/span&gt;
&lt;span class="pl-k"&gt;def&lt;/span&gt; &lt;span class="pl-en"&gt;add1&lt;/span&gt;():
    &lt;span class="pl-k"&gt;global&lt;/span&gt; a    
    tmp &lt;span class="pl-k"&gt;=&lt;/span&gt; a &lt;span class="pl-k"&gt;+&lt;/span&gt; &lt;span class="pl-c1"&gt;1&lt;/span&gt;
    time.sleep(&lt;span class="pl-c1"&gt;0.2&lt;/span&gt;) &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; 延时0.2秒，模拟写入所需时间&lt;/span&gt;
    a &lt;span class="pl-k"&gt;=&lt;/span&gt; tmp
    &lt;span class="pl-c1"&gt;print&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;span class="pl-c1"&gt;%s&lt;/span&gt;  adds a to 1: &lt;span class="pl-c1"&gt;%d&lt;/span&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;&lt;span class="pl-k"&gt;%&lt;/span&gt;(threading.current_thread().getName(),a))
    
threads &lt;span class="pl-k"&gt;=&lt;/span&gt; [threading.Thread(&lt;span class="pl-v"&gt;name&lt;/span&gt;&lt;span class="pl-k"&gt;=&lt;/span&gt;&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;t&lt;span class="pl-c1"&gt;%d&lt;/span&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;&lt;span class="pl-k"&gt;%&lt;/span&gt;(i,),&lt;span class="pl-v"&gt;target&lt;/span&gt;&lt;span class="pl-k"&gt;=&lt;/span&gt;add1) &lt;span class="pl-k"&gt;for&lt;/span&gt; i &lt;span class="pl-k"&gt;in&lt;/span&gt; &lt;span class="pl-c1"&gt;range&lt;/span&gt;(&lt;span class="pl-c1"&gt;10&lt;/span&gt;)]
[t.start() &lt;span class="pl-k"&gt;for&lt;/span&gt; t &lt;span class="pl-k"&gt;in&lt;/span&gt; threads]&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;重新运行代码，只需一次，问题立马完全暴露，结果如下：&lt;/p&gt;
&lt;div class="highlight highlight-source-python"&gt;&lt;pre&gt;t0  adds a to &lt;span class="pl-c1"&gt;1&lt;/span&gt;: &lt;span class="pl-c1"&gt;1&lt;/span&gt;
t1  adds a to &lt;span class="pl-c1"&gt;1&lt;/span&gt;: &lt;span class="pl-c1"&gt;1&lt;/span&gt;
t2  adds a to &lt;span class="pl-c1"&gt;1&lt;/span&gt;: &lt;span class="pl-c1"&gt;1&lt;/span&gt;
t3  adds a to &lt;span class="pl-c1"&gt;1&lt;/span&gt;: &lt;span class="pl-c1"&gt;1&lt;/span&gt;
t4  adds a to &lt;span class="pl-c1"&gt;1&lt;/span&gt;: &lt;span class="pl-c1"&gt;1&lt;/span&gt;
t5  adds a to &lt;span class="pl-c1"&gt;1&lt;/span&gt;: &lt;span class="pl-c1"&gt;1&lt;/span&gt;
t7  adds a to &lt;span class="pl-c1"&gt;1&lt;/span&gt;: &lt;span class="pl-c1"&gt;1&lt;/span&gt;
t6  adds a to &lt;span class="pl-c1"&gt;1&lt;/span&gt;: &lt;span class="pl-c1"&gt;1&lt;/span&gt;
t8  adds a to &lt;span class="pl-c1"&gt;1&lt;/span&gt;: &lt;span class="pl-c1"&gt;1&lt;/span&gt;
t9  adds a to &lt;span class="pl-c1"&gt;1&lt;/span&gt;: &lt;span class="pl-c1"&gt;1&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;看到，10个线程全部运行后，&lt;code&gt;a&lt;/code&gt;的值只相当于一个线程执行的结果。&lt;/p&gt;
&lt;p&gt;下面分析，为什么会出现上面的结果：&lt;/p&gt;
&lt;p&gt;这是一个很有说服力的例子，因为在修改a前，有0.2秒的休眠时间，某个线程延时后，CPU立即分配计算资源给其他线程。直到分配给所有线程后，根据结果反映出，0.2秒的休眠时长还没耗尽，这样每个线程get到的a值都是0，所以才出现上面的结果。&lt;/p&gt;
&lt;p&gt;以上最核心的三行代码：&lt;/p&gt;
&lt;div class="highlight highlight-source-python"&gt;&lt;pre&gt;tmp &lt;span class="pl-k"&gt;=&lt;/span&gt; a &lt;span class="pl-k"&gt;+&lt;/span&gt; &lt;span class="pl-c1"&gt;1&lt;/span&gt;
time.sleep(&lt;span class="pl-c1"&gt;0.2&lt;/span&gt;) &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; 延时0.2秒，模拟写入所需时间&lt;/span&gt;
a &lt;span class="pl-k"&gt;=&lt;/span&gt; tmp&lt;/pre&gt;&lt;/div&gt;
&lt;h4&gt;&lt;a id="user-content-24-加上一把锁避免以上情况出现" class="anchor" aria-hidden="true" href="#24-加上一把锁避免以上情况出现"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;24 加上一把锁，避免以上情况出现&lt;/h4&gt;
&lt;p&gt;知道问题出现的原因后，要想修复问题，也没那么复杂。&lt;/p&gt;
&lt;p&gt;通过python中提供的锁机制，某段代码只能单线程执行时，上锁，其他线程等待，直到释放锁后，其他线程再争锁，执行代码，释放锁，重复以上。&lt;/p&gt;
&lt;p&gt;创建一把锁&lt;code&gt;locka&lt;/code&gt;:&lt;/p&gt;
&lt;div class="highlight highlight-source-python"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;import&lt;/span&gt; threading
&lt;span class="pl-k"&gt;import&lt;/span&gt; time


locka &lt;span class="pl-k"&gt;=&lt;/span&gt; threading.Lock()&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;通过 &lt;code&gt;locka.acquire()&lt;/code&gt; 获得锁，通过&lt;code&gt;locka.release()&lt;/code&gt;释放锁，它们之间的这些代码，只能单线程执行。&lt;/p&gt;
&lt;div class="highlight highlight-source-python"&gt;&lt;pre&gt;a &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;0&lt;/span&gt;
&lt;span class="pl-k"&gt;def&lt;/span&gt; &lt;span class="pl-en"&gt;add1&lt;/span&gt;():
    &lt;span class="pl-k"&gt;global&lt;/span&gt; a    
    &lt;span class="pl-k"&gt;try&lt;/span&gt;:
        locka.acquire() &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; 获得锁&lt;/span&gt;
        tmp &lt;span class="pl-k"&gt;=&lt;/span&gt; a &lt;span class="pl-k"&gt;+&lt;/span&gt; &lt;span class="pl-c1"&gt;1&lt;/span&gt;
        time.sleep(&lt;span class="pl-c1"&gt;0.2&lt;/span&gt;) &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; 延时0.2秒，模拟写入所需时间&lt;/span&gt;
        a &lt;span class="pl-k"&gt;=&lt;/span&gt; tmp
    &lt;span class="pl-k"&gt;finally&lt;/span&gt;:
        locka.release() &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; 释放锁&lt;/span&gt;
    &lt;span class="pl-c1"&gt;print&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;span class="pl-c1"&gt;%s&lt;/span&gt;  adds a to 1: &lt;span class="pl-c1"&gt;%d&lt;/span&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;&lt;span class="pl-k"&gt;%&lt;/span&gt;(threading.current_thread().getName(),a))
    
threads &lt;span class="pl-k"&gt;=&lt;/span&gt; [threading.Thread(&lt;span class="pl-v"&gt;name&lt;/span&gt;&lt;span class="pl-k"&gt;=&lt;/span&gt;&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;t&lt;span class="pl-c1"&gt;%d&lt;/span&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;&lt;span class="pl-k"&gt;%&lt;/span&gt;(i,),&lt;span class="pl-v"&gt;target&lt;/span&gt;&lt;span class="pl-k"&gt;=&lt;/span&gt;add1) &lt;span class="pl-k"&gt;for&lt;/span&gt; i &lt;span class="pl-k"&gt;in&lt;/span&gt; &lt;span class="pl-c1"&gt;range&lt;/span&gt;(&lt;span class="pl-c1"&gt;10&lt;/span&gt;)]
[t.start() &lt;span class="pl-k"&gt;for&lt;/span&gt; t &lt;span class="pl-k"&gt;in&lt;/span&gt; threads]&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;执行结果如下：&lt;/p&gt;
&lt;div class="highlight highlight-source-python"&gt;&lt;pre&gt;t0  adds a to &lt;span class="pl-c1"&gt;1&lt;/span&gt;: &lt;span class="pl-c1"&gt;1&lt;/span&gt;
t1  adds a to &lt;span class="pl-c1"&gt;1&lt;/span&gt;: &lt;span class="pl-c1"&gt;2&lt;/span&gt;
t2  adds a to &lt;span class="pl-c1"&gt;1&lt;/span&gt;: &lt;span class="pl-c1"&gt;3&lt;/span&gt;
t3  adds a to &lt;span class="pl-c1"&gt;1&lt;/span&gt;: &lt;span class="pl-c1"&gt;4&lt;/span&gt;
t4  adds a to &lt;span class="pl-c1"&gt;1&lt;/span&gt;: &lt;span class="pl-c1"&gt;5&lt;/span&gt;
t5  adds a to &lt;span class="pl-c1"&gt;1&lt;/span&gt;: &lt;span class="pl-c1"&gt;6&lt;/span&gt;
t6  adds a to &lt;span class="pl-c1"&gt;1&lt;/span&gt;: &lt;span class="pl-c1"&gt;7&lt;/span&gt;
t7  adds a to &lt;span class="pl-c1"&gt;1&lt;/span&gt;: &lt;span class="pl-c1"&gt;8&lt;/span&gt;
t8  adds a to &lt;span class="pl-c1"&gt;1&lt;/span&gt;: &lt;span class="pl-c1"&gt;9&lt;/span&gt;
t9  adds a to &lt;span class="pl-c1"&gt;1&lt;/span&gt;: &lt;span class="pl-c1"&gt;10&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;一起正常，其实这已经是单线程顺序执行了，就本例子而言，已经失去多线程的价值，并且还带来了因为线程创建开销，浪费时间的副作用。&lt;/p&gt;
&lt;p&gt;程序中只有一把锁，通过 &lt;code&gt;try...finally&lt;/code&gt;还能确保不发生死锁。但是，当程序中启用多把锁，还是很容易发生死锁。&lt;/p&gt;
&lt;p&gt;注意使用场合，避免死锁，是我们在使用多线程开发时需要注意的一些问题。&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-四python三大利器" class="anchor" aria-hidden="true" href="#四python三大利器"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;四、Python三大利器&lt;/h3&gt;
&lt;p&gt;Python中的三大利器包括：&lt;code&gt;迭代器&lt;/code&gt;，&lt;code&gt;生成器&lt;/code&gt;，&lt;code&gt;装饰器&lt;/code&gt;，利用好它们才能开发出最高性能的Python程序，涉及到的内置模块 &lt;code&gt;itertools&lt;/code&gt;提供迭代器相关的操作。此部分收录有意思的例子共计&lt;code&gt;14&lt;/code&gt;例。&lt;/p&gt;
&lt;h4&gt;&lt;a id="user-content-1-寻找第n次出现位置" class="anchor" aria-hidden="true" href="#1-寻找第n次出现位置"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;1 寻找第n次出现位置&lt;/h4&gt;
&lt;div class="highlight highlight-source-python"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;def&lt;/span&gt; &lt;span class="pl-en"&gt;search_n&lt;/span&gt;(&lt;span class="pl-smi"&gt;s&lt;/span&gt;, &lt;span class="pl-smi"&gt;c&lt;/span&gt;, &lt;span class="pl-smi"&gt;n&lt;/span&gt;):
    size &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;0&lt;/span&gt;
    &lt;span class="pl-k"&gt;for&lt;/span&gt; i, x &lt;span class="pl-k"&gt;in&lt;/span&gt; &lt;span class="pl-c1"&gt;enumerate&lt;/span&gt;(s):
        &lt;span class="pl-k"&gt;if&lt;/span&gt; x &lt;span class="pl-k"&gt;==&lt;/span&gt; c:
            size &lt;span class="pl-k"&gt;+=&lt;/span&gt; &lt;span class="pl-c1"&gt;1&lt;/span&gt;
        &lt;span class="pl-k"&gt;if&lt;/span&gt; size &lt;span class="pl-k"&gt;==&lt;/span&gt; n:
            &lt;span class="pl-k"&gt;return&lt;/span&gt; i
    &lt;span class="pl-k"&gt;return&lt;/span&gt; &lt;span class="pl-k"&gt;-&lt;/span&gt;&lt;span class="pl-c1"&gt;1&lt;/span&gt;



&lt;span class="pl-c1"&gt;print&lt;/span&gt;(search_n(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;fdasadfadf&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;a&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-c1"&gt;3&lt;/span&gt;))&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; 结果为7，正确&lt;/span&gt;
&lt;span class="pl-c1"&gt;print&lt;/span&gt;(search_n(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;fdasadfadf&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;a&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-c1"&gt;30&lt;/span&gt;))&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; 结果为-1，正确&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h4&gt;&lt;a id="user-content-2-斐波那契数列前n项" class="anchor" aria-hidden="true" href="#2-斐波那契数列前n项"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;2 斐波那契数列前n项&lt;/h4&gt;
&lt;div class="highlight highlight-source-python"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;def&lt;/span&gt; &lt;span class="pl-en"&gt;fibonacci&lt;/span&gt;(&lt;span class="pl-smi"&gt;n&lt;/span&gt;):
    a, b &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;1&lt;/span&gt;, &lt;span class="pl-c1"&gt;1&lt;/span&gt;
    &lt;span class="pl-k"&gt;for&lt;/span&gt; _ &lt;span class="pl-k"&gt;in&lt;/span&gt; &lt;span class="pl-c1"&gt;range&lt;/span&gt;(n):
        &lt;span class="pl-k"&gt;yield&lt;/span&gt; a
        a, b &lt;span class="pl-k"&gt;=&lt;/span&gt; b, a &lt;span class="pl-k"&gt;+&lt;/span&gt; b


&lt;span class="pl-c1"&gt;list&lt;/span&gt;(fibonacci(&lt;span class="pl-c1"&gt;5&lt;/span&gt;))  &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; [1, 1, 2, 3, 5]&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h4&gt;&lt;a id="user-content-3-找出所有重复元素" class="anchor" aria-hidden="true" href="#3-找出所有重复元素"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;3 找出所有重复元素&lt;/h4&gt;
&lt;div class="highlight highlight-source-python"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;from&lt;/span&gt; collections &lt;span class="pl-k"&gt;import&lt;/span&gt; Counter


&lt;span class="pl-k"&gt;def&lt;/span&gt; &lt;span class="pl-en"&gt;find_all_duplicates&lt;/span&gt;(&lt;span class="pl-smi"&gt;lst&lt;/span&gt;):
    c &lt;span class="pl-k"&gt;=&lt;/span&gt; Counter(lst)
    &lt;span class="pl-k"&gt;return&lt;/span&gt; &lt;span class="pl-c1"&gt;list&lt;/span&gt;(&lt;span class="pl-c1"&gt;filter&lt;/span&gt;(&lt;span class="pl-k"&gt;lambda&lt;/span&gt; &lt;span class="pl-smi"&gt;k&lt;/span&gt;: c[k] &lt;span class="pl-k"&gt;&amp;gt;&lt;/span&gt; &lt;span class="pl-c1"&gt;1&lt;/span&gt;, c))


find_all_duplicates([&lt;span class="pl-c1"&gt;1&lt;/span&gt;, &lt;span class="pl-c1"&gt;2&lt;/span&gt;, &lt;span class="pl-c1"&gt;2&lt;/span&gt;, &lt;span class="pl-c1"&gt;3&lt;/span&gt;, &lt;span class="pl-c1"&gt;3&lt;/span&gt;, &lt;span class="pl-c1"&gt;3&lt;/span&gt;])  &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; [2,3]&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h4&gt;&lt;a id="user-content-4-联合统计次数" class="anchor" aria-hidden="true" href="#4-联合统计次数"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;4 联合统计次数&lt;/h4&gt;
&lt;p&gt;Counter对象间可以做数学运算&lt;/p&gt;
&lt;div class="highlight highlight-source-python"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;from&lt;/span&gt; collections &lt;span class="pl-k"&gt;import&lt;/span&gt; Counter
a &lt;span class="pl-k"&gt;=&lt;/span&gt; [&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;apple&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;orange&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;computer&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;orange&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;]
b &lt;span class="pl-k"&gt;=&lt;/span&gt; [&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;computer&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;orange&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;]

ca &lt;span class="pl-k"&gt;=&lt;/span&gt; Counter(a)
cb &lt;span class="pl-k"&gt;=&lt;/span&gt; Counter(b)
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt;Counter对象间可以做数学运算&lt;/span&gt;
ca &lt;span class="pl-k"&gt;+&lt;/span&gt; cb  &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; Counter({'orange': 3, 'computer': 2, 'apple': 1})&lt;/span&gt;


&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; 进一步抽象，实现多个列表内元素的个数统计&lt;/span&gt;


&lt;span class="pl-k"&gt;def&lt;/span&gt; &lt;span class="pl-en"&gt;sumc&lt;/span&gt;(&lt;span class="pl-k"&gt;*&lt;/span&gt;&lt;span class="pl-smi"&gt;c&lt;/span&gt;):
    &lt;span class="pl-k"&gt;if&lt;/span&gt; (&lt;span class="pl-c1"&gt;len&lt;/span&gt;(c) &lt;span class="pl-k"&gt;&amp;lt;&lt;/span&gt; &lt;span class="pl-c1"&gt;1&lt;/span&gt;):
        &lt;span class="pl-k"&gt;return&lt;/span&gt;
    mapc &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;map&lt;/span&gt;(Counter, c)
    s &lt;span class="pl-k"&gt;=&lt;/span&gt; Counter([])
    &lt;span class="pl-k"&gt;for&lt;/span&gt; ic &lt;span class="pl-k"&gt;in&lt;/span&gt; mapc: &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; ic 是一个Counter对象&lt;/span&gt;
        s &lt;span class="pl-k"&gt;+=&lt;/span&gt; ic
    &lt;span class="pl-k"&gt;return&lt;/span&gt; s


&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt;Counter({'orange': 3, 'computer': 3, 'apple': 1, 'abc': 1, 'face': 1})&lt;/span&gt;
sumc(a, b, [&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;abc&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;], [&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;face&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;computer&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;])
&lt;/pre&gt;&lt;/div&gt;
&lt;h4&gt;&lt;a id="user-content-5-groupby单字段分组" class="anchor" aria-hidden="true" href="#5-groupby单字段分组"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;5 groupby单字段分组&lt;/h4&gt;
&lt;p&gt;天气记录：&lt;/p&gt;
&lt;div class="highlight highlight-source-python"&gt;&lt;pre&gt;a &lt;span class="pl-k"&gt;=&lt;/span&gt; [{&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;date&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;2019-12-15&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;weather&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;cloud&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;},
 {&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;date&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;2019-12-13&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;weather&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;sunny&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;},
 {&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;date&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;2019-12-14&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;weather&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;cloud&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;}]&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;按照天气字段&lt;code&gt;weather&lt;/code&gt;分组汇总：&lt;/p&gt;
&lt;div class="highlight highlight-source-python"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;from&lt;/span&gt; itertools &lt;span class="pl-k"&gt;import&lt;/span&gt; groupby
&lt;span class="pl-k"&gt;for&lt;/span&gt; k, items &lt;span class="pl-k"&gt;in&lt;/span&gt;  groupby(a,&lt;span class="pl-v"&gt;key&lt;/span&gt;&lt;span class="pl-k"&gt;=&lt;/span&gt;&lt;span class="pl-k"&gt;lambda&lt;/span&gt; &lt;span class="pl-smi"&gt;x&lt;/span&gt;:x[&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;weather&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;]):
     &lt;span class="pl-c1"&gt;print&lt;/span&gt;(k)&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;输出结果看出，分组失败！原因：分组前必须按照分组字段&lt;code&gt;排序&lt;/code&gt;，这个很坑~&lt;/p&gt;
&lt;div class="highlight highlight-source-python"&gt;&lt;pre&gt;cloud
sunny
cloud&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;修改代码：&lt;/p&gt;
&lt;div class="highlight highlight-source-python"&gt;&lt;pre&gt;a.sort(&lt;span class="pl-v"&gt;key&lt;/span&gt;&lt;span class="pl-k"&gt;=&lt;/span&gt;&lt;span class="pl-k"&gt;lambda&lt;/span&gt; &lt;span class="pl-smi"&gt;x&lt;/span&gt;: x[&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;weather&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;])
&lt;span class="pl-k"&gt;for&lt;/span&gt; k, items &lt;span class="pl-k"&gt;in&lt;/span&gt;  groupby(a,&lt;span class="pl-v"&gt;key&lt;/span&gt;&lt;span class="pl-k"&gt;=&lt;/span&gt;&lt;span class="pl-k"&gt;lambda&lt;/span&gt; &lt;span class="pl-smi"&gt;x&lt;/span&gt;:x[&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;weather&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;]):
     &lt;span class="pl-c1"&gt;print&lt;/span&gt;(k)
     &lt;span class="pl-k"&gt;for&lt;/span&gt; i &lt;span class="pl-k"&gt;in&lt;/span&gt; items:
         &lt;span class="pl-c1"&gt;print&lt;/span&gt;(i)&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;输出结果：&lt;/p&gt;
&lt;div class="highlight highlight-source-python"&gt;&lt;pre&gt;cloud
{&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;date&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;2019-12-15&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;weather&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;cloud&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;}
{&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;date&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;2019-12-14&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;weather&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;cloud&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;}
sunny
{&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;date&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;2019-12-13&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;weather&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;sunny&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;}&lt;/pre&gt;&lt;/div&gt;
&lt;h4&gt;&lt;a id="user-content-6-itemgetter和key函数" class="anchor" aria-hidden="true" href="#6-itemgetter和key函数"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;6 itemgetter和key函数&lt;/h4&gt;
&lt;p&gt;注意到&lt;code&gt;sort&lt;/code&gt;和&lt;code&gt;groupby&lt;/code&gt;所用的&lt;code&gt;key&lt;/code&gt;函数，除了&lt;code&gt;lambda&lt;/code&gt;写法外，还有一种简写，就是使用&lt;code&gt;itemgetter&lt;/code&gt;：&lt;/p&gt;
&lt;div class="highlight highlight-source-python"&gt;&lt;pre&gt;a &lt;span class="pl-k"&gt;=&lt;/span&gt; [{&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;date&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;2019-12-15&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;weather&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;cloud&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;},
 {&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;date&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;2019-12-13&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;weather&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;sunny&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;},
 {&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;date&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;2019-12-14&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;weather&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;cloud&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;}]
&lt;span class="pl-k"&gt;from&lt;/span&gt; operator &lt;span class="pl-k"&gt;import&lt;/span&gt; itemgetter
&lt;span class="pl-k"&gt;from&lt;/span&gt; itertools &lt;span class="pl-k"&gt;import&lt;/span&gt; groupby

a.sort(&lt;span class="pl-v"&gt;key&lt;/span&gt;&lt;span class="pl-k"&gt;=&lt;/span&gt;itemgetter(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;weather&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;))
&lt;span class="pl-k"&gt;for&lt;/span&gt; k, items &lt;span class="pl-k"&gt;in&lt;/span&gt; groupby(a, &lt;span class="pl-v"&gt;key&lt;/span&gt;&lt;span class="pl-k"&gt;=&lt;/span&gt;itemgetter(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;weather&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;)):
     &lt;span class="pl-c1"&gt;print&lt;/span&gt;(k)
     &lt;span class="pl-k"&gt;for&lt;/span&gt; i &lt;span class="pl-k"&gt;in&lt;/span&gt; items:
         &lt;span class="pl-c1"&gt;print&lt;/span&gt;(i)&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;结果：&lt;/p&gt;
&lt;div class="highlight highlight-source-python"&gt;&lt;pre&gt;cloud
{&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;date&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;2019-12-15&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;weather&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;cloud&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;}
{&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;date&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;2019-12-14&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;weather&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;cloud&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;}
sunny
{&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;date&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;2019-12-13&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;weather&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;sunny&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;}&lt;/pre&gt;&lt;/div&gt;
&lt;h4&gt;&lt;a id="user-content-7-groupby多字段分组" class="anchor" aria-hidden="true" href="#7-groupby多字段分组"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;7 groupby多字段分组&lt;/h4&gt;
&lt;p&gt;&lt;code&gt;itemgetter&lt;/code&gt;是一个类，&lt;code&gt;itemgetter('weather')&lt;/code&gt;返回一个可调用的对象，它的参数可有多个：&lt;/p&gt;
&lt;div class="highlight highlight-source-python"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;from&lt;/span&gt; operator &lt;span class="pl-k"&gt;import&lt;/span&gt; itemgetter
&lt;span class="pl-k"&gt;from&lt;/span&gt; itertools &lt;span class="pl-k"&gt;import&lt;/span&gt; groupby

a.sort(&lt;span class="pl-v"&gt;key&lt;/span&gt;&lt;span class="pl-k"&gt;=&lt;/span&gt;itemgetter(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;weather&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;date&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;))
&lt;span class="pl-k"&gt;for&lt;/span&gt; k, items &lt;span class="pl-k"&gt;in&lt;/span&gt; groupby(a, &lt;span class="pl-v"&gt;key&lt;/span&gt;&lt;span class="pl-k"&gt;=&lt;/span&gt;itemgetter(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;weather&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;)):
     &lt;span class="pl-c1"&gt;print&lt;/span&gt;(k)
     &lt;span class="pl-k"&gt;for&lt;/span&gt; i &lt;span class="pl-k"&gt;in&lt;/span&gt; items:
         &lt;span class="pl-c1"&gt;print&lt;/span&gt;(i)&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;结果如下，使用&lt;code&gt;weather&lt;/code&gt;和&lt;code&gt;date&lt;/code&gt;两个字段排序&lt;code&gt;a&lt;/code&gt;，&lt;/p&gt;
&lt;div class="highlight highlight-source-python"&gt;&lt;pre&gt;cloud
{&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;date&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;2019-12-14&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;weather&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;cloud&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;}
{&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;date&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;2019-12-15&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;weather&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;cloud&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;}
sunny
{&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;date&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;2019-12-13&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;weather&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;sunny&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;}&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;注意这个结果与上面结果有些微妙不同，这个更多是我们想看到和使用更多的。&lt;/p&gt;
&lt;h4&gt;&lt;a id="user-content-8-sum函数计算和聚合同时做" class="anchor" aria-hidden="true" href="#8-sum函数计算和聚合同时做"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;8 sum函数计算和聚合同时做&lt;/h4&gt;
&lt;p&gt;Python中的聚合类函数&lt;code&gt;sum&lt;/code&gt;,&lt;code&gt;min&lt;/code&gt;,&lt;code&gt;max&lt;/code&gt;第一个参数是&lt;code&gt;iterable&lt;/code&gt;类型，一般使用方法如下：&lt;/p&gt;
&lt;div class="highlight highlight-source-python"&gt;&lt;pre&gt;a &lt;span class="pl-k"&gt;=&lt;/span&gt; [&lt;span class="pl-c1"&gt;4&lt;/span&gt;,&lt;span class="pl-c1"&gt;2&lt;/span&gt;,&lt;span class="pl-c1"&gt;5&lt;/span&gt;,&lt;span class="pl-c1"&gt;1&lt;/span&gt;]
&lt;span class="pl-c1"&gt;sum&lt;/span&gt;([i&lt;span class="pl-k"&gt;+&lt;/span&gt;&lt;span class="pl-c1"&gt;1&lt;/span&gt; &lt;span class="pl-k"&gt;for&lt;/span&gt; i &lt;span class="pl-k"&gt;in&lt;/span&gt; a]) &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; 16&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;使用列表生成式&lt;code&gt;[i+1 for i in a]&lt;/code&gt;创建一个长度与&lt;code&gt;a&lt;/code&gt;一行的临时列表，这步完成后，再做&lt;code&gt;sum&lt;/code&gt;聚合。&lt;/p&gt;
&lt;p&gt;试想如果你的数组&lt;code&gt;a&lt;/code&gt;长度十百万级，再创建一个这样的临时列表就很不划算，最好是一边算一边聚合，稍改动为如下：&lt;/p&gt;
&lt;div class="highlight highlight-source-python"&gt;&lt;pre&gt;a &lt;span class="pl-k"&gt;=&lt;/span&gt; [&lt;span class="pl-c1"&gt;4&lt;/span&gt;,&lt;span class="pl-c1"&gt;2&lt;/span&gt;,&lt;span class="pl-c1"&gt;5&lt;/span&gt;,&lt;span class="pl-c1"&gt;1&lt;/span&gt;]
&lt;span class="pl-c1"&gt;sum&lt;/span&gt;(i&lt;span class="pl-k"&gt;+&lt;/span&gt;&lt;span class="pl-c1"&gt;1&lt;/span&gt; &lt;span class="pl-k"&gt;for&lt;/span&gt; i &lt;span class="pl-k"&gt;in&lt;/span&gt; a) &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; 16&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;此时&lt;code&gt;i+1 for i in a&lt;/code&gt;是&lt;code&gt;(i+1 for i in a)&lt;/code&gt;的简写，得到一个生成器(&lt;code&gt;generator&lt;/code&gt;)对象，如下所示：&lt;/p&gt;
&lt;div class="highlight highlight-source-python"&gt;&lt;pre&gt;In [&lt;span class="pl-c1"&gt;8&lt;/span&gt;]:(i&lt;span class="pl-k"&gt;+&lt;/span&gt;&lt;span class="pl-c1"&gt;1&lt;/span&gt; &lt;span class="pl-k"&gt;for&lt;/span&gt; i &lt;span class="pl-k"&gt;in&lt;/span&gt; a)
&lt;span class="pl-c1"&gt;OUT&lt;/span&gt; [&lt;span class="pl-c1"&gt;8&lt;/span&gt;]:&lt;span class="pl-k"&gt;&amp;lt;&lt;/span&gt;generator &lt;span class="pl-c1"&gt;object&lt;/span&gt; &lt;span class="pl-k"&gt;&amp;lt;&lt;/span&gt;genexpr&lt;span class="pl-k"&gt;&amp;gt;&lt;/span&gt; at &lt;span class="pl-c1"&gt;&lt;span class="pl-k"&gt;0x&lt;/span&gt;000002AC7FFA8CF0&lt;/span&gt;&lt;span class="pl-k"&gt;&amp;gt;&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;生成器每迭代一步吐出(&lt;code&gt;yield&lt;/code&gt;)一个元素并计算和聚合后，进入下一次迭代，直到终点。&lt;/p&gt;
&lt;h4&gt;&lt;a id="user-content-9-list分组生成器版" class="anchor" aria-hidden="true" href="#9-list分组生成器版"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;9 list分组(生成器版)&lt;/h4&gt;
&lt;div class="highlight highlight-source-python"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;from&lt;/span&gt; math &lt;span class="pl-k"&gt;import&lt;/span&gt; ceil

&lt;span class="pl-k"&gt;def&lt;/span&gt; &lt;span class="pl-en"&gt;divide_iter&lt;/span&gt;(&lt;span class="pl-smi"&gt;lst&lt;/span&gt;, &lt;span class="pl-smi"&gt;n&lt;/span&gt;):
    &lt;span class="pl-k"&gt;if&lt;/span&gt; n &lt;span class="pl-k"&gt;&amp;lt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;0&lt;/span&gt;:
        &lt;span class="pl-k"&gt;yield&lt;/span&gt; lst
        &lt;span class="pl-k"&gt;return&lt;/span&gt;
    i, div &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;0&lt;/span&gt;, ceil(&lt;span class="pl-c1"&gt;len&lt;/span&gt;(lst) &lt;span class="pl-k"&gt;/&lt;/span&gt; n)
    &lt;span class="pl-k"&gt;while&lt;/span&gt; i &lt;span class="pl-k"&gt;&amp;lt;&lt;/span&gt; n:
        &lt;span class="pl-k"&gt;yield&lt;/span&gt; lst[i &lt;span class="pl-k"&gt;*&lt;/span&gt; div: (i &lt;span class="pl-k"&gt;+&lt;/span&gt; &lt;span class="pl-c1"&gt;1&lt;/span&gt;) &lt;span class="pl-k"&gt;*&lt;/span&gt; div]
        i &lt;span class="pl-k"&gt;+=&lt;/span&gt; &lt;span class="pl-c1"&gt;1&lt;/span&gt;

&lt;span class="pl-c1"&gt;list&lt;/span&gt;(divide_iter([&lt;span class="pl-c1"&gt;1&lt;/span&gt;, &lt;span class="pl-c1"&gt;2&lt;/span&gt;, &lt;span class="pl-c1"&gt;3&lt;/span&gt;, &lt;span class="pl-c1"&gt;4&lt;/span&gt;, &lt;span class="pl-c1"&gt;5&lt;/span&gt;], &lt;span class="pl-c1"&gt;0&lt;/span&gt;))  &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; [[1, 2, 3, 4, 5]]&lt;/span&gt;
&lt;span class="pl-c1"&gt;list&lt;/span&gt;(divide_iter([&lt;span class="pl-c1"&gt;1&lt;/span&gt;, &lt;span class="pl-c1"&gt;2&lt;/span&gt;, &lt;span class="pl-c1"&gt;3&lt;/span&gt;, &lt;span class="pl-c1"&gt;4&lt;/span&gt;, &lt;span class="pl-c1"&gt;5&lt;/span&gt;], &lt;span class="pl-c1"&gt;2&lt;/span&gt;))  &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; [[1, 2, 3], [4, 5]]&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h4&gt;&lt;a id="user-content-10-列表全展开生成器版" class="anchor" aria-hidden="true" href="#10-列表全展开生成器版"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;10 列表全展开（生成器版）&lt;/h4&gt;
&lt;div class="highlight highlight-source-python"&gt;&lt;pre&gt;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt;多层列表展开成单层列表&lt;/span&gt;
a&lt;span class="pl-k"&gt;=&lt;/span&gt;[&lt;span class="pl-c1"&gt;1&lt;/span&gt;,&lt;span class="pl-c1"&gt;2&lt;/span&gt;,[&lt;span class="pl-c1"&gt;3&lt;/span&gt;,&lt;span class="pl-c1"&gt;4&lt;/span&gt;,[&lt;span class="pl-c1"&gt;5&lt;/span&gt;,&lt;span class="pl-c1"&gt;6&lt;/span&gt;],&lt;span class="pl-c1"&gt;7&lt;/span&gt;],&lt;span class="pl-c1"&gt;8&lt;/span&gt;,[&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;python&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;,&lt;span class="pl-c1"&gt;6&lt;/span&gt;],&lt;span class="pl-c1"&gt;9&lt;/span&gt;]
&lt;span class="pl-k"&gt;def&lt;/span&gt; &lt;span class="pl-en"&gt;function&lt;/span&gt;(&lt;span class="pl-smi"&gt;lst&lt;/span&gt;):
    &lt;span class="pl-k"&gt;for&lt;/span&gt; i &lt;span class="pl-k"&gt;in&lt;/span&gt; lst:
        &lt;span class="pl-k"&gt;if&lt;/span&gt; &lt;span class="pl-c1"&gt;type&lt;/span&gt;(i)&lt;span class="pl-k"&gt;==&lt;/span&gt;&lt;span class="pl-c1"&gt;list&lt;/span&gt;:
            &lt;span class="pl-k"&gt;yield from&lt;/span&gt; function(i)
        &lt;span class="pl-k"&gt;else&lt;/span&gt;:
            &lt;span class="pl-k"&gt;yield&lt;/span&gt; i
&lt;span class="pl-c1"&gt;print&lt;/span&gt;(&lt;span class="pl-c1"&gt;list&lt;/span&gt;(function(a))) &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; [1, 2, 3, 4, 5, 6, 7, 8, 'python', 6, 9]&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h4&gt;&lt;a id="user-content-11-测试函数运行时间的装饰器" class="anchor" aria-hidden="true" href="#11-测试函数运行时间的装饰器"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;11 测试函数运行时间的装饰器&lt;/h4&gt;
&lt;div class="highlight highlight-source-python"&gt;&lt;pre&gt;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt;测试函数执行时间的装饰器示例&lt;/span&gt;
&lt;span class="pl-k"&gt;import&lt;/span&gt; time
&lt;span class="pl-k"&gt;def&lt;/span&gt; &lt;span class="pl-en"&gt;timing_func&lt;/span&gt;(&lt;span class="pl-smi"&gt;fn&lt;/span&gt;):
    &lt;span class="pl-k"&gt;def&lt;/span&gt; &lt;span class="pl-en"&gt;wrapper&lt;/span&gt;():
        start&lt;span class="pl-k"&gt;=&lt;/span&gt;time.time()
        fn()   &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt;执行传入的fn参数&lt;/span&gt;
        stop&lt;span class="pl-k"&gt;=&lt;/span&gt;time.time()
        &lt;span class="pl-k"&gt;return&lt;/span&gt; (stop&lt;span class="pl-k"&gt;-&lt;/span&gt;start)
    &lt;span class="pl-k"&gt;return&lt;/span&gt; wrapper
&lt;span class="pl-en"&gt;@timing_func&lt;/span&gt;
&lt;span class="pl-k"&gt;def&lt;/span&gt; &lt;span class="pl-en"&gt;test_list_append&lt;/span&gt;():
    lst&lt;span class="pl-k"&gt;=&lt;/span&gt;[]
    &lt;span class="pl-k"&gt;for&lt;/span&gt; i &lt;span class="pl-k"&gt;in&lt;/span&gt; &lt;span class="pl-c1"&gt;range&lt;/span&gt;(&lt;span class="pl-c1"&gt;0&lt;/span&gt;,&lt;span class="pl-c1"&gt;100000&lt;/span&gt;):
        lst.append(i)  
&lt;span class="pl-en"&gt;@timing_func&lt;/span&gt;
&lt;span class="pl-k"&gt;def&lt;/span&gt; &lt;span class="pl-en"&gt;test_list_compre&lt;/span&gt;():
    [i &lt;span class="pl-k"&gt;for&lt;/span&gt; i &lt;span class="pl-k"&gt;in&lt;/span&gt; &lt;span class="pl-c1"&gt;range&lt;/span&gt;(&lt;span class="pl-c1"&gt;0&lt;/span&gt;,&lt;span class="pl-c1"&gt;100000&lt;/span&gt;)]  &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt;列表生成式&lt;/span&gt;
a&lt;span class="pl-k"&gt;=&lt;/span&gt;test_list_append()
c&lt;span class="pl-k"&gt;=&lt;/span&gt;test_list_compre()
&lt;span class="pl-c1"&gt;print&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;test list append time:&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;,a)
&lt;span class="pl-c1"&gt;print&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;test list comprehension time:&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;,c)
&lt;span class="pl-c1"&gt;print&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;append/compre:&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;,&lt;span class="pl-c1"&gt;round&lt;/span&gt;(a&lt;span class="pl-k"&gt;/&lt;/span&gt;c,&lt;span class="pl-c1"&gt;3&lt;/span&gt;))

test &lt;span class="pl-c1"&gt;list&lt;/span&gt; append time: &lt;span class="pl-c1"&gt;0.0219423770904541&lt;/span&gt;
test &lt;span class="pl-c1"&gt;list&lt;/span&gt; comprehension time: &lt;span class="pl-c1"&gt;0.007980823516845703&lt;/span&gt;
append&lt;span class="pl-k"&gt;/&lt;/span&gt;compre: &lt;span class="pl-c1"&gt;2.749&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h4&gt;&lt;a id="user-content-12-统计异常出现次数和时间的装饰器" class="anchor" aria-hidden="true" href="#12-统计异常出现次数和时间的装饰器"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;12 统计异常出现次数和时间的装饰器&lt;/h4&gt;
&lt;p&gt;写一个装饰器，统计某个异常重复出现指定次数时，经历的时长。&lt;/p&gt;
&lt;div class="highlight highlight-source-python"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;import&lt;/span&gt; time
&lt;span class="pl-k"&gt;import&lt;/span&gt; math


&lt;span class="pl-k"&gt;def&lt;/span&gt; &lt;span class="pl-en"&gt;excepter&lt;/span&gt;(&lt;span class="pl-smi"&gt;f&lt;/span&gt;):
    i &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;0&lt;/span&gt;
    t1 &lt;span class="pl-k"&gt;=&lt;/span&gt; time.time()
    &lt;span class="pl-k"&gt;def&lt;/span&gt; &lt;span class="pl-en"&gt;wrapper&lt;/span&gt;(): 
        &lt;span class="pl-k"&gt;try&lt;/span&gt;:
            f()
        &lt;span class="pl-k"&gt;except&lt;/span&gt; &lt;span class="pl-c1"&gt;Exception&lt;/span&gt; &lt;span class="pl-k"&gt;as&lt;/span&gt; e:
            &lt;span class="pl-k"&gt;nonlocal&lt;/span&gt; i
            i &lt;span class="pl-k"&gt;+=&lt;/span&gt; &lt;span class="pl-c1"&gt;1&lt;/span&gt;
            &lt;span class="pl-c1"&gt;print&lt;/span&gt;(&lt;span class="pl-s"&gt;f&lt;/span&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;span class="pl-c1"&gt;{&lt;/span&gt;e.args[&lt;span class="pl-c1"&gt;0&lt;/span&gt;]&lt;span class="pl-c1"&gt;}&lt;/span&gt;&lt;span class="pl-s"&gt;: &lt;/span&gt;&lt;span class="pl-c1"&gt;{&lt;/span&gt;i&lt;span class="pl-c1"&gt;}&lt;/span&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;)
            t2 &lt;span class="pl-k"&gt;=&lt;/span&gt; time.time()
            &lt;span class="pl-k"&gt;if&lt;/span&gt; i &lt;span class="pl-k"&gt;==&lt;/span&gt; n:
                &lt;span class="pl-c1"&gt;print&lt;/span&gt;(&lt;span class="pl-s"&gt;f&lt;/span&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;span class="pl-s"&gt;spending time:&lt;/span&gt;&lt;span class="pl-c1"&gt;{&lt;/span&gt;&lt;span class="pl-c1"&gt;round&lt;/span&gt;(t2&lt;span class="pl-k"&gt;-&lt;/span&gt;t1,&lt;span class="pl-c1"&gt;2&lt;/span&gt;)&lt;span class="pl-c1"&gt;}&lt;/span&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;)
    &lt;span class="pl-k"&gt;return&lt;/span&gt; wrapper
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;关键词&lt;code&gt;nonlocal&lt;/code&gt;常用于函数嵌套中，声明变量i为非局部变量；&lt;/p&gt;
&lt;p&gt;如果不声明，&lt;code&gt;i+=1&lt;/code&gt;表明&lt;code&gt;i&lt;/code&gt;为函数&lt;code&gt;wrapper&lt;/code&gt;内的局部变量，因为在&lt;code&gt;i+=1&lt;/code&gt;引用(reference)时,&lt;code&gt;i&lt;/code&gt;未被声明，所以会报&lt;code&gt;unreferenced variable&lt;/code&gt;的错误。&lt;/p&gt;
&lt;p&gt;使用创建的装饰函数&lt;code&gt;excepter&lt;/code&gt;, &lt;code&gt;n&lt;/code&gt;是异常出现的次数。&lt;/p&gt;
&lt;p&gt;共测试了两类常见的异常：&lt;code&gt;被零除&lt;/code&gt;和&lt;code&gt;数组越界&lt;/code&gt;。&lt;/p&gt;
&lt;div class="highlight highlight-source-python"&gt;&lt;pre&gt;n &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;10&lt;/span&gt; &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; except count&lt;/span&gt;

&lt;span class="pl-en"&gt;@excepter&lt;/span&gt;
&lt;span class="pl-k"&gt;def&lt;/span&gt; &lt;span class="pl-en"&gt;divide_zero_except&lt;/span&gt;():
    time.sleep(&lt;span class="pl-c1"&gt;0.1&lt;/span&gt;)
    j &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;1&lt;/span&gt;&lt;span class="pl-k"&gt;/&lt;/span&gt;(&lt;span class="pl-c1"&gt;40&lt;/span&gt;&lt;span class="pl-k"&gt;-&lt;/span&gt;&lt;span class="pl-c1"&gt;20&lt;/span&gt;&lt;span class="pl-k"&gt;*&lt;/span&gt;&lt;span class="pl-c1"&gt;2&lt;/span&gt;)

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; test zero divived except&lt;/span&gt;
&lt;span class="pl-k"&gt;for&lt;/span&gt; _ &lt;span class="pl-k"&gt;in&lt;/span&gt; &lt;span class="pl-c1"&gt;range&lt;/span&gt;(n):
    divide_zero_except()


&lt;span class="pl-en"&gt;@excepter&lt;/span&gt;
&lt;span class="pl-k"&gt;def&lt;/span&gt; &lt;span class="pl-en"&gt;outof_range_except&lt;/span&gt;():
    a &lt;span class="pl-k"&gt;=&lt;/span&gt; [&lt;span class="pl-c1"&gt;1&lt;/span&gt;,&lt;span class="pl-c1"&gt;3&lt;/span&gt;,&lt;span class="pl-c1"&gt;5&lt;/span&gt;]
    time.sleep(&lt;span class="pl-c1"&gt;0.1&lt;/span&gt;)
    &lt;span class="pl-c1"&gt;print&lt;/span&gt;(a[&lt;span class="pl-c1"&gt;3&lt;/span&gt;])
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; test out of range except&lt;/span&gt;
&lt;span class="pl-k"&gt;for&lt;/span&gt; _ &lt;span class="pl-k"&gt;in&lt;/span&gt; &lt;span class="pl-c1"&gt;range&lt;/span&gt;(n):
    outof_range_except()
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;打印出来的结果如下：&lt;/p&gt;
&lt;div class="highlight highlight-source-python"&gt;&lt;pre&gt;division by zero: &lt;span class="pl-c1"&gt;1&lt;/span&gt;
division by zero: &lt;span class="pl-c1"&gt;2&lt;/span&gt;
division by zero: &lt;span class="pl-c1"&gt;3&lt;/span&gt;
division by zero: &lt;span class="pl-c1"&gt;4&lt;/span&gt;
division by zero: &lt;span class="pl-c1"&gt;5&lt;/span&gt;
division by zero: &lt;span class="pl-c1"&gt;6&lt;/span&gt;
division by zero: &lt;span class="pl-c1"&gt;7&lt;/span&gt;
division by zero: &lt;span class="pl-c1"&gt;8&lt;/span&gt;
division by zero: &lt;span class="pl-c1"&gt;9&lt;/span&gt;
division by zero: &lt;span class="pl-c1"&gt;10&lt;/span&gt;
spending time:&lt;span class="pl-c1"&gt;1.01&lt;/span&gt;
&lt;span class="pl-c1"&gt;list&lt;/span&gt; index out of &lt;span class="pl-c1"&gt;range&lt;/span&gt;: &lt;span class="pl-c1"&gt;1&lt;/span&gt;
&lt;span class="pl-c1"&gt;list&lt;/span&gt; index out of &lt;span class="pl-c1"&gt;range&lt;/span&gt;: &lt;span class="pl-c1"&gt;2&lt;/span&gt;
&lt;span class="pl-c1"&gt;list&lt;/span&gt; index out of &lt;span class="pl-c1"&gt;range&lt;/span&gt;: &lt;span class="pl-c1"&gt;3&lt;/span&gt;
&lt;span class="pl-c1"&gt;list&lt;/span&gt; index out of &lt;span class="pl-c1"&gt;range&lt;/span&gt;: &lt;span class="pl-c1"&gt;4&lt;/span&gt;
&lt;span class="pl-c1"&gt;list&lt;/span&gt; index out of &lt;span class="pl-c1"&gt;range&lt;/span&gt;: &lt;span class="pl-c1"&gt;5&lt;/span&gt;
&lt;span class="pl-c1"&gt;list&lt;/span&gt; index out of &lt;span class="pl-c1"&gt;range&lt;/span&gt;: &lt;span class="pl-c1"&gt;6&lt;/span&gt;
&lt;span class="pl-c1"&gt;list&lt;/span&gt; index out of &lt;span class="pl-c1"&gt;range&lt;/span&gt;: &lt;span class="pl-c1"&gt;7&lt;/span&gt;
&lt;span class="pl-c1"&gt;list&lt;/span&gt; index out of &lt;span class="pl-c1"&gt;range&lt;/span&gt;: &lt;span class="pl-c1"&gt;8&lt;/span&gt;
&lt;span class="pl-c1"&gt;list&lt;/span&gt; index out of &lt;span class="pl-c1"&gt;range&lt;/span&gt;: &lt;span class="pl-c1"&gt;9&lt;/span&gt;
&lt;span class="pl-c1"&gt;list&lt;/span&gt; index out of &lt;span class="pl-c1"&gt;range&lt;/span&gt;: &lt;span class="pl-c1"&gt;10&lt;/span&gt;
spending time:&lt;span class="pl-c1"&gt;1.01&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h4&gt;&lt;a id="user-content-13-测试运行时长的装饰器" class="anchor" aria-hidden="true" href="#13-测试运行时长的装饰器"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;13 测试运行时长的装饰器&lt;/h4&gt;
&lt;div class="highlight highlight-source-python"&gt;&lt;pre&gt;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt;测试函数执行时间的装饰器示例&lt;/span&gt;
&lt;span class="pl-k"&gt;import&lt;/span&gt; time
&lt;span class="pl-k"&gt;def&lt;/span&gt; &lt;span class="pl-en"&gt;timing&lt;/span&gt;(&lt;span class="pl-smi"&gt;fn&lt;/span&gt;):
    &lt;span class="pl-k"&gt;def&lt;/span&gt; &lt;span class="pl-en"&gt;wrapper&lt;/span&gt;():
        start&lt;span class="pl-k"&gt;=&lt;/span&gt;time.time()
        fn()   &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt;执行传入的fn参数&lt;/span&gt;
        stop&lt;span class="pl-k"&gt;=&lt;/span&gt;time.time()
        &lt;span class="pl-k"&gt;return&lt;/span&gt; (stop&lt;span class="pl-k"&gt;-&lt;/span&gt;start)
    &lt;span class="pl-k"&gt;return&lt;/span&gt; wrapper

&lt;span class="pl-en"&gt;@timing&lt;/span&gt;
&lt;span class="pl-k"&gt;def&lt;/span&gt; &lt;span class="pl-en"&gt;test_list_append&lt;/span&gt;():
    lst&lt;span class="pl-k"&gt;=&lt;/span&gt;[]
    &lt;span class="pl-k"&gt;for&lt;/span&gt; i &lt;span class="pl-k"&gt;in&lt;/span&gt; &lt;span class="pl-c1"&gt;range&lt;/span&gt;(&lt;span class="pl-c1"&gt;0&lt;/span&gt;,&lt;span class="pl-c1"&gt;100000&lt;/span&gt;):
        lst.append(i)  

&lt;span class="pl-en"&gt;@timing&lt;/span&gt;
&lt;span class="pl-k"&gt;def&lt;/span&gt; &lt;span class="pl-en"&gt;test_list_compre&lt;/span&gt;():
    [i &lt;span class="pl-k"&gt;for&lt;/span&gt; i &lt;span class="pl-k"&gt;in&lt;/span&gt; &lt;span class="pl-c1"&gt;range&lt;/span&gt;(&lt;span class="pl-c1"&gt;0&lt;/span&gt;,&lt;span class="pl-c1"&gt;100000&lt;/span&gt;)]  &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt;列表生成式&lt;/span&gt;

a&lt;span class="pl-k"&gt;=&lt;/span&gt;test_list_append()
c&lt;span class="pl-k"&gt;=&lt;/span&gt;test_list_compre()
&lt;span class="pl-c1"&gt;print&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;test list append time:&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;,a)
&lt;span class="pl-c1"&gt;print&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;test list comprehension time:&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;,c)
&lt;span class="pl-c1"&gt;print&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;append/compre:&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;,&lt;span class="pl-c1"&gt;round&lt;/span&gt;(a&lt;span class="pl-k"&gt;/&lt;/span&gt;c,&lt;span class="pl-c1"&gt;3&lt;/span&gt;))

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; test list append time: 0.0219&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; test list comprehension time: 0.00798&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; append/compre: 2.749&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h4&gt;&lt;a id="user-content-14-装饰器通俗理解" class="anchor" aria-hidden="true" href="#14-装饰器通俗理解"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;14 装饰器通俗理解&lt;/h4&gt;
&lt;p&gt;再看一个装饰器：&lt;/p&gt;
&lt;div class="highlight highlight-source-python"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;def&lt;/span&gt; &lt;span class="pl-en"&gt;call_print&lt;/span&gt;(&lt;span class="pl-smi"&gt;f&lt;/span&gt;):
  &lt;span class="pl-k"&gt;def&lt;/span&gt; &lt;span class="pl-en"&gt;g&lt;/span&gt;():
    &lt;span class="pl-c1"&gt;print&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;you&lt;span class="pl-cce"&gt;\'&lt;/span&gt;re calling &lt;span class="pl-c1"&gt;%s&lt;/span&gt; function&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;&lt;span class="pl-k"&gt;%&lt;/span&gt;(f.&lt;span class="pl-c1"&gt;__name__&lt;/span&gt;,))
  &lt;span class="pl-k"&gt;return&lt;/span&gt; g&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;使用&lt;code&gt;call_print&lt;/code&gt;装饰器：&lt;/p&gt;
&lt;div class="highlight highlight-source-python"&gt;&lt;pre&gt;&lt;span class="pl-en"&gt;@call_print&lt;/span&gt;
&lt;span class="pl-k"&gt;def&lt;/span&gt; &lt;span class="pl-en"&gt;myfun&lt;/span&gt;():
  &lt;span class="pl-k"&gt;pass&lt;/span&gt;
 
&lt;span class="pl-en"&gt;@call_print&lt;/span&gt;
&lt;span class="pl-k"&gt;def&lt;/span&gt; &lt;span class="pl-en"&gt;myfun2&lt;/span&gt;():
  &lt;span class="pl-k"&gt;pass&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;myfun()后返回：&lt;/p&gt;
&lt;div class="highlight highlight-source-python"&gt;&lt;pre&gt;In [&lt;span class="pl-c1"&gt;27&lt;/span&gt;]: myfun()
you&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;re calling myfun function&lt;span class="pl-ii"&gt;&lt;/span&gt;&lt;/span&gt;

In [&lt;span class="pl-c1"&gt;28&lt;/span&gt;]: myfun2()
you&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;re calling myfun2 function&lt;span class="pl-ii"&gt;&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;strong&gt;使用call_print&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;你看，&lt;code&gt;@call_print&lt;/code&gt;放置在任何一个新定义的函数上面，都会默认输出一行，你正在调用这个函数的名。&lt;/p&gt;
&lt;p&gt;这是为什么呢？注意观察新定义的&lt;code&gt;call_print&lt;/code&gt;函数(加上@后便是装饰器):&lt;/p&gt;
&lt;div class="highlight highlight-source-python"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;def&lt;/span&gt; &lt;span class="pl-en"&gt;call_print&lt;/span&gt;(&lt;span class="pl-smi"&gt;f&lt;/span&gt;):
  &lt;span class="pl-k"&gt;def&lt;/span&gt; &lt;span class="pl-en"&gt;g&lt;/span&gt;():
    &lt;span class="pl-c1"&gt;print&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;you&lt;span class="pl-cce"&gt;\'&lt;/span&gt;re calling &lt;span class="pl-c1"&gt;%s&lt;/span&gt; function&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;&lt;span class="pl-k"&gt;%&lt;/span&gt;(f.&lt;span class="pl-c1"&gt;__name__&lt;/span&gt;,))
  &lt;span class="pl-k"&gt;return&lt;/span&gt; g&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;它必须接受一个函数&lt;code&gt;f&lt;/code&gt;，然后返回另外一个函数&lt;code&gt;g&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;装饰器本质&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;本质上，它与下面的调用方式效果是等效的：&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;def myfun():
  pass

def myfun2():
  pass
  
def call_print(f):
  def g():
    print('you\'re calling %s function'%(f.__name__,))
  return g
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;下面是最重要的代码：&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;myfun = call_print(myfun)
myfun2 = call_print(myfun2)
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;大家看明白吗？也就是call_print(myfun)后不是返回一个函数吗，然后再赋值给myfun.&lt;/p&gt;
&lt;p&gt;再次调用myfun, myfun2时，效果是这样的：&lt;/p&gt;
&lt;div class="highlight highlight-source-python"&gt;&lt;pre&gt;In [&lt;span class="pl-c1"&gt;32&lt;/span&gt;]: myfun()
you&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;re calling myfun function&lt;span class="pl-ii"&gt;&lt;/span&gt;&lt;/span&gt;

In [&lt;span class="pl-c1"&gt;33&lt;/span&gt;]: myfun2()
you&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;re calling myfun2 function&lt;span class="pl-ii"&gt;&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;你看，这与装饰器的实现效果是一模一样的。装饰器的写法可能更加直观些，所以不用显示的这样赋值：&lt;code&gt;myfun = call_print(myfun)&lt;/code&gt;，&lt;code&gt;myfun2 = call_print(myfun2)&lt;/code&gt;，但是装饰器的这种封装，猛一看，有些不好理解。&lt;/p&gt;
&lt;h4&gt;&lt;a id="user-content-15-定制递减迭代器" class="anchor" aria-hidden="true" href="#15-定制递减迭代器"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;15 定制递减迭代器&lt;/h4&gt;
&lt;div class="highlight highlight-source-python"&gt;&lt;pre&gt;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt;编写一个迭代器，通过循环语句，实现对某个正整数的依次递减1，直到0.&lt;/span&gt;
&lt;span class="pl-k"&gt;class&lt;/span&gt; &lt;span class="pl-en"&gt;Descend&lt;/span&gt;(&lt;span class="pl-e"&gt;Iterator&lt;/span&gt;):
    &lt;span class="pl-k"&gt;def&lt;/span&gt; &lt;span class="pl-c1"&gt;__init__&lt;/span&gt;(&lt;span class="pl-smi"&gt;&lt;span class="pl-smi"&gt;self&lt;/span&gt;&lt;/span&gt;,&lt;span class="pl-smi"&gt;N&lt;/span&gt;):
        &lt;span class="pl-c1"&gt;self&lt;/span&gt;.N&lt;span class="pl-k"&gt;=&lt;/span&gt;N
        &lt;span class="pl-c1"&gt;self&lt;/span&gt;.a&lt;span class="pl-k"&gt;=&lt;/span&gt;&lt;span class="pl-c1"&gt;0&lt;/span&gt;
    &lt;span class="pl-k"&gt;def&lt;/span&gt; &lt;span class="pl-c1"&gt;__iter__&lt;/span&gt;(&lt;span class="pl-smi"&gt;&lt;span class="pl-smi"&gt;self&lt;/span&gt;&lt;/span&gt;):
        &lt;span class="pl-k"&gt;return&lt;/span&gt; &lt;span class="pl-c1"&gt;self&lt;/span&gt; 
    &lt;span class="pl-k"&gt;def&lt;/span&gt; &lt;span class="pl-c1"&gt;__next__&lt;/span&gt;(&lt;span class="pl-smi"&gt;&lt;span class="pl-smi"&gt;self&lt;/span&gt;&lt;/span&gt;):
        &lt;span class="pl-k"&gt;while&lt;/span&gt; &lt;span class="pl-c1"&gt;self&lt;/span&gt;.a&lt;span class="pl-k"&gt;&amp;lt;&lt;/span&gt;&lt;span class="pl-c1"&gt;self&lt;/span&gt;.N:
            &lt;span class="pl-c1"&gt;self&lt;/span&gt;.N&lt;span class="pl-k"&gt;-=&lt;/span&gt;&lt;span class="pl-c1"&gt;1&lt;/span&gt;
            &lt;span class="pl-k"&gt;return&lt;/span&gt; &lt;span class="pl-c1"&gt;self&lt;/span&gt;.N
        &lt;span class="pl-k"&gt;raise&lt;/span&gt; &lt;span class="pl-c1"&gt;StopIteration&lt;/span&gt;
    
descend_iter&lt;span class="pl-k"&gt;=&lt;/span&gt;Descend(&lt;span class="pl-c1"&gt;10&lt;/span&gt;)
&lt;span class="pl-c1"&gt;print&lt;/span&gt;(&lt;span class="pl-c1"&gt;list&lt;/span&gt;(descend_iter))
[&lt;span class="pl-c1"&gt;9&lt;/span&gt;, &lt;span class="pl-c1"&gt;8&lt;/span&gt;, &lt;span class="pl-c1"&gt;7&lt;/span&gt;, &lt;span class="pl-c1"&gt;6&lt;/span&gt;, &lt;span class="pl-c1"&gt;5&lt;/span&gt;, &lt;span class="pl-c1"&gt;4&lt;/span&gt;, &lt;span class="pl-c1"&gt;3&lt;/span&gt;, &lt;span class="pl-c1"&gt;2&lt;/span&gt;, &lt;span class="pl-c1"&gt;1&lt;/span&gt;, &lt;span class="pl-c1"&gt;0&lt;/span&gt;]&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;核心要点：&lt;/p&gt;
&lt;p&gt;1 &lt;code&gt;__nex__ &lt;/code&gt;名字不能变，实现定制的迭代逻辑&lt;/p&gt;
&lt;p&gt;2 &lt;code&gt;raise StopIteration&lt;/code&gt;：通过 raise 中断程序，必须这样写&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-五python绘图" class="anchor" aria-hidden="true" href="#五python绘图"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;五、Python绘图&lt;/h3&gt;
&lt;p&gt;Python常用的绘图工具包括：&lt;code&gt;matplotlib&lt;/code&gt;, &lt;code&gt;seaborn&lt;/code&gt;, &lt;code&gt;plotly&lt;/code&gt;等，以及一些其他专用于绘制某类图如词云图等的包，描绘绘图轨迹的&lt;code&gt;turtle&lt;/code&gt;包等。本章节将会使用一些例子由易到难的阐述绘图的经典小例子，目前共收录&lt;code&gt;21&lt;/code&gt;个。&lt;/p&gt;
&lt;h4&gt;&lt;a id="user-content-1-turtle绘制奥运五环图" class="anchor" aria-hidden="true" href="#1-turtle绘制奥运五环图"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;1 turtle绘制奥运五环图&lt;/h4&gt;
&lt;p&gt;turtle绘图的函数非常好用，基本看到函数名字，就能知道它的含义，下面使用turtle，仅用15行代码来绘制奥运五环图。&lt;/p&gt;
&lt;p&gt;1 导入库&lt;/p&gt;
&lt;div class="highlight highlight-source-python"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;import&lt;/span&gt; turtle &lt;span class="pl-k"&gt;as&lt;/span&gt; p&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;2 定义画圆函数&lt;/p&gt;
&lt;div class="highlight highlight-source-python"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;def&lt;/span&gt; &lt;span class="pl-en"&gt;drawCircle&lt;/span&gt;(&lt;span class="pl-smi"&gt;x&lt;/span&gt;,&lt;span class="pl-smi"&gt;y&lt;/span&gt;,&lt;span class="pl-smi"&gt;c&lt;/span&gt;&lt;span class="pl-k"&gt;=&lt;/span&gt;&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;red&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;):
    p.pu()&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; 抬起画笔&lt;/span&gt;
    p.goto(x,y) &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; 绘制圆的起始位置&lt;/span&gt;
    p.pd()&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; 放下画笔&lt;/span&gt;
    p.color(c)&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; 绘制c色圆环&lt;/span&gt;
    p.circle(&lt;span class="pl-c1"&gt;30&lt;/span&gt;,&lt;span class="pl-c1"&gt;360&lt;/span&gt;) &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt;绘制圆：半径，角度&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;3 画笔基本设置&lt;/p&gt;
&lt;div class="highlight highlight-source-python"&gt;&lt;pre&gt;p &lt;span class="pl-k"&gt;=&lt;/span&gt; turtle
p.pensize(&lt;span class="pl-c1"&gt;3&lt;/span&gt;) &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; 画笔尺寸设置3&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;4 绘制五环图&lt;/p&gt;
&lt;p&gt;调用画圆函数&lt;/p&gt;
&lt;div class="highlight highlight-source-python"&gt;&lt;pre&gt;drawCircle(&lt;span class="pl-c1"&gt;0&lt;/span&gt;,&lt;span class="pl-c1"&gt;0&lt;/span&gt;,&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;blue&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;)
drawCircle(&lt;span class="pl-c1"&gt;60&lt;/span&gt;,&lt;span class="pl-c1"&gt;0&lt;/span&gt;,&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;black&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;)
drawCircle(&lt;span class="pl-c1"&gt;120&lt;/span&gt;,&lt;span class="pl-c1"&gt;0&lt;/span&gt;,&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;red&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;)
drawCircle(&lt;span class="pl-c1"&gt;90&lt;/span&gt;,&lt;span class="pl-k"&gt;-&lt;/span&gt;&lt;span class="pl-c1"&gt;30&lt;/span&gt;,&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;green&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;)
drawCircle(&lt;span class="pl-c1"&gt;30&lt;/span&gt;,&lt;span class="pl-k"&gt;-&lt;/span&gt;&lt;span class="pl-c1"&gt;30&lt;/span&gt;,&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;yellow&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;)    

p.done()&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;结果：&lt;/p&gt;
&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="./img/turtle1.png"&gt;&lt;img src="./img/turtle1.png" alt="" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h4&gt;&lt;a id="user-content-2-turtle绘制漫天雪花" class="anchor" aria-hidden="true" href="#2-turtle绘制漫天雪花"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;2 turtle绘制漫天雪花&lt;/h4&gt;
&lt;p&gt;导入模块&lt;/p&gt;
&lt;p&gt;导入 &lt;code&gt;turtle&lt;/code&gt;库和 python的 &lt;code&gt;random&lt;/code&gt;&lt;/p&gt;
&lt;div class="highlight highlight-source-python"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;import&lt;/span&gt; turtle &lt;span class="pl-k"&gt;as&lt;/span&gt; p
&lt;span class="pl-k"&gt;import&lt;/span&gt; random&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;绘制雪花&lt;/p&gt;
&lt;div class="highlight highlight-source-python"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;def&lt;/span&gt; &lt;span class="pl-en"&gt;snow&lt;/span&gt;(&lt;span class="pl-smi"&gt;snow_count&lt;/span&gt;):
    p.hideturtle()
    p.speed(&lt;span class="pl-c1"&gt;500&lt;/span&gt;)
    p.pensize(&lt;span class="pl-c1"&gt;2&lt;/span&gt;)
    &lt;span class="pl-k"&gt;for&lt;/span&gt; i &lt;span class="pl-k"&gt;in&lt;/span&gt; &lt;span class="pl-c1"&gt;range&lt;/span&gt;(snow_count):
        r &lt;span class="pl-k"&gt;=&lt;/span&gt; random.random()
        g &lt;span class="pl-k"&gt;=&lt;/span&gt; random.random()
        b &lt;span class="pl-k"&gt;=&lt;/span&gt; random.random()
        p.pencolor(r, g, b)
        p.pu()
        p.goto(random.randint(&lt;span class="pl-k"&gt;-&lt;/span&gt;&lt;span class="pl-c1"&gt;350&lt;/span&gt;, &lt;span class="pl-c1"&gt;350&lt;/span&gt;), random.randint(&lt;span class="pl-c1"&gt;1&lt;/span&gt;, &lt;span class="pl-c1"&gt;270&lt;/span&gt;))
        p.pd()
        dens &lt;span class="pl-k"&gt;=&lt;/span&gt; random.randint(&lt;span class="pl-c1"&gt;8&lt;/span&gt;, &lt;span class="pl-c1"&gt;12&lt;/span&gt;)
        snowsize &lt;span class="pl-k"&gt;=&lt;/span&gt; random.randint(&lt;span class="pl-c1"&gt;10&lt;/span&gt;, &lt;span class="pl-c1"&gt;14&lt;/span&gt;)
        &lt;span class="pl-k"&gt;for&lt;/span&gt; _ &lt;span class="pl-k"&gt;in&lt;/span&gt; &lt;span class="pl-c1"&gt;range&lt;/span&gt;(dens):
            p.forward(snowsize)  &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; 向当前画笔方向移动snowsize像素长度&lt;/span&gt;
            p.backward(snowsize)  &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; 向当前画笔相反方向移动snowsize像素长度&lt;/span&gt;
            p.right(&lt;span class="pl-c1"&gt;360&lt;/span&gt; &lt;span class="pl-k"&gt;/&lt;/span&gt; dens)  &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; 顺时针移动360 / dens度&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;绘制地面&lt;/p&gt;
&lt;div class="highlight highlight-source-python"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;def&lt;/span&gt; &lt;span class="pl-en"&gt;ground&lt;/span&gt;(&lt;span class="pl-smi"&gt;ground_line_count&lt;/span&gt;):
    p.hideturtle()
    p.speed(&lt;span class="pl-c1"&gt;500&lt;/span&gt;)
    &lt;span class="pl-k"&gt;for&lt;/span&gt; i &lt;span class="pl-k"&gt;in&lt;/span&gt; &lt;span class="pl-c1"&gt;range&lt;/span&gt;(ground_line_count):
        p.pensize(random.randint(&lt;span class="pl-c1"&gt;5&lt;/span&gt;, &lt;span class="pl-c1"&gt;10&lt;/span&gt;))
        x &lt;span class="pl-k"&gt;=&lt;/span&gt; random.randint(&lt;span class="pl-k"&gt;-&lt;/span&gt;&lt;span class="pl-c1"&gt;400&lt;/span&gt;, &lt;span class="pl-c1"&gt;350&lt;/span&gt;)
        y &lt;span class="pl-k"&gt;=&lt;/span&gt; random.randint(&lt;span class="pl-k"&gt;-&lt;/span&gt;&lt;span class="pl-c1"&gt;280&lt;/span&gt;, &lt;span class="pl-k"&gt;-&lt;/span&gt;&lt;span class="pl-c1"&gt;1&lt;/span&gt;)
        r &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-k"&gt;-&lt;/span&gt;y &lt;span class="pl-k"&gt;/&lt;/span&gt; &lt;span class="pl-c1"&gt;280&lt;/span&gt;
        g &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-k"&gt;-&lt;/span&gt;y &lt;span class="pl-k"&gt;/&lt;/span&gt; &lt;span class="pl-c1"&gt;280&lt;/span&gt;
        b &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-k"&gt;-&lt;/span&gt;y &lt;span class="pl-k"&gt;/&lt;/span&gt; &lt;span class="pl-c1"&gt;280&lt;/span&gt;
        p.pencolor(r, g, b)
        p.penup()  &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; 抬起画笔&lt;/span&gt;
        p.goto(x, y)  &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; 让画笔移动到此位置&lt;/span&gt;
        p.pendown()  &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; 放下画笔&lt;/span&gt;
        p.forward(random.randint(&lt;span class="pl-c1"&gt;40&lt;/span&gt;, &lt;span class="pl-c1"&gt;100&lt;/span&gt;))  &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; 眼当前画笔方向向前移动40~100距离&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;主函数&lt;/p&gt;
&lt;div class="highlight highlight-source-python"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;def&lt;/span&gt; &lt;span class="pl-en"&gt;main&lt;/span&gt;():
    p.setup(&lt;span class="pl-c1"&gt;800&lt;/span&gt;, &lt;span class="pl-c1"&gt;600&lt;/span&gt;, &lt;span class="pl-c1"&gt;0&lt;/span&gt;, &lt;span class="pl-c1"&gt;0&lt;/span&gt;)
    &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; p.tracer(False)&lt;/span&gt;
    p.bgcolor(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;black&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
    snow(&lt;span class="pl-c1"&gt;30&lt;/span&gt;)
    ground(&lt;span class="pl-c1"&gt;30&lt;/span&gt;)
    &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; p.tracer(True)&lt;/span&gt;
    p.mainloop()

main()&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;动态图结果展示：&lt;/p&gt;
&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="./img/turtlesnow.gif"&gt;&lt;img src="./img/turtlesnow.gif" alt="Sample" width="600" height="300" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h4&gt;&lt;a id="user-content-3-wordcloud词云图" class="anchor" aria-hidden="true" href="#3-wordcloud词云图"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;3 wordcloud词云图&lt;/h4&gt;
&lt;div class="highlight highlight-source-python"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;import&lt;/span&gt; hashlib
&lt;span class="pl-k"&gt;import&lt;/span&gt; pandas &lt;span class="pl-k"&gt;as&lt;/span&gt; pd
&lt;span class="pl-k"&gt;from&lt;/span&gt; wordcloud &lt;span class="pl-k"&gt;import&lt;/span&gt; WordCloud
geo_data&lt;span class="pl-k"&gt;=&lt;/span&gt;pd.read_excel(&lt;span class="pl-sr"&gt;&lt;span class="pl-k"&gt;r&lt;/span&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;span class="pl-c1"&gt;..&lt;/span&gt;/data/geo_data&lt;span class="pl-c1"&gt;.&lt;/span&gt;xlsx&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
&lt;span class="pl-c1"&gt;print&lt;/span&gt;(geo_data)
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; 0     深圳&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; 1     深圳&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; 2     深圳&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; 3     深圳&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; 4     深圳&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; 5     深圳&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; 6     深圳&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; 7     广州&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; 8     广州&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; 9     广州&lt;/span&gt;

words &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;,&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;.join(x &lt;span class="pl-k"&gt;for&lt;/span&gt; x &lt;span class="pl-k"&gt;in&lt;/span&gt; geo_data[&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;city&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;] &lt;span class="pl-k"&gt;if&lt;/span&gt; x &lt;span class="pl-k"&gt;!=&lt;/span&gt; []) &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt;筛选出非空列表值&lt;/span&gt;
wc &lt;span class="pl-k"&gt;=&lt;/span&gt; WordCloud(
    &lt;span class="pl-v"&gt;background_color&lt;/span&gt;&lt;span class="pl-k"&gt;=&lt;/span&gt;&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;green&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt;背景颜色"green"绿色&lt;/span&gt;
    &lt;span class="pl-v"&gt;max_words&lt;/span&gt;&lt;span class="pl-k"&gt;=&lt;/span&gt;&lt;span class="pl-c1"&gt;100&lt;/span&gt;, &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt;显示最大词数&lt;/span&gt;
    &lt;span class="pl-v"&gt;font_path&lt;/span&gt;&lt;span class="pl-k"&gt;=&lt;/span&gt;&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;./fonts/simhei.ttf&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt;显示中文&lt;/span&gt;
    &lt;span class="pl-v"&gt;min_font_size&lt;/span&gt;&lt;span class="pl-k"&gt;=&lt;/span&gt;&lt;span class="pl-c1"&gt;5&lt;/span&gt;,
    &lt;span class="pl-v"&gt;max_font_size&lt;/span&gt;&lt;span class="pl-k"&gt;=&lt;/span&gt;&lt;span class="pl-c1"&gt;100&lt;/span&gt;,
    &lt;span class="pl-v"&gt;width&lt;/span&gt;&lt;span class="pl-k"&gt;=&lt;/span&gt;&lt;span class="pl-c1"&gt;500&lt;/span&gt;  &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt;图幅宽度&lt;/span&gt;
    )
x &lt;span class="pl-k"&gt;=&lt;/span&gt; wc.generate(words)
x.to_file(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;../data/geo_data.png&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;)&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="./data/geo_data.png"&gt;&lt;img src="./data/geo_data.png" alt="" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h4&gt;&lt;a id="user-content-4-plotly画柱状图和折线图" class="anchor" aria-hidden="true" href="#4-plotly画柱状图和折线图"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;4 plotly画柱状图和折线图&lt;/h4&gt;
&lt;div class="highlight highlight-source-python"&gt;&lt;pre&gt;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt;柱状图+折线图&lt;/span&gt;
&lt;span class="pl-k"&gt;import&lt;/span&gt; plotly.graph_objects &lt;span class="pl-k"&gt;as&lt;/span&gt; go
fig &lt;span class="pl-k"&gt;=&lt;/span&gt; go.Figure()
fig.add_trace(
    go.Scatter(
        &lt;span class="pl-v"&gt;x&lt;/span&gt;&lt;span class="pl-k"&gt;=&lt;/span&gt;[&lt;span class="pl-c1"&gt;0&lt;/span&gt;, &lt;span class="pl-c1"&gt;1&lt;/span&gt;, &lt;span class="pl-c1"&gt;2&lt;/span&gt;, &lt;span class="pl-c1"&gt;3&lt;/span&gt;, &lt;span class="pl-c1"&gt;4&lt;/span&gt;, &lt;span class="pl-c1"&gt;5&lt;/span&gt;],
        &lt;span class="pl-v"&gt;y&lt;/span&gt;&lt;span class="pl-k"&gt;=&lt;/span&gt;[&lt;span class="pl-c1"&gt;1.5&lt;/span&gt;, &lt;span class="pl-c1"&gt;1&lt;/span&gt;, &lt;span class="pl-c1"&gt;1.3&lt;/span&gt;, &lt;span class="pl-c1"&gt;0.7&lt;/span&gt;, &lt;span class="pl-c1"&gt;0.8&lt;/span&gt;, &lt;span class="pl-c1"&gt;0.9&lt;/span&gt;]
    ))
fig.add_trace(
    go.Bar(
        &lt;span class="pl-v"&gt;x&lt;/span&gt;&lt;span class="pl-k"&gt;=&lt;/span&gt;[&lt;span class="pl-c1"&gt;0&lt;/span&gt;, &lt;span class="pl-c1"&gt;1&lt;/span&gt;, &lt;span class="pl-c1"&gt;2&lt;/span&gt;, &lt;span class="pl-c1"&gt;3&lt;/span&gt;, &lt;span class="pl-c1"&gt;4&lt;/span&gt;, &lt;span class="pl-c1"&gt;5&lt;/span&gt;],
        &lt;span class="pl-v"&gt;y&lt;/span&gt;&lt;span class="pl-k"&gt;=&lt;/span&gt;[&lt;span class="pl-c1"&gt;2&lt;/span&gt;, &lt;span class="pl-c1"&gt;0.5&lt;/span&gt;, &lt;span class="pl-c1"&gt;0.7&lt;/span&gt;, &lt;span class="pl-k"&gt;-&lt;/span&gt;&lt;span class="pl-c1"&gt;1.2&lt;/span&gt;, &lt;span class="pl-c1"&gt;0.3&lt;/span&gt;, &lt;span class="pl-c1"&gt;0.4&lt;/span&gt;]
    ))
fig.show()&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;![]&lt;/p&gt;
&lt;h4&gt;&lt;a id="user-content-5-seaborn热力图" class="anchor" aria-hidden="true" href="#5-seaborn热力图"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;5 seaborn热力图&lt;/h4&gt;
&lt;div class="highlight highlight-source-python"&gt;&lt;pre&gt;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; 导入库&lt;/span&gt;
&lt;span class="pl-k"&gt;import&lt;/span&gt; seaborn &lt;span class="pl-k"&gt;as&lt;/span&gt; sns
&lt;span class="pl-k"&gt;import&lt;/span&gt; pandas &lt;span class="pl-k"&gt;as&lt;/span&gt; pd
&lt;span class="pl-k"&gt;import&lt;/span&gt; numpy &lt;span class="pl-k"&gt;as&lt;/span&gt; np
&lt;span class="pl-k"&gt;import&lt;/span&gt; matplotlib.pyplot &lt;span class="pl-k"&gt;as&lt;/span&gt; plt

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; 生成数据集&lt;/span&gt;
data &lt;span class="pl-k"&gt;=&lt;/span&gt; np.random.random((&lt;span class="pl-c1"&gt;6&lt;/span&gt;,&lt;span class="pl-c1"&gt;6&lt;/span&gt;))
np.fill_diagonal(data,np.ones(&lt;span class="pl-c1"&gt;6&lt;/span&gt;))
features &lt;span class="pl-k"&gt;=&lt;/span&gt; [&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;prop1&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;,&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;prop2&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;,&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;prop3&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;,&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;prop4&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;,&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;prop5&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;prop6&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;]
data &lt;span class="pl-k"&gt;=&lt;/span&gt; pd.DataFrame(data, &lt;span class="pl-v"&gt;index&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; features, &lt;span class="pl-v"&gt;columns&lt;/span&gt;&lt;span class="pl-k"&gt;=&lt;/span&gt;features)
&lt;span class="pl-c1"&gt;print&lt;/span&gt;(data)
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; 绘制热力图&lt;/span&gt;
heatmap_plot &lt;span class="pl-k"&gt;=&lt;/span&gt; sns.heatmap(data, &lt;span class="pl-v"&gt;center&lt;/span&gt;&lt;span class="pl-k"&gt;=&lt;/span&gt;&lt;span class="pl-c1"&gt;0&lt;/span&gt;, &lt;span class="pl-v"&gt;cmap&lt;/span&gt;&lt;span class="pl-k"&gt;=&lt;/span&gt;&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;gist_rainbow&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;)
plt.show()&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="./img/heatmap.png"&gt;&lt;img src="./img/heatmap.png" alt="" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h4&gt;&lt;a id="user-content-6-matplotlib折线图" class="anchor" aria-hidden="true" href="#6-matplotlib折线图"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;6 matplotlib折线图&lt;/h4&gt;
&lt;p&gt;模块名称：example_utils.py，里面包括三个函数，各自功能如下：&lt;/p&gt;
&lt;div class="highlight highlight-source-python"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;import&lt;/span&gt; matplotlib.pyplot &lt;span class="pl-k"&gt;as&lt;/span&gt; plt

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; 创建画图fig和axes&lt;/span&gt;
&lt;span class="pl-k"&gt;def&lt;/span&gt; &lt;span class="pl-en"&gt;setup_axes&lt;/span&gt;():
    fig, axes &lt;span class="pl-k"&gt;=&lt;/span&gt; plt.subplots(&lt;span class="pl-v"&gt;ncols&lt;/span&gt;&lt;span class="pl-k"&gt;=&lt;/span&gt;&lt;span class="pl-c1"&gt;3&lt;/span&gt;, &lt;span class="pl-v"&gt;figsize&lt;/span&gt;&lt;span class="pl-k"&gt;=&lt;/span&gt;(&lt;span class="pl-c1"&gt;6.5&lt;/span&gt;,&lt;span class="pl-c1"&gt;3&lt;/span&gt;))
    &lt;span class="pl-k"&gt;for&lt;/span&gt; ax &lt;span class="pl-k"&gt;in&lt;/span&gt; fig.axes:
        ax.set(&lt;span class="pl-v"&gt;xticks&lt;/span&gt;&lt;span class="pl-k"&gt;=&lt;/span&gt;[], &lt;span class="pl-v"&gt;yticks&lt;/span&gt;&lt;span class="pl-k"&gt;=&lt;/span&gt;[])
    fig.subplots_adjust(&lt;span class="pl-v"&gt;wspace&lt;/span&gt;&lt;span class="pl-k"&gt;=&lt;/span&gt;&lt;span class="pl-c1"&gt;0&lt;/span&gt;, &lt;span class="pl-v"&gt;left&lt;/span&gt;&lt;span class="pl-k"&gt;=&lt;/span&gt;&lt;span class="pl-c1"&gt;0&lt;/span&gt;, &lt;span class="pl-v"&gt;right&lt;/span&gt;&lt;span class="pl-k"&gt;=&lt;/span&gt;&lt;span class="pl-c1"&gt;0.93&lt;/span&gt;)
    &lt;span class="pl-k"&gt;return&lt;/span&gt; fig, axes
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; 图片标题&lt;/span&gt;
&lt;span class="pl-k"&gt;def&lt;/span&gt; &lt;span class="pl-en"&gt;title&lt;/span&gt;(&lt;span class="pl-smi"&gt;fig&lt;/span&gt;, &lt;span class="pl-smi"&gt;text&lt;/span&gt;, &lt;span class="pl-smi"&gt;y&lt;/span&gt;&lt;span class="pl-k"&gt;=&lt;/span&gt;&lt;span class="pl-c1"&gt;0.9&lt;/span&gt;):
    fig.suptitle(text, &lt;span class="pl-v"&gt;size&lt;/span&gt;&lt;span class="pl-k"&gt;=&lt;/span&gt;&lt;span class="pl-c1"&gt;14&lt;/span&gt;, &lt;span class="pl-v"&gt;y&lt;/span&gt;&lt;span class="pl-k"&gt;=&lt;/span&gt;y, &lt;span class="pl-v"&gt;weight&lt;/span&gt;&lt;span class="pl-k"&gt;=&lt;/span&gt;&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;semibold&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-v"&gt;x&lt;/span&gt;&lt;span class="pl-k"&gt;=&lt;/span&gt;&lt;span class="pl-c1"&gt;0.98&lt;/span&gt;, &lt;span class="pl-v"&gt;ha&lt;/span&gt;&lt;span class="pl-k"&gt;=&lt;/span&gt;&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;right&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;,
                 &lt;span class="pl-v"&gt;bbox&lt;/span&gt;&lt;span class="pl-k"&gt;=&lt;/span&gt;&lt;span class="pl-c1"&gt;dict&lt;/span&gt;(&lt;span class="pl-v"&gt;boxstyle&lt;/span&gt;&lt;span class="pl-k"&gt;=&lt;/span&gt;&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;round&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-v"&gt;fc&lt;/span&gt;&lt;span class="pl-k"&gt;=&lt;/span&gt;&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;floralwhite&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-v"&gt;ec&lt;/span&gt;&lt;span class="pl-k"&gt;=&lt;/span&gt;&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;#8B7E66&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;,
                           &lt;span class="pl-v"&gt;lw&lt;/span&gt;&lt;span class="pl-k"&gt;=&lt;/span&gt;&lt;span class="pl-c1"&gt;2&lt;/span&gt;))
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; 为数据添加文本注释&lt;/span&gt;
&lt;span class="pl-k"&gt;def&lt;/span&gt; &lt;span class="pl-en"&gt;label&lt;/span&gt;(&lt;span class="pl-smi"&gt;ax&lt;/span&gt;, &lt;span class="pl-smi"&gt;text&lt;/span&gt;, &lt;span class="pl-smi"&gt;y&lt;/span&gt;&lt;span class="pl-k"&gt;=&lt;/span&gt;&lt;span class="pl-c1"&gt;0&lt;/span&gt;):
    ax.annotate(text, &lt;span class="pl-v"&gt;xy&lt;/span&gt;&lt;span class="pl-k"&gt;=&lt;/span&gt;(&lt;span class="pl-c1"&gt;0.5&lt;/span&gt;, &lt;span class="pl-c1"&gt;0.00&lt;/span&gt;), &lt;span class="pl-v"&gt;xycoords&lt;/span&gt;&lt;span class="pl-k"&gt;=&lt;/span&gt;&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;axes fraction&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-v"&gt;ha&lt;/span&gt;&lt;span class="pl-k"&gt;=&lt;/span&gt;&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;center&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;,
                &lt;span class="pl-v"&gt;style&lt;/span&gt;&lt;span class="pl-k"&gt;=&lt;/span&gt;&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;italic&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;,
                &lt;span class="pl-v"&gt;bbox&lt;/span&gt;&lt;span class="pl-k"&gt;=&lt;/span&gt;&lt;span class="pl-c1"&gt;dict&lt;/span&gt;(&lt;span class="pl-v"&gt;boxstyle&lt;/span&gt;&lt;span class="pl-k"&gt;=&lt;/span&gt;&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;round&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-v"&gt;facecolor&lt;/span&gt;&lt;span class="pl-k"&gt;=&lt;/span&gt;&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;floralwhite&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;,
                          &lt;span class="pl-v"&gt;ec&lt;/span&gt;&lt;span class="pl-k"&gt;=&lt;/span&gt;&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;#8B7E66&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;))&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="./img/matplotlib1.png"&gt;&lt;img src="./img/matplotlib1.png" alt="" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;div class="highlight highlight-source-python"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;import&lt;/span&gt; numpy &lt;span class="pl-k"&gt;as&lt;/span&gt; np
&lt;span class="pl-k"&gt;import&lt;/span&gt; matplotlib.pyplot &lt;span class="pl-k"&gt;as&lt;/span&gt; plt

&lt;span class="pl-k"&gt;import&lt;/span&gt; example_utils

x &lt;span class="pl-k"&gt;=&lt;/span&gt; np.linspace(&lt;span class="pl-c1"&gt;0&lt;/span&gt;, &lt;span class="pl-c1"&gt;10&lt;/span&gt;, &lt;span class="pl-c1"&gt;100&lt;/span&gt;)

fig, axes &lt;span class="pl-k"&gt;=&lt;/span&gt; example_utils.setup_axes()
&lt;span class="pl-k"&gt;for&lt;/span&gt; ax &lt;span class="pl-k"&gt;in&lt;/span&gt; axes:
    ax.margins(&lt;span class="pl-v"&gt;y&lt;/span&gt;&lt;span class="pl-k"&gt;=&lt;/span&gt;&lt;span class="pl-c1"&gt;0.10&lt;/span&gt;)

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; 子图1 默认plot多条线，颜色系统分配&lt;/span&gt;
&lt;span class="pl-k"&gt;for&lt;/span&gt; i &lt;span class="pl-k"&gt;in&lt;/span&gt; &lt;span class="pl-c1"&gt;range&lt;/span&gt;(&lt;span class="pl-c1"&gt;1&lt;/span&gt;, &lt;span class="pl-c1"&gt;6&lt;/span&gt;):
    axes[&lt;span class="pl-c1"&gt;0&lt;/span&gt;].plot(x, i &lt;span class="pl-k"&gt;*&lt;/span&gt; x)

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; 子图2 展示线的不同linestyle&lt;/span&gt;
&lt;span class="pl-k"&gt;for&lt;/span&gt; i, ls &lt;span class="pl-k"&gt;in&lt;/span&gt; &lt;span class="pl-c1"&gt;enumerate&lt;/span&gt;([&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;-&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;--&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;:&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;-.&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;]):
    axes[&lt;span class="pl-c1"&gt;1&lt;/span&gt;].plot(x, np.cos(x) &lt;span class="pl-k"&gt;+&lt;/span&gt; i, &lt;span class="pl-v"&gt;linestyle&lt;/span&gt;&lt;span class="pl-k"&gt;=&lt;/span&gt;ls)

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; 子图3 展示线的不同linestyle和marker&lt;/span&gt;
&lt;span class="pl-k"&gt;for&lt;/span&gt; i, (ls, mk) &lt;span class="pl-k"&gt;in&lt;/span&gt; &lt;span class="pl-c1"&gt;enumerate&lt;/span&gt;(&lt;span class="pl-c1"&gt;zip&lt;/span&gt;([&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;-&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;:&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;], [&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;o&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;^&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;s&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;])):
    axes[&lt;span class="pl-c1"&gt;2&lt;/span&gt;].plot(x, np.cos(x) &lt;span class="pl-k"&gt;+&lt;/span&gt; i &lt;span class="pl-k"&gt;*&lt;/span&gt; x, &lt;span class="pl-v"&gt;linestyle&lt;/span&gt;&lt;span class="pl-k"&gt;=&lt;/span&gt;ls, &lt;span class="pl-v"&gt;marker&lt;/span&gt;&lt;span class="pl-k"&gt;=&lt;/span&gt;mk, &lt;span class="pl-v"&gt;markevery&lt;/span&gt;&lt;span class="pl-k"&gt;=&lt;/span&gt;&lt;span class="pl-c1"&gt;10&lt;/span&gt;)

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; 设置标题&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; example_utils.title(fig, '"ax.plot(x, y, ...)": Lines and/or markers', y=0.95)&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; 保存图片&lt;/span&gt;
fig.savefig(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;plot_example.png&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-v"&gt;facecolor&lt;/span&gt;&lt;span class="pl-k"&gt;=&lt;/span&gt;&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;none&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;)
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; 展示图片&lt;/span&gt;
plt.show()&lt;/pre&gt;&lt;/div&gt;
&lt;h4&gt;&lt;a id="user-content-7-matplotlib散点图" class="anchor" aria-hidden="true" href="#7-matplotlib散点图"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;7 matplotlib散点图&lt;/h4&gt;
&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="./img/1578811129148.png"&gt;&lt;img src="./img/1578811129148.png" alt="1578811129148" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;对应代码：&lt;/p&gt;
&lt;div class="highlight highlight-source-python"&gt;&lt;pre&gt;&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"""&lt;/span&gt;&lt;/span&gt;
&lt;span class="pl-s"&gt;散点图的基本用法&lt;/span&gt;
&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"""&lt;/span&gt;&lt;/span&gt;
&lt;span class="pl-k"&gt;import&lt;/span&gt; numpy &lt;span class="pl-k"&gt;as&lt;/span&gt; np
&lt;span class="pl-k"&gt;import&lt;/span&gt; matplotlib.pyplot &lt;span class="pl-k"&gt;as&lt;/span&gt; plt

&lt;span class="pl-k"&gt;import&lt;/span&gt; example_utils

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; 随机生成数据&lt;/span&gt;
np.random.seed(&lt;span class="pl-c1"&gt;1874&lt;/span&gt;)
x, y, z &lt;span class="pl-k"&gt;=&lt;/span&gt; np.random.normal(&lt;span class="pl-c1"&gt;0&lt;/span&gt;, &lt;span class="pl-c1"&gt;1&lt;/span&gt;, (&lt;span class="pl-c1"&gt;3&lt;/span&gt;, &lt;span class="pl-c1"&gt;100&lt;/span&gt;))
t &lt;span class="pl-k"&gt;=&lt;/span&gt; np.arctan2(y, x)
size &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;50&lt;/span&gt; &lt;span class="pl-k"&gt;*&lt;/span&gt; np.cos(&lt;span class="pl-c1"&gt;2&lt;/span&gt; &lt;span class="pl-k"&gt;*&lt;/span&gt; t)&lt;span class="pl-k"&gt;**&lt;/span&gt;&lt;span class="pl-c1"&gt;2&lt;/span&gt; &lt;span class="pl-k"&gt;+&lt;/span&gt; &lt;span class="pl-c1"&gt;10&lt;/span&gt;

fig, axes &lt;span class="pl-k"&gt;=&lt;/span&gt; example_utils.setup_axes()

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; 子图1&lt;/span&gt;
axes[&lt;span class="pl-c1"&gt;0&lt;/span&gt;].scatter(x, y, &lt;span class="pl-v"&gt;marker&lt;/span&gt;&lt;span class="pl-k"&gt;=&lt;/span&gt;&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;o&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;,  &lt;span class="pl-v"&gt;color&lt;/span&gt;&lt;span class="pl-k"&gt;=&lt;/span&gt;&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;darkblue&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-v"&gt;facecolor&lt;/span&gt;&lt;span class="pl-k"&gt;=&lt;/span&gt;&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;white&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-v"&gt;s&lt;/span&gt;&lt;span class="pl-k"&gt;=&lt;/span&gt;&lt;span class="pl-c1"&gt;80&lt;/span&gt;)
example_utils.label(axes[&lt;span class="pl-c1"&gt;0&lt;/span&gt;], &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;scatter(x, y)&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;)

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; 子图2&lt;/span&gt;
axes[&lt;span class="pl-c1"&gt;1&lt;/span&gt;].scatter(x, y, &lt;span class="pl-v"&gt;marker&lt;/span&gt;&lt;span class="pl-k"&gt;=&lt;/span&gt;&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;s&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-v"&gt;color&lt;/span&gt;&lt;span class="pl-k"&gt;=&lt;/span&gt;&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;darkblue&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-v"&gt;s&lt;/span&gt;&lt;span class="pl-k"&gt;=&lt;/span&gt;size)
example_utils.label(axes[&lt;span class="pl-c1"&gt;1&lt;/span&gt;], &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;scatter(x, y, s)&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;)

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; 子图3&lt;/span&gt;
axes[&lt;span class="pl-c1"&gt;2&lt;/span&gt;].scatter(x, y, &lt;span class="pl-v"&gt;s&lt;/span&gt;&lt;span class="pl-k"&gt;=&lt;/span&gt;size, &lt;span class="pl-v"&gt;c&lt;/span&gt;&lt;span class="pl-k"&gt;=&lt;/span&gt;z,  &lt;span class="pl-v"&gt;cmap&lt;/span&gt;&lt;span class="pl-k"&gt;=&lt;/span&gt;&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;gist_ncar&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;)
example_utils.label(axes[&lt;span class="pl-c1"&gt;2&lt;/span&gt;], &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;scatter(x, y, s, c)&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;)

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; example_utils.title(fig, '"ax.scatter(...)": Colored/scaled markers',&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt;                     y=0.95)&lt;/span&gt;
fig.savefig(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;scatter_example.png&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-v"&gt;facecolor&lt;/span&gt;&lt;span class="pl-k"&gt;=&lt;/span&gt;&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;none&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;)

plt.show()&lt;/pre&gt;&lt;/div&gt;
&lt;h4&gt;&lt;a id="user-content-8-matplotlib柱状图" class="anchor" aria-hidden="true" href="#8-matplotlib柱状图"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;8 matplotlib柱状图&lt;/h4&gt;
&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="./img/1578811155501.png"&gt;&lt;img src="./img/1578811155501.png" alt="1578811155501" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;对应代码：&lt;/p&gt;
&lt;div class="highlight highlight-source-python"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;import&lt;/span&gt; numpy &lt;span class="pl-k"&gt;as&lt;/span&gt; np
&lt;span class="pl-k"&gt;import&lt;/span&gt; matplotlib.pyplot &lt;span class="pl-k"&gt;as&lt;/span&gt; plt

&lt;span class="pl-k"&gt;import&lt;/span&gt; example_utils


&lt;span class="pl-k"&gt;def&lt;/span&gt; &lt;span class="pl-en"&gt;main&lt;/span&gt;():
    fig, axes &lt;span class="pl-k"&gt;=&lt;/span&gt; example_utils.setup_axes()

    basic_bar(axes[&lt;span class="pl-c1"&gt;0&lt;/span&gt;])
    tornado(axes[&lt;span class="pl-c1"&gt;1&lt;/span&gt;])
    general(axes[&lt;span class="pl-c1"&gt;2&lt;/span&gt;])

    &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; example_utils.title(fig, '"ax.bar(...)": Plot rectangles')&lt;/span&gt;
    fig.savefig(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;bar_example.png&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-v"&gt;facecolor&lt;/span&gt;&lt;span class="pl-k"&gt;=&lt;/span&gt;&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;none&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;)
    plt.show()

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; 子图1&lt;/span&gt;
&lt;span class="pl-k"&gt;def&lt;/span&gt; &lt;span class="pl-en"&gt;basic_bar&lt;/span&gt;(&lt;span class="pl-smi"&gt;ax&lt;/span&gt;):
    y &lt;span class="pl-k"&gt;=&lt;/span&gt; [&lt;span class="pl-c1"&gt;1&lt;/span&gt;, &lt;span class="pl-c1"&gt;3&lt;/span&gt;, &lt;span class="pl-c1"&gt;4&lt;/span&gt;, &lt;span class="pl-c1"&gt;5.5&lt;/span&gt;, &lt;span class="pl-c1"&gt;3&lt;/span&gt;, &lt;span class="pl-c1"&gt;2&lt;/span&gt;]
    err &lt;span class="pl-k"&gt;=&lt;/span&gt; [&lt;span class="pl-c1"&gt;0.2&lt;/span&gt;, &lt;span class="pl-c1"&gt;1&lt;/span&gt;, &lt;span class="pl-c1"&gt;2.5&lt;/span&gt;, &lt;span class="pl-c1"&gt;1&lt;/span&gt;, &lt;span class="pl-c1"&gt;1&lt;/span&gt;, &lt;span class="pl-c1"&gt;0.5&lt;/span&gt;]
    x &lt;span class="pl-k"&gt;=&lt;/span&gt; np.arange(&lt;span class="pl-c1"&gt;len&lt;/span&gt;(y))
    ax.bar(x, y, &lt;span class="pl-v"&gt;yerr&lt;/span&gt;&lt;span class="pl-k"&gt;=&lt;/span&gt;err, &lt;span class="pl-v"&gt;color&lt;/span&gt;&lt;span class="pl-k"&gt;=&lt;/span&gt;&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;lightblue&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-v"&gt;ecolor&lt;/span&gt;&lt;span class="pl-k"&gt;=&lt;/span&gt;&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;black&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;)
    ax.margins(&lt;span class="pl-c1"&gt;0.05&lt;/span&gt;)
    ax.set_ylim(&lt;span class="pl-v"&gt;bottom&lt;/span&gt;&lt;span class="pl-k"&gt;=&lt;/span&gt;&lt;span class="pl-c1"&gt;0&lt;/span&gt;)
    example_utils.label(ax, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;bar(x, y, yerr=e)&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;)

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; 子图2&lt;/span&gt;
&lt;span class="pl-k"&gt;def&lt;/span&gt; &lt;span class="pl-en"&gt;tornado&lt;/span&gt;(&lt;span class="pl-smi"&gt;ax&lt;/span&gt;):
    y &lt;span class="pl-k"&gt;=&lt;/span&gt; np.arange(&lt;span class="pl-c1"&gt;8&lt;/span&gt;)
    x1 &lt;span class="pl-k"&gt;=&lt;/span&gt; y &lt;span class="pl-k"&gt;+&lt;/span&gt; np.random.random(&lt;span class="pl-c1"&gt;8&lt;/span&gt;) &lt;span class="pl-k"&gt;+&lt;/span&gt; &lt;span class="pl-c1"&gt;1&lt;/span&gt;
    x2 &lt;span class="pl-k"&gt;=&lt;/span&gt; y &lt;span class="pl-k"&gt;+&lt;/span&gt; &lt;span class="pl-c1"&gt;3&lt;/span&gt; &lt;span class="pl-k"&gt;*&lt;/span&gt; np.random.random(&lt;span class="pl-c1"&gt;8&lt;/span&gt;) &lt;span class="pl-k"&gt;+&lt;/span&gt; &lt;span class="pl-c1"&gt;1&lt;/span&gt;
    ax.barh(y, x1, &lt;span class="pl-v"&gt;color&lt;/span&gt;&lt;span class="pl-k"&gt;=&lt;/span&gt;&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;lightblue&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;)
    ax.barh(y, &lt;span class="pl-k"&gt;-&lt;/span&gt;x2, &lt;span class="pl-v"&gt;color&lt;/span&gt;&lt;span class="pl-k"&gt;=&lt;/span&gt;&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;salmon&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;)
    ax.margins(&lt;span class="pl-c1"&gt;0.15&lt;/span&gt;)
    example_utils.label(ax, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;barh(x, y)&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;)

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; 子图3&lt;/span&gt;
&lt;span class="pl-k"&gt;def&lt;/span&gt; &lt;span class="pl-en"&gt;general&lt;/span&gt;(&lt;span class="pl-smi"&gt;ax&lt;/span&gt;):
    num &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;10&lt;/span&gt;
    left &lt;span class="pl-k"&gt;=&lt;/span&gt; np.random.randint(&lt;span class="pl-c1"&gt;0&lt;/span&gt;, &lt;span class="pl-c1"&gt;10&lt;/span&gt;, num)
    bottom &lt;span class="pl-k"&gt;=&lt;/span&gt; np.random.randint(&lt;span class="pl-c1"&gt;0&lt;/span&gt;, &lt;span class="pl-c1"&gt;10&lt;/span&gt;, num)
    width &lt;span class="pl-k"&gt;=&lt;/span&gt; np.random.random(num) &lt;span class="pl-k"&gt;+&lt;/span&gt; &lt;span class="pl-c1"&gt;0.5&lt;/span&gt;
    height &lt;span class="pl-k"&gt;=&lt;/span&gt; np.random.random(num) &lt;span class="pl-k"&gt;+&lt;/span&gt; &lt;span class="pl-c1"&gt;0.5&lt;/span&gt;
    ax.bar(left, height, width, bottom, &lt;span class="pl-v"&gt;color&lt;/span&gt;&lt;span class="pl-k"&gt;=&lt;/span&gt;&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;salmon&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;)
    ax.margins(&lt;span class="pl-c1"&gt;0.15&lt;/span&gt;)
    example_utils.label(ax, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;bar(l, h, w, b)&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;)


main()&lt;/pre&gt;&lt;/div&gt;
&lt;h4&gt;&lt;a id="user-content-9-matplotlib等高线图" class="anchor" aria-hidden="true" href="#9-matplotlib等高线图"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;9 matplotlib等高线图&lt;/h4&gt;
&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="./img/1578811177737.png"&gt;&lt;img src="./img/1578811177737.png" alt="1578811177737" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;对应代码：&lt;/p&gt;
&lt;div class="highlight highlight-source-python"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;import&lt;/span&gt; matplotlib.pyplot &lt;span class="pl-k"&gt;as&lt;/span&gt; plt
&lt;span class="pl-k"&gt;import&lt;/span&gt; numpy &lt;span class="pl-k"&gt;as&lt;/span&gt; np
&lt;span class="pl-k"&gt;from&lt;/span&gt; matplotlib.cbook &lt;span class="pl-k"&gt;import&lt;/span&gt; get_sample_data

&lt;span class="pl-k"&gt;import&lt;/span&gt; example_utils

z &lt;span class="pl-k"&gt;=&lt;/span&gt; np.load(get_sample_data(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;bivariate_normal.npy&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;))

fig, axes &lt;span class="pl-k"&gt;=&lt;/span&gt; example_utils.setup_axes()

axes[&lt;span class="pl-c1"&gt;0&lt;/span&gt;].contour(z, &lt;span class="pl-v"&gt;cmap&lt;/span&gt;&lt;span class="pl-k"&gt;=&lt;/span&gt;&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;gist_earth&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;)
example_utils.label(axes[&lt;span class="pl-c1"&gt;0&lt;/span&gt;], &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;contour&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;)

axes[&lt;span class="pl-c1"&gt;1&lt;/span&gt;].contourf(z, &lt;span class="pl-v"&gt;cmap&lt;/span&gt;&lt;span class="pl-k"&gt;=&lt;/span&gt;&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;gist_earth&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;)
example_utils.label(axes[&lt;span class="pl-c1"&gt;1&lt;/span&gt;], &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;contourf&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;)

axes[&lt;span class="pl-c1"&gt;2&lt;/span&gt;].contourf(z, &lt;span class="pl-v"&gt;cmap&lt;/span&gt;&lt;span class="pl-k"&gt;=&lt;/span&gt;&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;gist_earth&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;)
cont &lt;span class="pl-k"&gt;=&lt;/span&gt; axes[&lt;span class="pl-c1"&gt;2&lt;/span&gt;].contour(z, &lt;span class="pl-v"&gt;colors&lt;/span&gt;&lt;span class="pl-k"&gt;=&lt;/span&gt;&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;black&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;)
axes[&lt;span class="pl-c1"&gt;2&lt;/span&gt;].clabel(cont, &lt;span class="pl-v"&gt;fontsize&lt;/span&gt;&lt;span class="pl-k"&gt;=&lt;/span&gt;&lt;span class="pl-c1"&gt;6&lt;/span&gt;)
example_utils.label(axes[&lt;span class="pl-c1"&gt;2&lt;/span&gt;], &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;contourf + contour&lt;span class="pl-cce"&gt;\n&lt;/span&gt; + clabel&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;)

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; example_utils.title(fig, '"contour, contourf, clabel": Contour/label 2D data',&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt;                     y=0.96)&lt;/span&gt;
fig.savefig(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;contour_example.png&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-v"&gt;facecolor&lt;/span&gt;&lt;span class="pl-k"&gt;=&lt;/span&gt;&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;none&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;)

plt.show()&lt;/pre&gt;&lt;/div&gt;
&lt;h4&gt;&lt;a id="user-content-10-imshow图" class="anchor" aria-hidden="true" href="#10-imshow图"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;10 imshow图&lt;/h4&gt;
&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="./img/1578811404145.png"&gt;&lt;img src="./img/1578811404145.png" alt="1578811404145" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;对应代码：&lt;/p&gt;
&lt;div class="highlight highlight-source-python"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;import&lt;/span&gt; matplotlib.pyplot &lt;span class="pl-k"&gt;as&lt;/span&gt; plt
&lt;span class="pl-k"&gt;import&lt;/span&gt; numpy &lt;span class="pl-k"&gt;as&lt;/span&gt; np
&lt;span class="pl-k"&gt;from&lt;/span&gt; matplotlib.cbook &lt;span class="pl-k"&gt;import&lt;/span&gt; get_sample_data
&lt;span class="pl-k"&gt;from&lt;/span&gt; mpl_toolkits &lt;span class="pl-k"&gt;import&lt;/span&gt; axes_grid1

&lt;span class="pl-k"&gt;import&lt;/span&gt; example_utils


&lt;span class="pl-k"&gt;def&lt;/span&gt; &lt;span class="pl-en"&gt;main&lt;/span&gt;():
    fig, axes &lt;span class="pl-k"&gt;=&lt;/span&gt; setup_axes()
    plot(axes, &lt;span class="pl-k"&gt;*&lt;/span&gt;load_data())
    &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; example_utils.title(fig, '"ax.imshow(data, ...)": Colormapped or RGB arrays')&lt;/span&gt;
    fig.savefig(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;imshow_example.png&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-v"&gt;facecolor&lt;/span&gt;&lt;span class="pl-k"&gt;=&lt;/span&gt;&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;none&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;)
    plt.show()


&lt;span class="pl-k"&gt;def&lt;/span&gt; &lt;span class="pl-en"&gt;plot&lt;/span&gt;(&lt;span class="pl-smi"&gt;axes&lt;/span&gt;, &lt;span class="pl-smi"&gt;img_data&lt;/span&gt;, &lt;span class="pl-smi"&gt;scalar_data&lt;/span&gt;, &lt;span class="pl-smi"&gt;ny&lt;/span&gt;):

    &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; 默认线性插值&lt;/span&gt;
    axes[&lt;span class="pl-c1"&gt;0&lt;/span&gt;].imshow(scalar_data, &lt;span class="pl-v"&gt;cmap&lt;/span&gt;&lt;span class="pl-k"&gt;=&lt;/span&gt;&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;gist_earth&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-v"&gt;extent&lt;/span&gt;&lt;span class="pl-k"&gt;=&lt;/span&gt;[&lt;span class="pl-c1"&gt;0&lt;/span&gt;, ny, ny, &lt;span class="pl-c1"&gt;0&lt;/span&gt;])

    &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; 最近邻插值&lt;/span&gt;
    axes[&lt;span class="pl-c1"&gt;1&lt;/span&gt;].imshow(scalar_data, &lt;span class="pl-v"&gt;cmap&lt;/span&gt;&lt;span class="pl-k"&gt;=&lt;/span&gt;&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;gist_earth&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-v"&gt;interpolation&lt;/span&gt;&lt;span class="pl-k"&gt;=&lt;/span&gt;&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;nearest&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;,
                   &lt;span class="pl-v"&gt;extent&lt;/span&gt;&lt;span class="pl-k"&gt;=&lt;/span&gt;[&lt;span class="pl-c1"&gt;0&lt;/span&gt;, ny, ny, &lt;span class="pl-c1"&gt;0&lt;/span&gt;])

    &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; 展示RGB/RGBA数据&lt;/span&gt;
    axes[&lt;span class="pl-c1"&gt;2&lt;/span&gt;].imshow(img_data)


&lt;span class="pl-k"&gt;def&lt;/span&gt; &lt;span class="pl-en"&gt;load_data&lt;/span&gt;():
    img_data &lt;span class="pl-k"&gt;=&lt;/span&gt; plt.imread(get_sample_data(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;5.png&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;))
    ny, nx, nbands &lt;span class="pl-k"&gt;=&lt;/span&gt; img_data.shape
    scalar_data &lt;span class="pl-k"&gt;=&lt;/span&gt; np.load(get_sample_data(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;bivariate_normal.npy&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;))
    &lt;span class="pl-k"&gt;return&lt;/span&gt; img_data, scalar_data, ny


&lt;span class="pl-k"&gt;def&lt;/span&gt; &lt;span class="pl-en"&gt;setup_axes&lt;/span&gt;():
    fig &lt;span class="pl-k"&gt;=&lt;/span&gt; plt.figure(&lt;span class="pl-v"&gt;figsize&lt;/span&gt;&lt;span class="pl-k"&gt;=&lt;/span&gt;(&lt;span class="pl-c1"&gt;6&lt;/span&gt;, &lt;span class="pl-c1"&gt;3&lt;/span&gt;))
    axes &lt;span class="pl-k"&gt;=&lt;/span&gt; axes_grid1.ImageGrid(fig, [&lt;span class="pl-c1"&gt;0&lt;/span&gt;, &lt;span class="pl-c1"&gt;0&lt;/span&gt;, &lt;span class="pl-c1"&gt;.93&lt;/span&gt;, &lt;span class="pl-c1"&gt;1&lt;/span&gt;], (&lt;span class="pl-c1"&gt;1&lt;/span&gt;, &lt;span class="pl-c1"&gt;3&lt;/span&gt;), &lt;span class="pl-v"&gt;axes_pad&lt;/span&gt;&lt;span class="pl-k"&gt;=&lt;/span&gt;&lt;span class="pl-c1"&gt;0&lt;/span&gt;)

    &lt;span class="pl-k"&gt;for&lt;/span&gt; ax &lt;span class="pl-k"&gt;in&lt;/span&gt; axes:
        ax.set(&lt;span class="pl-v"&gt;xticks&lt;/span&gt;&lt;span class="pl-k"&gt;=&lt;/span&gt;[], &lt;span class="pl-v"&gt;yticks&lt;/span&gt;&lt;span class="pl-k"&gt;=&lt;/span&gt;[])
    &lt;span class="pl-k"&gt;return&lt;/span&gt; fig, axes


main()&lt;/pre&gt;&lt;/div&gt;
&lt;h4&gt;&lt;a id="user-content-11-pyecharts绘制仪表盘" class="anchor" aria-hidden="true" href="#11-pyecharts绘制仪表盘"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;11 pyecharts绘制仪表盘&lt;/h4&gt;
&lt;p&gt;使用pip install pyecharts 安装，版本为 v1.6，pyecharts绘制仪表盘，只需要几行代码：&lt;/p&gt;
&lt;div class="highlight highlight-source-python"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;from&lt;/span&gt; pyecharts &lt;span class="pl-k"&gt;import&lt;/span&gt; charts

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; 仪表盘&lt;/span&gt;
gauge &lt;span class="pl-k"&gt;=&lt;/span&gt; charts.Gauge()
gauge.add(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;Python小例子&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;, [(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;Python机器学习&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-c1"&gt;30&lt;/span&gt;), (&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;Python基础&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-c1"&gt;70&lt;/span&gt;.),
                        (&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;Python正则&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-c1"&gt;90&lt;/span&gt;)])
gauge.render(&lt;span class="pl-v"&gt;path&lt;/span&gt;&lt;span class="pl-k"&gt;=&lt;/span&gt;&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;./data/仪表盘.html&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
&lt;span class="pl-c1"&gt;print&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;ok&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;)&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;仪表盘中共展示三项，每项的比例为30%,70%,90%，如下图默认名称显示第一项：Python机器学习，完成比例为30%&lt;/p&gt;
&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="./img/image-20191228194635902.png"&gt;&lt;img src="./img/image-20191228194635902.png" alt="" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h4&gt;&lt;a id="user-content-12-pyecharts漏斗图" class="anchor" aria-hidden="true" href="#12-pyecharts漏斗图"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;12 pyecharts漏斗图&lt;/h4&gt;
&lt;div class="highlight highlight-source-python"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;from&lt;/span&gt; pyecharts &lt;span class="pl-k"&gt;import&lt;/span&gt; options &lt;span class="pl-k"&gt;as&lt;/span&gt; opts
&lt;span class="pl-k"&gt;from&lt;/span&gt; pyecharts.charts &lt;span class="pl-k"&gt;import&lt;/span&gt; Funnel, Page
&lt;span class="pl-k"&gt;from&lt;/span&gt; random &lt;span class="pl-k"&gt;import&lt;/span&gt; randint

&lt;span class="pl-k"&gt;def&lt;/span&gt; &lt;span class="pl-en"&gt;funnel_base&lt;/span&gt;() -&amp;gt; Funnel:
  c &lt;span class="pl-k"&gt;=&lt;/span&gt; (
    Funnel()
    .add(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;豪车&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, [&lt;span class="pl-c1"&gt;list&lt;/span&gt;(z) &lt;span class="pl-k"&gt;for&lt;/span&gt; z &lt;span class="pl-k"&gt;in&lt;/span&gt; &lt;span class="pl-c1"&gt;zip&lt;/span&gt;([&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;宝马&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;法拉利&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;奔驰&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;奥迪&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;大众&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;丰田&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;特斯拉&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;],
                 [randint(&lt;span class="pl-c1"&gt;1&lt;/span&gt;, &lt;span class="pl-c1"&gt;20&lt;/span&gt;) &lt;span class="pl-k"&gt;for&lt;/span&gt; _ &lt;span class="pl-k"&gt;in&lt;/span&gt; &lt;span class="pl-c1"&gt;range&lt;/span&gt;(&lt;span class="pl-c1"&gt;7&lt;/span&gt;)])])
    .set_global_opts(&lt;span class="pl-v"&gt;title_opts&lt;/span&gt;&lt;span class="pl-k"&gt;=&lt;/span&gt;opts.TitleOpts(&lt;span class="pl-v"&gt;title&lt;/span&gt;&lt;span class="pl-k"&gt;=&lt;/span&gt;&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;豪车漏斗图&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;))
  )
  &lt;span class="pl-k"&gt;return&lt;/span&gt; c
funnel_base().render(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;./img/car_fnnel.html&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;)&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;以7种车型及某个属性值绘制的漏斗图，属性值大越靠近漏斗的大端。&lt;/p&gt;
&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="./img/1578811483265.png"&gt;&lt;img src="./img/1578811483265.png" alt="1578811483265" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h4&gt;&lt;a id="user-content-13-pyecharts日历图" class="anchor" aria-hidden="true" href="#13-pyecharts日历图"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;13 pyecharts日历图&lt;/h4&gt;
&lt;div class="highlight highlight-source-python"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;import&lt;/span&gt; datetime
&lt;span class="pl-k"&gt;import&lt;/span&gt; random
&lt;span class="pl-k"&gt;from&lt;/span&gt; pyecharts &lt;span class="pl-k"&gt;import&lt;/span&gt; options &lt;span class="pl-k"&gt;as&lt;/span&gt; opts
&lt;span class="pl-k"&gt;from&lt;/span&gt; pyecharts.charts &lt;span class="pl-k"&gt;import&lt;/span&gt; Calendar

&lt;span class="pl-k"&gt;def&lt;/span&gt; &lt;span class="pl-en"&gt;calendar_interval_1&lt;/span&gt;() -&amp;gt; Calendar:
    begin &lt;span class="pl-k"&gt;=&lt;/span&gt; datetime.date(&lt;span class="pl-c1"&gt;2019&lt;/span&gt;, &lt;span class="pl-c1"&gt;1&lt;/span&gt;, &lt;span class="pl-c1"&gt;1&lt;/span&gt;)
    end &lt;span class="pl-k"&gt;=&lt;/span&gt; datetime.date(&lt;span class="pl-c1"&gt;2019&lt;/span&gt;, &lt;span class="pl-c1"&gt;12&lt;/span&gt;, &lt;span class="pl-c1"&gt;27&lt;/span&gt;)
    data &lt;span class="pl-k"&gt;=&lt;/span&gt; [
        [&lt;span class="pl-c1"&gt;str&lt;/span&gt;(begin &lt;span class="pl-k"&gt;+&lt;/span&gt; datetime.timedelta(&lt;span class="pl-v"&gt;days&lt;/span&gt;&lt;span class="pl-k"&gt;=&lt;/span&gt;i)), random.randint(&lt;span class="pl-c1"&gt;1000&lt;/span&gt;, &lt;span class="pl-c1"&gt;25000&lt;/span&gt;)]
        &lt;span class="pl-k"&gt;for&lt;/span&gt; i &lt;span class="pl-k"&gt;in&lt;/span&gt; &lt;span class="pl-c1"&gt;range&lt;/span&gt;(&lt;span class="pl-c1"&gt;0&lt;/span&gt;, (end &lt;span class="pl-k"&gt;-&lt;/span&gt; begin).days &lt;span class="pl-k"&gt;+&lt;/span&gt; &lt;span class="pl-c1"&gt;1&lt;/span&gt;, &lt;span class="pl-c1"&gt;2&lt;/span&gt;)  &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; 隔天统计&lt;/span&gt;
    ]
    calendar &lt;span class="pl-k"&gt;=&lt;/span&gt; (
      Calendar(&lt;span class="pl-v"&gt;init_opts&lt;/span&gt;&lt;span class="pl-k"&gt;=&lt;/span&gt;opts.InitOpts(&lt;span class="pl-v"&gt;width&lt;/span&gt;&lt;span class="pl-k"&gt;=&lt;/span&gt;&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;1200px&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)).add(
            &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, data, &lt;span class="pl-v"&gt;calendar_opts&lt;/span&gt;&lt;span class="pl-k"&gt;=&lt;/span&gt;opts.CalendarOpts(&lt;span class="pl-v"&gt;range_&lt;/span&gt;&lt;span class="pl-k"&gt;=&lt;/span&gt;&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;2019&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;))
        .set_global_opts(
            &lt;span class="pl-v"&gt;title_opts&lt;/span&gt;&lt;span class="pl-k"&gt;=&lt;/span&gt;opts.TitleOpts(&lt;span class="pl-v"&gt;title&lt;/span&gt;&lt;span class="pl-k"&gt;=&lt;/span&gt;&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;Calendar-2019年步数统计&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;),
            &lt;span class="pl-v"&gt;visualmap_opts&lt;/span&gt;&lt;span class="pl-k"&gt;=&lt;/span&gt;opts.VisualMapOpts(
                &lt;span class="pl-v"&gt;max_&lt;/span&gt;&lt;span class="pl-k"&gt;=&lt;/span&gt;&lt;span class="pl-c1"&gt;25000&lt;/span&gt;,
                &lt;span class="pl-v"&gt;min_&lt;/span&gt;&lt;span class="pl-k"&gt;=&lt;/span&gt;&lt;span class="pl-c1"&gt;1000&lt;/span&gt;,
                &lt;span class="pl-v"&gt;orient&lt;/span&gt;&lt;span class="pl-k"&gt;=&lt;/span&gt;&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;horizontal&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;,
                &lt;span class="pl-v"&gt;is_piecewise&lt;/span&gt;&lt;span class="pl-k"&gt;=&lt;/span&gt;&lt;span class="pl-c1"&gt;True&lt;/span&gt;,
                &lt;span class="pl-v"&gt;pos_top&lt;/span&gt;&lt;span class="pl-k"&gt;=&lt;/span&gt;&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;230px&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;,
                &lt;span class="pl-v"&gt;pos_left&lt;/span&gt;&lt;span class="pl-k"&gt;=&lt;/span&gt;&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;100px&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;,
            ),
        )
    )
    &lt;span class="pl-k"&gt;return&lt;/span&gt; calendar

calendar_interval_1().render(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;./img/calendar.html&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;)&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;绘制2019年1月1日到12月27日的步行数，官方给出的图形宽度&lt;code&gt;900px&lt;/code&gt;不够，只能显示到9月份，本例使用&lt;code&gt;opts.InitOpts(width="1200px")&lt;/code&gt;做出微调，并且&lt;code&gt;visualmap&lt;/code&gt;显示所有步数，每隔一天显示一次：&lt;/p&gt;
&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="./img/1578811543851.png"&gt;&lt;img src="./img/1578811543851.png" alt="1578811543851" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h4&gt;&lt;a id="user-content-14-pyecharts绘制graph图" class="anchor" aria-hidden="true" href="#14-pyecharts绘制graph图"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;14 pyecharts绘制graph图&lt;/h4&gt;
&lt;div class="highlight highlight-source-python"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;import&lt;/span&gt; json
&lt;span class="pl-k"&gt;import&lt;/span&gt; os
&lt;span class="pl-k"&gt;from&lt;/span&gt; pyecharts &lt;span class="pl-k"&gt;import&lt;/span&gt; options &lt;span class="pl-k"&gt;as&lt;/span&gt; opts
&lt;span class="pl-k"&gt;from&lt;/span&gt; pyecharts.charts &lt;span class="pl-k"&gt;import&lt;/span&gt; Graph, Page

&lt;span class="pl-k"&gt;def&lt;/span&gt; &lt;span class="pl-en"&gt;graph_base&lt;/span&gt;() -&amp;gt; Graph:
    nodes &lt;span class="pl-k"&gt;=&lt;/span&gt; [
        {&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;name&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;cus1&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;symbolSize&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;: &lt;span class="pl-c1"&gt;10&lt;/span&gt;},
        {&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;name&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;cus2&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;symbolSize&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;: &lt;span class="pl-c1"&gt;30&lt;/span&gt;},
        {&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;name&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;cus3&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;symbolSize&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;: &lt;span class="pl-c1"&gt;20&lt;/span&gt;}
    ]
    links &lt;span class="pl-k"&gt;=&lt;/span&gt; []
    &lt;span class="pl-k"&gt;for&lt;/span&gt; i &lt;span class="pl-k"&gt;in&lt;/span&gt; nodes:
        &lt;span class="pl-k"&gt;if&lt;/span&gt; i.get(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;name&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;) &lt;span class="pl-k"&gt;==&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;cus1&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;:
            &lt;span class="pl-k"&gt;continue&lt;/span&gt;
        &lt;span class="pl-k"&gt;for&lt;/span&gt; j &lt;span class="pl-k"&gt;in&lt;/span&gt; nodes:
            &lt;span class="pl-k"&gt;if&lt;/span&gt; j.get(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;name&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;) &lt;span class="pl-k"&gt;==&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;cus1&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;:
                &lt;span class="pl-k"&gt;continue&lt;/span&gt;
            links.append({&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;source&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;: i.get(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;name&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;), &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;target&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;: j.get(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;name&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)})
    c &lt;span class="pl-k"&gt;=&lt;/span&gt; (
        Graph()
        .add(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, nodes, links, &lt;span class="pl-v"&gt;repulsion&lt;/span&gt;&lt;span class="pl-k"&gt;=&lt;/span&gt;&lt;span class="pl-c1"&gt;8000&lt;/span&gt;)
        .set_global_opts(&lt;span class="pl-v"&gt;title_opts&lt;/span&gt;&lt;span class="pl-k"&gt;=&lt;/span&gt;opts.TitleOpts(&lt;span class="pl-v"&gt;title&lt;/span&gt;&lt;span class="pl-k"&gt;=&lt;/span&gt;&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;customer-influence&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;))
    )
    &lt;span class="pl-k"&gt;return&lt;/span&gt; c&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;构建图，其中客户点1与其他两个客户都没有关系(&lt;code&gt;link&lt;/code&gt;)，也就是不存在有效边：&lt;/p&gt;
&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="./img/1578811569529.png"&gt;&lt;img src="./img/1578811569529.png" alt="1578811569529" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h4&gt;&lt;a id="user-content-15-pyecharts水球图" class="anchor" aria-hidden="true" href="#15-pyecharts水球图"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;15 pyecharts水球图&lt;/h4&gt;
&lt;div class="highlight highlight-source-python"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;from&lt;/span&gt; pyecharts &lt;span class="pl-k"&gt;import&lt;/span&gt; options &lt;span class="pl-k"&gt;as&lt;/span&gt; opts
&lt;span class="pl-k"&gt;from&lt;/span&gt; pyecharts.charts &lt;span class="pl-k"&gt;import&lt;/span&gt; Liquid, Page
&lt;span class="pl-k"&gt;from&lt;/span&gt; pyecharts.globals &lt;span class="pl-k"&gt;import&lt;/span&gt; SymbolType

&lt;span class="pl-k"&gt;def&lt;/span&gt; &lt;span class="pl-en"&gt;liquid&lt;/span&gt;() -&amp;gt; Liquid:
    c &lt;span class="pl-k"&gt;=&lt;/span&gt; (
        Liquid()
        .add(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;lq&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, [&lt;span class="pl-c1"&gt;0.67&lt;/span&gt;, &lt;span class="pl-c1"&gt;0.30&lt;/span&gt;, &lt;span class="pl-c1"&gt;0.15&lt;/span&gt;])
        .set_global_opts(&lt;span class="pl-v"&gt;title_opts&lt;/span&gt;&lt;span class="pl-k"&gt;=&lt;/span&gt;opts.TitleOpts(&lt;span class="pl-v"&gt;title&lt;/span&gt;&lt;span class="pl-k"&gt;=&lt;/span&gt;&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;Liquid&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;))
    )
    &lt;span class="pl-k"&gt;return&lt;/span&gt; c

liquid().render(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;./img/liquid.html&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;)&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;水球图的取值&lt;code&gt;[0.67, 0.30, 0.15]&lt;/code&gt;表示下图中的&lt;code&gt;三个波浪线&lt;/code&gt;，一般代表三个百分比:&lt;/p&gt;
&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="./img/liquid.gif"&gt;&lt;img src="./img/liquid.gif" alt="" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h4&gt;&lt;a id="user-content-16-pyecharts饼图" class="anchor" aria-hidden="true" href="#16-pyecharts饼图"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;16 pyecharts饼图&lt;/h4&gt;
&lt;div class="highlight highlight-source-python"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;from&lt;/span&gt; pyecharts &lt;span class="pl-k"&gt;import&lt;/span&gt; options &lt;span class="pl-k"&gt;as&lt;/span&gt; opts
&lt;span class="pl-k"&gt;from&lt;/span&gt; pyecharts.charts &lt;span class="pl-k"&gt;import&lt;/span&gt; Pie
&lt;span class="pl-k"&gt;from&lt;/span&gt; random &lt;span class="pl-k"&gt;import&lt;/span&gt; randint

&lt;span class="pl-k"&gt;def&lt;/span&gt; &lt;span class="pl-en"&gt;pie_base&lt;/span&gt;() -&amp;gt; Pie:
    c &lt;span class="pl-k"&gt;=&lt;/span&gt; (
        Pie()
        .add(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, [&lt;span class="pl-c1"&gt;list&lt;/span&gt;(z) &lt;span class="pl-k"&gt;for&lt;/span&gt; z &lt;span class="pl-k"&gt;in&lt;/span&gt; &lt;span class="pl-c1"&gt;zip&lt;/span&gt;([&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;宝马&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;法拉利&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;奔驰&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;奥迪&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;大众&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;丰田&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;特斯拉&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;],
                                       [randint(&lt;span class="pl-c1"&gt;1&lt;/span&gt;, &lt;span class="pl-c1"&gt;20&lt;/span&gt;) &lt;span class="pl-k"&gt;for&lt;/span&gt; _ &lt;span class="pl-k"&gt;in&lt;/span&gt; &lt;span class="pl-c1"&gt;range&lt;/span&gt;(&lt;span class="pl-c1"&gt;7&lt;/span&gt;)])])
        .set_global_opts(&lt;span class="pl-v"&gt;title_opts&lt;/span&gt;&lt;span class="pl-k"&gt;=&lt;/span&gt;opts.TitleOpts(&lt;span class="pl-v"&gt;title&lt;/span&gt;&lt;span class="pl-k"&gt;=&lt;/span&gt;&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;Pie-基本示例&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;))
        .set_series_opts(&lt;span class="pl-v"&gt;label_opts&lt;/span&gt;&lt;span class="pl-k"&gt;=&lt;/span&gt;opts.LabelOpts(&lt;span class="pl-v"&gt;formatter&lt;/span&gt;&lt;span class="pl-k"&gt;=&lt;/span&gt;&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;span class="pl-c1"&gt;{b}&lt;/span&gt;: &lt;span class="pl-c1"&gt;{c}&lt;/span&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;))
    )
    &lt;span class="pl-k"&gt;return&lt;/span&gt; c

pie_base().render(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;./img/pie_pyecharts.html&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;)&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="./img/20191229105841.png"&gt;&lt;img src="./img/20191229105841.png" alt="" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h4&gt;&lt;a id="user-content-17-pyecharts极坐标图" class="anchor" aria-hidden="true" href="#17-pyecharts极坐标图"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;17 pyecharts极坐标图&lt;/h4&gt;
&lt;div class="highlight highlight-source-python"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;import&lt;/span&gt; random
&lt;span class="pl-k"&gt;from&lt;/span&gt; pyecharts &lt;span class="pl-k"&gt;import&lt;/span&gt; options &lt;span class="pl-k"&gt;as&lt;/span&gt; opts
&lt;span class="pl-k"&gt;from&lt;/span&gt; pyecharts.charts &lt;span class="pl-k"&gt;import&lt;/span&gt; Page, Polar

&lt;span class="pl-k"&gt;def&lt;/span&gt; &lt;span class="pl-en"&gt;polar_scatter0&lt;/span&gt;() -&amp;gt; Polar:
    data &lt;span class="pl-k"&gt;=&lt;/span&gt; [(alpha, random.randint(&lt;span class="pl-c1"&gt;1&lt;/span&gt;, &lt;span class="pl-c1"&gt;100&lt;/span&gt;)) &lt;span class="pl-k"&gt;for&lt;/span&gt; alpha &lt;span class="pl-k"&gt;in&lt;/span&gt; &lt;span class="pl-c1"&gt;range&lt;/span&gt;(&lt;span class="pl-c1"&gt;101&lt;/span&gt;)] &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; r = random.randint(1, 100)&lt;/span&gt;
    &lt;span class="pl-c1"&gt;print&lt;/span&gt;(data)
    c &lt;span class="pl-k"&gt;=&lt;/span&gt; (
        Polar()
        .add(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, data, &lt;span class="pl-v"&gt;type_&lt;/span&gt;&lt;span class="pl-k"&gt;=&lt;/span&gt;&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;bar&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-v"&gt;label_opts&lt;/span&gt;&lt;span class="pl-k"&gt;=&lt;/span&gt;opts.LabelOpts(&lt;span class="pl-v"&gt;is_show&lt;/span&gt;&lt;span class="pl-k"&gt;=&lt;/span&gt;&lt;span class="pl-c1"&gt;False&lt;/span&gt;))
        .set_global_opts(&lt;span class="pl-v"&gt;title_opts&lt;/span&gt;&lt;span class="pl-k"&gt;=&lt;/span&gt;opts.TitleOpts(&lt;span class="pl-v"&gt;title&lt;/span&gt;&lt;span class="pl-k"&gt;=&lt;/span&gt;&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;Polar&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;))
    )
    &lt;span class="pl-k"&gt;return&lt;/span&gt; c

polar_scatter0().render(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;./img/polar.html&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;)&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;极坐标表示为&lt;code&gt;(夹角,半径)&lt;/code&gt;，如(6,94)表示夹角为6，半径94的点：&lt;/p&gt;
&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="./img/1578811648010.png"&gt;&lt;img src="./img/1578811648010.png" alt="1578811648010" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h4&gt;&lt;a id="user-content-18-pyecharts词云图" class="anchor" aria-hidden="true" href="#18-pyecharts词云图"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;18 pyecharts词云图&lt;/h4&gt;
&lt;div class="highlight highlight-source-python"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;from&lt;/span&gt; pyecharts &lt;span class="pl-k"&gt;import&lt;/span&gt; options &lt;span class="pl-k"&gt;as&lt;/span&gt; opts
&lt;span class="pl-k"&gt;from&lt;/span&gt; pyecharts.charts &lt;span class="pl-k"&gt;import&lt;/span&gt; Page, WordCloud
&lt;span class="pl-k"&gt;from&lt;/span&gt; pyecharts.globals &lt;span class="pl-k"&gt;import&lt;/span&gt; SymbolType

words &lt;span class="pl-k"&gt;=&lt;/span&gt; [
    (&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;Python&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-c1"&gt;100&lt;/span&gt;),
    (&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;C++&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-c1"&gt;80&lt;/span&gt;),
    (&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;Java&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-c1"&gt;95&lt;/span&gt;),
    (&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;R&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-c1"&gt;50&lt;/span&gt;),
    (&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;JavaScript&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-c1"&gt;79&lt;/span&gt;),
    (&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;C&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-c1"&gt;65&lt;/span&gt;)
]

&lt;span class="pl-k"&gt;def&lt;/span&gt; &lt;span class="pl-en"&gt;wordcloud&lt;/span&gt;() -&amp;gt; WordCloud:
    c &lt;span class="pl-k"&gt;=&lt;/span&gt; (
        WordCloud()
        &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; word_size_range: 单词字体大小范围&lt;/span&gt;
        .add(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, words, &lt;span class="pl-v"&gt;word_size_range&lt;/span&gt;&lt;span class="pl-k"&gt;=&lt;/span&gt;[&lt;span class="pl-c1"&gt;20&lt;/span&gt;, &lt;span class="pl-c1"&gt;100&lt;/span&gt;], &lt;span class="pl-v"&gt;shape&lt;/span&gt;&lt;span class="pl-k"&gt;=&lt;/span&gt;&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;cardioid&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;)
        .set_global_opts(&lt;span class="pl-v"&gt;title_opts&lt;/span&gt;&lt;span class="pl-k"&gt;=&lt;/span&gt;opts.TitleOpts(&lt;span class="pl-v"&gt;title&lt;/span&gt;&lt;span class="pl-k"&gt;=&lt;/span&gt;&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;WordCloud&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;))
    )
    &lt;span class="pl-k"&gt;return&lt;/span&gt; c

wordcloud().render(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;./img/wordcloud.html&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;)&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;code&gt;("C",65)&lt;/code&gt;表示在本次统计中C语言出现65次&lt;/p&gt;
&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="./img/1578811675413.png"&gt;&lt;img src="./img/1578811675413.png" alt="1578811675413" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h4&gt;&lt;a id="user-content-19-pyecharts系列柱状图" class="anchor" aria-hidden="true" href="#19-pyecharts系列柱状图"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;19 pyecharts系列柱状图&lt;/h4&gt;
&lt;div class="highlight highlight-source-python"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;from&lt;/span&gt; pyecharts &lt;span class="pl-k"&gt;import&lt;/span&gt; options &lt;span class="pl-k"&gt;as&lt;/span&gt; opts
&lt;span class="pl-k"&gt;from&lt;/span&gt; pyecharts.charts &lt;span class="pl-k"&gt;import&lt;/span&gt; Bar
&lt;span class="pl-k"&gt;from&lt;/span&gt; random &lt;span class="pl-k"&gt;import&lt;/span&gt; randint

&lt;span class="pl-k"&gt;def&lt;/span&gt; &lt;span class="pl-en"&gt;bar_series&lt;/span&gt;() -&amp;gt; Bar:
    c &lt;span class="pl-k"&gt;=&lt;/span&gt; (
        Bar()
        .add_xaxis([&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;宝马&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;法拉利&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;奔驰&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;奥迪&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;大众&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;丰田&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;特斯拉&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;])
        .add_yaxis(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;销量&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, [randint(&lt;span class="pl-c1"&gt;1&lt;/span&gt;, &lt;span class="pl-c1"&gt;20&lt;/span&gt;) &lt;span class="pl-k"&gt;for&lt;/span&gt; _ &lt;span class="pl-k"&gt;in&lt;/span&gt; &lt;span class="pl-c1"&gt;range&lt;/span&gt;(&lt;span class="pl-c1"&gt;7&lt;/span&gt;)])
        .add_yaxis(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;产量&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, [randint(&lt;span class="pl-c1"&gt;1&lt;/span&gt;, &lt;span class="pl-c1"&gt;20&lt;/span&gt;) &lt;span class="pl-k"&gt;for&lt;/span&gt; _ &lt;span class="pl-k"&gt;in&lt;/span&gt; &lt;span class="pl-c1"&gt;range&lt;/span&gt;(&lt;span class="pl-c1"&gt;7&lt;/span&gt;)])
        .set_global_opts(&lt;span class="pl-v"&gt;title_opts&lt;/span&gt;&lt;span class="pl-k"&gt;=&lt;/span&gt;opts.TitleOpts(&lt;span class="pl-v"&gt;title&lt;/span&gt;&lt;span class="pl-k"&gt;=&lt;/span&gt;&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;Bar的主标题&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-v"&gt;subtitle&lt;/span&gt;&lt;span class="pl-k"&gt;=&lt;/span&gt;&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;Bar的副标题&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;))
    )
    &lt;span class="pl-k"&gt;return&lt;/span&gt; c

bar_series().render(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;./img/bar_series.html&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;)&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="./img/1578811781930.png"&gt;&lt;img src="./img/1578811781930.png" alt="1578811781930" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h4&gt;&lt;a id="user-content-20-pyecharts热力图" class="anchor" aria-hidden="true" href="#20-pyecharts热力图"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;20 pyecharts热力图&lt;/h4&gt;
&lt;div class="highlight highlight-source-python"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;import&lt;/span&gt; random
&lt;span class="pl-k"&gt;from&lt;/span&gt; pyecharts &lt;span class="pl-k"&gt;import&lt;/span&gt; options &lt;span class="pl-k"&gt;as&lt;/span&gt; opts
&lt;span class="pl-k"&gt;from&lt;/span&gt; pyecharts.charts &lt;span class="pl-k"&gt;import&lt;/span&gt; HeatMap

&lt;span class="pl-k"&gt;def&lt;/span&gt; &lt;span class="pl-en"&gt;heatmap_car&lt;/span&gt;() -&amp;gt; HeatMap:
    x &lt;span class="pl-k"&gt;=&lt;/span&gt; [&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;宝马&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;法拉利&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;奔驰&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;奥迪&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;大众&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;丰田&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;特斯拉&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;]
    y &lt;span class="pl-k"&gt;=&lt;/span&gt; [&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;中国&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;,&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;日本&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;,&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;南非&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;,&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;澳大利亚&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;,&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;阿根廷&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;,&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;阿尔及利亚&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;,&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;法国&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;,&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;意大利&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;,&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;加拿大&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;]
    value &lt;span class="pl-k"&gt;=&lt;/span&gt; [[i, j, random.randint(&lt;span class="pl-c1"&gt;0&lt;/span&gt;, &lt;span class="pl-c1"&gt;100&lt;/span&gt;)]
             &lt;span class="pl-k"&gt;for&lt;/span&gt; i &lt;span class="pl-k"&gt;in&lt;/span&gt; &lt;span class="pl-c1"&gt;range&lt;/span&gt;(&lt;span class="pl-c1"&gt;len&lt;/span&gt;(x)) &lt;span class="pl-k"&gt;for&lt;/span&gt; j &lt;span class="pl-k"&gt;in&lt;/span&gt; &lt;span class="pl-c1"&gt;range&lt;/span&gt;(&lt;span class="pl-c1"&gt;len&lt;/span&gt;(y))]
    c &lt;span class="pl-k"&gt;=&lt;/span&gt; (
        HeatMap()
        .add_xaxis(x)
        .add_yaxis(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;销量&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, y, value)
        .set_global_opts(
            &lt;span class="pl-v"&gt;title_opts&lt;/span&gt;&lt;span class="pl-k"&gt;=&lt;/span&gt;opts.TitleOpts(&lt;span class="pl-v"&gt;title&lt;/span&gt;&lt;span class="pl-k"&gt;=&lt;/span&gt;&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;HeatMap&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;),
            &lt;span class="pl-v"&gt;visualmap_opts&lt;/span&gt;&lt;span class="pl-k"&gt;=&lt;/span&gt;opts.VisualMapOpts(),
        )
    )
    &lt;span class="pl-k"&gt;return&lt;/span&gt; c

heatmap_car().render(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;./img/heatmap_pyecharts.html&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;)&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;热力图描述的实际是三维关系，x轴表示车型，y轴表示国家，每个色块的颜色值代表销量，颜色刻度尺显示在左下角，颜色越红表示销量越大。&lt;/p&gt;
&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="./img/image-20191229101724665.png"&gt;&lt;img src="./img/image-20191229101724665.png" alt="" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h4&gt;&lt;a id="user-content-21-matplotlib绘制动画" class="anchor" aria-hidden="true" href="#21-matplotlib绘制动画"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;21 matplotlib绘制动画&lt;/h4&gt;
&lt;p&gt;&lt;code&gt;matplotlib&lt;/code&gt;是python中最经典的绘图包，里面&lt;code&gt;animation&lt;/code&gt;模块能绘制动画。&lt;/p&gt;
&lt;p&gt;首先导入小例子使用的模块：&lt;/p&gt;
&lt;div class="highlight highlight-source-python"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;from&lt;/span&gt; matplotlib &lt;span class="pl-k"&gt;import&lt;/span&gt; pyplot &lt;span class="pl-k"&gt;as&lt;/span&gt; plt
&lt;span class="pl-k"&gt;from&lt;/span&gt; matplotlib &lt;span class="pl-k"&gt;import&lt;/span&gt; animation
&lt;span class="pl-k"&gt;from&lt;/span&gt; random &lt;span class="pl-k"&gt;import&lt;/span&gt; randint, random&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;生成数据，&lt;code&gt;frames_count&lt;/code&gt;是帧的个数，&lt;code&gt;data_count&lt;/code&gt;每个帧的柱子个数&lt;/p&gt;
&lt;div class="highlight highlight-source-python"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;class&lt;/span&gt; &lt;span class="pl-en"&gt;Data&lt;/span&gt;:
    data_count &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;32&lt;/span&gt;
    frames_count &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;2&lt;/span&gt;

    &lt;span class="pl-k"&gt;def&lt;/span&gt; &lt;span class="pl-c1"&gt;__init__&lt;/span&gt;(&lt;span class="pl-smi"&gt;&lt;span class="pl-smi"&gt;self&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-smi"&gt;value&lt;/span&gt;):
        &lt;span class="pl-c1"&gt;self&lt;/span&gt;.value &lt;span class="pl-k"&gt;=&lt;/span&gt; value
        &lt;span class="pl-c1"&gt;self&lt;/span&gt;.color &lt;span class="pl-k"&gt;=&lt;/span&gt; (&lt;span class="pl-c1"&gt;0.5&lt;/span&gt;, random(), random()) &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt;rgb&lt;/span&gt;

    &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; 造数据&lt;/span&gt;
    &lt;span class="pl-en"&gt;@&lt;/span&gt;&lt;span class="pl-c1"&gt;classmethod&lt;/span&gt;
    &lt;span class="pl-k"&gt;def&lt;/span&gt; &lt;span class="pl-en"&gt;create&lt;/span&gt;(&lt;span class="pl-smi"&gt;&lt;span class="pl-smi"&gt;cls&lt;/span&gt;&lt;/span&gt;):
        &lt;span class="pl-k"&gt;return&lt;/span&gt; [[Data(randint(&lt;span class="pl-c1"&gt;1&lt;/span&gt;, &lt;span class="pl-c1"&gt;cls&lt;/span&gt;.data_count)) &lt;span class="pl-k"&gt;for&lt;/span&gt; _ &lt;span class="pl-k"&gt;in&lt;/span&gt; &lt;span class="pl-c1"&gt;range&lt;/span&gt;(&lt;span class="pl-c1"&gt;cls&lt;/span&gt;.data_count)]
                &lt;span class="pl-k"&gt;for&lt;/span&gt; frame_i &lt;span class="pl-k"&gt;in&lt;/span&gt; &lt;span class="pl-c1"&gt;range&lt;/span&gt;(&lt;span class="pl-c1"&gt;cls&lt;/span&gt;.frames_count)]&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;绘制动画：&lt;code&gt;animation.FuncAnimation&lt;/code&gt;函数的回调函数的参数&lt;code&gt;fi&lt;/code&gt;表示第几帧，注意要调用&lt;code&gt;axs.cla()&lt;/code&gt;清除上一帧。&lt;/p&gt;
&lt;div class="highlight highlight-source-python"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;def&lt;/span&gt; &lt;span class="pl-en"&gt;draw_chart&lt;/span&gt;():
    fig &lt;span class="pl-k"&gt;=&lt;/span&gt; plt.figure(&lt;span class="pl-c1"&gt;1&lt;/span&gt;, &lt;span class="pl-v"&gt;figsize&lt;/span&gt;&lt;span class="pl-k"&gt;=&lt;/span&gt;(&lt;span class="pl-c1"&gt;16&lt;/span&gt;, &lt;span class="pl-c1"&gt;9&lt;/span&gt;))
    axs &lt;span class="pl-k"&gt;=&lt;/span&gt; fig.add_subplot(&lt;span class="pl-c1"&gt;111&lt;/span&gt;)
    axs.set_xticks([])
    axs.set_yticks([])

    &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; 生成数据&lt;/span&gt;
    frames &lt;span class="pl-k"&gt;=&lt;/span&gt; Data.create()

    &lt;span class="pl-k"&gt;def&lt;/span&gt; &lt;span class="pl-en"&gt;animate&lt;/span&gt;(&lt;span class="pl-smi"&gt;fi&lt;/span&gt;):
        axs.cla()  &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; clear last frame&lt;/span&gt;
        axs.set_xticks([])
        axs.set_yticks([])
        &lt;span class="pl-k"&gt;return&lt;/span&gt; axs.bar(&lt;span class="pl-c1"&gt;list&lt;/span&gt;(&lt;span class="pl-c1"&gt;range&lt;/span&gt;(Data.data_count)),        &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; X&lt;/span&gt;
                       [d.value &lt;span class="pl-k"&gt;for&lt;/span&gt; d &lt;span class="pl-k"&gt;in&lt;/span&gt; frames[fi]],       &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; Y&lt;/span&gt;
                       &lt;span class="pl-c1"&gt;1&lt;/span&gt;,                                   &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; width&lt;/span&gt;
                       &lt;span class="pl-v"&gt;color&lt;/span&gt;&lt;span class="pl-k"&gt;=&lt;/span&gt;[d.color &lt;span class="pl-k"&gt;for&lt;/span&gt; d &lt;span class="pl-k"&gt;in&lt;/span&gt; frames[fi]]  &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; color&lt;/span&gt;
                       )
    &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; 动画展示&lt;/span&gt;
    anim &lt;span class="pl-k"&gt;=&lt;/span&gt; animation.FuncAnimation(fig, animate, &lt;span class="pl-v"&gt;frames&lt;/span&gt;&lt;span class="pl-k"&gt;=&lt;/span&gt;&lt;span class="pl-c1"&gt;len&lt;/span&gt;(frames))
    plt.show()


draw_chart()&lt;/pre&gt;&lt;/div&gt;
&lt;h4&gt;&lt;a id="user-content-22-pyecharts绘图属性设置方法" class="anchor" aria-hidden="true" href="#22-pyecharts绘图属性设置方法"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;22 pyecharts绘图属性设置方法&lt;/h4&gt;
&lt;p&gt;昨天一位读者朋友问我&lt;code&gt;pyecharts&lt;/code&gt;中，y轴如何显示在右侧。先说下如何设置，同时阐述例子君是如何找到找到此属性的。&lt;/p&gt;
&lt;p&gt;这是pyecharts中一般的绘图步骤：&lt;/p&gt;
&lt;div class="highlight highlight-source-python"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;from&lt;/span&gt; pyecharts.faker &lt;span class="pl-k"&gt;import&lt;/span&gt; Faker
&lt;span class="pl-k"&gt;from&lt;/span&gt; pyecharts &lt;span class="pl-k"&gt;import&lt;/span&gt; options &lt;span class="pl-k"&gt;as&lt;/span&gt; opts
&lt;span class="pl-k"&gt;from&lt;/span&gt; pyecharts.charts &lt;span class="pl-k"&gt;import&lt;/span&gt; Bar
&lt;span class="pl-k"&gt;from&lt;/span&gt; pyecharts.commons.utils &lt;span class="pl-k"&gt;import&lt;/span&gt; JsCode

&lt;span class="pl-k"&gt;def&lt;/span&gt; &lt;span class="pl-en"&gt;bar_base&lt;/span&gt;() -&amp;gt; Bar:
    c &lt;span class="pl-k"&gt;=&lt;/span&gt; (
        Bar()
        .add_xaxis(Faker.choose())
        .add_yaxis(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;商家A&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, Faker.values())
        .set_global_opts(&lt;span class="pl-v"&gt;title_opts&lt;/span&gt;&lt;span class="pl-k"&gt;=&lt;/span&gt;opts.TitleOpts(&lt;span class="pl-v"&gt;title&lt;/span&gt;&lt;span class="pl-k"&gt;=&lt;/span&gt;&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;Bar-基本示例&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-v"&gt;subtitle&lt;/span&gt;&lt;span class="pl-k"&gt;=&lt;/span&gt;&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;我是副标题&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;))
    )
    &lt;span class="pl-k"&gt;return&lt;/span&gt; c

bar_base().render(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;./bar.html&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;)&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;那么，如何设置y轴显示在右侧，添加一行代码：&lt;/p&gt;
&lt;div class="highlight highlight-source-python"&gt;&lt;pre&gt;.set_global_opts(&lt;span class="pl-v"&gt;yaxis_opts&lt;/span&gt;&lt;span class="pl-k"&gt;=&lt;/span&gt;opts.AxisOpts(&lt;span class="pl-v"&gt;position&lt;/span&gt;&lt;span class="pl-k"&gt;=&lt;/span&gt;&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;right&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;))&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;也就是：&lt;/p&gt;
&lt;div class="highlight highlight-source-python"&gt;&lt;pre&gt;c &lt;span class="pl-k"&gt;=&lt;/span&gt; (
        Bar()
        .add_xaxis(Faker.choose())
        .add_yaxis(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;商家A&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, Faker.values())
        .set_global_opts(&lt;span class="pl-v"&gt;title_opts&lt;/span&gt;&lt;span class="pl-k"&gt;=&lt;/span&gt;opts.TitleOpts(&lt;span class="pl-v"&gt;title&lt;/span&gt;&lt;span class="pl-k"&gt;=&lt;/span&gt;&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;Bar-基本示例&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-v"&gt;subtitle&lt;/span&gt;&lt;span class="pl-k"&gt;=&lt;/span&gt;&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;我是副标题&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;))
        .set_global_opts(&lt;span class="pl-v"&gt;yaxis_opts&lt;/span&gt;&lt;span class="pl-k"&gt;=&lt;/span&gt;opts.AxisOpts(&lt;span class="pl-v"&gt;position&lt;/span&gt;&lt;span class="pl-k"&gt;=&lt;/span&gt;&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;right&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;))
    )&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;如何锁定这个属性，首先应该在set_global_opts函数的参数中找，它一共有以下&lt;code&gt;11&lt;/code&gt;个设置参数，它们位于模块&lt;code&gt;charts.py&lt;/code&gt;:&lt;/p&gt;
&lt;div class="highlight highlight-source-python"&gt;&lt;pre&gt;title_opts: types.Title &lt;span class="pl-k"&gt;=&lt;/span&gt; opts.TitleOpts(),
legend_opts: types.Legend &lt;span class="pl-k"&gt;=&lt;/span&gt; opts.LegendOpts(),
tooltip_opts: types.Tooltip &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;None&lt;/span&gt;,
toolbox_opts: types.Toolbox &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;None&lt;/span&gt;,
brush_opts: types.Brush &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;None&lt;/span&gt;,
xaxis_opts: types.Axis &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;None&lt;/span&gt;,
yaxis_opts: types.Axis &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;None&lt;/span&gt;,
visualmap_opts: types.VisualMap &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;None&lt;/span&gt;,
datazoom_opts: types.DataZoom &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;None&lt;/span&gt;,
graphic_opts: types.Graphic &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;None&lt;/span&gt;,
axispointer_opts: types.AxisPointer &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;None&lt;/span&gt;,&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;因为是设置y轴显示在右侧，自然想到设置参数&lt;code&gt;yaxis_opts&lt;/code&gt;，因为其类型为&lt;code&gt;types.Axis&lt;/code&gt;，所以再进入&lt;code&gt;types.py&lt;/code&gt;，同时定位到&lt;code&gt;Axis&lt;/code&gt;：&lt;/p&gt;
&lt;div class="highlight highlight-source-python"&gt;&lt;pre&gt;Axis &lt;span class="pl-k"&gt;=&lt;/span&gt; Union[opts.AxisOpts, &lt;span class="pl-c1"&gt;dict&lt;/span&gt;, &lt;span class="pl-c1"&gt;None&lt;/span&gt;]&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Union是pyecharts中可容纳多个类型的并集列表，也就是Axis可能为&lt;code&gt;opts.AxisOpt&lt;/code&gt;, &lt;code&gt;dict&lt;/code&gt;, 或&lt;code&gt;None&lt;/code&gt;三种类型。查看第一个&lt;code&gt;opts.AxisOpt&lt;/code&gt;类，它共定义以下&lt;code&gt;25&lt;/code&gt;个参数：&lt;/p&gt;
&lt;div class="highlight highlight-source-python"&gt;&lt;pre&gt;type_: Optional[&lt;span class="pl-c1"&gt;str&lt;/span&gt;] &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;None&lt;/span&gt;,
name: Optional[&lt;span class="pl-c1"&gt;str&lt;/span&gt;] &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;None&lt;/span&gt;,
is_show: &lt;span class="pl-c1"&gt;bool&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;True&lt;/span&gt;,
is_scale: &lt;span class="pl-c1"&gt;bool&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;False&lt;/span&gt;,
is_inverse: &lt;span class="pl-c1"&gt;bool&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;False&lt;/span&gt;,
name_location: &lt;span class="pl-c1"&gt;str&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;end&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;,
name_gap: Numeric &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;15&lt;/span&gt;,
name_rotate: Optional[Numeric] &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;None&lt;/span&gt;,
interval: Optional[Numeric] &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;None&lt;/span&gt;,
grid_index: Numeric &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;0&lt;/span&gt;,
position: Optional[&lt;span class="pl-c1"&gt;str&lt;/span&gt;] &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;None&lt;/span&gt;,
offset: Numeric &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;0&lt;/span&gt;,
split_number: Numeric &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;5&lt;/span&gt;,
boundary_gap: Union[&lt;span class="pl-c1"&gt;str&lt;/span&gt;, &lt;span class="pl-c1"&gt;bool&lt;/span&gt;, &lt;span class="pl-c1"&gt;None&lt;/span&gt;] &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;None&lt;/span&gt;,
min_: Union[Numeric, &lt;span class="pl-c1"&gt;str&lt;/span&gt;, &lt;span class="pl-c1"&gt;None&lt;/span&gt;] &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;None&lt;/span&gt;,
max_: Union[Numeric, &lt;span class="pl-c1"&gt;str&lt;/span&gt;, &lt;span class="pl-c1"&gt;None&lt;/span&gt;] &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;None&lt;/span&gt;,
min_interval: Numeric &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;0&lt;/span&gt;,
max_interval: Optional[Numeric] &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;None&lt;/span&gt;,
axisline_opts: Union[AxisLineOpts, &lt;span class="pl-c1"&gt;dict&lt;/span&gt;, &lt;span class="pl-c1"&gt;None&lt;/span&gt;] &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;None&lt;/span&gt;,
axistick_opts: Union[AxisTickOpts, &lt;span class="pl-c1"&gt;dict&lt;/span&gt;, &lt;span class="pl-c1"&gt;None&lt;/span&gt;] &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;None&lt;/span&gt;,
axislabel_opts: Union[LabelOpts, &lt;span class="pl-c1"&gt;dict&lt;/span&gt;, &lt;span class="pl-c1"&gt;None&lt;/span&gt;] &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;None&lt;/span&gt;,
axispointer_opts: Union[AxisPointerOpts, &lt;span class="pl-c1"&gt;dict&lt;/span&gt;, &lt;span class="pl-c1"&gt;None&lt;/span&gt;] &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;None&lt;/span&gt;,
name_textstyle_opts: Union[TextStyleOpts, &lt;span class="pl-c1"&gt;dict&lt;/span&gt;, &lt;span class="pl-c1"&gt;None&lt;/span&gt;] &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;None&lt;/span&gt;,
splitarea_opts: Union[SplitAreaOpts, &lt;span class="pl-c1"&gt;dict&lt;/span&gt;, &lt;span class="pl-c1"&gt;None&lt;/span&gt;] &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;None&lt;/span&gt;,
splitline_opts: Union[SplitLineOpts, &lt;span class="pl-c1"&gt;dict&lt;/span&gt;] &lt;span class="pl-k"&gt;=&lt;/span&gt; SplitLineOpts(),&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;观察后尝试参数&lt;code&gt;position&lt;/code&gt;，结合官档：&lt;code&gt;https://pyecharts.org/#/zh-cn/global_options?id=axisopts%ef%bc%9a%e5%9d%90%e6%a0%87%e8%bd%b4%e9%85%8d%e7%bd%ae%e9%a1%b9&lt;/code&gt;，介绍x轴设置position时有bottom, top, 所以y轴设置很可能就是left,right.&lt;/p&gt;
&lt;p&gt;OK！&lt;/p&gt;
&lt;h4&gt;&lt;a id="user-content-23-pyecharts绘图属性设置方法下" class="anchor" aria-hidden="true" href="#23-pyecharts绘图属性设置方法下"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;23 pyecharts绘图属性设置方法(下)&lt;/h4&gt;
&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="./img/pyecharts-bar.png"&gt;&lt;img src="./img/pyecharts-bar.png" alt="" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;分步讲解如何配置为上图&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;1)柱状图显示效果动画对应控制代码：&lt;/p&gt;
&lt;div class="highlight highlight-source-python"&gt;&lt;pre&gt;animation_opts&lt;span class="pl-k"&gt;=&lt;/span&gt;opts.AnimationOpts(
                    &lt;span class="pl-v"&gt;animation_delay&lt;/span&gt;&lt;span class="pl-k"&gt;=&lt;/span&gt;&lt;span class="pl-c1"&gt;500&lt;/span&gt;, &lt;span class="pl-v"&gt;animation_easing&lt;/span&gt;&lt;span class="pl-k"&gt;=&lt;/span&gt;&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;cubicOut&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;
                )&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;2)柱状图显示主题对应控制代码：&lt;/p&gt;
&lt;div class="highlight highlight-source-python"&gt;&lt;pre&gt;theme&lt;span class="pl-k"&gt;=&lt;/span&gt;ThemeType.&lt;span class="pl-c1"&gt;MACARONS&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;3)添加x轴对应的控制代码：&lt;/p&gt;
&lt;div class="highlight highlight-source-python"&gt;&lt;pre&gt;add_xaxis( [&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;草莓&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;芒果&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;葡萄&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;雪梨&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;西瓜&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;柠檬&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;车厘子&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;]&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;4)添加y轴对应的控制代码：&lt;/p&gt;
&lt;div class="highlight highlight-source-python"&gt;&lt;pre&gt;add_yaxis(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;A&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, Faker.values(),&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;5)修改柱间距对应的控制代码：&lt;/p&gt;
&lt;div class="highlight highlight-source-python"&gt;&lt;pre&gt;category_gap&lt;span class="pl-k"&gt;=&lt;/span&gt;&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;50%&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;6)A系列柱子是否显示对应的控制代码：&lt;/p&gt;
&lt;div class="highlight highlight-source-python"&gt;&lt;pre&gt;is_selected&lt;span class="pl-k"&gt;=&lt;/span&gt;&lt;span class="pl-c1"&gt;True&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;7)A系列柱子颜色渐变对应的控制代码：&lt;/p&gt;
&lt;div class="highlight highlight-source-python"&gt;&lt;pre&gt;itemstyle_opts&lt;span class="pl-k"&gt;=&lt;/span&gt;{
            &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;normal&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;: {
                &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;color&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;: JsCode(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"""&lt;/span&gt;new echarts.graphic.LinearGradient(0, 0, 0, 1, [{&lt;/span&gt;
&lt;span class="pl-s"&gt;                    offset: 0,&lt;/span&gt;
&lt;span class="pl-s"&gt;                    color: 'rgba(0, 244, 255, 1)'&lt;/span&gt;
&lt;span class="pl-s"&gt;                }, {&lt;/span&gt;
&lt;span class="pl-s"&gt;                    offset: 1,&lt;/span&gt;
&lt;span class="pl-s"&gt;                    color: 'rgba(0, 77, 167, 1)'&lt;/span&gt;
&lt;span class="pl-s"&gt;                }], false)&lt;span class="pl-pds"&gt;"""&lt;/span&gt;&lt;/span&gt;),
                &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;barBorderRadius&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;: [&lt;span class="pl-c1"&gt;6&lt;/span&gt;, &lt;span class="pl-c1"&gt;6&lt;/span&gt;, &lt;span class="pl-c1"&gt;6&lt;/span&gt;, &lt;span class="pl-c1"&gt;6&lt;/span&gt;],
                &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;shadowColor&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;rgb(0, 160, 221)&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;,
            }}&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;8)A系列柱子最大和最小值&lt;code&gt;标记点&lt;/code&gt;对应的控制代码：&lt;/p&gt;
&lt;div class="highlight highlight-source-python"&gt;&lt;pre&gt;markpoint_opts&lt;span class="pl-k"&gt;=&lt;/span&gt;opts.MarkPointOpts(
                &lt;span class="pl-v"&gt;data&lt;/span&gt;&lt;span class="pl-k"&gt;=&lt;/span&gt;[
                    opts.MarkPointItem(&lt;span class="pl-v"&gt;type_&lt;/span&gt;&lt;span class="pl-k"&gt;=&lt;/span&gt;&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;max&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-v"&gt;name&lt;/span&gt;&lt;span class="pl-k"&gt;=&lt;/span&gt;&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;最大值&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;),
                    opts.MarkPointItem(&lt;span class="pl-v"&gt;type_&lt;/span&gt;&lt;span class="pl-k"&gt;=&lt;/span&gt;&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;min&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-v"&gt;name&lt;/span&gt;&lt;span class="pl-k"&gt;=&lt;/span&gt;&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;最小值&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;),
                ]
            )&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;9)A系列柱子最大和最小值&lt;code&gt;标记线&lt;/code&gt;对应的控制代码：&lt;/p&gt;
&lt;div class="highlight highlight-source-python"&gt;&lt;pre&gt;markline_opts&lt;span class="pl-k"&gt;=&lt;/span&gt;opts.MarkLineOpts(
                &lt;span class="pl-v"&gt;data&lt;/span&gt;&lt;span class="pl-k"&gt;=&lt;/span&gt;[
                    opts.MarkLineItem(&lt;span class="pl-v"&gt;type_&lt;/span&gt;&lt;span class="pl-k"&gt;=&lt;/span&gt;&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;min&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-v"&gt;name&lt;/span&gt;&lt;span class="pl-k"&gt;=&lt;/span&gt;&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;最小值&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;),
                    opts.MarkLineItem(&lt;span class="pl-v"&gt;type_&lt;/span&gt;&lt;span class="pl-k"&gt;=&lt;/span&gt;&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;max&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-v"&gt;name&lt;/span&gt;&lt;span class="pl-k"&gt;=&lt;/span&gt;&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;最大值&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
                ]
            )&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;10)柱状图标题对应的控制代码：&lt;/p&gt;
&lt;div class="highlight highlight-source-python"&gt;&lt;pre&gt;title_opts&lt;span class="pl-k"&gt;=&lt;/span&gt;opts.TitleOpts(&lt;span class="pl-v"&gt;title&lt;/span&gt;&lt;span class="pl-k"&gt;=&lt;/span&gt;&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;Bar-参数使用例子&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;11)柱状图非常有用的toolbox显示对应的控制代码：&lt;/p&gt;
&lt;div class="highlight highlight-source-python"&gt;&lt;pre&gt;toolbox_opts&lt;span class="pl-k"&gt;=&lt;/span&gt;opts.ToolboxOpts()&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;12)Y轴显示在右侧对应的控制代码：&lt;/p&gt;
&lt;div class="highlight highlight-source-python"&gt;&lt;pre&gt;yaxis_opts&lt;span class="pl-k"&gt;=&lt;/span&gt;opts.AxisOpts(&lt;span class="pl-v"&gt;position&lt;/span&gt;&lt;span class="pl-k"&gt;=&lt;/span&gt;&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;right&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;13)Y轴名称对应的控制代码：&lt;/p&gt;
&lt;div class="highlight highlight-source-python"&gt;&lt;pre&gt;yaxis_opts&lt;span class="pl-k"&gt;=&lt;/span&gt;opts.AxisOpts(,&lt;span class="pl-v"&gt;name&lt;/span&gt;&lt;span class="pl-k"&gt;=&lt;/span&gt;&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;Y轴&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;14)数据轴区域放大缩小设置对应的控制代码：&lt;/p&gt;
&lt;div class="highlight highlight-source-python"&gt;&lt;pre&gt;datazoom_opts&lt;span class="pl-k"&gt;=&lt;/span&gt;opts.DataZoomOpts()&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;strong&gt;完整代码&lt;/strong&gt;&lt;/p&gt;
&lt;div class="highlight highlight-source-python"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;def&lt;/span&gt; &lt;span class="pl-en"&gt;bar_border_radius&lt;/span&gt;():
    c &lt;span class="pl-k"&gt;=&lt;/span&gt; (
        Bar(&lt;span class="pl-v"&gt;init_opts&lt;/span&gt;&lt;span class="pl-k"&gt;=&lt;/span&gt;opts.InitOpts(
                &lt;span class="pl-v"&gt;animation_opts&lt;/span&gt;&lt;span class="pl-k"&gt;=&lt;/span&gt;opts.AnimationOpts(
                    &lt;span class="pl-v"&gt;animation_delay&lt;/span&gt;&lt;span class="pl-k"&gt;=&lt;/span&gt;&lt;span class="pl-c1"&gt;500&lt;/span&gt;, &lt;span class="pl-v"&gt;animation_easing&lt;/span&gt;&lt;span class="pl-k"&gt;=&lt;/span&gt;&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;cubicOut&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;
                ),
                &lt;span class="pl-v"&gt;theme&lt;/span&gt;&lt;span class="pl-k"&gt;=&lt;/span&gt;ThemeType.&lt;span class="pl-c1"&gt;MACARONS&lt;/span&gt;))
        .add_xaxis( [&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;草莓&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;芒果&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;葡萄&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;雪梨&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;西瓜&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;柠檬&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;车厘子&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;])
        .add_yaxis(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;A&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, Faker.values(),&lt;span class="pl-v"&gt;category_gap&lt;/span&gt;&lt;span class="pl-k"&gt;=&lt;/span&gt;&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;50%&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;,&lt;span class="pl-v"&gt;markpoint_opts&lt;/span&gt;&lt;span class="pl-k"&gt;=&lt;/span&gt;opts.MarkPointOpts(),&lt;span class="pl-v"&gt;is_selected&lt;/span&gt;&lt;span class="pl-k"&gt;=&lt;/span&gt;&lt;span class="pl-c1"&gt;True&lt;/span&gt;)
        .set_series_opts(&lt;span class="pl-v"&gt;itemstyle_opts&lt;/span&gt;&lt;span class="pl-k"&gt;=&lt;/span&gt;{
            &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;normal&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;: {
                &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;color&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;: JsCode(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"""&lt;/span&gt;new echarts.graphic.LinearGradient(0, 0, 0, 1, [{&lt;/span&gt;
&lt;span class="pl-s"&gt;                    offset: 0,&lt;/span&gt;
&lt;span class="pl-s"&gt;                    color: 'rgba(0, 244, 255, 1)'&lt;/span&gt;
&lt;span class="pl-s"&gt;                }, {&lt;/span&gt;
&lt;span class="pl-s"&gt;                    offset: 1,&lt;/span&gt;
&lt;span class="pl-s"&gt;                    color: 'rgba(0, 77, 167, 1)'&lt;/span&gt;
&lt;span class="pl-s"&gt;                }], false)&lt;span class="pl-pds"&gt;"""&lt;/span&gt;&lt;/span&gt;),
                &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;barBorderRadius&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;: [&lt;span class="pl-c1"&gt;6&lt;/span&gt;, &lt;span class="pl-c1"&gt;6&lt;/span&gt;, &lt;span class="pl-c1"&gt;6&lt;/span&gt;, &lt;span class="pl-c1"&gt;6&lt;/span&gt;],
                &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;shadowColor&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;rgb(0, 160, 221)&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;,
            }}, &lt;span class="pl-v"&gt;markpoint_opts&lt;/span&gt;&lt;span class="pl-k"&gt;=&lt;/span&gt;opts.MarkPointOpts(
                &lt;span class="pl-v"&gt;data&lt;/span&gt;&lt;span class="pl-k"&gt;=&lt;/span&gt;[
                    opts.MarkPointItem(&lt;span class="pl-v"&gt;type_&lt;/span&gt;&lt;span class="pl-k"&gt;=&lt;/span&gt;&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;max&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-v"&gt;name&lt;/span&gt;&lt;span class="pl-k"&gt;=&lt;/span&gt;&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;最大值&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;),
                    opts.MarkPointItem(&lt;span class="pl-v"&gt;type_&lt;/span&gt;&lt;span class="pl-k"&gt;=&lt;/span&gt;&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;min&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-v"&gt;name&lt;/span&gt;&lt;span class="pl-k"&gt;=&lt;/span&gt;&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;最小值&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;),
                ]
            ),&lt;span class="pl-v"&gt;markline_opts&lt;/span&gt;&lt;span class="pl-k"&gt;=&lt;/span&gt;opts.MarkLineOpts(
                &lt;span class="pl-v"&gt;data&lt;/span&gt;&lt;span class="pl-k"&gt;=&lt;/span&gt;[
                    opts.MarkLineItem(&lt;span class="pl-v"&gt;type_&lt;/span&gt;&lt;span class="pl-k"&gt;=&lt;/span&gt;&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;min&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-v"&gt;name&lt;/span&gt;&lt;span class="pl-k"&gt;=&lt;/span&gt;&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;最小值&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;),
                    opts.MarkLineItem(&lt;span class="pl-v"&gt;type_&lt;/span&gt;&lt;span class="pl-k"&gt;=&lt;/span&gt;&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;max&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-v"&gt;name&lt;/span&gt;&lt;span class="pl-k"&gt;=&lt;/span&gt;&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;最大值&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
                ]
            ))
        .set_global_opts(&lt;span class="pl-v"&gt;title_opts&lt;/span&gt;&lt;span class="pl-k"&gt;=&lt;/span&gt;opts.TitleOpts(&lt;span class="pl-v"&gt;title&lt;/span&gt;&lt;span class="pl-k"&gt;=&lt;/span&gt;&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;Bar-参数使用例子&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;), &lt;span class="pl-v"&gt;toolbox_opts&lt;/span&gt;&lt;span class="pl-k"&gt;=&lt;/span&gt;opts.ToolboxOpts(),&lt;span class="pl-v"&gt;yaxis_opts&lt;/span&gt;&lt;span class="pl-k"&gt;=&lt;/span&gt;opts.AxisOpts(&lt;span class="pl-v"&gt;position&lt;/span&gt;&lt;span class="pl-k"&gt;=&lt;/span&gt;&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;right&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;,&lt;span class="pl-v"&gt;name&lt;/span&gt;&lt;span class="pl-k"&gt;=&lt;/span&gt;&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;Y轴&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;),&lt;span class="pl-v"&gt;datazoom_opts&lt;/span&gt;&lt;span class="pl-k"&gt;=&lt;/span&gt;opts.DataZoomOpts(),)
        
    )

    &lt;span class="pl-k"&gt;return&lt;/span&gt; c

bar_border_radius().render()&lt;/pre&gt;&lt;/div&gt;
&lt;h4&gt;&lt;a id="user-content-24-pyecharts原来可以这样快速入门上" class="anchor" aria-hidden="true" href="#24-pyecharts原来可以这样快速入门上"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;24 pyecharts原来可以这样快速入门(上)&lt;/h4&gt;
&lt;p&gt;最近两天，翻看下&lt;code&gt;pyecharts&lt;/code&gt;的源码，感叹这个框架写的真棒，思路清晰，设计简洁，通俗易懂，推荐读者们有空也阅读下。&lt;/p&gt;
&lt;p&gt;bee君是被pyecharts官档介绍-五个特性所吸引：&lt;/p&gt;
&lt;p&gt;1)简洁的 API 设计，使用如丝滑般流畅，支持链式调用;&lt;/p&gt;
&lt;p&gt;2)囊括了 30+ 种常见图表，应有尽有;&lt;/p&gt;
&lt;p&gt;3)支持主流 Notebook 环境，Jupyter Notebook 和 JupyterLab;&lt;/p&gt;
&lt;p&gt;4)可轻松集成至 Flask，Django 等主流 Web 框架;&lt;/p&gt;
&lt;p&gt;5)高度灵活的配置项，可轻松搭配出精美的图表&lt;/p&gt;
&lt;p&gt;pyecharts 确实也如上面五个特性介绍那样，使用起来非常方便。那么，有些读者不禁好奇会问，pyecharts 是如何做到的？&lt;/p&gt;
&lt;p&gt;我们不妨从pyecharts官档&lt;code&gt;5分钟入门pyecharts&lt;/code&gt;章节开始，由表(最高层函数)及里(底层函数也就是所谓的&lt;code&gt;源码&lt;/code&gt;)，一探究竟。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;官方第一个例子&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;不妨从官档给出的第一个例子说起，&lt;/p&gt;
&lt;div class="highlight highlight-source-python"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;from&lt;/span&gt; pyecharts.charts &lt;span class="pl-k"&gt;import&lt;/span&gt; Bar

bar &lt;span class="pl-k"&gt;=&lt;/span&gt; Bar()
bar.add_xaxis([&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;衬衫&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;羊毛衫&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;雪纺衫&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;裤子&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;高跟鞋&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;袜子&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;])
bar.add_yaxis(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;商家A&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, [&lt;span class="pl-c1"&gt;5&lt;/span&gt;, &lt;span class="pl-c1"&gt;20&lt;/span&gt;, &lt;span class="pl-c1"&gt;36&lt;/span&gt;, &lt;span class="pl-c1"&gt;10&lt;/span&gt;, &lt;span class="pl-c1"&gt;75&lt;/span&gt;, &lt;span class="pl-c1"&gt;90&lt;/span&gt;])
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; render 会生成本地 HTML 文件，默认会在当前目录生成 render.html 文件&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; 也可以传入路径参数，如 bar.render("mycharts.html")&lt;/span&gt;
bar.render()&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;第一行代码：&lt;code&gt;from pyecharts.charts import Bar&lt;/code&gt;，先上一张源码中&lt;code&gt;包的结构图&lt;/code&gt;：&lt;/p&gt;
&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="./img/pyecharts1.jpg"&gt;&lt;img src="./img/pyecharts1.jpg" alt="" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;code&gt;bar.py&lt;/code&gt;模块中定义了类&lt;code&gt;Bar(RectChart)&lt;/code&gt;，如下所示：&lt;/p&gt;
&lt;div class="highlight highlight-source-python"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;class&lt;/span&gt; &lt;span class="pl-en"&gt;Bar&lt;/span&gt;(&lt;span class="pl-e"&gt;RectChart&lt;/span&gt;):
    &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"""&lt;/span&gt;&lt;/span&gt;
&lt;span class="pl-s"&gt;    &amp;lt;&amp;lt;&amp;lt; Bar Chart &amp;gt;&amp;gt;&amp;gt;&lt;/span&gt;
&lt;span class="pl-s"&gt;&lt;/span&gt;
&lt;span class="pl-s"&gt;    Bar chart presents categorical data with rectangular bars&lt;/span&gt;
&lt;span class="pl-s"&gt;    with heights or lengths proportional to the values that they represent.&lt;/span&gt;
&lt;span class="pl-s"&gt;    &lt;span class="pl-pds"&gt;"""&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;这里有读者可能会有以下两个问题：&lt;/p&gt;
&lt;p&gt;1)为什么根据图1中的包结构，为什么不这么写：&lt;code&gt;from pyecharts.charts.basic_charts import Bar&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="./img/pyechart2.jpg"&gt;&lt;img src="./img/pyechart2.jpg" alt="" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;答：请看图2中&lt;code&gt;__init__.py&lt;/code&gt;模块，文件内容如下，看到导入&lt;code&gt;charts&lt;/code&gt;包，而非&lt;code&gt;charts.basic_charts&lt;/code&gt;&lt;/p&gt;
&lt;div class="highlight highlight-source-python"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;from&lt;/span&gt; pyecharts &lt;span class="pl-k"&gt;import&lt;/span&gt; charts, commons, components, datasets, options, render, scaffold
&lt;span class="pl-k"&gt;from&lt;/span&gt; pyecharts._version &lt;span class="pl-k"&gt;import&lt;/span&gt; __author__, &lt;span class="pl-c1"&gt;__version__&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;2)&lt;code&gt;Bar(RectChart)&lt;/code&gt;是什么意思&lt;/p&gt;
&lt;p&gt;答：RectChart是Bar的子类&lt;/p&gt;
&lt;p&gt;下面4行代码，很好理解，没有特殊性。&lt;/p&gt;
&lt;p&gt;pyecharts主要两个大版本,0.5基版本和1.0基版本，从1.0基版本开始全面支持&lt;code&gt;链式调用&lt;/code&gt;，bee君也很喜爱这种链式调用模式，代码看起来更加紧凑：&lt;/p&gt;
&lt;div class="highlight highlight-source-python"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;from&lt;/span&gt; pyecharts.charts &lt;span class="pl-k"&gt;import&lt;/span&gt; Bar

bar &lt;span class="pl-k"&gt;=&lt;/span&gt; (
    Bar()
    .add_xaxis([&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;衬衫&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;羊毛衫&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;雪纺衫&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;裤子&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;高跟鞋&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;袜子&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;])
    .add_yaxis(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;商家A&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, [&lt;span class="pl-c1"&gt;5&lt;/span&gt;, &lt;span class="pl-c1"&gt;20&lt;/span&gt;, &lt;span class="pl-c1"&gt;36&lt;/span&gt;, &lt;span class="pl-c1"&gt;10&lt;/span&gt;, &lt;span class="pl-c1"&gt;75&lt;/span&gt;, &lt;span class="pl-c1"&gt;90&lt;/span&gt;])
)
bar.render()&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;实现&lt;code&gt;链式调用&lt;/code&gt;也没有多难，保证返回类本身&lt;code&gt;self&lt;/code&gt;即可，如果非要有其他返回对象，那么要提到类内以便被全局共享，&lt;/p&gt;
&lt;p&gt;add_xaxis函数返回&lt;code&gt;self&lt;/code&gt;&lt;/p&gt;
&lt;div class="highlight highlight-source-python"&gt;&lt;pre&gt;    &lt;span class="pl-k"&gt;def&lt;/span&gt; &lt;span class="pl-en"&gt;add_xaxis&lt;/span&gt;(&lt;span class="pl-smi"&gt;&lt;span class="pl-smi"&gt;self&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-smi"&gt;xaxis_data&lt;/span&gt;: Sequence):
        &lt;span class="pl-c1"&gt;self&lt;/span&gt;.options[&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;xAxis&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;][&lt;span class="pl-c1"&gt;0&lt;/span&gt;].update(&lt;span class="pl-v"&gt;data&lt;/span&gt;&lt;span class="pl-k"&gt;=&lt;/span&gt;xaxis_data)
        &lt;span class="pl-c1"&gt;self&lt;/span&gt;._xaxis_data &lt;span class="pl-k"&gt;=&lt;/span&gt; xaxis_data
        &lt;span class="pl-k"&gt;return&lt;/span&gt; &lt;span class="pl-c1"&gt;self&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;add_yaxis函数同样返回&lt;code&gt;self&lt;/code&gt;.&lt;/p&gt;
&lt;h4&gt;&lt;a id="user-content-25-pyecharts原来可以这样快速入门中" class="anchor" aria-hidden="true" href="#25-pyecharts原来可以这样快速入门中"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;25 pyecharts原来可以这样快速入门(中)&lt;/h4&gt;
&lt;p&gt;&lt;strong&gt;一切皆options&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;pyecharts用起来很爽的另一个重要原因，&lt;code&gt;参数配置项&lt;/code&gt;封装的非常nice，通过定义一些列基础的配置组件，比如&lt;code&gt;global_options.py&lt;/code&gt;模块中定义的配置对象有以下&lt;code&gt;27&lt;/code&gt;个&lt;/p&gt;
&lt;div class="highlight highlight-source-python"&gt;&lt;pre&gt;    AngleAxisItem,
    AngleAxisOpts,
    AnimationOpts,
    Axis3DOpts,
    AxisLineOpts,
    AxisOpts,
    AxisPointerOpts,
    AxisTickOpts,
    BrushOpts,
    CalendarOpts,
    DataZoomOpts,
    Grid3DOpts,
    GridOpts,
    InitOpts,
    LegendOpts,
    ParallelAxisOpts,
    ParallelOpts,
    PolarOpts,
    RadarIndicatorItem,
    RadiusAxisItem,
    RadiusAxisOpts,
    SingleAxisOpts,
    TitleOpts,
    ToolBoxFeatureOpts,
    ToolboxOpts,
    TooltipOpts,
    VisualMapOpts,&lt;/pre&gt;&lt;/div&gt;
&lt;h4&gt;&lt;a id="user-content-26-pyecharts原来可以这样快速入门下" class="anchor" aria-hidden="true" href="#26-pyecharts原来可以这样快速入门下"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;26 pyecharts原来可以这样快速入门(下)&lt;/h4&gt;
&lt;p&gt;&lt;strong&gt;第二个例子&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;了解上面的配置对象后，再看官档给出的第二个例子，与第一个例子相比，增加了一行代码：&lt;code&gt;set_global_opts&lt;/code&gt;函数&lt;/p&gt;
&lt;div class="highlight highlight-source-python"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;from&lt;/span&gt; pyecharts.charts &lt;span class="pl-k"&gt;import&lt;/span&gt; Bar
&lt;span class="pl-k"&gt;from&lt;/span&gt; pyecharts &lt;span class="pl-k"&gt;import&lt;/span&gt; options &lt;span class="pl-k"&gt;as&lt;/span&gt; opts

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; V1 版本开始支持链式调用&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; 你所看到的格式其实是 `black` 格式化以后的效果&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; 可以执行 `pip install black` 下载使用&lt;/span&gt;
bar &lt;span class="pl-k"&gt;=&lt;/span&gt; (
    Bar()
    .add_xaxis([&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;衬衫&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;羊毛衫&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;雪纺衫&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;裤子&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;高跟鞋&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;袜子&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;])
    .add_yaxis(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;商家A&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, [&lt;span class="pl-c1"&gt;5&lt;/span&gt;, &lt;span class="pl-c1"&gt;20&lt;/span&gt;, &lt;span class="pl-c1"&gt;36&lt;/span&gt;, &lt;span class="pl-c1"&gt;10&lt;/span&gt;, &lt;span class="pl-c1"&gt;75&lt;/span&gt;, &lt;span class="pl-c1"&gt;90&lt;/span&gt;])
    .set_global_opts(&lt;span class="pl-v"&gt;title_opts&lt;/span&gt;&lt;span class="pl-k"&gt;=&lt;/span&gt;opts.TitleOpts(&lt;span class="pl-v"&gt;title&lt;/span&gt;&lt;span class="pl-k"&gt;=&lt;/span&gt;&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;主标题&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-v"&gt;subtitle&lt;/span&gt;&lt;span class="pl-k"&gt;=&lt;/span&gt;&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;副标题&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;))
    
bar.render()&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;code&gt;set_global_opts&lt;/code&gt;函数在pyecharts中被高频使用，它定义在底层基础模块&lt;code&gt;Chart.py&lt;/code&gt;中，它是前面说到的&lt;code&gt;RectChart&lt;/code&gt;的子类，&lt;code&gt;Bar&lt;/code&gt;类的孙子类。&lt;/p&gt;
&lt;p&gt;浏览下函数的参数：&lt;/p&gt;
&lt;div class="highlight highlight-source-python"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;def&lt;/span&gt; &lt;span class="pl-en"&gt;set_global_opts&lt;/span&gt;(
        &lt;span class="pl-smi"&gt;&lt;span class="pl-smi"&gt;self&lt;/span&gt;&lt;/span&gt;,
        &lt;span class="pl-smi"&gt;title_opts&lt;/span&gt;: types.Title &lt;span class="pl-k"&gt;=&lt;/span&gt; opts.TitleOpts(),
        &lt;span class="pl-smi"&gt;legend_opts&lt;/span&gt;: types.Legend &lt;span class="pl-k"&gt;=&lt;/span&gt; opts.LegendOpts(),
        &lt;span class="pl-smi"&gt;tooltip_opts&lt;/span&gt;: types.Tooltip &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;None&lt;/span&gt;,
        &lt;span class="pl-smi"&gt;toolbox_opts&lt;/span&gt;: types.Toolbox &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;None&lt;/span&gt;,
        &lt;span class="pl-smi"&gt;brush_opts&lt;/span&gt;: types.Brush &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;None&lt;/span&gt;,
        &lt;span class="pl-smi"&gt;xaxis_opts&lt;/span&gt;: types.Axis &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;None&lt;/span&gt;,
        &lt;span class="pl-smi"&gt;yaxis_opts&lt;/span&gt;: types.Axis &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;None&lt;/span&gt;,
        &lt;span class="pl-smi"&gt;visualmap_opts&lt;/span&gt;: types.VisualMap &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;None&lt;/span&gt;,
        &lt;span class="pl-smi"&gt;datazoom_opts&lt;/span&gt;: types.DataZoom &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;None&lt;/span&gt;,
        &lt;span class="pl-smi"&gt;graphic_opts&lt;/span&gt;: types.Graphic &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;None&lt;/span&gt;,
        &lt;span class="pl-smi"&gt;axispointer_opts&lt;/span&gt;: types.AxisPointer &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;None&lt;/span&gt;,
    ):&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;以第二个参数&lt;code&gt;title_opts&lt;/code&gt;为例，说明&lt;code&gt;pyecharts&lt;/code&gt;中参数赋值的风格。&lt;/p&gt;
&lt;p&gt;首先，&lt;code&gt;title_opts&lt;/code&gt;是&lt;code&gt;默认参数&lt;/code&gt;，默认值为&lt;code&gt;opts.TitleOpts()&lt;/code&gt;，这个对象在上一节中，我们提到过，是&lt;code&gt;global_options.py&lt;/code&gt;模块中定义的&lt;code&gt;27&lt;/code&gt;个配置对象种的一个。&lt;/p&gt;
&lt;p&gt;其次，pyecharts中为了增强代码可读性，参数的类型都显示的给出。此处它的类型为：&lt;code&gt;types.Title&lt;/code&gt;. 这是什么类型？它的类型不是&lt;code&gt;TitleOpts&lt;/code&gt;吗？不急，看看Title这个类型的定义：&lt;/p&gt;
&lt;div class="highlight highlight-source-python"&gt;&lt;pre&gt;Title &lt;span class="pl-k"&gt;=&lt;/span&gt; Union[opts.TitleOpts, &lt;span class="pl-c1"&gt;dict&lt;/span&gt;]&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;原来&lt;code&gt;Title&lt;/code&gt;可能是&lt;code&gt;opts.TitleOpts&lt;/code&gt;, 也可能是python原生的&lt;code&gt;dict&lt;/code&gt;. 通过&lt;code&gt;Union&lt;/code&gt;实现的就是这种&lt;code&gt;类型效果&lt;/code&gt;。所以这就解释了官档中为什么说也可以使用字典配置参数的问题，如下官档：&lt;/p&gt;
&lt;div class="highlight highlight-source-python"&gt;&lt;pre&gt;  &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; 或者直接使用字典参数&lt;/span&gt;
    &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; .set_global_opts(title_opts={"text": "主标题", "subtext": "副标题"})&lt;/span&gt;
)&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;最后，真正的关于图表的标题相关的属性都被封装到TitleOpts类中，比如&lt;code&gt;title&lt;/code&gt;,&lt;code&gt;subtitle&lt;/code&gt;属性，查看源码，TitleOpts对象还有更多属性：&lt;/p&gt;
&lt;div class="highlight highlight-source-python"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;class&lt;/span&gt; &lt;span class="pl-en"&gt;TitleOpts&lt;/span&gt;(&lt;span class="pl-e"&gt;BasicOpts&lt;/span&gt;):
    &lt;span class="pl-k"&gt;def&lt;/span&gt; &lt;span class="pl-c1"&gt;__init__&lt;/span&gt;(
        &lt;span class="pl-smi"&gt;&lt;span class="pl-smi"&gt;self&lt;/span&gt;&lt;/span&gt;,
        &lt;span class="pl-smi"&gt;title&lt;/span&gt;: Optional[&lt;span class="pl-c1"&gt;str&lt;/span&gt;] &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;None&lt;/span&gt;,
        &lt;span class="pl-smi"&gt;title_link&lt;/span&gt;: Optional[&lt;span class="pl-c1"&gt;str&lt;/span&gt;] &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;None&lt;/span&gt;,
        &lt;span class="pl-smi"&gt;title_target&lt;/span&gt;: Optional[&lt;span class="pl-c1"&gt;str&lt;/span&gt;] &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;None&lt;/span&gt;,
        &lt;span class="pl-smi"&gt;subtitle&lt;/span&gt;: Optional[&lt;span class="pl-c1"&gt;str&lt;/span&gt;] &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;None&lt;/span&gt;,
        &lt;span class="pl-smi"&gt;subtitle_link&lt;/span&gt;: Optional[&lt;span class="pl-c1"&gt;str&lt;/span&gt;] &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;None&lt;/span&gt;,
        &lt;span class="pl-smi"&gt;subtitle_target&lt;/span&gt;: Optional[&lt;span class="pl-c1"&gt;str&lt;/span&gt;] &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;None&lt;/span&gt;,
        &lt;span class="pl-smi"&gt;pos_left&lt;/span&gt;: Optional[&lt;span class="pl-c1"&gt;str&lt;/span&gt;] &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;None&lt;/span&gt;,
        &lt;span class="pl-smi"&gt;pos_right&lt;/span&gt;: Optional[&lt;span class="pl-c1"&gt;str&lt;/span&gt;] &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;None&lt;/span&gt;,
        &lt;span class="pl-smi"&gt;pos_top&lt;/span&gt;: Optional[&lt;span class="pl-c1"&gt;str&lt;/span&gt;] &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;None&lt;/span&gt;,
        &lt;span class="pl-smi"&gt;pos_bottom&lt;/span&gt;: Optional[&lt;span class="pl-c1"&gt;str&lt;/span&gt;] &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;None&lt;/span&gt;,
        &lt;span class="pl-smi"&gt;padding&lt;/span&gt;: Union[Sequence, Numeric] &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;5&lt;/span&gt;,
        &lt;span class="pl-smi"&gt;item_gap&lt;/span&gt;: Numeric &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;10&lt;/span&gt;,
        &lt;span class="pl-smi"&gt;title_textstyle_opts&lt;/span&gt;: Union[TextStyleOpts, &lt;span class="pl-c1"&gt;dict&lt;/span&gt;, &lt;span class="pl-c1"&gt;None&lt;/span&gt;] &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;None&lt;/span&gt;,
        &lt;span class="pl-smi"&gt;subtitle_textstyle_opts&lt;/span&gt;: Union[TextStyleOpts, &lt;span class="pl-c1"&gt;dict&lt;/span&gt;, &lt;span class="pl-c1"&gt;None&lt;/span&gt;] &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;None&lt;/span&gt;,
    ):&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;OK. 到此跟随5分钟入门的官档，结合两个例子实现的背后源码，探讨了：&lt;/p&gt;
&lt;p&gt;1)与包结构组织相关的&lt;code&gt;__init__.py&lt;/code&gt;；&lt;/p&gt;
&lt;p&gt;2)类的继承关系:Bar-&amp;gt;RectChart-&amp;gt;Chart；&lt;/p&gt;
&lt;p&gt;3)链式调用；&lt;/p&gt;
&lt;p&gt;4)重要的参数配置包&lt;code&gt;options&lt;/code&gt;，以TitleOpts类为例，&lt;code&gt;set_global_opts&lt;/code&gt;将它装载到Bar类中实现属性自定义。&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-六-python之坑" class="anchor" aria-hidden="true" href="#六-python之坑"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;六、 Python之坑&lt;/h3&gt;
&lt;h4&gt;&lt;a id="user-content-1-含单个元素的元组" class="anchor" aria-hidden="true" href="#1-含单个元素的元组"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;1 含单个元素的元组&lt;/h4&gt;
&lt;p&gt;Python中有些函数的参数类型为元组，其内有1个元素，这样创建是错误的：&lt;/p&gt;
&lt;div class="highlight highlight-source-python"&gt;&lt;pre&gt;c &lt;span class="pl-k"&gt;=&lt;/span&gt; (&lt;span class="pl-c1"&gt;5&lt;/span&gt;) &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; NO!&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;它实际创建一个整型元素5，必须要在元素后加一个&lt;code&gt;逗号&lt;/code&gt;:&lt;/p&gt;
&lt;div class="highlight highlight-source-python"&gt;&lt;pre&gt;c &lt;span class="pl-k"&gt;=&lt;/span&gt; (&lt;span class="pl-c1"&gt;5&lt;/span&gt;,) &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; YES!&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h4&gt;&lt;a id="user-content-2-默认参数设为空" class="anchor" aria-hidden="true" href="#2-默认参数设为空"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;2 默认参数设为空&lt;/h4&gt;
&lt;p&gt;含有默认参数的函数，如果类型为容器，且设置为空：&lt;/p&gt;
&lt;div class="highlight highlight-source-python"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;def&lt;/span&gt; &lt;span class="pl-en"&gt;f&lt;/span&gt;(&lt;span class="pl-smi"&gt;a&lt;/span&gt;,&lt;span class="pl-smi"&gt;b&lt;/span&gt;&lt;span class="pl-k"&gt;=&lt;/span&gt;[]):  &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; NO!&lt;/span&gt;
    &lt;span class="pl-c1"&gt;print&lt;/span&gt;(b)
    &lt;span class="pl-k"&gt;return&lt;/span&gt; b

ret &lt;span class="pl-k"&gt;=&lt;/span&gt; f(&lt;span class="pl-c1"&gt;1&lt;/span&gt;)
ret.append(&lt;span class="pl-c1"&gt;1&lt;/span&gt;)
ret.append(&lt;span class="pl-c1"&gt;2&lt;/span&gt;)
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; 当再调用f(1)时，预计打印为 []&lt;/span&gt;
f(&lt;span class="pl-c1"&gt;1&lt;/span&gt;)
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; 但是却为 [1,2]&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;这是可变类型的默认参数之坑，请务必设置此类默认参数为None：&lt;/p&gt;
&lt;div class="highlight highlight-source-python"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;def&lt;/span&gt; &lt;span class="pl-en"&gt;f&lt;/span&gt;(&lt;span class="pl-smi"&gt;a&lt;/span&gt;,&lt;span class="pl-smi"&gt;b&lt;/span&gt;&lt;span class="pl-k"&gt;=&lt;/span&gt;&lt;span class="pl-c1"&gt;None&lt;/span&gt;): &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; YES!&lt;/span&gt;
    &lt;span class="pl-k"&gt;pass&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h4&gt;&lt;a id="user-content-3-共享变量未绑定之坑" class="anchor" aria-hidden="true" href="#3-共享变量未绑定之坑"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;3 共享变量未绑定之坑&lt;/h4&gt;
&lt;p&gt;有时想要多个函数共享一个全局变量，但却在某个函数内试图修改它为局部变量：&lt;/p&gt;
&lt;div class="highlight highlight-source-python"&gt;&lt;pre&gt;i &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;1&lt;/span&gt;
&lt;span class="pl-k"&gt;def&lt;/span&gt; &lt;span class="pl-en"&gt;f&lt;/span&gt;():
    i&lt;span class="pl-k"&gt;+=&lt;/span&gt;&lt;span class="pl-c1"&gt;1&lt;/span&gt; &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt;NO!&lt;/span&gt;
    
&lt;span class="pl-k"&gt;def&lt;/span&gt; &lt;span class="pl-en"&gt;g&lt;/span&gt;():
    &lt;span class="pl-c1"&gt;print&lt;/span&gt;(i)&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;应该在f函数内显示声明&lt;code&gt;i&lt;/code&gt;为global变量：&lt;/p&gt;
&lt;div class="highlight highlight-source-python"&gt;&lt;pre&gt;i &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;1&lt;/span&gt;
&lt;span class="pl-k"&gt;def&lt;/span&gt; &lt;span class="pl-en"&gt;f&lt;/span&gt;():
    &lt;span class="pl-k"&gt;global&lt;/span&gt; i &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; YES!&lt;/span&gt;
    i&lt;span class="pl-k"&gt;+=&lt;/span&gt;&lt;span class="pl-c1"&gt;1&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h4&gt;&lt;a id="user-content-4-lambda自由参数之坑" class="anchor" aria-hidden="true" href="#4-lambda自由参数之坑"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;4 lambda自由参数之坑&lt;/h4&gt;
&lt;p&gt;排序和分组的key函数常使用lambda，表达更加简洁，但是有个坑新手容易掉进去：&lt;/p&gt;
&lt;div class="highlight highlight-source-python"&gt;&lt;pre&gt;a &lt;span class="pl-k"&gt;=&lt;/span&gt; [&lt;span class="pl-k"&gt;lambda&lt;/span&gt; &lt;span class="pl-smi"&gt;x&lt;/span&gt;: x&lt;span class="pl-k"&gt;+&lt;/span&gt;i &lt;span class="pl-k"&gt;for&lt;/span&gt; i &lt;span class="pl-k"&gt;in&lt;/span&gt; &lt;span class="pl-c1"&gt;range&lt;/span&gt;(&lt;span class="pl-c1"&gt;3&lt;/span&gt;)] &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; NO!&lt;/span&gt;
&lt;span class="pl-k"&gt;for&lt;/span&gt; f &lt;span class="pl-k"&gt;in&lt;/span&gt; a:
    &lt;span class="pl-c1"&gt;print&lt;/span&gt;(f(&lt;span class="pl-c1"&gt;1&lt;/span&gt;))
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; 你可能期望输出：1,2,3&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;但是实际却输出: 3,3,3. 定义lambda使用的&lt;code&gt;i&lt;/code&gt;被称为自由参数，它只在调用lambda函数时，值才被真正确定下来，这就犹如下面打印出2，你肯定确信无疑吧。&lt;/p&gt;
&lt;div class="highlight highlight-source-python"&gt;&lt;pre&gt;a &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;0&lt;/span&gt;
a &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;1&lt;/span&gt;
a &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;2&lt;/span&gt;
&lt;span class="pl-k"&gt;def&lt;/span&gt; &lt;span class="pl-en"&gt;f&lt;/span&gt;(&lt;span class="pl-smi"&gt;a&lt;/span&gt;):
    &lt;span class="pl-c1"&gt;print&lt;/span&gt;(a)&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;正确做法是转化&lt;code&gt;自由参数&lt;/code&gt;为lambda函数的&lt;code&gt;默认参数&lt;/code&gt;：&lt;/p&gt;
&lt;div class="highlight highlight-source-python"&gt;&lt;pre&gt;a &lt;span class="pl-k"&gt;=&lt;/span&gt; [&lt;span class="pl-k"&gt;lambda&lt;/span&gt; &lt;span class="pl-smi"&gt;x&lt;/span&gt;,&lt;span class="pl-smi"&gt;i&lt;/span&gt;&lt;span class="pl-k"&gt;=&lt;/span&gt;i: x&lt;span class="pl-k"&gt;+&lt;/span&gt;i &lt;span class="pl-k"&gt;for&lt;/span&gt; i &lt;span class="pl-k"&gt;in&lt;/span&gt; &lt;span class="pl-c1"&gt;range&lt;/span&gt;(&lt;span class="pl-c1"&gt;3&lt;/span&gt;)] &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; YES!&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h4&gt;&lt;a id="user-content-5-各种参数使用之坑" class="anchor" aria-hidden="true" href="#5-各种参数使用之坑"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;5 各种参数使用之坑&lt;/h4&gt;
&lt;p&gt;Python强大多变，原因之一在于函数参数类型的多样化。方便的同时，也为使用者带来更多的约束规则。如果不了解这些规则，调用函数时，可能会出现如下一些语法异常：&lt;/p&gt;
&lt;p&gt;&lt;em&gt;(1) SyntaxError: positional argument follows keyword argument&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;em&gt;(2) TypeError: f() missing 1 required keyword-only argument: 'b'&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;em&gt;(3) SyntaxError: keyword argument repeated&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;em&gt;(4) TypeError: f() missing 1 required positional argument: 'b'&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;em&gt;(5) TypeError: f() got an unexpected keyword argument 'a'&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;em&gt;(6) TypeError: f() takes 0 positional arguments but 1 was given&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;总结主要的参数使用规则&lt;/p&gt;
&lt;p&gt;位置参数&lt;/p&gt;
&lt;p&gt;&lt;code&gt;位置参数&lt;/code&gt;的定义：&lt;code&gt;函数调用&lt;/code&gt;时根据函数定义的参数位（形参）置来传递参数，是最常见的参数类型。&lt;/p&gt;
&lt;div class="highlight highlight-source-python"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;def&lt;/span&gt; &lt;span class="pl-en"&gt;f&lt;/span&gt;(&lt;span class="pl-smi"&gt;a&lt;/span&gt;):
  &lt;span class="pl-k"&gt;return&lt;/span&gt; a

f(&lt;span class="pl-c1"&gt;1&lt;/span&gt;) &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; 位置参数 &lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;位置参数不能缺少：&lt;/p&gt;
&lt;div class="highlight highlight-source-python"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;def&lt;/span&gt; &lt;span class="pl-en"&gt;f&lt;/span&gt;(&lt;span class="pl-smi"&gt;a&lt;/span&gt;,&lt;span class="pl-smi"&gt;b&lt;/span&gt;):
  &lt;span class="pl-k"&gt;pass&lt;/span&gt;

f(&lt;span class="pl-c1"&gt;1&lt;/span&gt;) &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; TypeError: f() missing 1 required positional argument: 'b'&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;strong&gt;规则1：位置参数必须一一对应，缺一不可&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;关键字参数&lt;/p&gt;
&lt;p&gt;在函数调用时，通过‘键--值’方式为函数形参传值，不用按照位置为函数形参传值。&lt;/p&gt;
&lt;div class="highlight highlight-source-python"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;def&lt;/span&gt; &lt;span class="pl-en"&gt;f&lt;/span&gt;(&lt;span class="pl-smi"&gt;a&lt;/span&gt;):
  &lt;span class="pl-c1"&gt;print&lt;/span&gt;(&lt;span class="pl-s"&gt;f&lt;/span&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;span class="pl-s"&gt;a:&lt;/span&gt;&lt;span class="pl-c1"&gt;{&lt;/span&gt;a&lt;span class="pl-c1"&gt;}&lt;/span&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;)&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;这么调用，&lt;code&gt;a&lt;/code&gt;就是关键字参数：&lt;/p&gt;
&lt;div class="highlight highlight-source-python"&gt;&lt;pre&gt;f(&lt;span class="pl-v"&gt;a&lt;/span&gt;&lt;span class="pl-k"&gt;=&lt;/span&gt;&lt;span class="pl-c1"&gt;1&lt;/span&gt;)&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;但是下面调用就不OK:&lt;/p&gt;
&lt;div class="highlight highlight-source-python"&gt;&lt;pre&gt;f(&lt;span class="pl-v"&gt;a&lt;/span&gt;&lt;span class="pl-k"&gt;=&lt;/span&gt;&lt;span class="pl-c1"&gt;1&lt;/span&gt;,&lt;span class="pl-c1"&gt;20&lt;/span&gt;.) &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; SyntaxError: positional argument follows keyword argument&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;strong&gt;规则2：关键字参数必须在位置参数右边&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;下面调用也不OK:&lt;/p&gt;
&lt;div class="highlight highlight-source-python"&gt;&lt;pre&gt;f(&lt;span class="pl-c1"&gt;1&lt;/span&gt;,&lt;span class="pl-v"&gt;width&lt;/span&gt;&lt;span class="pl-k"&gt;=&lt;/span&gt;&lt;span class="pl-c1"&gt;20&lt;/span&gt;.,&lt;span class="pl-v"&gt;width&lt;/span&gt;&lt;span class="pl-k"&gt;=&lt;/span&gt;&lt;span class="pl-c1"&gt;30&lt;/span&gt;.) &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt;SyntaxError: keyword argument repeated&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;strong&gt;规则3：对同一个形参不能重复传值&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;默认参数&lt;/p&gt;
&lt;p&gt;在定义函数时，可以为形参提供默认值。对于有默认值的形参，调用函数时如果为该参数传值，则使用传入的值，否则使用默认值。如下&lt;code&gt;b&lt;/code&gt;是默认参数：&lt;/p&gt;
&lt;div class="highlight highlight-source-python"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;def&lt;/span&gt; &lt;span class="pl-en"&gt;f&lt;/span&gt;(&lt;span class="pl-smi"&gt;a&lt;/span&gt;,&lt;span class="pl-smi"&gt;b&lt;/span&gt;&lt;span class="pl-k"&gt;=&lt;/span&gt;&lt;span class="pl-c1"&gt;1&lt;/span&gt;):
  &lt;span class="pl-c1"&gt;print&lt;/span&gt;(&lt;span class="pl-s"&gt;f&lt;/span&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;span class="pl-s"&gt;a:&lt;/span&gt;&lt;span class="pl-c1"&gt;{&lt;/span&gt;a&lt;span class="pl-c1"&gt;}&lt;/span&gt;&lt;span class="pl-s"&gt;, b:&lt;/span&gt;&lt;span class="pl-c1"&gt;{&lt;/span&gt;b&lt;span class="pl-c1"&gt;}&lt;/span&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;)
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;strong&gt;规则4：无论是函数的定义还是调用，默认参数的定义应该在位置形参右面&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;只在定义时赋值一次；默认参数通常应该定义成不可变类型&lt;/p&gt;
&lt;p&gt;可变位置参数&lt;/p&gt;
&lt;p&gt;如下定义的参数a为可变位置参数：&lt;/p&gt;
&lt;div class="highlight highlight-source-python"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;def&lt;/span&gt; &lt;span class="pl-en"&gt;f&lt;/span&gt;(&lt;span class="pl-k"&gt;*&lt;/span&gt;&lt;span class="pl-smi"&gt;a&lt;/span&gt;):
  &lt;span class="pl-c1"&gt;print&lt;/span&gt;(a)&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;调用方法：&lt;/p&gt;
&lt;div class="highlight highlight-source-python"&gt;&lt;pre&gt;f(&lt;span class="pl-c1"&gt;1&lt;/span&gt;) &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt;打印结果为元组： (1,)&lt;/span&gt;
f(&lt;span class="pl-c1"&gt;1&lt;/span&gt;,&lt;span class="pl-c1"&gt;2&lt;/span&gt;,&lt;span class="pl-c1"&gt;3&lt;/span&gt;) &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt;打印结果：(1, 2, 3)&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;但是，不能这么调用：&lt;/p&gt;
&lt;div class="highlight highlight-source-python"&gt;&lt;pre&gt;f(&lt;span class="pl-v"&gt;a&lt;/span&gt;&lt;span class="pl-k"&gt;=&lt;/span&gt;&lt;span class="pl-c1"&gt;1&lt;/span&gt;) &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; TypeError: f() got an unexpected keyword argument 'a'&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;可变关键字参数&lt;/p&gt;
&lt;p&gt;如下&lt;code&gt;a&lt;/code&gt;是可变关键字参数：&lt;/p&gt;
&lt;div class="highlight highlight-source-python"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;def&lt;/span&gt; &lt;span class="pl-en"&gt;f&lt;/span&gt;(&lt;span class="pl-k"&gt;**&lt;/span&gt;&lt;span class="pl-smi"&gt;a&lt;/span&gt;):
  &lt;span class="pl-c1"&gt;print&lt;/span&gt;(a)&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;调用方法：&lt;/p&gt;
&lt;div class="highlight highlight-source-python"&gt;&lt;pre&gt;f(&lt;span class="pl-v"&gt;a&lt;/span&gt;&lt;span class="pl-k"&gt;=&lt;/span&gt;&lt;span class="pl-c1"&gt;1&lt;/span&gt;) &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt;打印结果为字典：{'a': 1}&lt;/span&gt;
f(&lt;span class="pl-v"&gt;a&lt;/span&gt;&lt;span class="pl-k"&gt;=&lt;/span&gt;&lt;span class="pl-c1"&gt;1&lt;/span&gt;,&lt;span class="pl-v"&gt;b&lt;/span&gt;&lt;span class="pl-k"&gt;=&lt;/span&gt;&lt;span class="pl-c1"&gt;2&lt;/span&gt;,&lt;span class="pl-v"&gt;width&lt;/span&gt;&lt;span class="pl-k"&gt;=&lt;/span&gt;&lt;span class="pl-c1"&gt;3&lt;/span&gt;) &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt;打印结果：{'a': 1, 'b': 2, 'width': 3}&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;但是，不能这么调用：&lt;/p&gt;
&lt;div class="highlight highlight-source-python"&gt;&lt;pre&gt;f(&lt;span class="pl-c1"&gt;1&lt;/span&gt;) &lt;span class="pl-c1"&gt;TypeError&lt;/span&gt;: f() takes &lt;span class="pl-c1"&gt;0&lt;/span&gt; positional arguments but &lt;span class="pl-c1"&gt;1&lt;/span&gt; was given&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;接下来，单独推送分析一个小例子，综合以上各种参数类型的函数及调用方法，敬请关注。&lt;/p&gt;
&lt;h4&gt;&lt;a id="user-content-6-列表删除之坑" class="anchor" aria-hidden="true" href="#6-列表删除之坑"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;6 列表删除之坑&lt;/h4&gt;
&lt;p&gt;删除一个列表中的元素，此元素可能在列表中重复多次：&lt;/p&gt;
&lt;div class="highlight highlight-source-python"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;def&lt;/span&gt; &lt;span class="pl-en"&gt;del_item&lt;/span&gt;(&lt;span class="pl-smi"&gt;lst&lt;/span&gt;,&lt;span class="pl-smi"&gt;e&lt;/span&gt;):
    &lt;span class="pl-k"&gt;return&lt;/span&gt; [lst.remove(i) &lt;span class="pl-k"&gt;for&lt;/span&gt; i &lt;span class="pl-k"&gt;in&lt;/span&gt; e &lt;span class="pl-k"&gt;if&lt;/span&gt; i&lt;span class="pl-k"&gt;==&lt;/span&gt;e] &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; NO!&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;考虑删除这个序列[1,3,3,3,5]中的元素3，结果发现只删除其中两个：&lt;/p&gt;
&lt;div class="highlight highlight-source-python"&gt;&lt;pre&gt;del_item([&lt;span class="pl-c1"&gt;1&lt;/span&gt;,&lt;span class="pl-c1"&gt;3&lt;/span&gt;,&lt;span class="pl-c1"&gt;3&lt;/span&gt;,&lt;span class="pl-c1"&gt;3&lt;/span&gt;,&lt;span class="pl-c1"&gt;5&lt;/span&gt;],&lt;span class="pl-c1"&gt;3&lt;/span&gt;) &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; 结果：[1,3,5]&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;正确做法：&lt;/p&gt;
&lt;div class="highlight highlight-source-python"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;def&lt;/span&gt; &lt;span class="pl-en"&gt;del_item&lt;/span&gt;(&lt;span class="pl-smi"&gt;lst&lt;/span&gt;,&lt;span class="pl-smi"&gt;e&lt;/span&gt;):
    d &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;dict&lt;/span&gt;(&lt;span class="pl-c1"&gt;zip&lt;/span&gt;(&lt;span class="pl-c1"&gt;range&lt;/span&gt;(&lt;span class="pl-c1"&gt;len&lt;/span&gt;(lst)),lst)) &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; YES! 构造字典&lt;/span&gt;
    &lt;span class="pl-k"&gt;return&lt;/span&gt; [v &lt;span class="pl-k"&gt;for&lt;/span&gt; k,v &lt;span class="pl-k"&gt;in&lt;/span&gt; d.items() &lt;span class="pl-k"&gt;if&lt;/span&gt; v&lt;span class="pl-k"&gt;!=&lt;/span&gt;e]
&lt;/pre&gt;&lt;/div&gt;
&lt;h4&gt;&lt;a id="user-content-7-列表快速复制之坑" class="anchor" aria-hidden="true" href="#7-列表快速复制之坑"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;7 列表快速复制之坑&lt;/h4&gt;
&lt;p&gt;在python中&lt;code&gt;*&lt;/code&gt;与列表操作，实现快速元素复制：&lt;/p&gt;
&lt;div class="highlight highlight-source-python"&gt;&lt;pre&gt;a &lt;span class="pl-k"&gt;=&lt;/span&gt; [&lt;span class="pl-c1"&gt;1&lt;/span&gt;,&lt;span class="pl-c1"&gt;3&lt;/span&gt;,&lt;span class="pl-c1"&gt;5&lt;/span&gt;] &lt;span class="pl-k"&gt;*&lt;/span&gt; &lt;span class="pl-c1"&gt;3&lt;/span&gt; &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; [1,3,5,1,3,5,1,3,5]&lt;/span&gt;
a[&lt;span class="pl-c1"&gt;0&lt;/span&gt;] &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;10&lt;/span&gt; &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; [10, 2, 3, 1, 2, 3, 1, 2, 3]&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;如果列表元素为列表或字典等复合类型：&lt;/p&gt;
&lt;div class="highlight highlight-source-python"&gt;&lt;pre&gt;a &lt;span class="pl-k"&gt;=&lt;/span&gt; [[&lt;span class="pl-c1"&gt;1&lt;/span&gt;,&lt;span class="pl-c1"&gt;3&lt;/span&gt;,&lt;span class="pl-c1"&gt;5&lt;/span&gt;],[&lt;span class="pl-c1"&gt;2&lt;/span&gt;,&lt;span class="pl-c1"&gt;4&lt;/span&gt;]] &lt;span class="pl-k"&gt;*&lt;/span&gt; &lt;span class="pl-c1"&gt;3&lt;/span&gt; &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; [[1, 3, 5], [2, 4], [1, 3, 5], [2, 4], [1, 3, 5], [2, 4]]&lt;/span&gt;

a[&lt;span class="pl-c1"&gt;0&lt;/span&gt;][&lt;span class="pl-c1"&gt;0&lt;/span&gt;] &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;10&lt;/span&gt; &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt;  &lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;结果可能出乎你的意料，其他&lt;code&gt;a[1[0]&lt;/code&gt;等也被修改为10&lt;/p&gt;
&lt;div class="highlight highlight-source-python"&gt;&lt;pre&gt;[[&lt;span class="pl-c1"&gt;10&lt;/span&gt;, &lt;span class="pl-c1"&gt;3&lt;/span&gt;, &lt;span class="pl-c1"&gt;5&lt;/span&gt;], [&lt;span class="pl-c1"&gt;2&lt;/span&gt;, &lt;span class="pl-c1"&gt;4&lt;/span&gt;], [&lt;span class="pl-c1"&gt;10&lt;/span&gt;, &lt;span class="pl-c1"&gt;3&lt;/span&gt;, &lt;span class="pl-c1"&gt;5&lt;/span&gt;], [&lt;span class="pl-c1"&gt;2&lt;/span&gt;, &lt;span class="pl-c1"&gt;4&lt;/span&gt;], [&lt;span class="pl-c1"&gt;10&lt;/span&gt;, &lt;span class="pl-c1"&gt;3&lt;/span&gt;, &lt;span class="pl-c1"&gt;5&lt;/span&gt;], [&lt;span class="pl-c1"&gt;2&lt;/span&gt;, &lt;span class="pl-c1"&gt;4&lt;/span&gt;]]&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;这是因为*复制的复合对象都是浅引用，也就是说id(a[0])与id(a[2])门牌号是相等的。如果想要实现深复制效果，这么做：&lt;/p&gt;
&lt;div class="highlight highlight-source-python"&gt;&lt;pre&gt;a &lt;span class="pl-k"&gt;=&lt;/span&gt; [[] &lt;span class="pl-k"&gt;for&lt;/span&gt; _ &lt;span class="pl-k"&gt;in&lt;/span&gt; &lt;span class="pl-c1"&gt;range&lt;/span&gt;(&lt;span class="pl-c1"&gt;3&lt;/span&gt;)]&lt;/pre&gt;&lt;/div&gt;
&lt;h4&gt;&lt;a id="user-content-8-字符串驻留" class="anchor" aria-hidden="true" href="#8-字符串驻留"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;8 字符串驻留&lt;/h4&gt;
&lt;div class="highlight highlight-source-python"&gt;&lt;pre&gt;In [&lt;span class="pl-c1"&gt;1&lt;/span&gt;]: a &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;something&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;
    &lt;span class="pl-c1"&gt;...&lt;/span&gt;: b &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;some&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;&lt;span class="pl-k"&gt;+&lt;/span&gt;&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;thing&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;
    &lt;span class="pl-c1"&gt;...&lt;/span&gt;: &lt;span class="pl-c1"&gt;id&lt;/span&gt;(a)&lt;span class="pl-k"&gt;==&lt;/span&gt;&lt;span class="pl-c1"&gt;id&lt;/span&gt;(b)
Out[&lt;span class="pl-c1"&gt;1&lt;/span&gt;]: &lt;span class="pl-c1"&gt;True&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;如果上面例子返回&lt;code&gt;True&lt;/code&gt;，但是下面例子为什么是&lt;code&gt;False&lt;/code&gt;:&lt;/p&gt;
&lt;div class="highlight highlight-source-python"&gt;&lt;pre&gt;In [&lt;span class="pl-c1"&gt;1&lt;/span&gt;]: a &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;@zglg.com&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;

In [&lt;span class="pl-c1"&gt;2&lt;/span&gt;]: b &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;@zglg&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;&lt;span class="pl-k"&gt;+&lt;/span&gt;&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;.com&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;

In [&lt;span class="pl-c1"&gt;3&lt;/span&gt;]: &lt;span class="pl-c1"&gt;id&lt;/span&gt;(a)&lt;span class="pl-k"&gt;==&lt;/span&gt;&lt;span class="pl-c1"&gt;id&lt;/span&gt;(b)
Out[&lt;span class="pl-c1"&gt;3&lt;/span&gt;]: &lt;span class="pl-c1"&gt;False&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;这与Cpython 编译优化相关，行为称为&lt;code&gt;字符串驻留&lt;/code&gt;，但驻留的字符串中只包含字母，数字或下划线。&lt;/p&gt;
&lt;h4&gt;&lt;a id="user-content-9-相同值的不可变对象" class="anchor" aria-hidden="true" href="#9-相同值的不可变对象"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;9 相同值的不可变对象&lt;/h4&gt;
&lt;div class="highlight highlight-source-python"&gt;&lt;pre&gt;In [&lt;span class="pl-c1"&gt;5&lt;/span&gt;]: d &lt;span class="pl-k"&gt;=&lt;/span&gt; {}
    &lt;span class="pl-c1"&gt;...&lt;/span&gt;: d[&lt;span class="pl-c1"&gt;1&lt;/span&gt;] &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;java&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;
    &lt;span class="pl-c1"&gt;...&lt;/span&gt;: d[&lt;span class="pl-c1"&gt;1.0&lt;/span&gt;] &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;python&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;

In [&lt;span class="pl-c1"&gt;6&lt;/span&gt;]: d
Out[&lt;span class="pl-c1"&gt;6&lt;/span&gt;]: {&lt;span class="pl-c1"&gt;1&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;python&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;}

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt;## key=1,value=java的键值对神奇消失了&lt;/span&gt;
In [&lt;span class="pl-c1"&gt;7&lt;/span&gt;]: d[&lt;span class="pl-c1"&gt;1&lt;/span&gt;]
Out[&lt;span class="pl-c1"&gt;7&lt;/span&gt;]: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;python&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;
In [&lt;span class="pl-c1"&gt;8&lt;/span&gt;]: d[&lt;span class="pl-c1"&gt;1.0&lt;/span&gt;]
Out[&lt;span class="pl-c1"&gt;8&lt;/span&gt;]: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;python&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;这是因为具有相同值的不可变对象在Python中始终具有&lt;code&gt;相同的哈希值&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;由于存在&lt;code&gt;哈希冲突&lt;/code&gt;，不同值的对象也可能具有相同的哈希值。&lt;/p&gt;
&lt;h4&gt;&lt;a id="user-content-10-对象销毁顺序" class="anchor" aria-hidden="true" href="#10-对象销毁顺序"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;10 对象销毁顺序&lt;/h4&gt;
&lt;p&gt;创建一个类&lt;code&gt;SE&lt;/code&gt;:&lt;/p&gt;
&lt;div class="highlight highlight-source-python"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;class&lt;/span&gt; &lt;span class="pl-en"&gt;SE&lt;/span&gt;(&lt;span class="pl-c1"&gt;object&lt;/span&gt;):
  &lt;span class="pl-k"&gt;def&lt;/span&gt; &lt;span class="pl-c1"&gt;__init__&lt;/span&gt;(&lt;span class="pl-smi"&gt;&lt;span class="pl-smi"&gt;self&lt;/span&gt;&lt;/span&gt;):
    &lt;span class="pl-c1"&gt;print&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;init&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;)
  &lt;span class="pl-k"&gt;def&lt;/span&gt; &lt;span class="pl-c1"&gt;__del__&lt;/span&gt;(&lt;span class="pl-smi"&gt;&lt;span class="pl-smi"&gt;self&lt;/span&gt;&lt;/span&gt;):
    &lt;span class="pl-c1"&gt;print&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;del&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;)&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;创建两个SE实例，使用&lt;code&gt;is&lt;/code&gt;判断：&lt;/p&gt;
&lt;div class="highlight highlight-source-python"&gt;&lt;pre&gt;In [&lt;span class="pl-c1"&gt;63&lt;/span&gt;]: SE() &lt;span class="pl-k"&gt;is&lt;/span&gt; SE()
init
init
&lt;span class="pl-k"&gt;del&lt;/span&gt;
&lt;span class="pl-k"&gt;del&lt;/span&gt;
Out[&lt;span class="pl-c1"&gt;63&lt;/span&gt;]: &lt;span class="pl-c1"&gt;False&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;创建两个SE实例，使用&lt;code&gt;id&lt;/code&gt;判断：&lt;/p&gt;
&lt;div class="highlight highlight-source-python"&gt;&lt;pre&gt;In [&lt;span class="pl-c1"&gt;64&lt;/span&gt;]: &lt;span class="pl-c1"&gt;id&lt;/span&gt;(SE()) &lt;span class="pl-k"&gt;==&lt;/span&gt; &lt;span class="pl-c1"&gt;id&lt;/span&gt;(SE())
init
&lt;span class="pl-k"&gt;del&lt;/span&gt;
init
&lt;span class="pl-k"&gt;del&lt;/span&gt;
Out[&lt;span class="pl-c1"&gt;64&lt;/span&gt;]: &lt;span class="pl-c1"&gt;True&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;调用&lt;code&gt;id&lt;/code&gt;函数, Python 创建一个 SE 类的实例，并使用&lt;code&gt;id&lt;/code&gt;函数获得内存地址后，销毁内存丢弃这个对象。&lt;/p&gt;
&lt;p&gt;当连续两次进行此操作, Python会将相同的内存地址分配给第二个对象，所以两个对象的id值是相同的.&lt;/p&gt;
&lt;p&gt;但是is行为却与之不同，通过打印顺序就可以看到。&lt;/p&gt;
&lt;h4&gt;&lt;a id="user-content-11-充分认识for" class="anchor" aria-hidden="true" href="#11-充分认识for"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;11 充分认识for&lt;/h4&gt;
&lt;div class="highlight highlight-source-python"&gt;&lt;pre&gt;In [&lt;span class="pl-c1"&gt;65&lt;/span&gt;]: &lt;span class="pl-k"&gt;for&lt;/span&gt; i &lt;span class="pl-k"&gt;in&lt;/span&gt; &lt;span class="pl-c1"&gt;range&lt;/span&gt;(&lt;span class="pl-c1"&gt;5&lt;/span&gt;):
    &lt;span class="pl-c1"&gt;...&lt;/span&gt;:   &lt;span class="pl-c1"&gt;print&lt;/span&gt;(i)
    &lt;span class="pl-c1"&gt;...&lt;/span&gt;:   i &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;10&lt;/span&gt;
&lt;span class="pl-c1"&gt;0&lt;/span&gt;
&lt;span class="pl-c1"&gt;1&lt;/span&gt;
&lt;span class="pl-c1"&gt;2&lt;/span&gt;
&lt;span class="pl-c1"&gt;3&lt;/span&gt;
&lt;span class="pl-c1"&gt;4&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;为什么不是执行一次就退出？&lt;/p&gt;
&lt;p&gt;按照for在Python中的工作方式, i = 10 并不会影响循环。range(5)生成的下一个元素就被解包，并赋值给目标列表的变量&lt;code&gt;i&lt;/code&gt;.&lt;/p&gt;
&lt;h4&gt;&lt;a id="user-content-12-认识执行时机" class="anchor" aria-hidden="true" href="#12-认识执行时机"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;12 认识执行时机&lt;/h4&gt;
&lt;div class="highlight highlight-source-python"&gt;&lt;pre&gt;array &lt;span class="pl-k"&gt;=&lt;/span&gt; [&lt;span class="pl-c1"&gt;1&lt;/span&gt;, &lt;span class="pl-c1"&gt;3&lt;/span&gt;, &lt;span class="pl-c1"&gt;5&lt;/span&gt;]
g &lt;span class="pl-k"&gt;=&lt;/span&gt; (x &lt;span class="pl-k"&gt;for&lt;/span&gt; x &lt;span class="pl-k"&gt;in&lt;/span&gt; array &lt;span class="pl-k"&gt;if&lt;/span&gt; array.count(x) &lt;span class="pl-k"&gt;&amp;gt;&lt;/span&gt; &lt;span class="pl-c1"&gt;0&lt;/span&gt;)&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;code&gt;g&lt;/code&gt;为生成器，list(g)后返回&lt;code&gt;[1,3,5]&lt;/code&gt;，因为每个元素肯定至少都出现一次。所以这个结果这不足为奇。但是，请看下例：&lt;/p&gt;
&lt;div class="highlight highlight-source-python"&gt;&lt;pre&gt;array &lt;span class="pl-k"&gt;=&lt;/span&gt; [&lt;span class="pl-c1"&gt;1&lt;/span&gt;, &lt;span class="pl-c1"&gt;3&lt;/span&gt;, &lt;span class="pl-c1"&gt;5&lt;/span&gt;]
g &lt;span class="pl-k"&gt;=&lt;/span&gt; (x &lt;span class="pl-k"&gt;for&lt;/span&gt; x &lt;span class="pl-k"&gt;in&lt;/span&gt; array &lt;span class="pl-k"&gt;if&lt;/span&gt; array.count(x) &lt;span class="pl-k"&gt;&amp;gt;&lt;/span&gt; &lt;span class="pl-c1"&gt;0&lt;/span&gt;)
array &lt;span class="pl-k"&gt;=&lt;/span&gt; [&lt;span class="pl-c1"&gt;5&lt;/span&gt;, &lt;span class="pl-c1"&gt;7&lt;/span&gt;, &lt;span class="pl-c1"&gt;9&lt;/span&gt;]&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;请问,list(g)等于多少？这不是和上面那个例子结果一样吗，结果也是&lt;code&gt;[1,3,5]&lt;/code&gt;，但是：&lt;/p&gt;
&lt;div class="highlight highlight-source-python"&gt;&lt;pre&gt;In [&lt;span class="pl-c1"&gt;74&lt;/span&gt;]: &lt;span class="pl-c1"&gt;list&lt;/span&gt;(g)
Out[&lt;span class="pl-c1"&gt;74&lt;/span&gt;]: [&lt;span class="pl-c1"&gt;5&lt;/span&gt;]&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;这有些不可思议~~ 原因在于：&lt;/p&gt;
&lt;p&gt;生成器表达式中, in 子句在声明时执行, 而条件子句则是在运行时执行。&lt;/p&gt;
&lt;p&gt;所以代码：&lt;/p&gt;
&lt;div class="highlight highlight-source-python"&gt;&lt;pre&gt;array &lt;span class="pl-k"&gt;=&lt;/span&gt; [&lt;span class="pl-c1"&gt;1&lt;/span&gt;, &lt;span class="pl-c1"&gt;3&lt;/span&gt;, &lt;span class="pl-c1"&gt;5&lt;/span&gt;]
g &lt;span class="pl-k"&gt;=&lt;/span&gt; (x &lt;span class="pl-k"&gt;for&lt;/span&gt; x &lt;span class="pl-k"&gt;in&lt;/span&gt; array &lt;span class="pl-k"&gt;if&lt;/span&gt; array.count(x) &lt;span class="pl-k"&gt;&amp;gt;&lt;/span&gt; &lt;span class="pl-c1"&gt;0&lt;/span&gt;)
array &lt;span class="pl-k"&gt;=&lt;/span&gt; [&lt;span class="pl-c1"&gt;5&lt;/span&gt;, &lt;span class="pl-c1"&gt;7&lt;/span&gt;, &lt;span class="pl-c1"&gt;9&lt;/span&gt;]&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;等价于：&lt;/p&gt;
&lt;div class="highlight highlight-source-python"&gt;&lt;pre&gt;g &lt;span class="pl-k"&gt;=&lt;/span&gt; (x &lt;span class="pl-k"&gt;for&lt;/span&gt; x &lt;span class="pl-k"&gt;in&lt;/span&gt; [&lt;span class="pl-c1"&gt;1&lt;/span&gt;,&lt;span class="pl-c1"&gt;3&lt;/span&gt;,&lt;span class="pl-c1"&gt;5&lt;/span&gt;] &lt;span class="pl-k"&gt;if&lt;/span&gt; [&lt;span class="pl-c1"&gt;5&lt;/span&gt;,&lt;span class="pl-c1"&gt;7&lt;/span&gt;,&lt;span class="pl-c1"&gt;9&lt;/span&gt;].count(x) &lt;span class="pl-k"&gt;&amp;gt;&lt;/span&gt; &lt;span class="pl-c1"&gt;0&lt;/span&gt;)&lt;/pre&gt;&lt;/div&gt;
&lt;h4&gt;&lt;a id="user-content-13-创建空集合错误" class="anchor" aria-hidden="true" href="#13-创建空集合错误"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;13 创建空集合错误&lt;/h4&gt;
&lt;p&gt;这是Python的一个集合：&lt;code&gt;{1,3,5}&lt;/code&gt;，它里面没有重复元素，在去重等场景有重要应用。下面这样创建空集合是错误的：&lt;/p&gt;
&lt;div class="highlight highlight-source-python"&gt;&lt;pre&gt;empty &lt;span class="pl-k"&gt;=&lt;/span&gt; {} &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt;NO!&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;cpython会解释它为字典&lt;/p&gt;
&lt;p&gt;使用内置函数&lt;code&gt;set()&lt;/code&gt;创建空集合：&lt;/p&gt;
&lt;div class="highlight highlight-source-python"&gt;&lt;pre&gt;empty &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;set&lt;/span&gt;() &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt;YES!&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h4&gt;&lt;a id="user-content-14-pyecharts传入numpy数据绘图失败" class="anchor" aria-hidden="true" href="#14-pyecharts传入numpy数据绘图失败"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;14 pyecharts传入Numpy数据绘图失败&lt;/h4&gt;
&lt;p&gt;echarts使用广泛，echarts+python结合后的包：pyecharts，同样可很好用，但是传入Numpy的数据，像下面这样绘图会失败：&lt;/p&gt;
&lt;div class="highlight highlight-source-python"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;from&lt;/span&gt; pyecharts.charts &lt;span class="pl-k"&gt;import&lt;/span&gt; Bar
&lt;span class="pl-k"&gt;import&lt;/span&gt; pyecharts.options &lt;span class="pl-k"&gt;as&lt;/span&gt; opts
&lt;span class="pl-k"&gt;import&lt;/span&gt; numpy &lt;span class="pl-k"&gt;as&lt;/span&gt; np
c &lt;span class="pl-k"&gt;=&lt;/span&gt; (
    Bar()
    .add_xaxis([&lt;span class="pl-c1"&gt;1&lt;/span&gt;, &lt;span class="pl-c1"&gt;2&lt;/span&gt;, &lt;span class="pl-c1"&gt;3&lt;/span&gt;, &lt;span class="pl-c1"&gt;4&lt;/span&gt;, &lt;span class="pl-c1"&gt;5&lt;/span&gt;])
    &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; 传入Numpy数据绘图失败！&lt;/span&gt;
    .add_yaxis(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;商家A&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, np.array([&lt;span class="pl-c1"&gt;0.1&lt;/span&gt;, &lt;span class="pl-c1"&gt;0.2&lt;/span&gt;, &lt;span class="pl-c1"&gt;0.3&lt;/span&gt;, &lt;span class="pl-c1"&gt;0.4&lt;/span&gt;, &lt;span class="pl-c1"&gt;0.5&lt;/span&gt;]))
)

c.render()&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="./img/image-20200129164119080.png"&gt;&lt;img src="./img/image-20200129164119080.png" alt="image-20200129164119080" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;由此可见pyecharts对Numpy数据绘图不支持，传入原生Python的list:&lt;/p&gt;
&lt;div class="highlight highlight-source-python"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;from&lt;/span&gt; pyecharts.charts &lt;span class="pl-k"&gt;import&lt;/span&gt; Bar
&lt;span class="pl-k"&gt;import&lt;/span&gt; pyecharts.options &lt;span class="pl-k"&gt;as&lt;/span&gt; opts
&lt;span class="pl-k"&gt;import&lt;/span&gt; numpy &lt;span class="pl-k"&gt;as&lt;/span&gt; np
c &lt;span class="pl-k"&gt;=&lt;/span&gt; (
    Bar()
    .add_xaxis([&lt;span class="pl-c1"&gt;1&lt;/span&gt;, &lt;span class="pl-c1"&gt;2&lt;/span&gt;, &lt;span class="pl-c1"&gt;3&lt;/span&gt;, &lt;span class="pl-c1"&gt;4&lt;/span&gt;, &lt;span class="pl-c1"&gt;5&lt;/span&gt;])
    &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; 传入Python原生list&lt;/span&gt;
    .add_yaxis(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;商家A&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, np.array([&lt;span class="pl-c1"&gt;0.1&lt;/span&gt;, &lt;span class="pl-c1"&gt;0.2&lt;/span&gt;, &lt;span class="pl-c1"&gt;0.3&lt;/span&gt;, &lt;span class="pl-c1"&gt;0.4&lt;/span&gt;, &lt;span class="pl-c1"&gt;0.5&lt;/span&gt;]).tolist())
)

c.render()&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="./img/image-20200129164339971.png"&gt;&lt;img src="./img/image-20200129164339971.png" alt="image-20200129164339971" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-七-python第三方包" class="anchor" aria-hidden="true" href="#七-python第三方包"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;七、 Python第三方包&lt;/h3&gt;
&lt;h4&gt;&lt;a id="user-content-1-优化代码异常输出包" class="anchor" aria-hidden="true" href="#1-优化代码异常输出包"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;1 优化代码异常输出包&lt;/h4&gt;
&lt;p&gt;一行代码优化输出的异常信息&lt;/p&gt;
&lt;div class="highlight highlight-source-python"&gt;&lt;pre&gt;pip install pretty&lt;span class="pl-k"&gt;-&lt;/span&gt;errors&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;写一个函数测试：&lt;/p&gt;
&lt;div class="highlight highlight-source-python"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;def&lt;/span&gt; &lt;span class="pl-en"&gt;divided_zero&lt;/span&gt;():
    &lt;span class="pl-k"&gt;for&lt;/span&gt; i &lt;span class="pl-k"&gt;in&lt;/span&gt; &lt;span class="pl-c1"&gt;range&lt;/span&gt;(&lt;span class="pl-c1"&gt;10&lt;/span&gt;, &lt;span class="pl-k"&gt;-&lt;/span&gt;&lt;span class="pl-c1"&gt;1&lt;/span&gt;, &lt;span class="pl-k"&gt;-&lt;/span&gt;&lt;span class="pl-c1"&gt;1&lt;/span&gt;):
        &lt;span class="pl-c1"&gt;print&lt;/span&gt;(&lt;span class="pl-c1"&gt;10&lt;/span&gt;&lt;span class="pl-k"&gt;/&lt;/span&gt;i)


divided_zero()&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;在没有import这个&lt;code&gt;pretty-errors&lt;/code&gt;前，输出的错误信息有些冗余：&lt;/p&gt;
&lt;div class="highlight highlight-source-python"&gt;&lt;pre&gt;Traceback (most recent call last):
  File &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;c:\Users\HUAWEI\.vscode\extensions\ms-python.python-2019.11.50794\pythonFiles\ptvsd_launcher.py&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, line &lt;span class="pl-c1"&gt;43&lt;/span&gt;, &lt;span class="pl-k"&gt;in&lt;/span&gt; &lt;span class="pl-k"&gt;&amp;lt;&lt;/span&gt;module&lt;span class="pl-k"&gt;&amp;gt;&lt;/span&gt;
    main(ptvsdArgs)
  File &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;c:\Users\HUAWEI\.vscode\extensions\ms-python.python-2019.11.50794\pythonFiles\lib\python\old_ptvsd\ptvsd\__main__.py&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;,
line &lt;span class="pl-c1"&gt;432&lt;/span&gt;, &lt;span class="pl-k"&gt;in&lt;/span&gt; main
    run()
  File &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;c:\Users\HUAWEI\.vscode\extensions\ms-python.python-2019.11.50794\pythonFiles\lib\python\old_ptvsd\ptvsd\__main__.py&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;,
line &lt;span class="pl-c1"&gt;316&lt;/span&gt;, &lt;span class="pl-k"&gt;in&lt;/span&gt; run_file
    runpy.run_path(target, &lt;span class="pl-v"&gt;run_name&lt;/span&gt;&lt;span class="pl-k"&gt;=&lt;/span&gt;&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;__main__&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;)
  File &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;D:&lt;span class="pl-cce"&gt;\a&lt;/span&gt;naconda3\lib&lt;span class="pl-cce"&gt;\r&lt;/span&gt;unpy.py&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, line &lt;span class="pl-c1"&gt;263&lt;/span&gt;, &lt;span class="pl-k"&gt;in&lt;/span&gt; run_path
    pkg_name&lt;span class="pl-k"&gt;=&lt;/span&gt;pkg_name, script_name&lt;span class="pl-k"&gt;=&lt;/span&gt;fname)
  File &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;D:&lt;span class="pl-cce"&gt;\a&lt;/span&gt;naconda3\lib&lt;span class="pl-cce"&gt;\r&lt;/span&gt;unpy.py&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, line &lt;span class="pl-c1"&gt;96&lt;/span&gt;, &lt;span class="pl-k"&gt;in&lt;/span&gt; _run_module_code
    mod_name, mod_spec, pkg_name, script_name)
  File &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;D:&lt;span class="pl-cce"&gt;\a&lt;/span&gt;naconda3\lib&lt;span class="pl-cce"&gt;\r&lt;/span&gt;unpy.py&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, line &lt;span class="pl-c1"&gt;85&lt;/span&gt;, &lt;span class="pl-k"&gt;in&lt;/span&gt; _run_code
    &lt;span class="pl-c1"&gt;exec&lt;/span&gt;(code, run_globals)
  File &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;d:\source\sorting-visualizer-master\sorting\debug_test.py&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, line &lt;span class="pl-c1"&gt;6&lt;/span&gt;, &lt;span class="pl-k"&gt;in&lt;/span&gt; &lt;span class="pl-k"&gt;&amp;lt;&lt;/span&gt;module&lt;span class="pl-k"&gt;&amp;gt;&lt;/span&gt;
    divided_zero()
  File &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;d:\source\sorting-visualizer-master\sorting\debug_test.py&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, line &lt;span class="pl-c1"&gt;3&lt;/span&gt;, &lt;span class="pl-k"&gt;in&lt;/span&gt; divided_zero
    &lt;span class="pl-c1"&gt;print&lt;/span&gt;(&lt;span class="pl-c1"&gt;10&lt;/span&gt;&lt;span class="pl-k"&gt;/&lt;/span&gt;i)
&lt;span class="pl-c1"&gt;ZeroDivisionError&lt;/span&gt;: division by zero&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;我们使用刚安装的&lt;code&gt;pretty_errors&lt;/code&gt;，&lt;code&gt;import&lt;/code&gt;下:&lt;/p&gt;
&lt;div class="highlight highlight-source-python"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;import&lt;/span&gt; pretty_errors

&lt;span class="pl-k"&gt;def&lt;/span&gt; &lt;span class="pl-en"&gt;divided_zero&lt;/span&gt;():
    &lt;span class="pl-k"&gt;for&lt;/span&gt; i &lt;span class="pl-k"&gt;in&lt;/span&gt; &lt;span class="pl-c1"&gt;range&lt;/span&gt;(&lt;span class="pl-c1"&gt;10&lt;/span&gt;, &lt;span class="pl-k"&gt;-&lt;/span&gt;&lt;span class="pl-c1"&gt;1&lt;/span&gt;, &lt;span class="pl-k"&gt;-&lt;/span&gt;&lt;span class="pl-c1"&gt;1&lt;/span&gt;):
        &lt;span class="pl-c1"&gt;print&lt;/span&gt;(&lt;span class="pl-c1"&gt;10&lt;/span&gt;&lt;span class="pl-k"&gt;/&lt;/span&gt;i)

divided_zero()&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;此时看看输出的错误信息，非常精简只有2行，去那些冗余信息：&lt;/p&gt;
&lt;div class="highlight highlight-source-python"&gt;&lt;pre&gt;&lt;span class="pl-c1"&gt;ZeroDivisionError&lt;/span&gt;:
division by zero&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;完整的输出信息如下图片所示：&lt;/p&gt;
&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="./img/image-20200104103849047.png"&gt;&lt;img src="./img/image-20200104103849047.png" alt="image-20200104103849047" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h4&gt;&lt;a id="user-content-2-图像处理包pillow" class="anchor" aria-hidden="true" href="#2-图像处理包pillow"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;2 图像处理包pillow&lt;/h4&gt;
&lt;p&gt;两行代码实现旋转和缩放图像&lt;/p&gt;
&lt;p&gt;首先安装pillow:&lt;/p&gt;
&lt;div class="highlight highlight-source-python"&gt;&lt;pre&gt;pip install pillow&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;旋转图像下面图像45度：&lt;/p&gt;
&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="./img/plotly2.png"&gt;&lt;img src="./img/plotly2.png" alt="" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;div class="highlight highlight-source-python"&gt;&lt;pre&gt;In [&lt;span class="pl-c1"&gt;1&lt;/span&gt;]: &lt;span class="pl-k"&gt;from&lt;/span&gt; &lt;span class="pl-c1"&gt;PIL&lt;/span&gt; &lt;span class="pl-k"&gt;import&lt;/span&gt; Image
In [&lt;span class="pl-c1"&gt;2&lt;/span&gt;]: im &lt;span class="pl-k"&gt;=&lt;/span&gt; Image.open(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;./img/plotly2.png&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;)
In [&lt;span class="pl-c1"&gt;4&lt;/span&gt;]: im.rotate(&lt;span class="pl-c1"&gt;45&lt;/span&gt;).show()&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;旋转45度后的效果图&lt;/p&gt;
&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="./img/image-20200105085120611.png"&gt;&lt;img src="./img/image-20200105085120611.png" alt="image-20200105085120611" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;等比例缩放图像：&lt;/p&gt;
&lt;div class="highlight highlight-source-python"&gt;&lt;pre&gt;im.thumbnail((&lt;span class="pl-c1"&gt;128&lt;/span&gt;,&lt;span class="pl-c1"&gt;72&lt;/span&gt;),Image.&lt;span class="pl-c1"&gt;ANTIALIAS&lt;/span&gt;)&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;缩放后的效果图：&lt;/p&gt;
&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="./img/pillow_suofang.png"&gt;&lt;img src="./img/pillow_suofang.png" alt="" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;过滤图像后的效果图：&lt;/p&gt;
&lt;div class="highlight highlight-source-python"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;from&lt;/span&gt; &lt;span class="pl-c1"&gt;PIL&lt;/span&gt; &lt;span class="pl-k"&gt;import&lt;/span&gt; ImageFilter
im.filter(ImageFilter.&lt;span class="pl-c1"&gt;CONTOUR&lt;/span&gt;).show()&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="./img/pillow_filter.png"&gt;&lt;img src="./img/pillow_filter.png" alt="" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-八-机器学习和深度学必知算法" class="anchor" aria-hidden="true" href="#八-机器学习和深度学必知算法"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;八、 机器学习和深度学必知算法&lt;/h3&gt;
&lt;h4&gt;&lt;a id="user-content-1-领略算法魅力" class="anchor" aria-hidden="true" href="#1-领略算法魅力"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;1 领略算法魅力&lt;/h4&gt;
&lt;p&gt;深刻研究排序算法是入门算法较为好的一种方法，现在还记得4年前手动实现常见8种排序算法，通过随机生成一些数据，逐个校验代码实现的排序过程是否与预期的一致，越做越有劲，越有劲越想去研究，公交车上，吃饭的路上。。。那些画面，现在依然记忆犹新。&lt;/p&gt;
&lt;p&gt;能力有限，当时并没有生成排序过程的动画，所以这些年想着抽时间一定把排序的过程都制作成动画，然后分享出来，让更多的小伙伴看到，通过排序算法的动态演示动画，找到学习算法的真正乐趣，从而迈向一个新的认知领域。&lt;/p&gt;
&lt;p&gt;当时我还是用C++写的，时过境迁，Python迅速崛起，得益于Python的简洁，接口易用，最近终于有人在github中开源了使用Python动画展示排序算法的项目，真是倍感幸运。&lt;/p&gt;
&lt;p&gt;动画还是用matplotlib做出来的，这就更完美了，一边学完美的算法，一边还能提升Python熟练度，一边还能学到使用matplotlib制作动画。&lt;/p&gt;
&lt;p&gt;快速排序动画展示&lt;/p&gt;
&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="./img/642.gif"&gt;&lt;img src="./img/642.gif" alt="img" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;归并排序动画展示&lt;/p&gt;
&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="./img/643.gif"&gt;&lt;img src="./img/643.gif" alt="img" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;堆排序动画展示&lt;/p&gt;
&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="./img/644.gif"&gt;&lt;img src="./img/644.gif" alt="img" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;这些算法动画使用Matplotlib制作，接下来逐个补充。&lt;/p&gt;
&lt;h4&gt;&lt;a id="user-content-2-排序算法的动画展示" class="anchor" aria-hidden="true" href="#2-排序算法的动画展示"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;2 排序算法的动画展示&lt;/h4&gt;
&lt;p&gt;学会第一部分如何制作动画后，可将此技术应用于排序算法调整过程的动态展示上。&lt;/p&gt;
&lt;p&gt;首先生成测试使用的数据，待排序的数据个数至多&lt;code&gt;20个&lt;/code&gt;，待排序序列为&lt;code&gt;random_wait_sort&lt;/code&gt;，为每个值赋一个颜色值，这个由&lt;code&gt;random_rgb&lt;/code&gt;负责：&lt;/p&gt;
&lt;div class="highlight highlight-source-python"&gt;&lt;pre&gt;data_count &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;20&lt;/span&gt;  &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; here, max value of data_count is 20&lt;/span&gt;

random_wait_sort &lt;span class="pl-k"&gt;=&lt;/span&gt; [&lt;span class="pl-c1"&gt;12&lt;/span&gt;, &lt;span class="pl-c1"&gt;34&lt;/span&gt;, &lt;span class="pl-c1"&gt;32&lt;/span&gt;, &lt;span class="pl-c1"&gt;24&lt;/span&gt;, &lt;span class="pl-c1"&gt;28&lt;/span&gt;, &lt;span class="pl-c1"&gt;39&lt;/span&gt;, &lt;span class="pl-c1"&gt;5&lt;/span&gt;,
                    &lt;span class="pl-c1"&gt;22&lt;/span&gt;, &lt;span class="pl-c1"&gt;11&lt;/span&gt;, &lt;span class="pl-c1"&gt;25&lt;/span&gt;, &lt;span class="pl-c1"&gt;33&lt;/span&gt;, &lt;span class="pl-c1"&gt;32&lt;/span&gt;, &lt;span class="pl-c1"&gt;1&lt;/span&gt;, &lt;span class="pl-c1"&gt;25&lt;/span&gt;, &lt;span class="pl-c1"&gt;3&lt;/span&gt;, &lt;span class="pl-c1"&gt;8&lt;/span&gt;, &lt;span class="pl-c1"&gt;7&lt;/span&gt;, &lt;span class="pl-c1"&gt;1&lt;/span&gt;, &lt;span class="pl-c1"&gt;34&lt;/span&gt;, &lt;span class="pl-c1"&gt;7&lt;/span&gt;]

random_rgb &lt;span class="pl-k"&gt;=&lt;/span&gt; [(&lt;span class="pl-c1"&gt;0.5&lt;/span&gt;, &lt;span class="pl-c1"&gt;0.811565104942967&lt;/span&gt;, &lt;span class="pl-c1"&gt;0.11211028937187217&lt;/span&gt;),
              (&lt;span class="pl-c1"&gt;0.5&lt;/span&gt;, &lt;span class="pl-c1"&gt;0.5201323831224014&lt;/span&gt;, &lt;span class="pl-c1"&gt;0.6660999602342474&lt;/span&gt;),
              (&lt;span class="pl-c1"&gt;0.5&lt;/span&gt;, &lt;span class="pl-c1"&gt;0.575976663060455&lt;/span&gt;, &lt;span class="pl-c1"&gt;0.17788242607567772&lt;/span&gt;),
              (&lt;span class="pl-c1"&gt;0.5&lt;/span&gt;, &lt;span class="pl-c1"&gt;0.6880174797416493&lt;/span&gt;, &lt;span class="pl-c1"&gt;0.43581701833249353&lt;/span&gt;),
              (&lt;span class="pl-c1"&gt;0.5&lt;/span&gt;, &lt;span class="pl-c1"&gt;0.4443131322001743&lt;/span&gt;, &lt;span class="pl-c1"&gt;0.6993600264279745&lt;/span&gt;),
              (&lt;span class="pl-c1"&gt;0.5&lt;/span&gt;, &lt;span class="pl-c1"&gt;0.5538835821863523&lt;/span&gt;, &lt;span class="pl-c1"&gt;0.889276053938713&lt;/span&gt;),
              (&lt;span class="pl-c1"&gt;0.5&lt;/span&gt;, &lt;span class="pl-c1"&gt;0.4851681185146841&lt;/span&gt;, &lt;span class="pl-c1"&gt;0.7977608586163772&lt;/span&gt;),
              (&lt;span class="pl-c1"&gt;0.5&lt;/span&gt;, &lt;span class="pl-c1"&gt;0.3886717808488436&lt;/span&gt;, &lt;span class="pl-c1"&gt;0.09319137949618972&lt;/span&gt;),
              (&lt;span class="pl-c1"&gt;0.5&lt;/span&gt;, &lt;span class="pl-c1"&gt;0.8952456581687489&lt;/span&gt;, &lt;span class="pl-c1"&gt;0.8282376936934484&lt;/span&gt;),
              (&lt;span class="pl-c1"&gt;0.5&lt;/span&gt;, &lt;span class="pl-c1"&gt;0.16360202854998007&lt;/span&gt;, &lt;span class="pl-c1"&gt;0.4538892160157194&lt;/span&gt;),
              (&lt;span class="pl-c1"&gt;0.5&lt;/span&gt;, &lt;span class="pl-c1"&gt;0.23233400128809478&lt;/span&gt;, &lt;span class="pl-c1"&gt;0.8544141586189615&lt;/span&gt;),
              (&lt;span class="pl-c1"&gt;0.5&lt;/span&gt;, &lt;span class="pl-c1"&gt;0.5224648797546528&lt;/span&gt;, &lt;span class="pl-c1"&gt;0.8194014475829123&lt;/span&gt;),
              (&lt;span class="pl-c1"&gt;0.5&lt;/span&gt;, &lt;span class="pl-c1"&gt;0.49396099968405016&lt;/span&gt;, &lt;span class="pl-c1"&gt;0.47441724394796825&lt;/span&gt;),
              (&lt;span class="pl-c1"&gt;0.5&lt;/span&gt;, &lt;span class="pl-c1"&gt;0.12078104526714728&lt;/span&gt;, &lt;span class="pl-c1"&gt;0.7715022079860492&lt;/span&gt;),
              (&lt;span class="pl-c1"&gt;0.5&lt;/span&gt;, &lt;span class="pl-c1"&gt;0.19428498518228154&lt;/span&gt;, &lt;span class="pl-c1"&gt;0.08174917157481443&lt;/span&gt;),
              (&lt;span class="pl-c1"&gt;0.5&lt;/span&gt;, &lt;span class="pl-c1"&gt;0.6058698403873457&lt;/span&gt;, &lt;span class="pl-c1"&gt;0.6085936584142663&lt;/span&gt;),
              (&lt;span class="pl-c1"&gt;0.5&lt;/span&gt;, &lt;span class="pl-c1"&gt;0.7801178568951216&lt;/span&gt;, &lt;span class="pl-c1"&gt;0.6414767240649862&lt;/span&gt;),
              (&lt;span class="pl-c1"&gt;0.5&lt;/span&gt;, &lt;span class="pl-c1"&gt;0.4768865661174162&lt;/span&gt;, &lt;span class="pl-c1"&gt;0.3889866229610085&lt;/span&gt;),
              (&lt;span class="pl-c1"&gt;0.5&lt;/span&gt;, &lt;span class="pl-c1"&gt;0.4301945092238082&lt;/span&gt;, &lt;span class="pl-c1"&gt;0.961688141676841&lt;/span&gt;),
              (&lt;span class="pl-c1"&gt;0.5&lt;/span&gt;, &lt;span class="pl-c1"&gt;0.40496648895289855&lt;/span&gt;, &lt;span class="pl-c1"&gt;0.24234095882836093&lt;/span&gt;)]

&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;再封装一个简单的数据对象&lt;code&gt;Data&lt;/code&gt;：&lt;/p&gt;
&lt;div class="highlight highlight-source-python"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;class&lt;/span&gt; &lt;span class="pl-en"&gt;Data&lt;/span&gt;:
    &lt;span class="pl-k"&gt;def&lt;/span&gt; &lt;span class="pl-c1"&gt;__init__&lt;/span&gt;(&lt;span class="pl-smi"&gt;&lt;span class="pl-smi"&gt;self&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-smi"&gt;value&lt;/span&gt;, &lt;span class="pl-smi"&gt;rgb&lt;/span&gt;):
        &lt;span class="pl-c1"&gt;self&lt;/span&gt;.value &lt;span class="pl-k"&gt;=&lt;/span&gt; value
        &lt;span class="pl-c1"&gt;self&lt;/span&gt;.color &lt;span class="pl-k"&gt;=&lt;/span&gt; rgb

    &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; 造数据&lt;/span&gt;
    &lt;span class="pl-en"&gt;@&lt;/span&gt;&lt;span class="pl-c1"&gt;classmethod&lt;/span&gt;
    &lt;span class="pl-k"&gt;def&lt;/span&gt; &lt;span class="pl-en"&gt;create&lt;/span&gt;(&lt;span class="pl-smi"&gt;&lt;span class="pl-smi"&gt;cls&lt;/span&gt;&lt;/span&gt;):
        &lt;span class="pl-k"&gt;return&lt;/span&gt; [Data(val, rgb) &lt;span class="pl-k"&gt;for&lt;/span&gt; val, rgb &lt;span class="pl-k"&gt;in&lt;/span&gt; &lt;span class="pl-c1"&gt;zip&lt;/span&gt;(random_wait_sort[:data_count],
                                                   random_rgb[:data_count])]&lt;/pre&gt;&lt;/div&gt;
&lt;h4&gt;&lt;a id="user-content-3-先拿冒泡实验" class="anchor" aria-hidden="true" href="#3-先拿冒泡实验"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;3 先拿冒泡实验&lt;/h4&gt;
&lt;p&gt;一旦发生调整，我们立即保存到帧列表&lt;code&gt;frames&lt;/code&gt;中，注意此处需要&lt;code&gt;deepcopy&lt;/code&gt;:&lt;/p&gt;
&lt;div class="highlight highlight-source-python"&gt;&lt;pre&gt;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; 冒泡排序&lt;/span&gt;
&lt;span class="pl-k"&gt;def&lt;/span&gt; &lt;span class="pl-en"&gt;bubble_sort&lt;/span&gt;(&lt;span class="pl-smi"&gt;waiting_sort_data&lt;/span&gt;):
    frames &lt;span class="pl-k"&gt;=&lt;/span&gt; [waiting_sort_data]
    ds &lt;span class="pl-k"&gt;=&lt;/span&gt; copy.deepcopy(waiting_sort_data)
    &lt;span class="pl-k"&gt;for&lt;/span&gt; i &lt;span class="pl-k"&gt;in&lt;/span&gt; &lt;span class="pl-c1"&gt;range&lt;/span&gt;(data_count&lt;span class="pl-k"&gt;-&lt;/span&gt;&lt;span class="pl-c1"&gt;1&lt;/span&gt;):
        &lt;span class="pl-k"&gt;for&lt;/span&gt; j &lt;span class="pl-k"&gt;in&lt;/span&gt; &lt;span class="pl-c1"&gt;range&lt;/span&gt;(data_count&lt;span class="pl-k"&gt;-&lt;/span&gt;i&lt;span class="pl-k"&gt;-&lt;/span&gt;&lt;span class="pl-c1"&gt;1&lt;/span&gt;):
            &lt;span class="pl-k"&gt;if&lt;/span&gt; ds[j].value &lt;span class="pl-k"&gt;&amp;gt;&lt;/span&gt; ds[j&lt;span class="pl-k"&gt;+&lt;/span&gt;&lt;span class="pl-c1"&gt;1&lt;/span&gt;].value:
                ds[j], ds[j&lt;span class="pl-k"&gt;+&lt;/span&gt;&lt;span class="pl-c1"&gt;1&lt;/span&gt;] &lt;span class="pl-k"&gt;=&lt;/span&gt; ds[j&lt;span class="pl-k"&gt;+&lt;/span&gt;&lt;span class="pl-c1"&gt;1&lt;/span&gt;], ds[j]
                frames.append(copy.deepcopy(ds))
    frames.append(ds)
    &lt;span class="pl-k"&gt;return&lt;/span&gt; frames&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;实验结果图：&lt;/p&gt;
&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="./img/image-20200104232411426.png"&gt;&lt;img src="./img/image-20200104232411426.png" alt="image-20200104232411426" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;完整动画演示：&lt;/p&gt;
&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="./img/bubble_sort.gif"&gt;&lt;img src="./img/bubble_sort.gif" alt="img" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h4&gt;&lt;a id="user-content-4-快速排序" class="anchor" aria-hidden="true" href="#4-快速排序"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;4 快速排序&lt;/h4&gt;
&lt;p&gt;先上代码，比较经典，值得回味：&lt;/p&gt;
&lt;div class="highlight highlight-source-python"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;def&lt;/span&gt; &lt;span class="pl-en"&gt;quick_sort&lt;/span&gt;(&lt;span class="pl-smi"&gt;data_set&lt;/span&gt;):
    frames &lt;span class="pl-k"&gt;=&lt;/span&gt; [data_set]
    ds &lt;span class="pl-k"&gt;=&lt;/span&gt; copy.deepcopy(data_set)

    &lt;span class="pl-k"&gt;def&lt;/span&gt; &lt;span class="pl-en"&gt;qsort&lt;/span&gt;(&lt;span class="pl-smi"&gt;head&lt;/span&gt;, &lt;span class="pl-smi"&gt;tail&lt;/span&gt;):
        &lt;span class="pl-k"&gt;if&lt;/span&gt; tail &lt;span class="pl-k"&gt;-&lt;/span&gt; head &lt;span class="pl-k"&gt;&amp;gt;&lt;/span&gt; &lt;span class="pl-c1"&gt;1&lt;/span&gt;:
            i &lt;span class="pl-k"&gt;=&lt;/span&gt; head
            j &lt;span class="pl-k"&gt;=&lt;/span&gt; tail &lt;span class="pl-k"&gt;-&lt;/span&gt; &lt;span class="pl-c1"&gt;1&lt;/span&gt;
            pivot &lt;span class="pl-k"&gt;=&lt;/span&gt; ds[j].value
            &lt;span class="pl-k"&gt;while&lt;/span&gt; i &lt;span class="pl-k"&gt;&amp;lt;&lt;/span&gt; j:
                &lt;span class="pl-k"&gt;if&lt;/span&gt; ds[i].value &lt;span class="pl-k"&gt;&amp;gt;&lt;/span&gt; pivot &lt;span class="pl-k"&gt;or&lt;/span&gt; ds[j].value &lt;span class="pl-k"&gt;&amp;lt;&lt;/span&gt; pivot:
                    ds[i], ds[j] &lt;span class="pl-k"&gt;=&lt;/span&gt; ds[j], ds[i]
                    frames.append(copy.deepcopy(ds))
                &lt;span class="pl-k"&gt;if&lt;/span&gt; ds[i].value &lt;span class="pl-k"&gt;==&lt;/span&gt; pivot:
                    j &lt;span class="pl-k"&gt;-=&lt;/span&gt; &lt;span class="pl-c1"&gt;1&lt;/span&gt;
                &lt;span class="pl-k"&gt;else&lt;/span&gt;:
                    i &lt;span class="pl-k"&gt;+=&lt;/span&gt; &lt;span class="pl-c1"&gt;1&lt;/span&gt;
            qsort(head, i)
            qsort(i&lt;span class="pl-k"&gt;+&lt;/span&gt;&lt;span class="pl-c1"&gt;1&lt;/span&gt;, tail)

    qsort(&lt;span class="pl-c1"&gt;0&lt;/span&gt;, data_count)
    frames.append(ds)
    &lt;span class="pl-k"&gt;return&lt;/span&gt; frames&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;快速排序算法对输入为随机的序列优势往往较为明显，同样的输入数据，它只需要&lt;code&gt;24&lt;/code&gt;帧调整就能完成排序：&lt;/p&gt;
&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="./img/image-20200104232337713.png"&gt;&lt;img src="./img/image-20200104232337713.png" alt="image-20200104232337713" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h4&gt;&lt;a id="user-content-5-选择排序" class="anchor" aria-hidden="true" href="#5-选择排序"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;5 选择排序&lt;/h4&gt;
&lt;p&gt;选择排序和堆排序都是选择思维，但是性能却不如堆排序：&lt;/p&gt;
&lt;div class="highlight highlight-source-python"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;def&lt;/span&gt; &lt;span class="pl-en"&gt;selection_sort&lt;/span&gt;(&lt;span class="pl-smi"&gt;data_set&lt;/span&gt;):
    frames &lt;span class="pl-k"&gt;=&lt;/span&gt; [data_set]
    ds &lt;span class="pl-k"&gt;=&lt;/span&gt; copy.deepcopy(data_set)
    &lt;span class="pl-k"&gt;for&lt;/span&gt; i &lt;span class="pl-k"&gt;in&lt;/span&gt; &lt;span class="pl-c1"&gt;range&lt;/span&gt;(&lt;span class="pl-c1"&gt;0&lt;/span&gt;, data_count&lt;span class="pl-k"&gt;-&lt;/span&gt;&lt;span class="pl-c1"&gt;1&lt;/span&gt;):
        &lt;span class="pl-k"&gt;for&lt;/span&gt; j &lt;span class="pl-k"&gt;in&lt;/span&gt; &lt;span class="pl-c1"&gt;range&lt;/span&gt;(i&lt;span class="pl-k"&gt;+&lt;/span&gt;&lt;span class="pl-c1"&gt;1&lt;/span&gt;, data_count):
            &lt;span class="pl-k"&gt;if&lt;/span&gt; ds[j].value &lt;span class="pl-k"&gt;&amp;lt;&lt;/span&gt; ds[i].value:
                ds[i], ds[j] &lt;span class="pl-k"&gt;=&lt;/span&gt; ds[j], ds[i]
                frames.append(copy.deepcopy(ds))

    frames.append(ds)
    &lt;span class="pl-k"&gt;return&lt;/span&gt; frames&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;同样的输入数据，它完成排序需要&lt;code&gt;108&lt;/code&gt;帧:&lt;/p&gt;
&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="./img/image-20200104232448531.png"&gt;&lt;img src="./img/image-20200104232448531.png" alt="image-20200104232448531" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;动画展示如下，每轮会从未排序的列表中，挑出一个最小值，放到已排序序列后面。&lt;/p&gt;
&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="./img/select_sort.gif"&gt;&lt;img src="./img/select_sort.gif" alt="img" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h4&gt;&lt;a id="user-content-6-堆排序" class="anchor" aria-hidden="true" href="#6-堆排序"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;6 堆排序&lt;/h4&gt;
&lt;p&gt;堆排序大大改进了选择排序，逻辑上使用二叉树，先建立一个大根堆，然后根节点与未排序序列的最后一个元素交换，重新对未排序序列建堆。&lt;/p&gt;
&lt;p&gt;完整代码如下：&lt;/p&gt;
&lt;div class="highlight highlight-source-python"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;def&lt;/span&gt; &lt;span class="pl-en"&gt;heap_sort&lt;/span&gt;(&lt;span class="pl-smi"&gt;data_set&lt;/span&gt;):
    frames &lt;span class="pl-k"&gt;=&lt;/span&gt; [data_set]
    ds &lt;span class="pl-k"&gt;=&lt;/span&gt; copy.deepcopy(data_set)

    &lt;span class="pl-k"&gt;def&lt;/span&gt; &lt;span class="pl-en"&gt;heap_adjust&lt;/span&gt;(&lt;span class="pl-smi"&gt;head&lt;/span&gt;, &lt;span class="pl-smi"&gt;tail&lt;/span&gt;):
        i &lt;span class="pl-k"&gt;=&lt;/span&gt; head &lt;span class="pl-k"&gt;*&lt;/span&gt; &lt;span class="pl-c1"&gt;2&lt;/span&gt; &lt;span class="pl-k"&gt;+&lt;/span&gt; &lt;span class="pl-c1"&gt;1&lt;/span&gt;  &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; head的左孩子&lt;/span&gt;
        &lt;span class="pl-k"&gt;while&lt;/span&gt; i &lt;span class="pl-k"&gt;&amp;lt;&lt;/span&gt; tail:
            &lt;span class="pl-k"&gt;if&lt;/span&gt; i &lt;span class="pl-k"&gt;+&lt;/span&gt; &lt;span class="pl-c1"&gt;1&lt;/span&gt; &lt;span class="pl-k"&gt;&amp;lt;&lt;/span&gt; tail &lt;span class="pl-k"&gt;and&lt;/span&gt; ds[i].value &lt;span class="pl-k"&gt;&amp;lt;&lt;/span&gt; ds[i&lt;span class="pl-k"&gt;+&lt;/span&gt;&lt;span class="pl-c1"&gt;1&lt;/span&gt;].value:  &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; 选择一个更大的孩子&lt;/span&gt;
                i &lt;span class="pl-k"&gt;+=&lt;/span&gt; &lt;span class="pl-c1"&gt;1&lt;/span&gt;
            &lt;span class="pl-k"&gt;if&lt;/span&gt; ds[i].value &lt;span class="pl-k"&gt;&amp;lt;=&lt;/span&gt; ds[head].value:
                &lt;span class="pl-k"&gt;break&lt;/span&gt;
            ds[head], ds[i] &lt;span class="pl-k"&gt;=&lt;/span&gt; ds[i], ds[head]
            frames.append(copy.deepcopy(ds))
            head &lt;span class="pl-k"&gt;=&lt;/span&gt; i
            i &lt;span class="pl-k"&gt;=&lt;/span&gt; i &lt;span class="pl-k"&gt;*&lt;/span&gt; &lt;span class="pl-c1"&gt;2&lt;/span&gt; &lt;span class="pl-k"&gt;+&lt;/span&gt; &lt;span class="pl-c1"&gt;1&lt;/span&gt;

    &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; 建立一个最大堆，从最后一个父节点开始调整&lt;/span&gt;
    &lt;span class="pl-k"&gt;for&lt;/span&gt; i &lt;span class="pl-k"&gt;in&lt;/span&gt; &lt;span class="pl-c1"&gt;range&lt;/span&gt;(data_count&lt;span class="pl-k"&gt;//&lt;/span&gt;&lt;span class="pl-c1"&gt;2&lt;/span&gt;&lt;span class="pl-k"&gt;-&lt;/span&gt;&lt;span class="pl-c1"&gt;1&lt;/span&gt;, &lt;span class="pl-k"&gt;-&lt;/span&gt;&lt;span class="pl-c1"&gt;1&lt;/span&gt;, &lt;span class="pl-k"&gt;-&lt;/span&gt;&lt;span class="pl-c1"&gt;1&lt;/span&gt;):
        heap_adjust(i, data_count)
    &lt;span class="pl-k"&gt;for&lt;/span&gt; i &lt;span class="pl-k"&gt;in&lt;/span&gt; &lt;span class="pl-c1"&gt;range&lt;/span&gt;(data_count&lt;span class="pl-k"&gt;-&lt;/span&gt;&lt;span class="pl-c1"&gt;1&lt;/span&gt;, &lt;span class="pl-c1"&gt;0&lt;/span&gt;, &lt;span class="pl-k"&gt;-&lt;/span&gt;&lt;span class="pl-c1"&gt;1&lt;/span&gt;):
        ds[i], ds[&lt;span class="pl-c1"&gt;0&lt;/span&gt;] &lt;span class="pl-k"&gt;=&lt;/span&gt; ds[&lt;span class="pl-c1"&gt;0&lt;/span&gt;], ds[i]  &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; 把最大值放在位置i处&lt;/span&gt;
        heap_adjust(&lt;span class="pl-c1"&gt;0&lt;/span&gt;, i)  &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; 从0~i-1进行堆调整&lt;/span&gt;
    frames.append(ds)
    &lt;span class="pl-k"&gt;return&lt;/span&gt; frames&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;堆排序的性能也比较优秀，完成排序需要51次调整。&lt;/p&gt;
&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="./img/image-20200104232824967.png"&gt;&lt;img src="./img/image-20200104232824967.png" alt="image-20200104232824967" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h4&gt;&lt;a id="user-content-7-综合" class="anchor" aria-hidden="true" href="#7-综合"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;7 综合&lt;/h4&gt;
&lt;p&gt;依次调用以上常见的4种排序算法，分别保存所有帧和html文件。&lt;/p&gt;
&lt;div class="highlight highlight-source-python"&gt;&lt;pre&gt;waiting_sort_data &lt;span class="pl-k"&gt;=&lt;/span&gt; Data.create()
&lt;span class="pl-k"&gt;for&lt;/span&gt; sort_method &lt;span class="pl-k"&gt;in&lt;/span&gt; [bubble_sort, quick_sort, selection_sort, heap_sort]:
    frames &lt;span class="pl-k"&gt;=&lt;/span&gt; sort_method(waiting_sort_data)
    draw_chart(frames, &lt;span class="pl-v"&gt;file_name&lt;/span&gt;&lt;span class="pl-k"&gt;=&lt;/span&gt;&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;span class="pl-c1"&gt;%s&lt;/span&gt;.html&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt; &lt;span class="pl-k"&gt;%&lt;/span&gt; (sort_method.&lt;span class="pl-c1"&gt;__name__&lt;/span&gt;,))&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;获取以上完整代码、所有数据文件、结果文件：&lt;a href="./data/sort.zip"&gt;完整源码下载&lt;/a&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;h3&gt;&lt;/h3&gt;
&lt;h4&gt;&lt;a id="user-content-9-优化算法" class="anchor" aria-hidden="true" href="#9-优化算法"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;9 优化算法&lt;/h4&gt;
&lt;p&gt;机器学习是一个目标函数优化问题，给定目标函数f，约束条件会有一般包括以下三类：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;仅含等式约束&lt;/li&gt;
&lt;li&gt;仅含不等式约束&lt;/li&gt;
&lt;li&gt;等式和不等式约束混合型&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;当然还有一类没有任何约束条件的最优化问题&lt;/p&gt;
&lt;p&gt;关于最优化问题，大都令人比较头疼，首先大多教材讲解通篇都是公式，各种符号表达，各种梯度，叫人看的云里雾里。&lt;/p&gt;
&lt;p&gt;有没有结合几何图形阐述以上问题的？很庆幸，还真有这么好的讲解材料，图文并茂，逻辑推导严谨，更容易叫我们理解&lt;code&gt;拉格朗日乘数法&lt;/code&gt;、&lt;code&gt;KKT条件&lt;/code&gt;为什么就能求出极值。&lt;/p&gt;
&lt;h4&gt;&lt;a id="user-content-10-仅含等式约束" class="anchor" aria-hidden="true" href="#10-仅含等式约束"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;10 仅含等式约束&lt;/h4&gt;
&lt;p&gt;假定目标函数是连续可导函数，问题定义如下：&lt;/p&gt;
&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="./img/1578812286324.png"&gt;&lt;img src="./img/1578812286324.png" alt="1578812286324" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;然后：&lt;/p&gt;
&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="./img/1578812306173.png"&gt;&lt;img src="./img/1578812306173.png" alt="1578812306173" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;通过以上方法求解此类问题，但是为什么它能求出极值呢？&lt;/p&gt;
&lt;h4&gt;&lt;a id="user-content-11-找找感觉" class="anchor" aria-hidden="true" href="#11-找找感觉"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;11 找找感觉&lt;/h4&gt;
&lt;p&gt;大家时间都有限，只列出最核心的逻辑，找找sense, 如有兴趣可回去下载PPT仔细体会。&lt;/p&gt;
&lt;p&gt;此解释中对此类问题的定义：&lt;/p&gt;
&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="./img/1578812336141.png"&gt;&lt;img src="./img/1578812336141.png" alt="1578812336141" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;为了更好的阐述，给定一个具体例子，锁定：&lt;/p&gt;
&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="./img/1578812354197.png"&gt;&lt;img src="./img/1578812354197.png" alt="1578812354197" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;所以，f(x)的一系列取值包括0,1,100,10000等任意实数：&lt;/p&gt;
&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="./img/1578812380549.png"&gt;&lt;img src="./img/1578812380549.png" alt="1578812380549" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;但是，约束条件&lt;code&gt;h(x)&lt;/code&gt;注定会约束&lt;code&gt;f(x)&lt;/code&gt;不会等于100，不会等于10000...&lt;/p&gt;
&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="./img/1578812405788.png"&gt;&lt;img src="./img/1578812405788.png" alt="1578812405788" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;一个可行点：&lt;/p&gt;
&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="./img/1578812432196.png"&gt;&lt;img src="./img/1578812432196.png" alt="1578812432196" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h4&gt;&lt;a id="user-content-12-梯度下降" class="anchor" aria-hidden="true" href="#12-梯度下降"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;12 梯度下降&lt;/h4&gt;
&lt;p&gt;我们想要寻找一个移动&lt;code&gt;x&lt;/code&gt;的规则，使得移动后&lt;code&gt;f(x+delta_x)&lt;/code&gt;变小，当然必须满足约束&lt;code&gt;h(x+delta_x)=0&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="./img/1578812461492.png"&gt;&lt;img src="./img/1578812461492.png" alt="1578812461492" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;使得&lt;code&gt;f(x&lt;/code&gt;)减小最快的方向就是它的梯度反方向，即&lt;/p&gt;
&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="./img/1578812526928.png"&gt;&lt;img src="./img/1578812526928.png" alt="1578812526928" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="./img/1578812555425.png"&gt;&lt;img src="./img/1578812555425.png" alt="1578812555425" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;因此，要想f(x+delta_x) 变小，通过图形可以看出，只要保持和梯度反方向夹角小于90，也就是保持大概一个方向，&lt;code&gt;f(x+delta_x)&lt;/code&gt;就会变小，转化为公式就是：&lt;/p&gt;
&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="./img/1578812584788.png"&gt;&lt;img src="./img/1578812584788.png" alt="1578812584788" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;如下所示的一个&lt;code&gt;delta_x&lt;/code&gt;就是一个会使得f(x)减小的方向，但是这种移动将会破坏等式约束: &lt;code&gt;h(x)=0&lt;/code&gt;，关于准确的移动方向下面第四小节会讲到&lt;/p&gt;
&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="./img/1578812611316.png"&gt;&lt;img src="./img/1578812611316.png" alt="1578812611316" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h4&gt;&lt;a id="user-content-13-约束面的法向" class="anchor" aria-hidden="true" href="#13-约束面的法向"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;13 约束面的法向&lt;/h4&gt;
&lt;p&gt;约束面的外法向：&lt;/p&gt;
&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="./img/1578812646197.png"&gt;&lt;img src="./img/1578812646197.png" alt="1578812646197" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="./img/1578812671357.png"&gt;&lt;img src="./img/1578812671357.png" alt="1578812671357" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;约束面的内法向：&lt;/p&gt;
&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="./img/1578812701522.png"&gt;&lt;img src="./img/1578812701522.png" alt="1578812701522" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;绿圈表示法向的&lt;code&gt;正交&lt;/code&gt;方向&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;x沿着绿圈内的方向移动，将会使得f(x)减小，同时满足等式约束h(x) = 0&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="./img/1578812721685.png"&gt;&lt;img src="./img/1578812721685.png" alt="1578812721685" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h4&gt;&lt;a id="user-content-14-大胆猜想" class="anchor" aria-hidden="true" href="#14-大胆猜想"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;14 大胆猜想&lt;/h4&gt;
&lt;p&gt;我们不妨大胆假设，如果满足下面的条件：&lt;/p&gt;
&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="./img/1578812749903.png"&gt;&lt;img src="./img/1578812749903.png" alt="1578812749903" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;根据第四小节讲述，&lt;code&gt;delta_x&lt;/code&gt;必须正交于&lt;code&gt;h(x)&lt;/code&gt;，所以：&lt;/p&gt;
&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="./img/1578812770462.png"&gt;&lt;img src="./img/1578812770462.png" alt="1578812770462" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;所以：&lt;/p&gt;
&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="./img/1578812792568.png"&gt;&lt;img src="./img/1578812792568.png" alt="1578812792568" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;至此，我们就找到&lt;code&gt;f(x)&lt;/code&gt;偏导数等于0的点，就是下图所示的&lt;strong&gt;两个关键点（它们也是f(x)与h(x)的临界点）&lt;/strong&gt;。且必须满足以下条件，也就是两个向量必须是平行的：&lt;/p&gt;
&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="./img/1578812814963.png"&gt;&lt;img src="./img/1578812814963.png" alt="1578812814963" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="./img/1578812850771.png"&gt;&lt;img src="./img/1578812850771.png" alt="1578812850771" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h4&gt;&lt;a id="user-content-15-完全解码拉格朗日乘数法" class="anchor" aria-hidden="true" href="#15-完全解码拉格朗日乘数法"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;15 完全解码拉格朗日乘数法&lt;/h4&gt;
&lt;p&gt;至此，已经完全解码拉格朗日乘数法，拉格朗日巧妙的构造出下面这个式子：&lt;/p&gt;
&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="./img/1578812874316.png"&gt;&lt;img src="./img/1578812874316.png" alt="1578812874316" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;还有取得极值的的三个条件，都是对以上五个小节中涉及到的条件的编码&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="./img/1578812930092.png"&gt;&lt;img src="./img/1578812930092.png" alt="1578812930092" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;关于第三个条件，稍加说明。&lt;/p&gt;
&lt;p&gt;对于含有多个变量，比如本例子就含有2个变量&lt;code&gt;x1&lt;/code&gt;, &lt;code&gt;x2&lt;/code&gt;，就是一个多元优化问题，需要求二阶导，二阶导的矩阵就被称为&lt;code&gt;海塞矩阵&lt;/code&gt;（Hessian Matrix）&lt;/p&gt;
&lt;p&gt;与求解一元问题一样，仅凭一阶导数等于是无法判断极值的，需要求二阶导，并且二阶导大于0才是极小值，小于0是极大值，等于0依然无法判断是否在此点去的极值。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;以上就是机器学习最常用的优化技巧：拉格朗日乘数法的图形讲解，相信大家已经找到一定感觉，接下来几天我们通过例子，详细阐述机器学习的具体概念，常用算法，使用Python实现主要的算法，使用Sklearn，Kaggle数据实战这些算法。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h4&gt;&lt;a id="user-content-16-均匀分布" class="anchor" aria-hidden="true" href="#16-均匀分布"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;16 均匀分布&lt;/h4&gt;
&lt;p&gt;导入本次实验所用的4种常见分布，连续分布的代表：&lt;code&gt;beta&lt;/code&gt;分布、&lt;code&gt;正态&lt;/code&gt;分布，&lt;code&gt;均匀&lt;/code&gt;分布，离散分布的代表：&lt;code&gt;二项&lt;/code&gt;分布。&lt;/p&gt;
&lt;p&gt;绘图装饰器带有四个参数分别表示&lt;code&gt;legend&lt;/code&gt;的2类说明文字，y轴label, 保存的png文件名称。&lt;/p&gt;
&lt;div class="highlight highlight-source-python"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;import&lt;/span&gt; pretty_errors
&lt;span class="pl-k"&gt;import&lt;/span&gt; numpy &lt;span class="pl-k"&gt;as&lt;/span&gt; np
&lt;span class="pl-k"&gt;from&lt;/span&gt; scipy.stats &lt;span class="pl-k"&gt;import&lt;/span&gt; beta, norm, uniform, binom
&lt;span class="pl-k"&gt;import&lt;/span&gt; matplotlib.pyplot &lt;span class="pl-k"&gt;as&lt;/span&gt; plt
&lt;span class="pl-k"&gt;from&lt;/span&gt; functools &lt;span class="pl-k"&gt;import&lt;/span&gt; wraps

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; 定义带四个参数的画图装饰器&lt;/span&gt;

&lt;span class="pl-k"&gt;def&lt;/span&gt; &lt;span class="pl-en"&gt;my_plot&lt;/span&gt;(&lt;span class="pl-smi"&gt;label0&lt;/span&gt;&lt;span class="pl-k"&gt;=&lt;/span&gt;&lt;span class="pl-c1"&gt;None&lt;/span&gt;, &lt;span class="pl-smi"&gt;label1&lt;/span&gt;&lt;span class="pl-k"&gt;=&lt;/span&gt;&lt;span class="pl-c1"&gt;None&lt;/span&gt;, &lt;span class="pl-smi"&gt;ylabel&lt;/span&gt;&lt;span class="pl-k"&gt;=&lt;/span&gt;&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;probability density function&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-smi"&gt;fn&lt;/span&gt;&lt;span class="pl-k"&gt;=&lt;/span&gt;&lt;span class="pl-c1"&gt;None&lt;/span&gt;):
    &lt;span class="pl-k"&gt;def&lt;/span&gt; &lt;span class="pl-en"&gt;decorate&lt;/span&gt;(&lt;span class="pl-smi"&gt;f&lt;/span&gt;):
        &lt;span class="pl-en"&gt;@wraps&lt;/span&gt;(f)
        &lt;span class="pl-k"&gt;def&lt;/span&gt; &lt;span class="pl-en"&gt;myplot&lt;/span&gt;():
            fig &lt;span class="pl-k"&gt;=&lt;/span&gt; plt.figure(&lt;span class="pl-v"&gt;figsize&lt;/span&gt;&lt;span class="pl-k"&gt;=&lt;/span&gt;(&lt;span class="pl-c1"&gt;16&lt;/span&gt;, &lt;span class="pl-c1"&gt;9&lt;/span&gt;))
            ax &lt;span class="pl-k"&gt;=&lt;/span&gt; fig.add_subplot(&lt;span class="pl-c1"&gt;111&lt;/span&gt;)
            x, y, y1 &lt;span class="pl-k"&gt;=&lt;/span&gt; f()
            ax.plot(x, y, &lt;span class="pl-v"&gt;linewidth&lt;/span&gt;&lt;span class="pl-k"&gt;=&lt;/span&gt;&lt;span class="pl-c1"&gt;2&lt;/span&gt;, &lt;span class="pl-v"&gt;c&lt;/span&gt;&lt;span class="pl-k"&gt;=&lt;/span&gt;&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;r&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-v"&gt;label&lt;/span&gt;&lt;span class="pl-k"&gt;=&lt;/span&gt;label0)
            ax.plot(x, y1, &lt;span class="pl-v"&gt;linewidth&lt;/span&gt;&lt;span class="pl-k"&gt;=&lt;/span&gt;&lt;span class="pl-c1"&gt;2&lt;/span&gt;, &lt;span class="pl-v"&gt;c&lt;/span&gt;&lt;span class="pl-k"&gt;=&lt;/span&gt;&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;b&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-v"&gt;label&lt;/span&gt;&lt;span class="pl-k"&gt;=&lt;/span&gt;label1)
            ax.legend()
            plt.ylabel(ylabel)
            &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; plt.show()&lt;/span&gt;
            plt.savefig(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;./img/&lt;span class="pl-c1"&gt;%s&lt;/span&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt; &lt;span class="pl-k"&gt;%&lt;/span&gt; (fn,))
            &lt;span class="pl-c1"&gt;print&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;span class="pl-c1"&gt;%s&lt;/span&gt;保存成功&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt; &lt;span class="pl-k"&gt;%&lt;/span&gt; (fn,))
            plt.close()
        &lt;span class="pl-k"&gt;return&lt;/span&gt; myplot
    &lt;span class="pl-k"&gt;return&lt;/span&gt; decorate&lt;/pre&gt;&lt;/div&gt;
&lt;div class="highlight highlight-source-python"&gt;&lt;pre&gt;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; 均匀分布(uniform)&lt;/span&gt;
&lt;span class="pl-en"&gt;@my_plot&lt;/span&gt;(&lt;span class="pl-v"&gt;label0&lt;/span&gt;&lt;span class="pl-k"&gt;=&lt;/span&gt;&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;b-a=1.0&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-v"&gt;label1&lt;/span&gt;&lt;span class="pl-k"&gt;=&lt;/span&gt;&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;b-a=2.0&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-v"&gt;fn&lt;/span&gt;&lt;span class="pl-k"&gt;=&lt;/span&gt;&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;uniform.png&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;)
&lt;span class="pl-k"&gt;def&lt;/span&gt; &lt;span class="pl-en"&gt;unif&lt;/span&gt;():
    x &lt;span class="pl-k"&gt;=&lt;/span&gt; np.arange(&lt;span class="pl-k"&gt;-&lt;/span&gt;&lt;span class="pl-c1"&gt;0.01&lt;/span&gt;, &lt;span class="pl-c1"&gt;2.01&lt;/span&gt;, &lt;span class="pl-c1"&gt;0.01&lt;/span&gt;)
    y &lt;span class="pl-k"&gt;=&lt;/span&gt; uniform.pdf(x, &lt;span class="pl-v"&gt;loc&lt;/span&gt;&lt;span class="pl-k"&gt;=&lt;/span&gt;&lt;span class="pl-c1"&gt;0.0&lt;/span&gt;, &lt;span class="pl-v"&gt;scale&lt;/span&gt;&lt;span class="pl-k"&gt;=&lt;/span&gt;&lt;span class="pl-c1"&gt;1.0&lt;/span&gt;)
    y1 &lt;span class="pl-k"&gt;=&lt;/span&gt; uniform.pdf(x, &lt;span class="pl-v"&gt;loc&lt;/span&gt;&lt;span class="pl-k"&gt;=&lt;/span&gt;&lt;span class="pl-c1"&gt;0.0&lt;/span&gt;, &lt;span class="pl-v"&gt;scale&lt;/span&gt;&lt;span class="pl-k"&gt;=&lt;/span&gt;&lt;span class="pl-c1"&gt;2.0&lt;/span&gt;)
    &lt;span class="pl-k"&gt;return&lt;/span&gt; x, y, y1&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="./img/uniform.png"&gt;&lt;img src="./img/uniform.png" alt="" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h4&gt;&lt;a id="user-content-17-二项分布" class="anchor" aria-hidden="true" href="#17-二项分布"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;17 &lt;strong&gt;二项分布&lt;/strong&gt;&lt;/h4&gt;
&lt;p&gt;红色曲线表示发生一次概率为0.3，重复50次的密度函数，二项分布期望值为0.3*50 = 15次。看到这50次实验，很可能出现的次数为10~20.可与蓝色曲线对比分析。&lt;/p&gt;
&lt;div class="highlight highlight-source-python"&gt;&lt;pre&gt;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; 二项分布&lt;/span&gt;
&lt;span class="pl-en"&gt;@my_plot&lt;/span&gt;(&lt;span class="pl-v"&gt;label0&lt;/span&gt;&lt;span class="pl-k"&gt;=&lt;/span&gt;&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;n=50,p=0.3&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-v"&gt;label1&lt;/span&gt;&lt;span class="pl-k"&gt;=&lt;/span&gt;&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;n=50,p=0.7&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-v"&gt;fn&lt;/span&gt;&lt;span class="pl-k"&gt;=&lt;/span&gt;&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;binom.png&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-v"&gt;ylabel&lt;/span&gt;&lt;span class="pl-k"&gt;=&lt;/span&gt;&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;probability mass function&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;)
&lt;span class="pl-k"&gt;def&lt;/span&gt; &lt;span class="pl-en"&gt;bino&lt;/span&gt;():
    x &lt;span class="pl-k"&gt;=&lt;/span&gt; np.arange(&lt;span class="pl-c1"&gt;50&lt;/span&gt;)
    n, p, p1 &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;50&lt;/span&gt;, &lt;span class="pl-c1"&gt;0.3&lt;/span&gt;, &lt;span class="pl-c1"&gt;0.7&lt;/span&gt;
    y &lt;span class="pl-k"&gt;=&lt;/span&gt; binom.pmf(x, &lt;span class="pl-v"&gt;n&lt;/span&gt;&lt;span class="pl-k"&gt;=&lt;/span&gt;n, &lt;span class="pl-v"&gt;p&lt;/span&gt;&lt;span class="pl-k"&gt;=&lt;/span&gt;p)
    y1 &lt;span class="pl-k"&gt;=&lt;/span&gt; binom.pmf(x, &lt;span class="pl-v"&gt;n&lt;/span&gt;&lt;span class="pl-k"&gt;=&lt;/span&gt;n, &lt;span class="pl-v"&gt;p&lt;/span&gt;&lt;span class="pl-k"&gt;=&lt;/span&gt;p1)
    &lt;span class="pl-k"&gt;return&lt;/span&gt; x, y, y1&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="./img/binom.png"&gt;&lt;img src="./img/binom.png" alt="" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h4&gt;&lt;a id="user-content-18-高斯分布" class="anchor" aria-hidden="true" href="#18-高斯分布"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;18 高斯分布&lt;/h4&gt;
&lt;p&gt;红色曲线表示均值为0，标准差为1.0的概率密度函数，蓝色曲线的标准差更大，所以它更矮胖，显示出取值的多样性，和不稳定性。&lt;/p&gt;
&lt;div class="highlight highlight-source-python"&gt;&lt;pre&gt;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; 高斯 分布&lt;/span&gt;
&lt;span class="pl-en"&gt;@my_plot&lt;/span&gt;(&lt;span class="pl-v"&gt;label0&lt;/span&gt;&lt;span class="pl-k"&gt;=&lt;/span&gt;&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;u=0.,sigma=1.0&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-v"&gt;label1&lt;/span&gt;&lt;span class="pl-k"&gt;=&lt;/span&gt;&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;u=0.,sigma=2.0&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-v"&gt;fn&lt;/span&gt;&lt;span class="pl-k"&gt;=&lt;/span&gt;&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;guass.png&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;)
&lt;span class="pl-k"&gt;def&lt;/span&gt; &lt;span class="pl-en"&gt;guass&lt;/span&gt;():
    x &lt;span class="pl-k"&gt;=&lt;/span&gt; np.arange(&lt;span class="pl-k"&gt;-&lt;/span&gt;&lt;span class="pl-c1"&gt;5&lt;/span&gt;, &lt;span class="pl-c1"&gt;5&lt;/span&gt;, &lt;span class="pl-c1"&gt;0.1&lt;/span&gt;)
    y &lt;span class="pl-k"&gt;=&lt;/span&gt; norm.pdf(x, &lt;span class="pl-v"&gt;loc&lt;/span&gt;&lt;span class="pl-k"&gt;=&lt;/span&gt;&lt;span class="pl-c1"&gt;0.0&lt;/span&gt;, &lt;span class="pl-v"&gt;scale&lt;/span&gt;&lt;span class="pl-k"&gt;=&lt;/span&gt;&lt;span class="pl-c1"&gt;1.0&lt;/span&gt;)
    y1 &lt;span class="pl-k"&gt;=&lt;/span&gt; norm.pdf(x, &lt;span class="pl-v"&gt;loc&lt;/span&gt;&lt;span class="pl-k"&gt;=&lt;/span&gt;&lt;span class="pl-c1"&gt;0&lt;/span&gt;., &lt;span class="pl-v"&gt;scale&lt;/span&gt;&lt;span class="pl-k"&gt;=&lt;/span&gt;&lt;span class="pl-c1"&gt;2.0&lt;/span&gt;)
    &lt;span class="pl-k"&gt;return&lt;/span&gt; x, y, y1&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="./img/guass.png"&gt;&lt;img src="./img/guass.png" alt="" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h4&gt;&lt;a id="user-content-19-beta分布" class="anchor" aria-hidden="true" href="#19-beta分布"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;19 beta分布&lt;/h4&gt;
&lt;p&gt;beta分布的期望值如下，可从下面的两条曲线中加以验证：&lt;/p&gt;
&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="./img/image-20200105205845965.png"&gt;&lt;img src="./img/image-20200105205845965.png" alt="image-20200105205845965" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;div class="highlight highlight-source-python"&gt;&lt;pre&gt;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; beta 分布&lt;/span&gt;
&lt;span class="pl-en"&gt;@my_plot&lt;/span&gt;(&lt;span class="pl-v"&gt;label0&lt;/span&gt;&lt;span class="pl-k"&gt;=&lt;/span&gt;&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;a=10., b=30.&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-v"&gt;label1&lt;/span&gt;&lt;span class="pl-k"&gt;=&lt;/span&gt;&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;a=4., b=4.&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-v"&gt;fn&lt;/span&gt;&lt;span class="pl-k"&gt;=&lt;/span&gt;&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;beta.png&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;)
&lt;span class="pl-k"&gt;def&lt;/span&gt; &lt;span class="pl-en"&gt;bet&lt;/span&gt;():
    x &lt;span class="pl-k"&gt;=&lt;/span&gt; np.arange(&lt;span class="pl-k"&gt;-&lt;/span&gt;&lt;span class="pl-c1"&gt;0.01&lt;/span&gt;, &lt;span class="pl-c1"&gt;1&lt;/span&gt;, &lt;span class="pl-c1"&gt;0.001&lt;/span&gt;)
    y &lt;span class="pl-k"&gt;=&lt;/span&gt; beta.pdf(x, &lt;span class="pl-v"&gt;a&lt;/span&gt;&lt;span class="pl-k"&gt;=&lt;/span&gt;&lt;span class="pl-c1"&gt;10&lt;/span&gt;., &lt;span class="pl-v"&gt;b&lt;/span&gt;&lt;span class="pl-k"&gt;=&lt;/span&gt;&lt;span class="pl-c1"&gt;30&lt;/span&gt;.)
    y1 &lt;span class="pl-k"&gt;=&lt;/span&gt; beta.pdf(x, &lt;span class="pl-v"&gt;a&lt;/span&gt;&lt;span class="pl-k"&gt;=&lt;/span&gt;&lt;span class="pl-c1"&gt;4&lt;/span&gt;., &lt;span class="pl-v"&gt;b&lt;/span&gt;&lt;span class="pl-k"&gt;=&lt;/span&gt;&lt;span class="pl-c1"&gt;4&lt;/span&gt;.)
    &lt;span class="pl-k"&gt;return&lt;/span&gt; x, y, y1&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="./img/beta.png"&gt;&lt;img src="./img/beta.png" alt="" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-九python机器学习和深度学习实战" class="anchor" aria-hidden="true" href="#九python机器学习和深度学习实战"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;九、Python、机器学习和深度学习实战&lt;/h3&gt;
&lt;h4&gt;&lt;a id="user-content-1-环境搭建" class="anchor" aria-hidden="true" href="#1-环境搭建"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;1 环境搭建&lt;/h4&gt;
&lt;p&gt;区分几个小白容易混淆的概念：pycharm，python解释器，conda安装，pip安装，总结来说：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;pycharm&lt;/code&gt;是python开发的集成开发环境(Integrated Development Environment，简称IDE)，它本身无法执行Python代码&lt;/li&gt;
&lt;li&gt;&lt;code&gt;python解释器&lt;/code&gt;才是真正执行代码的工具，pycharm里可设置Python解释器，一般去python官网下载python3.7或python3.8版本；如果安装过&lt;code&gt;anaconda&lt;/code&gt;，它里面必然也包括一个某版本的Python解释器；pycharm配置python解释器选择哪一个都可以。&lt;/li&gt;
&lt;li&gt;anaconda是python常用包的合集，并提供给我们使用&lt;code&gt;conda&lt;/code&gt;命令非常方便的安装各种Python包。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;conda安装&lt;/code&gt;：我们安装过anaconda软件后，就能够使用conda命令下载anaconda源里(比如中科大镜像源)的包&lt;/li&gt;
&lt;li&gt;&lt;code&gt;pip安装&lt;/code&gt;：类似于conda安装的python安装包的方法，更加全面&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;修改镜像源&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;在使用安装&lt;code&gt;conda&lt;/code&gt; 安装某些包会出现慢或安装失败问题，最有效方法是修改镜像源为国内镜像源。之前都选用清华镜像源，但是2019年后已停止服务。推荐选用中科大镜像源。&lt;/p&gt;
&lt;p&gt;先查看已经安装过的镜像源，cmd窗口执行命令：&lt;/p&gt;
&lt;div class="highlight highlight-source-python"&gt;&lt;pre&gt;conda config &lt;span class="pl-ii"&gt;--&lt;/span&gt;show&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;查看配置项&lt;code&gt;channels&lt;/code&gt;，如果显示带有&lt;code&gt;tsinghua&lt;/code&gt;，则说明已安装过清华镜像。&lt;/p&gt;
&lt;div class="highlight highlight-source-python"&gt;&lt;pre&gt;channels:
&lt;span class="pl-k"&gt;-&lt;/span&gt; https:&lt;span class="pl-k"&gt;//&lt;/span&gt;mirrors.tuna.tsinghua.edu.cn&lt;span class="pl-k"&gt;/&lt;/span&gt;tensorflow&lt;span class="pl-k"&gt;/&lt;/span&gt;linux&lt;span class="pl-k"&gt;/&lt;/span&gt;cpu&lt;span class="pl-k"&gt;/&lt;/span&gt;
&lt;span class="pl-k"&gt;-&lt;/span&gt; https:&lt;span class="pl-k"&gt;//&lt;/span&gt;mirrors.tuna.tsinghua.edu.cn&lt;span class="pl-k"&gt;/&lt;/span&gt;anaconda&lt;span class="pl-k"&gt;/&lt;/span&gt;cloud&lt;span class="pl-k"&gt;/&lt;/span&gt;msys2&lt;span class="pl-k"&gt;/&lt;/span&gt;
&lt;span class="pl-k"&gt;-&lt;/span&gt; https:&lt;span class="pl-k"&gt;//&lt;/span&gt;mirrors.tuna.tsinghua.edu.cn&lt;span class="pl-k"&gt;/&lt;/span&gt;anaconda&lt;span class="pl-k"&gt;/&lt;/span&gt;cloud&lt;span class="pl-k"&gt;/&lt;/span&gt;conda&lt;span class="pl-k"&gt;-&lt;/span&gt;forge&lt;span class="pl-k"&gt;/&lt;/span&gt;
&lt;span class="pl-k"&gt;-&lt;/span&gt; https:&lt;span class="pl-k"&gt;//&lt;/span&gt;mirrors.tuna.tsinghua.edu.cn&lt;span class="pl-k"&gt;/&lt;/span&gt;anaconda&lt;span class="pl-k"&gt;/&lt;/span&gt;pkgs&lt;span class="pl-k"&gt;/&lt;/span&gt;free&lt;span class="pl-k"&gt;/&lt;/span&gt;
&lt;span class="pl-k"&gt;-&lt;/span&gt; https:&lt;span class="pl-k"&gt;//&lt;/span&gt;mirrors.tuna.tsinghua.edu.cn&lt;span class="pl-k"&gt;/&lt;/span&gt;anaconda&lt;span class="pl-k"&gt;/&lt;/span&gt;cloud&lt;span class="pl-k"&gt;/&lt;/span&gt;pytorch&lt;span class="pl-k"&gt;/&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;下一步，使用&lt;code&gt;conda config --remove channels url地址 &lt;/code&gt;删除清华镜像，如下命令删除第一个。然后，依次删除所有镜像源&lt;/p&gt;
&lt;div class="highlight highlight-source-python"&gt;&lt;pre&gt;conda config &lt;span class="pl-ii"&gt;--&lt;/span&gt;remove channels https:&lt;span class="pl-k"&gt;//&lt;/span&gt;mirrors.tuna.tsinghua.edu.cn&lt;span class="pl-k"&gt;/&lt;/span&gt;tensorflow&lt;span class="pl-k"&gt;/&lt;/span&gt;linux&lt;span class="pl-k"&gt;/&lt;/span&gt;cpu&lt;span class="pl-k"&gt;/&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;添加目前可用的中科大镜像源：&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;conda config --add channels https://mirrors.ustc.edu.cn/anaconda/pkgs/free/
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;并设置搜索时显示通道地址：&lt;/p&gt;
&lt;div class="highlight highlight-source-python"&gt;&lt;pre&gt;conda config &lt;span class="pl-ii"&gt;--&lt;/span&gt;&lt;span class="pl-c1"&gt;set&lt;/span&gt; show_channel_urls yes&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;确认是否安装镜像源成功，执行&lt;code&gt;conda config --show&lt;/code&gt;，找到&lt;code&gt;channels&lt;/code&gt;值为如下：&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;channels:
  - https://mirrors.ustc.edu.cn/anaconda/pkgs/free/
  - defaults
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Done~&lt;/p&gt;
&lt;h4&gt;&lt;a id="user-content-2-pytorch慢到无法安装怎么办" class="anchor" aria-hidden="true" href="#2-pytorch慢到无法安装怎么办"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;2 pytorch慢到无法安装，怎么办？&lt;/h4&gt;
&lt;p&gt;&lt;strong&gt;1 安装慢到装不上&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;最近几天，后台几个小伙伴问我，无论pip还是conda安装&lt;code&gt;pytorch&lt;/code&gt;都太慢了，都是安装官方文档去做的，就是超时装不上，无法开展下一步，卡脖子的感觉太不好受。&lt;/p&gt;
&lt;p&gt;这些小伙伴按照pytorch官档提示，选择好后，完整复制上面命令&lt;code&gt;conda install pytorch torchvision cudatoolkit=10.1 -c pytorch&lt;/code&gt;到cmd中，系统是windows.&lt;/p&gt;
&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="./img/image-20200128182456390.png"&gt;&lt;img src="./img/image-20200128182456390.png" alt="image-20200128182456390" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;接下来提示，conda需要安装的包，他们操作选择&lt;code&gt;y&lt;/code&gt;，继续安装，但是在安装时，发现进度条几乎一动不动。&lt;/p&gt;
&lt;p&gt;反复尝试，就是这样，有些无奈，还感叹怎么深度学习的路一开始就TMD的这么难！&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;2 这样能正常安装&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;无论是安装&lt;code&gt;cpu&lt;/code&gt;版还是&lt;code&gt;cuda&lt;/code&gt;版，网上关于这些的参考资料太多了，无非就是cuda硬件和cuda开发包的版本要对应，python版本要对应等，这些bee君觉得都不是事。&lt;/p&gt;
&lt;p&gt;就像几位读者朋友遇到的问题，关键还是如何解决&lt;code&gt;慢到无法装&lt;/code&gt;的问题。&lt;/p&gt;
&lt;p&gt;最有效方法是添加镜像源，常见的清华或中科大。&lt;/p&gt;
&lt;p&gt;先查看是否已经安装相关镜像源，windows系统在&lt;code&gt;cmd&lt;/code&gt;窗口中执行命令：&lt;/p&gt;
&lt;div class="highlight highlight-source-python"&gt;&lt;pre&gt;conda config &lt;span class="pl-ii"&gt;--&lt;/span&gt;show&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;bee君这里显示：&lt;/p&gt;
&lt;div class="highlight highlight-source-python"&gt;&lt;pre&gt;channels:
  &lt;span class="pl-k"&gt;-&lt;/span&gt; https:&lt;span class="pl-k"&gt;//&lt;/span&gt;mirrors.tuna.tsinghua.edu.cn&lt;span class="pl-k"&gt;/&lt;/span&gt;anaconda&lt;span class="pl-k"&gt;/&lt;/span&gt;cloud&lt;span class="pl-k"&gt;/&lt;/span&gt;pytorch&lt;span class="pl-k"&gt;/&lt;/span&gt;
  &lt;span class="pl-k"&gt;-&lt;/span&gt; https:&lt;span class="pl-k"&gt;//&lt;/span&gt;mirrors.tuna.tsinghua.edu.cn&lt;span class="pl-k"&gt;/&lt;/span&gt;anaconda&lt;span class="pl-k"&gt;/&lt;/span&gt;cloud&lt;span class="pl-k"&gt;/&lt;/span&gt;menpo&lt;span class="pl-k"&gt;/&lt;/span&gt;
  &lt;span class="pl-k"&gt;-&lt;/span&gt; https:&lt;span class="pl-k"&gt;//&lt;/span&gt;mirrors.tuna.tsinghua.edu.cn&lt;span class="pl-k"&gt;/&lt;/span&gt;anaconda&lt;span class="pl-k"&gt;/&lt;/span&gt;cloud&lt;span class="pl-k"&gt;/&lt;/span&gt;bioconda&lt;span class="pl-k"&gt;/&lt;/span&gt;
  &lt;span class="pl-k"&gt;-&lt;/span&gt; https:&lt;span class="pl-k"&gt;//&lt;/span&gt;mirrors.tuna.tsinghua.edu.cn&lt;span class="pl-k"&gt;/&lt;/span&gt;anaconda&lt;span class="pl-k"&gt;/&lt;/span&gt;cloud&lt;span class="pl-k"&gt;/&lt;/span&gt;msys2&lt;span class="pl-k"&gt;/&lt;/span&gt;
  &lt;span class="pl-k"&gt;-&lt;/span&gt; https:&lt;span class="pl-k"&gt;//&lt;/span&gt;mirrors.tuna.tsinghua.edu.cn&lt;span class="pl-k"&gt;/&lt;/span&gt;anaconda&lt;span class="pl-k"&gt;/&lt;/span&gt;cloud&lt;span class="pl-k"&gt;/&lt;/span&gt;conda&lt;span class="pl-k"&gt;-&lt;/span&gt;forge&lt;span class="pl-k"&gt;/&lt;/span&gt;
  &lt;span class="pl-k"&gt;-&lt;/span&gt; https:&lt;span class="pl-k"&gt;//&lt;/span&gt;mirrors.tuna.tsinghua.edu.cn&lt;span class="pl-k"&gt;/&lt;/span&gt;anaconda&lt;span class="pl-k"&gt;/&lt;/span&gt;pkgs&lt;span class="pl-k"&gt;/&lt;/span&gt;main&lt;span class="pl-k"&gt;/&lt;/span&gt;
  &lt;span class="pl-k"&gt;-&lt;/span&gt; https:&lt;span class="pl-k"&gt;//&lt;/span&gt;mirrors.tuna.tsinghua.edu.cn&lt;span class="pl-k"&gt;/&lt;/span&gt;anaconda&lt;span class="pl-k"&gt;/&lt;/span&gt;pkgs&lt;span class="pl-k"&gt;/&lt;/span&gt;free&lt;span class="pl-k"&gt;/&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;说明已经安装好清华的镜像源。如果没有安装，请参考下面命令安装源：&lt;/p&gt;
&lt;div class="highlight highlight-source-python"&gt;&lt;pre&gt;conda config &lt;span class="pl-ii"&gt;--&lt;/span&gt;add channels https:&lt;span class="pl-k"&gt;//&lt;/span&gt;mirrors.tuna.tsinghua.edu.cn&lt;span class="pl-k"&gt;/&lt;/span&gt;anaconda&lt;span class="pl-k"&gt;/&lt;/span&gt;cloud&lt;span class="pl-k"&gt;/&lt;/span&gt;pytorch&lt;span class="pl-k"&gt;/&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;依次安装上面所有的源。&lt;/p&gt;
&lt;p&gt;并设置搜索时显示通道地址，执行下面命令：&lt;/p&gt;
&lt;div class="highlight highlight-source-python"&gt;&lt;pre&gt;conda config &lt;span class="pl-ii"&gt;--&lt;/span&gt;&lt;span class="pl-c1"&gt;set&lt;/span&gt; show_channel_urls yes&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;strong&gt;3 最关键一步&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;有的读者问我，他们已经都安装好镜像源，但是为什么安装还是龟速？问他们，是用哪个命令，他们回复：&lt;code&gt;conda install pytorch torchvision cudatoolkit=10.1 -c pytorch&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;好吧，执行上面命令，因为命令最后是&lt;code&gt;-c pytorch&lt;/code&gt;，所以默认还是从conda源下载，新安装的清华等源没有用上。&lt;/p&gt;
&lt;p&gt;正确命令：&lt;code&gt;conda install pytorch torchvision cudatoolkit=10.1&lt;/code&gt;，也就是去掉&lt;code&gt;-c pytorch&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;并且在安装时，也能看到使用了清华源。并且安装速度直线提升，顺利done&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;4 测试是否安装成功&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;结合官档，执行下面代码，&lt;code&gt;torch.cuda.is_available()&lt;/code&gt;返回&lt;code&gt;True&lt;/code&gt;，说明安装cuda成功。&lt;/p&gt;
&lt;div class="highlight highlight-source-python"&gt;&lt;pre&gt;In [&lt;span class="pl-c1"&gt;1&lt;/span&gt;]: &lt;span class="pl-k"&gt;import&lt;/span&gt; torch

In [&lt;span class="pl-c1"&gt;2&lt;/span&gt;]: torch.cuda
Out[&lt;span class="pl-c1"&gt;2&lt;/span&gt;]: &lt;span class="pl-k"&gt;&amp;lt;&lt;/span&gt;module &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;torch.cuda&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt; &lt;span class="pl-k"&gt;from&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;D:&lt;span class="pl-cce"&gt;\\&lt;/span&gt;Programs&lt;span class="pl-cce"&gt;\\&lt;/span&gt;anaconda&lt;span class="pl-cce"&gt;\\&lt;/span&gt;lib&lt;span class="pl-cce"&gt;\\&lt;/span&gt;site-packages&lt;span class="pl-cce"&gt;\\&lt;/span&gt;torch&lt;span class="pl-cce"&gt;\\&lt;/span&gt;cuda&lt;span class="pl-cce"&gt;\\&lt;/span&gt;__init__.py&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;&lt;span class="pl-k"&gt;&amp;gt;&lt;/span&gt;

In [&lt;span class="pl-c1"&gt;3&lt;/span&gt;]: torch.cuda.is_available()
Out[&lt;span class="pl-c1"&gt;3&lt;/span&gt;]: &lt;span class="pl-c1"&gt;True&lt;/span&gt;

In [&lt;span class="pl-c1"&gt;4&lt;/span&gt;]: &lt;span class="pl-k"&gt;from&lt;/span&gt; &lt;span class="pl-c1"&gt;__future__&lt;/span&gt; &lt;span class="pl-k"&gt;import&lt;/span&gt; print_function

In [&lt;span class="pl-c1"&gt;5&lt;/span&gt;]: x &lt;span class="pl-k"&gt;=&lt;/span&gt; torch.rand(&lt;span class="pl-c1"&gt;5&lt;/span&gt;,&lt;span class="pl-c1"&gt;3&lt;/span&gt;)

In [&lt;span class="pl-c1"&gt;6&lt;/span&gt;]: &lt;span class="pl-c1"&gt;print&lt;/span&gt;(x)
tensor([[&lt;span class="pl-c1"&gt;0.0604&lt;/span&gt;, &lt;span class="pl-c1"&gt;0.1135&lt;/span&gt;, &lt;span class="pl-c1"&gt;0.2656&lt;/span&gt;],
        [&lt;span class="pl-c1"&gt;0.5353&lt;/span&gt;, &lt;span class="pl-c1"&gt;0.9246&lt;/span&gt;, &lt;span class="pl-c1"&gt;0.3004&lt;/span&gt;],
        [&lt;span class="pl-c1"&gt;0.4872&lt;/span&gt;, &lt;span class="pl-c1"&gt;0.9592&lt;/span&gt;, &lt;span class="pl-c1"&gt;0.2215&lt;/span&gt;],
        [&lt;span class="pl-c1"&gt;0.2598&lt;/span&gt;, &lt;span class="pl-c1"&gt;0.5031&lt;/span&gt;, &lt;span class="pl-c1"&gt;0.6093&lt;/span&gt;],
        [&lt;span class="pl-c1"&gt;0.2986&lt;/span&gt;, &lt;span class="pl-c1"&gt;0.1599&lt;/span&gt;, &lt;span class="pl-c1"&gt;0.5862&lt;/span&gt;]])&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;这篇文章主要讨论安装&lt;code&gt;pytorch&lt;/code&gt;慢到不能装的问题及方案，希望对读者朋友们有帮助。&lt;/p&gt;
&lt;h4&gt;&lt;a id="user-content-3-自动群发邮件" class="anchor" aria-hidden="true" href="#3-自动群发邮件"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;3 自动群发邮件&lt;/h4&gt;
&lt;p&gt;Python自动群发邮件&lt;/p&gt;
&lt;div class="highlight highlight-source-python"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;import&lt;/span&gt; smtplib
&lt;span class="pl-k"&gt;from&lt;/span&gt; email &lt;span class="pl-k"&gt;import&lt;/span&gt; (header)
&lt;span class="pl-k"&gt;from&lt;/span&gt; email.mime &lt;span class="pl-k"&gt;import&lt;/span&gt; (text, application, multipart)
&lt;span class="pl-k"&gt;import&lt;/span&gt; time

&lt;span class="pl-k"&gt;def&lt;/span&gt; &lt;span class="pl-en"&gt;sender_mail&lt;/span&gt;():
    smt_p &lt;span class="pl-k"&gt;=&lt;/span&gt; smtplib.SMTP()
    smt_p.connect(&lt;span class="pl-v"&gt;host&lt;/span&gt;&lt;span class="pl-k"&gt;=&lt;/span&gt;&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;smtp.qq.com&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-v"&gt;port&lt;/span&gt;&lt;span class="pl-k"&gt;=&lt;/span&gt;&lt;span class="pl-c1"&gt;25&lt;/span&gt;)
    sender, password &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;113097485@qq.com&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;**************&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;
    smt_p.login(sender, password)
    receiver_addresses, count_num &lt;span class="pl-k"&gt;=&lt;/span&gt; [
        &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;guozhennianhua@163.com&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;xiaoxiazi99@163.com&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;], &lt;span class="pl-c1"&gt;1&lt;/span&gt;
    &lt;span class="pl-k"&gt;for&lt;/span&gt; email_address &lt;span class="pl-k"&gt;in&lt;/span&gt; receiver_addresses:
        &lt;span class="pl-k"&gt;try&lt;/span&gt;:
            msg &lt;span class="pl-k"&gt;=&lt;/span&gt; multipart.MIMEMultipart()
            msg[&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;From&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;] &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;zhenguo&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;
            msg[&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;To&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;] &lt;span class="pl-k"&gt;=&lt;/span&gt; email_address
            msg[&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;subject&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;] &lt;span class="pl-k"&gt;=&lt;/span&gt; header.Header(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;这是邮件主题通知&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;utf-8&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;)
            msg.attach(text.MIMEText(
                &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;这是一封测试邮件，请勿回复本邮件~&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;plain&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;utf-8&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;))
            smt_p.sendmail(sender, email_address, msg.as_string())
            time.sleep(&lt;span class="pl-c1"&gt;10&lt;/span&gt;)
            &lt;span class="pl-c1"&gt;print&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;第&lt;span class="pl-c1"&gt;%d&lt;/span&gt;次发送给&lt;span class="pl-c1"&gt;%s&lt;/span&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt; &lt;span class="pl-k"&gt;%&lt;/span&gt; (count_num, email_address))
            count_num &lt;span class="pl-k"&gt;=&lt;/span&gt; count_num &lt;span class="pl-k"&gt;+&lt;/span&gt; &lt;span class="pl-c1"&gt;1&lt;/span&gt;
        &lt;span class="pl-k"&gt;except&lt;/span&gt; &lt;span class="pl-c1"&gt;Exception&lt;/span&gt; &lt;span class="pl-k"&gt;as&lt;/span&gt; e:
            &lt;span class="pl-c1"&gt;print&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;第&lt;span class="pl-c1"&gt;%d&lt;/span&gt;次给&lt;span class="pl-c1"&gt;%s&lt;/span&gt;发送邮件异常&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt; &lt;span class="pl-k"&gt;%&lt;/span&gt; (count_num, email_address))
            &lt;span class="pl-k"&gt;continue&lt;/span&gt;
    smt_p.quit()

sender_mail()&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;注意：
发送邮箱是qq邮箱，所以要在qq邮箱中设置开启SMTP服务，设置完成时会生成一个授权码，将这个授权码赋值给文中的&lt;code&gt;password&lt;/code&gt;变量。&lt;/p&gt;
&lt;p&gt;发送后的截图：&lt;/p&gt;
&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="./img/1578811858798.png"&gt;&lt;img src="./img/1578811858798.png" alt="1578811858798" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h4&gt;&lt;a id="user-content-4-二分搜索" class="anchor" aria-hidden="true" href="#4-二分搜索"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;4 二分搜索&lt;/h4&gt;
&lt;p&gt;二分搜索是程序员必备的算法，无论什么场合，都要非常熟练地写出来。&lt;/p&gt;
&lt;p&gt;小例子描述：
在&lt;strong&gt;有序数组&lt;/strong&gt;&lt;code&gt;arr&lt;/code&gt;中，指定区间&lt;code&gt;[left,right]&lt;/code&gt;范围内，查找元素&lt;code&gt;x&lt;/code&gt;
如果不存在，返回&lt;code&gt;-1&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;二分搜索&lt;code&gt;binarySearch&lt;/code&gt;实现的主逻辑&lt;/p&gt;
&lt;div class="highlight highlight-source-python"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;def&lt;/span&gt; &lt;span class="pl-en"&gt;binarySearch&lt;/span&gt;(&lt;span class="pl-smi"&gt;arr&lt;/span&gt;, &lt;span class="pl-smi"&gt;left&lt;/span&gt;, &lt;span class="pl-smi"&gt;right&lt;/span&gt;, &lt;span class="pl-smi"&gt;x&lt;/span&gt;):
    &lt;span class="pl-k"&gt;while&lt;/span&gt; left &lt;span class="pl-k"&gt;&amp;lt;=&lt;/span&gt; right:

        mid &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;int&lt;/span&gt;(left &lt;span class="pl-k"&gt;+&lt;/span&gt; (right &lt;span class="pl-k"&gt;-&lt;/span&gt; left) &lt;span class="pl-k"&gt;/&lt;/span&gt; &lt;span class="pl-c1"&gt;2&lt;/span&gt;); &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; 找到中间位置。求中点写成(left+right)/2更容易溢出，所以不建议这样写&lt;/span&gt;

        &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; 检查x是否出现在位置mid&lt;/span&gt;
        &lt;span class="pl-k"&gt;if&lt;/span&gt; arr[mid] &lt;span class="pl-k"&gt;==&lt;/span&gt; x:
            &lt;span class="pl-c1"&gt;print&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;found &lt;span class="pl-c1"&gt;%d&lt;/span&gt; 在索引位置&lt;span class="pl-c1"&gt;%d&lt;/span&gt; 处&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt; &lt;span class="pl-k"&gt;%&lt;/span&gt;(x,mid))
            &lt;span class="pl-k"&gt;return&lt;/span&gt; mid

            &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; 假如x更大，则不可能出现在左半部分&lt;/span&gt;
        &lt;span class="pl-k"&gt;elif&lt;/span&gt; arr[mid] &lt;span class="pl-k"&gt;&amp;lt;&lt;/span&gt; x:
            left &lt;span class="pl-k"&gt;=&lt;/span&gt; mid &lt;span class="pl-k"&gt;+&lt;/span&gt; &lt;span class="pl-c1"&gt;1&lt;/span&gt; &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt;搜索区间变为[mid+1,right]&lt;/span&gt;
            &lt;span class="pl-c1"&gt;print&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;区间缩小为[&lt;span class="pl-c1"&gt;%d&lt;/span&gt;,&lt;span class="pl-c1"&gt;%d&lt;/span&gt;]&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt; &lt;span class="pl-k"&gt;%&lt;/span&gt;(mid&lt;span class="pl-k"&gt;+&lt;/span&gt;&lt;span class="pl-c1"&gt;1&lt;/span&gt;,right))

        &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; 同理，假如x更小，则不可能出现在右半部分&lt;/span&gt;
        &lt;span class="pl-k"&gt;elif&lt;/span&gt; x&lt;span class="pl-k"&gt;&amp;lt;&lt;/span&gt;arr[mid]:
            right &lt;span class="pl-k"&gt;=&lt;/span&gt; mid &lt;span class="pl-k"&gt;-&lt;/span&gt; &lt;span class="pl-c1"&gt;1&lt;/span&gt; &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt;搜索区间变为[left,mid-1]&lt;/span&gt;
            &lt;span class="pl-c1"&gt;print&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;区间缩小为[&lt;span class="pl-c1"&gt;%d&lt;/span&gt;,&lt;span class="pl-c1"&gt;%d&lt;/span&gt;]&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt; &lt;span class="pl-k"&gt;%&lt;/span&gt;(left,mid&lt;span class="pl-k"&gt;-&lt;/span&gt;&lt;span class="pl-c1"&gt;1&lt;/span&gt;))

    &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; 假如搜索到这里，表明x未出现在[left,right]中&lt;/span&gt;
    &lt;span class="pl-k"&gt;return&lt;/span&gt; &lt;span class="pl-k"&gt;-&lt;/span&gt;&lt;span class="pl-c1"&gt;1&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;在&lt;code&gt;Ipython&lt;/code&gt;交互界面中，调用&lt;code&gt;binarySearch&lt;/code&gt;的小Demo:&lt;/p&gt;
&lt;div class="highlight highlight-source-python"&gt;&lt;pre&gt;In [&lt;span class="pl-c1"&gt;8&lt;/span&gt;]: binarySearch([&lt;span class="pl-c1"&gt;4&lt;/span&gt;,&lt;span class="pl-c1"&gt;5&lt;/span&gt;,&lt;span class="pl-c1"&gt;6&lt;/span&gt;,&lt;span class="pl-c1"&gt;7&lt;/span&gt;,&lt;span class="pl-c1"&gt;10&lt;/span&gt;,&lt;span class="pl-c1"&gt;20&lt;/span&gt;,&lt;span class="pl-c1"&gt;100&lt;/span&gt;],&lt;span class="pl-c1"&gt;0&lt;/span&gt;,&lt;span class="pl-c1"&gt;6&lt;/span&gt;,&lt;span class="pl-c1"&gt;5&lt;/span&gt;)
区间缩小为[&lt;span class="pl-c1"&gt;0&lt;/span&gt;,&lt;span class="pl-c1"&gt;2&lt;/span&gt;]
found &lt;span class="pl-c1"&gt;5&lt;/span&gt; at &lt;span class="pl-c1"&gt;1&lt;/span&gt;
Out[&lt;span class="pl-c1"&gt;8&lt;/span&gt;]: &lt;span class="pl-c1"&gt;1&lt;/span&gt;

In [&lt;span class="pl-c1"&gt;9&lt;/span&gt;]: binarySearch([&lt;span class="pl-c1"&gt;4&lt;/span&gt;,&lt;span class="pl-c1"&gt;5&lt;/span&gt;,&lt;span class="pl-c1"&gt;6&lt;/span&gt;,&lt;span class="pl-c1"&gt;7&lt;/span&gt;,&lt;span class="pl-c1"&gt;10&lt;/span&gt;,&lt;span class="pl-c1"&gt;20&lt;/span&gt;,&lt;span class="pl-c1"&gt;100&lt;/span&gt;],&lt;span class="pl-c1"&gt;0&lt;/span&gt;,&lt;span class="pl-c1"&gt;6&lt;/span&gt;,&lt;span class="pl-c1"&gt;4&lt;/span&gt;)
区间缩小为[&lt;span class="pl-c1"&gt;0&lt;/span&gt;,&lt;span class="pl-c1"&gt;2&lt;/span&gt;]
区间缩小为[&lt;span class="pl-c1"&gt;0&lt;/span&gt;,&lt;span class="pl-c1"&gt;0&lt;/span&gt;]
found &lt;span class="pl-c1"&gt;4&lt;/span&gt; at &lt;span class="pl-c1"&gt;0&lt;/span&gt;
Out[&lt;span class="pl-c1"&gt;9&lt;/span&gt;]: &lt;span class="pl-c1"&gt;0&lt;/span&gt;

In [&lt;span class="pl-c1"&gt;10&lt;/span&gt;]: binarySearch([&lt;span class="pl-c1"&gt;4&lt;/span&gt;,&lt;span class="pl-c1"&gt;5&lt;/span&gt;,&lt;span class="pl-c1"&gt;6&lt;/span&gt;,&lt;span class="pl-c1"&gt;7&lt;/span&gt;,&lt;span class="pl-c1"&gt;10&lt;/span&gt;,&lt;span class="pl-c1"&gt;20&lt;/span&gt;,&lt;span class="pl-c1"&gt;100&lt;/span&gt;],&lt;span class="pl-c1"&gt;0&lt;/span&gt;,&lt;span class="pl-c1"&gt;6&lt;/span&gt;,&lt;span class="pl-c1"&gt;20&lt;/span&gt;)
区间缩小为[&lt;span class="pl-c1"&gt;4&lt;/span&gt;,&lt;span class="pl-c1"&gt;6&lt;/span&gt;]
found &lt;span class="pl-c1"&gt;20&lt;/span&gt; at &lt;span class="pl-c1"&gt;5&lt;/span&gt;
Out[&lt;span class="pl-c1"&gt;10&lt;/span&gt;]: &lt;span class="pl-c1"&gt;5&lt;/span&gt;

In [&lt;span class="pl-c1"&gt;11&lt;/span&gt;]: binarySearch([&lt;span class="pl-c1"&gt;4&lt;/span&gt;,&lt;span class="pl-c1"&gt;5&lt;/span&gt;,&lt;span class="pl-c1"&gt;6&lt;/span&gt;,&lt;span class="pl-c1"&gt;7&lt;/span&gt;,&lt;span class="pl-c1"&gt;10&lt;/span&gt;,&lt;span class="pl-c1"&gt;20&lt;/span&gt;,&lt;span class="pl-c1"&gt;100&lt;/span&gt;],&lt;span class="pl-c1"&gt;0&lt;/span&gt;,&lt;span class="pl-c1"&gt;6&lt;/span&gt;,&lt;span class="pl-c1"&gt;100&lt;/span&gt;)
区间缩小为[&lt;span class="pl-c1"&gt;4&lt;/span&gt;,&lt;span class="pl-c1"&gt;6&lt;/span&gt;]
区间缩小为[&lt;span class="pl-c1"&gt;6&lt;/span&gt;,&lt;span class="pl-c1"&gt;6&lt;/span&gt;]
found &lt;span class="pl-c1"&gt;100&lt;/span&gt; at &lt;span class="pl-c1"&gt;6&lt;/span&gt;
Out[&lt;span class="pl-c1"&gt;11&lt;/span&gt;]: &lt;span class="pl-c1"&gt;6&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h4&gt;&lt;a id="user-content-5-爬取天气数据并解析温度值" class="anchor" aria-hidden="true" href="#5-爬取天气数据并解析温度值"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;5 爬取天气数据并解析温度值&lt;/h4&gt;
&lt;p&gt;爬取天气数据并解析温度值&lt;/p&gt;
&lt;p&gt;素材来自朋友袁绍，感谢！&lt;/p&gt;
&lt;p&gt;爬取的html 结构&lt;/p&gt;
&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="./img/1.png"&gt;&lt;img src="./img/1.png" alt="" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;div class="highlight highlight-source-python"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;import&lt;/span&gt; requests
&lt;span class="pl-k"&gt;from&lt;/span&gt; lxml &lt;span class="pl-k"&gt;import&lt;/span&gt; etree
&lt;span class="pl-k"&gt;import&lt;/span&gt; pandas &lt;span class="pl-k"&gt;as&lt;/span&gt; pd
&lt;span class="pl-k"&gt;import&lt;/span&gt; re

url &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;http://www.weather.com.cn/weather1d/101010100.shtml#input&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;
&lt;span class="pl-k"&gt;with&lt;/span&gt; requests.get(url) &lt;span class="pl-k"&gt;as&lt;/span&gt; res:
    content &lt;span class="pl-k"&gt;=&lt;/span&gt; res.content
    html &lt;span class="pl-k"&gt;=&lt;/span&gt; etree.HTML(content)&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;通过lxml模块提取值&lt;/p&gt;
&lt;p&gt;lxml比beautifulsoup解析在某些场合更高效&lt;/p&gt;
&lt;div class="highlight highlight-source-python"&gt;&lt;pre&gt;location &lt;span class="pl-k"&gt;=&lt;/span&gt; html.xpath(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;//*[@id="around"]//a[@target="_blank"]/span/text()&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;)
temperature &lt;span class="pl-k"&gt;=&lt;/span&gt; html.xpath(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;//*[@id="around"]/div/ul/li/a/i/text()&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;)&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;结果：&lt;/p&gt;
&lt;div class="highlight highlight-source-python"&gt;&lt;pre&gt;[&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;香河&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;涿州&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;唐山&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;沧州&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;天津&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;廊坊&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;太原&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;石家庄&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;涿鹿&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;张家口&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;保定&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;三河&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;北京孔庙&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;北京国子监&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;中国地质博物馆&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;月坛公&lt;span class="pl-ii"&gt;&lt;/span&gt;&lt;/span&gt;
园&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;, &lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;明城墙遗址公园&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;, &lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;北京市规划展览馆&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;, &lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;什刹海&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;, &lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;南锣鼓巷&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;, &lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;天坛公园&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;, &lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;北海公园&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;, &lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;景山公园&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;, &lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;北京海洋馆&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;]&lt;span class="pl-ii"&gt;&lt;/span&gt;&lt;/span&gt;

[&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;11/-5°C&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;14/-5°C&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;12/-6°C&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;12/-5°C&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;11/-1°C&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;11/-5°C&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;8/-7°C&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;13/-2°C&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;8/-6°C&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;5/-9°C&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;14/-6°C&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;11/-4°C&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;13/-3°C&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;
, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;13/-3°C&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;12/-3°C&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;12/-3°C&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;13/-3°C&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;12/-2°C&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;12/-3°C&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;13/-3°C&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;12/-2°C&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;12/-2°C&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;12/-2°C&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;12/-3°C&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;]&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;构造DataFrame对象&lt;/p&gt;
&lt;div class="highlight highlight-source-python"&gt;&lt;pre&gt;df &lt;span class="pl-k"&gt;=&lt;/span&gt; pd.DataFrame({&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;location&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;:location, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;temperature&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;:temperature})
&lt;span class="pl-c1"&gt;print&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;温度列&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;)
&lt;span class="pl-c1"&gt;print&lt;/span&gt;(df[&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;temperature&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;])&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;正则解析温度值&lt;/p&gt;
&lt;div class="highlight highlight-source-python"&gt;&lt;pre&gt;df[&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;high&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;] &lt;span class="pl-k"&gt;=&lt;/span&gt; df[&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;temperature&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;].apply(&lt;span class="pl-k"&gt;lambda&lt;/span&gt; &lt;span class="pl-smi"&gt;x&lt;/span&gt;: &lt;span class="pl-c1"&gt;int&lt;/span&gt;(re.match(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;(-?[0-9]*?)/-?[0-9]*?°C&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;, x).group(&lt;span class="pl-c1"&gt;1&lt;/span&gt;) ) )
df[&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;low&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;] &lt;span class="pl-k"&gt;=&lt;/span&gt; df[&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;temperature&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;].apply(&lt;span class="pl-k"&gt;lambda&lt;/span&gt; &lt;span class="pl-smi"&gt;x&lt;/span&gt;: &lt;span class="pl-c1"&gt;int&lt;/span&gt;(re.match(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;-?[0-9]*?/(-?[0-9]*?)°C&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;, x).group(&lt;span class="pl-c1"&gt;1&lt;/span&gt;) ) )
&lt;span class="pl-c1"&gt;print&lt;/span&gt;(df)&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;详细说明子字符创捕获&lt;/p&gt;
&lt;p&gt;除了简单地判断是否匹配之外，正则表达式还有提取子串的强大功能。用&lt;code&gt;()&lt;/code&gt;表示的就是要提取的分组（group）。比如：&lt;code&gt;^(\d{3})-(\d{3,8})$&lt;/code&gt;分别定义了两个组，可以直接从匹配的字符串中提取出区号和本地号码&lt;/p&gt;
&lt;div class="highlight highlight-source-python"&gt;&lt;pre&gt;m &lt;span class="pl-k"&gt;=&lt;/span&gt; re.match(&lt;span class="pl-sr"&gt;&lt;span class="pl-k"&gt;r&lt;/span&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;span class="pl-c1"&gt;^&lt;/span&gt;&lt;span class="pl-c1"&gt;(&lt;/span&gt;&lt;span class="pl-c1"&gt;\d&lt;/span&gt;&lt;span class="pl-k"&gt;{3}&lt;/span&gt;&lt;span class="pl-c1"&gt;)&lt;/span&gt;-&lt;span class="pl-c1"&gt;(&lt;/span&gt;&lt;span class="pl-c1"&gt;\d&lt;/span&gt;&lt;span class="pl-k"&gt;{3,8}&lt;/span&gt;&lt;span class="pl-c1"&gt;)&lt;/span&gt;&lt;span class="pl-c1"&gt;$&lt;/span&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;010-12345&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;)
&lt;span class="pl-c1"&gt;print&lt;/span&gt;(m.group(&lt;span class="pl-c1"&gt;0&lt;/span&gt;))
&lt;span class="pl-c1"&gt;print&lt;/span&gt;(m.group(&lt;span class="pl-c1"&gt;1&lt;/span&gt;))
&lt;span class="pl-c1"&gt;print&lt;/span&gt;(m.group(&lt;span class="pl-c1"&gt;2&lt;/span&gt;))

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; 010-12345&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; 010&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; 12345&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;如果正则表达式中定义了组，就可以在&lt;code&gt;Match&lt;/code&gt;对象上用&lt;code&gt;group()&lt;/code&gt;方法提取出子串来。&lt;/p&gt;
&lt;p&gt;注意到&lt;code&gt;group(0)&lt;/code&gt;永远是原始字符串，&lt;code&gt;group(1)&lt;/code&gt;、&lt;code&gt;group(2)&lt;/code&gt;……表示第1、2、……个子串。&lt;/p&gt;
&lt;p&gt;最终结果&lt;/p&gt;
&lt;div class="highlight highlight-source-python"&gt;&lt;pre&gt;Name: temperature, dtype: &lt;span class="pl-c1"&gt;object&lt;/span&gt;
    location temperature  high  low
&lt;span class="pl-c1"&gt;0&lt;/span&gt;         香河     &lt;span class="pl-c1"&gt;11&lt;/span&gt;&lt;span class="pl-k"&gt;/-&lt;/span&gt;&lt;span class="pl-c1"&gt;5&lt;/span&gt;°C    &lt;span class="pl-c1"&gt;11&lt;/span&gt;   &lt;span class="pl-k"&gt;-&lt;/span&gt;&lt;span class="pl-c1"&gt;5&lt;/span&gt;
&lt;span class="pl-c1"&gt;1&lt;/span&gt;         涿州     &lt;span class="pl-c1"&gt;14&lt;/span&gt;&lt;span class="pl-k"&gt;/-&lt;/span&gt;&lt;span class="pl-c1"&gt;5&lt;/span&gt;°C    &lt;span class="pl-c1"&gt;14&lt;/span&gt;   &lt;span class="pl-k"&gt;-&lt;/span&gt;&lt;span class="pl-c1"&gt;5&lt;/span&gt;
&lt;span class="pl-c1"&gt;2&lt;/span&gt;         唐山     &lt;span class="pl-c1"&gt;12&lt;/span&gt;&lt;span class="pl-k"&gt;/-&lt;/span&gt;&lt;span class="pl-c1"&gt;6&lt;/span&gt;°C    &lt;span class="pl-c1"&gt;12&lt;/span&gt;   &lt;span class="pl-k"&gt;-&lt;/span&gt;&lt;span class="pl-c1"&gt;6&lt;/span&gt;
&lt;span class="pl-c1"&gt;3&lt;/span&gt;         沧州     &lt;span class="pl-c1"&gt;12&lt;/span&gt;&lt;span class="pl-k"&gt;/-&lt;/span&gt;&lt;span class="pl-c1"&gt;5&lt;/span&gt;°C    &lt;span class="pl-c1"&gt;12&lt;/span&gt;   &lt;span class="pl-k"&gt;-&lt;/span&gt;&lt;span class="pl-c1"&gt;5&lt;/span&gt;
&lt;span class="pl-c1"&gt;4&lt;/span&gt;         天津     &lt;span class="pl-c1"&gt;11&lt;/span&gt;&lt;span class="pl-k"&gt;/-&lt;/span&gt;&lt;span class="pl-c1"&gt;1&lt;/span&gt;°C    &lt;span class="pl-c1"&gt;11&lt;/span&gt;   &lt;span class="pl-k"&gt;-&lt;/span&gt;&lt;span class="pl-c1"&gt;1&lt;/span&gt;
&lt;span class="pl-c1"&gt;5&lt;/span&gt;         廊坊     &lt;span class="pl-c1"&gt;11&lt;/span&gt;&lt;span class="pl-k"&gt;/-&lt;/span&gt;&lt;span class="pl-c1"&gt;5&lt;/span&gt;°C    &lt;span class="pl-c1"&gt;11&lt;/span&gt;   &lt;span class="pl-k"&gt;-&lt;/span&gt;&lt;span class="pl-c1"&gt;5&lt;/span&gt;
&lt;span class="pl-c1"&gt;6&lt;/span&gt;         太原      &lt;span class="pl-c1"&gt;8&lt;/span&gt;&lt;span class="pl-k"&gt;/-&lt;/span&gt;&lt;span class="pl-c1"&gt;7&lt;/span&gt;°C     &lt;span class="pl-c1"&gt;8&lt;/span&gt;   &lt;span class="pl-k"&gt;-&lt;/span&gt;&lt;span class="pl-c1"&gt;7&lt;/span&gt;
&lt;span class="pl-c1"&gt;7&lt;/span&gt;        石家庄     &lt;span class="pl-c1"&gt;13&lt;/span&gt;&lt;span class="pl-k"&gt;/-&lt;/span&gt;&lt;span class="pl-c1"&gt;2&lt;/span&gt;°C    &lt;span class="pl-c1"&gt;13&lt;/span&gt;   &lt;span class="pl-k"&gt;-&lt;/span&gt;&lt;span class="pl-c1"&gt;2&lt;/span&gt;
&lt;span class="pl-c1"&gt;8&lt;/span&gt;         涿鹿      &lt;span class="pl-c1"&gt;8&lt;/span&gt;&lt;span class="pl-k"&gt;/-&lt;/span&gt;&lt;span class="pl-c1"&gt;6&lt;/span&gt;°C     &lt;span class="pl-c1"&gt;8&lt;/span&gt;   &lt;span class="pl-k"&gt;-&lt;/span&gt;&lt;span class="pl-c1"&gt;6&lt;/span&gt;
&lt;span class="pl-c1"&gt;9&lt;/span&gt;        张家口      &lt;span class="pl-c1"&gt;5&lt;/span&gt;&lt;span class="pl-k"&gt;/-&lt;/span&gt;&lt;span class="pl-c1"&gt;9&lt;/span&gt;°C     &lt;span class="pl-c1"&gt;5&lt;/span&gt;   &lt;span class="pl-k"&gt;-&lt;/span&gt;&lt;span class="pl-c1"&gt;9&lt;/span&gt;
&lt;span class="pl-c1"&gt;10&lt;/span&gt;        保定     &lt;span class="pl-c1"&gt;14&lt;/span&gt;&lt;span class="pl-k"&gt;/-&lt;/span&gt;&lt;span class="pl-c1"&gt;6&lt;/span&gt;°C    &lt;span class="pl-c1"&gt;14&lt;/span&gt;   &lt;span class="pl-k"&gt;-&lt;/span&gt;&lt;span class="pl-c1"&gt;6&lt;/span&gt;
&lt;span class="pl-c1"&gt;11&lt;/span&gt;        三河     &lt;span class="pl-c1"&gt;11&lt;/span&gt;&lt;span class="pl-k"&gt;/-&lt;/span&gt;&lt;span class="pl-c1"&gt;4&lt;/span&gt;°C    &lt;span class="pl-c1"&gt;11&lt;/span&gt;   &lt;span class="pl-k"&gt;-&lt;/span&gt;&lt;span class="pl-c1"&gt;4&lt;/span&gt;
&lt;span class="pl-c1"&gt;12&lt;/span&gt;      北京孔庙     &lt;span class="pl-c1"&gt;13&lt;/span&gt;&lt;span class="pl-k"&gt;/-&lt;/span&gt;&lt;span class="pl-c1"&gt;3&lt;/span&gt;°C    &lt;span class="pl-c1"&gt;13&lt;/span&gt;   &lt;span class="pl-k"&gt;-&lt;/span&gt;&lt;span class="pl-c1"&gt;3&lt;/span&gt;
&lt;span class="pl-c1"&gt;13&lt;/span&gt;     北京国子监     &lt;span class="pl-c1"&gt;13&lt;/span&gt;&lt;span class="pl-k"&gt;/-&lt;/span&gt;&lt;span class="pl-c1"&gt;3&lt;/span&gt;°C    &lt;span class="pl-c1"&gt;13&lt;/span&gt;   &lt;span class="pl-k"&gt;-&lt;/span&gt;&lt;span class="pl-c1"&gt;3&lt;/span&gt;
&lt;span class="pl-c1"&gt;14&lt;/span&gt;   中国地质博物馆     &lt;span class="pl-c1"&gt;12&lt;/span&gt;&lt;span class="pl-k"&gt;/-&lt;/span&gt;&lt;span class="pl-c1"&gt;3&lt;/span&gt;°C    &lt;span class="pl-c1"&gt;12&lt;/span&gt;   &lt;span class="pl-k"&gt;-&lt;/span&gt;&lt;span class="pl-c1"&gt;3&lt;/span&gt;
&lt;span class="pl-c1"&gt;15&lt;/span&gt;      月坛公园     &lt;span class="pl-c1"&gt;12&lt;/span&gt;&lt;span class="pl-k"&gt;/-&lt;/span&gt;&lt;span class="pl-c1"&gt;3&lt;/span&gt;°C    &lt;span class="pl-c1"&gt;12&lt;/span&gt;   &lt;span class="pl-k"&gt;-&lt;/span&gt;&lt;span class="pl-c1"&gt;3&lt;/span&gt;
&lt;span class="pl-c1"&gt;16&lt;/span&gt;   明城墙遗址公园     &lt;span class="pl-c1"&gt;13&lt;/span&gt;&lt;span class="pl-k"&gt;/-&lt;/span&gt;&lt;span class="pl-c1"&gt;3&lt;/span&gt;°C    &lt;span class="pl-c1"&gt;13&lt;/span&gt;   &lt;span class="pl-k"&gt;-&lt;/span&gt;&lt;span class="pl-c1"&gt;3&lt;/span&gt;
&lt;span class="pl-c1"&gt;17&lt;/span&gt;  北京市规划展览馆     &lt;span class="pl-c1"&gt;12&lt;/span&gt;&lt;span class="pl-k"&gt;/-&lt;/span&gt;&lt;span class="pl-c1"&gt;2&lt;/span&gt;°C    &lt;span class="pl-c1"&gt;12&lt;/span&gt;   &lt;span class="pl-k"&gt;-&lt;/span&gt;&lt;span class="pl-c1"&gt;2&lt;/span&gt;
&lt;span class="pl-c1"&gt;18&lt;/span&gt;       什刹海     &lt;span class="pl-c1"&gt;12&lt;/span&gt;&lt;span class="pl-k"&gt;/-&lt;/span&gt;&lt;span class="pl-c1"&gt;3&lt;/span&gt;°C    &lt;span class="pl-c1"&gt;12&lt;/span&gt;   &lt;span class="pl-k"&gt;-&lt;/span&gt;&lt;span class="pl-c1"&gt;3&lt;/span&gt;
&lt;span class="pl-c1"&gt;19&lt;/span&gt;      南锣鼓巷     &lt;span class="pl-c1"&gt;13&lt;/span&gt;&lt;span class="pl-k"&gt;/-&lt;/span&gt;&lt;span class="pl-c1"&gt;3&lt;/span&gt;°C    &lt;span class="pl-c1"&gt;13&lt;/span&gt;   &lt;span class="pl-k"&gt;-&lt;/span&gt;&lt;span class="pl-c1"&gt;3&lt;/span&gt;
&lt;span class="pl-c1"&gt;20&lt;/span&gt;      天坛公园     &lt;span class="pl-c1"&gt;12&lt;/span&gt;&lt;span class="pl-k"&gt;/-&lt;/span&gt;&lt;span class="pl-c1"&gt;2&lt;/span&gt;°C    &lt;span class="pl-c1"&gt;12&lt;/span&gt;   &lt;span class="pl-k"&gt;-&lt;/span&gt;&lt;span class="pl-c1"&gt;2&lt;/span&gt;
&lt;span class="pl-c1"&gt;21&lt;/span&gt;      北海公园     &lt;span class="pl-c1"&gt;12&lt;/span&gt;&lt;span class="pl-k"&gt;/-&lt;/span&gt;&lt;span class="pl-c1"&gt;2&lt;/span&gt;°C    &lt;span class="pl-c1"&gt;12&lt;/span&gt;   &lt;span class="pl-k"&gt;-&lt;/span&gt;&lt;span class="pl-c1"&gt;2&lt;/span&gt;
&lt;span class="pl-c1"&gt;22&lt;/span&gt;      景山公园     &lt;span class="pl-c1"&gt;12&lt;/span&gt;&lt;span class="pl-k"&gt;/-&lt;/span&gt;&lt;span class="pl-c1"&gt;2&lt;/span&gt;°C    &lt;span class="pl-c1"&gt;12&lt;/span&gt;   &lt;span class="pl-k"&gt;-&lt;/span&gt;&lt;span class="pl-c1"&gt;2&lt;/span&gt;
&lt;span class="pl-c1"&gt;23&lt;/span&gt;     北京海洋馆     &lt;span class="pl-c1"&gt;12&lt;/span&gt;&lt;span class="pl-k"&gt;/-&lt;/span&gt;&lt;span class="pl-c1"&gt;3&lt;/span&gt;°C    &lt;span class="pl-c1"&gt;12&lt;/span&gt;   &lt;span class="pl-k"&gt;-&lt;/span&gt;&lt;span class="pl-c1"&gt;3&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h4&gt;&lt;a id="user-content-6-制作小而美的计算器" class="anchor" aria-hidden="true" href="#6-制作小而美的计算器"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;6 制作小而美的计算器&lt;/h4&gt;
&lt;ol&gt;
&lt;li&gt;ui设计&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;使用&lt;code&gt;qt designer&lt;/code&gt; ，按装anaconda后，在如下路径找到：&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;conda3.05\Library\bin&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;code&gt;designer.exe&lt;/code&gt;文件，双击启动：&lt;/p&gt;
&lt;p&gt;![1578811899182]./img/1578811899182.png)&lt;/p&gt;
&lt;p&gt;创建窗体，命名为&lt;code&gt;XiaoDing&lt;/code&gt;，整个的界面如下所示：&lt;/p&gt;
&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="./img/1578811933606.png"&gt;&lt;img src="./img/1578811933606.png" alt="1578811933606" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;code&gt;qt 设计器&lt;/code&gt;提供的常用控件基本都能满足开发需求，通过拖动左侧的控件，很便捷的就能搭建出如下的UI界面，比传统的手写控件代码要方便很多。&lt;/p&gt;
&lt;p&gt;最终设计的计算器&lt;code&gt;XiaoDing&lt;/code&gt;界面如下，&lt;/p&gt;
&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="./img/1578811959147.png"&gt;&lt;img src="./img/1578811959147.png" alt="1578811959147" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;比如，其中一个用于计算器显示的对象：&lt;code&gt;lcdNumber&lt;/code&gt;，对象的类型为：&lt;code&gt;LCD Number&lt;/code&gt;。右侧为计算器中用到的所有对象。&lt;/p&gt;
&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="./img/1578811991539.png"&gt;&lt;img src="./img/1578811991539.png" alt="1578811991539" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="./img/1578812033865.png"&gt;&lt;img src="./img/1578812033865.png" alt="1578812033865" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;ol start="2"&gt;
&lt;li&gt;转py文件&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;使用如下命令，将设计好的&lt;code&gt;ui&lt;/code&gt;文件转为&lt;code&gt;py&lt;/code&gt;文件：&lt;/p&gt;
&lt;div class="highlight highlight-source-python"&gt;&lt;pre&gt;pyuic5 &lt;span class="pl-k"&gt;-&lt;/span&gt;o .&lt;span class="pl-k"&gt;/&lt;/span&gt;calculator&lt;span class="pl-k"&gt;/&lt;/span&gt;MainWindow.py .&lt;span class="pl-k"&gt;/&lt;/span&gt;calculator&lt;span class="pl-k"&gt;/&lt;/span&gt;mainwindow.ui&lt;/pre&gt;&lt;/div&gt;
&lt;ol start="3"&gt;
&lt;li&gt;计算器实现逻辑&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;导入库：&lt;/p&gt;
&lt;div class="highlight highlight-source-python"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;from&lt;/span&gt; PyQt5.QtGui &lt;span class="pl-k"&gt;import&lt;/span&gt; &lt;span class="pl-k"&gt;*&lt;/span&gt;
&lt;span class="pl-k"&gt;from&lt;/span&gt; PyQt5.QtWidgets &lt;span class="pl-k"&gt;import&lt;/span&gt; &lt;span class="pl-k"&gt;*&lt;/span&gt;
&lt;span class="pl-k"&gt;from&lt;/span&gt; PyQt5.QtCore &lt;span class="pl-k"&gt;import&lt;/span&gt; &lt;span class="pl-k"&gt;*&lt;/span&gt;

&lt;span class="pl-k"&gt;import&lt;/span&gt; operator

&lt;span class="pl-k"&gt;from&lt;/span&gt; MainWindow &lt;span class="pl-k"&gt;import&lt;/span&gt; Ui_MainWindow&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;主题代码逻辑很精简：&lt;/p&gt;
&lt;div class="highlight highlight-source-python"&gt;&lt;pre&gt;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; Calculator state.&lt;/span&gt;
&lt;span class="pl-c1"&gt;READY&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;0&lt;/span&gt;
&lt;span class="pl-c1"&gt;INPUT&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;1&lt;/span&gt;


&lt;span class="pl-k"&gt;class&lt;/span&gt; &lt;span class="pl-en"&gt;MainWindow&lt;/span&gt;(&lt;span class="pl-e"&gt;QMainWindow&lt;/span&gt;, &lt;span class="pl-e"&gt;Ui_MainWindow&lt;/span&gt;):
    &lt;span class="pl-k"&gt;def&lt;/span&gt; &lt;span class="pl-c1"&gt;__init__&lt;/span&gt;(&lt;span class="pl-smi"&gt;&lt;span class="pl-smi"&gt;self&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-k"&gt;*&lt;/span&gt;&lt;span class="pl-smi"&gt;args&lt;/span&gt;, &lt;span class="pl-k"&gt;**&lt;/span&gt;&lt;span class="pl-smi"&gt;kwargs&lt;/span&gt;):
        &lt;span class="pl-c1"&gt;super&lt;/span&gt;(MainWindow, &lt;span class="pl-c1"&gt;self&lt;/span&gt;).&lt;span class="pl-c1"&gt;__init__&lt;/span&gt;(&lt;span class="pl-k"&gt;*&lt;/span&gt;args, &lt;span class="pl-k"&gt;**&lt;/span&gt;kwargs)
        &lt;span class="pl-c1"&gt;self&lt;/span&gt;.setupUi(&lt;span class="pl-c1"&gt;self&lt;/span&gt;)

        &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; Setup numbers.&lt;/span&gt;
        &lt;span class="pl-k"&gt;for&lt;/span&gt; n &lt;span class="pl-k"&gt;in&lt;/span&gt; &lt;span class="pl-c1"&gt;range&lt;/span&gt;(&lt;span class="pl-c1"&gt;0&lt;/span&gt;, &lt;span class="pl-c1"&gt;10&lt;/span&gt;):
            &lt;span class="pl-c1"&gt;getattr&lt;/span&gt;(&lt;span class="pl-c1"&gt;self&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;pushButton_n&lt;span class="pl-c1"&gt;%s&lt;/span&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt; &lt;span class="pl-k"&gt;%&lt;/span&gt; n).pressed.connect(&lt;span class="pl-k"&gt;lambda&lt;/span&gt; &lt;span class="pl-smi"&gt;v&lt;/span&gt;&lt;span class="pl-k"&gt;=&lt;/span&gt;n: &lt;span class="pl-c1"&gt;self&lt;/span&gt;.input_number(v))

        &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; Setup operations.&lt;/span&gt;
        &lt;span class="pl-c1"&gt;self&lt;/span&gt;.pushButton_add.pressed.connect(&lt;span class="pl-k"&gt;lambda&lt;/span&gt;: &lt;span class="pl-c1"&gt;self&lt;/span&gt;.operation(operator.add))
        &lt;span class="pl-c1"&gt;self&lt;/span&gt;.pushButton_sub.pressed.connect(&lt;span class="pl-k"&gt;lambda&lt;/span&gt;: &lt;span class="pl-c1"&gt;self&lt;/span&gt;.operation(operator.sub))
        &lt;span class="pl-c1"&gt;self&lt;/span&gt;.pushButton_mul.pressed.connect(&lt;span class="pl-k"&gt;lambda&lt;/span&gt;: &lt;span class="pl-c1"&gt;self&lt;/span&gt;.operation(operator.mul))
        &lt;span class="pl-c1"&gt;self&lt;/span&gt;.pushButton_div.pressed.connect(&lt;span class="pl-k"&gt;lambda&lt;/span&gt;: &lt;span class="pl-c1"&gt;self&lt;/span&gt;.operation(operator.truediv))  &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; operator.div for Python2.7&lt;/span&gt;

        &lt;span class="pl-c1"&gt;self&lt;/span&gt;.pushButton_pc.pressed.connect(&lt;span class="pl-c1"&gt;self&lt;/span&gt;.operation_pc)
        &lt;span class="pl-c1"&gt;self&lt;/span&gt;.pushButton_eq.pressed.connect(&lt;span class="pl-c1"&gt;self&lt;/span&gt;.equals)

        &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; Setup actions&lt;/span&gt;
        &lt;span class="pl-c1"&gt;self&lt;/span&gt;.actionReset.triggered.connect(&lt;span class="pl-c1"&gt;self&lt;/span&gt;.reset)
        &lt;span class="pl-c1"&gt;self&lt;/span&gt;.pushButton_ac.pressed.connect(&lt;span class="pl-c1"&gt;self&lt;/span&gt;.reset)

        &lt;span class="pl-c1"&gt;self&lt;/span&gt;.actionExit.triggered.connect(&lt;span class="pl-c1"&gt;self&lt;/span&gt;.close)

        &lt;span class="pl-c1"&gt;self&lt;/span&gt;.pushButton_m.pressed.connect(&lt;span class="pl-c1"&gt;self&lt;/span&gt;.memory_store)
        &lt;span class="pl-c1"&gt;self&lt;/span&gt;.pushButton_mr.pressed.connect(&lt;span class="pl-c1"&gt;self&lt;/span&gt;.memory_recall)

        &lt;span class="pl-c1"&gt;self&lt;/span&gt;.memory &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;0&lt;/span&gt;
        &lt;span class="pl-c1"&gt;self&lt;/span&gt;.reset()

        &lt;span class="pl-c1"&gt;self&lt;/span&gt;.show()&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;基础方法：&lt;/p&gt;
&lt;div class="highlight highlight-source-python"&gt;&lt;pre&gt;    &lt;span class="pl-k"&gt;def&lt;/span&gt; &lt;span class="pl-en"&gt;input_number&lt;/span&gt;(&lt;span class="pl-smi"&gt;&lt;span class="pl-smi"&gt;self&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-smi"&gt;v&lt;/span&gt;):
        &lt;span class="pl-k"&gt;if&lt;/span&gt; &lt;span class="pl-c1"&gt;self&lt;/span&gt;.state &lt;span class="pl-k"&gt;==&lt;/span&gt; &lt;span class="pl-c1"&gt;READY&lt;/span&gt;:
            &lt;span class="pl-c1"&gt;self&lt;/span&gt;.state &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;INPUT&lt;/span&gt;
            &lt;span class="pl-c1"&gt;self&lt;/span&gt;.stack[&lt;span class="pl-k"&gt;-&lt;/span&gt;&lt;span class="pl-c1"&gt;1&lt;/span&gt;] &lt;span class="pl-k"&gt;=&lt;/span&gt; v
        &lt;span class="pl-k"&gt;else&lt;/span&gt;:
            &lt;span class="pl-c1"&gt;self&lt;/span&gt;.stack[&lt;span class="pl-k"&gt;-&lt;/span&gt;&lt;span class="pl-c1"&gt;1&lt;/span&gt;] &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;self&lt;/span&gt;.stack[&lt;span class="pl-k"&gt;-&lt;/span&gt;&lt;span class="pl-c1"&gt;1&lt;/span&gt;] &lt;span class="pl-k"&gt;*&lt;/span&gt; &lt;span class="pl-c1"&gt;10&lt;/span&gt; &lt;span class="pl-k"&gt;+&lt;/span&gt; v

        &lt;span class="pl-c1"&gt;self&lt;/span&gt;.display()

    &lt;span class="pl-k"&gt;def&lt;/span&gt; &lt;span class="pl-en"&gt;display&lt;/span&gt;(&lt;span class="pl-smi"&gt;&lt;span class="pl-smi"&gt;self&lt;/span&gt;&lt;/span&gt;):
        &lt;span class="pl-c1"&gt;self&lt;/span&gt;.lcdNumber.display(&lt;span class="pl-c1"&gt;self&lt;/span&gt;.stack[&lt;span class="pl-k"&gt;-&lt;/span&gt;&lt;span class="pl-c1"&gt;1&lt;/span&gt;])&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;按钮&lt;code&gt;RE&lt;/code&gt;,&lt;code&gt;M&lt;/code&gt;, &lt;code&gt;RE&lt;/code&gt;对应的实现逻辑：&lt;/p&gt;
&lt;div class="highlight highlight-source-python"&gt;&lt;pre&gt;    &lt;span class="pl-k"&gt;def&lt;/span&gt; &lt;span class="pl-en"&gt;reset&lt;/span&gt;(&lt;span class="pl-smi"&gt;&lt;span class="pl-smi"&gt;self&lt;/span&gt;&lt;/span&gt;):
        &lt;span class="pl-c1"&gt;self&lt;/span&gt;.state &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;READY&lt;/span&gt;
        &lt;span class="pl-c1"&gt;self&lt;/span&gt;.stack &lt;span class="pl-k"&gt;=&lt;/span&gt; [&lt;span class="pl-c1"&gt;0&lt;/span&gt;]
        &lt;span class="pl-c1"&gt;self&lt;/span&gt;.last_operation &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;None&lt;/span&gt;
        &lt;span class="pl-c1"&gt;self&lt;/span&gt;.current_op &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;None&lt;/span&gt;
        &lt;span class="pl-c1"&gt;self&lt;/span&gt;.display()

    &lt;span class="pl-k"&gt;def&lt;/span&gt; &lt;span class="pl-en"&gt;memory_store&lt;/span&gt;(&lt;span class="pl-smi"&gt;&lt;span class="pl-smi"&gt;self&lt;/span&gt;&lt;/span&gt;):
        &lt;span class="pl-c1"&gt;self&lt;/span&gt;.memory &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;self&lt;/span&gt;.lcdNumber.value()

    &lt;span class="pl-k"&gt;def&lt;/span&gt; &lt;span class="pl-en"&gt;memory_recall&lt;/span&gt;(&lt;span class="pl-smi"&gt;&lt;span class="pl-smi"&gt;self&lt;/span&gt;&lt;/span&gt;):
        &lt;span class="pl-c1"&gt;self&lt;/span&gt;.state &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;INPUT&lt;/span&gt;
        &lt;span class="pl-c1"&gt;self&lt;/span&gt;.stack[&lt;span class="pl-k"&gt;-&lt;/span&gt;&lt;span class="pl-c1"&gt;1&lt;/span&gt;] &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;self&lt;/span&gt;.memory
        &lt;span class="pl-c1"&gt;self&lt;/span&gt;.display()&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;code&gt;+&lt;/code&gt;,&lt;code&gt;-&lt;/code&gt;,&lt;code&gt;x&lt;/code&gt;,&lt;code&gt;/&lt;/code&gt;,&lt;code&gt;/100&lt;/code&gt;对应实现方法：&lt;/p&gt;
&lt;div class="highlight highlight-source-python"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;def&lt;/span&gt; &lt;span class="pl-en"&gt;operation&lt;/span&gt;(&lt;span class="pl-smi"&gt;&lt;span class="pl-smi"&gt;self&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-smi"&gt;op&lt;/span&gt;):
        &lt;span class="pl-k"&gt;if&lt;/span&gt; &lt;span class="pl-c1"&gt;self&lt;/span&gt;.current_op:  &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; Complete the current operation&lt;/span&gt;
            &lt;span class="pl-c1"&gt;self&lt;/span&gt;.equals()

        &lt;span class="pl-c1"&gt;self&lt;/span&gt;.stack.append(&lt;span class="pl-c1"&gt;0&lt;/span&gt;)
        &lt;span class="pl-c1"&gt;self&lt;/span&gt;.state &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;INPUT&lt;/span&gt;
        &lt;span class="pl-c1"&gt;self&lt;/span&gt;.current_op &lt;span class="pl-k"&gt;=&lt;/span&gt; op

    &lt;span class="pl-k"&gt;def&lt;/span&gt; &lt;span class="pl-en"&gt;operation_pc&lt;/span&gt;(&lt;span class="pl-smi"&gt;&lt;span class="pl-smi"&gt;self&lt;/span&gt;&lt;/span&gt;):
        &lt;span class="pl-c1"&gt;self&lt;/span&gt;.state &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;INPUT&lt;/span&gt;
        &lt;span class="pl-c1"&gt;self&lt;/span&gt;.stack[&lt;span class="pl-k"&gt;-&lt;/span&gt;&lt;span class="pl-c1"&gt;1&lt;/span&gt;] &lt;span class="pl-k"&gt;*=&lt;/span&gt; &lt;span class="pl-c1"&gt;0.01&lt;/span&gt;
        &lt;span class="pl-c1"&gt;self&lt;/span&gt;.display()&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;code&gt;=&lt;/code&gt;号对应的方法实现：&lt;/p&gt;
&lt;div class="highlight highlight-source-python"&gt;&lt;pre&gt; &lt;span class="pl-k"&gt;def&lt;/span&gt; &lt;span class="pl-en"&gt;equals&lt;/span&gt;(&lt;span class="pl-smi"&gt;&lt;span class="pl-smi"&gt;self&lt;/span&gt;&lt;/span&gt;):
        &lt;span class="pl-k"&gt;if&lt;/span&gt; &lt;span class="pl-c1"&gt;self&lt;/span&gt;.state &lt;span class="pl-k"&gt;==&lt;/span&gt; &lt;span class="pl-c1"&gt;READY&lt;/span&gt; &lt;span class="pl-k"&gt;and&lt;/span&gt; &lt;span class="pl-c1"&gt;self&lt;/span&gt;.last_operation:
            s, &lt;span class="pl-c1"&gt;self&lt;/span&gt;.current_op &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;self&lt;/span&gt;.last_operation
            &lt;span class="pl-c1"&gt;self&lt;/span&gt;.stack.append(s)

        &lt;span class="pl-k"&gt;if&lt;/span&gt; &lt;span class="pl-c1"&gt;self&lt;/span&gt;.current_op:
            &lt;span class="pl-c1"&gt;self&lt;/span&gt;.last_operation &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;self&lt;/span&gt;.stack[&lt;span class="pl-k"&gt;-&lt;/span&gt;&lt;span class="pl-c1"&gt;1&lt;/span&gt;], &lt;span class="pl-c1"&gt;self&lt;/span&gt;.current_op

            &lt;span class="pl-k"&gt;try&lt;/span&gt;:
                &lt;span class="pl-c1"&gt;self&lt;/span&gt;.stack &lt;span class="pl-k"&gt;=&lt;/span&gt; [&lt;span class="pl-c1"&gt;self&lt;/span&gt;.current_op(&lt;span class="pl-k"&gt;*&lt;/span&gt;&lt;span class="pl-c1"&gt;self&lt;/span&gt;.stack)]
            &lt;span class="pl-k"&gt;except&lt;/span&gt; &lt;span class="pl-c1"&gt;Exception&lt;/span&gt;:
                &lt;span class="pl-c1"&gt;self&lt;/span&gt;.lcdNumber.display(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;Err&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;)
                &lt;span class="pl-c1"&gt;self&lt;/span&gt;.stack &lt;span class="pl-k"&gt;=&lt;/span&gt; [&lt;span class="pl-c1"&gt;0&lt;/span&gt;]
            &lt;span class="pl-k"&gt;else&lt;/span&gt;:
                &lt;span class="pl-c1"&gt;self&lt;/span&gt;.current_op &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;None&lt;/span&gt;
                &lt;span class="pl-c1"&gt;self&lt;/span&gt;.state &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;READY&lt;/span&gt;
                &lt;span class="pl-c1"&gt;self&lt;/span&gt;.display()&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;main函数：&lt;/p&gt;
&lt;div class="highlight highlight-source-python"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;if&lt;/span&gt; &lt;span class="pl-c1"&gt;__name__&lt;/span&gt; &lt;span class="pl-k"&gt;==&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;__main__&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;:
    app &lt;span class="pl-k"&gt;=&lt;/span&gt; QApplication([])
    app.setApplicationName(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;XiaoDing&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)

    window &lt;span class="pl-k"&gt;=&lt;/span&gt; MainWindow()
    app.exec_()&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="./img/1578812059285.png"&gt;&lt;img src="./img/1578812059285.png" alt="1578812059285" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-十数据分析" class="anchor" aria-hidden="true" href="#十数据分析"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;十、数据分析&lt;/h3&gt;
&lt;p&gt;本项目基于Kaggle电影影评数据集，通过这个系列，你将学到如何进行数据探索性分析(EDA)，学会使用数据分析利器&lt;code&gt;pandas&lt;/code&gt;，会用绘图包&lt;code&gt;pyecharts&lt;/code&gt;，以及EDA时可能遇到的各种实际问题及一些处理技巧。&lt;/p&gt;
&lt;p&gt;本项目需要导入的包：&lt;/p&gt;
&lt;div class="highlight highlight-source-python"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;import&lt;/span&gt; pandas &lt;span class="pl-k"&gt;as&lt;/span&gt; pd
&lt;span class="pl-k"&gt;import&lt;/span&gt; numpy &lt;span class="pl-k"&gt;as&lt;/span&gt; np
&lt;span class="pl-k"&gt;import&lt;/span&gt; matplotlib.pyplot &lt;span class="pl-k"&gt;as&lt;/span&gt; plt
&lt;span class="pl-k"&gt;from&lt;/span&gt; pyecharts.charts &lt;span class="pl-k"&gt;import&lt;/span&gt; Bar,Grid,Line
&lt;span class="pl-k"&gt;import&lt;/span&gt; pyecharts.options &lt;span class="pl-k"&gt;as&lt;/span&gt; opts
&lt;span class="pl-k"&gt;from&lt;/span&gt; pyecharts.globals &lt;span class="pl-k"&gt;import&lt;/span&gt; ThemeType&lt;/pre&gt;&lt;/div&gt;
&lt;h4&gt;&lt;a id="user-content-1-创建dataframe" class="anchor" aria-hidden="true" href="#1-创建dataframe"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;1 创建DataFrame&lt;/h4&gt;
&lt;p&gt;pandas中一个dataFrame实例：&lt;/p&gt;
&lt;div class="highlight highlight-source-python"&gt;&lt;pre&gt;Out[&lt;span class="pl-c1"&gt;89&lt;/span&gt;]:
        a  val
&lt;span class="pl-c1"&gt;0&lt;/span&gt;  apple1  &lt;span class="pl-c1"&gt;1.0&lt;/span&gt;
&lt;span class="pl-c1"&gt;1&lt;/span&gt;  apple2  &lt;span class="pl-c1"&gt;2.0&lt;/span&gt;
&lt;span class="pl-c1"&gt;2&lt;/span&gt;  apple3  &lt;span class="pl-c1"&gt;3.0&lt;/span&gt;
&lt;span class="pl-c1"&gt;3&lt;/span&gt;  apple4  &lt;span class="pl-c1"&gt;4.0&lt;/span&gt;
&lt;span class="pl-c1"&gt;4&lt;/span&gt;  apple5  &lt;span class="pl-c1"&gt;5.0&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;我们的&lt;strong&gt;目标&lt;/strong&gt;是变为如下结构：&lt;/p&gt;
&lt;div class="highlight highlight-source-python"&gt;&lt;pre&gt;a  apple1  apple2  apple3  apple4  apple5
&lt;span class="pl-c1"&gt;0&lt;/span&gt;     &lt;span class="pl-c1"&gt;1.0&lt;/span&gt;     &lt;span class="pl-c1"&gt;2.0&lt;/span&gt;     &lt;span class="pl-c1"&gt;3.0&lt;/span&gt;     &lt;span class="pl-c1"&gt;4.0&lt;/span&gt;     &lt;span class="pl-c1"&gt;5.0&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;乍看可使用&lt;code&gt;pivot&lt;/code&gt;，但很难一步到位。&lt;/p&gt;
&lt;p&gt;所以另辟蹊径，提供一种简单且好理解的方法：&lt;/p&gt;
&lt;div class="highlight highlight-source-python"&gt;&lt;pre&gt;In [&lt;span class="pl-c1"&gt;113&lt;/span&gt;]: pd.DataFrame(&lt;span class="pl-v"&gt;index&lt;/span&gt;&lt;span class="pl-k"&gt;=&lt;/span&gt;[&lt;span class="pl-c1"&gt;0&lt;/span&gt;],&lt;span class="pl-v"&gt;columns&lt;/span&gt;&lt;span class="pl-k"&gt;=&lt;/span&gt;df.a,&lt;span class="pl-v"&gt;data&lt;/span&gt;&lt;span class="pl-k"&gt;=&lt;/span&gt;&lt;span class="pl-c1"&gt;dict&lt;/span&gt;(&lt;span class="pl-c1"&gt;zip&lt;/span&gt;(df.a,df.val)))
Out[&lt;span class="pl-c1"&gt;113&lt;/span&gt;]:
a  apple1  apple2  apple3  apple4  apple5
&lt;span class="pl-c1"&gt;0&lt;/span&gt;     &lt;span class="pl-c1"&gt;1.0&lt;/span&gt;     &lt;span class="pl-c1"&gt;2.0&lt;/span&gt;     &lt;span class="pl-c1"&gt;3.0&lt;/span&gt;     &lt;span class="pl-c1"&gt;4.0&lt;/span&gt;     &lt;span class="pl-c1"&gt;5.0&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;以上方法是重新创建一个DataFrame,直接把&lt;code&gt;df.a&lt;/code&gt;所有可能取值作为新dataframe的列，index调整为&lt;code&gt;[0]&lt;/code&gt;，注意类型必须是数组类型(array-like 或者 Index)，两个轴确定后，&lt;code&gt;data&lt;/code&gt;填充数据域。&lt;/p&gt;
&lt;div class="highlight highlight-source-python"&gt;&lt;pre&gt;In [&lt;span class="pl-c1"&gt;116&lt;/span&gt;]: &lt;span class="pl-c1"&gt;dict&lt;/span&gt;(&lt;span class="pl-c1"&gt;zip&lt;/span&gt;(df.a,df.val))
Out[&lt;span class="pl-c1"&gt;116&lt;/span&gt;]: {&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;apple1&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;: &lt;span class="pl-c1"&gt;1.0&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;apple2&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;: &lt;span class="pl-c1"&gt;2.0&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;apple3&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;: &lt;span class="pl-c1"&gt;3.0&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;apple4&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;: &lt;span class="pl-c1"&gt;4.0&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;apple5&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;: &lt;span class="pl-c1"&gt;5.0&lt;/span&gt;}&lt;/pre&gt;&lt;/div&gt;
&lt;h4&gt;&lt;a id="user-content-2-导入数据" class="anchor" aria-hidden="true" href="#2-导入数据"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;2 导入数据&lt;/h4&gt;
&lt;p&gt;数据来自kaggle，共包括三个文件：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;movies.dat&lt;/li&gt;
&lt;li&gt;ratings.dat&lt;/li&gt;
&lt;li&gt;users.dat&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;code&gt;movies.dat&lt;/code&gt;包括三个字段：['Movie ID', 'Movie Title', 'Genre']&lt;/p&gt;
&lt;p&gt;使用pandas导入此文件：&lt;/p&gt;
&lt;div class="highlight highlight-source-python"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;import&lt;/span&gt; pandas &lt;span class="pl-k"&gt;as&lt;/span&gt; pd

movies &lt;span class="pl-k"&gt;=&lt;/span&gt; pd.read_csv(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;./data/movietweetings/movies.dat&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-v"&gt;delimiter&lt;/span&gt;&lt;span class="pl-k"&gt;=&lt;/span&gt;&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;::&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-v"&gt;engine&lt;/span&gt;&lt;span class="pl-k"&gt;=&lt;/span&gt;&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;python&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-v"&gt;header&lt;/span&gt;&lt;span class="pl-k"&gt;=&lt;/span&gt;&lt;span class="pl-c1"&gt;None&lt;/span&gt;, &lt;span class="pl-v"&gt;names&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; [&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;Movie ID&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;Movie Title&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;Genre&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;])&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;导入后，显示前5行：&lt;/p&gt;
&lt;div class="highlight highlight-source-python"&gt;&lt;pre&gt;   Movie &lt;span class="pl-c1"&gt;ID&lt;/span&gt;                                        Movie Title  \
&lt;span class="pl-c1"&gt;0&lt;/span&gt;         &lt;span class="pl-c1"&gt;8&lt;/span&gt;      Edison Kinetoscopic Record of a Sneeze (&lt;span class="pl-c1"&gt;1894&lt;/span&gt;)   
&lt;span class="pl-c1"&gt;1&lt;/span&gt;        &lt;span class="pl-c1"&gt;10&lt;/span&gt;                La sortie des usines Lumi猫re (&lt;span class="pl-c1"&gt;1895&lt;/span&gt;)   
&lt;span class="pl-c1"&gt;2&lt;/span&gt;        &lt;span class="pl-c1"&gt;12&lt;/span&gt;                      The Arrival of a Train (&lt;span class="pl-c1"&gt;1896&lt;/span&gt;)   
&lt;span class="pl-c1"&gt;3&lt;/span&gt;        &lt;span class="pl-c1"&gt;25&lt;/span&gt;  The Oxford &lt;span class="pl-k"&gt;and&lt;/span&gt; Cambridge University Boat Race &lt;span class="pl-c1"&gt;...&lt;/span&gt;   
&lt;span class="pl-c1"&gt;4&lt;/span&gt;        &lt;span class="pl-c1"&gt;91&lt;/span&gt;                         Le manoir du diable (&lt;span class="pl-c1"&gt;1896&lt;/span&gt;)   
&lt;span class="pl-c1"&gt;5&lt;/span&gt;       &lt;span class="pl-c1"&gt;131&lt;/span&gt;                           Une nuit terrible (&lt;span class="pl-c1"&gt;1896&lt;/span&gt;)   
&lt;span class="pl-c1"&gt;6&lt;/span&gt;       &lt;span class="pl-c1"&gt;417&lt;/span&gt;                      Le voyage dans la lune (&lt;span class="pl-c1"&gt;1902&lt;/span&gt;)   
&lt;span class="pl-c1"&gt;7&lt;/span&gt;       &lt;span class="pl-c1"&gt;439&lt;/span&gt;                     The Great Train Robbery (&lt;span class="pl-c1"&gt;1903&lt;/span&gt;)   
&lt;span class="pl-c1"&gt;8&lt;/span&gt;       &lt;span class="pl-c1"&gt;443&lt;/span&gt;        Hiawatha, the Messiah of the Ojibway (&lt;span class="pl-c1"&gt;1903&lt;/span&gt;)   
&lt;span class="pl-c1"&gt;9&lt;/span&gt;       &lt;span class="pl-c1"&gt;628&lt;/span&gt;                    The Adventures of Dollie (&lt;span class="pl-c1"&gt;1908&lt;/span&gt;)  
                                          Genre  
&lt;span class="pl-c1"&gt;0&lt;/span&gt;                             Documentary&lt;span class="pl-k"&gt;|&lt;/span&gt;Short  
&lt;span class="pl-c1"&gt;1&lt;/span&gt;                             Documentary&lt;span class="pl-k"&gt;|&lt;/span&gt;Short  
&lt;span class="pl-c1"&gt;2&lt;/span&gt;                             Documentary&lt;span class="pl-k"&gt;|&lt;/span&gt;Short  
&lt;span class="pl-c1"&gt;3&lt;/span&gt;                                           NaN  
&lt;span class="pl-c1"&gt;4&lt;/span&gt;                                  Short&lt;span class="pl-k"&gt;|&lt;/span&gt;Horror  
&lt;span class="pl-c1"&gt;5&lt;/span&gt;                           Short&lt;span class="pl-k"&gt;|&lt;/span&gt;Comedy&lt;span class="pl-k"&gt;|&lt;/span&gt;Horror  
&lt;span class="pl-c1"&gt;6&lt;/span&gt;  Short&lt;span class="pl-k"&gt;|&lt;/span&gt;Action&lt;span class="pl-k"&gt;|&lt;/span&gt;Adventure&lt;span class="pl-k"&gt;|&lt;/span&gt;Comedy&lt;span class="pl-k"&gt;|&lt;/span&gt;Fantasy&lt;span class="pl-k"&gt;|&lt;/span&gt;Sci&lt;span class="pl-k"&gt;-&lt;/span&gt;Fi  
&lt;span class="pl-c1"&gt;7&lt;/span&gt;                    Short&lt;span class="pl-k"&gt;|&lt;/span&gt;Action&lt;span class="pl-k"&gt;|&lt;/span&gt;Crime&lt;span class="pl-k"&gt;|&lt;/span&gt;Western  
&lt;span class="pl-c1"&gt;8&lt;/span&gt;                                           NaN  
&lt;span class="pl-c1"&gt;9&lt;/span&gt;                                  Action&lt;span class="pl-k"&gt;|&lt;/span&gt;Short  &lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;次导入其他两个数据文件&lt;/p&gt;
&lt;p&gt;&lt;code&gt;users.dat&lt;/code&gt;:&lt;/p&gt;
&lt;div class="highlight highlight-source-python"&gt;&lt;pre&gt;users &lt;span class="pl-k"&gt;=&lt;/span&gt; pd.read_csv(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;./data/movietweetings/users.dat&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-v"&gt;delimiter&lt;/span&gt;&lt;span class="pl-k"&gt;=&lt;/span&gt;&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;::&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-v"&gt;engine&lt;/span&gt;&lt;span class="pl-k"&gt;=&lt;/span&gt;&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;python&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-v"&gt;header&lt;/span&gt;&lt;span class="pl-k"&gt;=&lt;/span&gt;&lt;span class="pl-c1"&gt;None&lt;/span&gt;, &lt;span class="pl-v"&gt;names&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; [&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;User ID&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;Twitter ID&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;])
&lt;span class="pl-c1"&gt;print&lt;/span&gt;(users.head())&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;结果：&lt;/p&gt;
&lt;div class="highlight highlight-source-python"&gt;&lt;pre&gt;   User &lt;span class="pl-c1"&gt;ID&lt;/span&gt;  Twitter &lt;span class="pl-c1"&gt;ID&lt;/span&gt;
&lt;span class="pl-c1"&gt;0&lt;/span&gt;        &lt;span class="pl-c1"&gt;1&lt;/span&gt;   &lt;span class="pl-c1"&gt;397291295&lt;/span&gt;
&lt;span class="pl-c1"&gt;1&lt;/span&gt;        &lt;span class="pl-c1"&gt;2&lt;/span&gt;    &lt;span class="pl-c1"&gt;40501255&lt;/span&gt;
&lt;span class="pl-c1"&gt;2&lt;/span&gt;        &lt;span class="pl-c1"&gt;3&lt;/span&gt;   &lt;span class="pl-c1"&gt;417333257&lt;/span&gt;
&lt;span class="pl-c1"&gt;3&lt;/span&gt;        &lt;span class="pl-c1"&gt;4&lt;/span&gt;   &lt;span class="pl-c1"&gt;138805259&lt;/span&gt;
&lt;span class="pl-c1"&gt;4&lt;/span&gt;        &lt;span class="pl-c1"&gt;5&lt;/span&gt;  &lt;span class="pl-c1"&gt;2452094989&lt;/span&gt;
&lt;span class="pl-c1"&gt;5&lt;/span&gt;        &lt;span class="pl-c1"&gt;6&lt;/span&gt;   &lt;span class="pl-c1"&gt;391774225&lt;/span&gt;
&lt;span class="pl-c1"&gt;6&lt;/span&gt;        &lt;span class="pl-c1"&gt;7&lt;/span&gt;    &lt;span class="pl-c1"&gt;47317010&lt;/span&gt;
&lt;span class="pl-c1"&gt;7&lt;/span&gt;        &lt;span class="pl-c1"&gt;8&lt;/span&gt;    &lt;span class="pl-c1"&gt;84541461&lt;/span&gt;
&lt;span class="pl-c1"&gt;8&lt;/span&gt;        &lt;span class="pl-c1"&gt;9&lt;/span&gt;  &lt;span class="pl-c1"&gt;2445803544&lt;/span&gt;
&lt;span class="pl-c1"&gt;9&lt;/span&gt;       &lt;span class="pl-c1"&gt;10&lt;/span&gt;   &lt;span class="pl-c1"&gt;995885060&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;code&gt;rating.data&lt;/code&gt;:&lt;/p&gt;
&lt;div class="highlight highlight-source-python"&gt;&lt;pre&gt;ratings &lt;span class="pl-k"&gt;=&lt;/span&gt; pd.read_csv(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;./data/movietweetings/ratings.dat&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-v"&gt;delimiter&lt;/span&gt;&lt;span class="pl-k"&gt;=&lt;/span&gt;&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;::&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-v"&gt;engine&lt;/span&gt;&lt;span class="pl-k"&gt;=&lt;/span&gt;&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;python&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-v"&gt;header&lt;/span&gt;&lt;span class="pl-k"&gt;=&lt;/span&gt;&lt;span class="pl-c1"&gt;None&lt;/span&gt;, &lt;span class="pl-v"&gt;names&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; [&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;User ID&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;Movie ID&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;Rating&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;Rating Timestamp&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;])
&lt;span class="pl-c1"&gt;print&lt;/span&gt;(ratings.head())&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;结果：&lt;/p&gt;
&lt;div class="highlight highlight-source-python"&gt;&lt;pre&gt;   User &lt;span class="pl-c1"&gt;ID&lt;/span&gt;  Movie &lt;span class="pl-c1"&gt;ID&lt;/span&gt;  Rating  Rating Timestamp
&lt;span class="pl-c1"&gt;0&lt;/span&gt;        &lt;span class="pl-c1"&gt;1&lt;/span&gt;    &lt;span class="pl-c1"&gt;111161&lt;/span&gt;      &lt;span class="pl-c1"&gt;10&lt;/span&gt;        &lt;span class="pl-c1"&gt;1373234211&lt;/span&gt;
&lt;span class="pl-c1"&gt;1&lt;/span&gt;        &lt;span class="pl-c1"&gt;1&lt;/span&gt;    &lt;span class="pl-c1"&gt;117060&lt;/span&gt;       &lt;span class="pl-c1"&gt;7&lt;/span&gt;        &lt;span class="pl-c1"&gt;1373415231&lt;/span&gt;
&lt;span class="pl-c1"&gt;2&lt;/span&gt;        &lt;span class="pl-c1"&gt;1&lt;/span&gt;    &lt;span class="pl-c1"&gt;120755&lt;/span&gt;       &lt;span class="pl-c1"&gt;6&lt;/span&gt;        &lt;span class="pl-c1"&gt;1373424360&lt;/span&gt;
&lt;span class="pl-c1"&gt;3&lt;/span&gt;        &lt;span class="pl-c1"&gt;1&lt;/span&gt;    &lt;span class="pl-c1"&gt;317919&lt;/span&gt;       &lt;span class="pl-c1"&gt;6&lt;/span&gt;        &lt;span class="pl-c1"&gt;1373495763&lt;/span&gt;
&lt;span class="pl-c1"&gt;4&lt;/span&gt;        &lt;span class="pl-c1"&gt;1&lt;/span&gt;    &lt;span class="pl-c1"&gt;454876&lt;/span&gt;      &lt;span class="pl-c1"&gt;10&lt;/span&gt;        &lt;span class="pl-c1"&gt;1373621125&lt;/span&gt;
&lt;span class="pl-c1"&gt;5&lt;/span&gt;        &lt;span class="pl-c1"&gt;1&lt;/span&gt;    &lt;span class="pl-c1"&gt;790724&lt;/span&gt;       &lt;span class="pl-c1"&gt;8&lt;/span&gt;        &lt;span class="pl-c1"&gt;1374641320&lt;/span&gt;
&lt;span class="pl-c1"&gt;6&lt;/span&gt;        &lt;span class="pl-c1"&gt;1&lt;/span&gt;    &lt;span class="pl-c1"&gt;882977&lt;/span&gt;       &lt;span class="pl-c1"&gt;8&lt;/span&gt;        &lt;span class="pl-c1"&gt;1372898763&lt;/span&gt;
&lt;span class="pl-c1"&gt;7&lt;/span&gt;        &lt;span class="pl-c1"&gt;1&lt;/span&gt;   &lt;span class="pl-c1"&gt;1229238&lt;/span&gt;       &lt;span class="pl-c1"&gt;9&lt;/span&gt;        &lt;span class="pl-c1"&gt;1373506523&lt;/span&gt;
&lt;span class="pl-c1"&gt;8&lt;/span&gt;        &lt;span class="pl-c1"&gt;1&lt;/span&gt;   &lt;span class="pl-c1"&gt;1288558&lt;/span&gt;       &lt;span class="pl-c1"&gt;5&lt;/span&gt;        &lt;span class="pl-c1"&gt;1373154354&lt;/span&gt;
&lt;span class="pl-c1"&gt;9&lt;/span&gt;        &lt;span class="pl-c1"&gt;1&lt;/span&gt;   &lt;span class="pl-c1"&gt;1300854&lt;/span&gt;       &lt;span class="pl-c1"&gt;8&lt;/span&gt;        &lt;span class="pl-c1"&gt;1377165712&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;strong&gt;read_csv 使用说明&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;说明，本次导入&lt;code&gt;dat&lt;/code&gt;文件使用&lt;code&gt;pandas.read_csv&lt;/code&gt;函数。&lt;/p&gt;
&lt;p&gt;第一个位置参数&lt;code&gt;./data/movietweetings/ratings.dat&lt;/code&gt; 表示文件的相对路径&lt;/p&gt;
&lt;p&gt;第二个关键字参数：&lt;code&gt;delimiter='::'&lt;/code&gt;，表示文件分隔符使用&lt;code&gt;::&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;后面几个关键字参数分别代表使用的引擎，文件没有表头，所以&lt;code&gt;header&lt;/code&gt;为&lt;code&gt;None;&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;导入后dataframe的列名使用&lt;code&gt;names&lt;/code&gt;关键字设置，这个参数大家可以记住，比较有用。&lt;/p&gt;
&lt;p&gt;Kaggle电影数据集第一节，我们使用数据处理利器 &lt;code&gt;pandas&lt;/code&gt;， 函数&lt;code&gt;read_csv&lt;/code&gt; 导入给定的三个数据文件。&lt;/p&gt;
&lt;div class="highlight highlight-source-python"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;import&lt;/span&gt; pandas &lt;span class="pl-k"&gt;as&lt;/span&gt; pd

movies &lt;span class="pl-k"&gt;=&lt;/span&gt; pd.read_csv(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;./data/movietweetings/movies.dat&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-v"&gt;delimiter&lt;/span&gt;&lt;span class="pl-k"&gt;=&lt;/span&gt;&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;::&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-v"&gt;engine&lt;/span&gt;&lt;span class="pl-k"&gt;=&lt;/span&gt;&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;python&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-v"&gt;header&lt;/span&gt;&lt;span class="pl-k"&gt;=&lt;/span&gt;&lt;span class="pl-c1"&gt;None&lt;/span&gt;, &lt;span class="pl-v"&gt;names&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; [&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;Movie ID&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;Movie Title&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;Genre&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;])
users &lt;span class="pl-k"&gt;=&lt;/span&gt; pd.read_csv(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;./data/movietweetings/users.dat&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-v"&gt;delimiter&lt;/span&gt;&lt;span class="pl-k"&gt;=&lt;/span&gt;&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;::&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-v"&gt;engine&lt;/span&gt;&lt;span class="pl-k"&gt;=&lt;/span&gt;&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;python&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-v"&gt;header&lt;/span&gt;&lt;span class="pl-k"&gt;=&lt;/span&gt;&lt;span class="pl-c1"&gt;None&lt;/span&gt;, &lt;span class="pl-v"&gt;names&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; [&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;User ID&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;Twitter ID&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;])
ratings &lt;span class="pl-k"&gt;=&lt;/span&gt; pd.read_csv(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;./data/movietweetings/ratings.dat&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-v"&gt;delimiter&lt;/span&gt;&lt;span class="pl-k"&gt;=&lt;/span&gt;&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;::&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-v"&gt;engine&lt;/span&gt;&lt;span class="pl-k"&gt;=&lt;/span&gt;&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;python&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-v"&gt;header&lt;/span&gt;&lt;span class="pl-k"&gt;=&lt;/span&gt;&lt;span class="pl-c1"&gt;None&lt;/span&gt;, &lt;span class="pl-v"&gt;names&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; [&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;User ID&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;Movie ID&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;Rating&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;Rating Timestamp&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;])&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;用到的&lt;code&gt;read_csv&lt;/code&gt;，某些重要的参数，如何使用在上一节也有所提到。下面开始数据探索分析(EDA)&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;找出得分前10喜剧(comedy)&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h4&gt;&lt;a id="user-content-3-处理组合值" class="anchor" aria-hidden="true" href="#3-处理组合值"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;3 处理组合值&lt;/h4&gt;
&lt;p&gt;表&lt;code&gt;movies&lt;/code&gt;字段&lt;code&gt;Genre&lt;/code&gt;表示电影的类型，可能有多个值，分隔符为&lt;code&gt;|&lt;/code&gt;，取值也可能为&lt;code&gt;None&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;针对这类字段取值，可使用Pandas中Series提供的&lt;code&gt;str&lt;/code&gt;做一步转化，&lt;strong&gt;注意它是向量级的&lt;/strong&gt;，下一步，如Python原生的&lt;code&gt;str&lt;/code&gt;类似，使用&lt;code&gt;contains&lt;/code&gt;判断是否含有&lt;code&gt;comedy&lt;/code&gt;字符串：&lt;/p&gt;
&lt;div class="highlight highlight-source-python"&gt;&lt;pre&gt;mask &lt;span class="pl-k"&gt;=&lt;/span&gt; movies.Genre.str.contains(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;comedy&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;,&lt;span class="pl-v"&gt;case&lt;/span&gt;&lt;span class="pl-k"&gt;=&lt;/span&gt;&lt;span class="pl-c1"&gt;False&lt;/span&gt;,&lt;span class="pl-v"&gt;na&lt;/span&gt;&lt;span class="pl-k"&gt;=&lt;/span&gt;&lt;span class="pl-c1"&gt;False&lt;/span&gt;)&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;注意使用的两个参数：&lt;code&gt;case&lt;/code&gt;, &lt;code&gt;na&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;case为 False，表示对大小写不敏感；
na Genre列某个单元格为&lt;code&gt;NaN&lt;/code&gt;时，我们使用的充填值，此处填充为&lt;code&gt;False&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;返回的&lt;code&gt;mask&lt;/code&gt;是一维的&lt;code&gt;Series&lt;/code&gt;，结构与 movies.Genre相同，取值为True 或 False.&lt;/p&gt;
&lt;p&gt;观察结果：&lt;/p&gt;
&lt;div class="highlight highlight-source-python"&gt;&lt;pre&gt;&lt;span class="pl-c1"&gt;0&lt;/span&gt;    &lt;span class="pl-c1"&gt;False&lt;/span&gt;
&lt;span class="pl-c1"&gt;1&lt;/span&gt;    &lt;span class="pl-c1"&gt;False&lt;/span&gt;
&lt;span class="pl-c1"&gt;2&lt;/span&gt;    &lt;span class="pl-c1"&gt;False&lt;/span&gt;
&lt;span class="pl-c1"&gt;3&lt;/span&gt;    &lt;span class="pl-c1"&gt;False&lt;/span&gt;
&lt;span class="pl-c1"&gt;4&lt;/span&gt;    &lt;span class="pl-c1"&gt;False&lt;/span&gt;
&lt;span class="pl-c1"&gt;5&lt;/span&gt;     &lt;span class="pl-c1"&gt;True&lt;/span&gt;
&lt;span class="pl-c1"&gt;6&lt;/span&gt;     &lt;span class="pl-c1"&gt;True&lt;/span&gt;
&lt;span class="pl-c1"&gt;7&lt;/span&gt;    &lt;span class="pl-c1"&gt;False&lt;/span&gt;
&lt;span class="pl-c1"&gt;8&lt;/span&gt;    &lt;span class="pl-c1"&gt;False&lt;/span&gt;
&lt;span class="pl-c1"&gt;9&lt;/span&gt;    &lt;span class="pl-c1"&gt;False&lt;/span&gt;
Name: Genre, dtype: &lt;span class="pl-c1"&gt;bool&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;h4&gt;&lt;a id="user-content-4-访问某列" class="anchor" aria-hidden="true" href="#4-访问某列"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;4 访问某列&lt;/h4&gt;
&lt;p&gt;得到掩码mask后，pandas非常方便地能提取出目标记录：&lt;/p&gt;
&lt;div class="highlight highlight-source-python"&gt;&lt;pre&gt;comedy &lt;span class="pl-k"&gt;=&lt;/span&gt; movies[mask]
comdey_ids &lt;span class="pl-k"&gt;=&lt;/span&gt; comedy[&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;Movie ID&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;]
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;以上，在pandas中被最频率使用，不再解释。看结果&lt;code&gt;comedy_ids.head()&lt;/code&gt;：&lt;/p&gt;
&lt;div class="highlight highlight-source-python"&gt;&lt;pre&gt;&lt;span class="pl-c1"&gt;5&lt;/span&gt;      &lt;span class="pl-c1"&gt;131&lt;/span&gt;
&lt;span class="pl-c1"&gt;6&lt;/span&gt;      &lt;span class="pl-c1"&gt;417&lt;/span&gt;
&lt;span class="pl-c1"&gt;15&lt;/span&gt;    &lt;span class="pl-c1"&gt;2354&lt;/span&gt;
&lt;span class="pl-c1"&gt;18&lt;/span&gt;    &lt;span class="pl-c1"&gt;3863&lt;/span&gt;
&lt;span class="pl-c1"&gt;19&lt;/span&gt;    &lt;span class="pl-c1"&gt;4099&lt;/span&gt;
&lt;span class="pl-c1"&gt;20&lt;/span&gt;    &lt;span class="pl-c1"&gt;4100&lt;/span&gt;
&lt;span class="pl-c1"&gt;21&lt;/span&gt;    &lt;span class="pl-c1"&gt;4101&lt;/span&gt;
&lt;span class="pl-c1"&gt;22&lt;/span&gt;    &lt;span class="pl-c1"&gt;4210&lt;/span&gt;
&lt;span class="pl-c1"&gt;23&lt;/span&gt;    &lt;span class="pl-c1"&gt;4395&lt;/span&gt;
&lt;span class="pl-c1"&gt;25&lt;/span&gt;    &lt;span class="pl-c1"&gt;4518&lt;/span&gt;
Name: Movie &lt;span class="pl-c1"&gt;ID&lt;/span&gt;, dtype: int64
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;1-4介绍&lt;code&gt;数据读入&lt;/code&gt;，&lt;code&gt;处理组合值&lt;/code&gt;，&lt;code&gt;索引数据&lt;/code&gt;等, pandas中使用较多的函数，基于Kaggle真实电影影评数据集，最后得到所有&lt;code&gt;喜剧 ID&lt;/code&gt;：&lt;/p&gt;
&lt;div class="highlight highlight-source-python"&gt;&lt;pre&gt;&lt;span class="pl-c1"&gt;5&lt;/span&gt;      &lt;span class="pl-c1"&gt;131&lt;/span&gt;
&lt;span class="pl-c1"&gt;6&lt;/span&gt;      &lt;span class="pl-c1"&gt;417&lt;/span&gt;
&lt;span class="pl-c1"&gt;15&lt;/span&gt;    &lt;span class="pl-c1"&gt;2354&lt;/span&gt;
&lt;span class="pl-c1"&gt;18&lt;/span&gt;    &lt;span class="pl-c1"&gt;3863&lt;/span&gt;
&lt;span class="pl-c1"&gt;19&lt;/span&gt;    &lt;span class="pl-c1"&gt;4099&lt;/span&gt;
&lt;span class="pl-c1"&gt;20&lt;/span&gt;    &lt;span class="pl-c1"&gt;4100&lt;/span&gt;
&lt;span class="pl-c1"&gt;21&lt;/span&gt;    &lt;span class="pl-c1"&gt;4101&lt;/span&gt;
&lt;span class="pl-c1"&gt;22&lt;/span&gt;    &lt;span class="pl-c1"&gt;4210&lt;/span&gt;
&lt;span class="pl-c1"&gt;23&lt;/span&gt;    &lt;span class="pl-c1"&gt;4395&lt;/span&gt;
&lt;span class="pl-c1"&gt;25&lt;/span&gt;    &lt;span class="pl-c1"&gt;4518&lt;/span&gt;
Name: Movie &lt;span class="pl-c1"&gt;ID&lt;/span&gt;, dtype: int64
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;下面继续数据探索之旅~&lt;/p&gt;
&lt;h4&gt;&lt;a id="user-content-5-连接两个表" class="anchor" aria-hidden="true" href="#5-连接两个表"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;5 连接两个表&lt;/h4&gt;
&lt;p&gt;拿到所有喜剧的ID后，要想找出其中平均得分最高的前10喜剧，需要关联另一张表：&lt;code&gt;ratings&lt;/code&gt;:&lt;/p&gt;
&lt;p&gt;再回顾下ratings表结构：&lt;/p&gt;
&lt;div class="highlight highlight-source-python"&gt;&lt;pre&gt;   User &lt;span class="pl-c1"&gt;ID&lt;/span&gt;  Movie &lt;span class="pl-c1"&gt;ID&lt;/span&gt;  Rating  Rating Timestamp
&lt;span class="pl-c1"&gt;0&lt;/span&gt;        &lt;span class="pl-c1"&gt;1&lt;/span&gt;    &lt;span class="pl-c1"&gt;111161&lt;/span&gt;      &lt;span class="pl-c1"&gt;10&lt;/span&gt;        &lt;span class="pl-c1"&gt;1373234211&lt;/span&gt;
&lt;span class="pl-c1"&gt;1&lt;/span&gt;        &lt;span class="pl-c1"&gt;1&lt;/span&gt;    &lt;span class="pl-c1"&gt;117060&lt;/span&gt;       &lt;span class="pl-c1"&gt;7&lt;/span&gt;        &lt;span class="pl-c1"&gt;1373415231&lt;/span&gt;
&lt;span class="pl-c1"&gt;2&lt;/span&gt;        &lt;span class="pl-c1"&gt;1&lt;/span&gt;    &lt;span class="pl-c1"&gt;120755&lt;/span&gt;       &lt;span class="pl-c1"&gt;6&lt;/span&gt;        &lt;span class="pl-c1"&gt;1373424360&lt;/span&gt;
&lt;span class="pl-c1"&gt;3&lt;/span&gt;        &lt;span class="pl-c1"&gt;1&lt;/span&gt;    &lt;span class="pl-c1"&gt;317919&lt;/span&gt;       &lt;span class="pl-c1"&gt;6&lt;/span&gt;        &lt;span class="pl-c1"&gt;1373495763&lt;/span&gt;
&lt;span class="pl-c1"&gt;4&lt;/span&gt;        &lt;span class="pl-c1"&gt;1&lt;/span&gt;    &lt;span class="pl-c1"&gt;454876&lt;/span&gt;      &lt;span class="pl-c1"&gt;10&lt;/span&gt;        &lt;span class="pl-c1"&gt;1373621125&lt;/span&gt;
&lt;span class="pl-c1"&gt;5&lt;/span&gt;        &lt;span class="pl-c1"&gt;1&lt;/span&gt;    &lt;span class="pl-c1"&gt;790724&lt;/span&gt;       &lt;span class="pl-c1"&gt;8&lt;/span&gt;        &lt;span class="pl-c1"&gt;1374641320&lt;/span&gt;
&lt;span class="pl-c1"&gt;6&lt;/span&gt;        &lt;span class="pl-c1"&gt;1&lt;/span&gt;    &lt;span class="pl-c1"&gt;882977&lt;/span&gt;       &lt;span class="pl-c1"&gt;8&lt;/span&gt;        &lt;span class="pl-c1"&gt;1372898763&lt;/span&gt;
&lt;span class="pl-c1"&gt;7&lt;/span&gt;        &lt;span class="pl-c1"&gt;1&lt;/span&gt;   &lt;span class="pl-c1"&gt;1229238&lt;/span&gt;       &lt;span class="pl-c1"&gt;9&lt;/span&gt;        &lt;span class="pl-c1"&gt;1373506523&lt;/span&gt;
&lt;span class="pl-c1"&gt;8&lt;/span&gt;        &lt;span class="pl-c1"&gt;1&lt;/span&gt;   &lt;span class="pl-c1"&gt;1288558&lt;/span&gt;       &lt;span class="pl-c1"&gt;5&lt;/span&gt;        &lt;span class="pl-c1"&gt;1373154354&lt;/span&gt;
&lt;span class="pl-c1"&gt;9&lt;/span&gt;        &lt;span class="pl-c1"&gt;1&lt;/span&gt;   &lt;span class="pl-c1"&gt;1300854&lt;/span&gt;       &lt;span class="pl-c1"&gt;8&lt;/span&gt;        &lt;span class="pl-c1"&gt;1377165712&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;pandas 中使用&lt;code&gt;join&lt;/code&gt;关联两张表，连接字段是&lt;code&gt;Movie ID&lt;/code&gt;，如果顺其自然这么使用&lt;code&gt;join&lt;/code&gt;：&lt;/p&gt;
&lt;div class="highlight highlight-source-python"&gt;&lt;pre&gt;combine &lt;span class="pl-k"&gt;=&lt;/span&gt; ratings.join(comedy, &lt;span class="pl-v"&gt;on&lt;/span&gt;&lt;span class="pl-k"&gt;=&lt;/span&gt;&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;Movie ID&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-v"&gt;rsuffix&lt;/span&gt;&lt;span class="pl-k"&gt;=&lt;/span&gt;&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;2&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;)
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;左右滑动，查看完整代码&lt;/p&gt;
&lt;p&gt;大家可验证这种写法，仔细一看，会发现结果非常诡异。&lt;/p&gt;
&lt;p&gt;究其原因，这是pandas join函数使用的一个算是坑点，它在官档中介绍，连接右表时，此处右表是&lt;code&gt;comedy&lt;/code&gt;，它的&lt;code&gt;index&lt;/code&gt;要求是连接字段，也就是 &lt;code&gt;Movie ID&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;左表的index不要求，但是要在参数 &lt;code&gt;on&lt;/code&gt;中给定。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;以上是要注意的一点&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;修改为：&lt;/p&gt;
&lt;div class="highlight highlight-source-python"&gt;&lt;pre&gt;combine &lt;span class="pl-k"&gt;=&lt;/span&gt; ratings.join(comedy.set_index(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;Movie ID&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;), &lt;span class="pl-v"&gt;on&lt;/span&gt;&lt;span class="pl-k"&gt;=&lt;/span&gt;&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;Movie ID&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;)
&lt;span class="pl-c1"&gt;print&lt;/span&gt;(combine.head(&lt;span class="pl-c1"&gt;10&lt;/span&gt;))
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;以上是OK的写法&lt;/p&gt;
&lt;p&gt;观察结果：&lt;/p&gt;
&lt;div class="highlight highlight-source-python"&gt;&lt;pre&gt;   User &lt;span class="pl-c1"&gt;ID&lt;/span&gt;  Movie &lt;span class="pl-c1"&gt;ID&lt;/span&gt;  Rating  Rating Timestamp Movie Title Genre
&lt;span class="pl-c1"&gt;0&lt;/span&gt;        &lt;span class="pl-c1"&gt;1&lt;/span&gt;    &lt;span class="pl-c1"&gt;111161&lt;/span&gt;      &lt;span class="pl-c1"&gt;10&lt;/span&gt;        &lt;span class="pl-c1"&gt;1373234211&lt;/span&gt;         NaN   NaN
&lt;span class="pl-c1"&gt;1&lt;/span&gt;        &lt;span class="pl-c1"&gt;1&lt;/span&gt;    &lt;span class="pl-c1"&gt;117060&lt;/span&gt;       &lt;span class="pl-c1"&gt;7&lt;/span&gt;        &lt;span class="pl-c1"&gt;1373415231&lt;/span&gt;         NaN   NaN
&lt;span class="pl-c1"&gt;2&lt;/span&gt;        &lt;span class="pl-c1"&gt;1&lt;/span&gt;    &lt;span class="pl-c1"&gt;120755&lt;/span&gt;       &lt;span class="pl-c1"&gt;6&lt;/span&gt;        &lt;span class="pl-c1"&gt;1373424360&lt;/span&gt;         NaN   NaN
&lt;span class="pl-c1"&gt;3&lt;/span&gt;        &lt;span class="pl-c1"&gt;1&lt;/span&gt;    &lt;span class="pl-c1"&gt;317919&lt;/span&gt;       &lt;span class="pl-c1"&gt;6&lt;/span&gt;        &lt;span class="pl-c1"&gt;1373495763&lt;/span&gt;         NaN   NaN
&lt;span class="pl-c1"&gt;4&lt;/span&gt;        &lt;span class="pl-c1"&gt;1&lt;/span&gt;    &lt;span class="pl-c1"&gt;454876&lt;/span&gt;      &lt;span class="pl-c1"&gt;10&lt;/span&gt;        &lt;span class="pl-c1"&gt;1373621125&lt;/span&gt;         NaN   NaN
&lt;span class="pl-c1"&gt;5&lt;/span&gt;        &lt;span class="pl-c1"&gt;1&lt;/span&gt;    &lt;span class="pl-c1"&gt;790724&lt;/span&gt;       &lt;span class="pl-c1"&gt;8&lt;/span&gt;        &lt;span class="pl-c1"&gt;1374641320&lt;/span&gt;         NaN   NaN
&lt;span class="pl-c1"&gt;6&lt;/span&gt;        &lt;span class="pl-c1"&gt;1&lt;/span&gt;    &lt;span class="pl-c1"&gt;882977&lt;/span&gt;       &lt;span class="pl-c1"&gt;8&lt;/span&gt;        &lt;span class="pl-c1"&gt;1372898763&lt;/span&gt;         NaN   NaN
&lt;span class="pl-c1"&gt;7&lt;/span&gt;        &lt;span class="pl-c1"&gt;1&lt;/span&gt;   &lt;span class="pl-c1"&gt;1229238&lt;/span&gt;       &lt;span class="pl-c1"&gt;9&lt;/span&gt;        &lt;span class="pl-c1"&gt;1373506523&lt;/span&gt;         NaN   NaN
&lt;span class="pl-c1"&gt;8&lt;/span&gt;        &lt;span class="pl-c1"&gt;1&lt;/span&gt;   &lt;span class="pl-c1"&gt;1288558&lt;/span&gt;       &lt;span class="pl-c1"&gt;5&lt;/span&gt;        &lt;span class="pl-c1"&gt;1373154354&lt;/span&gt;         NaN   NaN
&lt;span class="pl-c1"&gt;9&lt;/span&gt;        &lt;span class="pl-c1"&gt;1&lt;/span&gt;   &lt;span class="pl-c1"&gt;1300854&lt;/span&gt;       &lt;span class="pl-c1"&gt;8&lt;/span&gt;        &lt;span class="pl-c1"&gt;1377165712&lt;/span&gt;         NaN   NaN
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Genre列为&lt;code&gt;NaN&lt;/code&gt;表明，这不是喜剧。需要筛选出此列不为&lt;code&gt;NaN&lt;/code&gt; 的记录。&lt;/p&gt;
&lt;h4&gt;&lt;a id="user-content-6-按列筛选" class="anchor" aria-hidden="true" href="#6-按列筛选"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;6 按列筛选&lt;/h4&gt;
&lt;p&gt;pandas最方便的地方，就是向量化运算，尽可能减少了for循环的嵌套。&lt;/p&gt;
&lt;p&gt;按列筛选这种常见需求，自然可以轻松应对。&lt;/p&gt;
&lt;p&gt;为了照顾初次接触 pandas 的朋友，分两步去写：&lt;/p&gt;
&lt;div class="highlight highlight-source-python"&gt;&lt;pre&gt;mask &lt;span class="pl-k"&gt;=&lt;/span&gt; pd.notnull(combine[&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;Genre&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;])
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;结果是一列只含&lt;code&gt;True 或 False&lt;/code&gt;的值&lt;/p&gt;
&lt;div class="highlight highlight-source-python"&gt;&lt;pre&gt;result &lt;span class="pl-k"&gt;=&lt;/span&gt; combine[mask]
&lt;span class="pl-c1"&gt;print&lt;/span&gt;(result.head())
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;结果中，Genre字段中至少含有一个Comedy字符串，表明验证了我们以上操作是OK的。&lt;/p&gt;
&lt;div class="highlight highlight-source-python"&gt;&lt;pre&gt;    User &lt;span class="pl-c1"&gt;ID&lt;/span&gt;  Movie &lt;span class="pl-c1"&gt;ID&lt;/span&gt;  Rating  Rating Timestamp             Movie Title  \
&lt;span class="pl-c1"&gt;12&lt;/span&gt;        &lt;span class="pl-c1"&gt;1&lt;/span&gt;   &lt;span class="pl-c1"&gt;1588173&lt;/span&gt;       &lt;span class="pl-c1"&gt;9&lt;/span&gt;        &lt;span class="pl-c1"&gt;1372821281&lt;/span&gt;      Warm Bodies (&lt;span class="pl-c1"&gt;2013&lt;/span&gt;)   
&lt;span class="pl-c1"&gt;13&lt;/span&gt;        &lt;span class="pl-c1"&gt;1&lt;/span&gt;   &lt;span class="pl-c1"&gt;1711425&lt;/span&gt;       &lt;span class="pl-c1"&gt;3&lt;/span&gt;        &lt;span class="pl-c1"&gt;1372604878&lt;/span&gt;        &lt;span class="pl-c1"&gt;21&lt;/span&gt; &lt;span class="pl-k"&gt;&amp;amp;&lt;/span&gt; Over (&lt;span class="pl-c1"&gt;2013&lt;/span&gt;)   
&lt;span class="pl-c1"&gt;14&lt;/span&gt;        &lt;span class="pl-c1"&gt;1&lt;/span&gt;   &lt;span class="pl-c1"&gt;2024432&lt;/span&gt;       &lt;span class="pl-c1"&gt;8&lt;/span&gt;        &lt;span class="pl-c1"&gt;1372703553&lt;/span&gt;   Identity Thief (&lt;span class="pl-c1"&gt;2013&lt;/span&gt;)   
&lt;span class="pl-c1"&gt;17&lt;/span&gt;        &lt;span class="pl-c1"&gt;1&lt;/span&gt;   &lt;span class="pl-c1"&gt;2101441&lt;/span&gt;       &lt;span class="pl-c1"&gt;1&lt;/span&gt;        &lt;span class="pl-c1"&gt;1372633473&lt;/span&gt;  Spring Breakers (&lt;span class="pl-c1"&gt;2012&lt;/span&gt;)   
&lt;span class="pl-c1"&gt;28&lt;/span&gt;        &lt;span class="pl-c1"&gt;2&lt;/span&gt;   &lt;span class="pl-c1"&gt;1431045&lt;/span&gt;       &lt;span class="pl-c1"&gt;7&lt;/span&gt;        &lt;span class="pl-c1"&gt;1457733508&lt;/span&gt;         Deadpool (&lt;span class="pl-c1"&gt;2016&lt;/span&gt;)   

                             Genre  
&lt;span class="pl-c1"&gt;12&lt;/span&gt;           Comedy&lt;span class="pl-k"&gt;|&lt;/span&gt;Horror&lt;span class="pl-k"&gt;|&lt;/span&gt;Romance  
&lt;span class="pl-c1"&gt;13&lt;/span&gt;                          Comedy  
&lt;span class="pl-c1"&gt;14&lt;/span&gt;    Adventure&lt;span class="pl-k"&gt;|&lt;/span&gt;Comedy&lt;span class="pl-k"&gt;|&lt;/span&gt;Crime&lt;span class="pl-k"&gt;|&lt;/span&gt;Drama  
&lt;span class="pl-c1"&gt;17&lt;/span&gt;              Comedy&lt;span class="pl-k"&gt;|&lt;/span&gt;Crime&lt;span class="pl-k"&gt;|&lt;/span&gt;Drama  
&lt;span class="pl-c1"&gt;28&lt;/span&gt;  Action&lt;span class="pl-k"&gt;|&lt;/span&gt;Adventure&lt;span class="pl-k"&gt;|&lt;/span&gt;Comedy&lt;span class="pl-k"&gt;|&lt;/span&gt;Sci&lt;span class="pl-k"&gt;-&lt;/span&gt;Fi  

&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;截止目前已经求出所有喜剧电影&lt;code&gt;result&lt;/code&gt;，前5行如下，Genre中都含有&lt;code&gt;Comedy&lt;/code&gt;字符串：&lt;/p&gt;
&lt;div class="highlight highlight-source-python"&gt;&lt;pre&gt;    User &lt;span class="pl-c1"&gt;ID&lt;/span&gt;  Movie &lt;span class="pl-c1"&gt;ID&lt;/span&gt;  Rating  Rating Timestamp             Movie Title  \
&lt;span class="pl-c1"&gt;12&lt;/span&gt;        &lt;span class="pl-c1"&gt;1&lt;/span&gt;   &lt;span class="pl-c1"&gt;1588173&lt;/span&gt;       &lt;span class="pl-c1"&gt;9&lt;/span&gt;        &lt;span class="pl-c1"&gt;1372821281&lt;/span&gt;      Warm Bodies (&lt;span class="pl-c1"&gt;2013&lt;/span&gt;)   
&lt;span class="pl-c1"&gt;13&lt;/span&gt;        &lt;span class="pl-c1"&gt;1&lt;/span&gt;   &lt;span class="pl-c1"&gt;1711425&lt;/span&gt;       &lt;span class="pl-c1"&gt;3&lt;/span&gt;        &lt;span class="pl-c1"&gt;1372604878&lt;/span&gt;        &lt;span class="pl-c1"&gt;21&lt;/span&gt; &lt;span class="pl-k"&gt;&amp;amp;&lt;/span&gt; Over (&lt;span class="pl-c1"&gt;2013&lt;/span&gt;)   
&lt;span class="pl-c1"&gt;14&lt;/span&gt;        &lt;span class="pl-c1"&gt;1&lt;/span&gt;   &lt;span class="pl-c1"&gt;2024432&lt;/span&gt;       &lt;span class="pl-c1"&gt;8&lt;/span&gt;        &lt;span class="pl-c1"&gt;1372703553&lt;/span&gt;   Identity Thief (&lt;span class="pl-c1"&gt;2013&lt;/span&gt;)   
&lt;span class="pl-c1"&gt;17&lt;/span&gt;        &lt;span class="pl-c1"&gt;1&lt;/span&gt;   &lt;span class="pl-c1"&gt;2101441&lt;/span&gt;       &lt;span class="pl-c1"&gt;1&lt;/span&gt;        &lt;span class="pl-c1"&gt;1372633473&lt;/span&gt;  Spring Breakers (&lt;span class="pl-c1"&gt;2012&lt;/span&gt;)   
&lt;span class="pl-c1"&gt;28&lt;/span&gt;        &lt;span class="pl-c1"&gt;2&lt;/span&gt;   &lt;span class="pl-c1"&gt;1431045&lt;/span&gt;       &lt;span class="pl-c1"&gt;7&lt;/span&gt;        &lt;span class="pl-c1"&gt;1457733508&lt;/span&gt;         Deadpool (&lt;span class="pl-c1"&gt;2016&lt;/span&gt;)   

                             Genre  
&lt;span class="pl-c1"&gt;12&lt;/span&gt;           Comedy&lt;span class="pl-k"&gt;|&lt;/span&gt;Horror&lt;span class="pl-k"&gt;|&lt;/span&gt;Romance  
&lt;span class="pl-c1"&gt;13&lt;/span&gt;                          Comedy  
&lt;span class="pl-c1"&gt;14&lt;/span&gt;    Adventure&lt;span class="pl-k"&gt;|&lt;/span&gt;Comedy&lt;span class="pl-k"&gt;|&lt;/span&gt;Crime&lt;span class="pl-k"&gt;|&lt;/span&gt;Drama  
&lt;span class="pl-c1"&gt;17&lt;/span&gt;              Comedy&lt;span class="pl-k"&gt;|&lt;/span&gt;Crime&lt;span class="pl-k"&gt;|&lt;/span&gt;Drama  
&lt;span class="pl-c1"&gt;28&lt;/span&gt;  Action&lt;span class="pl-k"&gt;|&lt;/span&gt;Adventure&lt;span class="pl-k"&gt;|&lt;/span&gt;Comedy&lt;span class="pl-k"&gt;|&lt;/span&gt;Sci&lt;span class="pl-k"&gt;-&lt;/span&gt;Fi  &lt;/pre&gt;&lt;/div&gt;
&lt;h4&gt;&lt;a id="user-content-7-按照movie-id-分组" class="anchor" aria-hidden="true" href="#7-按照movie-id-分组"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;7 按照Movie ID 分组&lt;/h4&gt;
&lt;p&gt;result中会有很多观众对同一部电影的打分，所以要求得分前10的喜剧，先按照&lt;code&gt;Movie ID&lt;/code&gt;分组，然后求出平均值：&lt;/p&gt;
&lt;div class="highlight highlight-source-python"&gt;&lt;pre&gt;score_as_movie &lt;span class="pl-k"&gt;=&lt;/span&gt; result.groupby(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;Movie ID&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;).mean()&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;前5行显示如下：&lt;/p&gt;
&lt;div class="highlight highlight-source-python"&gt;&lt;pre&gt;               User &lt;span class="pl-c1"&gt;ID&lt;/span&gt;  Rating  Rating Timestamp
Movie &lt;span class="pl-c1"&gt;ID&lt;/span&gt;                                        
&lt;span class="pl-c1"&gt;131&lt;/span&gt;       &lt;span class="pl-c1"&gt;34861.000000&lt;/span&gt;     &lt;span class="pl-c1"&gt;7.0&lt;/span&gt;      &lt;span class="pl-c1"&gt;1.540639e+09&lt;/span&gt;
&lt;span class="pl-c1"&gt;417&lt;/span&gt;       &lt;span class="pl-c1"&gt;34121.409091&lt;/span&gt;     &lt;span class="pl-c1"&gt;8.5&lt;/span&gt;      &lt;span class="pl-c1"&gt;1.458680e+09&lt;/span&gt;
&lt;span class="pl-c1"&gt;2354&lt;/span&gt;       &lt;span class="pl-c1"&gt;6264.000000&lt;/span&gt;     &lt;span class="pl-c1"&gt;8.0&lt;/span&gt;      &lt;span class="pl-c1"&gt;1.456343e+09&lt;/span&gt;
&lt;span class="pl-c1"&gt;3863&lt;/span&gt;      &lt;span class="pl-c1"&gt;43803.000000&lt;/span&gt;    &lt;span class="pl-c1"&gt;10.0&lt;/span&gt;      &lt;span class="pl-c1"&gt;1.430439e+09&lt;/span&gt;
&lt;span class="pl-c1"&gt;4099&lt;/span&gt;      &lt;span class="pl-c1"&gt;25084.500000&lt;/span&gt;     &lt;span class="pl-c1"&gt;7.0&lt;/span&gt;      &lt;span class="pl-c1"&gt;1.450323e+09&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h4&gt;&lt;a id="user-content-8-按照电影得分排序" class="anchor" aria-hidden="true" href="#8-按照电影得分排序"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;8 按照电影得分排序&lt;/h4&gt;
&lt;div class="highlight highlight-source-python"&gt;&lt;pre&gt;score_as_movie.sort_values(&lt;span class="pl-v"&gt;by&lt;/span&gt;&lt;span class="pl-k"&gt;=&lt;/span&gt;&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;Rating&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-v"&gt;ascending&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;False&lt;/span&gt;,&lt;span class="pl-v"&gt;inplace&lt;/span&gt;&lt;span class="pl-k"&gt;=&lt;/span&gt;&lt;span class="pl-c1"&gt;True&lt;/span&gt;)
score_as_movie&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;前5行显示如下：&lt;/p&gt;
&lt;div class="highlight highlight-source-python"&gt;&lt;pre&gt;	User &lt;span class="pl-c1"&gt;ID&lt;/span&gt;	Rating	Rating Timestamp
Movie &lt;span class="pl-c1"&gt;ID&lt;/span&gt;			
&lt;span class="pl-c1"&gt;7134690&lt;/span&gt;	&lt;span class="pl-c1"&gt;30110.0&lt;/span&gt;	&lt;span class="pl-c1"&gt;10.0&lt;/span&gt;	&lt;span class="pl-c1"&gt;1.524974e+09&lt;/span&gt;
&lt;span class="pl-c1"&gt;416889&lt;/span&gt;	&lt;span class="pl-c1"&gt;1319.0&lt;/span&gt;	&lt;span class="pl-c1"&gt;10.0&lt;/span&gt;	&lt;span class="pl-c1"&gt;1.543320e+09&lt;/span&gt;
&lt;span class="pl-c1"&gt;57840&lt;/span&gt;	&lt;span class="pl-c1"&gt;23589.0&lt;/span&gt;	&lt;span class="pl-c1"&gt;10.0&lt;/span&gt;	&lt;span class="pl-c1"&gt;1.396802e+09&lt;/span&gt;
&lt;span class="pl-c1"&gt;5693562&lt;/span&gt;	&lt;span class="pl-c1"&gt;50266.0&lt;/span&gt;	&lt;span class="pl-c1"&gt;10.0&lt;/span&gt;	&lt;span class="pl-c1"&gt;1.511024e+09&lt;/span&gt;
&lt;span class="pl-c1"&gt;5074&lt;/span&gt;	&lt;span class="pl-c1"&gt;43803.0&lt;/span&gt;	&lt;span class="pl-c1"&gt;10.0&lt;/span&gt;	&lt;span class="pl-c1"&gt;1.428352e+09&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;都是满分？这有点奇怪，会不会这些电影都只有几个人评分，甚至只有1个？评分样本个数太少，显然最终的平均分数不具有太强的说服力。&lt;/p&gt;
&lt;p&gt;所以，下面要进行每部电影的评分人数统计&lt;/p&gt;
&lt;h4&gt;&lt;a id="user-content-9-分组后使用聚合函数" class="anchor" aria-hidden="true" href="#9-分组后使用聚合函数"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;9 分组后使用聚合函数&lt;/h4&gt;
&lt;p&gt;根据&lt;code&gt;Movie ID&lt;/code&gt;分组后，使用&lt;code&gt;count&lt;/code&gt;函数统计&lt;code&gt;每组个数&lt;/code&gt;，只保留count列，最后得到&lt;code&gt;watchs2&lt;/code&gt;:&lt;/p&gt;
&lt;div class="highlight highlight-source-python"&gt;&lt;pre&gt;watchs &lt;span class="pl-k"&gt;=&lt;/span&gt; result.groupby(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;Movie ID&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;).agg([&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;count&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;])
watchs2 &lt;span class="pl-k"&gt;=&lt;/span&gt; watchs[&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;Rating&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;][&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;count&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;]&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;打印前20行：&lt;/p&gt;
&lt;div class="highlight highlight-source-python"&gt;&lt;pre&gt;&lt;span class="pl-c1"&gt;print&lt;/span&gt;(watchs2.head(&lt;span class="pl-c1"&gt;20&lt;/span&gt;))&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;结果：&lt;/p&gt;
&lt;div class="highlight highlight-source-python"&gt;&lt;pre&gt;Movie &lt;span class="pl-c1"&gt;ID&lt;/span&gt;
&lt;span class="pl-c1"&gt;131&lt;/span&gt;      &lt;span class="pl-c1"&gt;1&lt;/span&gt;
&lt;span class="pl-c1"&gt;417&lt;/span&gt;     &lt;span class="pl-c1"&gt;22&lt;/span&gt;
&lt;span class="pl-c1"&gt;2354&lt;/span&gt;     &lt;span class="pl-c1"&gt;1&lt;/span&gt;
&lt;span class="pl-c1"&gt;3863&lt;/span&gt;     &lt;span class="pl-c1"&gt;1&lt;/span&gt;
&lt;span class="pl-c1"&gt;4099&lt;/span&gt;     &lt;span class="pl-c1"&gt;2&lt;/span&gt;
&lt;span class="pl-c1"&gt;4100&lt;/span&gt;     &lt;span class="pl-c1"&gt;1&lt;/span&gt;
&lt;span class="pl-c1"&gt;4101&lt;/span&gt;     &lt;span class="pl-c1"&gt;1&lt;/span&gt;
&lt;span class="pl-c1"&gt;4210&lt;/span&gt;     &lt;span class="pl-c1"&gt;1&lt;/span&gt;
&lt;span class="pl-c1"&gt;4395&lt;/span&gt;     &lt;span class="pl-c1"&gt;1&lt;/span&gt;
&lt;span class="pl-c1"&gt;4518&lt;/span&gt;     &lt;span class="pl-c1"&gt;1&lt;/span&gt;
&lt;span class="pl-c1"&gt;4546&lt;/span&gt;     &lt;span class="pl-c1"&gt;2&lt;/span&gt;
&lt;span class="pl-c1"&gt;4936&lt;/span&gt;     &lt;span class="pl-c1"&gt;2&lt;/span&gt;
&lt;span class="pl-c1"&gt;5074&lt;/span&gt;     &lt;span class="pl-c1"&gt;1&lt;/span&gt;
&lt;span class="pl-c1"&gt;5571&lt;/span&gt;     &lt;span class="pl-c1"&gt;1&lt;/span&gt;
&lt;span class="pl-c1"&gt;6177&lt;/span&gt;     &lt;span class="pl-c1"&gt;1&lt;/span&gt;
&lt;span class="pl-c1"&gt;6414&lt;/span&gt;     &lt;span class="pl-c1"&gt;3&lt;/span&gt;
&lt;span class="pl-c1"&gt;6684&lt;/span&gt;     &lt;span class="pl-c1"&gt;1&lt;/span&gt;
&lt;span class="pl-c1"&gt;6689&lt;/span&gt;     &lt;span class="pl-c1"&gt;1&lt;/span&gt;
&lt;span class="pl-c1"&gt;7145&lt;/span&gt;     &lt;span class="pl-c1"&gt;1&lt;/span&gt;
&lt;span class="pl-c1"&gt;7162&lt;/span&gt;     &lt;span class="pl-c1"&gt;2&lt;/span&gt;
Name: count, dtype: int64&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;果然，竟然有这么多电影的评论数只有1次！样本个数太少，评论的平均值也就没有什么说服力。&lt;/p&gt;
&lt;p&gt;查看&lt;code&gt;watchs2&lt;/code&gt;一些重要统计量：&lt;/p&gt;
&lt;div class="highlight highlight-source-python"&gt;&lt;pre&gt;watchs2.describe()&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;结果：&lt;/p&gt;
&lt;div class="highlight highlight-source-python"&gt;&lt;pre&gt;count    &lt;span class="pl-c1"&gt;10740.000000&lt;/span&gt;
mean        &lt;span class="pl-c1"&gt;20.192086&lt;/span&gt;
std         &lt;span class="pl-c1"&gt;86.251411&lt;/span&gt;
&lt;span class="pl-c1"&gt;min&lt;/span&gt;          &lt;span class="pl-c1"&gt;1.000000&lt;/span&gt;
&lt;span class="pl-c1"&gt;25&lt;/span&gt;&lt;span class="pl-k"&gt;%&lt;/span&gt;          &lt;span class="pl-c1"&gt;1.000000&lt;/span&gt;
&lt;span class="pl-c1"&gt;50&lt;/span&gt;&lt;span class="pl-k"&gt;%&lt;/span&gt;          &lt;span class="pl-c1"&gt;2.000000&lt;/span&gt;
&lt;span class="pl-c1"&gt;75&lt;/span&gt;&lt;span class="pl-k"&gt;%&lt;/span&gt;          &lt;span class="pl-c1"&gt;7.000000&lt;/span&gt;
&lt;span class="pl-c1"&gt;max&lt;/span&gt;       &lt;span class="pl-c1"&gt;1843.000000&lt;/span&gt;
Name: count, dtype: float64&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;共有10740部&lt;strong&gt;喜剧&lt;/strong&gt;电影被评分，平均打分次数20次，标准差86，75%的电影样本打分次数小于7次，最小1次，最多1843次。&lt;/p&gt;
&lt;h4&gt;&lt;a id="user-content-10-频率分布直方图" class="anchor" aria-hidden="true" href="#10-频率分布直方图"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;10 频率分布直方图&lt;/h4&gt;
&lt;p&gt;绘制评论数的频率分布直方图，便于更直观的观察电影被评论的分布情况。上面分析到，75%的电影打分次数小于7次，所以绘制打分次数小于20次的直方图：&lt;/p&gt;
&lt;div class="highlight highlight-source-python"&gt;&lt;pre&gt;fig &lt;span class="pl-k"&gt;=&lt;/span&gt; plt.figure(&lt;span class="pl-v"&gt;figsize&lt;/span&gt;&lt;span class="pl-k"&gt;=&lt;/span&gt;(&lt;span class="pl-c1"&gt;12&lt;/span&gt;,&lt;span class="pl-c1"&gt;8&lt;/span&gt;))
histn &lt;span class="pl-k"&gt;=&lt;/span&gt; plt.hist(watchs2[watchs2 &lt;span class="pl-k"&gt;&amp;lt;=&lt;/span&gt;&lt;span class="pl-c1"&gt;19&lt;/span&gt;],&lt;span class="pl-c1"&gt;19&lt;/span&gt;,&lt;span class="pl-v"&gt;histtype&lt;/span&gt;&lt;span class="pl-k"&gt;=&lt;/span&gt;&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;step&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;)
plt.scatter([i&lt;span class="pl-k"&gt;+&lt;/span&gt;&lt;span class="pl-c1"&gt;1&lt;/span&gt; &lt;span class="pl-k"&gt;for&lt;/span&gt; i &lt;span class="pl-k"&gt;in&lt;/span&gt; &lt;span class="pl-c1"&gt;range&lt;/span&gt;(&lt;span class="pl-c1"&gt;len&lt;/span&gt;(histn[&lt;span class="pl-c1"&gt;0&lt;/span&gt;]))],histn[&lt;span class="pl-c1"&gt;0&lt;/span&gt;])&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="./img/20200131094927.jpg"&gt;&lt;img src="./img/20200131094927.jpg" alt="" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;code&gt;histn&lt;/code&gt;元祖表示个数和对应的被分割的区间，查看&lt;code&gt;histn[0]&lt;/code&gt;:&lt;/p&gt;
&lt;div class="highlight highlight-source-python"&gt;&lt;pre&gt;array([&lt;span class="pl-c1"&gt;4383&lt;/span&gt;., &lt;span class="pl-c1"&gt;1507&lt;/span&gt;.,  &lt;span class="pl-c1"&gt;787&lt;/span&gt;.,  &lt;span class="pl-c1"&gt;541&lt;/span&gt;.,  &lt;span class="pl-c1"&gt;356&lt;/span&gt;.,  &lt;span class="pl-c1"&gt;279&lt;/span&gt;.,  &lt;span class="pl-c1"&gt;209&lt;/span&gt;.,  &lt;span class="pl-c1"&gt;163&lt;/span&gt;.,  &lt;span class="pl-c1"&gt;158&lt;/span&gt;.,
        &lt;span class="pl-c1"&gt;118&lt;/span&gt;.,  &lt;span class="pl-c1"&gt;114&lt;/span&gt;.,   &lt;span class="pl-c1"&gt;90&lt;/span&gt;.,  &lt;span class="pl-c1"&gt;104&lt;/span&gt;.,   &lt;span class="pl-c1"&gt;81&lt;/span&gt;.,   &lt;span class="pl-c1"&gt;80&lt;/span&gt;.,   &lt;span class="pl-c1"&gt;73&lt;/span&gt;.,   &lt;span class="pl-c1"&gt;62&lt;/span&gt;.,   &lt;span class="pl-c1"&gt;65&lt;/span&gt;.,
         &lt;span class="pl-c1"&gt;52&lt;/span&gt;.])&lt;/pre&gt;&lt;/div&gt;
&lt;div class="highlight highlight-source-python"&gt;&lt;pre&gt;&lt;span class="pl-c1"&gt;sum&lt;/span&gt;(histn[&lt;span class="pl-c1"&gt;0&lt;/span&gt;]) &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; 9222&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;看到电影评论次数1到19次的喜剧电影9222部，共有10740部喜剧电影，大约&lt;code&gt;86%&lt;/code&gt;的喜剧电影评论次数&lt;code&gt;小于20次&lt;/code&gt;，有&lt;code&gt;1518&lt;/code&gt;部电影评论数不小于20次。&lt;/p&gt;
&lt;p&gt;我们肯定希望挑选出被评论次数尽可能多的电影，因为难免会有水军和滥竽充数等&lt;code&gt;异常评论&lt;/code&gt;行为。那么，如何准确的量化最小抽样量呢？&lt;/p&gt;
&lt;h4&gt;&lt;a id="user-content-11-最小抽样量" class="anchor" aria-hidden="true" href="#11-最小抽样量"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;11 最小抽样量&lt;/h4&gt;
&lt;p&gt;根据统计学的知识，最小抽样量和Z值、样本方差和样本误差相关，下面给出具体的求解最小样本量的计算方法。&lt;/p&gt;
&lt;p&gt;采用如下计算公式：&lt;/p&gt;
&lt;p&gt;$$ n = \frac{Z^2\sigma^2}{E^2} $$&lt;/p&gt;
&lt;p&gt;此处，$Z$ 值取为95%的置信度对应的Z值也就是1.96，样本误差取为均值的2.5%.&lt;/p&gt;
&lt;p&gt;根据以上公式，编写下面代码：&lt;/p&gt;
&lt;div class="highlight highlight-source-python"&gt;&lt;pre&gt;n3 &lt;span class="pl-k"&gt;=&lt;/span&gt; result.groupby(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;Movie ID&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;).agg([&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;count&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;,&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;mean&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;,&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;std&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;])
n3r &lt;span class="pl-k"&gt;=&lt;/span&gt; n3[n3[&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;Rating&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;][&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;count&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;]&lt;span class="pl-k"&gt;&amp;gt;=&lt;/span&gt;&lt;span class="pl-c1"&gt;20&lt;/span&gt;][&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;Rating&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;]&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;只计算影评超过20次，且满足最小样本量的电影。计算得到的&lt;code&gt;n3r&lt;/code&gt;前5行：&lt;/p&gt;
&lt;div class="highlight highlight-source-python"&gt;&lt;pre&gt;	count	mean	std
Movie &lt;span class="pl-c1"&gt;ID&lt;/span&gt;			
&lt;span class="pl-c1"&gt;417&lt;/span&gt;	&lt;span class="pl-c1"&gt;22&lt;/span&gt;	&lt;span class="pl-c1"&gt;8.500000&lt;/span&gt;	&lt;span class="pl-c1"&gt;1.263027&lt;/span&gt;
&lt;span class="pl-c1"&gt;12349&lt;/span&gt;	&lt;span class="pl-c1"&gt;68&lt;/span&gt;	&lt;span class="pl-c1"&gt;8.485294&lt;/span&gt;	&lt;span class="pl-c1"&gt;1.227698&lt;/span&gt;
&lt;span class="pl-c1"&gt;15324&lt;/span&gt;	&lt;span class="pl-c1"&gt;20&lt;/span&gt;	&lt;span class="pl-c1"&gt;8.350000&lt;/span&gt;	&lt;span class="pl-c1"&gt;1.039990&lt;/span&gt;
&lt;span class="pl-c1"&gt;15864&lt;/span&gt;	&lt;span class="pl-c1"&gt;51&lt;/span&gt;	&lt;span class="pl-c1"&gt;8.431373&lt;/span&gt;	&lt;span class="pl-c1"&gt;1.374844&lt;/span&gt;
&lt;span class="pl-c1"&gt;17925&lt;/span&gt;	&lt;span class="pl-c1"&gt;44&lt;/span&gt;	&lt;span class="pl-c1"&gt;8.636364&lt;/span&gt;	&lt;span class="pl-c1"&gt;1.259216&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;进一步求出最小样本量：&lt;/p&gt;
&lt;div class="highlight highlight-source-python"&gt;&lt;pre&gt;nmin &lt;span class="pl-k"&gt;=&lt;/span&gt; (&lt;span class="pl-c1"&gt;1.96&lt;/span&gt;&lt;span class="pl-k"&gt;**&lt;/span&gt;&lt;span class="pl-c1"&gt;2&lt;/span&gt;&lt;span class="pl-k"&gt;*&lt;/span&gt;n3r[&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;std&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;]&lt;span class="pl-k"&gt;**&lt;/span&gt;&lt;span class="pl-c1"&gt;2&lt;/span&gt;) &lt;span class="pl-k"&gt;/&lt;/span&gt; ( (n3r[&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;mean&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;]&lt;span class="pl-k"&gt;*&lt;/span&gt;&lt;span class="pl-c1"&gt;0.025&lt;/span&gt;)&lt;span class="pl-k"&gt;**&lt;/span&gt;&lt;span class="pl-c1"&gt;2&lt;/span&gt; )&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;code&gt;nmin&lt;/code&gt;前5行：&lt;/p&gt;
&lt;div class="highlight highlight-source-python"&gt;&lt;pre&gt;Movie &lt;span class="pl-c1"&gt;ID&lt;/span&gt;
&lt;span class="pl-c1"&gt;417&lt;/span&gt;         &lt;span class="pl-c1"&gt;135.712480&lt;/span&gt;
&lt;span class="pl-c1"&gt;12349&lt;/span&gt;       &lt;span class="pl-c1"&gt;128.671290&lt;/span&gt;
&lt;span class="pl-c1"&gt;15324&lt;/span&gt;        &lt;span class="pl-c1"&gt;95.349276&lt;/span&gt;
&lt;span class="pl-c1"&gt;15864&lt;/span&gt;       &lt;span class="pl-c1"&gt;163.434005&lt;/span&gt;
&lt;span class="pl-c1"&gt;17925&lt;/span&gt;       &lt;span class="pl-c1"&gt;130.668350&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;筛选出满足最小抽样量的喜剧电影：&lt;/p&gt;
&lt;div class="highlight highlight-source-python"&gt;&lt;pre&gt;n3s &lt;span class="pl-k"&gt;=&lt;/span&gt; n3r[ n3r[&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;count&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;] &lt;span class="pl-k"&gt;&amp;gt;=&lt;/span&gt; nmin ]&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;结果显示如下，因此共有&lt;code&gt;173&lt;/code&gt;部电影满足最小样本抽样量。&lt;/p&gt;
&lt;div class="highlight highlight-source-python"&gt;&lt;pre&gt;count	mean	std
Movie &lt;span class="pl-c1"&gt;ID&lt;/span&gt;			
&lt;span class="pl-c1"&gt;53604&lt;/span&gt;	&lt;span class="pl-c1"&gt;129&lt;/span&gt;	&lt;span class="pl-c1"&gt;8.635659&lt;/span&gt;	&lt;span class="pl-c1"&gt;1.230714&lt;/span&gt;
&lt;span class="pl-c1"&gt;57012&lt;/span&gt;	&lt;span class="pl-c1"&gt;207&lt;/span&gt;	&lt;span class="pl-c1"&gt;8.449275&lt;/span&gt;	&lt;span class="pl-c1"&gt;1.537899&lt;/span&gt;
&lt;span class="pl-c1"&gt;70735&lt;/span&gt;	&lt;span class="pl-c1"&gt;224&lt;/span&gt;	&lt;span class="pl-c1"&gt;8.839286&lt;/span&gt;	&lt;span class="pl-c1"&gt;1.190799&lt;/span&gt;
&lt;span class="pl-c1"&gt;75686&lt;/span&gt;	&lt;span class="pl-c1"&gt;209&lt;/span&gt;	&lt;span class="pl-c1"&gt;8.095694&lt;/span&gt;	&lt;span class="pl-c1"&gt;1.358885&lt;/span&gt;
&lt;span class="pl-c1"&gt;88763&lt;/span&gt;	&lt;span class="pl-c1"&gt;296&lt;/span&gt;	&lt;span class="pl-c1"&gt;8.945946&lt;/span&gt;	&lt;span class="pl-c1"&gt;1.026984&lt;/span&gt;
&lt;span class="pl-c1"&gt;...&lt;/span&gt;	&lt;span class="pl-c1"&gt;...&lt;/span&gt;	&lt;span class="pl-c1"&gt;...&lt;/span&gt;	&lt;span class="pl-c1"&gt;...&lt;/span&gt;
&lt;span class="pl-c1"&gt;6320628&lt;/span&gt;	&lt;span class="pl-c1"&gt;860&lt;/span&gt;	&lt;span class="pl-c1"&gt;7.966279&lt;/span&gt;	&lt;span class="pl-c1"&gt;1.469924&lt;/span&gt;
&lt;span class="pl-c1"&gt;6412452&lt;/span&gt;	&lt;span class="pl-c1"&gt;276&lt;/span&gt;	&lt;span class="pl-c1"&gt;7.510870&lt;/span&gt;	&lt;span class="pl-c1"&gt;1.389529&lt;/span&gt;
&lt;span class="pl-c1"&gt;6662050&lt;/span&gt;	&lt;span class="pl-c1"&gt;22&lt;/span&gt;	&lt;span class="pl-c1"&gt;10.000000&lt;/span&gt;	&lt;span class="pl-c1"&gt;0.000000&lt;/span&gt;
&lt;span class="pl-c1"&gt;6966692&lt;/span&gt;	&lt;span class="pl-c1"&gt;907&lt;/span&gt;	&lt;span class="pl-c1"&gt;8.673649&lt;/span&gt;	&lt;span class="pl-c1"&gt;1.286455&lt;/span&gt;
&lt;span class="pl-c1"&gt;7131622&lt;/span&gt;	&lt;span class="pl-c1"&gt;1102&lt;/span&gt;	&lt;span class="pl-c1"&gt;7.851180&lt;/span&gt;	&lt;span class="pl-c1"&gt;1.751500&lt;/span&gt;
&lt;span class="pl-c1"&gt;173&lt;/span&gt; rows × &lt;span class="pl-c1"&gt;3&lt;/span&gt; columns&lt;/pre&gt;&lt;/div&gt;
&lt;h4&gt;&lt;a id="user-content-12-去重和连表" class="anchor" aria-hidden="true" href="#12-去重和连表"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;12 去重和连表&lt;/h4&gt;
&lt;p&gt;按照平均得分从大到小排序：&lt;/p&gt;
&lt;div class="highlight highlight-source-python"&gt;&lt;pre&gt;n3s_sort &lt;span class="pl-k"&gt;=&lt;/span&gt; n3s.sort_values(&lt;span class="pl-v"&gt;by&lt;/span&gt;&lt;span class="pl-k"&gt;=&lt;/span&gt;&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;mean&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;,&lt;span class="pl-v"&gt;ascending&lt;/span&gt;&lt;span class="pl-k"&gt;=&lt;/span&gt;&lt;span class="pl-c1"&gt;False&lt;/span&gt;)&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;结果：&lt;/p&gt;
&lt;div class="highlight highlight-source-python"&gt;&lt;pre&gt;	count	mean	std
Movie &lt;span class="pl-c1"&gt;ID&lt;/span&gt;			
&lt;span class="pl-c1"&gt;6662050&lt;/span&gt;	&lt;span class="pl-c1"&gt;22&lt;/span&gt;	&lt;span class="pl-c1"&gt;10.000000&lt;/span&gt;	&lt;span class="pl-c1"&gt;0.000000&lt;/span&gt;
&lt;span class="pl-c1"&gt;4921860&lt;/span&gt;	&lt;span class="pl-c1"&gt;48&lt;/span&gt;	&lt;span class="pl-c1"&gt;10.000000&lt;/span&gt;	&lt;span class="pl-c1"&gt;0.000000&lt;/span&gt;
&lt;span class="pl-c1"&gt;5262972&lt;/span&gt;	&lt;span class="pl-c1"&gt;28&lt;/span&gt;	&lt;span class="pl-c1"&gt;10.000000&lt;/span&gt;	&lt;span class="pl-c1"&gt;0.000000&lt;/span&gt;
&lt;span class="pl-c1"&gt;5512872&lt;/span&gt;	&lt;span class="pl-c1"&gt;353&lt;/span&gt;	&lt;span class="pl-c1"&gt;9.985836&lt;/span&gt;	&lt;span class="pl-c1"&gt;0.266123&lt;/span&gt;
&lt;span class="pl-c1"&gt;3863552&lt;/span&gt;	&lt;span class="pl-c1"&gt;199&lt;/span&gt;	&lt;span class="pl-c1"&gt;9.010050&lt;/span&gt;	&lt;span class="pl-c1"&gt;1.163372&lt;/span&gt;
&lt;span class="pl-c1"&gt;...&lt;/span&gt;	&lt;span class="pl-c1"&gt;...&lt;/span&gt;	&lt;span class="pl-c1"&gt;...&lt;/span&gt;	&lt;span class="pl-c1"&gt;...&lt;/span&gt;
&lt;span class="pl-c1"&gt;1291150&lt;/span&gt;	&lt;span class="pl-c1"&gt;647&lt;/span&gt;	&lt;span class="pl-c1"&gt;6.327666&lt;/span&gt;	&lt;span class="pl-c1"&gt;1.785968&lt;/span&gt;
&lt;span class="pl-c1"&gt;2557490&lt;/span&gt;	&lt;span class="pl-c1"&gt;546&lt;/span&gt;	&lt;span class="pl-c1"&gt;6.307692&lt;/span&gt;	&lt;span class="pl-c1"&gt;1.858434&lt;/span&gt;
&lt;span class="pl-c1"&gt;1478839&lt;/span&gt;	&lt;span class="pl-c1"&gt;120&lt;/span&gt;	&lt;span class="pl-c1"&gt;6.200000&lt;/span&gt;	&lt;span class="pl-c1"&gt;0.728761&lt;/span&gt;
&lt;span class="pl-c1"&gt;2177771&lt;/span&gt;	&lt;span class="pl-c1"&gt;485&lt;/span&gt;	&lt;span class="pl-c1"&gt;6.150515&lt;/span&gt;	&lt;span class="pl-c1"&gt;1.523922&lt;/span&gt;
&lt;span class="pl-c1"&gt;1951261&lt;/span&gt;	&lt;span class="pl-c1"&gt;1091&lt;/span&gt;	&lt;span class="pl-c1"&gt;6.083410&lt;/span&gt;	&lt;span class="pl-c1"&gt;1.736127&lt;/span&gt;
&lt;span class="pl-c1"&gt;173&lt;/span&gt; rows × &lt;span class="pl-c1"&gt;3&lt;/span&gt; columns&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;有一个细节容易忽视，因为上面连接的&lt;code&gt;ratings&lt;/code&gt;表&lt;code&gt;Movie ID&lt;/code&gt;会有重复，因为会有多个人评论同一部电影。所以再对&lt;code&gt;n3s_sort&lt;/code&gt;去重：&lt;/p&gt;
&lt;div class="highlight highlight-source-python"&gt;&lt;pre&gt;n3s_drops &lt;span class="pl-k"&gt;=&lt;/span&gt; n3s_sort.drop_duplicates(&lt;span class="pl-v"&gt;subset&lt;/span&gt;&lt;span class="pl-k"&gt;=&lt;/span&gt;[&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;count&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;])&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;结果：&lt;/p&gt;
&lt;div class="highlight highlight-source-python"&gt;&lt;pre&gt;	count	mean	std
Movie &lt;span class="pl-c1"&gt;ID&lt;/span&gt;			
&lt;span class="pl-c1"&gt;6662050&lt;/span&gt;	&lt;span class="pl-c1"&gt;22&lt;/span&gt;	&lt;span class="pl-c1"&gt;10.000000&lt;/span&gt;	&lt;span class="pl-c1"&gt;0.000000&lt;/span&gt;
&lt;span class="pl-c1"&gt;4921860&lt;/span&gt;	&lt;span class="pl-c1"&gt;48&lt;/span&gt;	&lt;span class="pl-c1"&gt;10.000000&lt;/span&gt;	&lt;span class="pl-c1"&gt;0.000000&lt;/span&gt;
&lt;span class="pl-c1"&gt;5262972&lt;/span&gt;	&lt;span class="pl-c1"&gt;28&lt;/span&gt;	&lt;span class="pl-c1"&gt;10.000000&lt;/span&gt;	&lt;span class="pl-c1"&gt;0.000000&lt;/span&gt;
&lt;span class="pl-c1"&gt;5512872&lt;/span&gt;	&lt;span class="pl-c1"&gt;353&lt;/span&gt;	&lt;span class="pl-c1"&gt;9.985836&lt;/span&gt;	&lt;span class="pl-c1"&gt;0.266123&lt;/span&gt;
&lt;span class="pl-c1"&gt;3863552&lt;/span&gt;	&lt;span class="pl-c1"&gt;199&lt;/span&gt;	&lt;span class="pl-c1"&gt;9.010050&lt;/span&gt;	&lt;span class="pl-c1"&gt;1.163372&lt;/span&gt;
&lt;span class="pl-c1"&gt;...&lt;/span&gt;	&lt;span class="pl-c1"&gt;...&lt;/span&gt;	&lt;span class="pl-c1"&gt;...&lt;/span&gt;	&lt;span class="pl-c1"&gt;...&lt;/span&gt;
&lt;span class="pl-c1"&gt;1291150&lt;/span&gt;	&lt;span class="pl-c1"&gt;647&lt;/span&gt;	&lt;span class="pl-c1"&gt;6.327666&lt;/span&gt;	&lt;span class="pl-c1"&gt;1.785968&lt;/span&gt;
&lt;span class="pl-c1"&gt;2557490&lt;/span&gt;	&lt;span class="pl-c1"&gt;546&lt;/span&gt;	&lt;span class="pl-c1"&gt;6.307692&lt;/span&gt;	&lt;span class="pl-c1"&gt;1.858434&lt;/span&gt;
&lt;span class="pl-c1"&gt;1478839&lt;/span&gt;	&lt;span class="pl-c1"&gt;120&lt;/span&gt;	&lt;span class="pl-c1"&gt;6.200000&lt;/span&gt;	&lt;span class="pl-c1"&gt;0.728761&lt;/span&gt;
&lt;span class="pl-c1"&gt;2177771&lt;/span&gt;	&lt;span class="pl-c1"&gt;485&lt;/span&gt;	&lt;span class="pl-c1"&gt;6.150515&lt;/span&gt;	&lt;span class="pl-c1"&gt;1.523922&lt;/span&gt;
&lt;span class="pl-c1"&gt;1951261&lt;/span&gt;	&lt;span class="pl-c1"&gt;1091&lt;/span&gt;	&lt;span class="pl-c1"&gt;6.083410&lt;/span&gt;	&lt;span class="pl-c1"&gt;1.736127&lt;/span&gt;
&lt;span class="pl-c1"&gt;157&lt;/span&gt; rows × &lt;span class="pl-c1"&gt;3&lt;/span&gt; columns&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;仅靠&lt;code&gt;Movie ID&lt;/code&gt;还是不知道哪些电影，连接&lt;code&gt;movies&lt;/code&gt;表：&lt;/p&gt;
&lt;div class="highlight highlight-source-python"&gt;&lt;pre&gt;ms &lt;span class="pl-k"&gt;=&lt;/span&gt; movies.drop_duplicates(&lt;span class="pl-v"&gt;subset&lt;/span&gt;&lt;span class="pl-k"&gt;=&lt;/span&gt;[&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;Movie ID&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;])
ms &lt;span class="pl-k"&gt;=&lt;/span&gt; ms.set_index(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;Movie ID&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;)
n3s_final &lt;span class="pl-k"&gt;=&lt;/span&gt; n3s_drops.join(ms,&lt;span class="pl-v"&gt;on&lt;/span&gt;&lt;span class="pl-k"&gt;=&lt;/span&gt;&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;Movie ID&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;)&lt;/pre&gt;&lt;/div&gt;
&lt;h4&gt;&lt;a id="user-content-13-结果分析" class="anchor" aria-hidden="true" href="#13-结果分析"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;13 结果分析&lt;/h4&gt;
&lt;p&gt;喜剧榜单前50名：&lt;/p&gt;
&lt;div class="highlight highlight-source-python"&gt;&lt;pre&gt;Movie Title
Five Minutes (&lt;span class="pl-c1"&gt;2017&lt;/span&gt;)
&lt;span class="pl-c1"&gt;MSG&lt;/span&gt; &lt;span class="pl-c1"&gt;2&lt;/span&gt; the Messenger (&lt;span class="pl-c1"&gt;2015&lt;/span&gt;)
Avengers: Age of Ultron Parody (&lt;span class="pl-c1"&gt;2015&lt;/span&gt;)
Be Somebody (&lt;span class="pl-c1"&gt;2016&lt;/span&gt;)
Bajrangi Bhaijaan (&lt;span class="pl-c1"&gt;2015&lt;/span&gt;)
Back to the Future (&lt;span class="pl-c1"&gt;1985&lt;/span&gt;)
La vita 鐚&lt;span class="pl-ii"&gt;?&lt;/span&gt;bella (&lt;span class="pl-c1"&gt;1997&lt;/span&gt;)
The Intouchables (&lt;span class="pl-c1"&gt;2011&lt;/span&gt;)
The Sting (&lt;span class="pl-c1"&gt;1973&lt;/span&gt;)
Coco (&lt;span class="pl-c1"&gt;2017&lt;/span&gt;)
Toy Story &lt;span class="pl-c1"&gt;3&lt;/span&gt; (&lt;span class="pl-c1"&gt;2010&lt;/span&gt;)
&lt;span class="pl-c1"&gt;3&lt;/span&gt; Idiots (&lt;span class="pl-c1"&gt;2009&lt;/span&gt;)
Green Book (&lt;span class="pl-c1"&gt;2018&lt;/span&gt;)
Dead Poets Society (&lt;span class="pl-c1"&gt;1989&lt;/span&gt;)
The Apartment (&lt;span class="pl-c1"&gt;1960&lt;/span&gt;)
P.K. (&lt;span class="pl-c1"&gt;2014&lt;/span&gt;)
The Truman Show (&lt;span class="pl-c1"&gt;1998&lt;/span&gt;)
Am鑼卨ie (&lt;span class="pl-c1"&gt;2001&lt;/span&gt;)
Inside Out (&lt;span class="pl-c1"&gt;2015&lt;/span&gt;)
Toy Story &lt;span class="pl-c1"&gt;4&lt;/span&gt; (&lt;span class="pl-c1"&gt;2019&lt;/span&gt;)
Toy Story (&lt;span class="pl-c1"&gt;1995&lt;/span&gt;)
Finding Nemo (&lt;span class="pl-c1"&gt;2003&lt;/span&gt;)
Dr. Strangelove &lt;span class="pl-k"&gt;or&lt;/span&gt;: How I Learned to Stop Worrying &lt;span class="pl-k"&gt;and&lt;/span&gt; Love the Bomb (&lt;span class="pl-c1"&gt;1964&lt;/span&gt;)
Home Alone (&lt;span class="pl-c1"&gt;1990&lt;/span&gt;)
Zootopia (&lt;span class="pl-c1"&gt;2016&lt;/span&gt;)
Up (&lt;span class="pl-c1"&gt;2009&lt;/span&gt;)
Monsters, Inc. (&lt;span class="pl-c1"&gt;2001&lt;/span&gt;)
La La Land (&lt;span class="pl-c1"&gt;2016&lt;/span&gt;)
Relatos salvajes (&lt;span class="pl-c1"&gt;2014&lt;/span&gt;)
En man som heter Ove (&lt;span class="pl-c1"&gt;2015&lt;/span&gt;)
Snatch (&lt;span class="pl-c1"&gt;2000&lt;/span&gt;)
Lock, Stock &lt;span class="pl-k"&gt;and&lt;/span&gt; Two Smoking Barrels (&lt;span class="pl-c1"&gt;1998&lt;/span&gt;)
How to Train Your Dragon &lt;span class="pl-c1"&gt;2&lt;/span&gt; (&lt;span class="pl-c1"&gt;2014&lt;/span&gt;)
As Good &lt;span class="pl-k"&gt;as&lt;/span&gt; It Gets (&lt;span class="pl-c1"&gt;1997&lt;/span&gt;)
Guardians of the Galaxy (&lt;span class="pl-c1"&gt;2014&lt;/span&gt;)
The Grand Budapest Hotel (&lt;span class="pl-c1"&gt;2014&lt;/span&gt;)
Fantastic Mr. Fox (&lt;span class="pl-c1"&gt;2009&lt;/span&gt;)
Silver Linings Playbook (&lt;span class="pl-c1"&gt;2012&lt;/span&gt;)
Sing Street (&lt;span class="pl-c1"&gt;2016&lt;/span&gt;)
Deadpool (&lt;span class="pl-c1"&gt;2016&lt;/span&gt;)
Annie Hall (&lt;span class="pl-c1"&gt;1977&lt;/span&gt;)
Pride (&lt;span class="pl-c1"&gt;2014&lt;/span&gt;)
In Bruges (&lt;span class="pl-c1"&gt;2008&lt;/span&gt;)
Big Hero &lt;span class="pl-c1"&gt;6&lt;/span&gt; (&lt;span class="pl-c1"&gt;2014&lt;/span&gt;)
Groundhog Day (&lt;span class="pl-c1"&gt;1993&lt;/span&gt;)
The Breakfast Club (&lt;span class="pl-c1"&gt;1985&lt;/span&gt;)
Little Miss Sunshine (&lt;span class="pl-c1"&gt;2006&lt;/span&gt;)
Deadpool &lt;span class="pl-c1"&gt;2&lt;/span&gt; (&lt;span class="pl-c1"&gt;2018&lt;/span&gt;)
The Terminal (&lt;span class="pl-c1"&gt;2004&lt;/span&gt;)&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;前10名评论数图：&lt;/p&gt;
&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="./img/2020013109495711.jpg"&gt;&lt;img src="./img/2020013109495711.jpg" alt="" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;代码：&lt;/p&gt;
&lt;div class="highlight highlight-source-python"&gt;&lt;pre&gt;x &lt;span class="pl-k"&gt;=&lt;/span&gt; n3s_final[&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;Movie Title&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;][:&lt;span class="pl-c1"&gt;10&lt;/span&gt;].tolist()[::&lt;span class="pl-k"&gt;-&lt;/span&gt;&lt;span class="pl-c1"&gt;1&lt;/span&gt;]
y &lt;span class="pl-k"&gt;=&lt;/span&gt; n3s_final[&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;count&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;][:&lt;span class="pl-c1"&gt;10&lt;/span&gt;].tolist()[::&lt;span class="pl-k"&gt;-&lt;/span&gt;&lt;span class="pl-c1"&gt;1&lt;/span&gt;]
bar &lt;span class="pl-k"&gt;=&lt;/span&gt; (
    Bar()
    .add_xaxis(x)
    .add_yaxis(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;评论数&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;,y,&lt;span class="pl-v"&gt;category_gap&lt;/span&gt;&lt;span class="pl-k"&gt;=&lt;/span&gt;&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;50%&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;)
    .reversal_axis()
    .set_global_opts(&lt;span class="pl-v"&gt;title_opts&lt;/span&gt;&lt;span class="pl-k"&gt;=&lt;/span&gt;opts.TitleOpts(&lt;span class="pl-v"&gt;title&lt;/span&gt;&lt;span class="pl-k"&gt;=&lt;/span&gt;&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;喜剧电影被评论次数&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;),
                    &lt;span class="pl-v"&gt;toolbox_opts&lt;/span&gt;&lt;span class="pl-k"&gt;=&lt;/span&gt;opts.ToolboxOpts(),)
)
grid &lt;span class="pl-k"&gt;=&lt;/span&gt; (
    Grid(&lt;span class="pl-v"&gt;init_opts&lt;/span&gt;&lt;span class="pl-k"&gt;=&lt;/span&gt;opts.InitOpts(&lt;span class="pl-v"&gt;theme&lt;/span&gt;&lt;span class="pl-k"&gt;=&lt;/span&gt;ThemeType.&lt;span class="pl-c1"&gt;LIGHT&lt;/span&gt;))
    .add(bar, &lt;span class="pl-v"&gt;grid_opts&lt;/span&gt;&lt;span class="pl-k"&gt;=&lt;/span&gt;opts.GridOpts(&lt;span class="pl-v"&gt;pos_left&lt;/span&gt;&lt;span class="pl-k"&gt;=&lt;/span&gt;&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;30%&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;))
)
grid.render_notebook()&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;前10名得分图：&lt;/p&gt;
&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="./img/2020013109500812.jpg"&gt;&lt;img src="./img/2020013109500812.jpg" alt="" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;代码：&lt;/p&gt;
&lt;div class="highlight highlight-source-python"&gt;&lt;pre&gt;x &lt;span class="pl-k"&gt;=&lt;/span&gt; n3s_final[&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;Movie Title&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;][:&lt;span class="pl-c1"&gt;10&lt;/span&gt;].tolist()[::&lt;span class="pl-k"&gt;-&lt;/span&gt;&lt;span class="pl-c1"&gt;1&lt;/span&gt;]
y &lt;span class="pl-k"&gt;=&lt;/span&gt; n3s_final[&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;mean&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;][:&lt;span class="pl-c1"&gt;10&lt;/span&gt;].round(&lt;span class="pl-c1"&gt;3&lt;/span&gt;).tolist()[::&lt;span class="pl-k"&gt;-&lt;/span&gt;&lt;span class="pl-c1"&gt;1&lt;/span&gt;]
bar &lt;span class="pl-k"&gt;=&lt;/span&gt; (
    Bar()
    .add_xaxis(x)
    .add_yaxis(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;平均得分&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;,y,&lt;span class="pl-v"&gt;category_gap&lt;/span&gt;&lt;span class="pl-k"&gt;=&lt;/span&gt;&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;50%&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;)
    .reversal_axis()
    .set_global_opts(&lt;span class="pl-v"&gt;title_opts&lt;/span&gt;&lt;span class="pl-k"&gt;=&lt;/span&gt;opts.TitleOpts(&lt;span class="pl-v"&gt;title&lt;/span&gt;&lt;span class="pl-k"&gt;=&lt;/span&gt;&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;喜剧电影平均得分&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;),
                    &lt;span class="pl-v"&gt;xaxis_opts&lt;/span&gt;&lt;span class="pl-k"&gt;=&lt;/span&gt;opts.AxisOpts(&lt;span class="pl-v"&gt;min_&lt;/span&gt;&lt;span class="pl-k"&gt;=&lt;/span&gt;&lt;span class="pl-c1"&gt;8.0&lt;/span&gt;,&lt;span class="pl-v"&gt;name&lt;/span&gt;&lt;span class="pl-k"&gt;=&lt;/span&gt;&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;平均得分&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;),
                    &lt;span class="pl-v"&gt;toolbox_opts&lt;/span&gt;&lt;span class="pl-k"&gt;=&lt;/span&gt;opts.ToolboxOpts(),)
)
grid &lt;span class="pl-k"&gt;=&lt;/span&gt; (
    Grid(&lt;span class="pl-v"&gt;init_opts&lt;/span&gt;&lt;span class="pl-k"&gt;=&lt;/span&gt;opts.InitOpts(&lt;span class="pl-v"&gt;theme&lt;/span&gt;&lt;span class="pl-k"&gt;=&lt;/span&gt;ThemeType.&lt;span class="pl-c1"&gt;MACARONS&lt;/span&gt;))
    .add(bar, &lt;span class="pl-v"&gt;grid_opts&lt;/span&gt;&lt;span class="pl-k"&gt;=&lt;/span&gt;opts.GridOpts(&lt;span class="pl-v"&gt;pos_left&lt;/span&gt;&lt;span class="pl-k"&gt;=&lt;/span&gt;&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;30%&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;))
)
grid.render_notebook()&lt;/pre&gt;&lt;/div&gt;
&lt;h4&gt;&lt;a id="user-content-14-生成哑变量" class="anchor" aria-hidden="true" href="#14-生成哑变量"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;14 生成哑变量&lt;/h4&gt;
&lt;p&gt;分类变量的数值化，是指将枚举类变量转化为indicator变量或称dummy变量。&lt;/p&gt;
&lt;p&gt;那么什么是&lt;code&gt;indicator变量&lt;/code&gt;，看看如下例子，A变量解析为：&lt;code&gt;[1,0,0]&lt;/code&gt;, B解析为：&lt;code&gt;[0,1,0]&lt;/code&gt;, C解析为：&lt;code&gt;[0,0,1]&lt;/code&gt;&lt;/p&gt;
&lt;div class="highlight highlight-source-python"&gt;&lt;pre&gt;In [&lt;span class="pl-c1"&gt;8&lt;/span&gt;]: s &lt;span class="pl-k"&gt;=&lt;/span&gt; pd.Series(&lt;span class="pl-c1"&gt;list&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;ABCA&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;))
In [&lt;span class="pl-c1"&gt;9&lt;/span&gt;]: pd.get_dummies(s)
Out[&lt;span class="pl-c1"&gt;9&lt;/span&gt;]:
   A  B  C
&lt;span class="pl-c1"&gt;0&lt;/span&gt;  &lt;span class="pl-c1"&gt;1&lt;/span&gt;  &lt;span class="pl-c1"&gt;0&lt;/span&gt;  &lt;span class="pl-c1"&gt;0&lt;/span&gt;
&lt;span class="pl-c1"&gt;1&lt;/span&gt;  &lt;span class="pl-c1"&gt;0&lt;/span&gt;  &lt;span class="pl-c1"&gt;1&lt;/span&gt;  &lt;span class="pl-c1"&gt;0&lt;/span&gt;
&lt;span class="pl-c1"&gt;2&lt;/span&gt;  &lt;span class="pl-c1"&gt;0&lt;/span&gt;  &lt;span class="pl-c1"&gt;0&lt;/span&gt;  &lt;span class="pl-c1"&gt;1&lt;/span&gt;
&lt;span class="pl-c1"&gt;3&lt;/span&gt;  &lt;span class="pl-c1"&gt;1&lt;/span&gt;  &lt;span class="pl-c1"&gt;0&lt;/span&gt;  &lt;span class="pl-c1"&gt;0&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;如果输入的字符有4个唯一值，看到字符a被解析为[1,0,0,0]，向量长度为4.&lt;/p&gt;
&lt;div class="highlight highlight-source-python"&gt;&lt;pre&gt;In [&lt;span class="pl-c1"&gt;5&lt;/span&gt;]: s &lt;span class="pl-k"&gt;=&lt;/span&gt; pd.Series(&lt;span class="pl-c1"&gt;list&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;abaccd&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;))
In [&lt;span class="pl-c1"&gt;6&lt;/span&gt;]: pd.get_dummies(s)
Out[&lt;span class="pl-c1"&gt;6&lt;/span&gt;]:
   a  b  c  d
&lt;span class="pl-c1"&gt;0&lt;/span&gt;  &lt;span class="pl-c1"&gt;1&lt;/span&gt;  &lt;span class="pl-c1"&gt;0&lt;/span&gt;  &lt;span class="pl-c1"&gt;0&lt;/span&gt;  &lt;span class="pl-c1"&gt;0&lt;/span&gt;
&lt;span class="pl-c1"&gt;1&lt;/span&gt;  &lt;span class="pl-c1"&gt;0&lt;/span&gt;  &lt;span class="pl-c1"&gt;1&lt;/span&gt;  &lt;span class="pl-c1"&gt;0&lt;/span&gt;  &lt;span class="pl-c1"&gt;0&lt;/span&gt;
&lt;span class="pl-c1"&gt;2&lt;/span&gt;  &lt;span class="pl-c1"&gt;1&lt;/span&gt;  &lt;span class="pl-c1"&gt;0&lt;/span&gt;  &lt;span class="pl-c1"&gt;0&lt;/span&gt;  &lt;span class="pl-c1"&gt;0&lt;/span&gt;
&lt;span class="pl-c1"&gt;3&lt;/span&gt;  &lt;span class="pl-c1"&gt;0&lt;/span&gt;  &lt;span class="pl-c1"&gt;0&lt;/span&gt;  &lt;span class="pl-c1"&gt;1&lt;/span&gt;  &lt;span class="pl-c1"&gt;0&lt;/span&gt;
&lt;span class="pl-c1"&gt;4&lt;/span&gt;  &lt;span class="pl-c1"&gt;0&lt;/span&gt;  &lt;span class="pl-c1"&gt;0&lt;/span&gt;  &lt;span class="pl-c1"&gt;1&lt;/span&gt;  &lt;span class="pl-c1"&gt;0&lt;/span&gt;
&lt;span class="pl-c1"&gt;5&lt;/span&gt;  &lt;span class="pl-c1"&gt;0&lt;/span&gt;  &lt;span class="pl-c1"&gt;0&lt;/span&gt;  &lt;span class="pl-c1"&gt;0&lt;/span&gt;  &lt;span class="pl-c1"&gt;1&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;也就是说dummy向量的长度等于输入字符串中，唯一字符的个数。&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-十一一步一步掌握flask-web开发" class="anchor" aria-hidden="true" href="#十一一步一步掌握flask-web开发"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;十一、一步一步掌握Flask web开发&lt;/h3&gt;
&lt;h4&gt;&lt;a id="user-content-1-flask版-hello-world" class="anchor" aria-hidden="true" href="#1-flask版-hello-world"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;1 Flask版 hello world&lt;/h4&gt;
&lt;p&gt;Flask是Python轻量级web框架，容易上手，被广大Python开发者所喜爱。&lt;/p&gt;
&lt;p&gt;今天我们先从hello world开始，一步一步掌握Flask web开发。例子君是Flask框架的小白，接下来与读者朋友们，一起学习这个对我而言的新框架，大家多多指导。&lt;/p&gt;
&lt;p&gt;首先&lt;code&gt;pip install Flask&lt;/code&gt;,安装Flask，然后import Flask，同时创建一个 &lt;code&gt;app&lt;/code&gt;&lt;/p&gt;
&lt;div class="highlight highlight-source-python"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;from&lt;/span&gt; flask &lt;span class="pl-k"&gt;import&lt;/span&gt; Flask

App &lt;span class="pl-k"&gt;=&lt;/span&gt; Flask(&lt;span class="pl-c1"&gt;__name__&lt;/span&gt;)&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;写一个index页的入口函数，返回hello world.&lt;/p&gt;
&lt;p&gt;通过装饰器：App.route('/')创建index页的路由或地址，一个&lt;code&gt;/&lt;/code&gt;表示index页，也就是主页。&lt;/p&gt;
&lt;div class="highlight highlight-source-python"&gt;&lt;pre&gt;&lt;span class="pl-en"&gt;@App.route&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;/&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;)
&lt;span class="pl-k"&gt;def&lt;/span&gt; &lt;span class="pl-en"&gt;index&lt;/span&gt;():
    &lt;span class="pl-k"&gt;return&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;hello world&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;调用 &lt;code&gt;index&lt;/code&gt;函数:&lt;/p&gt;
&lt;div class="highlight highlight-source-python"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;if&lt;/span&gt; &lt;span class="pl-c1"&gt;__name__&lt;/span&gt; &lt;span class="pl-k"&gt;==&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;__main__&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;:
    App.run(&lt;span class="pl-v"&gt;debug&lt;/span&gt;&lt;span class="pl-k"&gt;=&lt;/span&gt;&lt;span class="pl-c1"&gt;True&lt;/span&gt;)&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;然后启动，会在console下看到如下启动信息，表明&lt;code&gt;服务启动成功&lt;/code&gt;。&lt;/p&gt;
&lt;div class="highlight highlight-source-python"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;*&lt;/span&gt; Debug mode: on
 &lt;span class="pl-k"&gt;*&lt;/span&gt; Restarting &lt;span class="pl-k"&gt;with&lt;/span&gt; stat
 &lt;span class="pl-k"&gt;*&lt;/span&gt; Debugger &lt;span class="pl-k"&gt;is&lt;/span&gt; active!
 &lt;span class="pl-k"&gt;*&lt;/span&gt; Debugger &lt;span class="pl-c1"&gt;PIN&lt;/span&gt;: &lt;span class="pl-c1"&gt;663&lt;/span&gt;&lt;span class="pl-k"&gt;-&lt;/span&gt;&lt;span class="pl-c1"&gt;788&lt;/span&gt;&lt;span class="pl-k"&gt;-&lt;/span&gt;&lt;span class="pl-c1"&gt;611&lt;/span&gt;
 &lt;span class="pl-k"&gt;*&lt;/span&gt; Running on http:&lt;span class="pl-k"&gt;//&lt;/span&gt;&lt;span class="pl-c1"&gt;127.0&lt;/span&gt;.0.1:&lt;span class="pl-c1"&gt;5000&lt;/span&gt;&lt;span class="pl-k"&gt;/&lt;/span&gt; (Press &lt;span class="pl-c1"&gt;CTRL&lt;/span&gt;&lt;span class="pl-k"&gt;+&lt;/span&gt;C to &lt;span class="pl-c1"&gt;quit&lt;/span&gt;)&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;接下来，打开一个网页，相当于启动客户端，并在Url栏中输入：&lt;code&gt;http://127.0.0.1:5000/&lt;/code&gt;，看到页面上答应出&lt;code&gt;hello world&lt;/code&gt;，证明服务访问成功。&lt;/p&gt;
&lt;p&gt;同时在服务端后台看到如下信息，表示处理一次来自客户端的&lt;code&gt;get&lt;/code&gt;请求。&lt;/p&gt;
&lt;div class="highlight highlight-source-python"&gt;&lt;pre&gt;&lt;span class="pl-c1"&gt;27.0&lt;/span&gt;.0.1 &lt;span class="pl-k"&gt;-&lt;/span&gt; &lt;span class="pl-k"&gt;-&lt;/span&gt; [&lt;span class="pl-c1"&gt;0&lt;span class="pl-ii"&gt;3&lt;/span&gt;&lt;/span&gt;&lt;span class="pl-k"&gt;/&lt;/span&gt;Feb&lt;span class="pl-k"&gt;/&lt;/span&gt;&lt;span class="pl-c1"&gt;2020&lt;/span&gt; &lt;span class="pl-c1"&gt;21&lt;/span&gt;:&lt;span class="pl-c1"&gt;26&lt;/span&gt;:&lt;span class="pl-c1"&gt;50&lt;/span&gt;] &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;GET / HTTP/1.1&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; &lt;span class="pl-c1"&gt;200&lt;/span&gt; &lt;span class="pl-k"&gt;-&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;以上就是flask的hello world 版&lt;/p&gt;
&lt;h4&gt;&lt;a id="user-content-2-flask之数据入库操作" class="anchor" aria-hidden="true" href="#2-flask之数据入库操作"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;2 Flask之数据入库操作&lt;/h4&gt;
&lt;p&gt;数据持久化就是将数据写入到数据库存储的过程。&lt;/p&gt;
&lt;p&gt;本例子使用&lt;code&gt;sqlite3&lt;/code&gt;数据库。&lt;/p&gt;
&lt;p&gt;1)导入&lt;code&gt;sqlite3&lt;/code&gt;，未安装前使用命令&lt;code&gt;pip install sqlite3&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;创建一个&lt;code&gt;py&lt;/code&gt;文件：&lt;code&gt;sqlite3_started.py&lt;/code&gt;，并写下第一行代码：&lt;/p&gt;
&lt;div class="highlight highlight-source-python"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;import&lt;/span&gt; sqlite3&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;2)手动创建一个数据库实例&lt;code&gt;db&lt;/code&gt;, 命名&lt;code&gt;test.db&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;3)创建与数据库实例&lt;code&gt;test.db&lt;/code&gt;的连接:&lt;/p&gt;
&lt;div class="highlight highlight-source-python"&gt;&lt;pre&gt;conn &lt;span class="pl-k"&gt;=&lt;/span&gt; sqlite3.connect(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;test.db&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;4)拿到连接&lt;code&gt;conn&lt;/code&gt;的cursor&lt;/p&gt;
&lt;div class="highlight highlight-source-python"&gt;&lt;pre&gt;c &lt;span class="pl-k"&gt;=&lt;/span&gt; conn.cursor()&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;5)创建第一张表&lt;code&gt;books&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;共有四个字段：&lt;code&gt;id&lt;/code&gt;,&lt;code&gt;sort&lt;/code&gt;,&lt;code&gt;name&lt;/code&gt;,&lt;code&gt;price&lt;/code&gt;，类型分别为：&lt;code&gt;int&lt;/code&gt;,&lt;code&gt;int&lt;/code&gt;,&lt;code&gt;text&lt;/code&gt;,&lt;code&gt;real&lt;/code&gt;. 其中&lt;code&gt;id&lt;/code&gt;为&lt;code&gt;primary key&lt;/code&gt;. 主键的取值必须是唯一的(&lt;code&gt;unique&lt;/code&gt;)，否则会报错。&lt;/p&gt;
&lt;div class="highlight highlight-source-python"&gt;&lt;pre&gt;c.execute(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'''&lt;/span&gt;CREATE TABLE books&lt;/span&gt;
&lt;span class="pl-s"&gt;      (id int primary key,&lt;/span&gt;
&lt;span class="pl-s"&gt;       sort int,&lt;/span&gt;
&lt;span class="pl-s"&gt;       name text,&lt;/span&gt;
&lt;span class="pl-s"&gt;       price real)&lt;span class="pl-pds"&gt;'''&lt;/span&gt;&lt;/span&gt;)&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;第一次执行上面语句，表&lt;code&gt;books&lt;/code&gt;创建完成。当再次执行时，就会报&lt;code&gt;重复建表&lt;/code&gt;的错误。需要优化脚本，检查表是否存在&lt;code&gt;IF NOT EXISTS books&lt;/code&gt;，不存在再创建：&lt;/p&gt;
&lt;div class="highlight highlight-source-python"&gt;&lt;pre&gt;c.execute(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'''&lt;/span&gt;CREATE TABLE IF NOT EXISTS books&lt;/span&gt;
&lt;span class="pl-s"&gt;      (id int primary key,&lt;/span&gt;
&lt;span class="pl-s"&gt;       sort int,&lt;/span&gt;
&lt;span class="pl-s"&gt;       name text,&lt;/span&gt;
&lt;span class="pl-s"&gt;       price real)&lt;span class="pl-pds"&gt;'''&lt;/span&gt;&lt;/span&gt;)&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;6)插入一行记录&lt;/p&gt;
&lt;p&gt;共为4个字段赋值&lt;/p&gt;
&lt;div class="highlight highlight-source-python"&gt;&lt;pre&gt;c.execute(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'''&lt;/span&gt;INSERT INTO books VALUES&lt;/span&gt;
&lt;span class="pl-s"&gt;       (1, &lt;/span&gt;
&lt;span class="pl-s"&gt;       1, &lt;/span&gt;
&lt;span class="pl-s"&gt;       'computer science',&lt;/span&gt;
&lt;span class="pl-s"&gt;       39.0)&lt;span class="pl-pds"&gt;'''&lt;/span&gt;&lt;/span&gt;)&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;7)一次插入多行记录&lt;/p&gt;
&lt;p&gt;先创建一个list:&lt;code&gt;books&lt;/code&gt;，使用&lt;code&gt;executemany&lt;/code&gt;一次插入多行。&lt;/p&gt;
&lt;div class="highlight highlight-source-python"&gt;&lt;pre&gt;books &lt;span class="pl-k"&gt;=&lt;/span&gt; [(&lt;span class="pl-c1"&gt;2&lt;/span&gt;, &lt;span class="pl-c1"&gt;2&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;Cook book&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-c1"&gt;68&lt;/span&gt;),
         (&lt;span class="pl-c1"&gt;3&lt;/span&gt;, &lt;span class="pl-c1"&gt;2&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;Python intro&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-c1"&gt;89&lt;/span&gt;),
         (&lt;span class="pl-c1"&gt;4&lt;/span&gt;, &lt;span class="pl-c1"&gt;3&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;machine learning&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-c1"&gt;59&lt;/span&gt;),
         ]


c.executemany(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;INSERT INTO books VALUES (?, ?, ?, ?)&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;, books)&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;8)提交&lt;/p&gt;
&lt;p&gt;提交后才会真正生效，写入到数据库&lt;/p&gt;
&lt;div class="highlight highlight-source-python"&gt;&lt;pre&gt;conn.commit()&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;9)关闭期初建立的连接conn&lt;/p&gt;
&lt;p&gt;务必记住手动关闭，否则会出现内存泄漏&lt;/p&gt;
&lt;div class="highlight highlight-source-python"&gt;&lt;pre&gt;conn.close()
&lt;span class="pl-c1"&gt;print&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;Done&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;)&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;10)查看结果
例子君使用&lt;code&gt;vs code&lt;/code&gt;，在扩展库中选择：&lt;code&gt;SQLite&lt;/code&gt;安装。&lt;/p&gt;
&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="./img/image-20200208211721377.png"&gt;&lt;img src="./img/image-20200208211721377.png" alt="image-20200208211721377" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;新建一个&lt;code&gt;sq&lt;/code&gt;文件：&lt;code&gt;a.sql&lt;/code&gt;，内容如下：&lt;/p&gt;
&lt;div class="highlight highlight-source-sql"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;SELECT&lt;/span&gt; &lt;span class="pl-k"&gt;*&lt;/span&gt; &lt;span class="pl-k"&gt;from&lt;/span&gt; books &lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;右键&lt;code&gt;run query&lt;/code&gt;，得到表&lt;code&gt;books&lt;/code&gt;插入的4行记录可视化图：&lt;/p&gt;
&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="./img/image-20200208211806853.png"&gt;&lt;img src="./img/image-20200208211806853.png" alt="image-20200208211806853" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;以上十步就是sqlite3写入数据库的主要步骤，作为Flask系列的第二篇，为后面的前端讲解打下基础。&lt;/p&gt;
&lt;/article&gt;&lt;/div&gt;</description><author>jackzhenguo</author><guid isPermaLink="false">https://github.com/jackzhenguo/python-small-examples</guid><pubDate>Mon, 10 Feb 2020 00:15:00 GMT</pubDate></item><item><title>quantumblacklabs/causalnex #16 in Python, This week</title><link>https://github.com/quantumblacklabs/causalnex</link><description>&lt;p&gt;&lt;i&gt;A Python library that helps data scientists to infer causation rather than observing correlation.&lt;/i&gt;&lt;/p&gt;&lt;div id="readme" class="md" data-path="README.md"&gt;&lt;article class="markdown-body entry-content p-5" itemprop="text"&gt;&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="https://raw.githubusercontent.com/quantumblacklabs/causalnex/master/docs/source/causalnex_banner.png"&gt;&lt;img src="https://raw.githubusercontent.com/quantumblacklabs/causalnex/master/docs/source/causalnex_banner.png" alt="CausalNex" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Theme&lt;/th&gt;
&lt;th&gt;Status&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;Latest Release&lt;/td&gt;
&lt;td&gt;&lt;a href="https://pypi.org/project/causalnex/" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/2fe0fed64233ea771a151e4370c51a7f6599ce7a/68747470733a2f2f62616467652e667572792e696f2f70792f63617573616c6e65782e737667" alt="PyPI version" data-canonical-src="https://badge.fury.io/py/causalnex.svg" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Python Version&lt;/td&gt;
&lt;td&gt;&lt;a href="https://pypi.org/project/causalnex/" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/afb1cec38b66cde0f87c123e96a4bf19ff698f60/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f707974686f6e2d332e35253230253743253230332e36253230253743253230332e372d626c75652e737667" alt="Python Version" data-canonical-src="https://img.shields.io/badge/python-3.5%20%7C%203.6%20%7C%203.7-blue.svg" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;master&lt;/code&gt; Branch Build&lt;/td&gt;
&lt;td&gt;&lt;a href="https://circleci.com/gh/quantumblacklabs/causalnex/tree/master" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/126527e2e944781084e12a1039ded3e3c5bafcf2/68747470733a2f2f636972636c6563692e636f6d2f67682f7175616e74756d626c61636b6c6162732f63617573616c6e65782f747265652f6d61737465722e7376673f7374796c653d736869656c6426636972636c652d746f6b656e3d39326162373066303366333138333635353437336461643136626536343139353963643331623833" alt="CircleCI" data-canonical-src="https://circleci.com/gh/quantumblacklabs/causalnex/tree/master.svg?style=shield&amp;amp;circle-token=92ab70f03f3183655473dad16be641959cd31b83" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;develop&lt;/code&gt; Branch Build&lt;/td&gt;
&lt;td&gt;&lt;a href="https://circleci.com/gh/quantumblacklabs/causalnex/tree/develop" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/81dfb83e7aa12c7f75be5dd0add989b6991c3797/68747470733a2f2f636972636c6563692e636f6d2f67682f7175616e74756d626c61636b6c6162732f63617573616c6e65782f747265652f646576656c6f702e7376673f7374796c653d736869656c6426636972636c652d746f6b656e3d39326162373066303366333138333635353437336461643136626536343139353963643331623833" alt="CircleCI" data-canonical-src="https://circleci.com/gh/quantumblacklabs/causalnex/tree/develop.svg?style=shield&amp;amp;circle-token=92ab70f03f3183655473dad16be641959cd31b83" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Documentation Build&lt;/td&gt;
&lt;td&gt;&lt;a href="https://causalnex.readthedocs.io/" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/26063ee32dc66a1448a97a9d8d8070308bc91092/68747470733a2f2f72656164746865646f63732e6f72672f70726f6a656374732f63617573616c6e65782f62616467652f3f76657273696f6e3d6c6174657374" alt="Documentation" data-canonical-src="https://readthedocs.org/projects/causalnex/badge/?version=latest" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;License&lt;/td&gt;
&lt;td&gt;&lt;a href="https://opensource.org/licenses/Apache-2.0" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/208c24da54eea1ae12f8abed5dcc6b84b6ce8440/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f6c6963656e73652d417061636865253230322e302d626c75652e737667" alt="License" data-canonical-src="https://img.shields.io/badge/license-Apache%202.0-blue.svg" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Code Style&lt;/td&gt;
&lt;td&gt;&lt;a href="https://github.com/ambv/black"&gt;&lt;img src="https://camo.githubusercontent.com/af101b6e2ffeb62c0019ef67b84d5ce4dbe850d1/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f636f64652532307374796c652d626c61636b2d626c61636b2e737667" alt="Code Style: Black" data-canonical-src="https://img.shields.io/badge/code%20style-black-black.svg" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h2&gt;&lt;a id="user-content-what-is-causalnex" class="anchor" aria-hidden="true" href="#what-is-causalnex"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;What is CausalNex?&lt;/h2&gt;
&lt;blockquote&gt;
&lt;p&gt;"A toolkit for causal reasoning with Bayesian Networks."&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;CausalNex aims to become one of the leading libraries for causal reasoning and "what-if" analysis using Bayesian Networks. It helps to simplify the steps:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;To learn causal structures,&lt;/li&gt;
&lt;li&gt;To allow domain experts to augment the relationships,&lt;/li&gt;
&lt;li&gt;To estimate the effects of potential interventions using data.&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-why-causalnex" class="anchor" aria-hidden="true" href="#why-causalnex"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Why CausalNex?&lt;/h2&gt;
&lt;p&gt;CausalNex is built on our collective experience to leverage Bayesian Networks to identify causal relationships in data so that we can develop the right interventions from analytics. We developed CausalNex because:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;We believe &lt;strong&gt;leveraging Bayesian Networks&lt;/strong&gt; is more intuitive to describe causality compared to traditional machine learning methodology that are built on pattern recognition and correlation analysis.&lt;/li&gt;
&lt;li&gt;Causal relationships are more accurate if we can easily &lt;strong&gt;encode or augment domain expertise&lt;/strong&gt; in the graph model.&lt;/li&gt;
&lt;li&gt;We can then use the graph model to &lt;strong&gt;assess the impact&lt;/strong&gt; from changes to underlying features, i.e. counterfactual analysis, and &lt;strong&gt;identify the right intervention&lt;/strong&gt;.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;In our experience, a data scientist generally has to use at least 3-4 different open-source libraries before arriving at the final step of finding the right intervention.  CausalNex aims to simplify this end-to-end process for causality and counterfactual analysis.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-what-are-the-main-features-of-causalnex" class="anchor" aria-hidden="true" href="#what-are-the-main-features-of-causalnex"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;What are the main features of CausalNex?&lt;/h2&gt;
&lt;p&gt;The main features of this library are:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Use state-of-the-art structure learning methods to understand conditional dependencies between variables&lt;/li&gt;
&lt;li&gt;Allow domain knowledge to augment model relationship&lt;/li&gt;
&lt;li&gt;Build predictive models based on structural relationships&lt;/li&gt;
&lt;li&gt;Fit probability distribution of the Bayesian Networks&lt;/li&gt;
&lt;li&gt;Evaluate model quality with standard statistical checks&lt;/li&gt;
&lt;li&gt;Simplify how causality is understood in Bayesian Networks through visualisation&lt;/li&gt;
&lt;li&gt;Analyse the impact of interventions using Do-calculus&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-how-do-i-install-causalnex" class="anchor" aria-hidden="true" href="#how-do-i-install-causalnex"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;How do I install CausalNex?&lt;/h2&gt;
&lt;p&gt;CausalNex is a Python package. To install it, simply run:&lt;/p&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt;pip install causalnex&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;See more detailed installation instructions, including how to setup Python virtual environments, in our &lt;a href="https://causalnex.readthedocs.io/en/latest/02_getting_started/02_install.html" rel="nofollow"&gt;installation guide&lt;/a&gt; and get started with our &lt;a href="https://causalnex.readthedocs.io/en/latest/03_tutorial/03_tutorial.html" rel="nofollow"&gt;tutorial&lt;/a&gt;.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-how-do-i-use-causalnex" class="anchor" aria-hidden="true" href="#how-do-i-use-causalnex"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;How do I use CausalNex?&lt;/h2&gt;
&lt;p&gt;You can find the documentation for the latest stable release &lt;a href="https://causalnex.readthedocs.io/en/latest/" rel="nofollow"&gt;here&lt;/a&gt;. It explains:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;An end-to-end &lt;a href="https://causalnex.readthedocs.io/en/latest/03_tutorial/03_tutorial.html" rel="nofollow"&gt;tutorial on how to use CausalNex&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;The &lt;a href="https://causalnex.readthedocs.io/en/latest/04_user_guide/04_user_guide.html" rel="nofollow"&gt;main concepts and methods&lt;/a&gt; in using Bayesian Networks for Causal Inference&lt;/li&gt;
&lt;/ul&gt;
&lt;blockquote&gt;
&lt;p&gt;Note: You can find the notebook and markdown files used to build the docs in &lt;a href="docs/source"&gt;&lt;code&gt;docs/source&lt;/code&gt;&lt;/a&gt;.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2&gt;&lt;a id="user-content-can-i-contribute" class="anchor" aria-hidden="true" href="#can-i-contribute"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Can I contribute?&lt;/h2&gt;
&lt;p&gt;Yes! We'd love you to join us and help us build CausalNex. Check out our &lt;a href="CONTRIBUTING.md"&gt;contributing&lt;/a&gt; documentation.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-how-do-i-upgrade-causalnex" class="anchor" aria-hidden="true" href="#how-do-i-upgrade-causalnex"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;How do I upgrade CausalNex?&lt;/h2&gt;
&lt;p&gt;We use &lt;a href="http://semver.org/" rel="nofollow"&gt;SemVer&lt;/a&gt; for versioning. The best way to upgrade safely is to check our &lt;a href="RELEASE.md"&gt;release notes&lt;/a&gt; for any notable breaking changes.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-what-licence-do-you-use" class="anchor" aria-hidden="true" href="#what-licence-do-you-use"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;What licence do you use?&lt;/h2&gt;
&lt;p&gt;See our &lt;a href="LICENSE.md"&gt;LICENSE&lt;/a&gt; for more detail.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-were-hiring" class="anchor" aria-hidden="true" href="#were-hiring"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;We're hiring!&lt;/h2&gt;
&lt;p&gt;Do you want to be part of the team that builds CausalNex and &lt;a href="https://quantumblack.com/labs" rel="nofollow"&gt;other great products&lt;/a&gt; at QuantumBlack? If so, you're in luck! QuantumBlack is currently hiring Machine Learning Engineers who love using data to drive their decisions. Take a look at &lt;a href="https://www.quantumblack.com/careers/current-openings#content" rel="nofollow"&gt;our open positions&lt;/a&gt; and see if you're a fit.&lt;/p&gt;
&lt;/article&gt;&lt;/div&gt;</description><author>quantumblacklabs</author><guid isPermaLink="false">https://github.com/quantumblacklabs/causalnex</guid><pubDate>Mon, 10 Feb 2020 00:16:00 GMT</pubDate></item><item><title>openai/spinningup #17 in Python, This week</title><link>https://github.com/openai/spinningup</link><description>&lt;p&gt;&lt;i&gt;An educational resource to help anyone learn deep reinforcement learning.&lt;/i&gt;&lt;/p&gt;&lt;div id="readme" class="md" data-path="readme.md"&gt;&lt;article class="markdown-body entry-content p-5" itemprop="text"&gt;&lt;p&gt;&lt;strong&gt;Status:&lt;/strong&gt; Maintenance (expect bug fixes and minor updates)&lt;/p&gt;
&lt;h1&gt;&lt;a id="user-content-welcome-to-spinning-up-in-deep-rl" class="anchor" aria-hidden="true" href="#welcome-to-spinning-up-in-deep-rl"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Welcome to Spinning Up in Deep RL!&lt;/h1&gt;
&lt;p&gt;This is an educational resource produced by OpenAI that makes it easier to learn about deep reinforcement learning (deep RL).&lt;/p&gt;
&lt;p&gt;For the unfamiliar: &lt;a href="https://en.wikipedia.org/wiki/Reinforcement_learning" rel="nofollow"&gt;reinforcement learning&lt;/a&gt; (RL) is a machine learning approach for teaching agents how to solve tasks by trial and error. Deep RL refers to the combination of RL with &lt;a href="http://ufldl.stanford.edu/tutorial/" rel="nofollow"&gt;deep learning&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;This module contains a variety of helpful resources, including:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;a short &lt;a href="https://spinningup.openai.com/en/latest/spinningup/rl_intro.html" rel="nofollow"&gt;introduction&lt;/a&gt; to RL terminology, kinds of algorithms, and basic theory,&lt;/li&gt;
&lt;li&gt;an &lt;a href="https://spinningup.openai.com/en/latest/spinningup/spinningup.html" rel="nofollow"&gt;essay&lt;/a&gt; about how to grow into an RL research role,&lt;/li&gt;
&lt;li&gt;a &lt;a href="https://spinningup.openai.com/en/latest/spinningup/keypapers.html" rel="nofollow"&gt;curated list&lt;/a&gt; of important papers organized by topic,&lt;/li&gt;
&lt;li&gt;a well-documented &lt;a href="https://github.com/openai/spinningup"&gt;code repo&lt;/a&gt; of short, standalone implementations of key algorithms,&lt;/li&gt;
&lt;li&gt;and a few &lt;a href="https://spinningup.openai.com/en/latest/spinningup/exercises.html" rel="nofollow"&gt;exercises&lt;/a&gt; to serve as warm-ups.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Get started at &lt;a href="https://spinningup.openai.com" rel="nofollow"&gt;spinningup.openai.com&lt;/a&gt;!&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-citing-spinning-up" class="anchor" aria-hidden="true" href="#citing-spinning-up"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Citing Spinning Up&lt;/h2&gt;
&lt;p&gt;If you reference or use Spinning Up in your research, please cite:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;@article{SpinningUp2018,
    author = {Achiam, Joshua},
    title = {{Spinning Up in Deep Reinforcement Learning}},
    year = {2018}
}
&lt;/code&gt;&lt;/pre&gt;
&lt;/article&gt;&lt;/div&gt;</description><author>openai</author><guid isPermaLink="false">https://github.com/openai/spinningup</guid><pubDate>Mon, 10 Feb 2020 00:17:00 GMT</pubDate></item><item><title>odoo/odoo #18 in Python, This week</title><link>https://github.com/odoo/odoo</link><description>&lt;p&gt;&lt;i&gt;Odoo. Open Source Apps To Grow Your Business.&lt;/i&gt;&lt;/p&gt;&lt;div id="readme" class="md" data-path="README.md"&gt;&lt;article class="markdown-body entry-content p-5" itemprop="text"&gt;&lt;p&gt;&lt;a href="http://runbot.odoo.com/runbot" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/66c5de42dd962507fe2b9857b8d2f6f765f6a2c1/687474703a2f2f72756e626f742e6f646f6f2e636f6d2f72756e626f742f62616467652f666c61742f312f6d61737465722e737667" alt="Build Status" data-canonical-src="http://runbot.odoo.com/runbot/badge/flat/1/master.svg" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="http://www.odoo.com/documentation/master" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/12f67c54ef5a41e6f84b4cd11e34e42596bef6bc/687474703a2f2f696d672e736869656c64732e696f2f62616467652f6d61737465722d646f63732d3837354137422e7376673f7374796c653d666c617426636f6c6f72413d384638463846" alt="Tech Doc" data-canonical-src="http://img.shields.io/badge/master-docs-875A7B.svg?style=flat&amp;amp;colorA=8F8F8F" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://www.odoo.com/forum/help-1" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/d17ccc6a6609eef8e1f213232e09f037c135b696/687474703a2f2f696d672e736869656c64732e696f2f62616467652f6d61737465722d68656c702d3837354137422e7376673f7374796c653d666c617426636f6c6f72413d384638463846" alt="Help" data-canonical-src="http://img.shields.io/badge/master-help-875A7B.svg?style=flat&amp;amp;colorA=8F8F8F" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="http://nightly.odoo.com/" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/8c476ef1a5a56e3a86deb5458ec6a30d27a140bd/687474703a2f2f696d672e736869656c64732e696f2f62616467652f6d61737465722d6e696768746c792d3837354137422e7376673f7374796c653d666c617426636f6c6f72413d384638463846" alt="Nightly Builds" data-canonical-src="http://img.shields.io/badge/master-nightly-875A7B.svg?style=flat&amp;amp;colorA=8F8F8F" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-odoo" class="anchor" aria-hidden="true" href="#odoo"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Odoo&lt;/h2&gt;
&lt;p&gt;Odoo is a suite of web based open source business apps.&lt;/p&gt;
&lt;p&gt;The main Odoo Apps include an &lt;a href="https://www.odoo.com/page/crm" rel="nofollow"&gt;Open Source CRM&lt;/a&gt;,
&lt;a href="https://www.odoo.com/page/website-builder" rel="nofollow"&gt;Website Builder&lt;/a&gt;,
&lt;a href="https://www.odoo.com/page/e-commerce" rel="nofollow"&gt;eCommerce&lt;/a&gt;,
&lt;a href="https://www.odoo.com/page/warehouse" rel="nofollow"&gt;Warehouse Management&lt;/a&gt;,
&lt;a href="https://www.odoo.com/page/project-management" rel="nofollow"&gt;Project Management&lt;/a&gt;,
&lt;a href="https://www.odoo.com/page/accounting" rel="nofollow"&gt;Billing &amp;amp; Accounting&lt;/a&gt;,
&lt;a href="https://www.odoo.com/page/point-of-sale" rel="nofollow"&gt;Point of Sale&lt;/a&gt;,
&lt;a href="https://www.odoo.com/page/employees" rel="nofollow"&gt;Human Resources&lt;/a&gt;,
&lt;a href="https://www.odoo.com/page/lead-automation" rel="nofollow"&gt;Marketing&lt;/a&gt;,
&lt;a href="https://www.odoo.com/page/manufacturing" rel="nofollow"&gt;Manufacturing&lt;/a&gt;,
&lt;a href="https://www.odoo.com/#apps" rel="nofollow"&gt;...&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Odoo Apps can be used as stand-alone applications, but they also integrate seamlessly so you get
a full-featured &lt;a href="https://www.odoo.com" rel="nofollow"&gt;Open Source ERP&lt;/a&gt; when you install several Apps.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-getting-started-with-odoo" class="anchor" aria-hidden="true" href="#getting-started-with-odoo"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Getting started with Odoo&lt;/h2&gt;
&lt;p&gt;For a standard installation please follow the &lt;a href="https://www.odoo.com/documentation/master/setup/install.html" rel="nofollow"&gt;Setup instructions&lt;/a&gt;
from the documentation.&lt;/p&gt;
&lt;p&gt;To learn the software, we recommend the &lt;a href="https://www.odoo.com/slides" rel="nofollow"&gt;Odoo eLearning&lt;/a&gt;, or &lt;a href="https://www.odoo.com/page/scale-up-business-game" rel="nofollow"&gt;Scale-up&lt;/a&gt;, the &lt;a href="https://www.odoo.com/page/scale-up-business-game" rel="nofollow"&gt;business game&lt;/a&gt;. Developers can start with &lt;a href="https://www.odoo.com/documentation/master/tutorials.html" rel="nofollow"&gt;the developer tutorials&lt;/a&gt;&lt;/p&gt;
&lt;/article&gt;&lt;/div&gt;</description><author>odoo</author><guid isPermaLink="false">https://github.com/odoo/odoo</guid><pubDate>Mon, 10 Feb 2020 00:18:00 GMT</pubDate></item><item><title>evilsocket/opensnitch #19 in Python, This week</title><link>https://github.com/evilsocket/opensnitch</link><description>&lt;p&gt;&lt;i&gt;OpenSnitch is a GNU/Linux port of the Little Snitch application firewall&lt;/i&gt;&lt;/p&gt;&lt;div id="readme" class="md" data-path="README.md"&gt;&lt;article class="markdown-body entry-content p-5" itemprop="text"&gt;&lt;p align="center"&gt;
  &lt;a target="_blank" rel="noopener noreferrer" href="https://raw.githubusercontent.com/evilsocket/opensnitch/master/ui/opensnitch/res/icon.png"&gt;&lt;img alt="opensnitch" src="https://raw.githubusercontent.com/evilsocket/opensnitch/master/ui/opensnitch/res/icon.png" height="160" style="max-width:100%;"&gt;&lt;/a&gt;
  &lt;/p&gt;&lt;p align="center"&gt;
    &lt;a href="https://github.com/evilsocket/opensnitch/releases/latest"&gt;&lt;img alt="Release" src="https://camo.githubusercontent.com/04cc4faf7a392ea64118b4a47281e7a98e505a47/68747470733a2f2f696d672e736869656c64732e696f2f6769746875622f72656c656173652f6576696c736f636b65742f6f70656e736e697463682e7376673f7374796c653d666c61742d737175617265" data-canonical-src="https://img.shields.io/github/release/evilsocket/opensnitch.svg?style=flat-square" style="max-width:100%;"&gt;&lt;/a&gt;
    &lt;a href="https://github.com/evilsocket/opensnitch/blob/master/LICENSE.md"&gt;&lt;img alt="Software License" src="https://camo.githubusercontent.com/268d96c6dd81f1fff98b19675ef5867412a2a223/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f6c6963656e73652d47504c332d627269676874677265656e2e7376673f7374796c653d666c61742d737175617265" data-canonical-src="https://img.shields.io/badge/license-GPL3-brightgreen.svg?style=flat-square" style="max-width:100%;"&gt;&lt;/a&gt;
    &lt;a href="https://goreportcard.com/report/github.com/evilsocket/opensnitch/daemon" rel="nofollow"&gt;&lt;img alt="Go Report Card" src="https://camo.githubusercontent.com/23859f0c3cd66d70e79573c28f213c3b8b2f8400/68747470733a2f2f676f7265706f7274636172642e636f6d2f62616467652f6769746875622e636f6d2f6576696c736f636b65742f6f70656e736e697463682f6461656d6f6e3f7374796c653d666c61742d737175617265" data-canonical-src="https://goreportcard.com/badge/github.com/evilsocket/opensnitch/daemon?style=flat-square" style="max-width:100%;"&gt;&lt;/a&gt;
  &lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;OpenSnitch&lt;/strong&gt; is a GNU/Linux port of the Little Snitch application firewall.&lt;/p&gt;
&lt;p align="center"&gt;
  &lt;a target="_blank" rel="noopener noreferrer" href="https://raw.githubusercontent.com/evilsocket/opensnitch/master/screenshot.png"&gt;&lt;img src="https://raw.githubusercontent.com/evilsocket/opensnitch/master/screenshot.png" alt="OpenSnitch" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;THIS SOFTWARE IS WORK IN PROGRESS, DO NOT EXPECT IT TO BE BUG FREE AND DO NOT RELY ON IT FOR ANY TYPE OF SECURITY.&lt;/strong&gt;&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-tldr" class="anchor" aria-hidden="true" href="#tldr"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;TL;DR&lt;/h3&gt;
&lt;p&gt;Make sure you have a correctly configured &lt;strong&gt;Go &amp;gt;= 1.8&lt;/strong&gt; environment, that the &lt;code&gt;$GOPATH&lt;/code&gt; environment variable is defined and then:&lt;/p&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; install dependencies&lt;/span&gt;
sudo apt-get install git libnetfilter-queue-dev libpcap-dev protobuf-compiler python3-pip
go get github.com/golang/protobuf/protoc-gen-go
go get -u github.com/golang/dep/cmd/dep
&lt;span class="pl-c1"&gt;cd&lt;/span&gt; &lt;span class="pl-smi"&gt;$GOPATH&lt;/span&gt;/src/github.com/golang/dep
./install.sh
&lt;span class="pl-k"&gt;export&lt;/span&gt; PATH=&lt;span class="pl-smi"&gt;$PATH&lt;/span&gt;:&lt;span class="pl-smi"&gt;$GOPATH&lt;/span&gt;/bin
python3 -m pip install --user grpcio-tools
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; clone the repository (ignore the message about no Go files being found)&lt;/span&gt;
go get github.com/evilsocket/opensnitch
&lt;span class="pl-c1"&gt;cd&lt;/span&gt; &lt;span class="pl-smi"&gt;$GOPATH&lt;/span&gt;/src/github.com/evilsocket/opensnitch
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; compile &amp;amp;&amp;amp; install&lt;/span&gt;
make
sudo make install
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; enable opensnitchd as a systemd service and start the UI&lt;/span&gt;
sudo systemctl &lt;span class="pl-c1"&gt;enable&lt;/span&gt; opensnitchd
sudo service opensnitchd start
opensnitch-ui&lt;/pre&gt;&lt;/div&gt;
&lt;h3&gt;&lt;a id="user-content-daemon" class="anchor" aria-hidden="true" href="#daemon"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Daemon&lt;/h3&gt;
&lt;p&gt;The &lt;code&gt;daemon&lt;/code&gt; is implemented in Go and needs to run as root in order to interact with the Netfilter packet queue, edit
iptables rules and so on, in order to compile it you will need to install the &lt;code&gt;protobuf-compiler&lt;/code&gt;, &lt;code&gt;libpcap-dev&lt;/code&gt; and &lt;code&gt;libnetfilter-queue-dev&lt;/code&gt;
packages on your system, then just:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;cd daemon
make
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;You can then install it as a systemd service by doing:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;sudo make install
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;The new &lt;code&gt;opensnitchd&lt;/code&gt; service will log to &lt;code&gt;/var/log/opensnitchd.log&lt;/code&gt;, save the rules inside &lt;code&gt;/etc/opensnitchd/rules&lt;/code&gt; and connect to the default UI service socket &lt;code&gt;unix:///tmp/osui.sock&lt;/code&gt;.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-ui" class="anchor" aria-hidden="true" href="#ui"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;UI&lt;/h3&gt;
&lt;p&gt;The user interface is a Python 3 software running as a &lt;code&gt;gRPC&lt;/code&gt; server on a unix socket, to order to install its dependencies:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;cd ui
sudo pip3 install -r requirements.txt
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;You will also need to install the package &lt;code&gt;python-pyqt5&lt;/code&gt; for your system (if anyone finds a way to make this work from
the &lt;code&gt;requirements.txt&lt;/code&gt; file feel free to send a PR).&lt;/p&gt;
&lt;p&gt;The UI is pip installable itself:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;sudo pip3 install .
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;This will install the &lt;code&gt;opensnitch-ui&lt;/code&gt; command on your system (you can auto startup it by &lt;code&gt;cp opensnitch_ui.desktop ~/.config/autostart/&lt;/code&gt;).&lt;/p&gt;
&lt;h4&gt;&lt;a id="user-content-ui-configuration" class="anchor" aria-hidden="true" href="#ui-configuration"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;UI Configuration&lt;/h4&gt;
&lt;p&gt;By default the UI will load its configuration from &lt;code&gt;~/.opensnitch/ui-config.json&lt;/code&gt; (customizable with the &lt;code&gt;--config&lt;/code&gt; argument), the
default contents of this file are:&lt;/p&gt;
&lt;div class="highlight highlight-source-json"&gt;&lt;pre&gt;{
	&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;default_timeout&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;: &lt;span class="pl-c1"&gt;15&lt;/span&gt;,
	&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;default_action&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;allow&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;,
	&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;default_duration&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;until restart&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;
}&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;The &lt;code&gt;default_timeout&lt;/code&gt; is the number of seconds after which the UI will take its default action, the &lt;code&gt;default_action&lt;/code&gt; can be &lt;code&gt;allow&lt;/code&gt; or &lt;code&gt;deny&lt;/code&gt;
and the &lt;code&gt;default_duration&lt;/code&gt;, which indicates for how long the default action should be taken, can be &lt;code&gt;once&lt;/code&gt;, &lt;code&gt;until restart&lt;/code&gt; or &lt;code&gt;always&lt;/code&gt; to
persist the action as a new rule on disk.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-running" class="anchor" aria-hidden="true" href="#running"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Running&lt;/h3&gt;
&lt;p&gt;Once you installed both the daemon and the UI, you can enable the &lt;code&gt;opensnitchd&lt;/code&gt; service to run at boot time:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;sudo systemctl enable opensnitchd
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;And run it with:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;sudo service opensnitchd start
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;While the UI can be started just by executing the &lt;code&gt;opensnitch-ui&lt;/code&gt; command.&lt;/p&gt;
&lt;h4&gt;&lt;a id="user-content-single-ui-with-many-computers" class="anchor" aria-hidden="true" href="#single-ui-with-many-computers"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Single UI with many computers&lt;/h4&gt;
&lt;p&gt;You can also use &lt;code&gt;--socket "[::]:50051"&lt;/code&gt; to have the UI use TCP instead of a unix socket and run the daemon on another
computer with &lt;code&gt;-ui-socket "x.x.x.x:50051"&lt;/code&gt; (where &lt;code&gt;x.x.x.x&lt;/code&gt; is the IP of the computer running the UI service).&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-rules" class="anchor" aria-hidden="true" href="#rules"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Rules&lt;/h3&gt;
&lt;p&gt;Rules are stored as JSON files inside the &lt;code&gt;-rule-path&lt;/code&gt; folder, in the simplest cast a rule looks like this:&lt;/p&gt;
&lt;div class="highlight highlight-source-json"&gt;&lt;pre&gt;{
   &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;created&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;2018-04-07T14:13:27.903996051+02:00&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;,
   &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;updated&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;2018-04-07T14:13:27.904060088+02:00&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;,
   &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;name&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;deny-simple-www-google-analytics-l-google-com&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;,
   &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;enabled&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;: &lt;span class="pl-c1"&gt;true&lt;/span&gt;,
   &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;action&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;deny&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;,
   &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;duration&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;always&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;,
   &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;operator&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;: {
     &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;type&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;simple&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;,
     &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;operand&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;dest.host&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;,
     &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;data&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;www-google-analytics.l.google.com&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;
   }
}&lt;/pre&gt;&lt;/div&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Field&lt;/th&gt;
&lt;th&gt;Description&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;created&lt;/td&gt;
&lt;td&gt;UTC date and time of creation.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;update&lt;/td&gt;
&lt;td&gt;UTC date and time of the last update.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;name&lt;/td&gt;
&lt;td&gt;The name of the rule.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;enabled&lt;/td&gt;
&lt;td&gt;Use to temporarily disable and enable rules without moving their files.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;action&lt;/td&gt;
&lt;td&gt;Can be &lt;code&gt;deny&lt;/code&gt; or &lt;code&gt;allow&lt;/code&gt;.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;duration&lt;/td&gt;
&lt;td&gt;For rules persisting on disk, this value is default to &lt;code&gt;always&lt;/code&gt;.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;operator.type&lt;/td&gt;
&lt;td&gt;Can be &lt;code&gt;simple&lt;/code&gt;, in which case a simple &lt;code&gt;==&lt;/code&gt; comparison will be performed, or &lt;code&gt;regexp&lt;/code&gt; if the &lt;code&gt;data&lt;/code&gt; field is a regular expression to match.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;operator.operand&lt;/td&gt;
&lt;td&gt;What element of the connection to compare, can be one of: &lt;code&gt;true&lt;/code&gt; (will always match), &lt;code&gt;process.path&lt;/code&gt; (the path of the executable), &lt;code&gt;process.command&lt;/code&gt; (full command line, including path and arguments), &lt;code&gt;provess.env.ENV_VAR_NAME&lt;/code&gt; (use the value of an environment variable of the process given its name), &lt;code&gt;user.id&lt;/code&gt;, &lt;code&gt;dest.ip&lt;/code&gt;, &lt;code&gt;dest.host&lt;/code&gt; or &lt;code&gt;dest.port&lt;/code&gt;.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;operator.data&lt;/td&gt;
&lt;td&gt;The data to compare the &lt;code&gt;operand&lt;/code&gt; to, can be a regular expression if &lt;code&gt;type&lt;/code&gt; is &lt;code&gt;regexp&lt;/code&gt;.&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;An example with a regular expression:&lt;/p&gt;
&lt;div class="highlight highlight-source-json"&gt;&lt;pre&gt;{
   &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;created&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;2018-04-07T14:13:27.903996051+02:00&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;,
   &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;updated&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;2018-04-07T14:13:27.904060088+02:00&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;,
   &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;name&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;deny-any-google-analytics&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;,
   &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;enabled&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;: &lt;span class="pl-c1"&gt;true&lt;/span&gt;,
   &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;action&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;deny&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;,
   &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;duration&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;always&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;,
   &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;operator&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;: {
     &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;type&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;regexp&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;,
     &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;operand&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;dest.host&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;,
     &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;data&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;(?i).*analytics.*&lt;span class="pl-cce"&gt;\\&lt;/span&gt;.google&lt;span class="pl-cce"&gt;\\&lt;/span&gt;.com&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;
   }
}&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;An example whitelisting a whole process:&lt;/p&gt;
&lt;div class="highlight highlight-source-json"&gt;&lt;pre&gt;{
   &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;created&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;2018-04-07T15:00:48.156737519+02:00&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;,
   &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;updated&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;2018-04-07T15:00:48.156772601+02:00&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;,
   &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;name&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;allow-simple-opt-google-chrome-chrome&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;,
   &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;enabled&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;: &lt;span class="pl-c1"&gt;true&lt;/span&gt;,
   &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;action&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;allow&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;,
   &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;duration&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;always&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;,
   &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;operator&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;: {
     &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;type&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;simple&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;,
     &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;operand&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;process.path&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;,
     &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;data&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;/opt/google/chrome/chrome&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;
   }
 }&lt;/pre&gt;&lt;/div&gt;
&lt;h3&gt;&lt;a id="user-content-faq" class="anchor" aria-hidden="true" href="#faq"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;FAQ&lt;/h3&gt;
&lt;h5&gt;&lt;a id="user-content-why-qt-and-not-gtk" class="anchor" aria-hidden="true" href="#why-qt-and-not-gtk"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Why Qt and not GTK?&lt;/h5&gt;
&lt;p&gt;I tried, but for very fast updates it failed bad on my configuration (failed bad = SIGSEGV), moreover I find Qt5 layout system superior and easier to use.&lt;/p&gt;
&lt;h5&gt;&lt;a id="user-content-why-grpc-and-not-dbus" class="anchor" aria-hidden="true" href="#why-grpc-and-not-dbus"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Why gRPC and not DBUS?&lt;/h5&gt;
&lt;p&gt;The UI service is able to use a TCP listener instead of a UNIX socket, that means the UI service itself can be executed on any
operating system, while receiving messages from a single local daemon instance or multiple instances from remote computers in the network,
therefore DBUS would have made the protocol and logic uselessly GNU/Linux specific.&lt;/p&gt;
&lt;/article&gt;&lt;/div&gt;</description><author>evilsocket</author><guid isPermaLink="false">https://github.com/evilsocket/opensnitch</guid><pubDate>Mon, 10 Feb 2020 00:19:00 GMT</pubDate></item><item><title>XX-net/XX-Net #20 in Python, This week</title><link>https://github.com/XX-net/XX-Net</link><description>&lt;p&gt;&lt;i&gt;a web proxy tool&lt;/i&gt;&lt;/p&gt;&lt;div id="readme" class="md" data-path="README.md"&gt;&lt;article class="markdown-body entry-content p-5" itemprop="text"&gt;&lt;h1&gt;&lt;a id="user-content-xx-net" class="anchor" aria-hidden="true" href="#xx-net"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;XX-Net&lt;/h1&gt;
&lt;h6&gt;&lt;a id="user-content-中文文档---english---فارسی-صفحه-اصلی" class="anchor" aria-hidden="true" href="#中文文档---english---فارسی-صفحه-اصلی"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;a href="https://github.com/XX-net/XX-Net/wiki/%E4%B8%AD%E6%96%87%E6%96%87%E6%A1%A3"&gt;中文文档&lt;/a&gt;      &lt;a href="https://github.com/XX-net/XX-Net/wiki/English-Home-Page"&gt;English&lt;/a&gt;      &lt;a href="https://github.com/XX-net/XX-Net/wiki/Persian-home-page"&gt;فارسی صفحه اصلی&lt;/a&gt;&lt;/h6&gt;
&lt;ul&gt;
&lt;li&gt;易用的翻墙工具&lt;/li&gt;
&lt;li&gt;包含的GAE_proxy和X-Tunnel：&lt;/li&gt;
&lt;/ul&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;模块&lt;/th&gt;
&lt;th align="center"&gt;GAE_proxy&lt;/th&gt;
&lt;th align="center"&gt;X-Tunnel&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;联通性&lt;/td&gt;
&lt;td align="center"&gt;依赖IP扫描&lt;/td&gt;
&lt;td align="center"&gt;更多通道&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;速度&lt;/td&gt;
&lt;td align="center"&gt;流畅&lt;/td&gt;
&lt;td align="center"&gt;下载快速，稍微延迟&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;安全性&lt;/td&gt;
&lt;td align="center"&gt;Google可看到通信内容&lt;/td&gt;
&lt;td align="center"&gt;支持完整https加密&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;易用&lt;/td&gt;
&lt;td align="center"&gt;需部署服务端，绑定信用卡，导入证书&lt;/td&gt;
&lt;td align="center"&gt;简单&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;兼容性&lt;/td&gt;
&lt;td align="center"&gt;部分网站不兼容&lt;/td&gt;
&lt;td align="center"&gt;无问题&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;收费&lt;/td&gt;
&lt;td align="center"&gt;免费&lt;/td&gt;
&lt;td align="center"&gt;付费&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;br&gt;
&lt;h3&gt;&lt;a id="user-content-下载页面" class="anchor" aria-hidden="true" href="#下载页面"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;a href="https://github.com/XX-net/XX-Net/blob/master/code/default/download.md"&gt;&lt;strong&gt;下载页面&lt;/strong&gt;&lt;/a&gt;&lt;/h3&gt;
&lt;br&gt;
&lt;h3&gt;&lt;a id="user-content-最新状态" class="anchor" aria-hidden="true" href="#最新状态"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;最新状态：&lt;/h3&gt;
&lt;p&gt;2020-2-9&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;更新python2.7.17&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;请更新到3.14.2 及以上。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;GAE_Proxy 请开启IPv6，参考:&lt;br&gt;
&lt;a href="https://github.com/XX-net/XX-Net/wiki/%E5%A6%82%E4%BD%95%E5%BC%80%E5%90%AFIPv6"&gt;如何开启IPv6&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;br&gt;
&lt;h4&gt;&lt;a id="user-content-提示" class="anchor" aria-hidden="true" href="#提示"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;提示：&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;有问题请先看&lt;a href="https://github.com/XX-net/XX-Net/wiki/%E4%B8%AD%E6%96%87%E6%96%87%E6%A1%A3"&gt;Wiki文档&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/XX-net/XX-Net/issues"&gt;提问&lt;/a&gt;前，请先看&lt;a href="https://github.com/XX-net/XX-Net/issues?q=is%3Aissue+is%3Aopen+sort%3Aupdated-desc"&gt;最近讨论主题&lt;/a&gt;，避免重复发问。&lt;/li&gt;
&lt;/ul&gt;
&lt;/article&gt;&lt;/div&gt;</description><author>XX-net</author><guid isPermaLink="false">https://github.com/XX-net/XX-Net</guid><pubDate>Mon, 10 Feb 2020 00:20:00 GMT</pubDate></item><item><title>jiangxufeng/v2rayL #21 in Python, This week</title><link>https://github.com/jiangxufeng/v2rayL</link><description>&lt;p&gt;&lt;i&gt;v2ray linux GUI客户端，支持订阅、vemss、ss等协议，自动更新订阅、检查版本更新&lt;/i&gt;&lt;/p&gt;&lt;div id="readme" class="md" data-path="README.md"&gt;&lt;article class="markdown-body entry-content p-5" itemprop="text"&gt;&lt;h1&gt;&lt;a id="user-content-v2ray" class="anchor" aria-hidden="true" href="#v2ray"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;v2ray&lt;/h1&gt;
&lt;p&gt;V2Ray 是 Project V 下的一个工具。Project V 包含一系列工具，帮助你打造专属的定制网络体系。而 V2Ray 属于最核心的一个。 简单地说，V2Ray 是一个与 Shadowsocks 类似的代理软件，但比Shadowsocks更具优势&lt;/p&gt;
&lt;p&gt;V2Ray 用户手册：&lt;a href="https://www.v2ray.com" rel="nofollow"&gt;https://www.v2ray.com&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;V2Ray 项目地址：&lt;a href="https://github.com/v2ray/v2ray-core"&gt;https://github.com/v2ray/v2ray-core&lt;/a&gt;&lt;/p&gt;
&lt;h1&gt;&lt;a id="user-content-v2rayl" class="anchor" aria-hidden="true" href="#v2rayl"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;v2rayL&lt;/h1&gt;
&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="https://camo.githubusercontent.com/3c633e857f889d6235b22f9cf9d16c29df93a19e/687474703a2f2f636c6f75642e7468696e6b65722e696e6b2f696d616765732f38353736333364333936643966383963633630366330363636313934663435662e706e67"&gt;&lt;img src="https://camo.githubusercontent.com/3c633e857f889d6235b22f9cf9d16c29df93a19e/687474703a2f2f636c6f75642e7468696e6b65722e696e6b2f696d616765732f38353736333364333936643966383963633630366330363636313934663435662e706e67" alt="v2rayL" data-canonical-src="http://cloud.thinker.ink/images/857633d396d9f89cc606c0666194f45f.png" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;v2ray linux 客户端，使用pyqt5编写GUI界面，核心基于v2ray-core(v2ray-linux-64)&lt;/p&gt;
&lt;p&gt;开发环境：&lt;code&gt;ubuntu18.04+Python3.6&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;目前已实现以下功能：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;全新的UI界面&lt;/li&gt;
&lt;li&gt;添加订阅地址，自动解析并展示可连接VPN&lt;/li&gt;
&lt;li&gt;设置自动更新订阅、更换地址&lt;/li&gt;
&lt;li&gt;支持协议：vmess、shadowsocks&lt;/li&gt;
&lt;li&gt;通过&lt;code&gt;vmess://&lt;/code&gt;、&lt;code&gt;ss://&lt;/code&gt;分享链接添加配置，通过二维码添加配置&lt;/li&gt;
&lt;li&gt;手动添加配置，修改本地监听端口&lt;/li&gt;
&lt;li&gt;导出配置、生成配置分享链接、生成分享二维码&lt;/li&gt;
&lt;li&gt;最小化至托盘、测试延时、检查更新&lt;/li&gt;
&lt;li&gt;透明代理(Beta)&lt;/li&gt;
&lt;li&gt;......&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;其中vmess支持websocket、mKcp、tcp
目前程序可能存在一些bug但是没有测试出，若在使用过程中发现bug，请在issue中提交，以便改进。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;透明代理说明：&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;透明代理设置参考v2ray教程：&lt;a href="https://guide.v2fly.org/app/tproxy.html" rel="nofollow"&gt;透明代理(TPROXY)&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;测试环境： 三台不同的机器(条件有限)&lt;/p&gt;
&lt;p&gt;测试时出现问题： 有些透明代理无法生效，导致代理失败。&lt;/p&gt;
&lt;p&gt;解决办法：在测试时发现多尝试启动几次(关闭，开启)或重启程序就可以正常使用&lt;/p&gt;
&lt;p&gt;后续会进一步深入优化这个问题，透明代理无法使用时可以关闭，不影响其正常使用&lt;/p&gt;
&lt;h1&gt;&lt;a id="user-content-使用" class="anchor" aria-hidden="true" href="#使用"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;使用&lt;/h1&gt;
&lt;h2&gt;&lt;a id="user-content-使用前请注意" class="anchor" aria-hidden="true" href="#使用前请注意"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;使用前请注意&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;所有命令请直接运行，避免导致出现权限问题&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;所有命令请直接运行，避免导致出现权限问题&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;使用脚本安装时下载的程序实在&lt;code&gt;ubuntu 18.04&lt;/code&gt; + &lt;code&gt;Python3.6&lt;/code&gt;的环境下打包的，因此在Python版本不一致的环境中可能会出现版本不兼容的问题&lt;/p&gt;
&lt;p&gt;解决方法(请先运行安装脚本)：&lt;/p&gt;
&lt;p&gt;在自己的电脑上重新打包程序，具体方法如下（参考）&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;运行&lt;code&gt;git clone https://github.com/jiangxufeng/v2rayL.git&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;进入项目文件夹，然后运行&lt;code&gt;pip install -r requirements.txt&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;运行&lt;code&gt;cd v2rayL-GUI &amp;amp;&amp;amp; pyinstaller -F v2rayLui.py -p config.py -p sub2conf_api.py -p v2rayL_api.py -p v2rayL_threads.py -p utils.py -i images/logo.ico -n v2rayLui&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;打包后运行&lt;code&gt;mv dist/v2rayLui /usr/bin/v2rayL/v2rayLui&lt;/code&gt; 替换安装时下载的程序&lt;/li&gt;
&lt;/ol&gt;
&lt;h2&gt;&lt;a id="user-content-安装" class="anchor" aria-hidden="true" href="#安装"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;安装&lt;/h2&gt;
&lt;pre&gt;&lt;code&gt;bash &amp;lt;(curl -s -L http://dl.thinker.ink/install.sh)
&lt;/code&gt;&lt;/pre&gt;
&lt;h2&gt;&lt;a id="user-content-更新" class="anchor" aria-hidden="true" href="#更新"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;更新&lt;/h2&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt;bash &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;&amp;lt;(&lt;/span&gt;curl -s -L http://dl.thinker.ink/update.sh&lt;span class="pl-pds"&gt;)&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h2&gt;&lt;a id="user-content-卸载" class="anchor" aria-hidden="true" href="#卸载"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;卸载&lt;/h2&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt;bash &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;&amp;lt;(&lt;/span&gt;curl -s -L http://dl.thinker.ink/uninstall.sh&lt;span class="pl-pds"&gt;)&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h1&gt;&lt;a id="user-content-展示" class="anchor" aria-hidden="true" href="#展示"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;展示&lt;/h1&gt;
&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="https://camo.githubusercontent.com/893448dd7e28138f63885c5516de746a9e24c72c/687474703a2f2f636c6f75642e7468696e6b65722e696e6b2f646f776e6c6f61642f61303433613038383630663233396638643063626562326463326135623664352e706e67"&gt;&lt;img src="https://camo.githubusercontent.com/893448dd7e28138f63885c5516de746a9e24c72c/687474703a2f2f636c6f75642e7468696e6b65722e696e6b2f646f776e6c6f61642f61303433613038383630663233396638643063626562326463326135623664352e706e67" alt="首页" data-canonical-src="http://cloud.thinker.ink/download/a043a08860f239f8d0cbeb2dc2a5b6d5.png" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="https://camo.githubusercontent.com/0adff5fe344edfb0ec3004e1002c113b15c00085/687474703a2f2f636c6f75642e7468696e6b65722e696e6b2f696d616765732f36313763653636306363346132613232626432373564373364306437633631362e706e67"&gt;&lt;img src="https://camo.githubusercontent.com/0adff5fe344edfb0ec3004e1002c113b15c00085/687474703a2f2f636c6f75642e7468696e6b65722e696e6b2f696d616765732f36313763653636306363346132613232626432373564373364306437633631362e706e67" alt="setting1" data-canonical-src="http://cloud.thinker.ink/images/617ce660cc4a2a22bd275d73d0d7c616.png" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="https://camo.githubusercontent.com/3a633dd7dd4bd8cc185a648fa9695a0e7c2e7409/687474703a2f2f636c6f75642e7468696e6b65722e696e6b2f696d616765732f38383335353236373635643437393134333837396330386665316563623861342e706e67"&gt;&lt;img src="https://camo.githubusercontent.com/3a633dd7dd4bd8cc185a648fa9695a0e7c2e7409/687474703a2f2f636c6f75642e7468696e6b65722e696e6b2f696d616765732f38383335353236373635643437393134333837396330386665316563623861342e706e67" alt="setting2" data-canonical-src="http://cloud.thinker.ink/images/8835526765d479143879c08fe1ecb8a4.png" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h1&gt;&lt;a id="user-content-感谢" class="anchor" aria-hidden="true" href="#感谢"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;感谢&lt;/h1&gt;
&lt;p&gt;UI界面设计来源：&lt;a href="https://zmister.com/archives/477.html" rel="nofollow"&gt;https://zmister.com/archives/477.html&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;配置方面参考: &lt;a href="https://github.com/2dust/v2rayNG"&gt;https://github.com/2dust/v2rayNG&lt;/a&gt;&lt;/p&gt;
&lt;h1&gt;&lt;a id="user-content-协议" class="anchor" aria-hidden="true" href="#协议"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;协议&lt;/h1&gt;
&lt;p&gt;&lt;a href="https://www.gnu.org/licenses/gpl-3.0" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/bf135a9cea09d0ea4bba410582c0e70ec8222736/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f4c6963656e73652d47504c25323076332d626c75652e737667" alt="License: GPL v3" data-canonical-src="https://img.shields.io/badge/License-GPL%20v3-blue.svg" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;/article&gt;&lt;/div&gt;</description><author>jiangxufeng</author><guid isPermaLink="false">https://github.com/jiangxufeng/v2rayL</guid><pubDate>Mon, 10 Feb 2020 00:21:00 GMT</pubDate></item><item><title>ageitgey/face_recognition #22 in Python, This week</title><link>https://github.com/ageitgey/face_recognition</link><description>&lt;p&gt;&lt;i&gt;The world's simplest facial recognition api for Python and the command line&lt;/i&gt;&lt;/p&gt;&lt;div id="readme" class="md" data-path="README.md"&gt;&lt;article class="markdown-body entry-content p-5" itemprop="text"&gt;&lt;h1&gt;&lt;a id="user-content-face-recognition" class="anchor" aria-hidden="true" href="#face-recognition"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Face Recognition&lt;/h1&gt;
&lt;p&gt;&lt;em&gt;You can also read a translated version of this file &lt;a href="https://github.com/ageitgey/face_recognition/blob/master/README_Simplified_Chinese.md"&gt;in Chinese 简体中文版&lt;/a&gt; or &lt;a href="https://github.com/ageitgey/face_recognition/blob/master/README_Korean.md"&gt;in Korean 한국어&lt;/a&gt;.&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;Recognize and manipulate faces from Python or from the command line with
the world's simplest face recognition library.&lt;/p&gt;
&lt;p&gt;Built using &lt;a href="http://dlib.net/" rel="nofollow"&gt;dlib&lt;/a&gt;'s state-of-the-art face recognition
built with deep learning. The model has an accuracy of 99.38% on the
&lt;a href="http://vis-www.cs.umass.edu/lfw/" rel="nofollow"&gt;Labeled Faces in the Wild&lt;/a&gt; benchmark.&lt;/p&gt;
&lt;p&gt;This also provides a simple &lt;code&gt;face_recognition&lt;/code&gt; command line tool that lets
you do face recognition on a folder of images from the command line!&lt;/p&gt;
&lt;p&gt;&lt;a href="https://pypi.python.org/pypi/face_recognition" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/b90732359d1ebc3af2493af54da46ce19145d14b/68747470733a2f2f696d672e736869656c64732e696f2f707970692f762f666163655f7265636f676e6974696f6e2e737667" alt="PyPI" data-canonical-src="https://img.shields.io/pypi/v/face_recognition.svg" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://travis-ci.org/ageitgey/face_recognition" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/0a50211fff9fc1cd53666133a389a0b100e78239/68747470733a2f2f7472617669732d63692e6f72672f61676569746765792f666163655f7265636f676e6974696f6e2e7376673f6272616e63683d6d6173746572" alt="Build Status" data-canonical-src="https://travis-ci.org/ageitgey/face_recognition.svg?branch=master" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="http://face-recognition.readthedocs.io/en/latest/?badge=latest" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/e82fac09ba8a6a356d28ce74a3bf874790bc82b7/68747470733a2f2f72656164746865646f63732e6f72672f70726f6a656374732f666163652d7265636f676e6974696f6e2f62616467652f3f76657273696f6e3d6c6174657374" alt="Documentation Status" data-canonical-src="https://readthedocs.org/projects/face-recognition/badge/?version=latest" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-features" class="anchor" aria-hidden="true" href="#features"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Features&lt;/h2&gt;
&lt;h4&gt;&lt;a id="user-content-find-faces-in-pictures" class="anchor" aria-hidden="true" href="#find-faces-in-pictures"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Find faces in pictures&lt;/h4&gt;
&lt;p&gt;Find all the faces that appear in a picture:&lt;/p&gt;
&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="https://cloud.githubusercontent.com/assets/896692/23625227/42c65360-025d-11e7-94ea-b12f28cb34b4.png"&gt;&lt;img src="https://cloud.githubusercontent.com/assets/896692/23625227/42c65360-025d-11e7-94ea-b12f28cb34b4.png" alt="" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;div class="highlight highlight-source-python"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;import&lt;/span&gt; face_recognition
image &lt;span class="pl-k"&gt;=&lt;/span&gt; face_recognition.load_image_file(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;your_file.jpg&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
face_locations &lt;span class="pl-k"&gt;=&lt;/span&gt; face_recognition.face_locations(image)&lt;/pre&gt;&lt;/div&gt;
&lt;h4&gt;&lt;a id="user-content-find-and-manipulate-facial-features-in-pictures" class="anchor" aria-hidden="true" href="#find-and-manipulate-facial-features-in-pictures"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Find and manipulate facial features in pictures&lt;/h4&gt;
&lt;p&gt;Get the locations and outlines of each person's eyes, nose, mouth and chin.&lt;/p&gt;
&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="https://cloud.githubusercontent.com/assets/896692/23625282/7f2d79dc-025d-11e7-8728-d8924596f8fa.png"&gt;&lt;img src="https://cloud.githubusercontent.com/assets/896692/23625282/7f2d79dc-025d-11e7-8728-d8924596f8fa.png" alt="" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;div class="highlight highlight-source-python"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;import&lt;/span&gt; face_recognition
image &lt;span class="pl-k"&gt;=&lt;/span&gt; face_recognition.load_image_file(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;your_file.jpg&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
face_landmarks_list &lt;span class="pl-k"&gt;=&lt;/span&gt; face_recognition.face_landmarks(image)&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Finding facial features is super useful for lots of important stuff. But you can also use it for really stupid stuff
like applying &lt;a href="https://github.com/ageitgey/face_recognition/blob/master/examples/digital_makeup.py"&gt;digital make-up&lt;/a&gt; (think 'Meitu'):&lt;/p&gt;
&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="https://cloud.githubusercontent.com/assets/896692/23625283/80638760-025d-11e7-80a2-1d2779f7ccab.png"&gt;&lt;img src="https://cloud.githubusercontent.com/assets/896692/23625283/80638760-025d-11e7-80a2-1d2779f7ccab.png" alt="" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h4&gt;&lt;a id="user-content-identify-faces-in-pictures" class="anchor" aria-hidden="true" href="#identify-faces-in-pictures"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Identify faces in pictures&lt;/h4&gt;
&lt;p&gt;Recognize who appears in each photo.&lt;/p&gt;
&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="https://cloud.githubusercontent.com/assets/896692/23625229/45e049b6-025d-11e7-89cc-8a71cf89e713.png"&gt;&lt;img src="https://cloud.githubusercontent.com/assets/896692/23625229/45e049b6-025d-11e7-89cc-8a71cf89e713.png" alt="" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;div class="highlight highlight-source-python"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;import&lt;/span&gt; face_recognition
known_image &lt;span class="pl-k"&gt;=&lt;/span&gt; face_recognition.load_image_file(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;biden.jpg&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
unknown_image &lt;span class="pl-k"&gt;=&lt;/span&gt; face_recognition.load_image_file(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;unknown.jpg&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)

biden_encoding &lt;span class="pl-k"&gt;=&lt;/span&gt; face_recognition.face_encodings(known_image)[&lt;span class="pl-c1"&gt;0&lt;/span&gt;]
unknown_encoding &lt;span class="pl-k"&gt;=&lt;/span&gt; face_recognition.face_encodings(unknown_image)[&lt;span class="pl-c1"&gt;0&lt;/span&gt;]

results &lt;span class="pl-k"&gt;=&lt;/span&gt; face_recognition.compare_faces([biden_encoding], unknown_encoding)&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;You can even use this library with other Python libraries to do real-time face recognition:&lt;/p&gt;
&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="https://cloud.githubusercontent.com/assets/896692/24430398/36f0e3f0-13cb-11e7-8258-4d0c9ce1e419.gif"&gt;&lt;img src="https://cloud.githubusercontent.com/assets/896692/24430398/36f0e3f0-13cb-11e7-8258-4d0c9ce1e419.gif" alt="" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;See &lt;a href="https://github.com/ageitgey/face_recognition/blob/master/examples/facerec_from_webcam_faster.py"&gt;this example&lt;/a&gt; for the code.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-online-demos" class="anchor" aria-hidden="true" href="#online-demos"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Online Demos&lt;/h2&gt;
&lt;p&gt;User-contributed shared Jupyter notebook demo (not officially supported): &lt;a href="https://beta.deepnote.org/launch?template=face_recognition" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/0713c03de1d17e6bc2a9d78fedcc40415afcd517/68747470733a2f2f626574612e646565706e6f74652e6f72672f627574746f6e732f7472792d696e2d612d6a7570797465722d6e6f7465626f6f6b2e737667" alt="Deepnote" data-canonical-src="https://beta.deepnote.org/buttons/try-in-a-jupyter-notebook.svg" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-installation" class="anchor" aria-hidden="true" href="#installation"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Installation&lt;/h2&gt;
&lt;h3&gt;&lt;a id="user-content-requirements" class="anchor" aria-hidden="true" href="#requirements"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Requirements&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;Python 3.3+ or Python 2.7&lt;/li&gt;
&lt;li&gt;macOS or Linux (Windows not officially supported, but might work)&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;&lt;a id="user-content-installation-options" class="anchor" aria-hidden="true" href="#installation-options"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Installation Options:&lt;/h3&gt;
&lt;h4&gt;&lt;a id="user-content-installing-on-mac-or-linux" class="anchor" aria-hidden="true" href="#installing-on-mac-or-linux"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Installing on Mac or Linux&lt;/h4&gt;
&lt;p&gt;First, make sure you have dlib already installed with Python bindings:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://gist.github.com/ageitgey/629d75c1baac34dfa5ca2a1928a7aeaf"&gt;How to install dlib from source on macOS or Ubuntu&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Then, install this module from pypi using &lt;code&gt;pip3&lt;/code&gt; (or &lt;code&gt;pip2&lt;/code&gt; for Python 2):&lt;/p&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt;pip3 install face_recognition&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Alternatively, you can try this library with &lt;a href="https://www.docker.com/" rel="nofollow"&gt;Docker&lt;/a&gt;, see &lt;a href="#deployment"&gt;this section&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;If you are having trouble with installation, you can also try out a
&lt;a href="https://medium.com/@ageitgey/try-deep-learning-in-python-now-with-a-fully-pre-configured-vm-1d97d4c3e9b" rel="nofollow"&gt;pre-configured VM&lt;/a&gt;.&lt;/p&gt;
&lt;h4&gt;&lt;a id="user-content-installing-on-an-nvidia-jetson-nano-board" class="anchor" aria-hidden="true" href="#installing-on-an-nvidia-jetson-nano-board"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Installing on an Nvidia Jetson Nano board&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://medium.com/@ageitgey/build-a-hardware-based-face-recognition-system-for-150-with-the-nvidia-jetson-nano-and-python-a25cb8c891fd" rel="nofollow"&gt;Jetson Nano installation instructions&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;Please follow the instructions in the article carefully. There is current a bug in the CUDA libraries on the Jetson Nano that will cause this library to fail silently if you don't follow the instructions in the article to comment out a line in dlib and recompile it.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h4&gt;&lt;a id="user-content-installing-on-raspberry-pi-2" class="anchor" aria-hidden="true" href="#installing-on-raspberry-pi-2"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Installing on Raspberry Pi 2+&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://gist.github.com/ageitgey/1ac8dbe8572f3f533df6269dab35df65"&gt;Raspberry Pi 2+ installation instructions&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h4&gt;&lt;a id="user-content-installing-on-windows" class="anchor" aria-hidden="true" href="#installing-on-windows"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Installing on Windows&lt;/h4&gt;
&lt;p&gt;While Windows isn't officially supported, helpful users have posted instructions on how to install this library:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/ageitgey/face_recognition/issues/175#issue-257710508"&gt;@masoudr's Windows 10 installation guide (dlib + face_recognition)&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h4&gt;&lt;a id="user-content-installing-a-pre-configured-virtual-machine-image" class="anchor" aria-hidden="true" href="#installing-a-pre-configured-virtual-machine-image"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Installing a pre-configured Virtual Machine image&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://medium.com/@ageitgey/try-deep-learning-in-python-now-with-a-fully-pre-configured-vm-1d97d4c3e9b" rel="nofollow"&gt;Download the pre-configured VM image&lt;/a&gt; (for VMware Player or VirtualBox).&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-usage" class="anchor" aria-hidden="true" href="#usage"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Usage&lt;/h2&gt;
&lt;h3&gt;&lt;a id="user-content-command-line-interface" class="anchor" aria-hidden="true" href="#command-line-interface"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Command-Line Interface&lt;/h3&gt;
&lt;p&gt;When you install &lt;code&gt;face_recognition&lt;/code&gt;, you get two simple command-line
programs:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;face_recognition&lt;/code&gt; - Recognize faces in a photograph or folder full for
photographs.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;face_detection&lt;/code&gt; - Find faces in a photograph or folder full for photographs.&lt;/li&gt;
&lt;/ul&gt;
&lt;h4&gt;&lt;a id="user-content-face_recognition-command-line-tool" class="anchor" aria-hidden="true" href="#face_recognition-command-line-tool"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;code&gt;face_recognition&lt;/code&gt; command line tool&lt;/h4&gt;
&lt;p&gt;The &lt;code&gt;face_recognition&lt;/code&gt; command lets you recognize faces in a photograph or
folder full  for photographs.&lt;/p&gt;
&lt;p&gt;First, you need to provide a folder with one picture of each person you
already know. There should be one image file for each person with the
files named according to who is in the picture:&lt;/p&gt;
&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="https://cloud.githubusercontent.com/assets/896692/23582466/8324810e-00df-11e7-82cf-41515eba704d.png"&gt;&lt;img src="https://cloud.githubusercontent.com/assets/896692/23582466/8324810e-00df-11e7-82cf-41515eba704d.png" alt="known" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Next, you need a second folder with the files you want to identify:&lt;/p&gt;
&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="https://cloud.githubusercontent.com/assets/896692/23582465/81f422f8-00df-11e7-8b0d-75364f641f58.png"&gt;&lt;img src="https://cloud.githubusercontent.com/assets/896692/23582465/81f422f8-00df-11e7-8b0d-75364f641f58.png" alt="unknown" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Then in you simply run the command &lt;code&gt;face_recognition&lt;/code&gt;, passing in
the folder of known people and the folder (or single image) with unknown
people and it tells you who is in each image:&lt;/p&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt;$ face_recognition ./pictures_of_people_i_know/ ./unknown_pictures/

/unknown_pictures/unknown.jpg,Barack Obama
/face_recognition_test/unknown_pictures/unknown.jpg,unknown_person&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;There's one line in the output for each face. The data is comma-separated
with the filename and the name of the person found.&lt;/p&gt;
&lt;p&gt;An &lt;code&gt;unknown_person&lt;/code&gt; is a face in the image that didn't match anyone in
your folder of known people.&lt;/p&gt;
&lt;h4&gt;&lt;a id="user-content-face_detection-command-line-tool" class="anchor" aria-hidden="true" href="#face_detection-command-line-tool"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;code&gt;face_detection&lt;/code&gt; command line tool&lt;/h4&gt;
&lt;p&gt;The &lt;code&gt;face_detection&lt;/code&gt; command lets you find the location (pixel coordinatates)
of any faces in an image.&lt;/p&gt;
&lt;p&gt;Just run the command &lt;code&gt;face_detection&lt;/code&gt;, passing in a folder of images
to check (or a single image):&lt;/p&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt;$ face_detection  ./folder_with_pictures/

examples/image1.jpg,65,215,169,112
examples/image2.jpg,62,394,211,244
examples/image2.jpg,95,941,244,792&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;It prints one line for each face that was detected. The coordinates
reported are the top, right, bottom and left coordinates of the face (in pixels).&lt;/p&gt;
&lt;h5&gt;&lt;a id="user-content-adjusting-tolerance--sensitivity" class="anchor" aria-hidden="true" href="#adjusting-tolerance--sensitivity"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Adjusting Tolerance / Sensitivity&lt;/h5&gt;
&lt;p&gt;If you are getting multiple matches for the same person, it might be that
the people in your photos look very similar and a lower tolerance value
is needed to make face comparisons more strict.&lt;/p&gt;
&lt;p&gt;You can do that with the &lt;code&gt;--tolerance&lt;/code&gt; parameter. The default tolerance
value is 0.6 and lower numbers make face comparisons more strict:&lt;/p&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt;$ face_recognition --tolerance 0.54 ./pictures_of_people_i_know/ ./unknown_pictures/

/unknown_pictures/unknown.jpg,Barack Obama
/face_recognition_test/unknown_pictures/unknown.jpg,unknown_person&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;If you want to see the face distance calculated for each match in order
to adjust the tolerance setting, you can use &lt;code&gt;--show-distance true&lt;/code&gt;:&lt;/p&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt;$ face_recognition --show-distance &lt;span class="pl-c1"&gt;true&lt;/span&gt; ./pictures_of_people_i_know/ ./unknown_pictures/

/unknown_pictures/unknown.jpg,Barack Obama,0.378542298956785
/face_recognition_test/unknown_pictures/unknown.jpg,unknown_person,None&lt;/pre&gt;&lt;/div&gt;
&lt;h5&gt;&lt;a id="user-content-more-examples" class="anchor" aria-hidden="true" href="#more-examples"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;More Examples&lt;/h5&gt;
&lt;p&gt;If you simply want to know the names of the people in each photograph but don't
care about file names, you could do this:&lt;/p&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt;$ face_recognition ./pictures_of_people_i_know/ ./unknown_pictures/ &lt;span class="pl-k"&gt;|&lt;/span&gt; cut -d &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;,&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt; -f2

Barack Obama
unknown_person&lt;/pre&gt;&lt;/div&gt;
&lt;h5&gt;&lt;a id="user-content-speeding-up-face-recognition" class="anchor" aria-hidden="true" href="#speeding-up-face-recognition"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Speeding up Face Recognition&lt;/h5&gt;
&lt;p&gt;Face recognition can be done in parallel if you have a computer with
multiple CPU cores. For example, if your system has 4 CPU cores, you can
process about 4 times as many images in the same amount of time by using
all your CPU cores in parallel.&lt;/p&gt;
&lt;p&gt;If you are using Python 3.4 or newer, pass in a &lt;code&gt;--cpus &amp;lt;number_of_cpu_cores_to_use&amp;gt;&lt;/code&gt; parameter:&lt;/p&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt;$ face_recognition --cpus 4 ./pictures_of_people_i_know/ ./unknown_pictures/&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;You can also pass in &lt;code&gt;--cpus -1&lt;/code&gt; to use all CPU cores in your system.&lt;/p&gt;
&lt;h4&gt;&lt;a id="user-content-python-module" class="anchor" aria-hidden="true" href="#python-module"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Python Module&lt;/h4&gt;
&lt;p&gt;You can import the &lt;code&gt;face_recognition&lt;/code&gt; module and then easily manipulate
faces with just a couple of lines of code. It's super easy!&lt;/p&gt;
&lt;p&gt;API Docs: &lt;a href="https://face-recognition.readthedocs.io/en/latest/face_recognition.html" rel="nofollow"&gt;https://face-recognition.readthedocs.io&lt;/a&gt;.&lt;/p&gt;
&lt;h5&gt;&lt;a id="user-content-automatically-find-all-the-faces-in-an-image" class="anchor" aria-hidden="true" href="#automatically-find-all-the-faces-in-an-image"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Automatically find all the faces in an image&lt;/h5&gt;
&lt;div class="highlight highlight-source-python"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;import&lt;/span&gt; face_recognition

image &lt;span class="pl-k"&gt;=&lt;/span&gt; face_recognition.load_image_file(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;my_picture.jpg&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
face_locations &lt;span class="pl-k"&gt;=&lt;/span&gt; face_recognition.face_locations(image)

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; face_locations is now an array listing the co-ordinates of each face!&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;See &lt;a href="https://github.com/ageitgey/face_recognition/blob/master/examples/find_faces_in_picture.py"&gt;this example&lt;/a&gt;
to try it out.&lt;/p&gt;
&lt;p&gt;You can also opt-in to a somewhat more accurate deep-learning-based face detection model.&lt;/p&gt;
&lt;p&gt;Note: GPU acceleration (via NVidia's CUDA library) is required for good
performance with this model. You'll also want to enable CUDA support
when compliling &lt;code&gt;dlib&lt;/code&gt;.&lt;/p&gt;
&lt;div class="highlight highlight-source-python"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;import&lt;/span&gt; face_recognition

image &lt;span class="pl-k"&gt;=&lt;/span&gt; face_recognition.load_image_file(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;my_picture.jpg&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
face_locations &lt;span class="pl-k"&gt;=&lt;/span&gt; face_recognition.face_locations(image, &lt;span class="pl-v"&gt;model&lt;/span&gt;&lt;span class="pl-k"&gt;=&lt;/span&gt;&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;cnn&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; face_locations is now an array listing the co-ordinates of each face!&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;See &lt;a href="https://github.com/ageitgey/face_recognition/blob/master/examples/find_faces_in_picture_cnn.py"&gt;this example&lt;/a&gt;
to try it out.&lt;/p&gt;
&lt;p&gt;If you have a lot of images and a GPU, you can also
&lt;a href="https://github.com/ageitgey/face_recognition/blob/master/examples/find_faces_in_batches.py"&gt;find faces in batches&lt;/a&gt;.&lt;/p&gt;
&lt;h5&gt;&lt;a id="user-content-automatically-locate-the-facial-features-of-a-person-in-an-image" class="anchor" aria-hidden="true" href="#automatically-locate-the-facial-features-of-a-person-in-an-image"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Automatically locate the facial features of a person in an image&lt;/h5&gt;
&lt;div class="highlight highlight-source-python"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;import&lt;/span&gt; face_recognition

image &lt;span class="pl-k"&gt;=&lt;/span&gt; face_recognition.load_image_file(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;my_picture.jpg&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
face_landmarks_list &lt;span class="pl-k"&gt;=&lt;/span&gt; face_recognition.face_landmarks(image)

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; face_landmarks_list is now an array with the locations of each facial feature in each face.&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; face_landmarks_list[0]['left_eye'] would be the location and outline of the first person's left eye.&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;See &lt;a href="https://github.com/ageitgey/face_recognition/blob/master/examples/find_facial_features_in_picture.py"&gt;this example&lt;/a&gt;
to try it out.&lt;/p&gt;
&lt;h5&gt;&lt;a id="user-content-recognize-faces-in-images-and-identify-who-they-are" class="anchor" aria-hidden="true" href="#recognize-faces-in-images-and-identify-who-they-are"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Recognize faces in images and identify who they are&lt;/h5&gt;
&lt;div class="highlight highlight-source-python"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;import&lt;/span&gt; face_recognition

picture_of_me &lt;span class="pl-k"&gt;=&lt;/span&gt; face_recognition.load_image_file(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;me.jpg&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
my_face_encoding &lt;span class="pl-k"&gt;=&lt;/span&gt; face_recognition.face_encodings(picture_of_me)[&lt;span class="pl-c1"&gt;0&lt;/span&gt;]

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; my_face_encoding now contains a universal 'encoding' of my facial features that can be compared to any other picture of a face!&lt;/span&gt;

unknown_picture &lt;span class="pl-k"&gt;=&lt;/span&gt; face_recognition.load_image_file(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;unknown.jpg&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
unknown_face_encoding &lt;span class="pl-k"&gt;=&lt;/span&gt; face_recognition.face_encodings(unknown_picture)[&lt;span class="pl-c1"&gt;0&lt;/span&gt;]

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; Now we can see the two face encodings are of the same person with `compare_faces`!&lt;/span&gt;

results &lt;span class="pl-k"&gt;=&lt;/span&gt; face_recognition.compare_faces([my_face_encoding], unknown_face_encoding)

&lt;span class="pl-k"&gt;if&lt;/span&gt; results[&lt;span class="pl-c1"&gt;0&lt;/span&gt;] &lt;span class="pl-k"&gt;==&lt;/span&gt; &lt;span class="pl-c1"&gt;True&lt;/span&gt;:
    &lt;span class="pl-c1"&gt;print&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;It's a picture of me!&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
&lt;span class="pl-k"&gt;else&lt;/span&gt;:
    &lt;span class="pl-c1"&gt;print&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;It's not a picture of me!&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;See &lt;a href="https://github.com/ageitgey/face_recognition/blob/master/examples/recognize_faces_in_pictures.py"&gt;this example&lt;/a&gt;
to try it out.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-python-code-examples" class="anchor" aria-hidden="true" href="#python-code-examples"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Python Code Examples&lt;/h2&gt;
&lt;p&gt;All the examples are available &lt;a href="https://github.com/ageitgey/face_recognition/tree/master/examples"&gt;here&lt;/a&gt;.&lt;/p&gt;
&lt;h4&gt;&lt;a id="user-content-face-detection" class="anchor" aria-hidden="true" href="#face-detection"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Face Detection&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/ageitgey/face_recognition/blob/master/examples/find_faces_in_picture.py"&gt;Find faces in a photograph&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/ageitgey/face_recognition/blob/master/examples/find_faces_in_picture_cnn.py"&gt;Find faces in a photograph (using deep learning)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/ageitgey/face_recognition/blob/master/examples/find_faces_in_batches.py"&gt;Find faces in batches of images w/ GPU (using deep learning)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/ageitgey/face_recognition/blob/master/examples/blur_faces_on_webcam.py"&gt;Blur all the faces in a live video using your webcam (Requires OpenCV to be installed)&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h4&gt;&lt;a id="user-content-facial-features" class="anchor" aria-hidden="true" href="#facial-features"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Facial Features&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/ageitgey/face_recognition/blob/master/examples/find_facial_features_in_picture.py"&gt;Identify specific facial features in a photograph&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/ageitgey/face_recognition/blob/master/examples/digital_makeup.py"&gt;Apply (horribly ugly) digital make-up&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h4&gt;&lt;a id="user-content-facial-recognition" class="anchor" aria-hidden="true" href="#facial-recognition"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Facial Recognition&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/ageitgey/face_recognition/blob/master/examples/recognize_faces_in_pictures.py"&gt;Find and recognize unknown faces in a photograph based on photographs of known people&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/ageitgey/face_recognition/blob/master/examples/identify_and_draw_boxes_on_faces.py"&gt;Identify and draw boxes around each person in a photo&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/ageitgey/face_recognition/blob/master/examples/face_distance.py"&gt;Compare faces by numeric face distance instead of only True/False matches&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/ageitgey/face_recognition/blob/master/examples/facerec_from_webcam.py"&gt;Recognize faces in live video using your webcam - Simple / Slower Version (Requires OpenCV to be installed)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/ageitgey/face_recognition/blob/master/examples/facerec_from_webcam_faster.py"&gt;Recognize faces in live video using your webcam - Faster Version (Requires OpenCV to be installed)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/ageitgey/face_recognition/blob/master/examples/facerec_from_video_file.py"&gt;Recognize faces in a video file and write out new video file (Requires OpenCV to be installed)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/ageitgey/face_recognition/blob/master/examples/facerec_on_raspberry_pi.py"&gt;Recognize faces on a Raspberry Pi w/ camera&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/ageitgey/face_recognition/blob/master/examples/web_service_example.py"&gt;Run a web service to recognize faces via HTTP (Requires Flask to be installed)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/ageitgey/face_recognition/blob/master/examples/face_recognition_knn.py"&gt;Recognize faces with a K-nearest neighbors classifier&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/ageitgey/face_recognition/blob/master/examples/face_recognition_svm.py"&gt;Train multiple images per person then recognize faces using a SVM&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-creating-a-standalone-executable" class="anchor" aria-hidden="true" href="#creating-a-standalone-executable"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Creating a Standalone Executable&lt;/h2&gt;
&lt;p&gt;If you want to create a standalone executable that can run without the need to install &lt;code&gt;python&lt;/code&gt; or &lt;code&gt;face_recognition&lt;/code&gt;, you can use &lt;a href="https://github.com/pyinstaller/pyinstaller"&gt;PyInstaller&lt;/a&gt;. However, it requires some custom configuration to work with this library. See &lt;a href="https://github.com/ageitgey/face_recognition/issues/357"&gt;this issue&lt;/a&gt; for how to do it.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-articles-and-guides-that-cover-face_recognition" class="anchor" aria-hidden="true" href="#articles-and-guides-that-cover-face_recognition"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Articles and Guides that cover &lt;code&gt;face_recognition&lt;/code&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;My article on how Face Recognition works: &lt;a href="https://medium.com/@ageitgey/machine-learning-is-fun-part-4-modern-face-recognition-with-deep-learning-c3cffc121d78" rel="nofollow"&gt;Modern Face Recognition with Deep Learning&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;Covers the algorithms and how they generally work&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.pyimagesearch.com/2018/06/18/face-recognition-with-opencv-python-and-deep-learning/" rel="nofollow"&gt;Face recognition with OpenCV, Python, and deep learning&lt;/a&gt; by Adrian Rosebrock
&lt;ul&gt;
&lt;li&gt;Covers how to use face recognition in practice&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.pyimagesearch.com/2018/06/25/raspberry-pi-face-recognition/" rel="nofollow"&gt;Raspberry Pi Face Recognition&lt;/a&gt; by Adrian Rosebrock
&lt;ul&gt;
&lt;li&gt;Covers how to use this on a Raspberry Pi&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.pyimagesearch.com/2018/07/09/face-clustering-with-python/" rel="nofollow"&gt;Face clustering with Python&lt;/a&gt; by Adrian Rosebrock
&lt;ul&gt;
&lt;li&gt;Covers how to automatically cluster photos based on who appears in each photo using unsupervised learning&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-how-face-recognition-works" class="anchor" aria-hidden="true" href="#how-face-recognition-works"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;How Face Recognition Works&lt;/h2&gt;
&lt;p&gt;If you want to learn how face location and recognition work instead of
depending on a black box library, &lt;a href="https://medium.com/@ageitgey/machine-learning-is-fun-part-4-modern-face-recognition-with-deep-learning-c3cffc121d78" rel="nofollow"&gt;read my article&lt;/a&gt;.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-caveats" class="anchor" aria-hidden="true" href="#caveats"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Caveats&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;The face recognition model is trained on adults and does not work very well on children. It tends to mix
up children quite easy using the default comparison threshold of 0.6.&lt;/li&gt;
&lt;li&gt;Accuracy may vary between ethnic groups. Please see &lt;a href="https://github.com/ageitgey/face_recognition/wiki/Face-Recognition-Accuracy-Problems#question-face-recognition-works-well-with-european-individuals-but-overall-accuracy-is-lower-with-asian-individuals"&gt;this wiki page&lt;/a&gt; for more details.&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-deployment-to-cloud-hosts-heroku-aws-etc" class="anchor" aria-hidden="true" href="#deployment-to-cloud-hosts-heroku-aws-etc"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;a name="user-content-deployment"&gt;Deployment to Cloud Hosts (Heroku, AWS, etc)&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;Since &lt;code&gt;face_recognition&lt;/code&gt; depends on &lt;code&gt;dlib&lt;/code&gt; which is written in C++, it can be tricky to deploy an app
using it to a cloud hosting provider like Heroku or AWS.&lt;/p&gt;
&lt;p&gt;To make things easier, there's an example Dockerfile in this repo that shows how to run an app built with
&lt;code&gt;face_recognition&lt;/code&gt; in a &lt;a href="https://www.docker.com/" rel="nofollow"&gt;Docker&lt;/a&gt; container. With that, you should be able to deploy
to any service that supports Docker images.&lt;/p&gt;
&lt;p&gt;You can try the Docker image locally by running: &lt;code&gt;docker-compose up --build&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Linux users with a GPU (drivers &amp;gt;= 384.81) and &lt;a href="https://github.com/NVIDIA/nvidia-docker"&gt;Nvidia-Docker&lt;/a&gt; installed can run the example on the GPU: Open the &lt;a href="docker-compose.yml"&gt;docker-compose.yml&lt;/a&gt; file and uncomment the &lt;code&gt;dockerfile: Dockerfile.gpu&lt;/code&gt; and &lt;code&gt;runtime: nvidia&lt;/code&gt; lines.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-having-problems" class="anchor" aria-hidden="true" href="#having-problems"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Having problems?&lt;/h2&gt;
&lt;p&gt;If you run into problems, please read the &lt;a href="https://github.com/ageitgey/face_recognition/wiki/Common-Errors"&gt;Common Errors&lt;/a&gt; section of the wiki before filing a github issue.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-thanks" class="anchor" aria-hidden="true" href="#thanks"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Thanks&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Many, many thanks to &lt;a href="https://github.com/davisking"&gt;Davis King&lt;/a&gt; (&lt;a href="https://twitter.com/nulhom" rel="nofollow"&gt;@nulhom&lt;/a&gt;)
for creating dlib and for providing the trained facial feature detection and face encoding models
used in this library. For more information on the ResNet that powers the face encodings, check out
his &lt;a href="http://blog.dlib.net/2017/02/high-quality-face-recognition-with-deep.html" rel="nofollow"&gt;blog post&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;Thanks to everyone who works on all the awesome Python data science libraries like numpy, scipy, scikit-image,
pillow, etc, etc that makes this kind of stuff so easy and fun in Python.&lt;/li&gt;
&lt;li&gt;Thanks to &lt;a href="https://github.com/audreyr/cookiecutter"&gt;Cookiecutter&lt;/a&gt; and the
&lt;a href="https://github.com/audreyr/cookiecutter-pypackage"&gt;audreyr/cookiecutter-pypackage&lt;/a&gt; project template
for making Python project packaging way more tolerable.&lt;/li&gt;
&lt;/ul&gt;
&lt;/article&gt;&lt;/div&gt;</description><author>ageitgey</author><guid isPermaLink="false">https://github.com/ageitgey/face_recognition</guid><pubDate>Mon, 10 Feb 2020 00:22:00 GMT</pubDate></item><item><title>shadowsocks/shadowsocks #23 in Python, This week</title><link>https://github.com/shadowsocks/shadowsocks</link><description>&lt;p&gt;&lt;i&gt;[No description found.]&lt;/i&gt;&lt;/p&gt;&lt;div id="readme" class="md" data-path="README.md"&gt;&lt;article class="markdown-body entry-content p-5" itemprop="text"&gt;&lt;p&gt;Removed according to regulations.&lt;/p&gt;
&lt;/article&gt;&lt;/div&gt;</description><author>shadowsocks</author><guid isPermaLink="false">https://github.com/shadowsocks/shadowsocks</guid><pubDate>Mon, 10 Feb 2020 00:23:00 GMT</pubDate></item><item><title>pallets/flask #24 in Python, This week</title><link>https://github.com/pallets/flask</link><description>&lt;p&gt;&lt;i&gt;The Python micro framework for building web applications.&lt;/i&gt;&lt;/p&gt;&lt;div id="readme" class="rst" data-path="README.rst"&gt;&lt;article class="markdown-body entry-content p-5" itemprop="text"&gt;&lt;h1&gt;&lt;a id="user-content-flask" class="anchor" aria-hidden="true" href="#flask"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Flask&lt;/h1&gt;
&lt;p&gt;Flask is a lightweight &lt;a href="https://wsgi.readthedocs.io" rel="nofollow"&gt;WSGI&lt;/a&gt; web application framework. It is designed
to make getting started quick and easy, with the ability to scale up to
complex applications. It began as a simple wrapper around &lt;a href="https://www.palletsprojects.com/p/werkzeug/" rel="nofollow"&gt;Werkzeug&lt;/a&gt;
and &lt;a href="https://www.palletsprojects.com/p/jinja/" rel="nofollow"&gt;Jinja&lt;/a&gt; and has become one of the most popular Python web
application frameworks.&lt;/p&gt;
&lt;p&gt;Flask offers suggestions, but doesn't enforce any dependencies or
project layout. It is up to the developer to choose the tools and
libraries they want to use. There are many extensions provided by the
community that make adding new functionality easy.&lt;/p&gt;
&lt;a name="user-content-installing"&gt;&lt;/a&gt;
&lt;h2&gt;&lt;a id="user-content-installing" class="anchor" aria-hidden="true" href="#installing"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Installing&lt;/h2&gt;
&lt;p&gt;Install and update using &lt;a href="https://pip.pypa.io/en/stable/quickstart/" rel="nofollow"&gt;pip&lt;/a&gt;:&lt;/p&gt;
&lt;pre lang="text"&gt;pip install -U Flask
&lt;/pre&gt;
&lt;a name="user-content-a-simple-example"&gt;&lt;/a&gt;
&lt;h2&gt;&lt;a id="user-content-a-simple-example" class="anchor" aria-hidden="true" href="#a-simple-example"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;A Simple Example&lt;/h2&gt;
&lt;div class="highlight highlight-source-python"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;from&lt;/span&gt; flask &lt;span class="pl-k"&gt;import&lt;/span&gt; Flask

app &lt;span class="pl-k"&gt;=&lt;/span&gt; Flask(&lt;span class="pl-c1"&gt;__name__&lt;/span&gt;)

&lt;span class="pl-en"&gt;@app.route&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;/&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
&lt;span class="pl-k"&gt;def&lt;/span&gt; &lt;span class="pl-en"&gt;hello&lt;/span&gt;():
    &lt;span class="pl-k"&gt;return&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;Hello, World!&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;pre lang="text"&gt;$ env FLASK_APP=hello.py flask run
 * Serving Flask app "hello"
 * Running on http://127.0.0.1:5000/ (Press CTRL+C to quit)
&lt;/pre&gt;
&lt;a name="user-content-contributing"&gt;&lt;/a&gt;
&lt;h2&gt;&lt;a id="user-content-contributing" class="anchor" aria-hidden="true" href="#contributing"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Contributing&lt;/h2&gt;
&lt;p&gt;For guidance on setting up a development environment and how to make a
contribution to Flask, see the &lt;a href="https://github.com/pallets/flask/blob/master/CONTRIBUTING.rst"&gt;contributing guidelines&lt;/a&gt;.&lt;/p&gt;
&lt;a name="user-content-donate"&gt;&lt;/a&gt;
&lt;h2&gt;&lt;a id="user-content-donate" class="anchor" aria-hidden="true" href="#donate"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Donate&lt;/h2&gt;
&lt;p&gt;The Pallets organization develops and supports Flask and the libraries
it uses. In order to grow the community of contributors and users, and
allow the maintainers to devote more time to the projects, &lt;a href="https://psfmember.org/civicrm/contribute/transact?reset=1&amp;amp;id=20" rel="nofollow"&gt;please
donate today&lt;/a&gt;.&lt;/p&gt;
&lt;a name="user-content-links"&gt;&lt;/a&gt;
&lt;h2&gt;&lt;a id="user-content-links" class="anchor" aria-hidden="true" href="#links"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Links&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Website: &lt;a href="https://palletsprojects.com/p/flask/" rel="nofollow"&gt;https://palletsprojects.com/p/flask/&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Documentation: &lt;a href="https://flask.palletsprojects.com/" rel="nofollow"&gt;https://flask.palletsprojects.com/&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Releases: &lt;a href="https://pypi.org/project/Flask/" rel="nofollow"&gt;https://pypi.org/project/Flask/&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Code: &lt;a href="https://github.com/pallets/flask"&gt;https://github.com/pallets/flask&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Issue tracker: &lt;a href="https://github.com/pallets/flask/issues"&gt;https://github.com/pallets/flask/issues&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Test status: &lt;a href="https://dev.azure.com/pallets/flask/_build" rel="nofollow"&gt;https://dev.azure.com/pallets/flask/_build&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Official chat: &lt;a href="https://discord.gg/t6rrQZH" rel="nofollow"&gt;https://discord.gg/t6rrQZH&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;/article&gt;&lt;/div&gt;</description><author>pallets</author><guid isPermaLink="false">https://github.com/pallets/flask</guid><pubDate>Mon, 10 Feb 2020 00:24:00 GMT</pubDate></item><item><title>swisskyrepo/PayloadsAllTheThings #25 in Python, This week</title><link>https://github.com/swisskyrepo/PayloadsAllTheThings</link><description>&lt;p&gt;&lt;i&gt;A list of useful payloads and bypass for Web Application Security and Pentest/CTF&lt;/i&gt;&lt;/p&gt;&lt;div id="readme" class="md" data-path="README.md"&gt;&lt;article class="markdown-body entry-content p-5" itemprop="text"&gt;&lt;h1&gt;&lt;a id="user-content-payloads-all-the-things" class="anchor" aria-hidden="true" href="#payloads-all-the-things"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Payloads All The Things&lt;/h1&gt;
&lt;p&gt;A list of useful payloads and bypasses for Web Application Security.
Feel free to improve with your payloads and techniques !
I &lt;g-emoji class="g-emoji" alias="heart" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/2764.png"&gt;❤️&lt;/g-emoji&gt; pull requests :)&lt;/p&gt;
&lt;p&gt;You can also contribute with a &lt;g-emoji class="g-emoji" alias="beers" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f37b.png"&gt;🍻&lt;/g-emoji&gt; IRL&lt;/p&gt;
&lt;p&gt;Every section contains the following files, you can use the &lt;code&gt;_template_vuln&lt;/code&gt; folder to create a new chapter:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;README.md - vulnerability description and how to exploit it&lt;/li&gt;
&lt;li&gt;Intruder - a set of files to give to Burp Intruder&lt;/li&gt;
&lt;li&gt;Images - pictures for the README.md&lt;/li&gt;
&lt;li&gt;Files - some files referenced in the README.md&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;You might also like the &lt;code&gt;Methodology and Resources&lt;/code&gt; folder :&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="https://github.com/swisskyrepo/PayloadsAllTheThings/blob/master/Methodology%20and%20Resources/"&gt;Methodology and Resources&lt;/a&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/swisskyrepo/PayloadsAllTheThings/blob/master/Methodology%20and%20Resources/Active%20Directory%20Attack.md"&gt;Active Directory Attack.md&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/swisskyrepo/PayloadsAllTheThings/blob/master/Methodology%20and%20Resources/Linux%20-%20Persistence.md"&gt;Linux - Persistence.md&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/swisskyrepo/PayloadsAllTheThings/blob/master/Methodology%20and%20Resources/Linux%20-%20Privilege%20Escalation.md"&gt;Linux - Privilege Escalation.md&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/swisskyrepo/PayloadsAllTheThings/blob/master/Methodology%20and%20Resources/Metasploit%20-%20Cheatsheet.md"&gt;Metasploit - Cheatsheet.md&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/swisskyrepo/PayloadsAllTheThings/blob/master/Methodology%20and%20Resources/Methodology%20and%20enumeration.md"&gt;Methodology and enumeration.md&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/swisskyrepo/PayloadsAllTheThings/blob/master/Methodology%20and%20Resources/Network%20Pivoting%20Techniques.md"&gt;Network Pivoting Techniques.md&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/swisskyrepo/PayloadsAllTheThings/blob/master/Methodology%20and%20Resources/Network%20Discovery.md"&gt;Network Discovery.md&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/swisskyrepo/PayloadsAllTheThings/blob/master/Methodology%20and%20Resources/Reverse%20Shell%20Cheatsheet.md"&gt;Reverse Shell Cheatsheet.md&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/swisskyrepo/PayloadsAllTheThings/blob/master/Methodology%20and%20Resources/Subdomains%20Enumeration.md"&gt;Subdomains Enumeration.md&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/swisskyrepo/PayloadsAllTheThings/blob/master/Methodology%20and%20Resources/Windows%20-%20Download%20and%20Execute.md"&gt;Windows - Download and Execute.md&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/swisskyrepo/PayloadsAllTheThings/blob/master/Methodology%20and%20Resources/Windows%20-%20Mimikatz.md"&gt;Windows - Mimikatz.md&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/swisskyrepo/PayloadsAllTheThings/blob/master/Methodology%20and%20Resources/Windows%20-%20Persistence.md"&gt;Windows - Persistence.md&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/swisskyrepo/PayloadsAllTheThings/blob/master/Methodology%20and%20Resources/Windows%20-%20Post%20Exploitation%20Koadic.md"&gt;Windows - Post Exploitation Koadic.md&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/swisskyrepo/PayloadsAllTheThings/blob/master/Methodology%20and%20Resources/Windows%20-%20Privilege%20Escalation.md"&gt;Windows - Privilege Escalation.md&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/swisskyrepo/PayloadsAllTheThings/blob/master/Methodology%20and%20Resources/Windows%20-%20Using%20credentials.md"&gt;Windows - Using credentials.md&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="https://github.com/swisskyrepo/PayloadsAllTheThings/blob/master/CVE%20Exploits"&gt;CVE Exploits&lt;/a&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Apache Struts 2 CVE-2013-2251 CVE-2017-5638 CVE-2018-11776_.py&lt;/li&gt;
&lt;li&gt;Apache Struts 2 CVE-2017-9805.py&lt;/li&gt;
&lt;li&gt;Apache Struts 2 CVE-2018-11776.py&lt;/li&gt;
&lt;li&gt;Docker API RCE.py&lt;/li&gt;
&lt;li&gt;Drupalgeddon2 CVE-2018-7600.rb&lt;/li&gt;
&lt;li&gt;Heartbleed CVE-2014-0160.py&lt;/li&gt;
&lt;li&gt;JBoss CVE-2015-7501.py&lt;/li&gt;
&lt;li&gt;Jenkins CVE-2015-8103.py&lt;/li&gt;
&lt;li&gt;Jenkins CVE-2016-0792.py&lt;/li&gt;
&lt;li&gt;Rails CVE-2019-5420.rb&lt;/li&gt;
&lt;li&gt;Shellshock CVE-2014-6271.py&lt;/li&gt;
&lt;li&gt;Tomcat CVE-2017-12617.py&lt;/li&gt;
&lt;li&gt;WebLogic CVE-2016-3510.py&lt;/li&gt;
&lt;li&gt;WebLogic CVE-2017-10271.py&lt;/li&gt;
&lt;li&gt;WebLogic CVE-2018-2894.py&lt;/li&gt;
&lt;li&gt;WebSphere CVE-2015-7450.py&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;You want more ? Check the &lt;a href="https://github.com/swisskyrepo/PayloadsAllTheThings/blob/master/BOOKS.md"&gt;Books&lt;/a&gt; and &lt;a href="https://github.com/swisskyrepo/PayloadsAllTheThings/blob/master/YOUTUBE.md"&gt;Youtube videos&lt;/a&gt; selections.&lt;/p&gt;
&lt;/article&gt;&lt;/div&gt;</description><author>swisskyrepo</author><guid isPermaLink="false">https://github.com/swisskyrepo/PayloadsAllTheThings</guid><pubDate>Mon, 10 Feb 2020 00:25:00 GMT</pubDate></item></channel></rss>