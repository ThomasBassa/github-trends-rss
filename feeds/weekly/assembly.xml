<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0"><channel><title>GitHub Trending: Assembly, This week</title><link>https://github.com/trending/assembly?since=weekly</link><description>The top repositories on GitHub for assembly, measured weekly</description><pubDate>Fri, 20 Dec 2019 01:08:19 GMT</pubDate><lastBuildDate>Fri, 20 Dec 2019 01:08:19 GMT</lastBuildDate><generator>PyRSS2Gen-1.1.0</generator><docs>http://blogs.law.harvard.edu/tech/rss</docs><ttl>720</ttl><item><title>chrislgarry/Apollo-11 #1 in Assembly, This week</title><link>https://github.com/chrislgarry/Apollo-11</link><description>&lt;p&gt;&lt;i&gt;Original Apollo 11 Guidance Computer (AGC) source code for the command and lunar modules.&lt;/i&gt;&lt;/p&gt;&lt;div id="readme" class="md" data-path="README.md"&gt;&lt;article class="markdown-body entry-content p-5" itemprop="text"&gt;&lt;h1&gt;&lt;a id="user-content-apollo-11" class="anchor" aria-hidden="true" href="#apollo-11"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Apollo-11&lt;/h1&gt;
&lt;p&gt;&lt;a href="https://www.nasa.gov/mission_pages/apollo/missions/apollo11.html" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/b0879e5ad3dded69a38362aacf9ec5baac73b1eb/68747470733a2f2f72617763646e2e6769746861636b2e636f6d2f616c65656e34322f6261646765732f63393234366637342f7372632f6e6173612e737667" alt="NASA" data-canonical-src="https://rawcdn.githack.com/aleen42/badges/c9246f74/src/nasa.svg" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;g-emoji class="g-emoji" alias="crossed_flags" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f38c.png"&gt;üéå&lt;/g-emoji&gt;
&lt;a href="README.id.md"&gt;Bahasa Indonesia&lt;/a&gt;,
&lt;a href="README.ca.md"&gt;Catal√†&lt;/a&gt;,
&lt;a href="README.de.md"&gt;Deutsch&lt;/a&gt;,
&lt;strong&gt;English&lt;/strong&gt;,
&lt;a href="README.es.md"&gt;Espa√±ol&lt;/a&gt;,
&lt;a href="README.fr.md"&gt;Fran√ßais&lt;/a&gt;,
&lt;a href="README.it.md"&gt;Italiano&lt;/a&gt;,
&lt;a href="README.pl.md"&gt;Polski&lt;/a&gt;,
&lt;a href="README.pt_br.md"&gt;Portugu√™s&lt;/a&gt;,
&lt;a href="README.ru.md"&gt;–†—É—Å—Å–∫–∏–π&lt;/a&gt;,
&lt;a href="README.tr.md"&gt;T√ºrk√ße&lt;/a&gt;,
&lt;a href="README.ro.md"&gt;Rom√¢nƒÉ&lt;/a&gt;,
&lt;a href="README.ar.md"&gt;ÿßŸÑÿπÿ±ÿ®Ÿäÿ©&lt;/a&gt;,
&lt;a href="README.hi_in.md"&gt;‡§π‡§ø‡§Ç‡§¶‡•Ä&lt;/a&gt;,
&lt;a href="README.zh_tw.md"&gt;Ê≠£È´î‰∏≠Êñá&lt;/a&gt;,
&lt;a href="README.zh_cn.md"&gt;ÁÆÄ‰Ωì‰∏≠Êñá&lt;/a&gt;,
&lt;a href="README.ko_kr.md"&gt;ÌïúÍµ≠Ïñ¥&lt;/a&gt;,
&lt;a href="README.ja.md"&gt;Êó•Êú¨&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Original Apollo 11 guidance computer (AGC) source code for Command
Module (Comanche055) and Lunar Module (Luminary099). Digitized by
the folks at &lt;a href="http://www.ibiblio.org/apollo/" rel="nofollow"&gt;Virtual AGC&lt;/a&gt; and &lt;a href="http://web.mit.edu/museum/" rel="nofollow"&gt;MIT Museum&lt;/a&gt;. The goal is to be
a repo for the original Apollo 11 source code. As such, PRs are
welcome for any issues identified between the transcriptions in this
repository and the original source scans for &lt;a href="http://www.ibiblio.org/apollo/ScansForConversion/Luminary099/" rel="nofollow"&gt;Luminary 099&lt;/a&gt; and
&lt;a href="http://www.ibiblio.org/apollo/ScansForConversion/Comanche055/" rel="nofollow"&gt;Comanche 055&lt;/a&gt;, as well as any files I may have missed.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-contributing" class="anchor" aria-hidden="true" href="#contributing"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Contributing&lt;/h2&gt;
&lt;p&gt;Please read &lt;a href="https://github.com/chrislgarry/Apollo-11/blob/master/CONTRIBUTING.md"&gt;CONTRIBUTING.md&lt;/a&gt; before opening a pull request.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-compiling" class="anchor" aria-hidden="true" href="#compiling"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Compiling&lt;/h2&gt;
&lt;p&gt;If you are interested in compiling the original source code, check
out &lt;a href="https://github.com/rburkey2005/virtualagc"&gt;Virtual AGC&lt;/a&gt;.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-attribution" class="anchor" aria-hidden="true" href="#attribution"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Attribution&lt;/h2&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th align="left"&gt;¬†&lt;/th&gt;
&lt;th align="left"&gt;¬†&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td align="left"&gt;Copyright&lt;/td&gt;
&lt;td align="left"&gt;Public domain&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="left"&gt;Comanche055&lt;/td&gt;
&lt;td align="left"&gt;Part of the source code for Colossus 2A, the Command Module's (CM) Apollo Guidance Computer (AGC) for Apollo 11&lt;br&gt;&lt;code&gt;Assemble revision 055 of AGC program Comanche by NASA&lt;/code&gt;&lt;br&gt;&lt;code&gt;2021113-051. 10:28 APR. 1, 1969&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="left"&gt;Luminary099&lt;/td&gt;
&lt;td align="left"&gt;Part of the source code for Luminary 1A, the Lunar Module's (LM) Apollo Guidance Computer (AGC) for Apollo 11&lt;br&gt;&lt;code&gt;Assemble revision 001 of AGC program LYM99 by NASA&lt;/code&gt;&lt;br&gt;&lt;code&gt;2021112-061. 16:27 JUL. 14, 1969&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="left"&gt;Assembler&lt;/td&gt;
&lt;td align="left"&gt;yaYUL&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="left"&gt;Contact&lt;/td&gt;
&lt;td align="left"&gt;Ron Burkey &lt;a href="mailto:info@sandroid.org"&gt;info@sandroid.org&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="left"&gt;Website&lt;/td&gt;
&lt;td align="left"&gt;&lt;a href="http://www.ibiblio.org/apollo" rel="nofollow"&gt;www.ibiblio.org/apollo&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="left"&gt;Digitalization&lt;/td&gt;
&lt;td align="left"&gt;This source code has been transcribed or otherwise adapted from digitized images of a hardcopy from the MIT Museum. The digitization was performed by Paul Fjeld, and arranged for by Deborah Douglas of the Museum. Many thanks to both.&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h3&gt;&lt;a id="user-content-contract-and-approvals" class="anchor" aria-hidden="true" href="#contract-and-approvals"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Contract and Approvals&lt;/h3&gt;
&lt;p&gt;&lt;em&gt;Derived from &lt;a href="https://github.com/chrislgarry/Apollo-11/blob/master/Comanche055/CONTRACT_AND_APPROVALS.agc"&gt;CONTRACT_AND_APPROVALS.agc&lt;/a&gt;&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;This AGC program shall also be referred to as Colossus 2A.&lt;/p&gt;
&lt;p&gt;This program is intended for use in the CM as specified in report &lt;code&gt;R-577&lt;/code&gt;. This program was prepared under DSR project &lt;code&gt;55-23870&lt;/code&gt;, sponsored by the Manned Spacecraft Center of The National Aeronautics and Space Administration through contract &lt;code&gt;NAS 9-4065&lt;/code&gt; with the Instrumentation Laboratory, Massachusetts Institute of Technology, Cambridge, Mass.&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th align="left"&gt;Submitted by&lt;/th&gt;
&lt;th align="left"&gt;Role&lt;/th&gt;
&lt;th align="left"&gt;Date&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td align="left"&gt;Margaret H. Hamilton&lt;/td&gt;
&lt;td align="left"&gt;Colossus Programming Leader&lt;br&gt;Apollo Guidance and Navigation&lt;/td&gt;
&lt;td align="left"&gt;28 Mar 69&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th align="left"&gt;Approved by&lt;/th&gt;
&lt;th align="left"&gt;Role&lt;/th&gt;
&lt;th align="left"&gt;Date&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td align="left"&gt;Daniel J. Lickly&lt;/td&gt;
&lt;td align="left"&gt;Director, Mission Program Development&lt;br&gt;Apollo Guidance and Navigation Program&lt;/td&gt;
&lt;td align="left"&gt;28 Mar 69&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="left"&gt;Fred H. Martin&lt;/td&gt;
&lt;td align="left"&gt;Colossus Project Manager&lt;br&gt;Apollo Guidance and Navigation Program&lt;/td&gt;
&lt;td align="left"&gt;28 Mar 69&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="left"&gt;Norman E. Sears&lt;/td&gt;
&lt;td align="left"&gt;Director, Mission Development&lt;br&gt;Apollo Guidance and Navigation Program&lt;/td&gt;
&lt;td align="left"&gt;28 Mar 69&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="left"&gt;Richard H. Battin&lt;/td&gt;
&lt;td align="left"&gt;Director, Mission Development&lt;br&gt;Apollo Guidance and Navigation Program&lt;/td&gt;
&lt;td align="left"&gt;28 Mar 69&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="left"&gt;David G. Hoag&lt;/td&gt;
&lt;td align="left"&gt;Director&lt;br&gt;Apollo Guidance and Navigation Program&lt;/td&gt;
&lt;td align="left"&gt;28 Mar 69&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="left"&gt;Ralph R. Ragan&lt;/td&gt;
&lt;td align="left"&gt;Deputy Director&lt;br&gt;Instrumentation Laboratory&lt;/td&gt;
&lt;td align="left"&gt;28 Mar 69&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;/article&gt;&lt;/div&gt;</description><author>chrislgarry</author><guid isPermaLink="false">https://github.com/chrislgarry/Apollo-11</guid><pubDate>Fri, 20 Dec 2019 00:01:00 GMT</pubDate></item><item><title>jthuraisamy/SysWhispers #2 in Assembly, This week</title><link>https://github.com/jthuraisamy/SysWhispers</link><description>&lt;p&gt;&lt;i&gt;AV/EDR evasion via direct system calls.&lt;/i&gt;&lt;/p&gt;&lt;div id="readme" class="md" data-path="README.md"&gt;&lt;article class="markdown-body entry-content p-5" itemprop="text"&gt;&lt;h1&gt;&lt;a id="user-content-syswhispers" class="anchor" aria-hidden="true" href="#syswhispers"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;SysWhispers&lt;/h1&gt;
&lt;p&gt;SysWhispers helps with evasion by generating header/ASM files implants can use to make direct system calls.&lt;/p&gt;
&lt;p&gt;All core syscalls are supported from Windows XP to 10. Example generated files available in &lt;code&gt;example-output/&lt;/code&gt;.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-introduction" class="anchor" aria-hidden="true" href="#introduction"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Introduction&lt;/h2&gt;
&lt;p&gt;Various security products place hooks in user-mode APIs which allow them to redirect execution flow to their engines and detect for suspicious behaviour. The functions in &lt;code&gt;ntdll.dll&lt;/code&gt; that make the syscalls consist of just a few assembly instructions, so re-implementing them in your own implant can bypass the triggering of those security product hooks. This technique was popularized by &lt;a href="https://twitter.com/Cneelis" rel="nofollow"&gt;@Cn33liz&lt;/a&gt; and his &lt;a href="https://outflank.nl/blog/2019/06/19/red-team-tactics-combining-direct-system-calls-and-srdi-to-bypass-av-edr/" rel="nofollow"&gt;blog post&lt;/a&gt; has more technical details worth reading.&lt;/p&gt;
&lt;p&gt;SysWhispers provides red teamers the ability to generate header/ASM pairs for any system call in the core kernel image (&lt;code&gt;ntoskrnl.exe&lt;/code&gt;) across any Windows version starting from XP. The headers will also include the necessary type definitions.&lt;/p&gt;
&lt;p&gt;The main implementation difference between this and the &lt;a href="https://github.com/outflanknl/Dumpert"&gt;Dumpert&lt;/a&gt; POC is that this doesn't call &lt;code&gt;RtlGetVersion&lt;/code&gt; to query the OS version, but instead does this in the assembly by querying the PEB directly. The benefit is being able to call one function that supports multiple Windows versions instead of calling multiple functions each supporting one version.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-installation" class="anchor" aria-hidden="true" href="#installation"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Installation&lt;/h2&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;&amp;gt;&lt;/span&gt; git clone https://github.com/jthuraisamy/SysWhispers.git
&lt;span class="pl-k"&gt;&amp;gt;&lt;/span&gt; &lt;span class="pl-c1"&gt;cd&lt;/span&gt; SysWhispers
&lt;span class="pl-k"&gt;&amp;gt;&lt;/span&gt; pip3 install -r .&lt;span class="pl-cce"&gt;\r&lt;/span&gt;equirements.txt
&lt;span class="pl-k"&gt;&amp;gt;&lt;/span&gt; py .&lt;span class="pl-cce"&gt;\s&lt;/span&gt;yswhispers.py --help&lt;/pre&gt;&lt;/div&gt;
&lt;h2&gt;&lt;a id="user-content-usage-and-examples" class="anchor" aria-hidden="true" href="#usage-and-examples"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Usage and Examples&lt;/h2&gt;
&lt;h3&gt;&lt;a id="user-content-command-lines" class="anchor" aria-hidden="true" href="#command-lines"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Command Lines&lt;/h3&gt;
&lt;div class="highlight highlight-source-powershell"&gt;&lt;pre&gt;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; Export all functions with compatibility for all supported Windows versions (see example-output/).&lt;span class="pl-c"&gt;&lt;/span&gt;&lt;/span&gt;
py .\syswhispers.py &lt;span class="pl-k"&gt;--&lt;/span&gt;preset all &lt;span class="pl-k"&gt;-&lt;/span&gt;o syscalls_all

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; Export just the common functions with compatibility for Windows 7, 8, and 10.&lt;span class="pl-c"&gt;&lt;/span&gt;&lt;/span&gt;
py .\syswhispers.py &lt;span class="pl-k"&gt;--&lt;/span&gt;preset common &lt;span class="pl-k"&gt;-&lt;/span&gt;o syscalls_common

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; Export NtProtectVirtualMemory and NtWriteVirtualMemory with compatibility for all versions.&lt;span class="pl-c"&gt;&lt;/span&gt;&lt;/span&gt;
py .\syswhispers.py &lt;span class="pl-k"&gt;--&lt;/span&gt;functions NtProtectVirtualMemory&lt;span class="pl-k"&gt;,&lt;/span&gt;NtWriteVirtualMemory &lt;span class="pl-k"&gt;-&lt;/span&gt;o syscalls_mem

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; Export all functions with compatibility for Windows 7, 8, and 10.&lt;span class="pl-c"&gt;&lt;/span&gt;&lt;/span&gt;
py .\syswhispers.py &lt;span class="pl-k"&gt;--&lt;/span&gt;versions &lt;span class="pl-c1"&gt;7&lt;/span&gt;&lt;span class="pl-k"&gt;,&lt;/span&gt;&lt;span class="pl-c1"&gt;8&lt;/span&gt;&lt;span class="pl-k"&gt;,&lt;/span&gt;&lt;span class="pl-c1"&gt;10&lt;/span&gt; &lt;span class="pl-k"&gt;-&lt;/span&gt;o syscalls_78X&lt;/pre&gt;&lt;/div&gt;
&lt;h3&gt;&lt;a id="user-content-script-output" class="anchor" aria-hidden="true" href="#script-output"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Script Output&lt;/h3&gt;
&lt;pre&gt;&lt;code&gt;PS C:\Projects\SysWhispers&amp;gt; py .\syswhispers.py --preset common --out-file syscom

  ,         ,       ,_ /_   .  ,   ,_    _   ,_   ,
_/_)__(_/__/_)__/_/_/ / (__/__/_)__/_)__(/__/ (__/_)__
      _/_                         /
     (/                          /   @Jackson_T, 2019

SysWhispers: Why call the kernel when you can whisper?

Common functions selected.

Complete! Files written to:
        syscom.asm
        syscom.h
&lt;/code&gt;&lt;/pre&gt;
&lt;h3&gt;&lt;a id="user-content-before-and-after-example-of-classic-createremotethread-dll-injection" class="anchor" aria-hidden="true" href="#before-and-after-example-of-classic-createremotethread-dll-injection"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Before-and-After Example of Classic &lt;code&gt;CreateRemoteThread&lt;/code&gt; DLL Injection&lt;/h3&gt;
&lt;pre&gt;&lt;code&gt;py .\syswhispers.py -f NtAllocateVirtualMemory,NtWriteVirtualMemory,NtCreateThreadEx -o syscalls
&lt;/code&gt;&lt;/pre&gt;
&lt;div class="highlight highlight-source-c"&gt;&lt;pre&gt;#&lt;span class="pl-k"&gt;include&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;&amp;lt;&lt;/span&gt;Windows.h&lt;span class="pl-pds"&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;

&lt;span class="pl-k"&gt;void&lt;/span&gt; &lt;span class="pl-en"&gt;InjectDll&lt;/span&gt;(&lt;span class="pl-k"&gt;const&lt;/span&gt; HANDLE hProcess, &lt;span class="pl-k"&gt;const&lt;/span&gt; &lt;span class="pl-k"&gt;char&lt;/span&gt;* dllPath)
{
    LPVOID lpBaseAddress = &lt;span class="pl-c1"&gt;VirtualAllocEx&lt;/span&gt;(hProcess, &lt;span class="pl-c1"&gt;NULL&lt;/span&gt;, &lt;span class="pl-c1"&gt;strlen&lt;/span&gt;(dllPath), MEM_COMMIT | MEM_RESERVE, PAGE_READWRITE);
    LPVOID lpStartAddress = &lt;span class="pl-c1"&gt;GetProcAddress&lt;/span&gt;(&lt;span class="pl-c1"&gt;GetModuleHandle&lt;/span&gt;(L&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;kernel32.dll&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;), &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;LoadLibraryA&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;);
	
    &lt;span class="pl-c1"&gt;WriteProcessMemory&lt;/span&gt;(hProcess, lpBaseAddress, dllPath, &lt;span class="pl-c1"&gt;strlen&lt;/span&gt;(dllPath), nullptr);
    &lt;span class="pl-c1"&gt;CreateRemoteThread&lt;/span&gt;(hProcess, nullptr, &lt;span class="pl-c1"&gt;0&lt;/span&gt;, (LPTHREAD_START_ROUTINE)lpStartAddress, lpBaseAddress, &lt;span class="pl-c1"&gt;0&lt;/span&gt;, nullptr);
}&lt;/pre&gt;&lt;/div&gt;
&lt;div class="highlight highlight-source-c"&gt;&lt;pre&gt;#&lt;span class="pl-k"&gt;include&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;&amp;lt;&lt;/span&gt;Windows.h&lt;span class="pl-pds"&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;
#&lt;span class="pl-k"&gt;include&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;syscalls.h&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Import the generated header.&lt;/span&gt;

&lt;span class="pl-k"&gt;void&lt;/span&gt; &lt;span class="pl-en"&gt;InjectDll&lt;/span&gt;(&lt;span class="pl-k"&gt;const&lt;/span&gt; HANDLE hProcess, &lt;span class="pl-k"&gt;const&lt;/span&gt; &lt;span class="pl-k"&gt;char&lt;/span&gt;* dllPath)
{
    HANDLE hThread = &lt;span class="pl-c1"&gt;NULL&lt;/span&gt;;
    LPVOID lpAllocationStart = nullptr;
    SIZE_T szAllocationSize = &lt;span class="pl-c1"&gt;strlen&lt;/span&gt;(dllPath);
    LPVOID lpStartAddress = &lt;span class="pl-c1"&gt;GetProcAddress&lt;/span&gt;(&lt;span class="pl-c1"&gt;GetModuleHandle&lt;/span&gt;(L&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;kernel32.dll&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;), &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;LoadLibraryA&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;);
	
    &lt;span class="pl-c1"&gt;NtAllocateVirtualMemory&lt;/span&gt;(hProcess, &amp;amp;lpAllocationStart, &lt;span class="pl-c1"&gt;0&lt;/span&gt;, (PULONG)&amp;amp;szAllocationSize, MEM_COMMIT | MEM_RESERVE, PAGE_READWRITE);
    &lt;span class="pl-c1"&gt;NtWriteVirtualMemory&lt;/span&gt;(hProcess, lpAllocationStart, (PVOID)dllPath, &lt;span class="pl-c1"&gt;strlen&lt;/span&gt;(dllPath), nullptr);
    &lt;span class="pl-c1"&gt;NtCreateThreadEx&lt;/span&gt;(&amp;amp;hThread, GENERIC_EXECUTE, &lt;span class="pl-c1"&gt;NULL&lt;/span&gt;, hProcess, lpStartAddress, lpAllocationStart, &lt;span class="pl-c1"&gt;FALSE&lt;/span&gt;, &lt;span class="pl-c1"&gt;0&lt;/span&gt;, &lt;span class="pl-c1"&gt;0&lt;/span&gt;, &lt;span class="pl-c1"&gt;0&lt;/span&gt;, nullptr);
}&lt;/pre&gt;&lt;/div&gt;
&lt;h2&gt;&lt;a id="user-content-common-functions" class="anchor" aria-hidden="true" href="#common-functions"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Common Functions&lt;/h2&gt;
&lt;p&gt;Using the &lt;code&gt;--preset common&lt;/code&gt; switch will create a header/ASM pair with the following functions:&lt;/p&gt;
&lt;details&gt;
  &lt;summary&gt;Click to expand function list.&lt;/summary&gt;
&lt;ul&gt;
&lt;li&gt;NtCreateProcess (CreateProcess)&lt;/li&gt;
&lt;li&gt;NtCreateThreadEx (CreateRemoteThread)&lt;/li&gt;
&lt;li&gt;NtOpenProcess (OpenProcess)&lt;/li&gt;
&lt;li&gt;NtOpenThread (OpenThread)&lt;/li&gt;
&lt;li&gt;NtSuspendProcess&lt;/li&gt;
&lt;li&gt;NtSuspendThread (SuspendThread)&lt;/li&gt;
&lt;li&gt;NtResumeProcess&lt;/li&gt;
&lt;li&gt;NtResumeThread (ResumeThread)&lt;/li&gt;
&lt;li&gt;NtGetContextThread (GetThreadContext)&lt;/li&gt;
&lt;li&gt;NtSetContextThread (SetThreadContext)&lt;/li&gt;
&lt;li&gt;NtClose (CloseHandle)&lt;/li&gt;
&lt;li&gt;NtReadVirtualMemory (ReadProcessMemory)&lt;/li&gt;
&lt;li&gt;NtWriteVirtualMemory (WriteProcessMemory)&lt;/li&gt;
&lt;li&gt;NtAllocateVirtualMemory (VirtualAllocEx)&lt;/li&gt;
&lt;li&gt;NtProtectVirtualMemory (VirtualProtectEx)&lt;/li&gt;
&lt;li&gt;NtFreeVirtualMemory (VirtualFreeEx)&lt;/li&gt;
&lt;li&gt;NtQuerySystemInformation (GetSystemInfo)&lt;/li&gt;
&lt;li&gt;NtQueryDirectoryFile&lt;/li&gt;
&lt;li&gt;NtQueryInformationFile&lt;/li&gt;
&lt;li&gt;NtQueryInformationProcess&lt;/li&gt;
&lt;li&gt;NtQueryInformationThread&lt;/li&gt;
&lt;li&gt;NtCreateSection (CreateFileMapping)&lt;/li&gt;
&lt;li&gt;NtOpenSection&lt;/li&gt;
&lt;li&gt;NtMapViewOfSection&lt;/li&gt;
&lt;li&gt;NtUnmapViewOfSection&lt;/li&gt;
&lt;li&gt;NtAdjustPrivilegesToken (AdjustTokenPrivileges)&lt;/li&gt;
&lt;li&gt;NtDeviceIoControlFile (DeviceIoControl)&lt;/li&gt;
&lt;li&gt;NtQueueApcThread (QueueUserAPC)&lt;/li&gt;
&lt;li&gt;NtWaitForMultipleObjects (WaitForMultipleObjectsEx)&lt;/li&gt;
&lt;/ul&gt;
&lt;/details&gt;
&lt;h2&gt;&lt;a id="user-content-importing-into-visual-studio" class="anchor" aria-hidden="true" href="#importing-into-visual-studio"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Importing into Visual Studio&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;Copy the generated H/ASM files into the project folder.&lt;/li&gt;
&lt;li&gt;In Visual Studio, go to &lt;em&gt;Project&lt;/em&gt; ‚Üí &lt;em&gt;Build Customizations...&lt;/em&gt; and enable MASM.&lt;/li&gt;
&lt;li&gt;In the &lt;em&gt;Solution Explorer&lt;/em&gt;, add the .h and .asm files to the project as header and source files, respectively.&lt;/li&gt;
&lt;li&gt;Go to the properties of the ASM file, and set the &lt;em&gt;Item Type&lt;/em&gt; to &lt;em&gt;Microsoft Macro Assembler&lt;/em&gt;.&lt;/li&gt;
&lt;li&gt;Ensure that the project platform is set to x64. 32-bit projects are not supported at this time.&lt;/li&gt;
&lt;/ol&gt;
&lt;h2&gt;&lt;a id="user-content-caveats-and-limitations" class="anchor" aria-hidden="true" href="#caveats-and-limitations"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Caveats and Limitations&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Only 64-bit Windows is supported at this time.&lt;/li&gt;
&lt;li&gt;System calls from the graphical subsystem (&lt;code&gt;win32k.sys&lt;/code&gt;) are not supported.&lt;/li&gt;
&lt;li&gt;Tested on Visual Studio 2019 (v142) with Windows 10 SDK.&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-troubleshooting" class="anchor" aria-hidden="true" href="#troubleshooting"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Troubleshooting&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;ModuleNotFoundError&lt;/code&gt; in Python script.
&lt;ul&gt;
&lt;li&gt;Ensure that the required modules are installed with &lt;code&gt;pip3 install -r requirements.txt&lt;/code&gt;.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Type redefinitions errors: a project may not compile if typedefs in &lt;code&gt;syscalls.h&lt;/code&gt; have already been defined.
&lt;ul&gt;
&lt;li&gt;Ensure that only required functions are included (i.e. &lt;code&gt;--preset all&lt;/code&gt; is rarely necessary).&lt;/li&gt;
&lt;li&gt;If a typedef is already defined in another used header, then it could be removed from &lt;code&gt;syscalls.h&lt;/code&gt;.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-credits" class="anchor" aria-hidden="true" href="#credits"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Credits&lt;/h2&gt;
&lt;p&gt;This script was developed by &lt;a href="https://twitter.com/Jackson_T" rel="nofollow"&gt;@Jackson_T&lt;/a&gt; but builds upon the work of many others:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://twitter.com/j00ru" rel="nofollow"&gt;@j00ru&lt;/a&gt; for maintaining syscall numbers in machine-readable formats.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://twitter.com/FoxHex0ne" rel="nofollow"&gt;@FoxHex0ne&lt;/a&gt; for cataloguing many function prototypes and typedefs in a machine-readable format.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://twitter.com/PetrBenes" rel="nofollow"&gt;@PetrBenes&lt;/a&gt;, &lt;a href="https://undocumented.ntinternals.net/" rel="nofollow"&gt;NTInternals.net team&lt;/a&gt;, and &lt;a href="https://docs.microsoft.com/en-us/windows/" rel="nofollow"&gt;MSDN&lt;/a&gt; for additional prototypes and typedefs.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://twitter.com/Cneelis" rel="nofollow"&gt;@Cn33liz&lt;/a&gt; for the initial &lt;a href="https://github.com/outflanknl/Dumpert"&gt;Dumpert&lt;/a&gt; POC implementation.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Special thanks to &lt;a href="https://twitter.com/Dcept905" rel="nofollow"&gt;@Dcept905&lt;/a&gt; for testing and suggestions.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-related-articles-and-projects" class="anchor" aria-hidden="true" href="#related-articles-and-projects"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Related Articles and Projects&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://twitter.com/0x00dtm" rel="nofollow"&gt;@0x00dtm&lt;/a&gt;: &lt;a href="https://0x00sec.org/t/userland-api-monitoring-and-code-injection-detection/5565" rel="nofollow"&gt;Userland API Monitoring and Code Injection Detection&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://twitter.com/0x00dtm" rel="nofollow"&gt;@0x00dtm&lt;/a&gt;: &lt;a href="https://0x00sec.org/t/defeating-userland-hooks-ft-bitdefender/12496" rel="nofollow"&gt;Defeating Userland Hooks (ft. Bitdefender)&lt;/a&gt; (&lt;a href="https://github.com/NtRaiseHardError/Antimalware-Research/tree/master/Generic/Userland%20Hooking/AntiHook"&gt;Code&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;a href="https://twitter.com/Cneelis" rel="nofollow"&gt;@Cn33liz&lt;/a&gt;: &lt;a href="https://outflank.nl/blog/2019/06/19/red-team-tactics-combining-direct-system-calls-and-srdi-to-bypass-av-edr/" rel="nofollow"&gt;Combining Direct System Calls and sRDI to bypass AV/EDR&lt;/a&gt; (&lt;a href="https://github.com/outflanknl/Dumpert"&gt;Code&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;a href="https://twitter.com/SpecialHoang" rel="nofollow"&gt;@SpecialHoang&lt;/a&gt;: &lt;a href="https://medium.com/@fsx30/bypass-edrs-memory-protection-introduction-to-hooking-2efb21acffd6" rel="nofollow"&gt;Bypass EDR‚Äôs memory protection, introduction to hooking&lt;/a&gt; (&lt;a href="https://github.com/hoangprod/AndrewSpecial/tree/master"&gt;Code&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;a href="https://twitter.com/_xpn_" rel="nofollow"&gt;@xpn&lt;/a&gt; and &lt;a href="https://twitter.com/domchell" rel="nofollow"&gt;@domchell&lt;/a&gt;: &lt;a href="https://www.mdsec.co.uk/2019/03/silencing-cylance-a-case-study-in-modern-edrs/" rel="nofollow"&gt;Silencing Cylance: A Case Study in Modern EDRs&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://twitter.com/mrjefftang" rel="nofollow"&gt;@mrjefftang&lt;/a&gt;: &lt;a href="https://threatvector.cylance.com/en_us/home/universal-unhooking-blinding-security-software.html" rel="nofollow"&gt;Universal Unhooking: Blinding Security Software&lt;/a&gt; (&lt;a href="https://github.com/CylanceVulnResearch/ReflectiveDLLRefresher"&gt;Code&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;a href="https://twitter.com/spotheplanet" rel="nofollow"&gt;@spotheplanet&lt;/a&gt;: &lt;a href="https://ired.team/offensive-security/defense-evasion/how-to-unhook-a-dll-using-c++" rel="nofollow"&gt;Full DLL Unhooking with C++&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://twitter.com/hasherezade" rel="nofollow"&gt;@hasherezade&lt;/a&gt;: &lt;a href="https://blog.malwarebytes.com/threat-analysis/2016/11/floki-bot-and-the-stealthy-dropper/" rel="nofollow"&gt;Floki Bot and the stealthy dropper&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://twitter.com/hodg87" rel="nofollow"&gt;@hodg87&lt;/a&gt;: &lt;a href="https://www.cyberbit.com/blog/endpoint-security/latest-trickbot-variant-has-new-tricks-up-its-sleeve/" rel="nofollow"&gt;Latest Trickbot Variant has New Tricks Up Its Sleeve&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://twitter.com/hodg87" rel="nofollow"&gt;@hodg87&lt;/a&gt;: &lt;a href="https://www.cyberbit.com/blog/endpoint-security/malware-mitigation-when-direct-system-calls-are-used/" rel="nofollow"&gt;Malware Mitigation when Direct System Calls are Used&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-licence" class="anchor" aria-hidden="true" href="#licence"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Licence&lt;/h2&gt;
&lt;p&gt;This project is licensed under the Apache License 2.0.&lt;/p&gt;
&lt;/article&gt;&lt;/div&gt;</description><author>jthuraisamy</author><guid isPermaLink="false">https://github.com/jthuraisamy/SysWhispers</guid><pubDate>Fri, 20 Dec 2019 00:02:00 GMT</pubDate></item><item><title>pret/pokecrystal #3 in Assembly, This week</title><link>https://github.com/pret/pokecrystal</link><description>&lt;p&gt;&lt;i&gt;disassembly of Pok√©mon Crystal&lt;/i&gt;&lt;/p&gt;&lt;div id="readme" class="md" data-path="README.md"&gt;&lt;article class="markdown-body entry-content p-5" itemprop="text"&gt;&lt;h1&gt;&lt;a id="user-content-pok√©mon-crystal-" class="anchor" aria-hidden="true" href="#pok√©mon-crystal-"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Pok√©mon Crystal &lt;a href="https://travis-ci.org/pret/pokecrystal" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/3a4d5aab2b6f7b42d5d0e157b3140ef15eadce26/68747470733a2f2f7472617669732d63692e6f72672f707265742f706f6b656372797374616c2e7376673f6272616e63683d6d6173746572" alt="Build Status" data-canonical-src="https://travis-ci.org/pret/pokecrystal.svg?branch=master" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/h1&gt;
&lt;p&gt;This is a disassembly of Pok√©mon Crystal.&lt;/p&gt;
&lt;p&gt;It builds the following ROMs:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Pokemon - Crystal Version (UE) (V1.0) [C][!].gbc &lt;code&gt;sha1: f4cd194bdee0d04ca4eac29e09b8e4e9d818c133&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Pokemon - Crystal Version (UE) (V1.1) [C][!].gbc &lt;code&gt;sha1: f2f52230b536214ef7c9924f483392993e226cfb&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Pokemon - Crystal Version (A) [C][!].gbc &lt;code&gt;sha1: a0fc810f1d4e124434f7be2c989ab5b5892ddf36&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;To set up the repository, see &lt;a href="INSTALL.md"&gt;INSTALL.md&lt;/a&gt;.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-see-also" class="anchor" aria-hidden="true" href="#see-also"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;See also&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="FAQ.md"&gt;&lt;strong&gt;FAQ&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://pret.github.io/pokecrystal/" rel="nofollow"&gt;&lt;strong&gt;Documentation&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/pret/pokecrystal/wiki"&gt;&lt;strong&gt;Wiki&lt;/strong&gt;&lt;/a&gt; (includes &lt;a href="https://github.com/pret/pokecrystal/wiki/Tutorials"&gt;tutorials&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Discord:&lt;/strong&gt; &lt;a href="https://discord.gg/d5dubZ3" rel="nofollow"&gt;pret&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;IRC:&lt;/strong&gt; &lt;a href="https://kiwiirc.com/client/irc.freenode.net/?#pret" rel="nofollow"&gt;freenode#pret&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Other disassembly projects:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/pret/pokered"&gt;&lt;strong&gt;Pok√©mon Red/Blue&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/pret/pokeyellow"&gt;&lt;strong&gt;Pok√©mon Yellow&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/pret/pokegold"&gt;&lt;strong&gt;Pok√©mon Gold&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/pret/pokepinball"&gt;&lt;strong&gt;Pok√©mon Pinball&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/pret/poketcg"&gt;&lt;strong&gt;Pok√©mon TCG&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/pret/pokeruby"&gt;&lt;strong&gt;Pok√©mon Ruby&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/pret/pokefirered"&gt;&lt;strong&gt;Pok√©mon Fire Red&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/pret/pokeemerald"&gt;&lt;strong&gt;Pok√©mon Emerald&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/article&gt;&lt;/div&gt;</description><author>pret</author><guid isPermaLink="false">https://github.com/pret/pokecrystal</guid><pubDate>Fri, 20 Dec 2019 00:03:00 GMT</pubDate></item><item><title>pret/pokered #4 in Assembly, This week</title><link>https://github.com/pret/pokered</link><description>&lt;p&gt;&lt;i&gt;disassembly of Pok√©mon Red/Blue&lt;/i&gt;&lt;/p&gt;&lt;div id="readme" class="md" data-path="README.md"&gt;&lt;article class="markdown-body entry-content p-5" itemprop="text"&gt;&lt;h1&gt;&lt;a id="user-content-pok√©mon-red-and-blue" class="anchor" aria-hidden="true" href="#pok√©mon-red-and-blue"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Pok√©mon Red and Blue&lt;/h1&gt;
&lt;p&gt;This is a disassembly of Pok√©mon Red and Blue.&lt;/p&gt;
&lt;p&gt;It builds the following roms:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Pokemon Red (UE) [S][!].gb  &lt;code&gt;md5: 3d45c1ee9abd5738df46d2bdda8b57dc&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Pokemon Blue (UE) [S][!].gb &lt;code&gt;md5: 50927e843568814f7ed45ec4f944bd8b&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;To set up the repository, see &lt;a href="INSTALL.md"&gt;&lt;strong&gt;INSTALL.md&lt;/strong&gt;&lt;/a&gt;.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-see-also" class="anchor" aria-hidden="true" href="#see-also"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;See also&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Disassembly of &lt;a href="https://github.com/pret/pokeyellow"&gt;&lt;strong&gt;Pok√©mon Yellow&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Disassembly of &lt;a href="https://github.com/pret/pokegold"&gt;&lt;strong&gt;Pok√©mon Gold&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Disassembly of &lt;a href="https://github.com/pret/pokecrystal"&gt;&lt;strong&gt;Pok√©mon Crystal&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Disassembly of &lt;a href="https://github.com/pret/pokepinball"&gt;&lt;strong&gt;Pok√©mon Pinball&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Disassembly of &lt;a href="https://github.com/pret/poketcg"&gt;&lt;strong&gt;Pok√©mon TCG&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Disassembly of &lt;a href="https://github.com/pret/pokeruby"&gt;&lt;strong&gt;Pok√©mon Ruby&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Disassembly of &lt;a href="https://github.com/pret/pokefirered"&gt;&lt;strong&gt;Pok√©mon Fire Red&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Disassembly of &lt;a href="https://github.com/pret/pokeemerald"&gt;&lt;strong&gt;Pok√©mon Emerald&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Discord: &lt;a href="https://discord.gg/d5dubZ3" rel="nofollow"&gt;&lt;strong&gt;pret&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;irc: &lt;strong&gt;irc.freenode.net&lt;/strong&gt; &lt;a href="https://kiwiirc.com/client/irc.freenode.net/?#pret" rel="nofollow"&gt;&lt;strong&gt;#pret&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/article&gt;&lt;/div&gt;</description><author>pret</author><guid isPermaLink="false">https://github.com/pret/pokered</guid><pubDate>Fri, 20 Dec 2019 00:04:00 GMT</pubDate></item></channel></rss>