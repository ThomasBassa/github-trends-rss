<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0"><channel><title>GitHub Trending: Common Lisp, This week</title><link>https://github.com/trending/common-lisp?since=weekly</link><description>The top repositories on GitHub for common-lisp, measured weekly</description><pubDate>Thu, 30 Jan 2020 01:14:19 GMT</pubDate><lastBuildDate>Thu, 30 Jan 2020 01:14:19 GMT</lastBuildDate><generator>PyRSS2Gen-1.1.0</generator><docs>http://blogs.law.harvard.edu/tech/rss</docs><ttl>720</ttl><item><title>dimitri/pgloader #1 in Common Lisp, This week</title><link>https://github.com/dimitri/pgloader</link><description>&lt;p&gt;&lt;i&gt;Migrate to PostgreSQL in a single command!&lt;/i&gt;&lt;/p&gt;&lt;div id="readme" class="md" data-path="README.md"&gt;&lt;article class="markdown-body entry-content p-5" itemprop="text"&gt;&lt;h1&gt;&lt;a id="user-content-pgloader" class="anchor" aria-hidden="true" href="#pgloader"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;PGLoader&lt;/h1&gt;
&lt;p&gt;&lt;a href="https://travis-ci.org/dimitri/pgloader" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/9b87c70a3ff663e62c6f1b8291648a118a79f515/68747470733a2f2f7472617669732d63692e6f72672f64696d697472692f70676c6f616465722e7376673f6272616e63683d6d6173746572" alt="Build Status" data-canonical-src="https://travis-ci.org/dimitri/pgloader.svg?branch=master" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://gitter.im/dimitri/pgloader?utm_source=badge&amp;amp;utm_medium=badge&amp;amp;utm_campaign=pr-badge&amp;amp;utm_content=badge" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/da2edb525cde1455a622c58c0effc3a90b9a181c/68747470733a2f2f6261646765732e6769747465722e696d2f4a6f696e253230436861742e737667" alt="Join the chat at https://gitter.im/dimitri/pgloader" data-canonical-src="https://badges.gitter.im/Join%20Chat.svg" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://cloud.docker.com/repository/docker/dimitri/pgloader" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/d8f7cd9f29252b82f3da2835032c07b8b7b36b2a/68747470733a2f2f696d672e736869656c64732e696f2f646f636b65722f636c6f75642f6275696c642f64696d697472692f70676c6f616465722e737667" alt="Docker Build Status" data-canonical-src="https://img.shields.io/docker/cloud/build/dimitri/pgloader.svg" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="http://pgloader.readthedocs.io/en/latest/" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/4ab5920bc04dc763ffe341142d5a9b292eeff516/68747470733a2f2f72656164746865646f63732e6f72672f70726f6a656374732f70676c6f616465722f62616467652f3f76657273696f6e3d6c6174657374267374796c653d706c6173746963" alt="Read The Docs Status" data-canonical-src="https://readthedocs.org/projects/pgloader/badge/?version=latest&amp;amp;style=plastic" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;pgloader is a data loading tool for PostgreSQL, using the &lt;code&gt;COPY&lt;/code&gt; command.&lt;/p&gt;
&lt;p&gt;Its main advantage over just using &lt;code&gt;COPY&lt;/code&gt; or &lt;code&gt;\copy&lt;/code&gt;, and over using a
&lt;em&gt;Foreign Data Wrapper&lt;/em&gt;, is its transaction behaviour, where &lt;em&gt;pgloader&lt;/em&gt;
will keep a separate file of rejected data, but continue trying to
&lt;code&gt;copy&lt;/code&gt; good data in your database.&lt;/p&gt;
&lt;p&gt;The default PostgreSQL behaviour is transactional, which means that
&lt;em&gt;any&lt;/em&gt; erroneous line in the input data (file or remote database) will
stop the entire bulk load for the table.&lt;/p&gt;
&lt;p&gt;pgloader also implements data reformatting, a typical example of that
being the transformation of MySQL datestamps &lt;code&gt;0000-00-00&lt;/code&gt; and
&lt;code&gt;0000-00-00 00:00:00&lt;/code&gt; to PostgreSQL &lt;code&gt;NULL&lt;/code&gt; value (because our calendar
never had a &lt;em&gt;year zero&lt;/em&gt;).&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-versioning" class="anchor" aria-hidden="true" href="#versioning"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Versioning&lt;/h2&gt;
&lt;p&gt;pgloader version 1.x is quite old and was developed in &lt;code&gt;TCL&lt;/code&gt;.
When faced with maintaining that code, the new emerging development
team (hi!) picked &lt;code&gt;python&lt;/code&gt; instead because that made sense at the
time. So pgloader version 2.x was written in python.&lt;/p&gt;
&lt;p&gt;The current version of pgloader is the 3.x series, which is written in
&lt;a href="http://cliki.net/" rel="nofollow"&gt;Common Lisp&lt;/a&gt; for better development flexibility,
runtime performance, and support of real threading.&lt;/p&gt;
&lt;p&gt;The versioning is now following the Emacs model, where any X.0 release
number means you're using a development version (alpha, beta, or release
candidate). The next stable versions are going to be &lt;code&gt;3.1&lt;/code&gt; then &lt;code&gt;3.2&lt;/code&gt; etc.&lt;/p&gt;
&lt;p&gt;When using a development snapshot rather than a released version the version
number includes the git hash (in its abbreviated form):&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;pgloader version "3.0.99"&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Release candidate 9 for pgloader version 3.1, with a &lt;em&gt;git tag&lt;/em&gt; named
&lt;code&gt;v3.0.99&lt;/code&gt; so that it's easy to checkout the same sources as the
released code.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;pgloader version "3.0.fecae2c"&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Development snapshot again &lt;em&gt;git hash&lt;/em&gt; &lt;code&gt;fecae2c&lt;/code&gt;. It's possible to have
the same sources on another setup with using the git command &lt;code&gt;git checkout fecae2c&lt;/code&gt;.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;pgloader version "3.1.0"&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Stable release.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-licence" class="anchor" aria-hidden="true" href="#licence"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;LICENCE&lt;/h2&gt;
&lt;p&gt;pgloader is available under &lt;a href="http://www.postgresql.org/about/licence/" rel="nofollow"&gt;The PostgreSQL Licence&lt;/a&gt;.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-install" class="anchor" aria-hidden="true" href="#install"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;INSTALL&lt;/h2&gt;
&lt;p&gt;You can install pgloader directly from
&lt;a href="https://wiki.postgresql.org/wiki/Apt" rel="nofollow"&gt;apt.postgresql.org&lt;/a&gt; and from official
debian repositories, see
&lt;a href="https://packages.debian.org/search?keywords=pgloader" rel="nofollow"&gt;packages.debian.org/pgloader&lt;/a&gt;.&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;$ apt-get install pgloader
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;You can also use a &lt;strong&gt;docker&lt;/strong&gt; image for pgloader at
&lt;a href="https://hub.docker.com/r/dimitri/pgloader/" rel="nofollow"&gt;https://hub.docker.com/r/dimitri/pgloader/&lt;/a&gt;:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;$ docker pull dimitri/pgloader
$ docker run --rm --name pgloader dimitri/pgloader:latest pgloader --version
$ docker run --rm --name pgloader dimitri/pgloader:latest pgloader --help
&lt;/code&gt;&lt;/pre&gt;
&lt;h2&gt;&lt;a id="user-content-build-from-sources" class="anchor" aria-hidden="true" href="#build-from-sources"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Build from sources&lt;/h2&gt;
&lt;p&gt;pgloader is now a Common Lisp program, tested using the
&lt;a href="http://sbcl.org/" rel="nofollow"&gt;SBCL&lt;/a&gt; (&amp;gt;= 1.2.5) and
&lt;a href="http://ccl.clozure.com/" rel="nofollow"&gt;Clozure CL&lt;/a&gt; implementations with
&lt;a href="http://www.quicklisp.org/beta/" rel="nofollow"&gt;Quicklisp&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;When building from sources, you should always build from the current git
&lt;code&gt;HEAD&lt;/code&gt; as it's basically the only source that is managed in a way to ensure
it builds aginst current set of dependencies versions.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-building-from-sources-on-debian" class="anchor" aria-hidden="true" href="#building-from-sources-on-debian"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Building from sources on debian&lt;/h3&gt;
&lt;pre&gt;&lt;code&gt;$ apt-get install sbcl unzip libsqlite3-dev make curl gawk freetds-dev libzip-dev
$ cd /path/to/pgloader
$ make pgloader
$ ./build/bin/pgloader --help
&lt;/code&gt;&lt;/pre&gt;
&lt;h3&gt;&lt;a id="user-content-building-from-sources-on-macos" class="anchor" aria-hidden="true" href="#building-from-sources-on-macos"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Building from sources on macOS&lt;/h3&gt;
&lt;p&gt;When using &lt;a href="https://brew.sh" rel="nofollow"&gt;brew&lt;/a&gt;, it should be a simple &lt;code&gt;brew install --HEAD pgloader&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;When using &lt;a href="https://www.macports.org" rel="nofollow"&gt;macports&lt;/a&gt;, then we have a situation to
deal with with shared objects pgloader depends on, as reported in issue #161
at &lt;a href="https://github.com/dimitri/pgloader/issues/161#issuecomment-201162647"&gt;https://github.com/dimitri/pgloader/issues/161#issuecomment-201162647&lt;/a&gt;:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;I was able to get a clean build without having to disable compression after
symlinking /usr/local/lib to /opt/local/lib. Note that I did not have
anything installed to /usr/local/lib so I didn't lose anything here.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3&gt;&lt;a id="user-content-building-from-sources-on-windows" class="anchor" aria-hidden="true" href="#building-from-sources-on-windows"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Building from sources on Windows&lt;/h3&gt;
&lt;p&gt;Building pgloader on Windows is supported, thanks to Common Lisp
implementations being available on that platform, and to the Common Lisp
Standard for making it easy to write actually portable code.&lt;/p&gt;
&lt;p&gt;It is recommended to have a look at the issues labelled with &lt;em&gt;Windows
support&lt;/em&gt; if you run into trouble when building
pgloader:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://github.com/dimitri/pgloader/issues?utf8=%E2%9C%93&amp;amp;q=label%3A%22Windows%20support%22%20"&gt;https://github.com/dimitri/pgloader/issues?utf8=✓&amp;amp;q=label%3A%22Windows%20support%22%20&lt;/a&gt;&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-building-docker-image-from-sources" class="anchor" aria-hidden="true" href="#building-docker-image-from-sources"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Building Docker image from sources&lt;/h3&gt;
&lt;p&gt;You can build a Docker image from source using SBCL by default:&lt;/p&gt;
&lt;p&gt;$ docker build .&lt;/p&gt;
&lt;p&gt;Or Clozure CL (CCL):&lt;/p&gt;
&lt;p&gt;$ docker build -f Dockerfile.ccl .&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-more-options-when-building-from-source" class="anchor" aria-hidden="true" href="#more-options-when-building-from-source"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;More options when building from source&lt;/h2&gt;
&lt;p&gt;The &lt;code&gt;Makefile&lt;/code&gt; target &lt;code&gt;pgloader&lt;/code&gt; knows how to produce a Self Contained
Binary file for pgloader, found at &lt;code&gt;./build/bin/pgloader&lt;/code&gt;:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;$ make pgloader
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;By default, the &lt;code&gt;Makefile&lt;/code&gt; uses &lt;a href="http://sbcl.org/" rel="nofollow"&gt;SBCL&lt;/a&gt; to compile your
binary image, though it's possible to build using
&lt;a href="http://ccl.clozure.com/" rel="nofollow"&gt;CCL&lt;/a&gt;.&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;$ make CL=ccl pgloader
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;If using &lt;code&gt;SBCL&lt;/code&gt; and it supports core compression, the make process will
use it to generate a smaller binary.  To force disabling core
compression, you may use:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;$ make COMPRESS_CORE=no pgloader
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;The &lt;code&gt;--compress-core&lt;/code&gt; is unique to SBCL, so not used when &lt;code&gt;CC&lt;/code&gt; is different
from the &lt;code&gt;sbcl&lt;/code&gt; value.&lt;/p&gt;
&lt;p&gt;You can also tweak the default amount of memory that the &lt;code&gt;pgloader&lt;/code&gt; image
will allow itself using when running through your data (don't ask for more
than your current RAM tho):&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;$ make DYNSIZE=8192 pgloader
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;The &lt;code&gt;make pgloader&lt;/code&gt; command when successful outputs a &lt;code&gt;./build/bin/pgloader&lt;/code&gt;
file for you to use.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-usage" class="anchor" aria-hidden="true" href="#usage"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Usage&lt;/h2&gt;
&lt;p&gt;You can either give a command file to pgloader or run it all from the
command line, see the
&lt;a href="https://pgloader.readthedocs.io/en/latest/tutorial/tutorial.html#pgloader-quick-start" rel="nofollow"&gt;pgloader quick start&lt;/a&gt; on
&lt;a href="https://pgloader.readthedocs.io" rel="nofollow"&gt;https://pgloader.readthedocs.io&lt;/a&gt; for more details.&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;$ ./build/bin/pgloader --help
$ ./build/bin/pgloader &amp;lt;file.load&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;For example, for a full migration from SQLite:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;$ createdb newdb
$ pgloader ./test/sqlite/sqlite.db postgresql:///newdb
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Or for a full migration from MySQL, including schema definition (tables,
indexes, foreign keys, comments) and parallel loading of the corrected data:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;$ createdb pagila
$ pgloader mysql://user@localhost/sakila postgresql:///pagila
&lt;/code&gt;&lt;/pre&gt;
&lt;/article&gt;&lt;/div&gt;</description><author>dimitri</author><guid isPermaLink="false">https://github.com/dimitri/pgloader</guid><pubDate>Thu, 30 Jan 2020 00:01:00 GMT</pubDate></item><item><title>norvig/paip-lisp #2 in Common Lisp, This week</title><link>https://github.com/norvig/paip-lisp</link><description>&lt;p&gt;&lt;i&gt;Lisp code for the textbook "Paradigms of Artificial Intelligence Programming"&lt;/i&gt;&lt;/p&gt;&lt;div id="readme" class="md" data-path="README.md"&gt;&lt;article class="markdown-body entry-content p-5" itemprop="text"&gt;&lt;h1&gt;&lt;a id="user-content-paradigms-of-artificial-intelligence-programming" class="anchor" aria-hidden="true" href="#paradigms-of-artificial-intelligence-programming"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;em&gt;Paradigms of Artificial Intelligence Programming&lt;/em&gt;&lt;/h1&gt;
&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="paip-cover.gif"&gt;&lt;img src="paip-cover.gif" alt="PAIP" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;This is an open-source repository for the book &lt;em&gt;Paradigms of Artificial
Intelligence Programming: Case Studies in Common Lisp&lt;/em&gt; by Peter Norvig (1992), and the code contained therein.  The copyright has reverted to the author, who has shared it here under MIT license.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-the-book" class="anchor" aria-hidden="true" href="#the-book"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;The Book&lt;/h2&gt;
&lt;p&gt;The book is available in these formats:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;pdf: &lt;a href="https://github.com/norvig/paip-lisp/blob/master/PAIP-part1.pdf"&gt;PAIP-part1.pdf&lt;/a&gt; (Chapters 1-14) and &lt;a href="https://github.com/norvig/paip-lisp/blob/master/PAIP-part2.pdf"&gt;PAIP-part2.pdf&lt;/a&gt; (15-25)&lt;/li&gt;
&lt;li&gt;text: &lt;a href="https://github.com/norvig/paip-lisp/blob/master/PAIP.txt"&gt;PAIP.txt&lt;/a&gt; (containing many errors)&lt;/li&gt;
&lt;li&gt;epub: &lt;a href="https://github.com/norvig/paip-lisp/blob/master/PAIP-safari.epub"&gt;PAIP-safari.epub&lt;/a&gt; (much cleaner)&lt;/li&gt;
&lt;li&gt;and &lt;code&gt;chapter?.md&lt;/code&gt; markdown files:&lt;/li&gt;
&lt;/ul&gt;
&lt;h1&gt;&lt;a id="user-content-table-of-contents" class="anchor" aria-hidden="true" href="#table-of-contents"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Table of Contents&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Paradigms of Artificial Intelligence Programming&lt;/strong&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="docs/frontmatter.md"&gt;Front matter&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="docs/preface.md"&gt;Preface&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Part I:  Introduction to Common Lisp&lt;/strong&gt;
&lt;ul&gt;
&lt;li&gt;1  &lt;a href="docs/chapter1.md"&gt;Introduction to Lisp&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;2  &lt;a href="docs/chapter2.md"&gt;A Simple Lisp Program&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;3 &lt;a href="docs/chapter3.md"&gt;Overview of Lisp&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Part II: Early AI Programs&lt;/strong&gt;
&lt;ul&gt;
&lt;li&gt;4  &lt;a href="docs/chapter4.md"&gt;GPS:  The General problem Solver&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;5  &lt;a href="docs/chapter5.md"&gt;Eliza:  Dialog with a Machine&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;6  &lt;a href="docs/chapter6.md"&gt;Building Software Tools&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;7 &lt;a href="docs/chapter7.md"&gt;Student:  Solving Algebra Word Problems&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;8 &lt;a href="docs/chapter8.md"&gt;Symbolic Mathematics:  A Simplification Program&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Part III:  Tools and Techniques&lt;/strong&gt;
&lt;ul&gt;
&lt;li&gt;9  &lt;a href="docs/chapter9.md"&gt;Efficiency Issues&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;10  &lt;a href="docs/chapter10.md"&gt;Low-Level Efficiency Issues&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;11  &lt;a href="docs/chapter11.md"&gt;Logic Programming&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;12  &lt;a href="docs/chapter12.md"&gt;Compiling Logic programs&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;13  &lt;a href="docs/chapter13.md"&gt;Object-Oriented Programming&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;14  &lt;a href="docs/chapter14.md"&gt;Knowledge Representation and Reasoning&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Part IV:  Advanced AI Programs&lt;/strong&gt;
&lt;ul&gt;
&lt;li&gt;15  &lt;a href="docs/chapter15.md"&gt;Symbolic Mathematics with Canonical Forms&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;16  &lt;a href="docs/chapter16.md"&gt;Expert Systems&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;17  &lt;a href="docs/chapter17.md"&gt;Line-Diagram Labeling by Constraint Satisfaction&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;18  &lt;a href="docs/chapter18.md"&gt;Search and the Game of Othello&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;19  &lt;a href="docs/chapter19.md"&gt;Introduction to Natural Language&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;20  &lt;a href="docs/chapter20.md"&gt;Unification Grammars&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;21  &lt;a href="docs/chapter21.md"&gt;A Grammar of English&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Part V:  The Rest of Lisp&lt;/strong&gt;
&lt;ul&gt;
&lt;li&gt;22  &lt;a href="docs/chapter22.md"&gt;Scheme:  An Uncommon Lisp&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;23  &lt;a href="docs/chapter23.md"&gt;Compiling Lisp&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;24  &lt;a href="docs/chapter24.md"&gt;ANSI Common Lisp&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;25  &lt;a href="docs/chapter25.md"&gt;Troubleshooting&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;As seen on &lt;a href="https://norvig.com/paip-tv.html" rel="nofollow"&gt;TV&lt;/a&gt;. See also: &lt;a href="https://norvig.com/paip-errata.html" rel="nofollow"&gt;errata&lt;/a&gt;, &lt;a href="https://norvig.com/paip-comments.html" rel="nofollow"&gt;comments&lt;/a&gt;,  &lt;a href="https://norvig.com/Lisp-retro.html" rel="nofollow"&gt;retrospective&lt;/a&gt;.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-the-lisp-files" class="anchor" aria-hidden="true" href="#the-lisp-files"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;The Lisp Files&lt;/h2&gt;
&lt;p&gt;The &lt;a href="https://github.com/norvig/paip-lisp/tree/master/lisp"&gt;Lisp code files&lt;/a&gt; are listed here:&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;CH&lt;/th&gt;
&lt;th&gt;Filename&lt;/th&gt;
&lt;th&gt;Description&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;-&lt;/td&gt;
&lt;td&gt;&lt;a href="lisp/examples.lisp"&gt;examples.lisp&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;A list of example inputs taken from the book&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;-&lt;/td&gt;
&lt;td&gt;&lt;a href="lisp/tutor.lisp"&gt;tutor.lisp&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;An interpreter for running the examples&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;-&lt;/td&gt;
&lt;td&gt;&lt;a href="lisp/auxfns.lisp"&gt;auxfns.lisp&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;Auxiliary functions; load this before anything else&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;1&lt;/td&gt;
&lt;td&gt;&lt;a href="lisp/intro.lisp"&gt;intro.lisp&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;A few simple definitions&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;2&lt;/td&gt;
&lt;td&gt;&lt;a href="lisp/simple.lisp"&gt;simple.lisp&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;Random sentence generator (two versions)&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;3&lt;/td&gt;
&lt;td&gt;&lt;a href="lisp/overview.lisp"&gt;overview.lisp&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;14 versions of LENGTH and other examples&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;4&lt;/td&gt;
&lt;td&gt;&lt;a href="lisp/gps1.lisp"&gt;gps1.lisp&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;Simple version of General Problem Solver&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;4&lt;/td&gt;
&lt;td&gt;&lt;a href="lisp/gps.lisp"&gt;gps.lisp&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;Final version of General Problem Solver&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;5&lt;/td&gt;
&lt;td&gt;&lt;a href="lisp/eliza1.lisp"&gt;eliza1.lisp&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;Basic version of Eliza program&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;5&lt;/td&gt;
&lt;td&gt;&lt;a href="lisp/eliza.lisp"&gt;eliza.lisp&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;Eliza with more rules; different reader&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;6&lt;/td&gt;
&lt;td&gt;&lt;a href="lisp/patmatch.lisp"&gt;patmatch.lisp&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;Pattern Matching Utility&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;6&lt;/td&gt;
&lt;td&gt;&lt;a href="lisp/eliza-pm.lisp"&gt;eliza-pm.lisp&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;Version of Eliza using utilities&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;6&lt;/td&gt;
&lt;td&gt;&lt;a href="lisp/search.lisp"&gt;search.lisp&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;Search Utility&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;6&lt;/td&gt;
&lt;td&gt;&lt;a href="lisp/gps-srch.lisp"&gt;gps-srch.lisp&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;Version of GPS using the search utility&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;7&lt;/td&gt;
&lt;td&gt;&lt;a href="lisp/student.lisp"&gt;student.lisp&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;The Student Program&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;8&lt;/td&gt;
&lt;td&gt;&lt;a href="lisp/macsyma.lisp"&gt;macsyma.lisp&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;The Macsyma Program&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;8&lt;/td&gt;
&lt;td&gt;&lt;a href="lisp/macsymar.lisp"&gt;macsymar.lisp&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;Simplification and integration rules for Macsyma&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;9-10&lt;/td&gt;
&lt;td&gt; &lt;/td&gt;
&lt;td&gt;(functions from these chapters are in &lt;a href="lisp/auxfns.lisp"&gt;auxfns.lisp&lt;/a&gt;)&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;11&lt;/td&gt;
&lt;td&gt;&lt;a href="lisp/unify.lisp"&gt;unify.lisp&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;Unification functions&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;11&lt;/td&gt;
&lt;td&gt;&lt;a href="lisp/prolog1.lisp"&gt;prolog1.lisp&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;First version of Prolog interpreter&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;11&lt;/td&gt;
&lt;td&gt;&lt;a href="lisp/prolog.lisp"&gt;prolog.lisp&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;Final version of Prolog interpreter&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;12&lt;/td&gt;
&lt;td&gt;&lt;a href="lisp/prologc1.lisp"&gt;prologc1.lisp&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;First version of Prolog compiler&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;12&lt;/td&gt;
&lt;td&gt;&lt;a href="lisp/prologc2.lisp"&gt;prologc2.lisp&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;Second version of Prolog compiler&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;12&lt;/td&gt;
&lt;td&gt;&lt;a href="lisp/prologc.lisp"&gt;prologc.lisp&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;Final version of Prolog compiler&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;12&lt;/td&gt;
&lt;td&gt;&lt;a href="lisp/prologcp.lisp"&gt;prologcp.lisp&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;Primitives for Prolog compiler&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;13&lt;/td&gt;
&lt;td&gt;&lt;a href="lisp/clos.lisp"&gt;clos.lisp&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;Some object-oriented and CLOS code&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;14&lt;/td&gt;
&lt;td&gt;&lt;a href="lisp/krep1.lisp"&gt;krep1.lisp&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;Knowledge Representation code: first version&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;14&lt;/td&gt;
&lt;td&gt;&lt;a href="lisp/krep2.lisp"&gt;krep2.lisp&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;Knowledge Representation code with conjunctions&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;14&lt;/td&gt;
&lt;td&gt;&lt;a href="lisp/krep.lisp"&gt;krep.lisp&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;Final KR code: worlds and attached functions&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;15&lt;/td&gt;
&lt;td&gt;&lt;a href="lisp/cmacsyma.lisp"&gt;cmacsyma.lisp&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;Efficient Macsyma with canonical form&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;16&lt;/td&gt;
&lt;td&gt;&lt;a href="lisp/mycin.lisp"&gt;mycin.lisp&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;The Emycin expert system shell&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;16&lt;/td&gt;
&lt;td&gt;&lt;a href="lisp/mycin-r.lisp"&gt;mycin-r.lisp&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;Some rules for a medical application of emycin&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;17&lt;/td&gt;
&lt;td&gt;&lt;a href="lisp/waltz.lisp"&gt;waltz.lisp&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;A Line-Labeling program using the Waltz algorithm&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;18&lt;/td&gt;
&lt;td&gt;&lt;a href="lisp/othello.lisp"&gt;othello.lisp&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;The Othello playing program and some strategies&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;18&lt;/td&gt;
&lt;td&gt;&lt;a href="lisp/othello2.lisp"&gt;othello2.lisp&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;Additional strategies for Othello&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;18&lt;/td&gt;
&lt;td&gt;&lt;a href="lisp/edge-tab.lisp"&gt;edge-tab.lisp&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;Edge table for Iago strategy&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;19&lt;/td&gt;
&lt;td&gt;&lt;a href="lisp/syntax1.lisp"&gt;syntax1.lisp&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;Syntactic Parser&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;19&lt;/td&gt;
&lt;td&gt;&lt;a href="lisp/syntax2.lisp"&gt;syntax2.lisp&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;Syntactic Parser with semantics&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;19&lt;/td&gt;
&lt;td&gt;&lt;a href="lisp/syntax3.lisp"&gt;syntax3.lisp&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;Syntactic Parser with semantics and preferences&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;20&lt;/td&gt;
&lt;td&gt;&lt;a href="lisp/unifgram.lisp"&gt;unifgram.lisp&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;Unification Parser&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;21&lt;/td&gt;
&lt;td&gt;&lt;a href="lisp/grammar.lisp"&gt;grammar.lisp&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;Comprehensive grammar of English&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;21&lt;/td&gt;
&lt;td&gt;&lt;a href="lisp/lexicon.lisp"&gt;lexicon.lisp&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;Sample Lexicon of English&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;22&lt;/td&gt;
&lt;td&gt;&lt;a href="lisp/interp1.lisp"&gt;interp1.lisp&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;Scheme interpreter, including version with macros&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;22&lt;/td&gt;
&lt;td&gt;&lt;a href="lisp/interp2.lisp"&gt;interp2.lisp&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;A tail recursive Scheme interpreter&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;22&lt;/td&gt;
&lt;td&gt;&lt;a href="lisp/interp3.lisp"&gt;interp3.lisp&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;A Scheme interpreter that handles call/cc&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;23&lt;/td&gt;
&lt;td&gt;&lt;a href="lisp/compile1.lisp"&gt;compile1.lisp&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;Simple Scheme compiler&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;23&lt;/td&gt;
&lt;td&gt;&lt;a href="lisp/compile2.lisp"&gt;compile2.lisp&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;Compiler with tail recursion and primitives&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;23&lt;/td&gt;
&lt;td&gt;&lt;a href="lisp/compile3.lisp"&gt;compile3.lisp&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;Compiler with peephole optimizer&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;23&lt;/td&gt;
&lt;td&gt;&lt;a href="lisp/compopt.lisp"&gt;compopt.lisp&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;Peephole optimizers for compile3.lisp&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h1&gt;&lt;a id="user-content-running-the-code" class="anchor" aria-hidden="true" href="#running-the-code"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Running the Code&lt;/h1&gt;
&lt;p&gt;There is no single "application" to run. Rather, there is a collection of source code files,
duplicating the code in the book. You can read and/or run whatever you like. Lisp is an interactive language,
and you will need to interact with the code to get benefit from it. Some hints:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;You will need a Common Lisp interpreter/compiler/environment. Here's a &lt;a href="https://www.reddit.com/r/lisp/comments/752wxe/what_is_the_best_common_lisp_interpreter_out_there/" rel="nofollow"&gt;discussion&lt;/a&gt; of the options.&lt;/li&gt;
&lt;li&gt;You will always need &lt;code&gt;(load "auxfns.lisp")&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;You will need &lt;code&gt;(requires "&lt;/code&gt;&lt;em&gt;file&lt;/em&gt;&lt;code&gt;")&lt;/code&gt;, for the various
instances of &lt;em&gt;file&lt;/em&gt; that you want to use. (If &lt;code&gt;requires&lt;/code&gt; does not work properly on
your system you may have to alter its definition, in
&lt;code&gt;auxfns.lisp&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;The function &lt;code&gt;do-examples&lt;/code&gt;, which takes as an argument either &lt;code&gt;:all&lt;/code&gt;
or a chapter number or a list of chapter numbers, can be used to see examples
of the use of various functions.  For example, &lt;code&gt;(do-examples 1)&lt;/code&gt; shows
the examples from chapter 1. Access this by doing &lt;code&gt;(requires "examples")&lt;/code&gt;.&lt;/li&gt;
&lt;/ul&gt;
&lt;h1&gt;&lt;a id="user-content-other-resources" class="anchor" aria-hidden="true" href="#other-resources"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Other resources&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;I wrote a &lt;a href="http://norvig.com/Lisp-retro.html" rel="nofollow"&gt;retrospective&lt;/a&gt; on the book.&lt;/li&gt;
&lt;li&gt;There is a nice &lt;a href="https://github.com/dhconnelly/paip-python"&gt;Python version&lt;/a&gt; of the code, by Georgia Tech.&lt;/li&gt;
&lt;/ul&gt;
&lt;/article&gt;&lt;/div&gt;</description><author>norvig</author><guid isPermaLink="false">https://github.com/norvig/paip-lisp</guid><pubDate>Thu, 30 Jan 2020 00:02:00 GMT</pubDate></item></channel></rss>