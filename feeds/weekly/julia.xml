<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0"><channel><title>GitHub Trending: Julia, This week</title><link>https://github.com/trending/julia?since=weekly</link><description>The top repositories on GitHub for julia, measured weekly</description><pubDate>Fri, 24 Jan 2020 01:09:45 GMT</pubDate><lastBuildDate>Fri, 24 Jan 2020 01:09:45 GMT</lastBuildDate><generator>PyRSS2Gen-1.1.0</generator><docs>http://blogs.law.harvard.edu/tech/rss</docs><ttl>720</ttl><item><title>FluxML/Flux.jl #1 in Julia, This week</title><link>https://github.com/FluxML/Flux.jl</link><description>&lt;p&gt;&lt;i&gt;Official Deep Learning Library of Gougle Research&lt;/i&gt;&lt;/p&gt;&lt;div id="readme" class="md" data-path="README.md"&gt;&lt;article class="markdown-body entry-content p-5" itemprop="text"&gt;&lt;p align="center"&gt;
&lt;a target="_blank" rel="noopener noreferrer" href="https://raw.githubusercontent.com/FluxML/fluxml.github.io/master/logo.png"&gt;&lt;img width="400px" src="https://raw.githubusercontent.com/FluxML/fluxml.github.io/master/logo.png" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;&lt;a href="https://travis-ci.org/FluxML/Flux.jl" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/8b10e4a0832de887b8a542480f6a864b9d2ecfc0/68747470733a2f2f7472617669732d63692e6f72672f466c75784d4c2f466c75782e6a6c2e7376673f6272616e63683d6d6173746572" alt="Build Status" data-canonical-src="https://travis-ci.org/FluxML/Flux.jl.svg?branch=master" style="max-width:100%;"&gt;&lt;/a&gt; &lt;a href="https://fluxml.github.io/Flux.jl/stable/" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/f7b92a177c912c1cc007fc9b40f17ff3ee3bb414/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f646f63732d737461626c652d626c75652e737667" alt="" data-canonical-src="https://img.shields.io/badge/docs-stable-blue.svg" style="max-width:100%;"&gt;&lt;/a&gt; &lt;a href="https://slackinvite.julialang.org/" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/24d16c31ff9f7628be0e050b793afd8b2458029c/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f636861742d6f6e253230736c61636b2d79656c6c6f772e737667" alt="" data-canonical-src="https://img.shields.io/badge/chat-on%20slack-yellow.svg" style="max-width:100%;"&gt;&lt;/a&gt; &lt;a href="https://doi.org/10.21105/joss.00602" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/33eb230ee6fb9c214eb02ee3f227e6d81e540911/68747470733a2f2f6a6f73732e7468656f6a2e6f72672f7061706572732f31302e32313130352f6a6f73732e30303630322f7374617475732e737667" alt="DOI" data-canonical-src="https://joss.theoj.org/papers/10.21105/joss.00602/status.svg" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Flux is an elegant approach to machine learning. It's a 100% pure-Julia stack, and provides lightweight abstractions on top of Julia's native GPU and AD support. Flux makes the easy things easy while remaining fully hackable.&lt;/p&gt;
&lt;div class="highlight highlight-source-julia"&gt;&lt;pre&gt;] add Flux&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;See the &lt;a href="https://fluxml.github.io/Flux.jl/" rel="nofollow"&gt;documentation&lt;/a&gt; or the &lt;a href="https://github.com/FluxML/model-zoo/"&gt;model zoo&lt;/a&gt; for examples.&lt;/p&gt;
&lt;p&gt;If you use Flux in your research, please &lt;a href="CITATION.bib"&gt;cite&lt;/a&gt; our work.&lt;/p&gt;
&lt;/article&gt;&lt;/div&gt;</description><author>FluxML</author><guid isPermaLink="false">https://github.com/FluxML/Flux.jl</guid><pubDate>Fri, 24 Jan 2020 00:01:00 GMT</pubDate></item><item><title>JuliaLang/julia #2 in Julia, This week</title><link>https://github.com/JuliaLang/julia</link><description>&lt;p&gt;&lt;i&gt;The Julia Language: A fresh approach to technical computing.&lt;/i&gt;&lt;/p&gt;&lt;div id="readme" class="md" data-path="README.md"&gt;&lt;article class="markdown-body entry-content p-5" itemprop="text"&gt;&lt;a name="user-content-logo"&gt;
&lt;/a&gt;&lt;div align="center"&gt;&lt;a name="user-content-logo"&gt;
&lt;/a&gt;&lt;a href="https://julialang.org/" rel="nofollow"&gt;
&lt;img src="https://camo.githubusercontent.com/6d7260eaa159cfb838b45bf168ff77adecf8b198/68747470733a2f2f6a756c69616c616e672e6f72672f696d616765732f6c6f676f5f68697265732e706e67" alt="Julia Logo" width="210" height="142" data-canonical-src="https://julialang.org/images/logo_hires.png" style="max-width:100%;"&gt;
&lt;/a&gt;
&lt;/div&gt;
&lt;p&gt;Code coverage:
&lt;a href="https://coveralls.io/r/JuliaLang/julia?branch=master" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/6c19f8bfd330d4298726a46788b7dd210c6bbaee/68747470733a2f2f696d672e736869656c64732e696f2f636f766572616c6c732f6769746875622f4a756c69614c616e672f6a756c69612f6d61737465722e7376673f6c6162656c3d636f766572616c6c73" alt="coveralls" data-canonical-src="https://img.shields.io/coveralls/github/JuliaLang/julia/master.svg?label=coveralls" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://codecov.io/github/JuliaLang/julia?branch=master" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/4f493f551264b08a932256740895accb8f2f1cf6/68747470733a2f2f696d672e736869656c64732e696f2f636f6465636f762f632f6769746875622f4a756c69614c616e672f6a756c69612f6d61737465722e7376673f6c6162656c3d636f6465636f76" alt="codecov" data-canonical-src="https://img.shields.io/codecov/c/github/JuliaLang/julia/master.svg?label=codecov" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Documentation:
&lt;a href="https://docs.julialang.org" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/a8bf08f7e402872de8d8969931a9b179f38d9496/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f646f63732d76312d626c75652e737667" alt="version 1" data-canonical-src="https://img.shields.io/badge/docs-v1-blue.svg" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-the-julia-language" class="anchor" aria-hidden="true" href="#the-julia-language"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;The Julia Language&lt;/h2&gt;
&lt;p&gt;Julia is a high-level, high-performance dynamic language for technical
computing.  The main homepage for Julia can be found at
&lt;a href="https://julialang.org/" rel="nofollow"&gt;julialang.org&lt;/a&gt;.  This is the GitHub
repository of Julia source code, including instructions for compiling
and installing Julia, below.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-resources" class="anchor" aria-hidden="true" href="#resources"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Resources&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Homepage:&lt;/strong&gt; &lt;a href="https://julialang.org" rel="nofollow"&gt;https://julialang.org&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Binaries:&lt;/strong&gt; &lt;a href="https://julialang.org/downloads/" rel="nofollow"&gt;https://julialang.org/downloads/&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Source code:&lt;/strong&gt; &lt;a href="https://github.com/JuliaLang/julia"&gt;https://github.com/JuliaLang/julia&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Documentation:&lt;/strong&gt; &lt;a href="https://docs.julialang.org/" rel="nofollow"&gt;https://docs.julialang.org/&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Packages:&lt;/strong&gt; &lt;a href="https://pkg.julialang.org/" rel="nofollow"&gt;https://pkg.julialang.org/&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Discussion forum:&lt;/strong&gt; &lt;a href="https://discourse.julialang.org" rel="nofollow"&gt;https://discourse.julialang.org&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Slack:&lt;/strong&gt; &lt;a href="https://julialang.slack.com" rel="nofollow"&gt;https://julialang.slack.com&lt;/a&gt; (get an invite from &lt;a href="https://slackinvite.julialang.org" rel="nofollow"&gt;https://slackinvite.julialang.org&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;YouTube:&lt;/strong&gt; &lt;a href="https://www.youtube.com/user/JuliaLanguage" rel="nofollow"&gt;https://www.youtube.com/user/JuliaLanguage&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Code coverage:&lt;/strong&gt; &lt;a href="https://coveralls.io/r/JuliaLang/julia" rel="nofollow"&gt;https://coveralls.io/r/JuliaLang/julia&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;New developers may find the notes in
&lt;a href="https://github.com/JuliaLang/julia/blob/master/CONTRIBUTING.md"&gt;CONTRIBUTING&lt;/a&gt;
helpful to start contributing to the Julia codebase.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-external-resources" class="anchor" aria-hidden="true" href="#external-resources"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;External Resources&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://stackoverflow.com/questions/tagged/julia-lang" rel="nofollow"&gt;&lt;strong&gt;StackOverflow&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://twitter.com/JuliaLanguage" rel="nofollow"&gt;&lt;strong&gt;Twitter&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://julia.meetup.com/" rel="nofollow"&gt;&lt;strong&gt;Meetup&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-binary-installation" class="anchor" aria-hidden="true" href="#binary-installation"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Binary Installation&lt;/h2&gt;
&lt;p&gt;If you would rather not compile the latest Julia from source,
platform-specific tarballs with pre-compiled binaries are also
&lt;a href="https://julialang.org/downloads/" rel="nofollow"&gt;available for download&lt;/a&gt;. The
downloads page also provides details on the
&lt;a href="https://julialang.org/downloads/#support-tiers" rel="nofollow"&gt;different tiers of support&lt;/a&gt;
for OS and platform combinations.&lt;/p&gt;
&lt;p&gt;If everything works correctly, you will see a Julia banner and an
interactive prompt into which you can enter expressions for
evaluation.  You can read about &lt;a href="https://julialang.org/manual/getting-started" rel="nofollow"&gt;getting
started&lt;/a&gt; in the manual.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Note&lt;/strong&gt;: Although some system package managers provide Julia, such
installations are neither maintained nor endorsed by the Julia
project. They may be outdated, broken and/or unmaintained. We
recommend you use the official Julia binaries instead.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-building-julia" class="anchor" aria-hidden="true" href="#building-julia"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Building Julia&lt;/h2&gt;
&lt;p&gt;First, make sure you have all the &lt;a href="https://github.com/JuliaLang/julia/blob/master/doc/build/build.md#required-build-tools-and-external-libraries"&gt;required
dependencies&lt;/a&gt; installed.
Then, acquire the source code by cloning the git repository:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;git clone git://github.com/JuliaLang/julia.git
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;By default you will be building the latest unstable version of
Julia. However, most users should use the most recent stable version
of Julia. You can get this version by changing to the Julia directory
and running:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;git checkout v1.3.0
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Now run &lt;code&gt;make&lt;/code&gt; to build the &lt;code&gt;julia&lt;/code&gt; executable.&lt;/p&gt;
&lt;p&gt;Building Julia requires 2GiB of disk space and approximately 4GiB of virtual memory.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Note:&lt;/strong&gt; The build process will fail badly if any of the build directory's parent directories have spaces or other shell meta-characters such as &lt;code&gt;$&lt;/code&gt; or &lt;code&gt;:&lt;/code&gt; in their names (this is due to a limitation in GNU make).&lt;/p&gt;
&lt;p&gt;Once it is built, you can run the &lt;code&gt;julia&lt;/code&gt; executable after you enter your julia directory and run&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;./julia
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Your first test of Julia determines whether your build is working
properly. From the UNIX/Windows command prompt inside the &lt;code&gt;julia&lt;/code&gt;
source directory, type &lt;code&gt;make testall&lt;/code&gt;. You should see output that
lists a series of running tests; if they complete without error, you
should be in good shape to start using Julia.&lt;/p&gt;
&lt;p&gt;You can read about &lt;a href="https://docs.julialang.org/en/v1/manual/getting-started/" rel="nofollow"&gt;getting
started&lt;/a&gt;
in the manual.&lt;/p&gt;
&lt;p&gt;In case this default build path did not work, detailed build instructions
are included in the &lt;a href="https://github.com/JuliaLang/julia/blob/master/doc/build"&gt;build documentation&lt;/a&gt;.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-uninstalling-julia" class="anchor" aria-hidden="true" href="#uninstalling-julia"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Uninstalling Julia&lt;/h3&gt;
&lt;p&gt;Julia does not install anything outside the directory it was cloned
into. Julia can be completely uninstalled by deleting this
directory. Julia packages are installed in &lt;code&gt;~/.julia&lt;/code&gt; by default, and
can be uninstalled by deleting &lt;code&gt;~/.julia&lt;/code&gt;.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-source-code-organization" class="anchor" aria-hidden="true" href="#source-code-organization"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Source Code Organization&lt;/h2&gt;
&lt;p&gt;The Julia source code is organized as follows:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;base/          source code for the Base module (part of Julia's standard library)
stdlib/        source code for other standard library packages
contrib/       editor support for Julia source, miscellaneous scripts
deps/          external dependencies
doc/src/manual source for the user manual
doc/build      detailed notes for building Julia
src/           source for Julia language core
test/          test suites
ui/            source for various front ends
usr/           binaries and shared libraries loaded by Julia's standard libraries
&lt;/code&gt;&lt;/pre&gt;
&lt;h2&gt;&lt;a id="user-content-terminal-editors-and-ides" class="anchor" aria-hidden="true" href="#terminal-editors-and-ides"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Terminal, Editors and IDEs&lt;/h2&gt;
&lt;p&gt;The Julia REPL is quite powerful.  See the section in the manual on
&lt;a href="https://docs.julialang.org/en/latest/stdlib/REPL/" rel="nofollow"&gt;the Julia REPL&lt;/a&gt;
for more details.&lt;/p&gt;
&lt;p&gt;Support for editing Julia is available for many
&lt;a href="https://github.com/JuliaEditorSupport"&gt;widely used editors&lt;/a&gt;:
&lt;a href="https://github.com/JuliaEditorSupport/julia-emacs"&gt;Emacs&lt;/a&gt;,
&lt;a href="https://github.com/JuliaEditorSupport/julia-vim"&gt;Vim&lt;/a&gt;,
&lt;a href="https://github.com/JuliaEditorSupport/Julia-sublime"&gt;Sublime Text&lt;/a&gt;, and many
others.&lt;/p&gt;
&lt;p&gt;Supported IDEs include: &lt;a href="http://junolab.org/" rel="nofollow"&gt;Juno&lt;/a&gt; (Atom plugin),
&lt;a href="https://github.com/JuliaEditorSupport/julia-vscode"&gt;julia-vscode&lt;/a&gt; (VS
Code plugin), and
&lt;a href="https://github.com/JuliaEditorSupport/julia-intellij"&gt;julia-intellij&lt;/a&gt;
(IntelliJ IDEA plugin). The popular &lt;a href="https://jupyter.org/" rel="nofollow"&gt;Jupyter&lt;/a&gt;
notebook interface is available through
&lt;a href="https://github.com/JuliaLang/IJulia.jl"&gt;IJulia&lt;/a&gt;.&lt;/p&gt;
&lt;/article&gt;&lt;/div&gt;</description><author>JuliaLang</author><guid isPermaLink="false">https://github.com/JuliaLang/julia</guid><pubDate>Fri, 24 Jan 2020 00:02:00 GMT</pubDate></item><item><title>caseykneale/VIMKiller #3 in Julia, This week</title><link>https://github.com/caseykneale/VIMKiller</link><description>&lt;p&gt;&lt;i&gt;Exiting VIM is hard; sometimes we need to take drastic measures&lt;/i&gt;&lt;/p&gt;&lt;div id="readme" class="md" data-path="README.md"&gt;&lt;article class="markdown-body entry-content p-5" itemprop="text"&gt;&lt;h1&gt;&lt;a id="user-content-vimkiller" class="anchor" aria-hidden="true" href="#vimkiller"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;VIMKiller&lt;/h1&gt;
&lt;p&gt;VI(M) is hard, and sometimes we need to take drastic measures. We understand your needs.
Maybe you're new on the job, and you forgot to set your default text editor to nano, emacs,
gedit, whatever. VIM pops up and now you have to make a choice...&lt;/p&gt;
&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="https://raw.githubusercontent.com/caseykneale/VIMKiller/master/pictures/screen.png"&gt;&lt;img src="https://raw.githubusercontent.com/caseykneale/VIMKiller/master/pictures/screen.png" alt="alt text1" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Google "how do I exit VIM" and let IT, or any passer-bys immediately know your VIM skill level.&lt;/li&gt;
&lt;li&gt;Ask for help. What are you? A collaborator type?&lt;/li&gt;
&lt;li&gt;Bring VIM Killer to work and look like a true pro!&lt;/li&gt;
&lt;/ol&gt;
&lt;h2&gt;&lt;a id="user-content-what-is-vim-killer" class="anchor" aria-hidden="true" href="#what-is-vim-killer"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;What is VIM Killer?&lt;/h2&gt;
&lt;p&gt;VIMKiller is a button on-top of an arduino wrapped in a 3-D printed enclosure. It is expertly crafted.
When the button is pressed it sends a message over your serial port to kill VIM. Now, at this point,
you need to have the Julia VIMKiller script running in the background. It may be best to have this script run at start-up (easy-fix). The Julia script listens for this serial message and returns in kind by killing all VIM processes on your Linux machine. Easy, and practical - right?&lt;/p&gt;
&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="https://raw.githubusercontent.com/caseykneale/VIMKiller/master/pictures/protectedbtn.jpg"&gt;&lt;img src="https://raw.githubusercontent.com/caseykneale/VIMKiller/master/pictures/protectedbtn.jpg" alt="alt text2" style="max-width:100%;"&gt;&lt;/a&gt; &lt;a target="_blank" rel="noopener noreferrer" href="https://raw.githubusercontent.com/caseykneale/VIMKiller/master/pictures/ready.jpg"&gt;&lt;img src="https://raw.githubusercontent.com/caseykneale/VIMKiller/master/pictures/ready.jpg" alt="alt text3" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-important-update" class="anchor" aria-hidden="true" href="#important-update"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Important Update&lt;/h2&gt;
&lt;p&gt;A very notable missing feature has been suggested (&lt;a href="https://github.com/caseykneale/VIMKiller/issues/1"&gt;https://github.com/caseykneale/VIMKiller/issues/1&lt;/a&gt;). As github users have shown distinct interest in this most sincere project (soring past 50 stars now). I wanted you all to rest well and feel safe knowing that this will be worked on. May we all stay emotionally unharmed from VIM!&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-in-this-repository" class="anchor" aria-hidden="true" href="#in-this-repository"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;In this repository&lt;/h2&gt;
&lt;p&gt;the CAD files (made in FreeCAD) for the enclosure are contained. The requisite code as well. The Arduino, solid core wire, 10kOhm resistor, 2mm diameter metal rod for the hinge cut to size, and clicky red button should be on your shelf. Who doesn't have those things?&lt;/p&gt;
&lt;p&gt;If not you can send the author 500,000 USD$ for a custom made VIMKiller solution. You might say "Hey this gadget is super practical, and will definitely help me advance in my career, but it is maybe a &lt;em&gt;little&lt;/em&gt; pricey." - think of this as an investment. Half a million, or learn VIM?&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-disclosure" class="anchor" aria-hidden="true" href="#disclosure"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Disclosure&lt;/h2&gt;
&lt;p&gt;This is a joke from julia slack. Seriously, don't take this seriously. Don't get me wrong, this actually does work. I made this in a day very sloppily to satisfy a fictional and satirical need to try to make some people laugh.&lt;/p&gt;
&lt;/article&gt;&lt;/div&gt;</description><author>caseykneale</author><guid isPermaLink="false">https://github.com/caseykneale/VIMKiller</guid><pubDate>Fri, 24 Jan 2020 00:03:00 GMT</pubDate></item><item><title>FluxML/Zygote.jl #4 in Julia, This week</title><link>https://github.com/FluxML/Zygote.jl</link><description>&lt;p&gt;&lt;i&gt;Intimate Affection Auditor&lt;/i&gt;&lt;/p&gt;&lt;div id="readme" class="md" data-path="README.md"&gt;&lt;article class="markdown-body entry-content p-5" itemprop="text"&gt;&lt;p align="center"&gt;
&lt;a target="_blank" rel="noopener noreferrer" href="https://raw.githubusercontent.com/FluxML/fluxml.github.io/master/zygote.png"&gt;&lt;img width="400px" src="https://raw.githubusercontent.com/FluxML/fluxml.github.io/master/zygote.png" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;&lt;a href="https://travis-ci.org/FluxML/Zygote.jl" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/a383c9b8923b8c02f50ec6a7cd2348f1a07df588/68747470733a2f2f7472617669732d63692e6f72672f466c75784d4c2f5a79676f74652e6a6c2e7376673f6272616e63683d6d6173746572" alt="Build Status" data-canonical-src="https://travis-ci.org/FluxML/Zygote.jl.svg?branch=master" style="max-width:100%;"&gt;&lt;/a&gt; &lt;a href="https://fluxml.ai/Zygote.jl/dev" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/3e353c26ddfe819150acbc732248f4f2a37f5175/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f646f63732d6465762d626c75652e737667" alt="Dev Docs" data-canonical-src="https://img.shields.io/badge/docs-dev-blue.svg" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;code&gt;] add Zygote&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Zygote is a working prototype for source-to-source automatic differentiation (AD) in Julia, and the next-gen AD system for the &lt;a href="https://github.com/FluxML/Flux.jl"&gt;Flux&lt;/a&gt; differentiable programming framework. For more details and benchmarks of Zygote's technique, see &lt;a href="https://arxiv.org/abs/1810.07951" rel="nofollow"&gt;our paper&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;You probably don't want to use Zygote yet (except as a preview of the future). Instead use Flux's built-in AD, which is API-compatible, and at some point in the near future you'll get a free speed boost.&lt;/p&gt;
&lt;div class="highlight highlight-source-julia"&gt;&lt;pre&gt;julia&lt;span class="pl-k"&gt;&amp;gt;&lt;/span&gt; &lt;span class="pl-k"&gt;using&lt;/span&gt; Zygote

julia&lt;span class="pl-k"&gt;&amp;gt;&lt;/span&gt; &lt;span class="pl-en"&gt;f&lt;/span&gt;(x) &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;5&lt;/span&gt;x &lt;span class="pl-k"&gt;+&lt;/span&gt; &lt;span class="pl-c1"&gt;3&lt;/span&gt;

julia&lt;span class="pl-k"&gt;&amp;gt;&lt;/span&gt; &lt;span class="pl-c1"&gt;f&lt;/span&gt;(&lt;span class="pl-c1"&gt;10&lt;/span&gt;), f&lt;span class="pl-k"&gt;'&lt;/span&gt;(&lt;span class="pl-c1"&gt;10&lt;/span&gt;)
(&lt;span class="pl-c1"&gt;53&lt;/span&gt;, &lt;span class="pl-c1"&gt;5&lt;/span&gt;)

julia&lt;span class="pl-k"&gt;&amp;gt;&lt;/span&gt; &lt;span class="pl-c1"&gt;@code_llvm&lt;/span&gt; f&lt;span class="pl-k"&gt;'&lt;/span&gt;(&lt;span class="pl-c1"&gt;10&lt;/span&gt;)
define i64 @&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;julia_#625_38792&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;(i64) {
top&lt;span class="pl-k"&gt;:&lt;/span&gt;
  ret i64 &lt;span class="pl-c1"&gt;5&lt;/span&gt;
}&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;"Source-to-source" means that Zygote hooks into Julia's compiler, and generates the backwards pass for you – as if you had written it by hand.&lt;/p&gt;
&lt;p&gt;Without compromising on performance, Zygote supports the full flexibility and dynamism of the Julia language, including control flow, recursion, closures, structs, dictionaries, and more.&lt;/p&gt;
&lt;div class="highlight highlight-source-julia"&gt;&lt;pre&gt;julia&lt;span class="pl-k"&gt;&amp;gt;&lt;/span&gt; fs &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;Dict&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;sin&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; &lt;span class="pl-k"&gt;=&amp;gt;&lt;/span&gt; sin, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;cos&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; &lt;span class="pl-k"&gt;=&amp;gt;&lt;/span&gt; cos, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;tan&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; &lt;span class="pl-k"&gt;=&amp;gt;&lt;/span&gt; tan);

julia&lt;span class="pl-k"&gt;&amp;gt;&lt;/span&gt; &lt;span class="pl-c1"&gt;gradient&lt;/span&gt;(x &lt;span class="pl-k"&gt;-&amp;gt;&lt;/span&gt; fs[&lt;span class="pl-c1"&gt;readline&lt;/span&gt;()](x), &lt;span class="pl-c1"&gt;1&lt;/span&gt;)
sin
&lt;span class="pl-c1"&gt;0.5403023058681398&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Defining custom gradients is a cinch, and errors have good stacktraces.&lt;/p&gt;
&lt;div class="highlight highlight-source-julia"&gt;&lt;pre&gt;julia&lt;span class="pl-k"&gt;&amp;gt;&lt;/span&gt; &lt;span class="pl-k"&gt;using&lt;/span&gt; Zygote&lt;span class="pl-k"&gt;:&lt;/span&gt; &lt;span class="pl-c1"&gt;@adjoint&lt;/span&gt;

julia&lt;span class="pl-k"&gt;&amp;gt;&lt;/span&gt; &lt;span class="pl-en"&gt;add&lt;/span&gt;(a, b) &lt;span class="pl-k"&gt;=&lt;/span&gt; a &lt;span class="pl-k"&gt;+&lt;/span&gt; b

julia&lt;span class="pl-k"&gt;&amp;gt;&lt;/span&gt; &lt;span class="pl-c1"&gt;@adjoint&lt;/span&gt; &lt;span class="pl-en"&gt;add&lt;/span&gt;(a, b) &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;add&lt;/span&gt;(a, b), Δ &lt;span class="pl-k"&gt;-&amp;gt;&lt;/span&gt; (Δ, Δ)&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;To support large machine learning models with many parameters, Zygote can differentiate implicitly-used parameters, as opposed to just function arguments.&lt;/p&gt;
&lt;div class="highlight highlight-source-julia"&gt;&lt;pre&gt;julia&lt;span class="pl-k"&gt;&amp;gt;&lt;/span&gt; W, b &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;rand&lt;/span&gt;(&lt;span class="pl-c1"&gt;2&lt;/span&gt;, &lt;span class="pl-c1"&gt;3&lt;/span&gt;), &lt;span class="pl-c1"&gt;rand&lt;/span&gt;(&lt;span class="pl-c1"&gt;2&lt;/span&gt;);

julia&lt;span class="pl-k"&gt;&amp;gt;&lt;/span&gt; &lt;span class="pl-en"&gt;predict&lt;/span&gt;(x) &lt;span class="pl-k"&gt;=&lt;/span&gt; W&lt;span class="pl-k"&gt;*&lt;/span&gt;x &lt;span class="pl-k"&gt;.+&lt;/span&gt; b;

julia&lt;span class="pl-k"&gt;&amp;gt;&lt;/span&gt; g &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;gradient&lt;/span&gt;(&lt;span class="pl-c1"&gt;Params&lt;/span&gt;([W, b])) &lt;span class="pl-k"&gt;do&lt;/span&gt;
         &lt;span class="pl-c1"&gt;sum&lt;/span&gt;(&lt;span class="pl-c1"&gt;predict&lt;/span&gt;([&lt;span class="pl-c1"&gt;1&lt;/span&gt;,&lt;span class="pl-c1"&gt;2&lt;/span&gt;,&lt;span class="pl-c1"&gt;3&lt;/span&gt;]))
       &lt;span class="pl-k"&gt;end&lt;/span&gt;
&lt;span class="pl-c1"&gt;Grads&lt;/span&gt;(&lt;span class="pl-k"&gt;...&lt;/span&gt;)

julia&lt;span class="pl-k"&gt;&amp;gt;&lt;/span&gt; g[W], g[b]
([&lt;span class="pl-c1"&gt;1.0&lt;/span&gt; &lt;span class="pl-c1"&gt;2.0&lt;/span&gt; &lt;span class="pl-c1"&gt;3.0&lt;/span&gt;; &lt;span class="pl-c1"&gt;1.0&lt;/span&gt; &lt;span class="pl-c1"&gt;2.0&lt;/span&gt; &lt;span class="pl-c1"&gt;3.0&lt;/span&gt;], [&lt;span class="pl-c1"&gt;1.0&lt;/span&gt;, &lt;span class="pl-c1"&gt;1.0&lt;/span&gt;])&lt;/pre&gt;&lt;/div&gt;
&lt;h2&gt;&lt;a id="user-content-caveat-emptor" class="anchor" aria-hidden="true" href="#caveat-emptor"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Caveat Emptor&lt;/h2&gt;
&lt;p&gt;Zygote is in an early stage and may break, but issue reports and beta testing are welcome. In particular Zygote does not yet have comprehensive gradient definitions and may fail if it hits complex code in Base Julia.&lt;/p&gt;
&lt;p&gt;Zygote's runtime performance should generally be good, but compile times are not optimised, so calling &lt;code&gt;gradient&lt;/code&gt; the first time can have noticeable lag. &lt;a href="https://github.com/JuliaCI/BenchmarkTools.jl"&gt;BenchmarkTools&lt;/a&gt; is recommended to avoid measuring JIT time.&lt;/p&gt;
&lt;p&gt;A current limitation is that Zygote will not automatically see redefined functions (for example if you call &lt;code&gt;gradient(f, x)&lt;/code&gt;, then redefine &lt;code&gt;f&lt;/code&gt;, then take the gradient again). You can call &lt;code&gt;Zygote.refresh()&lt;/code&gt; to completely reset what Zygote sees. It's often useful to have this in your script/notebook after function definitions.&lt;/p&gt;
&lt;p&gt;The Julia compiler does not yet support all features needed to make Zygote fast, particularly in the presence of control flow. Until these are officially supported Zygote &lt;a href="https://github.com/FluxML/Zygote.jl/blob/5d7ea65ef0cdbd07c30584b5d66d13a66c7e0c21/src/Zygote.jl#L12"&gt;contains a flag&lt;/a&gt; to enable faster operation. If you can handle the additional caveats it's a good way to see Zygote's peak performance.&lt;/p&gt;
&lt;/article&gt;&lt;/div&gt;</description><author>FluxML</author><guid isPermaLink="false">https://github.com/FluxML/Zygote.jl</guid><pubDate>Fri, 24 Jan 2020 00:04:00 GMT</pubDate></item><item><title>FluxML/model-zoo #5 in Julia, This week</title><link>https://github.com/FluxML/model-zoo</link><description>&lt;p&gt;&lt;i&gt;Please do not feed the models&lt;/i&gt;&lt;/p&gt;&lt;div id="readme" class="md" data-path="README.md"&gt;&lt;article class="markdown-body entry-content p-5" itemprop="text"&gt;&lt;h1&gt;&lt;a id="user-content-flux-model-zoo" class="anchor" aria-hidden="true" href="#flux-model-zoo"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Flux Model Zoo&lt;/h1&gt;
&lt;p&gt;This repository contains various demonstrations of the &lt;a href="http://fluxml.github.io/" rel="nofollow"&gt;Flux&lt;/a&gt; machine learning library. Any of these may freely be used as a starting point for your own models.&lt;/p&gt;
&lt;p&gt;The models are broadly categorised into the folders &lt;a href="/vision"&gt;vision&lt;/a&gt; (e.g. large convolutional neural networks (CNNs)), &lt;a href="/text"&gt;text&lt;/a&gt; (e.g. various recurrent neural networks (RNNs) and natural language processing (NLP) models), &lt;a href="/games"&gt;games&lt;/a&gt; (Reinforcement Learning / RL). See the READMEs of respective models for more information.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-usage" class="anchor" aria-hidden="true" href="#usage"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Usage&lt;/h2&gt;
&lt;p&gt;The zoo comes with its own &lt;a href="https://julialang.github.io/Pkg.jl/latest/#Using-someone-else's-project-1" rel="nofollow"&gt;Julia project&lt;/a&gt;, which lists the packages you need to run the models. You can run the models by opening Julia in the project folder and running&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;using Pkg; Pkg.activate("."); Pkg.instantiate()
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;to install all needed packages. Then you can run the model code with &lt;code&gt;include("script.jl")&lt;/code&gt; or by running the script line-by-line. More details are available in the README for each model.&lt;/p&gt;
&lt;p&gt;Models may also be run with NVIDIA GPU support, if you have a CUDA installed. Most models will have this capability by default, pointed at by calls to &lt;code&gt;gpu&lt;/code&gt; in the model code.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-gitpod-online-ide" class="anchor" aria-hidden="true" href="#gitpod-online-ide"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Gitpod Online IDE&lt;/h3&gt;
&lt;p&gt;Each model can be used in &lt;a href="https://www.gitpod.io/" rel="nofollow"&gt;Gitpod&lt;/a&gt;, just &lt;a href="https://gitpod.io/#https://github.com/FluxML/model-zoo" rel="nofollow"&gt;open the repository by gitpod&lt;/a&gt;&lt;/p&gt;
&lt;h4&gt;&lt;a id="user-content-consideration" class="anchor" aria-hidden="true" href="#consideration"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Consideration:&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;Based on &lt;a href="https://www.gitpod.io/pricing/" rel="nofollow"&gt;Gitpod's policies&lt;/a&gt;, free access is limited.&lt;/li&gt;
&lt;li&gt;All of your work will place in the Gitpod's cloud.&lt;/li&gt;
&lt;li&gt;It isn't an officially maintained feature.&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-contributing" class="anchor" aria-hidden="true" href="#contributing"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Contributing&lt;/h2&gt;
&lt;p&gt;We welcome contributions of new models. They should be in a folder with a project and manifest file, to pin all relevant packages, as well as a README to explain what the model is about, how to run it, and what results it achieves (if applicable). If possible models should not depend directly on GPU functionality, but ideally should be CPU/GPU agnostic.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-model-listing" class="anchor" aria-hidden="true" href="#model-listing"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Model Listing&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Vision
&lt;ul&gt;
&lt;li&gt;MNIST
&lt;ul&gt;
&lt;li&gt;&lt;a href="vision/mnist/mlp.jl"&gt;Simple multi-layer perceptron&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="vision/mnist/conv.jl"&gt;Simple ConvNets&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="vision/mnist/autoencoder.jl"&gt;Simple Auto-Encoder&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="vision/mnist/vae.jl"&gt;Variational Auto-Encoder&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="vision/cifar10"&gt;VGG 16/19 on CIFAR10&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="vision/cppn"&gt;CPPN&lt;/a&gt; (&lt;a href="http://blog.otoro.net/2016/03/25/generating-abstract-patterns-with-tensorflow/" rel="nofollow"&gt;Blog&lt;/a&gt;)&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Text
&lt;ul&gt;
&lt;li&gt;&lt;a href="text/char-rnn"&gt;CharRNN&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="text/lang-detection"&gt;Character-level language detection&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="text/phonemes"&gt;Seq2Seq phoneme detection on CMUDict&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="text/treebank"&gt;Recursive net on IMDB sentiment treebank&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Other &amp;amp; contributed models
&lt;ul&gt;
&lt;li&gt;&lt;a href="contrib/diffeq"&gt;Differential Equations&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="other/bitstring-parity"&gt;BitString Parity Challenge&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="other/housing/housing.jl"&gt;MLP on housing data&lt;/a&gt; (low level API)&lt;/li&gt;
&lt;li&gt;&lt;a href="other/fizzbuzz/fizzbuzz.jl"&gt;FizzBuzz&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="contrib/meta-learning/MetaLearning.jl"&gt;Meta-Learning&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="other/iris/iris.jl"&gt;Logistic Regression Iris&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="contrib/audio/speech-blstm"&gt;Speech recognition&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/article&gt;&lt;/div&gt;</description><author>FluxML</author><guid isPermaLink="false">https://github.com/FluxML/model-zoo</guid><pubDate>Fri, 24 Jan 2020 00:05:00 GMT</pubDate></item><item><title>TuringLang/Turing.jl #6 in Julia, This week</title><link>https://github.com/TuringLang/Turing.jl</link><description>&lt;p&gt;&lt;i&gt;A robust, efficient and modular library for general-purpose probabilistic AI.&lt;/i&gt;&lt;/p&gt;&lt;div id="readme" class="md" data-path="README.md"&gt;&lt;article class="markdown-body entry-content p-5" itemprop="text"&gt;&lt;h1&gt;&lt;a id="user-content-turingjl" class="anchor" aria-hidden="true" href="#turingjl"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Turing.jl&lt;/h1&gt;
&lt;p&gt;&lt;a href="https://travis-ci.org/TuringLang/Turing.jl" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/d308db1c94f3347ca560c8f8aa067758ff4e9e44/68747470733a2f2f7472617669732d63692e6f72672f547572696e674c616e672f547572696e672e6a6c2e7376673f6272616e63683d6d6173746572" alt="Build Status" data-canonical-src="https://travis-ci.org/TuringLang/Turing.jl.svg?branch=master" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://dev.azure.com/yebai/TuringLang/_build/latest?definitionId=1&amp;amp;branchName=master" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/b9b4881c088221eb48f6323b6f35506d05c50f6e/68747470733a2f2f6465762e617a7572652e636f6d2f79656261692f547572696e674c616e672f5f617069732f6275696c642f7374617475732f547572696e674c616e672e547572696e672e6a6c3f6272616e63684e616d653d6d6173746572" alt="Build Status" data-canonical-src="https://dev.azure.com/yebai/TuringLang/_apis/build/status/TuringLang.Turing.jl?branchName=master" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://coveralls.io/github/yebai/Turing.jl?branch=master" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/ad5bbfb794aac77d24cf58dc84b9d2566da35e6c/68747470733a2f2f636f766572616c6c732e696f2f7265706f732f6769746875622f79656261692f547572696e672e6a6c2f62616467652e7376673f6272616e63683d6d6173746572" alt="Coverage Status" data-canonical-src="https://coveralls.io/repos/github/yebai/Turing.jl/badge.svg?branch=master" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://turing.ml/dev/docs/using-turing/" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/dbe71bf5c13320c3c8feb1f2bed6e6e712bea120/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f646f632d6c61746573742d626c75652e737667" alt="Documentation" data-canonical-src="https://img.shields.io/badge/doc-latest-blue.svg" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Turing.jl&lt;/strong&gt; is a Julia library for general-purpose &lt;a href="https://en.wikipedia.org/wiki/Probabilistic_programming_language" rel="nofollow"&gt;probabilistic programming&lt;/a&gt;. Turing allows the user to write models using standard Julia syntax, and provides a wide range of sampling-based inference methods for solving problems across probabilistic machine learning, Bayesian statistics, and data science. Compared to other probabilistic programming languages, Turing has a special focus on modularity, and decouples the modelling language (i.e. the compiler) and inference methods. This modular design, together with the use of a high-level numerical language Julia, makes Turing particularly extensible: new model families and inference methods can be easily added.&lt;/p&gt;
&lt;p&gt;Current features include:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://turing.ml/dev/tutorials/6-infinitemixturemodel/" rel="nofollow"&gt;General-purpose&lt;/a&gt; probabilistic programming with an &lt;a href="https://turing.ml/dev/tutorials/0-introduction/" rel="nofollow"&gt;intuitive modelling interface&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Robust, efficient &lt;a href="https://github.com/TuringLang/AdvancedHMC.jl"&gt;Hamiltonian Monte Carlo (HMC)&lt;/a&gt; sampling for differentiable posterior distributions&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/TuringLang/AdvancedPS.jl"&gt;Particle MCMC&lt;/a&gt; sampling for complex posterior distributions involving discrete variables and stochastic control flows&lt;/li&gt;
&lt;li&gt;Compositional inference via Gibbs sampling that combines particle MCMC, HMC, &lt;a href="https://github.com/TuringLang/AdvancedMH.jl"&gt;Random-Walk MH (RWMH)&lt;/a&gt; and &lt;a href="https://github.com/TuringLang/Turing.jl/blob/master/src/inference/ess.jl"&gt;Elliptical Slice Sampling&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Advanced variational inference based on &lt;a href="https://github.com/TuringLang/AdvancedVI.jl"&gt;ADVI&lt;/a&gt; and &lt;a href="https://github.com/TuringLang/Bijectors.jl"&gt;Normalising Flows&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-getting-started" class="anchor" aria-hidden="true" href="#getting-started"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Getting Started&lt;/h2&gt;
&lt;p&gt;Turing's home page, with links to everything you'll need to use Turing is:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://turing.ml/dev/docs/using-turing/get-started" rel="nofollow"&gt;https://turing.ml/dev/docs/using-turing/get-started&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-whats-changed-recently" class="anchor" aria-hidden="true" href="#whats-changed-recently"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;What's changed recently?&lt;/h2&gt;
&lt;p&gt;See &lt;a href="https://github.com/TuringLang/Turing.jl/releases"&gt;releases&lt;/a&gt;.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-want-to-contribute" class="anchor" aria-hidden="true" href="#want-to-contribute"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Want to contribute?&lt;/h2&gt;
&lt;p&gt;Turing was originally created and is now managed by Hong Ge. Current and past Turing team members include &lt;a href="http://mlg.eng.cam.ac.uk/hong/" rel="nofollow"&gt;Hong Ge&lt;/a&gt;, &lt;a href="http://mlg.eng.cam.ac.uk/?portfolio=kai-xu" rel="nofollow"&gt;Kai Xu&lt;/a&gt;, &lt;a href="http://martint.blog" rel="nofollow"&gt;Martin Trapp&lt;/a&gt;, &lt;a href="https://github.com/mohamed82008"&gt;Mohamed Tarek&lt;/a&gt;, &lt;a href="https://business.uoregon.edu/faculty/cameron-pfiffer" rel="nofollow"&gt;Cameron Pfiffer&lt;/a&gt;, &lt;a href="http://retiredparkingguard.com/about.html" rel="nofollow"&gt;Tor Fjelde&lt;/a&gt;.
You can see the full list of on Github: &lt;a href="https://github.com/TuringLang/Turing.jl/graphs/contributors"&gt;https://github.com/TuringLang/Turing.jl/graphs/contributors&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Turing is an open source project so if you feel you have some relevant skills and are interested in contributing then please do get in touch. See the &lt;a href="http://turing.ml/docs/contributing/" rel="nofollow"&gt;Contributing&lt;/a&gt; page for details on the process. You can contribute by opening issues on Github or implementing things yourself and making a pull request. We would also appreciate example models written using Turing.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-slack" class="anchor" aria-hidden="true" href="#slack"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Slack&lt;/h3&gt;
&lt;p&gt;Join &lt;a href="https://julialang.slack.com/messages/turing/" rel="nofollow"&gt;our channel&lt;/a&gt; (&lt;code&gt;#turing&lt;/code&gt;) in the Julia Slack chat for help, discussion, or general communication with the Turing team. If you do not already have an invitation to Julia's Slack, you can get one by going &lt;a href="https://slackinvite.julialang.org/" rel="nofollow"&gt;here&lt;/a&gt;.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-related-projects" class="anchor" aria-hidden="true" href="#related-projects"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Related projects&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;The Stan language for probabilistic programming - &lt;a href="https://github.com/StanJulia/Stan.jl"&gt;Stan.jl&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Bare-bones implementation of robust dynamic Hamiltonian Monte Carlo methods - &lt;a href="https://github.com/tpapp/DynamicHMC.jl"&gt;DynamicHMC.jl&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Comparing performance and results of mcmc options using Julia - &lt;a href="https://github.com/StatisticalRethinkingJulia/MCMCBenchmarks.jl"&gt;MCMCBenchmarks.jl&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-citing-turingjl" class="anchor" aria-hidden="true" href="#citing-turingjl"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Citing Turing.jl&lt;/h2&gt;
&lt;p&gt;If you use &lt;strong&gt;Turing&lt;/strong&gt; for your own research, please consider citing the following publication: Hong Ge, Kai Xu, and Zoubin Ghahramani: &lt;strong&gt;Turing: a language for flexible probabilistic inference.&lt;/strong&gt; AISTATS 2018 &lt;a href="http://proceedings.mlr.press/v84/ge18b.html" rel="nofollow"&gt;pdf&lt;/a&gt; &lt;a href="https://github.com/TuringLang/Turing.jl/blob/master/CITATION.bib"&gt;bibtex&lt;/a&gt;&lt;/p&gt;
&lt;/article&gt;&lt;/div&gt;</description><author>TuringLang</author><guid isPermaLink="false">https://github.com/TuringLang/Turing.jl</guid><pubDate>Fri, 24 Jan 2020 00:06:00 GMT</pubDate></item></channel></rss>