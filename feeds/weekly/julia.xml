<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0"><channel><title>GitHub Trending: Julia, This week</title><link>https://github.com/trending/julia?since=weekly</link><description>The top repositories on GitHub for julia, measured weekly</description><pubDate>Sun, 17 Nov 2019 01:07:38 GMT</pubDate><lastBuildDate>Sun, 17 Nov 2019 01:07:38 GMT</lastBuildDate><generator>PyRSS2Gen-1.1.0</generator><docs>http://blogs.law.harvard.edu/tech/rss</docs><ttl>720</ttl><item><title>JuliaLang/julia #1 in Julia, This week</title><link>https://github.com/JuliaLang/julia</link><description>&lt;p&gt;&lt;i&gt;The Julia Language: A fresh approach to technical computing.&lt;/i&gt;&lt;/p&gt;&lt;div id="readme" class="instapaper_body md" data-path="README.md"&gt;&lt;article class="markdown-body entry-content p-5" itemprop="text"&gt;&lt;a name="user-content-logo"&gt;
&lt;/a&gt;&lt;div align="center"&gt;&lt;a name="user-content-logo"&gt;
&lt;/a&gt;&lt;a href="https://julialang.org/" rel="nofollow"&gt;
&lt;img src="https://camo.githubusercontent.com/6d7260eaa159cfb838b45bf168ff77adecf8b198/68747470733a2f2f6a756c69616c616e672e6f72672f696d616765732f6c6f676f5f68697265732e706e67" alt="Julia Logo" width="210" height="142" data-canonical-src="https://julialang.org/images/logo_hires.png" style="max-width:100%;"&gt;
&lt;/a&gt;
&lt;/div&gt;
&lt;p&gt;Build status:
&lt;a href="https://travis-ci.org/JuliaLang/julia" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/32013ef9769a1170ba9ea194282e3b1788ee3718/68747470733a2f2f696d672e736869656c64732e696f2f7472617669732f4a756c69614c616e672f6a756c69612f6d61737465722e7376673f6c6162656c3d4c696e75782b2f2b6d61634f53" alt="travis" data-canonical-src="https://img.shields.io/travis/JuliaLang/julia/master.svg?label=Linux+/+macOS" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://ci.appveyor.com/project/JuliaLang/julia/branch/master" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/c00b7ac1b6fcfb8274f5fa66754aafae9936b5e8/68747470733a2f2f696d672e736869656c64732e696f2f6170707665796f722f63692f4a756c69614c616e672f6a756c69612f6d61737465722e7376673f6c6162656c3d57696e646f7773" alt="appveyor" data-canonical-src="https://img.shields.io/appveyor/ci/JuliaLang/julia/master.svg?label=Windows" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Code coverage:
&lt;a href="https://coveralls.io/r/JuliaLang/julia?branch=master" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/6c19f8bfd330d4298726a46788b7dd210c6bbaee/68747470733a2f2f696d672e736869656c64732e696f2f636f766572616c6c732f6769746875622f4a756c69614c616e672f6a756c69612f6d61737465722e7376673f6c6162656c3d636f766572616c6c73" alt="coveralls" data-canonical-src="https://img.shields.io/coveralls/github/JuliaLang/julia/master.svg?label=coveralls" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://codecov.io/github/JuliaLang/julia?branch=master" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/4f493f551264b08a932256740895accb8f2f1cf6/68747470733a2f2f696d672e736869656c64732e696f2f636f6465636f762f632f6769746875622f4a756c69614c616e672f6a756c69612f6d61737465722e7376673f6c6162656c3d636f6465636f76" alt="codecov" data-canonical-src="https://img.shields.io/codecov/c/github/JuliaLang/julia/master.svg?label=codecov" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Documentation:
&lt;a href="https://docs.julialang.org" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/a8bf08f7e402872de8d8969931a9b179f38d9496/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f646f63732d76312d626c75652e737667" alt="version 1" data-canonical-src="https://img.shields.io/badge/docs-v1-blue.svg" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-the-julia-language" class="anchor" aria-hidden="true" href="#the-julia-language"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;The Julia Language&lt;/h2&gt;
&lt;p&gt;Julia is a high-level, high-performance dynamic language for technical
computing.  The main homepage for Julia can be found at
&lt;a href="https://julialang.org/" rel="nofollow"&gt;julialang.org&lt;/a&gt;.  This is the GitHub
repository of Julia source code, including instructions for compiling
and installing Julia, below.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-resources" class="anchor" aria-hidden="true" href="#resources"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Resources&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Homepage:&lt;/strong&gt; &lt;a href="https://julialang.org" rel="nofollow"&gt;https://julialang.org&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Binaries:&lt;/strong&gt; &lt;a href="https://julialang.org/downloads/" rel="nofollow"&gt;https://julialang.org/downloads/&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Source code:&lt;/strong&gt; &lt;a href="https://github.com/JuliaLang/julia"&gt;https://github.com/JuliaLang/julia&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Documentation:&lt;/strong&gt; &lt;a href="https://docs.julialang.org/" rel="nofollow"&gt;https://docs.julialang.org/&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Packages:&lt;/strong&gt; &lt;a href="https://pkg.julialang.org/" rel="nofollow"&gt;https://pkg.julialang.org/&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Discussion forum:&lt;/strong&gt; &lt;a href="https://discourse.julialang.org" rel="nofollow"&gt;https://discourse.julialang.org&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Slack:&lt;/strong&gt; &lt;a href="https://julialang.slack.com" rel="nofollow"&gt;https://julialang.slack.com&lt;/a&gt; (get an invite from &lt;a href="https://slackinvite.julialang.org" rel="nofollow"&gt;https://slackinvite.julialang.org&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;YouTube:&lt;/strong&gt; &lt;a href="https://www.youtube.com/user/JuliaLanguage" rel="nofollow"&gt;https://www.youtube.com/user/JuliaLanguage&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Code coverage:&lt;/strong&gt; &lt;a href="https://coveralls.io/r/JuliaLang/julia" rel="nofollow"&gt;https://coveralls.io/r/JuliaLang/julia&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;New developers may find the notes in
&lt;a href="https://github.com/JuliaLang/julia/blob/master/CONTRIBUTING.md"&gt;CONTRIBUTING&lt;/a&gt;
helpful to start contributing to the Julia codebase.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-external-resources" class="anchor" aria-hidden="true" href="#external-resources"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;External Resources&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://stackoverflow.com/questions/tagged/julia-lang" rel="nofollow"&gt;&lt;strong&gt;StackOverflow&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://twitter.com/JuliaLanguage" rel="nofollow"&gt;&lt;strong&gt;Twitter&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://julia.meetup.com/" rel="nofollow"&gt;&lt;strong&gt;Meetup&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-binary-installation" class="anchor" aria-hidden="true" href="#binary-installation"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Binary Installation&lt;/h2&gt;
&lt;p&gt;If you would rather not compile the latest Julia from source,
platform-specific tarballs with pre-compiled binaries are also
&lt;a href="https://julialang.org/downloads/" rel="nofollow"&gt;available for download&lt;/a&gt;. The
downloads page also provides details on the
&lt;a href="https://julialang.org/downloads/#support-tiers" rel="nofollow"&gt;different tiers of support&lt;/a&gt;
for OS and platform combinations.&lt;/p&gt;
&lt;p&gt;If everything works correctly, you will see a Julia banner and an
interactive prompt into which you can enter expressions for
evaluation.  You can read about &lt;a href="https://julialang.org/manual/getting-started" rel="nofollow"&gt;getting
started&lt;/a&gt; in the manual.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Note&lt;/strong&gt;: Although some system package managers provide Julia, such
installations are neither maintained nor endorsed by the Julia
project. They may be outdated, broken and/or unmaintained. We
recommend you use the official Julia binaries instead.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-building-julia" class="anchor" aria-hidden="true" href="#building-julia"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Building Julia&lt;/h2&gt;
&lt;p&gt;First, make sure you have all the &lt;a href="https://github.com/JuliaLang/julia/blob/master/doc/build/build.md#required-build-tools-and-external-libraries"&gt;required
dependencies&lt;/a&gt; installed.
Then, acquire the source code by cloning the git repository:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;git clone git://github.com/JuliaLang/julia.git
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;By default you will be building the latest unstable version of
Julia. However, most users should use the most recent stable version
of Julia. You can get this version by changing to the Julia directory
and running:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;git checkout v1.2.0
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Now run &lt;code&gt;make&lt;/code&gt; to build the &lt;code&gt;julia&lt;/code&gt; executable.&lt;/p&gt;
&lt;p&gt;Building Julia requires 2GiB of disk space and approximately 4GiB of virtual memory.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Note:&lt;/strong&gt; The build process will fail badly if any of the build directory's parent directories have spaces or other shell meta-characters such as &lt;code&gt;$&lt;/code&gt; or &lt;code&gt;:&lt;/code&gt; in their names (this is due to a limitation in GNU make).&lt;/p&gt;
&lt;p&gt;Once it is built, you can run the &lt;code&gt;julia&lt;/code&gt; executable after you enter your julia directory and run&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;./julia
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Your first test of Julia determines whether your build is working
properly. From the UNIX/Windows command prompt inside the &lt;code&gt;julia&lt;/code&gt;
source directory, type &lt;code&gt;make testall&lt;/code&gt;. You should see output that
lists a series of running tests; if they complete without error, you
should be in good shape to start using Julia.&lt;/p&gt;
&lt;p&gt;You can read about &lt;a href="https://docs.julialang.org/en/v1/manual/getting-started/" rel="nofollow"&gt;getting
started&lt;/a&gt;
in the manual.&lt;/p&gt;
&lt;p&gt;In case this default build path did not work, detailed build instructions
are included in the &lt;a href="https://github.com/JuliaLang/julia/blob/master/doc/build"&gt;build documentation&lt;/a&gt;.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-uninstalling-julia" class="anchor" aria-hidden="true" href="#uninstalling-julia"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Uninstalling Julia&lt;/h3&gt;
&lt;p&gt;Julia does not install anything outside the directory it was cloned
into. Julia can be completely uninstalled by deleting this
directory. Julia packages are installed in &lt;code&gt;~/.julia&lt;/code&gt; by default, and
can be uninstalled by deleting &lt;code&gt;~/.julia&lt;/code&gt;.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-source-code-organization" class="anchor" aria-hidden="true" href="#source-code-organization"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Source Code Organization&lt;/h2&gt;
&lt;p&gt;The Julia source code is organized as follows:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;base/          source code for the Base module (part of Julia's standard library)
stdlib/        source code for other standard library packages
contrib/       editor support for Julia source, miscellaneous scripts
deps/          external dependencies
doc/src/manual source for the user manual
doc/build      detailed notes for building Julia
src/           source for Julia language core
test/          test suites
ui/            source for various front ends
usr/           binaries and shared libraries loaded by Julia's standard libraries
&lt;/code&gt;&lt;/pre&gt;
&lt;h2&gt;&lt;a id="user-content-terminal-editors-and-ides" class="anchor" aria-hidden="true" href="#terminal-editors-and-ides"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Terminal, Editors and IDEs&lt;/h2&gt;
&lt;p&gt;The Julia REPL is quite powerful.  See the section in the manual on
&lt;a href="https://docs.julialang.org/en/latest/stdlib/REPL/" rel="nofollow"&gt;the Julia REPL&lt;/a&gt;
for more details.&lt;/p&gt;
&lt;p&gt;Support for editing Julia is available for many
&lt;a href="https://github.com/JuliaEditorSupport"&gt;widely used editors&lt;/a&gt;:
&lt;a href="https://github.com/JuliaEditorSupport/julia-emacs"&gt;Emacs&lt;/a&gt;,
&lt;a href="https://github.com/JuliaEditorSupport/julia-vim"&gt;Vim&lt;/a&gt;,
&lt;a href="https://github.com/JuliaEditorSupport/Julia-sublime"&gt;Sublime Text&lt;/a&gt;, and many
others.&lt;/p&gt;
&lt;p&gt;Supported IDEs include: &lt;a href="http://junolab.org/" rel="nofollow"&gt;Juno&lt;/a&gt; (Atom plugin),
&lt;a href="https://github.com/JuliaEditorSupport/julia-vscode"&gt;julia-vscode&lt;/a&gt; (VS
Code plugin), and
&lt;a href="https://github.com/JuliaEditorSupport/julia-intellij"&gt;julia-intellij&lt;/a&gt;
(IntelliJ IDEA plugin). The popular &lt;a href="https://jupyter.org/" rel="nofollow"&gt;Jupyter&lt;/a&gt;
notebook interface is available through
&lt;a href="https://github.com/JuliaLang/IJulia.jl"&gt;IJulia&lt;/a&gt;.&lt;/p&gt;
&lt;/article&gt;&lt;/div&gt;</description><author>JuliaLang</author><guid isPermaLink="false">https://github.com/JuliaLang/julia</guid><pubDate>Sun, 17 Nov 2019 00:01:00 GMT</pubDate></item><item><title>FluxML/Flux.jl #2 in Julia, This week</title><link>https://github.com/FluxML/Flux.jl</link><description>&lt;p&gt;&lt;i&gt;Relax! Flux is the ML library that doesn't make you tensor&lt;/i&gt;&lt;/p&gt;&lt;div id="readme" class="instapaper_body md" data-path="README.md"&gt;&lt;article class="markdown-body entry-content p-5" itemprop="text"&gt;&lt;p align="center"&gt;
&lt;a target="_blank" rel="noopener noreferrer" href="https://raw.githubusercontent.com/FluxML/fluxml.github.io/master/logo.png"&gt;&lt;img width="400px" src="https://raw.githubusercontent.com/FluxML/fluxml.github.io/master/logo.png" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;&lt;a href="https://travis-ci.org/FluxML/Flux.jl" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/8b10e4a0832de887b8a542480f6a864b9d2ecfc0/68747470733a2f2f7472617669732d63692e6f72672f466c75784d4c2f466c75782e6a6c2e7376673f6272616e63683d6d6173746572" alt="Build Status" data-canonical-src="https://travis-ci.org/FluxML/Flux.jl.svg?branch=master" style="max-width:100%;"&gt;&lt;/a&gt; &lt;a href="https://fluxml.github.io/Flux.jl/stable/" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/f7b92a177c912c1cc007fc9b40f17ff3ee3bb414/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f646f63732d737461626c652d626c75652e737667" alt="" data-canonical-src="https://img.shields.io/badge/docs-stable-blue.svg" style="max-width:100%;"&gt;&lt;/a&gt; &lt;a href="https://slackinvite.julialang.org/" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/24d16c31ff9f7628be0e050b793afd8b2458029c/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f636861742d6f6e253230736c61636b2d79656c6c6f772e737667" alt="" data-canonical-src="https://img.shields.io/badge/chat-on%20slack-yellow.svg" style="max-width:100%;"&gt;&lt;/a&gt; &lt;a href="https://doi.org/10.21105/joss.00602" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/33eb230ee6fb9c214eb02ee3f227e6d81e540911/68747470733a2f2f6a6f73732e7468656f6a2e6f72672f7061706572732f31302e32313130352f6a6f73732e30303630322f7374617475732e737667" alt="DOI" data-canonical-src="https://joss.theoj.org/papers/10.21105/joss.00602/status.svg" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Flux is an elegant approach to machine learning. It's a 100% pure-Julia stack, and provides lightweight abstractions on top of Julia's native GPU and AD support. Flux makes the easy things easy while remaining fully hackable.&lt;/p&gt;
&lt;div class="highlight highlight-source-julia"&gt;&lt;pre&gt;julia&lt;span class="pl-k"&gt;&amp;gt;&lt;/span&gt; Pkg&lt;span class="pl-k"&gt;.&lt;/span&gt;&lt;span class="pl-c1"&gt;add&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;Flux&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;See the &lt;a href="https://fluxml.github.io/Flux.jl/" rel="nofollow"&gt;documentation&lt;/a&gt; or the &lt;a href="https://github.com/FluxML/model-zoo/"&gt;model zoo&lt;/a&gt; for examples.&lt;/p&gt;
&lt;p&gt;If you use Flux in research, please cite the following paper:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;@article{innes:2018,
  author    = {Mike Innes},
  title     = {Flux: Elegant Machine Learning with Julia},
  journal   = {Journal of Open Source Software},
  year      = {2018},
  doi       = {10.21105/joss.00602},
}
&lt;/code&gt;&lt;/pre&gt;
&lt;h2&gt;&lt;a id="user-content-features" class="anchor" aria-hidden="true" href="#features"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Features&lt;/h2&gt;
&lt;p&gt;Flux has powerful high-level features, and common architectures can be defined in a few lines.&lt;/p&gt;
&lt;div class="highlight highlight-source-julia"&gt;&lt;pre&gt;model &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;Chain&lt;/span&gt;(
  &lt;span class="pl-c1"&gt;Dense&lt;/span&gt;(&lt;span class="pl-c1"&gt;768&lt;/span&gt;, &lt;span class="pl-c1"&gt;128&lt;/span&gt;, σ),
  &lt;span class="pl-c1"&gt;LSTM&lt;/span&gt;(&lt;span class="pl-c1"&gt;128&lt;/span&gt;, &lt;span class="pl-c1"&gt;256&lt;/span&gt;),
  &lt;span class="pl-c1"&gt;LSTM&lt;/span&gt;(&lt;span class="pl-c1"&gt;256&lt;/span&gt;, &lt;span class="pl-c1"&gt;128&lt;/span&gt;),
  &lt;span class="pl-c1"&gt;Dense&lt;/span&gt;(&lt;span class="pl-c1"&gt;128&lt;/span&gt;, &lt;span class="pl-c1"&gt;10&lt;/span&gt;),
  softmax)

&lt;span class="pl-en"&gt;loss&lt;/span&gt;(x, y) &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;crossentropy&lt;/span&gt;(&lt;span class="pl-c1"&gt;model&lt;/span&gt;(x), y)

Flux&lt;span class="pl-k"&gt;.&lt;/span&gt;&lt;span class="pl-c1"&gt;train!&lt;/span&gt;(loss, &lt;span class="pl-c1"&gt;params&lt;/span&gt;(model), data, &lt;span class="pl-c1"&gt;ADAM&lt;/span&gt;(&lt;span class="pl-k"&gt;...&lt;/span&gt;))&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Yet you can easily strip away the layers, and directly write the mathematics for your problem. Flux will seamlessly take gradients of any Julia code, so your model looks just like the paper.&lt;/p&gt;
&lt;div class="highlight highlight-source-julia"&gt;&lt;pre&gt;W &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;param&lt;/span&gt;(&lt;span class="pl-c1"&gt;randn&lt;/span&gt;(&lt;span class="pl-c1"&gt;2&lt;/span&gt;, &lt;span class="pl-c1"&gt;10&lt;/span&gt;))
b &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;param&lt;/span&gt;(&lt;span class="pl-c1"&gt;randn&lt;/span&gt;(&lt;span class="pl-c1"&gt;2&lt;/span&gt;))

&lt;span class="pl-en"&gt;y&lt;/span&gt;(x) &lt;span class="pl-k"&gt;=&lt;/span&gt; σ.(W &lt;span class="pl-k"&gt;*&lt;/span&gt; x &lt;span class="pl-k"&gt;.+&lt;/span&gt; b)&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;If that's &lt;em&gt;still&lt;/em&gt; not enough, you can go as deep as you want, even writing your own CUDA kernels with &lt;a href="https://github.com/JuliaGPU/CUDAnative.jl"&gt;CUDAnative&lt;/a&gt;! All this can be freely mixed-and-matched in a single model or script, and it all runs interactively via Jupyter or Juno.&lt;/p&gt;
&lt;div class="highlight highlight-source-julia"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;function&lt;/span&gt; &lt;span class="pl-en"&gt;gpu_add&lt;/span&gt;(a, b, c)
  i &lt;span class="pl-k"&gt;=&lt;/span&gt; (&lt;span class="pl-c1"&gt;blockIdx&lt;/span&gt;()&lt;span class="pl-k"&gt;.&lt;/span&gt;x&lt;span class="pl-k"&gt;-&lt;/span&gt;&lt;span class="pl-c1"&gt;1&lt;/span&gt;) &lt;span class="pl-k"&gt;*&lt;/span&gt; &lt;span class="pl-c1"&gt;blockDim&lt;/span&gt;()&lt;span class="pl-k"&gt;.&lt;/span&gt;x &lt;span class="pl-k"&gt;+&lt;/span&gt; &lt;span class="pl-c1"&gt;threadIdx&lt;/span&gt;()&lt;span class="pl-k"&gt;.&lt;/span&gt;x
  c[i] &lt;span class="pl-k"&gt;=&lt;/span&gt; a[i] &lt;span class="pl-k"&gt;+&lt;/span&gt; b[i]
  &lt;span class="pl-k"&gt;return&lt;/span&gt; &lt;span class="pl-c1"&gt;nothing&lt;/span&gt;
&lt;span class="pl-k"&gt;end&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Unusual architectures are no problem in Flux, as you can use all the loops, control flow and even macros that you're used to. Here's a Tree RNN in 4 lines.&lt;/p&gt;
&lt;div class="highlight highlight-source-julia"&gt;&lt;pre&gt;&lt;span class="pl-en"&gt;tree&lt;/span&gt;() &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;rand&lt;/span&gt;() &lt;span class="pl-k"&gt;&amp;lt;&lt;/span&gt; &lt;span class="pl-c1"&gt;0.5&lt;/span&gt; ? &lt;span class="pl-c1"&gt;rand&lt;/span&gt;(&lt;span class="pl-c1"&gt;10&lt;/span&gt;) : (&lt;span class="pl-c1"&gt;tree&lt;/span&gt;(), &lt;span class="pl-c1"&gt;tree&lt;/span&gt;()) &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; dummy data&lt;/span&gt;

shrink &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;Dense&lt;/span&gt;(&lt;span class="pl-c1"&gt;20&lt;/span&gt;, &lt;span class="pl-c1"&gt;10&lt;/span&gt;)
&lt;span class="pl-en"&gt;combine&lt;/span&gt;(a, b) &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;shrink&lt;/span&gt;([a; b])

&lt;span class="pl-en"&gt;model&lt;/span&gt;(x) &lt;span class="pl-k"&gt;=&lt;/span&gt; x
&lt;span class="pl-en"&gt;model&lt;/span&gt;(x&lt;span class="pl-k"&gt;::&lt;/span&gt;&lt;span class="pl-c1"&gt;Tuple&lt;/span&gt;) &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;combine&lt;/span&gt;(&lt;span class="pl-c1"&gt;model&lt;/span&gt;(x[&lt;span class="pl-c1"&gt;1&lt;/span&gt;]), &lt;span class="pl-c1"&gt;model&lt;/span&gt;(x[&lt;span class="pl-c1"&gt;2&lt;/span&gt;]))

&lt;span class="pl-c1"&gt;model&lt;/span&gt;(&lt;span class="pl-c1"&gt;tree&lt;/span&gt;()) &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; Sample output&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Despite this flexibility, Julia's advanced compiler lets us do some powerful optimisations. For example, this definition of &lt;code&gt;sigmoid&lt;/code&gt; automatically gets fused into a &lt;em&gt;single&lt;/em&gt; GPU kernel – so it's really fast.&lt;/p&gt;
&lt;div class="highlight highlight-source-julia"&gt;&lt;pre&gt;&lt;span class="pl-en"&gt;sigmoid&lt;/span&gt;(xs) &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;1&lt;/span&gt; &lt;span class="pl-k"&gt;./&lt;/span&gt; (&lt;span class="pl-c1"&gt;1&lt;/span&gt; &lt;span class="pl-k"&gt;.+&lt;/span&gt; &lt;span class="pl-c1"&gt;exp&lt;/span&gt;.(&lt;span class="pl-k"&gt;.-&lt;/span&gt;xs))&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Similarly, Flux is the first dynamic framework to support &lt;a href="https://fluxml.github.io/experiments/" rel="nofollow"&gt;compiling to the browser&lt;/a&gt; and model import via &lt;a href="https://github.com/FluxML/ONNX.jl/"&gt;formats like ONNX&lt;/a&gt;, both of which are thinly-veiled compiler problems.&lt;/p&gt;
&lt;p&gt;For more on our philosophy on machine learning, check out our article &lt;a href="https://julialang.org/blog/2017/12/ml&amp;amp;pl" rel="nofollow"&gt;On Machine Learning &amp;amp; Programming Languages&lt;/a&gt;.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-contributing--help" class="anchor" aria-hidden="true" href="#contributing--help"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Contributing &amp;amp; Help&lt;/h2&gt;
&lt;p&gt;For general questions and help, check out Julia's &lt;a href="https://discourse.julialang.org/c/domain/ML" rel="nofollow"&gt;community forum&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Flux development is carried out via our &lt;a href="https://github.com/FluxML/Flux.jl/issues"&gt;GitHub issues&lt;/a&gt;, so feel free to open feature requests or PRs here.&lt;/p&gt;
&lt;p&gt;For more informal discussions we'd love to have you on the &lt;a href="https://slackinvite.julialang.org/" rel="nofollow"&gt;Julia slack&lt;/a&gt;, where we hang out on the #machine-learning channel.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-related-packages" class="anchor" aria-hidden="true" href="#related-packages"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Related Packages&lt;/h2&gt;
&lt;p&gt;Check out &lt;a href="https://github.com/FluxML/Metalhead.jl"&gt;Metalhead.jl&lt;/a&gt; for common computer vision datasets and trained models.&lt;/p&gt;
&lt;p&gt;&lt;a href="https://github.com/JuliaML/MLDatasets.jl"&gt;MLDatasets.jl&lt;/a&gt; provides further common datasets.&lt;/p&gt;
&lt;/article&gt;&lt;/div&gt;</description><author>FluxML</author><guid isPermaLink="false">https://github.com/FluxML/Flux.jl</guid><pubDate>Sun, 17 Nov 2019 00:02:00 GMT</pubDate></item><item><title>bcbi/CompatHelper.jl #3 in Julia, This week</title><link>https://github.com/bcbi/CompatHelper.jl</link><description>&lt;p&gt;&lt;i&gt;Automatically update the [compat] entries for your Julia package's dependencies&lt;/i&gt;&lt;/p&gt;&lt;div id="readme" class="instapaper_body md" data-path="README.md"&gt;&lt;article class="markdown-body entry-content p-5" itemprop="text"&gt;&lt;h1&gt;&lt;a id="user-content-compathelper" class="anchor" aria-hidden="true" href="#compathelper"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;CompatHelper&lt;/h1&gt;
&lt;p&gt;&lt;a href="https://travis-ci.com/bcbi/CompatHelper.jl" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/7b620f3038e7a122e5df8a65d0fbf0968993fc68/68747470733a2f2f7472617669732d63692e636f6d2f626362692f436f6d70617448656c7065722e6a6c2e7376673f6272616e63683d6d6173746572" alt="Build Status" data-canonical-src="https://travis-ci.com/bcbi/CompatHelper.jl.svg?branch=master" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://codecov.io/gh/bcbi/CompatHelper.jl" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/97ee2db5c2fb0bf7b05b324576fa27f7ec8663a6/68747470733a2f2f636f6465636f762e696f2f67682f626362692f436f6d70617448656c7065722e6a6c2f6272616e63682f6d61737465722f67726170682f62616467652e737667" alt="Codecov" data-canonical-src="https://codecov.io/gh/bcbi/CompatHelper.jl/branch/master/graph/badge.svg" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;CompatHelper is a Julia package that helps you keep your &lt;code&gt;[compat]&lt;/code&gt; entries up-to-date.&lt;/p&gt;
&lt;p&gt;Whenever one of your package's dependencies releases a new version, CompatHelper opens a pull request on your repository that modifies your &lt;code&gt;[compat]&lt;/code&gt; entry to reflect the newly released version.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-installation" class="anchor" aria-hidden="true" href="#installation"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Installation&lt;/h2&gt;
&lt;p&gt;The easiest way to use CompatHelper is to install it as a GitHub Action.&lt;/p&gt;
&lt;p&gt;To install CompatHelper as a GitHub Action on your repository:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Go to the GitHub page for your repository.&lt;/li&gt;
&lt;li&gt;Click on the "Actions" tab. (If you don't see the "Actions" tab, follow the instructions &lt;a href="#actions-setup"&gt;here&lt;/a&gt;.) The Action tab is across the top as shown in this screenshot:
&lt;a target="_blank" rel="noopener noreferrer" href="readme_images/action_tab.png"&gt;&lt;img src="readme_images/action_tab.png" alt="action" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;If you have never set up any GitHub Actions on your repository, you will be brought to a page that says "Get started with GitHub Actions". In the top right-hand corner, click on the button that says "Skip this: Set up a workflow yourself". Then go to step 5.&lt;/li&gt;
&lt;li&gt;If you have previously set up a GitHub Action on your repository, you will be brought to a page that says "All workflows" and has a list of all of the GitHub Actions workflows on your repository. Click on the "New workflow" button. Then, in the top right-hand corner, click on the button that says "Skip this: Set up a workflow yourself". Then go to step 5.&lt;/li&gt;
&lt;li&gt;An editor will open with some content pre-populated by GitHub. Delete all of the pre-populated content.&lt;/li&gt;
&lt;li&gt;Copy the content from the &lt;a href=".github/workflows/CompatHelper.yml"&gt;&lt;code&gt;.github/workflows/CompatHelper.yml&lt;/code&gt;&lt;/a&gt; file in the CompatHelper.jl repository and paste it into the editor.&lt;/li&gt;
&lt;li&gt;Name the file &lt;code&gt;CompatHelper.yml&lt;/code&gt;. (The full path to the file should be &lt;code&gt;.github/workflows/CompatHelper.yml&lt;/code&gt;.)&lt;/li&gt;
&lt;li&gt;In the top right-hand corner, click on the green "Start commit" button, and then click on the green "Commit new file" button.&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;CompatHelper is now installed as a GitHub Action on your repository.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-overriding-the-default-branch" class="anchor" aria-hidden="true" href="#overriding-the-default-branch"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Overriding the default branch&lt;/h2&gt;
&lt;p&gt;By default, CompatHelper will open pull requests against your repository's default branch. If you would like to override this behavior, set the &lt;code&gt;master_branch&lt;/code&gt; keyword argument. For example:&lt;/p&gt;
&lt;div class="highlight highlight-source-julia"&gt;&lt;pre&gt;CompatHelper&lt;span class="pl-k"&gt;.&lt;/span&gt;&lt;span class="pl-c1"&gt;main&lt;/span&gt;(; master_branch &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;my-custom-branch&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)&lt;/pre&gt;&lt;/div&gt;
&lt;h2&gt;&lt;a id="user-content-custom-registries" class="anchor" aria-hidden="true" href="#custom-registries"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Custom registries&lt;/h2&gt;
&lt;p&gt;To use a list of custom registries instead of the General registry, use the &lt;code&gt;registries&lt;/code&gt; keyword argument. For example:&lt;/p&gt;
&lt;div class="highlight highlight-source-julia"&gt;&lt;pre&gt;my_registries &lt;span class="pl-k"&gt;=&lt;/span&gt; [Pkg&lt;span class="pl-k"&gt;.&lt;/span&gt;&lt;span class="pl-c1"&gt;RegistrySpec&lt;/span&gt;(name &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;General&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;,
                                  uuid &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;23338594-aafe-5451-b93e-139f81909106&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;,
                                  url &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;https://github.com/JuliaRegistries/General.git&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;),
                 Pkg&lt;span class="pl-k"&gt;.&lt;/span&gt;&lt;span class="pl-c1"&gt;RegistrySpec&lt;/span&gt;(name &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;BioJuliaRegistry&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;,
                                  uuid &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;ccbd2cc2-2954-11e9-1ccf-f3e7900901ca&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;,
                                  url &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;https://github.com/BioJulia/BioJuliaRegistry.git&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)]

CompatHelper&lt;span class="pl-k"&gt;.&lt;/span&gt;&lt;span class="pl-c1"&gt;main&lt;/span&gt;(; registries &lt;span class="pl-k"&gt;=&lt;/span&gt; my_registries)&lt;/pre&gt;&lt;/div&gt;
&lt;h2&gt;&lt;a id="user-content-actions-setup" class="anchor" aria-hidden="true" href="#actions-setup"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Actions setup&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Sign up for the beta of GitHub Actions from &lt;a href="https://github.com/features/actions"&gt;https://github.com/features/actions&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Open the specific repository, navigate to the Settings tab, click Actions option, check if the Actions is enabled for this repository.&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-custom-pre-commit-hooks" class="anchor" aria-hidden="true" href="#custom-pre-commit-hooks"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Custom pre-commit hooks&lt;/h2&gt;
&lt;p&gt;CompatHelper supports running a custom function just before commiting changes.
By default, this function updates any &lt;code&gt;Manifest.toml&lt;/code&gt; files in your repository to reflect new compatibility bounds.
If you want to extend this behaviour, you can pass your own zero-argument function to &lt;code&gt;CompatHelper.main&lt;/code&gt;, like so:&lt;/p&gt;
&lt;div class="highlight highlight-source-yaml"&gt;&lt;pre&gt;&lt;span class="pl-ent"&gt;run&lt;/span&gt;: &lt;span class="pl-s"&gt;julia -e '&lt;/span&gt;
  &lt;span class="pl-s"&gt;using CompatHelper;&lt;/span&gt;
  &lt;span class="pl-s"&gt;CompatHelper.main() do;&lt;/span&gt;
    &lt;span class="pl-s"&gt;CompatHelper.update_manifests();&lt;/span&gt;
    &lt;span class="pl-s"&gt;println("I did it!");&lt;/span&gt;
  &lt;span class="pl-s"&gt;end;'&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;This snippet uses &lt;code&gt;;&lt;/code&gt; to specify the ends of lines, because according to YAML, the entire block of Julia code is a single line.
Also to note is that you cannot use &lt;code&gt;'&lt;/code&gt; inside of your Julia command, since it's used to quote the Julia code.&lt;/p&gt;
&lt;p&gt;A full example is available here: &lt;a href="https://github.com/tkf/Kaleido.jl/blob/master/.github/workflows/CompatHelper.yml"&gt;https://github.com/tkf/Kaleido.jl/blob/master/.github/workflows/CompatHelper.yml&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;If you want to disable the default behavior, simply pass a dummy function that does nothing:&lt;/p&gt;
&lt;div class="highlight highlight-source-yaml"&gt;&lt;pre&gt;&lt;span class="pl-ent"&gt;run&lt;/span&gt;: &lt;span class="pl-s"&gt;julia -e '&lt;/span&gt;
  &lt;span class="pl-s"&gt;using CompatHelper;&lt;/span&gt;
  &lt;span class="pl-s"&gt;CompatHelper.main( () -&amp;gt; () );'&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h2&gt;&lt;a id="user-content-acknowledgements" class="anchor" aria-hidden="true" href="#acknowledgements"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Acknowledgements&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;This work was supported in part by National Institutes of Health grants U54GM115677, R01LM011963, and R25MH116440. The content is solely the responsibility of the authors and does not necessarily represent the official views of the National Institutes of Health.&lt;/li&gt;
&lt;/ul&gt;
&lt;/article&gt;&lt;/div&gt;</description><author>bcbi</author><guid isPermaLink="false">https://github.com/bcbi/CompatHelper.jl</guid><pubDate>Sun, 17 Nov 2019 00:03:00 GMT</pubDate></item><item><title>FluxML/Zygote.jl #4 in Julia, This week</title><link>https://github.com/FluxML/Zygote.jl</link><description>&lt;p&gt;&lt;i&gt;Intimate Affection Auditor&lt;/i&gt;&lt;/p&gt;&lt;div id="readme" class="instapaper_body md" data-path="README.md"&gt;&lt;article class="markdown-body entry-content p-5" itemprop="text"&gt;&lt;p align="center"&gt;
&lt;a target="_blank" rel="noopener noreferrer" href="https://raw.githubusercontent.com/FluxML/fluxml.github.io/master/zygote.png"&gt;&lt;img width="400px" src="https://raw.githubusercontent.com/FluxML/fluxml.github.io/master/zygote.png" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;&lt;a href="https://travis-ci.org/FluxML/Zygote.jl" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/a383c9b8923b8c02f50ec6a7cd2348f1a07df588/68747470733a2f2f7472617669732d63692e6f72672f466c75784d4c2f5a79676f74652e6a6c2e7376673f6272616e63683d6d6173746572" alt="Build Status" data-canonical-src="https://travis-ci.org/FluxML/Zygote.jl.svg?branch=master" style="max-width:100%;"&gt;&lt;/a&gt; &lt;a href="https://fluxml.ai/Zygote.jl/dev" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/3e353c26ddfe819150acbc732248f4f2a37f5175/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f646f63732d6465762d626c75652e737667" alt="Dev Docs" data-canonical-src="https://img.shields.io/badge/docs-dev-blue.svg" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;code&gt;] add Zygote&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Zygote is a working prototype for source-to-source automatic differentiation (AD) in Julia, and the next-gen AD system for the &lt;a href="https://github.com/FluxML/Flux.jl"&gt;Flux&lt;/a&gt; differentiable programming framework. For more details and benchmarks of Zygote's technique, see &lt;a href="https://arxiv.org/abs/1810.07951" rel="nofollow"&gt;our paper&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;You probably don't want to use Zygote yet (except as a preview of the future). Instead use Flux's built-in AD, which is API-compatible, and at some point in the near future you'll get a free speed boost.&lt;/p&gt;
&lt;div class="highlight highlight-source-julia"&gt;&lt;pre&gt;julia&lt;span class="pl-k"&gt;&amp;gt;&lt;/span&gt; &lt;span class="pl-k"&gt;using&lt;/span&gt; Zygote

julia&lt;span class="pl-k"&gt;&amp;gt;&lt;/span&gt; &lt;span class="pl-en"&gt;f&lt;/span&gt;(x) &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;5&lt;/span&gt;x &lt;span class="pl-k"&gt;+&lt;/span&gt; &lt;span class="pl-c1"&gt;3&lt;/span&gt;

julia&lt;span class="pl-k"&gt;&amp;gt;&lt;/span&gt; &lt;span class="pl-c1"&gt;f&lt;/span&gt;(&lt;span class="pl-c1"&gt;10&lt;/span&gt;), f&lt;span class="pl-k"&gt;'&lt;/span&gt;(&lt;span class="pl-c1"&gt;10&lt;/span&gt;)
(&lt;span class="pl-c1"&gt;53&lt;/span&gt;, &lt;span class="pl-c1"&gt;5&lt;/span&gt;)

julia&lt;span class="pl-k"&gt;&amp;gt;&lt;/span&gt; &lt;span class="pl-c1"&gt;@code_llvm&lt;/span&gt; f&lt;span class="pl-k"&gt;'&lt;/span&gt;(&lt;span class="pl-c1"&gt;10&lt;/span&gt;)
define i64 @&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;julia_#625_38792&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;(i64) {
top&lt;span class="pl-k"&gt;:&lt;/span&gt;
  ret i64 &lt;span class="pl-c1"&gt;5&lt;/span&gt;
}&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;"Source-to-source" means that Zygote hooks into Julia's compiler, and generates the backwards pass for you – as if you had written it by hand.&lt;/p&gt;
&lt;p&gt;Without compromising on performance, Zygote supports the full flexibility and dynamism of the Julia language, including control flow, recursion, closures, structs, dictionaries, and more.&lt;/p&gt;
&lt;div class="highlight highlight-source-julia"&gt;&lt;pre&gt;julia&lt;span class="pl-k"&gt;&amp;gt;&lt;/span&gt; fs &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;Dict&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;sin&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; &lt;span class="pl-k"&gt;=&amp;gt;&lt;/span&gt; sin, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;cos&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; &lt;span class="pl-k"&gt;=&amp;gt;&lt;/span&gt; cos, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;tan&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; &lt;span class="pl-k"&gt;=&amp;gt;&lt;/span&gt; tan);

julia&lt;span class="pl-k"&gt;&amp;gt;&lt;/span&gt; &lt;span class="pl-c1"&gt;gradient&lt;/span&gt;(x &lt;span class="pl-k"&gt;-&amp;gt;&lt;/span&gt; fs[&lt;span class="pl-c1"&gt;readline&lt;/span&gt;()](x), &lt;span class="pl-c1"&gt;1&lt;/span&gt;)
sin
&lt;span class="pl-c1"&gt;0.5403023058681398&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Defining custom gradients is a cinch, and errors have good stacktraces.&lt;/p&gt;
&lt;div class="highlight highlight-source-julia"&gt;&lt;pre&gt;julia&lt;span class="pl-k"&gt;&amp;gt;&lt;/span&gt; &lt;span class="pl-k"&gt;using&lt;/span&gt; Zygote&lt;span class="pl-k"&gt;:&lt;/span&gt; &lt;span class="pl-c1"&gt;@adjoint&lt;/span&gt;

julia&lt;span class="pl-k"&gt;&amp;gt;&lt;/span&gt; &lt;span class="pl-en"&gt;add&lt;/span&gt;(a, b) &lt;span class="pl-k"&gt;=&lt;/span&gt; a &lt;span class="pl-k"&gt;+&lt;/span&gt; b

julia&lt;span class="pl-k"&gt;&amp;gt;&lt;/span&gt; &lt;span class="pl-c1"&gt;@adjoint&lt;/span&gt; &lt;span class="pl-en"&gt;add&lt;/span&gt;(a, b) &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;add&lt;/span&gt;(a, b), Δ &lt;span class="pl-k"&gt;-&amp;gt;&lt;/span&gt; (Δ, Δ)&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;To support large machine learning models with many parameters, Zygote can differentiate implicitly-used parameters, as opposed to just function arguments.&lt;/p&gt;
&lt;div class="highlight highlight-source-julia"&gt;&lt;pre&gt;julia&lt;span class="pl-k"&gt;&amp;gt;&lt;/span&gt; W, b &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;rand&lt;/span&gt;(&lt;span class="pl-c1"&gt;2&lt;/span&gt;, &lt;span class="pl-c1"&gt;3&lt;/span&gt;), &lt;span class="pl-c1"&gt;rand&lt;/span&gt;(&lt;span class="pl-c1"&gt;2&lt;/span&gt;);

julia&lt;span class="pl-k"&gt;&amp;gt;&lt;/span&gt; &lt;span class="pl-en"&gt;predict&lt;/span&gt;(x) &lt;span class="pl-k"&gt;=&lt;/span&gt; W&lt;span class="pl-k"&gt;*&lt;/span&gt;x &lt;span class="pl-k"&gt;.+&lt;/span&gt; b;

julia&lt;span class="pl-k"&gt;&amp;gt;&lt;/span&gt; g &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;gradient&lt;/span&gt;(&lt;span class="pl-c1"&gt;Params&lt;/span&gt;([W, b])) &lt;span class="pl-k"&gt;do&lt;/span&gt;
         &lt;span class="pl-c1"&gt;sum&lt;/span&gt;(&lt;span class="pl-c1"&gt;predict&lt;/span&gt;([&lt;span class="pl-c1"&gt;1&lt;/span&gt;,&lt;span class="pl-c1"&gt;2&lt;/span&gt;,&lt;span class="pl-c1"&gt;3&lt;/span&gt;]))
       &lt;span class="pl-k"&gt;end&lt;/span&gt;
&lt;span class="pl-c1"&gt;Grads&lt;/span&gt;(&lt;span class="pl-k"&gt;...&lt;/span&gt;)

julia&lt;span class="pl-k"&gt;&amp;gt;&lt;/span&gt; g[W], g[b]
([&lt;span class="pl-c1"&gt;1.0&lt;/span&gt; &lt;span class="pl-c1"&gt;2.0&lt;/span&gt; &lt;span class="pl-c1"&gt;3.0&lt;/span&gt;; &lt;span class="pl-c1"&gt;1.0&lt;/span&gt; &lt;span class="pl-c1"&gt;2.0&lt;/span&gt; &lt;span class="pl-c1"&gt;3.0&lt;/span&gt;], [&lt;span class="pl-c1"&gt;1.0&lt;/span&gt;, &lt;span class="pl-c1"&gt;1.0&lt;/span&gt;])&lt;/pre&gt;&lt;/div&gt;
&lt;h2&gt;&lt;a id="user-content-caveat-emptor" class="anchor" aria-hidden="true" href="#caveat-emptor"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Caveat Emptor&lt;/h2&gt;
&lt;p&gt;Zygote is in an early stage and may break, but issue reports and beta testing are welcome. In particular Zygote does not yet have comprehensive gradient definitions and may fail if it hits complex code in Base Julia.&lt;/p&gt;
&lt;p&gt;Zygote's runtime performance should generally be good, but compile times are not optimised, so calling &lt;code&gt;gradient&lt;/code&gt; the first time can have noticeable lag. &lt;a href="https://github.com/JuliaCI/BenchmarkTools.jl"&gt;BenchmarkTools&lt;/a&gt; is recommended to avoid measuring JIT time.&lt;/p&gt;
&lt;p&gt;A current limitation is that Zygote will not automatically see redefined functions (for example if you call &lt;code&gt;gradient(f, x)&lt;/code&gt;, then redefine &lt;code&gt;f&lt;/code&gt;, then take the gradient again). You can call &lt;code&gt;Zygote.refresh()&lt;/code&gt; to completely reset what Zygote sees. It's often useful to have this in your script/notebook after function definitions.&lt;/p&gt;
&lt;p&gt;The Julia compiler does not yet support all features needed to make Zygote fast, particularly in the presence of control flow. Until these are officially supported Zygote &lt;a href="https://github.com/FluxML/Zygote.jl/blob/5d7ea65ef0cdbd07c30584b5d66d13a66c7e0c21/src/Zygote.jl#L12"&gt;contains a flag&lt;/a&gt; to enable faster operation. If you can handle the additional caveats it's a good way to see Zygote's peak performance.&lt;/p&gt;
&lt;/article&gt;&lt;/div&gt;</description><author>FluxML</author><guid isPermaLink="false">https://github.com/FluxML/Zygote.jl</guid><pubDate>Sun, 17 Nov 2019 00:04:00 GMT</pubDate></item></channel></rss>