<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0"><channel><title>GitHub Trending: Ruby, This week</title><link>https://github.com/trending/ruby?since=weekly</link><description>The top repositories on GitHub for ruby, measured weekly</description><pubDate>Fri, 01 Nov 2019 00:05:34 GMT</pubDate><lastBuildDate>Fri, 01 Nov 2019 00:05:34 GMT</lastBuildDate><generator>PyRSS2Gen-1.1.0</generator><docs>http://blogs.law.harvard.edu/tech/rss</docs><ttl>1400</ttl><item><title>elastic/logstash #1 in Ruby, This week</title><link>https://github.com/elastic/logstash</link><description>&lt;p&gt;&lt;i&gt;Logstash - transport and process your logs, events, or other data&lt;/i&gt;&lt;/p&gt;&lt;div id="readme" class="instapaper_body md" data-path="README.md"&gt;&lt;article class="markdown-body entry-content p-5" itemprop="text"&gt;&lt;h1&gt;&lt;a id="user-content-logstash" class="anchor" aria-hidden="true" href="#logstash"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Logstash&lt;/h1&gt;
&lt;p&gt;Logstash is part of the &lt;a href="https://www.elastic.co/products" rel="nofollow"&gt;Elastic Stack&lt;/a&gt; along with Beats, Elasticsearch and Kibana. Logstash is a server-side data processing pipeline that ingests data from a multitude of sources simultaneously, transforms it, and then sends it to your favorite "stash." (Ours is Elasticsearch, naturally.). Logstash has over 200 plugins, and you can write your own very easily as well.&lt;/p&gt;
&lt;p&gt;For more info, see &lt;a href="https://www.elastic.co/products/logstash" rel="nofollow"&gt;https://www.elastic.co/products/logstash&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-documentation-and-getting-started" class="anchor" aria-hidden="true" href="#documentation-and-getting-started"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Documentation and Getting Started&lt;/h2&gt;
&lt;p&gt;You can find the documentation and getting started guides for Logstash
on the &lt;a href="https://www.elastic.co/guide/en/logstash/current/getting-started-with-logstash.html" rel="nofollow"&gt;elastic.co site&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;For information about building the documentation, see the README in &lt;a href="https://github.com/elastic/docs"&gt;https://github.com/elastic/docs&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-downloads" class="anchor" aria-hidden="true" href="#downloads"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Downloads&lt;/h2&gt;
&lt;p&gt;You can download officially released Logstash binaries, as well as debian/rpm packages for the
supported platforms, from &lt;a href="https://www.elastic.co/downloads/logstash" rel="nofollow"&gt;downloads page&lt;/a&gt;.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-snapshot-builds" class="anchor" aria-hidden="true" href="#snapshot-builds"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Snapshot Builds&lt;/h3&gt;
&lt;p&gt;For the daring, snapshot builds are available.
These builds are created nightly and have undergone no formal QA, so they should &lt;strong&gt;never&lt;/strong&gt; be run in production.&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Complete, with X-Pack&lt;/th&gt;
&lt;th&gt;Apache 2.0 licensed&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href="https://snapshots.elastic.co/downloads/logstash/logstash-8.0.0-SNAPSHOT.tar.gz" rel="nofollow"&gt;tar-complete&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href="https://snapshots.elastic.co/downloads/logstash/logstash-oss-8.0.0-SNAPSHOT.tar.gz" rel="nofollow"&gt;tar-oss&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href="https://snapshots.elastic.co/downloads/logstash/logstash-8.0.0-SNAPSHOT.zip" rel="nofollow"&gt;zip-complete&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href="https://snapshots.elastic.co/downloads/logstash/logstash-oss-8.0.0-SNAPSHOT.zip" rel="nofollow"&gt;zip-oss&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href="https://snapshots.elastic.co/downloads/logstash/logstash-8.0.0-SNAPSHOT.deb" rel="nofollow"&gt;deb-complete&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href="https://snapshots.elastic.co/downloads/logstash/logstash-oss-8.0.0-SNAPSHOT.deb" rel="nofollow"&gt;deb-oss&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href="https://snapshots.elastic.co/downloads/logstash/logstash-8.0.0-SNAPSHOT.rpm" rel="nofollow"&gt;rpm-complete&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href="https://snapshots.elastic.co/downloads/logstash/logstash-oss-8.0.0-SNAPSHOT.rpm" rel="nofollow"&gt;rpm-oss&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h2&gt;&lt;a id="user-content-need-help" class="anchor" aria-hidden="true" href="#need-help"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Need Help?&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://discuss.elastic.co/c/logstash" rel="nofollow"&gt;Logstash Forum&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.elastic.co/guide/en/logstash/current/index.html" rel="nofollow"&gt;Logstash Documentation&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://webchat.freenode.net/?channels=logstash" rel="nofollow"&gt;#logstash on freenode IRC&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.elastic.co/products/logstash" rel="nofollow"&gt;Logstash Product Information&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.elastic.co/subscriptions" rel="nofollow"&gt;Elastic Support&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-logstash-plugins" class="anchor" aria-hidden="true" href="#logstash-plugins"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Logstash Plugins&lt;/h2&gt;
&lt;p&gt;Logstash plugins are hosted in separate repositories under the &lt;a href="https://github.com/logstash-plugins"&gt;logstash-plugins&lt;/a&gt; github organization. Each plugin is a self-contained Ruby gem which gets published to RubyGems.org.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-writing-your-own-plugin" class="anchor" aria-hidden="true" href="#writing-your-own-plugin"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Writing your own Plugin&lt;/h3&gt;
&lt;p&gt;Logstash is known for its extensibility. There are hundreds of plugins for Logstash and you can write your own very easily! For more info on developing and testing these plugins, please see the &lt;a href="https://www.elastic.co/guide/en/logstash/current/contributing-to-logstash.html" rel="nofollow"&gt;working with plugins section&lt;/a&gt;&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-plugin-issues-and-pull-requests" class="anchor" aria-hidden="true" href="#plugin-issues-and-pull-requests"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Plugin Issues and Pull Requests&lt;/h3&gt;
&lt;p&gt;&lt;strong&gt;Please open new issues and pull requests for plugins under its own repository&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;For example, if you have to report an issue/enhancement for the Elasticsearch output, please do so &lt;a href="https://github.com/logstash-plugins/logstash-output-elasticsearch/issues"&gt;here&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Logstash core will continue to exist under this repository and all related issues and pull requests can be submitted here.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-developing-logstash-core" class="anchor" aria-hidden="true" href="#developing-logstash-core"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Developing Logstash Core&lt;/h2&gt;
&lt;h3&gt;&lt;a id="user-content-prerequisites" class="anchor" aria-hidden="true" href="#prerequisites"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Prerequisites&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;Install JDK version 8 or 11. Make sure to set the &lt;code&gt;JAVA_HOME&lt;/code&gt; environment variable to the path to your JDK installation directory. For example &lt;code&gt;set JAVA_HOME=&amp;lt;JDK_PATH&amp;gt;&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Install JRuby 9.2.x It is recommended to use a Ruby version manager such as &lt;a href="https://rvm.io/" rel="nofollow"&gt;RVM&lt;/a&gt; or &lt;a href="https://github.com/sstephenson/rbenv"&gt;rbenv&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;Install &lt;code&gt;rake&lt;/code&gt; and &lt;code&gt;bundler&lt;/code&gt; tool using &lt;code&gt;gem install rake&lt;/code&gt; and &lt;code&gt;gem install bundler&lt;/code&gt; respectively.&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;&lt;a id="user-content-rvm-install-optional" class="anchor" aria-hidden="true" href="#rvm-install-optional"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;RVM install (optional)&lt;/h3&gt;
&lt;p&gt;If you prefer to use rvm (ruby version manager) to manage Ruby versions on your machine, follow these directions. In the Logstash folder:&lt;/p&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt;gpg --keyserver hkp://keys.gnupg.net --recv-keys 409B6B1796C275462A1703113804BB82D39DC0E3
&lt;span class="pl-cce"&gt;\c&lt;/span&gt;url -sSL https://get.rvm.io &lt;span class="pl-k"&gt;|&lt;/span&gt; bash -s stable --ruby=&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;$(&lt;/span&gt;cat .ruby-version&lt;span class="pl-pds"&gt;)&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h3&gt;&lt;a id="user-content-check-ruby-version" class="anchor" aria-hidden="true" href="#check-ruby-version"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Check Ruby version&lt;/h3&gt;
&lt;p&gt;Before you proceed, please check your ruby version by:&lt;/p&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt;$ ruby -v&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;The printed version should be the same as in the &lt;code&gt;.ruby-version&lt;/code&gt; file.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-building-logstash" class="anchor" aria-hidden="true" href="#building-logstash"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Building Logstash&lt;/h3&gt;
&lt;p&gt;The Logstash project includes the source code for all of Logstash, including the Elastic-Licensed X-Pack features and functions; to run Logstash from source using only the OSS-licensed code, export the &lt;code&gt;OSS&lt;/code&gt; environment variable with a value of &lt;code&gt;true&lt;/code&gt;:&lt;/p&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;export&lt;/span&gt; OSS=true&lt;/pre&gt;&lt;/div&gt;
&lt;ul&gt;
&lt;li&gt;To run Logstash from the repo you must first bootstrap the environment:&lt;/li&gt;
&lt;/ul&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt;rake bootstrap&lt;/pre&gt;&lt;/div&gt;
&lt;ul&gt;
&lt;li&gt;You can then use &lt;code&gt;bin/logstash&lt;/code&gt; to start Logstash, but there are no plugins installed. To install default plugins, you can run:&lt;/li&gt;
&lt;/ul&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt;rake plugin:install-default&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;This will install the 80+ default plugins which makes Logstash ready to connect to multiple data sources, perform transformations and send the results to Elasticsearch and other destinations.&lt;/p&gt;
&lt;p&gt;To verify your environment, run the following to send your first event:&lt;/p&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt;bin/logstash -e &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;input { stdin { } } output { stdout {} }&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;This should start Logstash with stdin input waiting for you to enter an event&lt;/p&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt;hello world
2016-11-11T01:22:14.405+0000 0.0.0.0 hello world&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;strong&gt;Advanced: Drip Launcher&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href="https://github.com/ninjudd/drip"&gt;Drip&lt;/a&gt; is a tool that solves the slow JVM startup problem while developing Logstash. The drip script is intended to be a drop-in replacement for the java command. We recommend using drip during development, in particular for running tests. Using drip, the first invocation of a command will not be faster but the subsequent commands will be swift.&lt;/p&gt;
&lt;p&gt;To tell logstash to use drip, set the environment variable &lt;code&gt;JAVACMD=`which drip`&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;Example (but see the &lt;em&gt;Testing&lt;/em&gt; section below before running rspec for the first time):&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;JAVACMD=`which drip` bin/rspec
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;strong&gt;Caveats&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Drip does not work with STDIN. You cannot use drip for running configs which use the stdin plugin.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-building-logstash-documentation" class="anchor" aria-hidden="true" href="#building-logstash-documentation"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Building Logstash Documentation&lt;/h2&gt;
&lt;p&gt;To build the Logstash Reference (open source content only) on your local
machine, clone the following repos:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://github.com/elastic/logstash"&gt;logstash&lt;/a&gt; - contains main docs about core features&lt;/p&gt;
&lt;p&gt;&lt;a href="https://github.com/elastic/logstash-docs"&gt;logstash-docs&lt;/a&gt; - contains generated plugin docs&lt;/p&gt;
&lt;p&gt;&lt;a href="https://github.com/elastic/docs"&gt;docs&lt;/a&gt; - contains doc build files&lt;/p&gt;
&lt;p&gt;Make sure you have the same branch checked out in &lt;code&gt;logstash&lt;/code&gt; and &lt;code&gt;logstash-docs&lt;/code&gt;.
Check out &lt;code&gt;master&lt;/code&gt; in the &lt;code&gt;docs&lt;/code&gt; repo.&lt;/p&gt;
&lt;p&gt;Run the doc build script from within the &lt;code&gt;docs&lt;/code&gt; repo. For example:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;./build_docs.pl --doc ../logstash/docs/index.asciidoc --chunk=1 -open
&lt;/code&gt;&lt;/pre&gt;
&lt;h2&gt;&lt;a id="user-content-testing" class="anchor" aria-hidden="true" href="#testing"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Testing&lt;/h2&gt;
&lt;p&gt;Most of the unit tests in Logstash are written using &lt;a href="http://rspec.info/" rel="nofollow"&gt;rspec&lt;/a&gt; for the Ruby parts. For the Java parts, we use junit. For testing you can use the &lt;em&gt;test&lt;/em&gt; &lt;code&gt;rake&lt;/code&gt; tasks and the &lt;code&gt;bin/rspec&lt;/code&gt; command, see instructions below:&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-core-tests" class="anchor" aria-hidden="true" href="#core-tests"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Core tests&lt;/h3&gt;
&lt;p&gt;1- To run the core tests you can use the Gradle task:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;./gradlew test
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;or use the &lt;code&gt;rspec&lt;/code&gt; tool to run all tests or run a specific test:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;bin/rspec
bin/rspec spec/foo/bar_spec.rb
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Note that before running the &lt;code&gt;rspec&lt;/code&gt; command for the first time you need to set up the RSpec test dependencies by running:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;./gradlew bootstrap
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;2- To run the subset of tests covering the Java codebase only run:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;./gradlew javaTests
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;3- To execute the complete test-suite including the integration tests run:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;./gradlew check
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Sometimes you might find a change to a piece of Logstash code causes a test to hang. These can be hard to debug.&lt;/p&gt;
&lt;p&gt;If you set &lt;code&gt;LS_JAVA_OPTS="-agentlib:jdwp=transport=dt_socket,server=y,suspend=n,address=5005"&lt;/code&gt; you can connect to a running Logstash with your IDEs debugger which can be a great way of finding the issue.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-plugins-tests" class="anchor" aria-hidden="true" href="#plugins-tests"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Plugins tests&lt;/h3&gt;
&lt;p&gt;To run the tests of all currently installed plugins:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;rake test:plugin
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;You can install the default set of plugins included in the logstash package:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;rake test:install-default
&lt;/code&gt;&lt;/pre&gt;
&lt;hr&gt;
&lt;p&gt;Note that if a plugin is installed using the plugin manager &lt;code&gt;bin/logstash-plugin install ...&lt;/code&gt; do not forget to also install the plugins development dependencies using the following command after the plugin installation:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;bin/logstash-plugin install --development
&lt;/code&gt;&lt;/pre&gt;
&lt;h2&gt;&lt;a id="user-content-building-artifacts" class="anchor" aria-hidden="true" href="#building-artifacts"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Building Artifacts&lt;/h2&gt;
&lt;p&gt;Built artifacts will be placed in the &lt;code&gt;LS_HOME/build&lt;/code&gt; directory, and will create the directory if it is not already present.&lt;/p&gt;
&lt;p&gt;You can build a Logstash snapshot package as tarball or zip file&lt;/p&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt;./gradlew assembleTarDistribution
./gradlew assembleZipDistribution&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;OSS-only artifacts can similarly be built with their own gradle tasks:&lt;/p&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt;./gradlew assembleOssTarDistribution
./gradlew assembleOssZipDistribution
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;You can also build .rpm and .deb, but the &lt;a href="https://github.com/jordansissel/fpm"&gt;fpm&lt;/a&gt; tool is required.&lt;/p&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt;rake artifact:rpm
rake artifact:deb&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;and:&lt;/p&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt;rake artifact:rpm_oss
rake artifact:deb_oss&lt;/pre&gt;&lt;/div&gt;
&lt;h2&gt;&lt;a id="user-content-using-a-custom-jruby-distribution" class="anchor" aria-hidden="true" href="#using-a-custom-jruby-distribution"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Using a Custom JRuby Distribution&lt;/h2&gt;
&lt;p&gt;If you want the build to use a custom JRuby you can do so by setting a path to a custom
JRuby distribution's source root via the &lt;code&gt;custom.jruby.path&lt;/code&gt; Gradle property.&lt;/p&gt;
&lt;p&gt;E.g.&lt;/p&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt;./gradlew clean &lt;span class="pl-c1"&gt;test&lt;/span&gt; -Pcustom.jruby.path=&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;/path/to/jruby&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h2&gt;&lt;a id="user-content-project-principles" class="anchor" aria-hidden="true" href="#project-principles"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Project Principles&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Community: If a newbie has a bad time, it's a bug.&lt;/li&gt;
&lt;li&gt;Software: Make it work, then make it right, then make it fast.&lt;/li&gt;
&lt;li&gt;Technology: If it doesn't do a thing today, we can make it do it tomorrow.&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-contributing" class="anchor" aria-hidden="true" href="#contributing"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Contributing&lt;/h2&gt;
&lt;p&gt;All contributions are welcome: ideas, patches, documentation, bug reports,
complaints, and even something you drew up on a napkin.&lt;/p&gt;
&lt;p&gt;Programming is not a required skill. Whatever you've seen about open source and
maintainers or community members  saying "send patches or die" - you will not
see that here.&lt;/p&gt;
&lt;p&gt;It is more important to me that you are able to contribute.&lt;/p&gt;
&lt;p&gt;For more information about contributing, see the
&lt;a href="./CONTRIBUTING.md"&gt;CONTRIBUTING&lt;/a&gt; file.&lt;/p&gt;
&lt;/article&gt;&lt;/div&gt;</description><author>elastic</author><guid isPermaLink="false">https://github.com/elastic/logstash</guid><pubDate>Fri, 01 Nov 2019 00:00:00 GMT</pubDate></item><item><title>faker-ruby/faker #2 in Ruby, This week</title><link>https://github.com/faker-ruby/faker</link><description>&lt;p&gt;&lt;i&gt;A library for generating fake data such as names, addresses, and phone numbers.&lt;/i&gt;&lt;/p&gt;&lt;div id="readme" class="instapaper_body md" data-path="README.md"&gt;&lt;article class="markdown-body entry-content p-5" itemprop="text"&gt;&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="https://user-images.githubusercontent.com/36028424/40263395-4318481e-5b44-11e8-92e5-3dcc1ce169b3.png"&gt;&lt;img src="https://user-images.githubusercontent.com/36028424/40263395-4318481e-5b44-11e8-92e5-3dcc1ce169b3.png" alt="logotype a happy-07" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h1&gt;&lt;a id="user-content-faker" class="anchor" aria-hidden="true" href="#faker"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Faker&lt;/h1&gt;
&lt;p&gt;&lt;a href="https://travis-ci.org/faker-ruby/faker" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/ce92ae0ba8ef7fe45e881791e8e61a5aa456831b/68747470733a2f2f7472617669732d63692e6f72672f66616b65722d727562792f66616b65722e7376673f6272616e63683d6d6173746572" alt="Build Status" data-canonical-src="https://travis-ci.org/faker-ruby/faker.svg?branch=master" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://badge.fury.io/rb/faker" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/c02d9541ee5b284d271f74643ad25dd28912d057/68747470733a2f2f62616467652e667572792e696f2f72622f66616b65722e737667" alt="Gem Version" data-canonical-src="https://badge.fury.io/rb/faker.svg" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://inch-ci.org/github/faker-ruby/faker" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/561542319d235ff71e121411ffec22672cbc40f6/68747470733a2f2f696e63682d63692e6f72672f6769746875622f66616b65722d727562792f66616b65722e7376673f6272616e63683d6d6173746572" alt="Inline docs" data-canonical-src="https://inch-ci.org/github/faker-ruby/faker.svg?branch=master" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://codeclimate.com/github/stympy/faker/test_coverage" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/7068d3050e09bb88c17cf24fb639423e9078daa1/68747470733a2f2f6170692e636f6465636c696d6174652e636f6d2f76312f6261646765732f65663534633766396466383665393635643634622f746573745f636f766572616765" alt="Test Coverage" data-canonical-src="https://api.codeclimate.com/v1/badges/ef54c7f9df86e965d64b/test_coverage" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://codeclimate.com/github/stympy/faker/maintainability" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/34f77d5bc22e9a864aaa80306f783813c26dd8db/68747470733a2f2f6170692e636f6465636c696d6174652e636f6d2f76312f6261646765732f65663534633766396466383665393635643634622f6d61696e7461696e6162696c697479" alt="Maintainability" data-canonical-src="https://api.codeclimate.com/v1/badges/ef54c7f9df86e965d64b/maintainability" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://dependabot.com/compatibility-score.html?dependency-name=faker&amp;amp;package-manager=bundler&amp;amp;version-scheme=semver" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/dccceabc8d79bd84bb5288a975c5813d69c1c785/68747470733a2f2f6170692e646570656e6461626f742e636f6d2f6261646765732f636f6d7061746962696c6974795f73636f72653f646570656e64656e63792d6e616d653d66616b6572267061636b6167652d6d616e616765723d62756e646c65722676657273696f6e2d736368656d653d73656d766572" alt="SemVer compatibility" data-canonical-src="https://api.dependabot.com/badges/compatibility_score?dependency-name=faker&amp;amp;package-manager=bundler&amp;amp;version-scheme=semver" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;This gem is a port of &lt;a href="https://metacpan.org/pod/Data::Faker" rel="nofollow"&gt;Perl's Data::Faker library&lt;/a&gt; that generates fake data.&lt;/p&gt;
&lt;p&gt;It comes in very handy for taking screenshots (taking screenshots for my
project, &lt;a href="http://catchthebest.com/" rel="nofollow"&gt;Catch the Best&lt;/a&gt; was the original impetus
for the creation of this gem), having real-looking test data, and having your
database populated with more than one or two records while you're doing
development.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="#faker"&gt;Faker&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="#note"&gt;NOTE&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#installing"&gt;Installing&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#usage"&gt;Usage&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="#cli"&gt;CLI&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#ensuring-unique-values"&gt;Ensuring unique values&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#deterministic-random"&gt;Deterministic Random&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="#generators"&gt;Generators&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="#default"&gt;Default&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#blockchain"&gt;Blockchain&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#books"&gt;Books&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#creature"&gt;Creature&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#games"&gt;Games&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#japanese-media"&gt;Japanese Media&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#movies"&gt;Movies&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#music"&gt;Music&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#quotes"&gt;Quotes&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#sports"&gt;Sports&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#tv-shows"&gt;Tv Shows&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="#customization"&gt;Customization&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#contributing"&gt;Contributing&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#contact"&gt;Contact&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#license"&gt;License&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;&lt;a id="user-content-note" class="anchor" aria-hidden="true" href="#note"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;NOTE&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;While Faker generates data at random, returned values are not guaranteed to be unique by default.
You must explicity specify when you require unique values, see &lt;a href="#ensuring-unique-values"&gt;details&lt;/a&gt;.
Values also can be deterministic if you use the deterministic feature, see &lt;a href="#deterministic-random"&gt;details&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;This is the &lt;code&gt;master&lt;/code&gt; branch of Faker and may contain changes that are not yet released.
Please refer the README of your version for the available methods.
List of all versions is &lt;a href="https://github.com/stympy/faker/releases"&gt;available here&lt;/a&gt;.&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-installing" class="anchor" aria-hidden="true" href="#installing"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Installing&lt;/h2&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt;gem install faker&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Note: if you are getting a &lt;code&gt;uninitialized constant Faker::[some_class]&lt;/code&gt; error, your version of the gem is behind the one documented here. To make sure that your gem is the one documented here, change the line in your Gemfile to:&lt;/p&gt;
&lt;div class="highlight highlight-source-ruby"&gt;&lt;pre&gt;gem &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;faker&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-c1"&gt;:git&lt;/span&gt; =&amp;gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;https://github.com/faker-ruby/faker.git&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-c1"&gt;:branch&lt;/span&gt; =&amp;gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;master&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h2&gt;&lt;a id="user-content-usage" class="anchor" aria-hidden="true" href="#usage"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Usage&lt;/h2&gt;
&lt;div class="highlight highlight-source-ruby"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;require&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;faker&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;

&lt;span class="pl-c1"&gt;Faker&lt;/span&gt;::&lt;span class="pl-c1"&gt;Name&lt;/span&gt;.name      &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt;=&amp;gt; "Christophe Bartell"&lt;/span&gt;

&lt;span class="pl-c1"&gt;Faker&lt;/span&gt;::&lt;span class="pl-c1"&gt;Internet&lt;/span&gt;.email &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt;=&amp;gt; "kirsten.greenholt@corkeryfisher.info"&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h3&gt;&lt;a id="user-content-cli" class="anchor" aria-hidden="true" href="#cli"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;CLI&lt;/h3&gt;
&lt;p&gt;Instructions are available in the &lt;a href="https://github.com/faker-ruby/faker-bot"&gt;faker-bot README&lt;/a&gt;.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-ensuring-unique-values" class="anchor" aria-hidden="true" href="#ensuring-unique-values"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Ensuring unique values&lt;/h3&gt;
&lt;p&gt;Prefix your method call with &lt;code&gt;unique&lt;/code&gt;. For example:&lt;/p&gt;
&lt;div class="highlight highlight-source-ruby"&gt;&lt;pre&gt;&lt;span class="pl-c1"&gt;Faker&lt;/span&gt;::&lt;span class="pl-c1"&gt;Name&lt;/span&gt;.unique.name &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; This will return a unique name every time it is called&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;If too many unique values are requested from a generator that has a limited
number of potential values, a &lt;code&gt;Faker::UniqueGenerator::RetryLimitExceeded&lt;/code&gt;
exception may be raised. It is possible to clear the record of unique values
that have been returned, for example between tests.&lt;/p&gt;
&lt;div class="highlight highlight-source-ruby"&gt;&lt;pre&gt;&lt;span class="pl-c1"&gt;Faker&lt;/span&gt;::&lt;span class="pl-c1"&gt;Name&lt;/span&gt;.unique.clear &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; Clears used values for Faker::Name&lt;/span&gt;
&lt;span class="pl-c1"&gt;Faker&lt;/span&gt;::&lt;span class="pl-c1"&gt;UniqueGenerator&lt;/span&gt;.clear &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; Clears used values for all generators&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;You also can give some already used values to the unique generator if you have
collisions with the generated data (i.e: using FactoryBot with random and
manually set values).&lt;/p&gt;
&lt;div class="highlight highlight-source-ruby"&gt;&lt;pre&gt;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; Usage:&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; Faker::&amp;lt;generator&amp;gt;.unique.exclude(method, arguments, list)&lt;/span&gt;

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; Add 'azerty' and 'wxcvbn' to the string generator with 6 char length&lt;/span&gt;
&lt;span class="pl-c1"&gt;Faker&lt;/span&gt;::&lt;span class="pl-c1"&gt;Lorem&lt;/span&gt;.unique.exclude &lt;span class="pl-c1"&gt;:string&lt;/span&gt;, [&lt;span class="pl-c1"&gt;6&lt;/span&gt;], &lt;span class="pl-s"&gt;%w[azerty wxcvbn]&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h3&gt;&lt;a id="user-content-deterministic-random" class="anchor" aria-hidden="true" href="#deterministic-random"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Deterministic Random&lt;/h3&gt;
&lt;p&gt;Faker supports seeding of its pseudo-random number generator (PRNG) to provide deterministic output of repeated method calls.&lt;/p&gt;
&lt;div class="highlight highlight-source-ruby"&gt;&lt;pre&gt;&lt;span class="pl-c1"&gt;Faker&lt;/span&gt;::&lt;span class="pl-c1"&gt;Config&lt;/span&gt;.random &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;Random&lt;/span&gt;.&lt;span class="pl-k"&gt;new&lt;/span&gt;(&lt;span class="pl-c1"&gt;42&lt;/span&gt;)
&lt;span class="pl-c1"&gt;Faker&lt;/span&gt;::&lt;span class="pl-c1"&gt;Company&lt;/span&gt;.bs &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt;=&amp;gt; "seize collaborative mindshare"&lt;/span&gt;
&lt;span class="pl-c1"&gt;Faker&lt;/span&gt;::&lt;span class="pl-c1"&gt;Company&lt;/span&gt;.bs &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt;=&amp;gt; "engage strategic platforms"&lt;/span&gt;
&lt;span class="pl-c1"&gt;Faker&lt;/span&gt;::&lt;span class="pl-c1"&gt;Config&lt;/span&gt;.random &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;Random&lt;/span&gt;.&lt;span class="pl-k"&gt;new&lt;/span&gt;(&lt;span class="pl-c1"&gt;42&lt;/span&gt;)
&lt;span class="pl-c1"&gt;Faker&lt;/span&gt;::&lt;span class="pl-c1"&gt;Company&lt;/span&gt;.bs &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt;=&amp;gt; "seize collaborative mindshare"&lt;/span&gt;
&lt;span class="pl-c1"&gt;Faker&lt;/span&gt;::&lt;span class="pl-c1"&gt;Company&lt;/span&gt;.bs &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt;=&amp;gt; "engage strategic platforms"&lt;/span&gt;

&lt;span class="pl-c1"&gt;Faker&lt;/span&gt;::&lt;span class="pl-c1"&gt;Config&lt;/span&gt;.random &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;nil&lt;/span&gt; &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; seeds the PRNG using default entropy sources&lt;/span&gt;
&lt;span class="pl-c1"&gt;Faker&lt;/span&gt;::&lt;span class="pl-c1"&gt;Config&lt;/span&gt;.random.seed &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt;=&amp;gt; 185180369676275068918401850258677722187&lt;/span&gt;
&lt;span class="pl-c1"&gt;Faker&lt;/span&gt;::&lt;span class="pl-c1"&gt;Company&lt;/span&gt;.bs &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt;=&amp;gt; "cultivate viral synergies"&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h2&gt;&lt;a id="user-content-generators" class="anchor" aria-hidden="true" href="#generators"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Generators&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;NOTE: Some of the generators below aren't released yet. If you want to use them, change the line in your gemfile to:&lt;/strong&gt;&lt;/p&gt;
&lt;div class="highlight highlight-source-ruby"&gt;&lt;pre&gt;gem &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;faker&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-c1"&gt;:git&lt;/span&gt; =&amp;gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;https://github.com/faker-ruby/faker.git&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-c1"&gt;:branch&lt;/span&gt; =&amp;gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;master&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h3&gt;&lt;a id="user-content-default" class="anchor" aria-hidden="true" href="#default"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Default&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="doc/default/address.md"&gt;Faker::Address&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="doc/default/alphanumeric.md"&gt;Faker::Alphanumeric&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="doc/default/ancient.md"&gt;Faker::Ancient&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="doc/default/app.md"&gt;Faker::App&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="doc/default/appliance.md"&gt;Faker::Appliance&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="doc/default/artist.md"&gt;Faker::Artist&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="doc/default/avatar.md"&gt;Faker::Avatar&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="doc/default/bank.md"&gt;Faker::Bank&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="doc/default/beer.md"&gt;Faker::Beer&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="doc/default/boolean.md"&gt;Faker::Boolean&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="doc/default/bossa_nova.md"&gt;Faker::BossaNova&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="doc/default/business.md"&gt;Faker::Business&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="doc/default/cannabis.md"&gt;Faker::Cannabis&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="doc/default/chile_rut.md"&gt;Faker::ChileRut&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="doc/default/chuck_norris.md"&gt;Faker::ChuckNorris&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="doc/default/code.md"&gt;Faker::Code&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="doc/default/coffee.md"&gt;Faker::Coffee&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="doc/default/coin.md"&gt;Faker::Coin&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="doc/default/color.md"&gt;Faker::Color&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="doc/default/commerce.md"&gt;Faker::Commerce&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="doc/default/company.md"&gt;Faker::Company&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="doc/default/compass.md"&gt;Faker::Compass&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="doc/default/construction.md"&gt;Faker::Construction&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="doc/default/cosmere.md"&gt;Faker::Cosmere&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="doc/default/crypto.md"&gt;Faker::Crypto&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="doc/default/crypto_coin.md"&gt;Faker::CryptoCoin&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="doc/default/currency.md"&gt;Faker::Currency&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="doc/default/date.md"&gt;Faker::Date&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="doc/default/dc_comics.md"&gt;Faker::DcComics&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="doc/default/demographic.md"&gt;Faker::Demographic&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="doc/default/dessert.md"&gt;Faker::Dessert&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="doc/default/device.md"&gt;Faker::Device&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="doc/default/driving_licence.md"&gt;Faker::DrivingLicence&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="doc/default/educator.md"&gt;Faker::Educator&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="doc/default/electrical_components.md"&gt;Faker::ElectricalComponents&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="doc/default/esport.md"&gt;Faker::Esport&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="doc/default/file.md"&gt;Faker::File&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="doc/default/fillmurray.md"&gt;Faker::Fillmurray&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="doc/default/finance.md"&gt;Faker::Finance&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="doc/default/food.md"&gt;Faker::Food&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="doc/default/funny_name.md"&gt;Faker::FunnyName&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="doc/default/gender.md"&gt;Faker::Gender&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="doc/default/greek_philosophers.md"&gt;Faker::GreekPhilosophers&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="doc/default/hacker.md"&gt;Faker::Hacker&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="doc/default/hipster.md"&gt;Faker::Hipster&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="doc/default/house.md"&gt;Faker::House&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="doc/default/id_number.md"&gt;Faker::IDNumber&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="doc/default/industry_segments.md"&gt;Faker::IndustrySegments&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="doc/default/internet.md"&gt;Faker::Internet&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="doc/default/invoice.md"&gt;Faker::Invoice&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="doc/default/job.md"&gt;Faker::Job&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="doc/default/json.md"&gt;Faker::Json&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="doc/default/kpop.md"&gt;Faker::Kpop&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="doc/default/lorem.md"&gt;Faker::Lorem&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="doc/default/lorem_flickr.md"&gt;Faker::LoremFlickr&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="doc/default/lorem_pixel.md"&gt;Faker::LoremPixel&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="doc/default/markdown.md"&gt;Faker::Markdown&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="doc/default/marketing.md"&gt;Faker::Marketing&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="doc/default/measurement.md"&gt;Faker::Measurement&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="doc/default/military.md"&gt;Faker::Military&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="doc/default/name.md"&gt;Faker::Name&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="doc/default/nation.md"&gt;Faker::Nation&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="doc/default/nato_phonetic_alphabet.md"&gt;Faker::NatoPhoneticAlphabet&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="doc/default/national_health_service.md"&gt;Faker::NationalHealthService&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="doc/default/number.md"&gt;Faker::Number&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="doc/default/omniauth.md"&gt;Faker::Omniauth&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="doc/default/phone_number.md"&gt;Faker::PhoneNumber&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="doc/default/placeholdit.md"&gt;Faker::Placeholdit&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="doc/default/programming_language.md"&gt;Faker::ProgrammingLanguage&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="doc/default/relationship.md"&gt;Faker::Relationship&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="doc/default/restaurant.md"&gt;Faker::Restaurant&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="doc/default/science.md"&gt;Faker::Science&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="doc/default/slack_emoji.md"&gt;Faker::SlackEmoji&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="doc/default/source.md"&gt;Faker::Source&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="doc/default/south_africa.md"&gt;Faker::SouthAfrica&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="doc/default/space.md"&gt;Faker::Space&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="doc/default/string.md"&gt;Faker::String&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="doc/default/stripe.md"&gt;Faker::Stripe&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="doc/default/subscription.md"&gt;Faker::Subscription&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="doc/default/superhero.md"&gt;Faker::Superhero&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="doc/default/team.md"&gt;Faker::Team&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="doc/default/time.md"&gt;Faker::Time&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="doc/default/twitter.md"&gt;Faker::Twitter&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="doc/default/types.md"&gt;Faker::Types&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="doc/default/university.md"&gt;Faker::University&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="doc/default/vehicle.md"&gt;Faker::Vehicle&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="doc/default/verbs.md"&gt;Faker::Verbs&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="doc/default/world_cup.md"&gt;Faker::WorldCup&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;&lt;a id="user-content-blockchain" class="anchor" aria-hidden="true" href="#blockchain"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Blockchain&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="doc/blockchain/aeternity.md"&gt;Faker::Blockchain::Aeternity&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="doc/blockchain/bitcoin.md"&gt;Faker::Blockchain::Bitcoin&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="doc/blockchain/ethereum.md"&gt;Faker::Blockchain::Ethereum&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="doc/blockchain/tezos.md"&gt;Faker::Blockchain::Tezos&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;&lt;a id="user-content-books" class="anchor" aria-hidden="true" href="#books"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Books&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="doc/books/book.md"&gt;Faker::Book&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="doc/books/culture_series.md"&gt;Faker::Books::CultureSeries&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="doc/books/dune.md"&gt;Faker::Books::Dune&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="doc/books/lovecraft.md"&gt;Faker::Books::Lovecraft&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;&lt;a id="user-content-creature" class="anchor" aria-hidden="true" href="#creature"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Creature&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="doc/creature/animal.md"&gt;Faker::Creature::Animal&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="doc/creature/cat.md"&gt;Faker::Creature::Cat&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="doc/creature/dog.md"&gt;Faker::Creature::Dog&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="doc/creature/horse.md"&gt;Faker::Creature::Horse&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;&lt;a id="user-content-games" class="anchor" aria-hidden="true" href="#games"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Games&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="doc/games/game.md"&gt;Faker::Game&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="doc/games/dota.md"&gt;Faker::Games::Dota&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="doc/games/elder_scrolls.md"&gt;Faker::Games::ElderScrolls&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="doc/games/fallout.md"&gt;Faker::Games::Fallout&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="doc/games/half_life.md"&gt;Faker::Games::HalfLife&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="doc/games/heroes.md"&gt;Faker::Games::Heroes&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="doc/games/heroes_of_the_storm.md"&gt;Faker::Games::HeroesOfTheStorm&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="doc/games/league_of_legends.md"&gt;Faker::Games::LeagueOfLegends&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="doc/games/myst.md"&gt;Faker::Games::Myst&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="doc/games/overwatch.md"&gt;Faker::Games::Overwatch&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="doc/games/pokemon.md"&gt;Faker::Games::Pokemon&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="doc/games/sonic_the_hedgehog.md"&gt;Faker::Games::SonicTheHedgehog&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="doc/games/super_smash_bros.md"&gt;Faker::Games::SuperSmashBros&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="doc/games/witcher.md"&gt;Faker::Games::Witcher&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="doc/games/world_of_warcraft.md"&gt;Faker::Games::WorldOfWarcraft&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="doc/games/zelda.md"&gt;Faker::Games::Zelda&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;&lt;a id="user-content-japanese-media" class="anchor" aria-hidden="true" href="#japanese-media"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Japanese Media&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="doc/japanese_media/dragon_ball.md"&gt;Faker::JapaneseMedia::DragonBall&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="doc/japanese_media/one_piece.md"&gt;Faker::JapaneseMedia::OnePiece&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="doc/japanese_media/sword_art_online.md"&gt;Faker::JapaneseMedia::SwordArtOnline&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;&lt;a id="user-content-movies" class="anchor" aria-hidden="true" href="#movies"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Movies&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="doc/movies/movie.md"&gt;Faker::Movie&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="doc/movies/back_to_the_future.md"&gt;Faker::Movies::BackToTheFuture&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="doc/movies/ghostbusters.md"&gt;Faker::Movies::Ghostbusters&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="doc/movies/harry_potter.md"&gt;Faker::Movies::HarryPotter&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="doc/movies/hitchhikers_guide_to_the_galaxy.md"&gt;Faker::Movies::HitchhikersGuideToTheGalaxy&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="doc/movies/hobbit.md"&gt;Faker::Movies::Hobbit&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="doc/movies/lebowski.md"&gt;Faker::Movies::Lebowski&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="doc/movies/lord_of_the_rings.md"&gt;Faker::Movies::LordOfTheRings&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="doc/movies/princess_bride.md"&gt;Faker::Movies::PrincessBride&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="doc/movies/star_wars.md"&gt;Faker::Movies::StarWars&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="doc/movies/v_for_vendetta.md"&gt;Faker::Movies::VForVendetta&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;&lt;a id="user-content-music" class="anchor" aria-hidden="true" href="#music"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Music&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="doc/music/music.md"&gt;Faker::Music&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="doc/music/grateful_dead.md"&gt;Faker::Music::GratefulDead&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="doc/music/opera.md"&gt;Faker::Music::Opera&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="doc/music/phish.md"&gt;Faker::Music::Phish&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="doc/music/rock_band.md"&gt;Faker::Music::RockBand&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="doc/music/umphreys_mcgee.md"&gt;Faker::Music::UmphreysMcgee&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;&lt;a id="user-content-quotes" class="anchor" aria-hidden="true" href="#quotes"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Quotes&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="doc/quotes/quote.md"&gt;Faker::Quote&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="doc/quotes/shakespeare.md"&gt;Faker::Quotes::Shakespeare&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;&lt;a id="user-content-sports" class="anchor" aria-hidden="true" href="#sports"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Sports&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="doc/sports/basketball.md"&gt;Faker::Sports::Basketball&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="doc/sports/football.md"&gt;Faker::Sports::Football&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;&lt;a id="user-content-tv-shows" class="anchor" aria-hidden="true" href="#tv-shows"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Tv Shows&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="doc/tv_shows/aqua_teen_hunger_force.md"&gt;Faker::TvShows::AquaTeenHungerForce&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="doc/tv_shows/bojack_horseman.md"&gt;Faker::TvShows::BojackHorseman&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="doc/tv_shows/breaking_bad.md"&gt;Faker::TvShows::BreakingBad&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="doc/tv_shows/buffy.md"&gt;Faker::TvShows::Buffy&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="doc/tv_shows/community.md"&gt;Faker::TvShows::Community&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="doc/tv_shows/dr_who.md"&gt;Faker::TvShows::DrWho&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="doc/tv_shows/dumb_and_dumber.md"&gt;Faker::TvShows::DumbAndDumber&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="doc/tv_shows/family_guy.md"&gt;Faker::TvShows::FamilyGuy&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="doc/tv_shows/friends.md"&gt;Faker::TvShows::Friends&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="doc/tv_shows/game_of_thrones.md"&gt;Faker::TvShows::GameOfThrones&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="doc/tv_shows/hey_arnold.md"&gt;Faker::TvShows::HeyArnold&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="doc/tv_shows/how_i_met_your_mother.md"&gt;Faker::TvShows::HowIMetYourMother&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="doc/tv_shows/michael_scott.md"&gt;Faker::TvShows::MichaelScott&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="doc/tv_shows/new_girl.md"&gt;Faker::TvShows::NewGirl&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="doc/tv_shows/parks_and_rec.md"&gt;Faker::TvShows::ParksAndRec&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="doc/tv_shows/rick_and_morty.md"&gt;Faker::TvShows::RickAndMorty&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="doc/tv_shows/rupaul.md"&gt;Faker::TvShows::RuPaul&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="doc/tv_shows/seinfeld.md"&gt;Faker::TvShows::Seinfeld&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="doc/tv_shows/silicon_valley.md"&gt;Faker::TvShows::SiliconValley&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="doc/tv_shows/simpsons.md"&gt;Faker::TvShows::Simpsons&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="doc/tv_shows/south_park.md"&gt;Faker::TvShows::SouthPark&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="doc/tv_shows/star_trek.md"&gt;Faker::TvShows::StarTrek&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="doc/tv_shows/stargate.md"&gt;Faker::TvShows::Stargate&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="doc/tv_shows/stranger_things.md"&gt;Faker::TvShows::StrangerThings&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="doc/tv_shows/the_expanse.md"&gt;Faker::TvShows::TheExpanse&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="doc/tv_shows/the_fresh_prince_of_bel_air.md"&gt;Faker::TvShows::TheFreshPrinceOfBelAir&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="doc/tv_shows/the_it_crowd.md"&gt;Faker::TvShows::TheITCrowd&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="doc/tv_shows/the_thick_of_it.md"&gt;Faker::TvShows::TheThickOfIt&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="doc/tv_shows/twin_peaks.md"&gt;Faker::TvShows::TwinPeaks&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="doc/tv_shows/venture_bros.md"&gt;Faker::TvShows::VentureBros&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-customization" class="anchor" aria-hidden="true" href="#customization"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Customization&lt;/h2&gt;
&lt;p&gt;Since you may want to make addresses and other types of data look different
depending on where in the world you are (US postal codes vs. UK postal codes,
for example), Faker uses the I18n gem to store strings (like state names) and
formats (US postal codes are NNNNN while UK postal codes are AAN NAA),
allowing you to get different formats by switching locales.  Just set
Faker::Config.locale to the locale you want, and Faker will take care of the
rest.&lt;/p&gt;
&lt;p&gt;If your locale doesn't already exist, create it in the &lt;code&gt;lib/locales&lt;/code&gt; directory
and you can then override or add elements to suit your needs. See more about how to
use locales &lt;a href="lib/locales/README.md"&gt;here&lt;/a&gt;&lt;/p&gt;
&lt;div class="highlight highlight-source-yaml"&gt;&lt;pre&gt;&lt;span class="pl-ent"&gt;en-au-ocker&lt;/span&gt;:
  &lt;span class="pl-ent"&gt;faker&lt;/span&gt;:
    &lt;span class="pl-ent"&gt;name&lt;/span&gt;:
      &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; Existing faker field, new data&lt;/span&gt;
      &lt;span class="pl-ent"&gt;first_name&lt;/span&gt;:
        - &lt;span class="pl-s"&gt;Charlotte&lt;/span&gt;
        - &lt;span class="pl-s"&gt;Ava&lt;/span&gt;
        - &lt;span class="pl-s"&gt;Chloe&lt;/span&gt;
        - &lt;span class="pl-s"&gt;Emily&lt;/span&gt;

      &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; New faker fields&lt;/span&gt;
      &lt;span class="pl-ent"&gt;ocker_first_name&lt;/span&gt;:
        - &lt;span class="pl-s"&gt;Bazza&lt;/span&gt;
        - &lt;span class="pl-s"&gt;Bluey&lt;/span&gt;
        - &lt;span class="pl-s"&gt;Davo&lt;/span&gt;
        - &lt;span class="pl-s"&gt;Johno&lt;/span&gt;
        - &lt;span class="pl-s"&gt;Shano&lt;/span&gt;
        - &lt;span class="pl-s"&gt;Shazza&lt;/span&gt;
      &lt;span class="pl-ent"&gt;region&lt;/span&gt;:
        - &lt;span class="pl-s"&gt;South East Queensland&lt;/span&gt;
        - &lt;span class="pl-s"&gt;Wide Bay Burnett&lt;/span&gt;
        - &lt;span class="pl-s"&gt;Margaret River&lt;/span&gt;
        - &lt;span class="pl-s"&gt;Port Pirie&lt;/span&gt;
        - &lt;span class="pl-s"&gt;Gippsland&lt;/span&gt;
        - &lt;span class="pl-s"&gt;Elizabeth&lt;/span&gt;
        - &lt;span class="pl-s"&gt;Barossa&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h2&gt;&lt;a id="user-content-contributing" class="anchor" aria-hidden="true" href="#contributing"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Contributing&lt;/h2&gt;
&lt;p&gt;See &lt;a href="https://github.com/stympy/faker/blob/master/CONTRIBUTING.md"&gt;CONTRIBUTING.md&lt;/a&gt;.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-contact" class="anchor" aria-hidden="true" href="#contact"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Contact&lt;/h2&gt;
&lt;p&gt;Comments and feedback are welcome. Send an email to Benjamin Curtis via the &lt;a href="http://groups.google.com/group/ruby-faker" rel="nofollow"&gt;google group&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;You can also join our &lt;a href="https://discord.gg/RMumTwB" rel="nofollow"&gt;discord channel&lt;/a&gt; to discuss anything regarding improvements or feature requests.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-license" class="anchor" aria-hidden="true" href="#license"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;License&lt;/h2&gt;
&lt;p&gt;This code is free to use under the terms of the MIT license.&lt;/p&gt;
&lt;/article&gt;&lt;/div&gt;</description><author>faker-ruby</author><guid isPermaLink="false">https://github.com/faker-ruby/faker</guid><pubDate>Fri, 01 Nov 2019 00:00:00 GMT</pubDate></item><item><title>jekyll/jekyll #3 in Ruby, This week</title><link>https://github.com/jekyll/jekyll</link><description>&lt;p&gt;&lt;i&gt;:globe_with_meridians: Jekyll is a blog-aware static site generator in Ruby&lt;/i&gt;&lt;/p&gt;&lt;div id="readme" class="instapaper_body markdown" data-path="README.markdown"&gt;&lt;article class="markdown-body entry-content p-5" itemprop="text"&gt;&lt;h1&gt;&lt;a id="user-content-jekyll" class="anchor" aria-hidden="true" href="#jekyll"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;a href="https://jekyllrb.com/" rel="nofollow"&gt;Jekyll&lt;/a&gt;&lt;/h1&gt;
&lt;p&gt;&lt;a href="https://rubygems.org/gems/jekyll" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/8bf10267d033ee5b2abd162cd740072c5be78415/68747470733a2f2f696d672e736869656c64732e696f2f67656d2f762f6a656b796c6c2e737667" alt="Gem Version" data-canonical-src="https://img.shields.io/gem/v/jekyll.svg" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://travis-ci.org/jekyll/jekyll" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/15c2efaea8810d0f16d2825d288ebbbb6e809993/68747470733a2f2f696d672e736869656c64732e696f2f7472617669732f6a656b796c6c2f6a656b796c6c2f6d61737465722e7376673f6c6162656c3d4c696e75782532306275696c64" alt="Linux Build Status" data-canonical-src="https://img.shields.io/travis/jekyll/jekyll/master.svg?label=Linux%20build" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://ci.appveyor.com/project/jekyll/jekyll/branch/master" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/8e6b92391c986ecf340dae28932c63cdc5f0f762/68747470733a2f2f696d672e736869656c64732e696f2f6170707665796f722f63692f6a656b796c6c2f6a656b796c6c2f6d61737465722e7376673f6c6162656c3d57696e646f77732532306275696c64" alt="Windows Build status" data-canonical-src="https://img.shields.io/appveyor/ci/jekyll/jekyll/master.svg?label=Windows%20build" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://codeclimate.com/github/jekyll/jekyll" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/8aae0e1142656d7d048cc1dd32036b95575aca49/68747470733a2f2f6170692e636f6465636c696d6174652e636f6d2f76312f6261646765732f38626130636235623137626239383438653132382f6d61696e7461696e6162696c697479" alt="Maintainability" data-canonical-src="https://api.codeclimate.com/v1/badges/8ba0cb5b17bb9848e128/maintainability" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://codeclimate.com/github/jekyll/jekyll/coverage" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/0dc5d0a8482c434942e7634595a4caf3cd19414a/68747470733a2f2f6170692e636f6465636c696d6174652e636f6d2f76312f6261646765732f38626130636235623137626239383438653132382f746573745f636f766572616765" alt="Test Coverage" data-canonical-src="https://api.codeclimate.com/v1/badges/8ba0cb5b17bb9848e128/test_coverage" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://hakiri.io/github/jekyll/jekyll/master" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/c4e676117e98cb24160b0fe0a16f29785a9bee97/68747470733a2f2f68616b6972692e696f2f6769746875622f6a656b796c6c2f6a656b796c6c2f6d61737465722e737667" alt="Security" data-canonical-src="https://hakiri.io/github/jekyll/jekyll/master.svg" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="#backers"&gt;&lt;img src="https://camo.githubusercontent.com/c9479a3e688d28636c44f77fdc2c24157c91ecfc/68747470733a2f2f6f70656e636f6c6c6563746976652e636f6d2f6a656b796c6c2f6261636b6572732f62616467652e737667" alt="Backers on Open Collective" data-canonical-src="https://opencollective.com/jekyll/backers/badge.svg" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="#sponsors"&gt;&lt;img src="https://camo.githubusercontent.com/12caec5a1d9df5d9922ce4dfb2646d8e394e26ac/68747470733a2f2f6f70656e636f6c6c6563746976652e636f6d2f6a656b796c6c2f73706f6e736f72732f62616467652e737667" alt="Sponsors on Open Collective" data-canonical-src="https://opencollective.com/jekyll/sponsors/badge.svg" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Jekyll is a simple, blog-aware, static site generator perfect for personal, project, or organization sites. Think of it like a file-based CMS, without all the complexity. Jekyll takes your content, renders Markdown and Liquid templates, and spits out a complete, static website ready to be served by Apache, Nginx or another web server. Jekyll is the engine behind &lt;a href="https://pages.github.com"&gt;GitHub Pages&lt;/a&gt;, which you can use to host sites right from your GitHub repositories.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-philosophy" class="anchor" aria-hidden="true" href="#philosophy"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Philosophy&lt;/h2&gt;
&lt;p&gt;Jekyll does what you tell it to do — no more, no less. It doesn't try to outsmart users by making bold assumptions, nor does it burden them with needless complexity and configuration. Put simply, Jekyll gets out of your way and allows you to concentrate on what truly matters: your content.&lt;/p&gt;
&lt;p&gt;See: &lt;a href="https://jekyllrb.com/philosophy" rel="nofollow"&gt;https://jekyllrb.com/philosophy&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-getting-started" class="anchor" aria-hidden="true" href="#getting-started"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Getting Started&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://jekyllrb.com/docs/installation/" rel="nofollow"&gt;Install&lt;/a&gt; the gem&lt;/li&gt;
&lt;li&gt;Read up about its &lt;a href="https://jekyllrb.com/docs/usage/" rel="nofollow"&gt;Usage&lt;/a&gt; and &lt;a href="https://jekyllrb.com/docs/configuration/" rel="nofollow"&gt;Configuration&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Take a gander at some existing &lt;a href="https://github.com/jekyll/jekyll/wiki/sites"&gt;Sites&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/jekyll/jekyll/fork"&gt;Fork&lt;/a&gt; and &lt;a href="https://jekyllrb.com/docs/contributing/" rel="nofollow"&gt;Contribute&lt;/a&gt; your own modifications&lt;/li&gt;
&lt;li&gt;Have questions? Check out our official forum community &lt;a href="https://talk.jekyllrb.com/" rel="nofollow"&gt;Jekyll Talk&lt;/a&gt; or &lt;a href="https://botbot.me/freenode/jekyll/" rel="nofollow"&gt;&lt;code&gt;#jekyll&lt;/code&gt; on irc.freenode.net&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-diving-in" class="anchor" aria-hidden="true" href="#diving-in"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Diving In&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://import.jekyllrb.com/docs/home/" rel="nofollow"&gt;Migrate&lt;/a&gt; from your previous system&lt;/li&gt;
&lt;li&gt;Learn how &lt;a href="https://jekyllrb.com/docs/front-matter/" rel="nofollow"&gt;Front Matter&lt;/a&gt; works&lt;/li&gt;
&lt;li&gt;Put information on your site with &lt;a href="https://jekyllrb.com/docs/variables/" rel="nofollow"&gt;Variables&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Customize the &lt;a href="https://jekyllrb.com/docs/permalinks/" rel="nofollow"&gt;Permalinks&lt;/a&gt; your posts are generated with&lt;/li&gt;
&lt;li&gt;Use the built-in &lt;a href="https://jekyllrb.com/docs/templates/" rel="nofollow"&gt;Liquid Extensions&lt;/a&gt; to make your life easier&lt;/li&gt;
&lt;li&gt;Use custom &lt;a href="https://jekyllrb.com/docs/plugins/" rel="nofollow"&gt;Plugins&lt;/a&gt; to generate content specific to your site&lt;/li&gt;
&lt;li&gt;Watch &lt;a href="https://jekyllrb.com/tutorials/video-walkthroughs/" rel="nofollow"&gt;video tutorials from Giraffe Academy&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-need-help" class="anchor" aria-hidden="true" href="#need-help"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Need help?&lt;/h2&gt;
&lt;p&gt;If you don't find the answer to your problem in our &lt;a href="https://jekyllrb.com/docs/" rel="nofollow"&gt;docs&lt;/a&gt;, or in the &lt;a href="https://jekyllrb.com/docs/troubleshooting/" rel="nofollow"&gt;troubleshooting section&lt;/a&gt;, ask the &lt;a href="https://jekyllrb.com/docs/community/" rel="nofollow"&gt;community&lt;/a&gt; for help.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-code-of-conduct" class="anchor" aria-hidden="true" href="#code-of-conduct"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Code of Conduct&lt;/h2&gt;
&lt;p&gt;In order to have a more open and welcoming community, Jekyll adheres to a
&lt;a href="CODE_OF_CONDUCT.markdown"&gt;code of conduct&lt;/a&gt; adapted from the Ruby on Rails code of
conduct.&lt;/p&gt;
&lt;p&gt;Please adhere to this code of conduct in any interactions you have in the
Jekyll community. It is strictly enforced on all official Jekyll
repositories, websites, and resources. If you encounter someone violating
these terms, please let one of our &lt;a href="https://jekyllrb.com/team/#core-team" rel="nofollow"&gt;core team members&lt;/a&gt; know and we will address it as soon as possible.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-credits" class="anchor" aria-hidden="true" href="#credits"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Credits&lt;/h2&gt;
&lt;h3&gt;&lt;a id="user-content-sponsors" class="anchor" aria-hidden="true" href="#sponsors"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Sponsors&lt;/h3&gt;
&lt;p&gt;Support this project by becoming a sponsor. Your logo will show up in this README with a link to your website. &lt;a href="https://opencollective.com/jekyll#sponsor" rel="nofollow"&gt;Become a sponsor!&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href="https://opencollective.com/jekyll/sponsor/0/website" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/38e7b5f1e146984d6d7f571fc41b56d51ed5b401/68747470733a2f2f6f70656e636f6c6c6563746976652e636f6d2f6a656b796c6c2f73706f6e736f722f302f6176617461722e737667" data-canonical-src="https://opencollective.com/jekyll/sponsor/0/avatar.svg" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://opencollective.com/jekyll/sponsor/1/website" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/e55716e47575f7814b7a922752a2c4cf3d2f0a60/68747470733a2f2f6f70656e636f6c6c6563746976652e636f6d2f6a656b796c6c2f73706f6e736f722f312f6176617461722e737667" data-canonical-src="https://opencollective.com/jekyll/sponsor/1/avatar.svg" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://opencollective.com/jekyll/sponsor/2/website" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/3ea68b9ab268979c3d4b1cfe7bf648344c490429/68747470733a2f2f6f70656e636f6c6c6563746976652e636f6d2f6a656b796c6c2f73706f6e736f722f322f6176617461722e737667" data-canonical-src="https://opencollective.com/jekyll/sponsor/2/avatar.svg" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://opencollective.com/jekyll/sponsor/3/website" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/d7cb65db9d91afff1b95ba2f91d992243ff4b2fc/68747470733a2f2f6f70656e636f6c6c6563746976652e636f6d2f6a656b796c6c2f73706f6e736f722f332f6176617461722e737667" data-canonical-src="https://opencollective.com/jekyll/sponsor/3/avatar.svg" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://opencollective.com/jekyll/sponsor/4/website" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/3cb59969b877c6e6fb62fc7b16d47950eb33320a/68747470733a2f2f6f70656e636f6c6c6563746976652e636f6d2f6a656b796c6c2f73706f6e736f722f342f6176617461722e737667" data-canonical-src="https://opencollective.com/jekyll/sponsor/4/avatar.svg" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://opencollective.com/jekyll/sponsor/5/website" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/b646a8224c86cdf32e7a7bb407f7bea996aad696/68747470733a2f2f6f70656e636f6c6c6563746976652e636f6d2f6a656b796c6c2f73706f6e736f722f352f6176617461722e737667" data-canonical-src="https://opencollective.com/jekyll/sponsor/5/avatar.svg" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://opencollective.com/jekyll/sponsor/6/website" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/a0723560152a0aa902fd13e2bece41ac47261233/68747470733a2f2f6f70656e636f6c6c6563746976652e636f6d2f6a656b796c6c2f73706f6e736f722f362f6176617461722e737667" data-canonical-src="https://opencollective.com/jekyll/sponsor/6/avatar.svg" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://opencollective.com/jekyll/sponsor/7/website" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/910d7a0a2e4b8ffb8237cd470f22170a0a18b4d9/68747470733a2f2f6f70656e636f6c6c6563746976652e636f6d2f6a656b796c6c2f73706f6e736f722f372f6176617461722e737667" data-canonical-src="https://opencollective.com/jekyll/sponsor/7/avatar.svg" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://opencollective.com/jekyll/sponsor/8/website" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/8831888f490083dbecdc5392a4402f425dd42f6a/68747470733a2f2f6f70656e636f6c6c6563746976652e636f6d2f6a656b796c6c2f73706f6e736f722f382f6176617461722e737667" data-canonical-src="https://opencollective.com/jekyll/sponsor/8/avatar.svg" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://opencollective.com/jekyll/sponsor/9/website" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/ae21e4445927eaa90ad5b84b995386ca56834c05/68747470733a2f2f6f70656e636f6c6c6563746976652e636f6d2f6a656b796c6c2f73706f6e736f722f392f6176617461722e737667" data-canonical-src="https://opencollective.com/jekyll/sponsor/9/avatar.svg" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-contributors" class="anchor" aria-hidden="true" href="#contributors"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Contributors&lt;/h3&gt;
&lt;p&gt;This project exists thanks to all the people who contribute.
&lt;a href="../../graphs/contributors"&gt;&lt;img src="https://camo.githubusercontent.com/3c4eaa7b01a6daebca75857f79411705269f039b/68747470733a2f2f6f70656e636f6c6c6563746976652e636f6d2f6a656b796c6c2f636f6e7472696275746f72732e7376673f77696474683d38393026627574746f6e3d66616c7365" data-canonical-src="https://opencollective.com/jekyll/contributors.svg?width=890&amp;amp;button=false" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-backers" class="anchor" aria-hidden="true" href="#backers"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Backers&lt;/h3&gt;
&lt;p&gt;Thank you to all our backers! &lt;g-emoji class="g-emoji" alias="pray" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f64f.png"&gt;🙏&lt;/g-emoji&gt; &lt;a href="https://opencollective.com/jekyll#backer" rel="nofollow"&gt;Become a backer&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href="https://opencollective.com/jekyll#backers" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/54a2451b4e16efc0fcb95322c4805d70b907c255/68747470733a2f2f6f70656e636f6c6c6563746976652e636f6d2f6a656b796c6c2f6261636b6572732e7376673f77696474683d383930" data-canonical-src="https://opencollective.com/jekyll/backers.svg?width=890" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-license" class="anchor" aria-hidden="true" href="#license"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;License&lt;/h2&gt;
&lt;p&gt;See the &lt;a href="https://github.com/jekyll/jekyll/blob/master/LICENSE"&gt;LICENSE&lt;/a&gt; file.&lt;/p&gt;
&lt;/article&gt;&lt;/div&gt;</description><author>jekyll</author><guid isPermaLink="false">https://github.com/jekyll/jekyll</guid><pubDate>Fri, 01 Nov 2019 00:00:00 GMT</pubDate></item><item><title>rapid7/metasploit-framework #4 in Ruby, This week</title><link>https://github.com/rapid7/metasploit-framework</link><description>&lt;p&gt;&lt;i&gt;Metasploit Framework&lt;/i&gt;&lt;/p&gt;&lt;div id="readme" class="instapaper_body md" data-path="README.md"&gt;&lt;article class="markdown-body entry-content p-5" itemprop="text"&gt;&lt;h1&gt;&lt;a id="user-content-metasploit----" class="anchor" aria-hidden="true" href="#metasploit----"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Metasploit &lt;a href="https://travis-ci.org/rapid7/metasploit-framework" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/832a536d187254b78994fbee3bc3e85aae8c6bfe/68747470733a2f2f7472617669732d63692e6f72672f7261706964372f6d65746173706c6f69742d6672616d65776f726b2e7376673f6272616e63683d6d6173746572" alt="Build Status" data-canonical-src="https://travis-ci.org/rapid7/metasploit-framework.svg?branch=master" style="max-width:100%;"&gt;&lt;/a&gt; &lt;a href="https://codeclimate.com/github/rapid7/metasploit-framework/maintainability" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/5dc1b842a86eb63da3bef34e7f0e3efbb5e8c675/68747470733a2f2f6170692e636f6465636c696d6174652e636f6d2f76312f6261646765732f39343365333938653631396330393536386633662f6d61696e7461696e6162696c697479" alt="Maintainability" data-canonical-src="https://api.codeclimate.com/v1/badges/943e398e619c09568f3f/maintainability" style="max-width:100%;"&gt;&lt;/a&gt; &lt;a href="https://codeclimate.com/github/rapid7/metasploit-framework/test_coverage" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/a0159f55cb452e8e7f76177b3203a041bc38831e/68747470733a2f2f6170692e636f6465636c696d6174652e636f6d2f76312f6261646765732f39343365333938653631396330393536386633662f746573745f636f766572616765" alt="Test Coverage" data-canonical-src="https://api.codeclimate.com/v1/badges/943e398e619c09568f3f/test_coverage" style="max-width:100%;"&gt;&lt;/a&gt; &lt;a href="https://hub.docker.com/r/metasploitframework/metasploit-framework/" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/4ad55dfa30ef6635102769d7fd5837f6bb34938b/68747470733a2f2f696d672e736869656c64732e696f2f646f636b65722f70756c6c732f6d65746173706c6f69746672616d65776f726b2f6d65746173706c6f69742d6672616d65776f726b2e737667" alt="Docker Pulls" data-canonical-src="https://img.shields.io/docker/pulls/metasploitframework/metasploit-framework.svg" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/h1&gt;
&lt;p&gt;The Metasploit Framework is released under a BSD-style license. See
&lt;a href="COPYING"&gt;COPYING&lt;/a&gt; for more details.&lt;/p&gt;
&lt;p&gt;The latest version of this software is available from: &lt;a href="https://metasploit.com" rel="nofollow"&gt;https://metasploit.com&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Bug tracking and development information can be found at:
&lt;a href="https://github.com/rapid7/metasploit-framework"&gt;https://github.com/rapid7/metasploit-framework&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;New bugs and feature requests should be directed to:
&lt;a href="https://r-7.co/MSF-BUGv1" rel="nofollow"&gt;https://r-7.co/MSF-BUGv1&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;API documentation for writing modules can be found at:
&lt;a href="https://rapid7.github.io/metasploit-framework/api" rel="nofollow"&gt;https://rapid7.github.io/metasploit-framework/api&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Questions and suggestions can be sent to: Freenode IRC channel or e-mail the metasploit-hackers mailing list&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-installing" class="anchor" aria-hidden="true" href="#installing"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Installing&lt;/h2&gt;
&lt;p&gt;Generally, you should use &lt;a href="https://github.com/rapid7/metasploit-framework/wiki/Nightly-Installers"&gt;the free installer&lt;/a&gt;,
which contains all of the dependencies and will get you up and running with a
few clicks. See the &lt;a href="https://r-7.co/MSF-DEV" rel="nofollow"&gt;Dev Environment Setup&lt;/a&gt; if
you'd like to deal with dependencies on your own.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-using-metasploit" class="anchor" aria-hidden="true" href="#using-metasploit"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Using Metasploit&lt;/h2&gt;
&lt;p&gt;Metasploit can do all sorts of things. The first thing you'll want to do
is start &lt;code&gt;msfconsole&lt;/code&gt;, but after that, you'll probably be best served by
reading &lt;a href="https://www.offensive-security.com/metasploit-unleashed/" title="Metasploit Unleashed" rel="nofollow"&gt;Metasploit Unleashed&lt;/a&gt;, the &lt;a href="https://metasploit.github.io" rel="nofollow"&gt;great community
resources&lt;/a&gt;, or the &lt;a href="https://github.com/rapid7/metasploit-framework/wiki"&gt;wiki&lt;/a&gt;.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-contributing" class="anchor" aria-hidden="true" href="#contributing"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Contributing&lt;/h2&gt;
&lt;p&gt;See the &lt;a href="https://github.com/rapid7/metasploit-framework/wiki/Setting-Up-a-Metasploit-Development-Environment" title="Metasploit Development Environment Setup"&gt;Dev Environment Setup&lt;/a&gt; guide on GitHub, which will
walk you through the whole process from installing all the
dependencies, to cloning the repository, and finally to submitting a
pull request. For slightly more information, see
&lt;a href="https://github.com/rapid7/metasploit-framework/blob/master/CONTRIBUTING.md"&gt;Contributing&lt;/a&gt;.&lt;/p&gt;
&lt;/article&gt;&lt;/div&gt;</description><author>rapid7</author><guid isPermaLink="false">https://github.com/rapid7/metasploit-framework</guid><pubDate>Fri, 01 Nov 2019 00:00:00 GMT</pubDate></item><item><title>teamcapybara/capybara #5 in Ruby, This week</title><link>https://github.com/teamcapybara/capybara</link><description>&lt;p&gt;&lt;i&gt;Acceptance test framework for web applications&lt;/i&gt;&lt;/p&gt;&lt;div id="readme" class="instapaper_body md" data-path="README.md"&gt;&lt;article class="markdown-body entry-content p-5" itemprop="text"&gt;&lt;h1&gt;&lt;a id="user-content-capybara" class="anchor" aria-hidden="true" href="#capybara"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Capybara&lt;/h1&gt;
&lt;p&gt;&lt;a href="https://travis-ci.org/teamcapybara/capybara" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/d2a69513271c0ce3ff12368f5ea3fa02d453b835/68747470733a2f2f7365637572652e7472617669732d63692e6f72672f7465616d63617079626172612f63617079626172612e737667" alt="Build Status" data-canonical-src="https://secure.travis-ci.org/teamcapybara/capybara.svg" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://ci.appveyor.com/api/projects/github/teamcapybara/capybara" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/55bec4366108bda0dc064e4221ca51517c6dda8a/68747470733a2f2f63692e6170707665796f722e636f6d2f6170692f70726f6a656374732f7374617475732f6769746875622f7465616d63617079626172612f63617079626172613f7376673d74727565" alt="Build Status" data-canonical-src="https://ci.appveyor.com/api/projects/status/github/teamcapybara/capybara?svg=true" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://codeclimate.com/github/teamcapybara/capybara" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/4565053fa187f1cd5538143f10510f2aa65c022f/68747470733a2f2f636f6465636c696d6174652e636f6d2f6769746875622f7465616d63617079626172612f63617079626172612e737667" alt="Code Climate" data-canonical-src="https://codeclimate.com/github/teamcapybara/capybara.svg" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://coveralls.io/github/teamcapybara/capybara?branch=master" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/75d06199be36613d7cff98d0603af44001f3edcb/68747470733a2f2f636f766572616c6c732e696f2f7265706f732f6769746875622f7465616d63617079626172612f63617079626172612f62616467652e7376673f6272616e63683d6d6173746572" alt="Coverage Status" data-canonical-src="https://coveralls.io/repos/github/teamcapybara/capybara/badge.svg?branch=master" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://gitter.im/jnicklas/capybara?utm_source=badge&amp;amp;utm_medium=badge&amp;amp;utm_campaign=pr-badge&amp;amp;utm_content=badge" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/da2edb525cde1455a622c58c0effc3a90b9a181c/68747470733a2f2f6261646765732e6769747465722e696d2f4a6f696e253230436861742e737667" alt="Gitter" data-canonical-src="https://badges.gitter.im/Join%20Chat.svg" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://dependabot.com/compatibility-score.html?dependency-name=capybara&amp;amp;package-manager=bundler&amp;amp;version-scheme=semver" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/dc40679b2a957efdf6f1f5742157bb1831625246/68747470733a2f2f6170692e646570656e6461626f742e636f6d2f6261646765732f636f6d7061746962696c6974795f73636f72653f646570656e64656e63792d6e616d653d6361707962617261267061636b6167652d6d616e616765723d62756e646c65722676657273696f6e2d736368656d653d73656d766572" alt="SemVer" data-canonical-src="https://api.dependabot.com/badges/compatibility_score?dependency-name=capybara&amp;amp;package-manager=bundler&amp;amp;version-scheme=semver" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Note&lt;/strong&gt; You are viewing the README for the development version of Capybara. If you are using the current release version
you can find the README at &lt;a href="https://github.com/teamcapybara/capybara/blob/3.29_stable/README.md"&gt;https://github.com/teamcapybara/capybara/blob/3.29_stable/README.md&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Capybara helps you test web applications by simulating how a real user would
interact with your app. It is agnostic about the driver running your tests and
comes with Rack::Test and Selenium support built in. WebKit is supported
through an external gem.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-support-capybara" class="anchor" aria-hidden="true" href="#support-capybara"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Support Capybara&lt;/h2&gt;
&lt;p&gt;If you and/or your company find value in Capybara and would like to contribute financially to its ongoing maintenance and development, please visit
&lt;a href="https://www.patreon.com/capybara" rel="nofollow"&gt;Patreon&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Need help?&lt;/strong&gt; Ask on the mailing list (please do not open an issue on
GitHub): &lt;a href="http://groups.google.com/group/ruby-capybara" rel="nofollow"&gt;http://groups.google.com/group/ruby-capybara&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-table-of-contents" class="anchor" aria-hidden="true" href="#table-of-contents"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Table of contents&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="#key-benefits"&gt;Key benefits&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#setup"&gt;Setup&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#using-capybara-with-cucumber"&gt;Using Capybara with Cucumber&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#using-capybara-with-rspec"&gt;Using Capybara with RSpec&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#using-capybara-with-testunit"&gt;Using Capybara with Test::Unit&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#using-capybara-with-minitest"&gt;Using Capybara with Minitest&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#using-capybara-with-minitestspec"&gt;Using Capybara with Minitest::Spec&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#drivers"&gt;Drivers&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="#selecting-the-driver"&gt;Selecting the Driver&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#racktest"&gt;RackTest&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#selenium"&gt;Selenium&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#apparition"&gt;Apparition&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="#the-dsl"&gt;The DSL&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="#navigating"&gt;Navigating&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#clicking-links-and-buttons"&gt;Clicking links and buttons&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#interacting-with-forms"&gt;Interacting with forms&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#querying"&gt;Querying&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#finding"&gt;Finding&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#scoping"&gt;Scoping&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#working-with-windows"&gt;Working with windows&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#scripting"&gt;Scripting&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#modals"&gt;Modals&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#debugging"&gt;Debugging&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="#matching"&gt;Matching&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="#exactness"&gt;Exactness&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#strategy"&gt;Strategy&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="#transactions-and-database-setup"&gt;Transactions and database setup&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#asynchronous-javascript-ajax-and-friends"&gt;Asynchronous JavaScript (Ajax and friends)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#using-the-dsl-elsewhere"&gt;Using the DSL elsewhere&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#calling-remote-servers"&gt;Calling remote servers&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#using-sessions"&gt;Using sessions&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="#named-sessions"&gt;Named sessions&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#using-sessions-manually"&gt;Using sessions manually&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="#xpath-css-and-selectors"&gt;XPath, CSS and selectors&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#beware-the-xpath--trap"&gt;Beware the XPath // trap&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#configuring-and-adding-drivers"&gt;Configuring and adding drivers&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#gotchas"&gt;Gotchas:&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#threadsafe-mode"&gt;"Threadsafe" mode&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#development"&gt;Development&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-key-benefits" class="anchor" aria-hidden="true" href="#key-benefits"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;a name="user-content-key-benefits"&gt;&lt;/a&gt;Key benefits&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;No setup&lt;/strong&gt; necessary for Rails and Rack application. Works out of the box.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Intuitive API&lt;/strong&gt; which mimics the language an actual user would use.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Switch the backend&lt;/strong&gt; your tests run against from fast headless mode
to an actual browser with no changes to your tests.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Powerful synchronization&lt;/strong&gt; features mean you never have to manually wait
for asynchronous processes to complete.&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-setup" class="anchor" aria-hidden="true" href="#setup"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;a name="user-content-setup"&gt;&lt;/a&gt;Setup&lt;/h2&gt;
&lt;p&gt;Capybara requires Ruby 2.4.0 or later. To install, add this line to your
&lt;code&gt;Gemfile&lt;/code&gt; and run &lt;code&gt;bundle install&lt;/code&gt;:&lt;/p&gt;
&lt;div class="highlight highlight-source-ruby"&gt;&lt;pre&gt;gem &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;capybara&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;If the application that you are testing is a Rails app, add this line to your test helper file:&lt;/p&gt;
&lt;div class="highlight highlight-source-ruby"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;require&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;capybara/rails&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;If the application that you are testing is a Rack app, but not Rails, set Capybara.app to your Rack app:&lt;/p&gt;
&lt;div class="highlight highlight-source-ruby"&gt;&lt;pre&gt;&lt;span class="pl-c1"&gt;Capybara&lt;/span&gt;.app &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;MyRackApp&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;If you need to test JavaScript, or if your app interacts with (or is located at)
a remote URL, you'll need to &lt;a href="#drivers"&gt;use a different driver&lt;/a&gt;.  If using Rails 5.0+, but not using the Rails system tests from 5.1, you'll probably also
want to swap the "server" used to launch your app to Puma in order to match Rails defaults.&lt;/p&gt;
&lt;div class="highlight highlight-source-ruby"&gt;&lt;pre&gt;&lt;span class="pl-c1"&gt;Capybara&lt;/span&gt;.server &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;:puma&lt;/span&gt; &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; Until your setup is working&lt;/span&gt;
&lt;span class="pl-c1"&gt;Capybara&lt;/span&gt;.server &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;:puma&lt;/span&gt;, { &lt;span class="pl-c1"&gt;Silent:&lt;/span&gt; &lt;span class="pl-c1"&gt;true&lt;/span&gt; } &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; To clean up your test output&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h2&gt;&lt;a id="user-content-using-capybara-with-cucumber" class="anchor" aria-hidden="true" href="#using-capybara-with-cucumber"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;a name="user-content-using-capybara-with-cucumber"&gt;&lt;/a&gt;Using Capybara with Cucumber&lt;/h2&gt;
&lt;p&gt;The &lt;code&gt;cucumber-rails&lt;/code&gt; gem comes with Capybara support built-in. If you
are not using Rails, manually load the &lt;code&gt;capybara/cucumber&lt;/code&gt; module:&lt;/p&gt;
&lt;div class="highlight highlight-source-ruby"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;require&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;capybara/cucumber&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;
&lt;span class="pl-c1"&gt;Capybara&lt;/span&gt;.app &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;MyRackApp&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;You can use the Capybara DSL in your steps, like so:&lt;/p&gt;
&lt;div class="highlight highlight-source-ruby"&gt;&lt;pre&gt;&lt;span class="pl-c1"&gt;When&lt;/span&gt; &lt;span class="pl-sr"&gt;/I sign in/&lt;/span&gt; &lt;span class="pl-k"&gt;do&lt;/span&gt;
  within(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;#session&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;) &lt;span class="pl-k"&gt;do&lt;/span&gt;
    fill_in &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;Email&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-c1"&gt;with:&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;user@example.com&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;
    fill_in &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;Password&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-c1"&gt;with:&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;password&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;
  &lt;span class="pl-k"&gt;end&lt;/span&gt;
  click_button &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;Sign in&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;
&lt;span class="pl-k"&gt;end&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;You can switch to the &lt;code&gt;Capybara.javascript_driver&lt;/code&gt; (&lt;code&gt;:selenium&lt;/code&gt;
by default) by tagging scenarios (or features) with &lt;code&gt;@javascript&lt;/code&gt;:&lt;/p&gt;
&lt;div class="highlight highlight-source-ruby"&gt;&lt;pre&gt;&lt;span class="pl-smi"&gt;@javascript&lt;/span&gt;
&lt;span class="pl-c1"&gt;Scenario:&lt;/span&gt; &lt;span class="pl-k"&gt;do&lt;/span&gt; something &lt;span class="pl-c1"&gt;Ajaxy&lt;/span&gt;
  &lt;span class="pl-c1"&gt;When&lt;/span&gt; &lt;span class="pl-c1"&gt;I&lt;/span&gt; click the &lt;span class="pl-c1"&gt;Ajax&lt;/span&gt; link
  ...&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;There are also explicit tags for each registered driver set up for you (&lt;code&gt;@selenium&lt;/code&gt;, &lt;code&gt;@rack_test&lt;/code&gt;, etc).&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-using-capybara-with-rspec" class="anchor" aria-hidden="true" href="#using-capybara-with-rspec"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;a name="user-content-using-capybara-with-rspec"&gt;&lt;/a&gt;Using Capybara with RSpec&lt;/h2&gt;
&lt;p&gt;Load RSpec 3.5+ support by adding the following line (typically to your
&lt;code&gt;spec_helper.rb&lt;/code&gt; file):&lt;/p&gt;
&lt;div class="highlight highlight-source-ruby"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;require&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;capybara/rspec&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;If you are using Rails, put your Capybara specs in &lt;code&gt;spec/features&lt;/code&gt; or &lt;code&gt;spec/system&lt;/code&gt; (only works
if &lt;a href="https://www.relishapp.com/rspec/rspec-rails/docs/upgrade#file-type-inference-disabled" rel="nofollow"&gt;you have it configured in
RSpec&lt;/a&gt;)
and if you have your Capybara specs in a different directory, then tag the
example groups with &lt;code&gt;type: :feature&lt;/code&gt; or &lt;code&gt;type: :system&lt;/code&gt; depending on which type of test you're writing.&lt;/p&gt;
&lt;p&gt;If you are not using Rails, tag all the example groups in which you want to use
Capybara with &lt;code&gt;type: :feature&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;You can now write your specs like so:&lt;/p&gt;
&lt;div class="highlight highlight-source-ruby"&gt;&lt;pre&gt;describe &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;the signin process&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-c1"&gt;type:&lt;/span&gt; &lt;span class="pl-c1"&gt;:feature&lt;/span&gt; &lt;span class="pl-k"&gt;do&lt;/span&gt;
  before &lt;span class="pl-c1"&gt;:each&lt;/span&gt; &lt;span class="pl-k"&gt;do&lt;/span&gt;
    &lt;span class="pl-c1"&gt;User&lt;/span&gt;.make(&lt;span class="pl-c1"&gt;email:&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;user@example.com&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-c1"&gt;password:&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;password&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;)
  &lt;span class="pl-k"&gt;end&lt;/span&gt;

  it &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;signs me in&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; &lt;span class="pl-k"&gt;do&lt;/span&gt;
    visit &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;/sessions/new&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;
    within(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;#session&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;) &lt;span class="pl-k"&gt;do&lt;/span&gt;
      fill_in &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;Email&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-c1"&gt;with:&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;user@example.com&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;
      fill_in &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;Password&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-c1"&gt;with:&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;password&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;
    &lt;span class="pl-k"&gt;end&lt;/span&gt;
    click_button &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;Sign in&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;
    expect(page).to have_content &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;Success&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;
  &lt;span class="pl-k"&gt;end&lt;/span&gt;
&lt;span class="pl-k"&gt;end&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Use &lt;code&gt;js: true&lt;/code&gt; to switch to the &lt;code&gt;Capybara.javascript_driver&lt;/code&gt;
(&lt;code&gt;:selenium&lt;/code&gt; by default), or provide a &lt;code&gt;:driver&lt;/code&gt; option to switch
to one specific driver. For example:&lt;/p&gt;
&lt;div class="highlight highlight-source-ruby"&gt;&lt;pre&gt;describe &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;some stuff which requires js&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-c1"&gt;js:&lt;/span&gt; &lt;span class="pl-c1"&gt;true&lt;/span&gt; &lt;span class="pl-k"&gt;do&lt;/span&gt;
  it &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;will use the default js driver&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;
  it &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;will switch to one specific driver&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-c1"&gt;driver:&lt;/span&gt; &lt;span class="pl-c1"&gt;:apparition&lt;/span&gt;
&lt;span class="pl-k"&gt;end&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Capybara also comes with a built in DSL for creating descriptive acceptance tests:&lt;/p&gt;
&lt;div class="highlight highlight-source-ruby"&gt;&lt;pre&gt;feature &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;Signing in&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; &lt;span class="pl-k"&gt;do&lt;/span&gt;
  background &lt;span class="pl-k"&gt;do&lt;/span&gt;
    &lt;span class="pl-c1"&gt;User&lt;/span&gt;.make(&lt;span class="pl-c1"&gt;email:&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;user@example.com&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-c1"&gt;password:&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;caplin&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;)
  &lt;span class="pl-k"&gt;end&lt;/span&gt;

  scenario &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;Signing in with correct credentials&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; &lt;span class="pl-k"&gt;do&lt;/span&gt;
    visit &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;/sessions/new&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;
    within(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;#session&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;) &lt;span class="pl-k"&gt;do&lt;/span&gt;
      fill_in &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;Email&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-c1"&gt;with:&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;user@example.com&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;
      fill_in &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;Password&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-c1"&gt;with:&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;caplin&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;
    &lt;span class="pl-k"&gt;end&lt;/span&gt;
    click_button &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;Sign in&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;
    expect(page).to have_content &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;Success&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;
  &lt;span class="pl-k"&gt;end&lt;/span&gt;

  given(&lt;span class="pl-c1"&gt;:other_user&lt;/span&gt;) { &lt;span class="pl-c1"&gt;User&lt;/span&gt;.make(&lt;span class="pl-c1"&gt;email:&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;other@example.com&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-c1"&gt;password:&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;rous&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;) }

  scenario &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;Signing in as another user&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; &lt;span class="pl-k"&gt;do&lt;/span&gt;
    visit &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;/sessions/new&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;
    within(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;#session&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;) &lt;span class="pl-k"&gt;do&lt;/span&gt;
      fill_in &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;Email&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-c1"&gt;with:&lt;/span&gt; other_user.email
      fill_in &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;Password&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-c1"&gt;with:&lt;/span&gt; other_user.password
    &lt;span class="pl-k"&gt;end&lt;/span&gt;
    click_button &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;Sign in&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;
    expect(page).to have_content &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;Invalid email or password&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;
  &lt;span class="pl-k"&gt;end&lt;/span&gt;
&lt;span class="pl-k"&gt;end&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;code&gt;feature&lt;/code&gt; is in fact just an alias for &lt;code&gt;describe ..., type: :feature&lt;/code&gt;,
&lt;code&gt;background&lt;/code&gt; is an alias for &lt;code&gt;before&lt;/code&gt;, &lt;code&gt;scenario&lt;/code&gt; for &lt;code&gt;it&lt;/code&gt;, and
&lt;code&gt;given&lt;/code&gt;/&lt;code&gt;given!&lt;/code&gt; aliases for &lt;code&gt;let&lt;/code&gt;/&lt;code&gt;let!&lt;/code&gt;, respectively.&lt;/p&gt;
&lt;p&gt;Finally, Capybara matchers are also supported in view specs:&lt;/p&gt;
&lt;div class="highlight highlight-source-ruby"&gt;&lt;pre&gt;&lt;span class="pl-c1"&gt;RSpec&lt;/span&gt;.describe &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;todos/show.html.erb&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-c1"&gt;type:&lt;/span&gt; &lt;span class="pl-c1"&gt;:view&lt;/span&gt; &lt;span class="pl-k"&gt;do&lt;/span&gt;
  it &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;displays the todo title&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; &lt;span class="pl-k"&gt;do&lt;/span&gt;
    assign &lt;span class="pl-c1"&gt;:todo&lt;/span&gt;, &lt;span class="pl-c1"&gt;Todo&lt;/span&gt;.&lt;span class="pl-k"&gt;new&lt;/span&gt;(&lt;span class="pl-c1"&gt;title:&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;Buy milk&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)

    render

    expect(rendered).to have_css(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;header h1&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-c1"&gt;text:&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;Buy milk&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
  &lt;span class="pl-k"&gt;end&lt;/span&gt;
&lt;span class="pl-k"&gt;end&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;strong&gt;Note: When you require 'capybara/rspec' proxy methods are installed to work around name collisions between Capybara::DSL methods
&lt;code&gt;all&lt;/code&gt;/&lt;code&gt;within&lt;/code&gt; and the identically named built-in RSpec matchers. If you opt not to require 'capybara/rspec' you can install the proxy methods by requiring 'capybara/rspec/matcher_proxies' after requiring RSpec and 'capybara/dsl'&lt;/strong&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-using-capybara-with-testunit" class="anchor" aria-hidden="true" href="#using-capybara-with-testunit"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;a name="user-content-using-capybara-with-testunit"&gt;&lt;/a&gt;Using Capybara with Test::Unit&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;If you are using &lt;code&gt;Test::Unit&lt;/code&gt;, define a base class for your Capybara tests
like so:&lt;/p&gt;
&lt;div class="highlight highlight-source-ruby"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;require&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;capybara/dsl&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;

&lt;span class="pl-k"&gt;class&lt;/span&gt; &lt;span class="pl-en"&gt;CapybaraTestCase&lt;span class="pl-e"&gt; &amp;lt; Test::Unit::TestCase&lt;/span&gt;&lt;/span&gt;
  &lt;span class="pl-k"&gt;include&lt;/span&gt; &lt;span class="pl-c1"&gt;Capybara&lt;/span&gt;::&lt;span class="pl-c1"&gt;DSL&lt;/span&gt;

  &lt;span class="pl-k"&gt;def&lt;/span&gt; &lt;span class="pl-en"&gt;teardown&lt;/span&gt;
    &lt;span class="pl-c1"&gt;Capybara&lt;/span&gt;.reset_sessions!
    &lt;span class="pl-c1"&gt;Capybara&lt;/span&gt;.use_default_driver
  &lt;span class="pl-k"&gt;end&lt;/span&gt;
&lt;span class="pl-k"&gt;end&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-using-capybara-with-minitest" class="anchor" aria-hidden="true" href="#using-capybara-with-minitest"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;a name="user-content-using-capybara-with-minitest"&gt;&lt;/a&gt;Using Capybara with Minitest&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;If you are using Rails, but not using Rails system tests, add the following code in your &lt;code&gt;test_helper.rb&lt;/code&gt;
file to make Capybara available in all test cases deriving from
&lt;code&gt;ActionDispatch::IntegrationTest&lt;/code&gt;:&lt;/p&gt;
&lt;div class="highlight highlight-source-ruby"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;require&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;capybara/rails&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;
&lt;span class="pl-k"&gt;require&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;capybara/minitest&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;

&lt;span class="pl-k"&gt;class&lt;/span&gt; &lt;span class="pl-en"&gt;ActionDispatch::IntegrationTest&lt;/span&gt;
  &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; Make the Capybara DSL available in all integration tests&lt;/span&gt;
  &lt;span class="pl-k"&gt;include&lt;/span&gt; &lt;span class="pl-c1"&gt;Capybara&lt;/span&gt;::&lt;span class="pl-c1"&gt;DSL&lt;/span&gt;
  &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; Make `assert_*` methods behave like Minitest assertions&lt;/span&gt;
  &lt;span class="pl-k"&gt;include&lt;/span&gt; &lt;span class="pl-c1"&gt;Capybara&lt;/span&gt;::&lt;span class="pl-c1"&gt;Minitest&lt;/span&gt;::&lt;span class="pl-c1"&gt;Assertions&lt;/span&gt;

  &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; Reset sessions and driver between tests&lt;/span&gt;
  teardown &lt;span class="pl-k"&gt;do&lt;/span&gt;
    &lt;span class="pl-c1"&gt;Capybara&lt;/span&gt;.reset_sessions!
    &lt;span class="pl-c1"&gt;Capybara&lt;/span&gt;.use_default_driver
  &lt;span class="pl-k"&gt;end&lt;/span&gt;
&lt;span class="pl-k"&gt;end&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;If you are not using Rails, define a base class for your Capybara tests like
so:&lt;/p&gt;
&lt;div class="highlight highlight-source-ruby"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;require&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;capybara/minitest&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;

&lt;span class="pl-k"&gt;class&lt;/span&gt; &lt;span class="pl-en"&gt;CapybaraTestCase&lt;span class="pl-e"&gt; &amp;lt; Minitest::Test&lt;/span&gt;&lt;/span&gt;
  &lt;span class="pl-k"&gt;include&lt;/span&gt; &lt;span class="pl-c1"&gt;Capybara&lt;/span&gt;::&lt;span class="pl-c1"&gt;DSL&lt;/span&gt;
  &lt;span class="pl-k"&gt;include&lt;/span&gt; &lt;span class="pl-c1"&gt;Capybara&lt;/span&gt;::&lt;span class="pl-c1"&gt;Minitest&lt;/span&gt;::&lt;span class="pl-c1"&gt;Assertions&lt;/span&gt;

  &lt;span class="pl-k"&gt;def&lt;/span&gt; &lt;span class="pl-en"&gt;teardown&lt;/span&gt;
    &lt;span class="pl-c1"&gt;Capybara&lt;/span&gt;.reset_sessions!
    &lt;span class="pl-c1"&gt;Capybara&lt;/span&gt;.use_default_driver
  &lt;span class="pl-k"&gt;end&lt;/span&gt;
&lt;span class="pl-k"&gt;end&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Remember to call &lt;code&gt;super&lt;/code&gt; in any subclasses that override
&lt;code&gt;teardown&lt;/code&gt;.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;To switch the driver, set &lt;code&gt;Capybara.current_driver&lt;/code&gt;. For instance,&lt;/p&gt;
&lt;div class="highlight highlight-source-ruby"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;class&lt;/span&gt; &lt;span class="pl-en"&gt;BlogTest&lt;span class="pl-e"&gt; &amp;lt; ActionDispatch::IntegrationTest&lt;/span&gt;&lt;/span&gt;
  setup &lt;span class="pl-k"&gt;do&lt;/span&gt;
    &lt;span class="pl-c1"&gt;Capybara&lt;/span&gt;.current_driver &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;Capybara&lt;/span&gt;.javascript_driver &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; :selenium by default&lt;/span&gt;
  &lt;span class="pl-k"&gt;end&lt;/span&gt;

  &lt;span class="pl-c1"&gt;test&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;shows blog posts&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt; &lt;span class="pl-k"&gt;do&lt;/span&gt;
    &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; ... this test is run with Selenium ...&lt;/span&gt;
  &lt;span class="pl-k"&gt;end&lt;/span&gt;
&lt;span class="pl-k"&gt;end&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h2&gt;&lt;a id="user-content-using-capybara-with-minitestspec" class="anchor" aria-hidden="true" href="#using-capybara-with-minitestspec"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;a name="user-content-using-capybara-with-minitestspec"&gt;&lt;/a&gt;Using Capybara with Minitest::Spec&lt;/h2&gt;
&lt;p&gt;Follow the above instructions for Minitest and additionally require capybara/minitest/spec&lt;/p&gt;
&lt;div class="highlight highlight-source-ruby"&gt;&lt;pre&gt;page.must_have_content(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;Important!&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;)&lt;/pre&gt;&lt;/div&gt;
&lt;h2&gt;&lt;a id="user-content-drivers" class="anchor" aria-hidden="true" href="#drivers"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;a name="user-content-drivers"&gt;&lt;/a&gt;Drivers&lt;/h2&gt;
&lt;p&gt;Capybara uses the same DSL to drive a variety of browser and headless drivers.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-selecting-the-driver" class="anchor" aria-hidden="true" href="#selecting-the-driver"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;a name="user-content-selecting-the-driver"&gt;&lt;/a&gt;Selecting the Driver&lt;/h3&gt;
&lt;p&gt;By default, Capybara uses the &lt;code&gt;:rack_test&lt;/code&gt; driver, which is fast but limited: it
does not support JavaScript, nor is it able to access HTTP resources outside of
your Rack application, such as remote APIs and OAuth services. To get around
these limitations, you can set up a different default driver for your features.
For example if you'd prefer to run everything in Selenium, you could do:&lt;/p&gt;
&lt;div class="highlight highlight-source-ruby"&gt;&lt;pre&gt;&lt;span class="pl-c1"&gt;Capybara&lt;/span&gt;.default_driver &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;:selenium&lt;/span&gt; &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; :selenium_chrome and :selenium_chrome_headless are also registered&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;However, if you are using RSpec or Cucumber (and your app runs correctly without JS),
you may instead want to consider leaving the faster &lt;code&gt;:rack_test&lt;/code&gt; as the &lt;strong&gt;default_driver&lt;/strong&gt;, and
marking only those tests that require a JavaScript-capable driver using &lt;code&gt;js: true&lt;/code&gt; or
&lt;code&gt;@javascript&lt;/code&gt;, respectively.  By default, JavaScript tests are run using the
&lt;code&gt;:selenium&lt;/code&gt; driver. You can change this by setting
&lt;code&gt;Capybara.javascript_driver&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;You can also change the driver temporarily (typically in the Before/setup and
After/teardown blocks):&lt;/p&gt;
&lt;div class="highlight highlight-source-ruby"&gt;&lt;pre&gt;&lt;span class="pl-c1"&gt;Capybara&lt;/span&gt;.current_driver &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;:apparition&lt;/span&gt; &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; temporarily select different driver&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; tests here&lt;/span&gt;
&lt;span class="pl-c1"&gt;Capybara&lt;/span&gt;.use_default_driver       &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; switch back to default driver&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;strong&gt;Note&lt;/strong&gt;: switching the driver creates a new session, so you may not be able to
switch in the middle of a test.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-racktest" class="anchor" aria-hidden="true" href="#racktest"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;a name="user-content-racktest"&gt;&lt;/a&gt;RackTest&lt;/h3&gt;
&lt;p&gt;RackTest is Capybara's default driver. It is written in pure Ruby and does not
have any support for executing JavaScript. Since the RackTest driver interacts
directly with Rack interfaces, it does not require a server to be started.
However, this means that if your application is not a Rack application (Rails,
Sinatra and most other Ruby frameworks are Rack applications) then you cannot
use this driver. Furthermore, you cannot use the RackTest driver to test a
remote application, or to access remote URLs (e.g., redirects to external
sites, external APIs, or OAuth services) that your application might interact
with.&lt;/p&gt;
&lt;p&gt;&lt;a href="https://github.com/jeroenvandijk/capybara-mechanize"&gt;capybara-mechanize&lt;/a&gt;
provides a similar driver that can access remote servers.&lt;/p&gt;
&lt;p&gt;RackTest can be configured with a set of headers like this:&lt;/p&gt;
&lt;div class="highlight highlight-source-ruby"&gt;&lt;pre&gt;&lt;span class="pl-c1"&gt;Capybara&lt;/span&gt;.register_driver &lt;span class="pl-c1"&gt;:rack_test&lt;/span&gt; &lt;span class="pl-k"&gt;do&lt;/span&gt; |&lt;span class="pl-smi"&gt;app&lt;/span&gt;|
  &lt;span class="pl-c1"&gt;Capybara&lt;/span&gt;::&lt;span class="pl-c1"&gt;RackTest&lt;/span&gt;::&lt;span class="pl-c1"&gt;Driver&lt;/span&gt;.&lt;span class="pl-k"&gt;new&lt;/span&gt;(app, &lt;span class="pl-c1"&gt;headers:&lt;/span&gt; { &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;HTTP_USER_AGENT&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt; =&amp;gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;Capybara&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt; })
&lt;span class="pl-k"&gt;end&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;See the section on adding and configuring drivers.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-selenium" class="anchor" aria-hidden="true" href="#selenium"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;a name="user-content-selenium"&gt;&lt;/a&gt;Selenium&lt;/h3&gt;
&lt;p&gt;Capybara supports &lt;a href="https://www.seleniumhq.org/projects/webdriver/" rel="nofollow"&gt;Selenium 3.5+
(Webdriver)&lt;/a&gt;.
In order to use Selenium, you'll need to install the &lt;code&gt;selenium-webdriver&lt;/code&gt; gem,
and add it to your Gemfile if you're using bundler.&lt;/p&gt;
&lt;p&gt;Capybara pre-registers a number of named drivers that use Selenium - they are:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;:selenium                 =&amp;gt; Selenium driving Firefox&lt;/li&gt;
&lt;li&gt;:selenium_headless        =&amp;gt; Selenium driving Firefox in a headless configuration&lt;/li&gt;
&lt;li&gt;:selenium_chrome          =&amp;gt; Selenium driving Chrome&lt;/li&gt;
&lt;li&gt;:selenium_chrome_headless =&amp;gt; Selenium driving Chrome in a headless configuration&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;These should work (with relevant software installation) in a local desktop configuration but you may
need to customize them if using in a CI environment where additional options may need to be passed
to the browsers.  See the section on adding and configuring drivers.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Note&lt;/strong&gt;: drivers which run the server in a different thread may not share the
same transaction as your tests, causing data not to be shared between your test
and test server, see &lt;a href="#transactions-and-database-setup"&gt;Transactions and database setup&lt;/a&gt; below.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-apparition" class="anchor" aria-hidden="true" href="#apparition"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;a name="user-content-apparition"&gt;&lt;/a&gt;Apparition&lt;/h3&gt;
&lt;p&gt;The &lt;a href="https://github.com/twalpole/apparition"&gt;apparition driver&lt;/a&gt; is a new driver that allows you to run tests using Chrome in a headless
or headed configuration. It attempts to provide backwards compatibility with the &lt;a href="https://github.com/teampoltergeist/poltergeist"&gt;Poltergeist driver API&lt;/a&gt;
and &lt;a href="https://github.com/thoughtbot/capybara-webkit"&gt;capybara-webkit API&lt;/a&gt; while allowing for the use of modern JS/CSS. It
uses CDP to communicate with Chrome, thereby obviating the need for chromedriver. This driver is being developed by the
current developer of Capybara and will attempt to keep up to date with new Capybara releases. It will probably be moved into the
teamcapybara repo once it reaches v1.0.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-the-dsl" class="anchor" aria-hidden="true" href="#the-dsl"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;a name="user-content-the-dsl"&gt;&lt;/a&gt;The DSL&lt;/h2&gt;
&lt;p&gt;&lt;em&gt;A complete reference is available at
&lt;a href="http://rubydoc.info/github/teamcapybara/capybara/master" rel="nofollow"&gt;rubydoc.info&lt;/a&gt;&lt;/em&gt;.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Note: By default Capybara will only locate visible elements. This is because
a real user would not be able to interact with non-visible elements.&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Note&lt;/strong&gt;: All searches in Capybara are &lt;em&gt;case sensitive&lt;/em&gt;. This is because
Capybara heavily uses XPath, which doesn't support case insensitivity.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-navigating" class="anchor" aria-hidden="true" href="#navigating"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;a name="user-content-navigating"&gt;&lt;/a&gt;Navigating&lt;/h3&gt;
&lt;p&gt;You can use the
&lt;tt&gt;&lt;a href="http://rubydoc.info/github/teamcapybara/capybara/master/Capybara/Session#visit-instance_method" rel="nofollow"&gt;visit&lt;/a&gt;&lt;/tt&gt;
method to navigate to other pages:&lt;/p&gt;
&lt;div class="highlight highlight-source-ruby"&gt;&lt;pre&gt;visit(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;/projects&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;)
visit(post_comments_path(post))&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;The visit method only takes a single parameter, the request method is &lt;strong&gt;always&lt;/strong&gt;
GET.&lt;/p&gt;
&lt;p&gt;You can get the &lt;a href="http://rubydoc.info/github/teamcapybara/capybara/master/Capybara/Session#current_path-instance_method" rel="nofollow"&gt;current path&lt;/a&gt;
of the browsing session, and test it using the &lt;a href="http://www.rubydoc.info/github/teamcapybara/capybara/master/Capybara/RSpecMatchers#have_current_path-instance_method" rel="nofollow"&gt;&lt;code&gt;have_current_path&lt;/code&gt;&lt;/a&gt; matcher:&lt;/p&gt;
&lt;div class="highlight highlight-source-ruby"&gt;&lt;pre&gt;expect(page).to have_current_path(post_comments_path(post))&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;strong&gt;Note&lt;/strong&gt;: You can also assert the current path by testing the value of
&lt;code&gt;current_path&lt;/code&gt; directly. However, using the &lt;code&gt;have_current_path&lt;/code&gt; matcher is
safer since it uses Capybara's &lt;a href="#asynchronous-javascript-ajax-and-friends"&gt;waiting behaviour&lt;/a&gt;
to ensure that preceding actions (such as a &lt;code&gt;click_link&lt;/code&gt;) have completed.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-clicking-links-and-buttons" class="anchor" aria-hidden="true" href="#clicking-links-and-buttons"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;a name="user-content-clicking-links-and-buttons"&gt;&lt;/a&gt;Clicking links and buttons&lt;/h3&gt;
&lt;p&gt;&lt;em&gt;Full reference: &lt;a href="http://rubydoc.info/github/teamcapybara/capybara/master/Capybara/Node/Actions" rel="nofollow"&gt;Capybara::Node::Actions&lt;/a&gt;&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;You can interact with the webapp by following links and buttons. Capybara
automatically follows any redirects, and submits forms associated with buttons.&lt;/p&gt;
&lt;div class="highlight highlight-source-ruby"&gt;&lt;pre&gt;click_link(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;id-of-link&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;)
click_link(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;Link Text&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;)
click_button(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;Save&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;)
click_on(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;Link Text&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;) &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; clicks on either links or buttons&lt;/span&gt;
click_on(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;Button Value&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;)&lt;/pre&gt;&lt;/div&gt;
&lt;h3&gt;&lt;a id="user-content-interacting-with-forms" class="anchor" aria-hidden="true" href="#interacting-with-forms"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;a name="user-content-interacting-with-forms"&gt;&lt;/a&gt;Interacting with forms&lt;/h3&gt;
&lt;p&gt;&lt;em&gt;Full reference: &lt;a href="http://rubydoc.info/github/teamcapybara/capybara/master/Capybara/Node/Actions" rel="nofollow"&gt;Capybara::Node::Actions&lt;/a&gt;&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;There are a number of tools for interacting with form elements:&lt;/p&gt;
&lt;div class="highlight highlight-source-ruby"&gt;&lt;pre&gt;fill_in(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;First Name&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-c1"&gt;with:&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;John&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;)
fill_in(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;Password&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-c1"&gt;with:&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;Seekrit&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;)
fill_in(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;Description&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-c1"&gt;with:&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;Really Long Text...&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;)
choose(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;A Radio Button&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;)
check(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;A Checkbox&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;)
uncheck(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;A Checkbox&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;)
attach_file(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;Image&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;/path/to/image.jpg&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;)
&lt;span class="pl-c1"&gt;select&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;Option&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-c1"&gt;from:&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;Select Box&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;)&lt;/pre&gt;&lt;/div&gt;
&lt;h3&gt;&lt;a id="user-content-querying" class="anchor" aria-hidden="true" href="#querying"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;a name="user-content-querying"&gt;&lt;/a&gt;Querying&lt;/h3&gt;
&lt;p&gt;&lt;em&gt;Full reference: &lt;a href="http://rubydoc.info/github/teamcapybara/capybara/master/Capybara/Node/Matchers" rel="nofollow"&gt;Capybara::Node::Matchers&lt;/a&gt;&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;Capybara has a rich set of options for querying the page for the existence of
certain elements, and working with and manipulating those elements.&lt;/p&gt;
&lt;div class="highlight highlight-source-ruby"&gt;&lt;pre&gt;page.has_selector?(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;table tr&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;)
page.has_selector?(&lt;span class="pl-c1"&gt;:xpath&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;.//table/tr&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;)

page.has_xpath?(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;.//table/tr&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;)
page.has_css?(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;table tr.foo&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;)
page.has_content?(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;foo&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;)&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;strong&gt;Note:&lt;/strong&gt; The negative forms like &lt;code&gt;has_no_selector?&lt;/code&gt; are different from &lt;code&gt;not has_selector?&lt;/code&gt;. Read the section on asynchronous JavaScript for an explanation.&lt;/p&gt;
&lt;p&gt;You can use these with RSpec's magic matchers:&lt;/p&gt;
&lt;div class="highlight highlight-source-ruby"&gt;&lt;pre&gt;expect(page).to have_selector(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;table tr&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;)
expect(page).to have_selector(&lt;span class="pl-c1"&gt;:xpath&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;.//table/tr&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;)

expect(page).to have_xpath(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;.//table/tr&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;)
expect(page).to have_css(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;table tr.foo&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;)
expect(page).to have_content(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;foo&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;)&lt;/pre&gt;&lt;/div&gt;
&lt;h3&gt;&lt;a id="user-content-finding" class="anchor" aria-hidden="true" href="#finding"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;a name="user-content-finding"&gt;&lt;/a&gt;Finding&lt;/h3&gt;
&lt;p&gt;&lt;em&gt;Full reference: &lt;a href="http://rubydoc.info/github/teamcapybara/capybara/master/Capybara/Node/Finders" rel="nofollow"&gt;Capybara::Node::Finders&lt;/a&gt;&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;You can also find specific elements, in order to manipulate them:&lt;/p&gt;
&lt;div class="highlight highlight-source-ruby"&gt;&lt;pre&gt;find_field(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;First Name&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;).value
find_field(&lt;span class="pl-c1"&gt;id:&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;my_field&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;).value
find_link(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;Hello&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-c1"&gt;:visible&lt;/span&gt; =&amp;gt; &lt;span class="pl-c1"&gt;:all&lt;/span&gt;).visible?
find_link(&lt;span class="pl-c1"&gt;class:&lt;/span&gt; [&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;some_class&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;some_other_class&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;], &lt;span class="pl-c1"&gt;:visible&lt;/span&gt; =&amp;gt; &lt;span class="pl-c1"&gt;:all&lt;/span&gt;).visible?

find_button(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;Send&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;).click
find_button(&lt;span class="pl-c1"&gt;value:&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;1234&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;).click

find(&lt;span class="pl-c1"&gt;:xpath&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;.//table/tr&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;).click
find(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;#overlay&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;).find(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;h1&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;).click
all(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;a&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;).each { |&lt;span class="pl-smi"&gt;a&lt;/span&gt;| a[&lt;span class="pl-c1"&gt;:href&lt;/span&gt;] }&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;If you need to find elements by additional attributes/properties you can also pass a filter block, which will be checked inside the normal waiting behavior.
If you find yourself needing to use this a lot you may be better off adding a &lt;a href="http://www.rubydoc.info/github/teamcapybara/capybara/Capybara#add_selector-class_method" rel="nofollow"&gt;custom selector&lt;/a&gt; or &lt;a href="http://www.rubydoc.info/github/teamcapybara/capybara/Capybara#modify_selector-class_method" rel="nofollow"&gt;adding a filter to an existing selector&lt;/a&gt;.&lt;/p&gt;
&lt;div class="highlight highlight-source-ruby"&gt;&lt;pre&gt;find_field(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;First Name&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;){ |&lt;span class="pl-smi"&gt;el&lt;/span&gt;| el[&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;data-xyz&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;] &lt;span class="pl-k"&gt;==&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;123&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt; }
find(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;#img_loading&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;){ |&lt;span class="pl-smi"&gt;img&lt;/span&gt;| img[&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;complete&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;] &lt;span class="pl-k"&gt;==&lt;/span&gt; &lt;span class="pl-c1"&gt;true&lt;/span&gt; }&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;strong&gt;Note&lt;/strong&gt;: &lt;code&gt;find&lt;/code&gt; will wait for an element to appear on the page, as explained in the
Ajax section. If the element does not appear it will raise an error.&lt;/p&gt;
&lt;p&gt;These elements all have all the Capybara DSL methods available, so you can restrict them
to specific parts of the page:&lt;/p&gt;
&lt;div class="highlight highlight-source-ruby"&gt;&lt;pre&gt;find(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;#navigation&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;).click_link(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;Home&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;)
expect(find(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;#navigation&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;)).to have_button(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;Sign out&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;)&lt;/pre&gt;&lt;/div&gt;
&lt;h3&gt;&lt;a id="user-content-scoping" class="anchor" aria-hidden="true" href="#scoping"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;a name="user-content-scoping"&gt;&lt;/a&gt;Scoping&lt;/h3&gt;
&lt;p&gt;Capybara makes it possible to restrict certain actions, such as interacting with
forms or clicking links and buttons, to within a specific area of the page. For
this purpose you can use the generic
&lt;tt&gt;&lt;a href="http://rubydoc.info/github/teamcapybara/capybara/master/Capybara/Session#within-instance_method" rel="nofollow"&gt;within&lt;/a&gt;&lt;/tt&gt;
method. Optionally you can specify which kind of selector to use.&lt;/p&gt;
&lt;div class="highlight highlight-source-ruby"&gt;&lt;pre&gt;within(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;li#employee&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;) &lt;span class="pl-k"&gt;do&lt;/span&gt;
  fill_in &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;Name&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-c1"&gt;with:&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;Jimmy&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;
&lt;span class="pl-k"&gt;end&lt;/span&gt;

within(&lt;span class="pl-c1"&gt;:xpath&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;.//li[@id='employee']&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;) &lt;span class="pl-k"&gt;do&lt;/span&gt;
  fill_in &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;Name&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-c1"&gt;with:&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;Jimmy&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;
&lt;span class="pl-k"&gt;end&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;There are special methods for restricting the scope to a specific fieldset,
identified by either an id or the text of the fieldset's legend tag, and to a
specific table, identified by either id or text of the table's caption tag.&lt;/p&gt;
&lt;div class="highlight highlight-source-ruby"&gt;&lt;pre&gt;within_fieldset(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;Employee&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;) &lt;span class="pl-k"&gt;do&lt;/span&gt;
  fill_in &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;Name&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-c1"&gt;with:&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;Jimmy&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;
&lt;span class="pl-k"&gt;end&lt;/span&gt;

within_table(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;Employee&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;) &lt;span class="pl-k"&gt;do&lt;/span&gt;
  fill_in &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;Name&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-c1"&gt;with:&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;Jimmy&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;
&lt;span class="pl-k"&gt;end&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h3&gt;&lt;a id="user-content-working-with-windows" class="anchor" aria-hidden="true" href="#working-with-windows"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;a name="user-content-working-with-windows"&gt;&lt;/a&gt;Working with windows&lt;/h3&gt;
&lt;p&gt;Capybara provides some methods to ease finding and switching windows:&lt;/p&gt;
&lt;div class="highlight highlight-source-ruby"&gt;&lt;pre&gt;facebook_window &lt;span class="pl-k"&gt;=&lt;/span&gt; window_opened_by &lt;span class="pl-k"&gt;do&lt;/span&gt;
  click_button &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;Like&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;
&lt;span class="pl-k"&gt;end&lt;/span&gt;
within_window facebook_window &lt;span class="pl-k"&gt;do&lt;/span&gt;
  find(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;#login_email&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;).set(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;a@example.com&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;)
  find(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;#login_password&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;).set(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;qwerty&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;)
  click_button &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;Submit&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;
&lt;span class="pl-k"&gt;end&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h3&gt;&lt;a id="user-content-scripting" class="anchor" aria-hidden="true" href="#scripting"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;a name="user-content-scripting"&gt;&lt;/a&gt;Scripting&lt;/h3&gt;
&lt;p&gt;In drivers which support it, you can easily execute JavaScript:&lt;/p&gt;
&lt;div class="highlight highlight-source-ruby"&gt;&lt;pre&gt;page.execute_script(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;$('body').empty()&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;For simple expressions, you can return the result of the script.&lt;/p&gt;
&lt;div class="highlight highlight-source-ruby"&gt;&lt;pre&gt;result &lt;span class="pl-k"&gt;=&lt;/span&gt; page.evaluate_script(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;4 + 4&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;);&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;For more complicated scripts you'll need to write them as one expression.&lt;/p&gt;
&lt;div class="highlight highlight-source-ruby"&gt;&lt;pre&gt;result &lt;span class="pl-k"&gt;=&lt;/span&gt; page.evaluate_script(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;&amp;lt;&amp;lt;~JS&lt;/span&gt;&lt;span class="pl-s1"&gt;, &lt;span class="pl-c1"&gt;3&lt;/span&gt;, element)&lt;/span&gt;&lt;/span&gt;
&lt;span class="pl-s"&gt;&lt;span class="pl-s1"&gt;  (&lt;span class="pl-k"&gt;function&lt;/span&gt;(&lt;span class="pl-smi"&gt;n&lt;/span&gt;, &lt;span class="pl-smi"&gt;el&lt;/span&gt;){&lt;/span&gt;&lt;/span&gt;
&lt;span class="pl-s"&gt;&lt;span class="pl-s1"&gt;    &lt;span class="pl-k"&gt;var&lt;/span&gt; val &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;parseInt&lt;/span&gt;(&lt;span class="pl-smi"&gt;el&lt;/span&gt;.&lt;span class="pl-c1"&gt;value&lt;/span&gt;, &lt;span class="pl-c1"&gt;10&lt;/span&gt;);&lt;/span&gt;&lt;/span&gt;
&lt;span class="pl-s"&gt;&lt;span class="pl-s1"&gt;    &lt;span class="pl-k"&gt;return&lt;/span&gt; n&lt;span class="pl-k"&gt;+&lt;/span&gt;val;&lt;/span&gt;&lt;/span&gt;
&lt;span class="pl-s"&gt;&lt;span class="pl-s1"&gt;  })(&lt;span class="pl-c1"&gt;arguments&lt;/span&gt;[&lt;span class="pl-c1"&gt;0&lt;/span&gt;], &lt;span class="pl-c1"&gt;arguments&lt;/span&gt;[&lt;span class="pl-c1"&gt;1&lt;/span&gt;])&lt;/span&gt;&lt;/span&gt;
&lt;span class="pl-s"&gt;&lt;span class="pl-s1"&gt;&lt;/span&gt;&lt;span class="pl-pds"&gt;JS&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h3&gt;&lt;a id="user-content-modals" class="anchor" aria-hidden="true" href="#modals"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;a name="user-content-modals"&gt;&lt;/a&gt;Modals&lt;/h3&gt;
&lt;p&gt;In drivers which support it, you can accept, dismiss and respond to alerts, confirms and prompts.&lt;/p&gt;
&lt;p&gt;You can accept or dismiss alert messages by wrapping the code that produces an alert in a block:&lt;/p&gt;
&lt;div class="highlight highlight-source-ruby"&gt;&lt;pre&gt;accept_alert &lt;span class="pl-k"&gt;do&lt;/span&gt;
  click_link(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;Show Alert&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;)
&lt;span class="pl-k"&gt;end&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;You can accept or dismiss a confirmation by wrapping it in a block, as well:&lt;/p&gt;
&lt;div class="highlight highlight-source-ruby"&gt;&lt;pre&gt;dismiss_confirm &lt;span class="pl-k"&gt;do&lt;/span&gt;
  click_link(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;Show Confirm&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;)
&lt;span class="pl-k"&gt;end&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;You can accept or dismiss prompts as well, and also provide text to fill in for the response:&lt;/p&gt;
&lt;div class="highlight highlight-source-ruby"&gt;&lt;pre&gt;accept_prompt(&lt;span class="pl-c1"&gt;with:&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;Linus Torvalds&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;) &lt;span class="pl-k"&gt;do&lt;/span&gt;
  click_link(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;Show Prompt About Linux&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;)
&lt;span class="pl-k"&gt;end&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;All modal methods return the message that was presented. So, you can access the prompt message
by assigning the return to a variable:&lt;/p&gt;
&lt;div class="highlight highlight-source-ruby"&gt;&lt;pre&gt;message &lt;span class="pl-k"&gt;=&lt;/span&gt; accept_prompt(&lt;span class="pl-c1"&gt;with:&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;Linus Torvalds&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;) &lt;span class="pl-k"&gt;do&lt;/span&gt;
  click_link(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;Show Prompt About Linux&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;)
&lt;span class="pl-k"&gt;end&lt;/span&gt;
expect(message).to eq(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;Who is the chief architect of Linux?&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;)&lt;/pre&gt;&lt;/div&gt;
&lt;h3&gt;&lt;a id="user-content-debugging" class="anchor" aria-hidden="true" href="#debugging"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;a name="user-content-debugging"&gt;&lt;/a&gt;Debugging&lt;/h3&gt;
&lt;p&gt;It can be useful to take a snapshot of the page as it currently is and take a
look at it:&lt;/p&gt;
&lt;div class="highlight highlight-source-ruby"&gt;&lt;pre&gt;save_and_open_page&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;You can also retrieve the current state of the DOM as a string using
&lt;tt&gt;&lt;a href="http://rubydoc.info/github/teamcapybara/capybara/master/Capybara/Session#html-instance_method" rel="nofollow"&gt;page.html&lt;/a&gt;&lt;/tt&gt;.&lt;/p&gt;
&lt;div class="highlight highlight-source-ruby"&gt;&lt;pre&gt;&lt;span class="pl-c1"&gt;print&lt;/span&gt; page.html&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;This is mostly useful for debugging. You should avoid testing against the
contents of &lt;code&gt;page.html&lt;/code&gt; and use the more expressive finder methods instead.&lt;/p&gt;
&lt;p&gt;Finally, in drivers that support it, you can save a screenshot:&lt;/p&gt;
&lt;div class="highlight highlight-source-ruby"&gt;&lt;pre&gt;page.save_screenshot(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;screenshot.png&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;)&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Or have it save and automatically open:&lt;/p&gt;
&lt;div class="highlight highlight-source-ruby"&gt;&lt;pre&gt;save_and_open_screenshot&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Screenshots are saved to &lt;code&gt;Capybara.save_path&lt;/code&gt;, relative to the app directory.
If you have required &lt;code&gt;capybara/rails&lt;/code&gt;, &lt;code&gt;Capybara.save_path&lt;/code&gt; will default to
&lt;code&gt;tmp/capybara&lt;/code&gt;.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-matching" class="anchor" aria-hidden="true" href="#matching"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;a name="user-content-matching"&gt;&lt;/a&gt;Matching&lt;/h2&gt;
&lt;p&gt;It is possible to customize how Capybara finds elements. At your disposal
are two options, &lt;code&gt;Capybara.exact&lt;/code&gt; and &lt;code&gt;Capybara.match&lt;/code&gt;.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-exactness" class="anchor" aria-hidden="true" href="#exactness"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;a name="user-content-exactness"&gt;&lt;/a&gt;Exactness&lt;/h3&gt;
&lt;p&gt;&lt;code&gt;Capybara.exact&lt;/code&gt; and the &lt;code&gt;exact&lt;/code&gt; option work together with the &lt;code&gt;is&lt;/code&gt; expression
inside the XPath gem. When &lt;code&gt;exact&lt;/code&gt; is true, all &lt;code&gt;is&lt;/code&gt; expressions match exactly,
when it is false, they allow substring matches. Many of the selectors built into
Capybara use the &lt;code&gt;is&lt;/code&gt; expression. This way you can specify whether you want to
allow substring matches or not. &lt;code&gt;Capybara.exact&lt;/code&gt; is false by default.&lt;/p&gt;
&lt;p&gt;For example:&lt;/p&gt;
&lt;div class="highlight highlight-source-ruby"&gt;&lt;pre&gt;click_link(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;Password&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;) &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; also matches "Password confirmation"&lt;/span&gt;
&lt;span class="pl-c1"&gt;Capybara&lt;/span&gt;.exact &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;true&lt;/span&gt;
click_link(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;Password&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;) &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; does not match "Password confirmation"&lt;/span&gt;
click_link(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;Password&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-c1"&gt;exact:&lt;/span&gt; &lt;span class="pl-c1"&gt;false&lt;/span&gt;) &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; can be overridden&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h3&gt;&lt;a id="user-content-strategy" class="anchor" aria-hidden="true" href="#strategy"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;a name="user-content-strategy"&gt;&lt;/a&gt;Strategy&lt;/h3&gt;
&lt;p&gt;Using &lt;code&gt;Capybara.match&lt;/code&gt; and the equivalent &lt;code&gt;match&lt;/code&gt; option, you can control how
Capybara behaves when multiple elements all match a query. There are currently
four different strategies built into Capybara:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;&lt;strong&gt;first:&lt;/strong&gt; Just picks the first element that matches.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;one:&lt;/strong&gt; Raises an error if more than one element matches.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;smart:&lt;/strong&gt; If &lt;code&gt;exact&lt;/code&gt; is &lt;code&gt;true&lt;/code&gt;, raises an error if more than one element
matches, just like &lt;code&gt;one&lt;/code&gt;. If &lt;code&gt;exact&lt;/code&gt; is &lt;code&gt;false&lt;/code&gt;, it will first try to find
an exact match. An error is raised if more than one element is found. If no
element is found, a new search is performed which allows partial matches. If
that search returns multiple matches, an error is raised.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;prefer_exact:&lt;/strong&gt; If multiple matches are found, some of which are exact,
and some of which are not, then the first exactly matching element is
returned.&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;The default for &lt;code&gt;Capybara.match&lt;/code&gt; is &lt;code&gt;:smart&lt;/code&gt;. To emulate the behaviour in
Capybara 2.0.x, set &lt;code&gt;Capybara.match&lt;/code&gt; to &lt;code&gt;:one&lt;/code&gt;. To emulate the behaviour in
Capybara 1.x, set &lt;code&gt;Capybara.match&lt;/code&gt; to &lt;code&gt;:prefer_exact&lt;/code&gt;.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-transactions-and-database-setup" class="anchor" aria-hidden="true" href="#transactions-and-database-setup"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;a name="user-content-transactions-and-database-setup"&gt;&lt;/a&gt;Transactions and database setup&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;Note:&lt;/strong&gt;  Rails 5.1+ "safely" shares the database connection between the app and test threads.  Therefore,
if using Rails 5.1+ you SHOULD be able to ignore this section.&lt;/p&gt;
&lt;p&gt;Some Capybara drivers need to run against an actual HTTP server. Capybara takes
care of this and starts one for you in the same process as your test, but on
another thread. Selenium is one of those drivers, whereas RackTest is not.&lt;/p&gt;
&lt;p&gt;If you are using a SQL database, it is common to run every test in a
transaction, which is rolled back at the end of the test, rspec-rails does this
by default out of the box for example. Since transactions are usually not
shared across threads, this will cause data you have put into the database in
your test code to be invisible to Capybara.&lt;/p&gt;
&lt;p&gt;Cucumber handles this by using truncation instead of transactions, i.e. they
empty out the entire database after each test. You can get the same behaviour
by using a gem such as &lt;a href="https://github.com/DatabaseCleaner/database_cleaner"&gt;database_cleaner&lt;/a&gt;.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-asynchronous-javascript-ajax-and-friends" class="anchor" aria-hidden="true" href="#asynchronous-javascript-ajax-and-friends"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;a name="user-content-asynchronous-javascript-ajax-and-friends"&gt;&lt;/a&gt;Asynchronous JavaScript (Ajax and friends)&lt;/h2&gt;
&lt;p&gt;When working with asynchronous JavaScript, you might come across situations
where you are attempting to interact with an element which is not yet present
on the page. Capybara automatically deals with this by waiting for elements
to appear on the page.&lt;/p&gt;
&lt;p&gt;When issuing instructions to the DSL such as:&lt;/p&gt;
&lt;div class="highlight highlight-source-ruby"&gt;&lt;pre&gt;click_link(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;foo&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;)
click_link(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;bar&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;)
expect(page).to have_content(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;baz&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;)&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;If clicking on the &lt;em&gt;foo&lt;/em&gt; link triggers an asynchronous process, such as
an Ajax request, which, when complete will add the &lt;em&gt;bar&lt;/em&gt; link to the page,
clicking on the &lt;em&gt;bar&lt;/em&gt; link would be expected to fail, since that link doesn't
exist yet. However Capybara is smart enough to retry finding the link for a
brief period of time before giving up and throwing an error. The same is true of
the next line, which looks for the content &lt;em&gt;baz&lt;/em&gt; on the page; it will retry
looking for that content for a brief time. You can adjust how long this period
is (the default is 2 seconds):&lt;/p&gt;
&lt;div class="highlight highlight-source-ruby"&gt;&lt;pre&gt;&lt;span class="pl-c1"&gt;Capybara&lt;/span&gt;.default_max_wait_time &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;5&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Be aware that because of this behaviour, the following two statements are &lt;strong&gt;not&lt;/strong&gt;
equivalent, and you should &lt;strong&gt;always&lt;/strong&gt; use the latter!&lt;/p&gt;
&lt;div class="highlight highlight-source-ruby"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;!&lt;/span&gt;page.has_xpath?(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;a&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;)
page.has_no_xpath?(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;a&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;)&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;The former would immediately fail because the content has not yet been removed.
Only the latter would wait for the asynchronous process to remove the content
from the page.&lt;/p&gt;
&lt;p&gt;Capybara's RSpec matchers, however, are smart enough to handle either form.
The two following statements are functionally equivalent:&lt;/p&gt;
&lt;div class="highlight highlight-source-ruby"&gt;&lt;pre&gt;expect(page).not_to have_xpath(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;a&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;)
expect(page).to have_no_xpath(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;a&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;)&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Capybara's waiting behaviour is quite advanced, and can deal with situations
such as the following line of code:&lt;/p&gt;
&lt;div class="highlight highlight-source-ruby"&gt;&lt;pre&gt;expect(find(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;#sidebar&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;).find(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;h1&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;)).to have_content(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;Something&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;)&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Even if JavaScript causes &lt;code&gt;#sidebar&lt;/code&gt; to disappear off the page, Capybara
will automatically reload it and any elements it contains. So if an AJAX
request causes the contents of &lt;code&gt;#sidebar&lt;/code&gt; to change, which would update
the text of the &lt;code&gt;h1&lt;/code&gt; to "Something", and this happened, this test would
pass. If you do not want this behaviour, you can set
&lt;code&gt;Capybara.automatic_reload&lt;/code&gt; to &lt;code&gt;false&lt;/code&gt;.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-using-the-dsl-elsewhere" class="anchor" aria-hidden="true" href="#using-the-dsl-elsewhere"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;a name="user-content-using-the-dsl-elsewhere"&gt;&lt;/a&gt;Using the DSL elsewhere&lt;/h2&gt;
&lt;p&gt;You can mix the DSL into any context by including &lt;tt&gt;Capybara::DSL&lt;/tt&gt;:&lt;/p&gt;
&lt;div class="highlight highlight-source-ruby"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;require&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;capybara/dsl&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;

&lt;span class="pl-c1"&gt;Capybara&lt;/span&gt;.default_driver &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;:webkit&lt;/span&gt;

&lt;span class="pl-k"&gt;module&lt;/span&gt; &lt;span class="pl-en"&gt;MyModule&lt;/span&gt;
  &lt;span class="pl-k"&gt;include&lt;/span&gt; &lt;span class="pl-c1"&gt;Capybara&lt;/span&gt;::&lt;span class="pl-c1"&gt;DSL&lt;/span&gt;

  &lt;span class="pl-k"&gt;def&lt;/span&gt; &lt;span class="pl-en"&gt;login!&lt;/span&gt;
    within(&lt;span class="pl-c1"&gt;:xpath&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;.//form[@id='session']&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;) &lt;span class="pl-k"&gt;do&lt;/span&gt;
      fill_in &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;Email&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-c1"&gt;with:&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;user@example.com&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;
      fill_in &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;Password&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-c1"&gt;with:&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;password&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;
    &lt;span class="pl-k"&gt;end&lt;/span&gt;
    click_button &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;Sign in&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;
  &lt;span class="pl-k"&gt;end&lt;/span&gt;
&lt;span class="pl-k"&gt;end&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;This enables its use in unsupported testing frameworks, and for general-purpose scripting.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-calling-remote-servers" class="anchor" aria-hidden="true" href="#calling-remote-servers"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;a name="user-content-calling-remote-servers"&gt;&lt;/a&gt;Calling remote servers&lt;/h2&gt;
&lt;p&gt;Normally Capybara expects to be testing an in-process Rack application, but you
can also use it to talk to a web server running anywhere on the internet, by
setting app_host:&lt;/p&gt;
&lt;div class="highlight highlight-source-ruby"&gt;&lt;pre&gt;&lt;span class="pl-c1"&gt;Capybara&lt;/span&gt;.current_driver &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;:selenium&lt;/span&gt;
&lt;span class="pl-c1"&gt;Capybara&lt;/span&gt;.app_host &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;http://www.google.com&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;
...
visit(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;/&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;)&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;strong&gt;Note&lt;/strong&gt;: the default driver (&lt;code&gt;:rack_test&lt;/code&gt;) does not support running
against a remote server. With drivers that support it, you can also visit any
URL directly:&lt;/p&gt;
&lt;div class="highlight highlight-source-ruby"&gt;&lt;pre&gt;visit(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;http://www.google.com&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;)&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;By default Capybara will try to boot a rack application automatically. You
might want to switch off Capybara's rack server if you are running against a
remote application:&lt;/p&gt;
&lt;div class="highlight highlight-source-ruby"&gt;&lt;pre&gt;&lt;span class="pl-c1"&gt;Capybara&lt;/span&gt;.run_server &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;false&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h2&gt;&lt;a id="user-content-using-sessions" class="anchor" aria-hidden="true" href="#using-sessions"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;a name="user-content-using-sessions"&gt;&lt;/a&gt;Using sessions&lt;/h2&gt;
&lt;p&gt;Capybara manages named sessions (:default if not specified) allowing multiple sessions using the same driver and test app instance to be interacted with.
A new session will be created using the current driver if a session with the given name using the current driver and test app instance is not found.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-named-sessions" class="anchor" aria-hidden="true" href="#named-sessions"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Named sessions&lt;/h3&gt;
&lt;p&gt;To perform operations in a different session and then revert to the previous session&lt;/p&gt;
&lt;div class="highlight highlight-source-ruby"&gt;&lt;pre&gt;&lt;span class="pl-c1"&gt;Capybara&lt;/span&gt;.using_session(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;Bob's session&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;) &lt;span class="pl-k"&gt;do&lt;/span&gt;
   &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt;do something in Bob's browser session&lt;/span&gt;
&lt;span class="pl-k"&gt;end&lt;/span&gt;
 &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt;reverts to previous session&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;To permanently switch the current session to a different session&lt;/p&gt;
&lt;div class="highlight highlight-source-ruby"&gt;&lt;pre&gt;&lt;span class="pl-c1"&gt;Capybara&lt;/span&gt;.session_name &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;some other session&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h3&gt;&lt;a id="user-content-using-sessions-manually" class="anchor" aria-hidden="true" href="#using-sessions-manually"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;a name="user-content-using-sessions-manually"&gt;&lt;/a&gt;Using sessions manually&lt;/h3&gt;
&lt;p&gt;For ultimate control, you can instantiate and use a
&lt;a href="http://rubydoc.info/github/teamcapybara/capybara/master/Capybara/Session" rel="nofollow"&gt;Session&lt;/a&gt;
manually.&lt;/p&gt;
&lt;div class="highlight highlight-source-ruby"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;require&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;capybara&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;

session &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;Capybara&lt;/span&gt;::&lt;span class="pl-c1"&gt;Session&lt;/span&gt;.&lt;span class="pl-k"&gt;new&lt;/span&gt;(&lt;span class="pl-c1"&gt;:webkit&lt;/span&gt;, my_rack_app)
session.within(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;form#session&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;) &lt;span class="pl-k"&gt;do&lt;/span&gt;
  session.fill_in &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;Email&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-c1"&gt;with:&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;user@example.com&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;
  session.fill_in &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;Password&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-c1"&gt;with:&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;password&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;
&lt;span class="pl-k"&gt;end&lt;/span&gt;
session.click_button &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;Sign in&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h2&gt;&lt;a id="user-content-xpath-css-and-selectors" class="anchor" aria-hidden="true" href="#xpath-css-and-selectors"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;a name="user-content-xpath-css-and-selectors"&gt;&lt;/a&gt;XPath, CSS and selectors&lt;/h2&gt;
&lt;p&gt;Capybara does not try to guess what kind of selector you are going to give it,
and will always use CSS by default.  If you want to use XPath, you'll need to
do:&lt;/p&gt;
&lt;div class="highlight highlight-source-ruby"&gt;&lt;pre&gt;within(&lt;span class="pl-c1"&gt;:xpath&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;.//ul/li&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;) { ... }
find(&lt;span class="pl-c1"&gt;:xpath&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;.//ul/li&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;).text
find(&lt;span class="pl-c1"&gt;:xpath&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;.//li[contains(.//a[@href = "#"]/text(), "foo")]&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;).value&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Alternatively you can set the default selector to XPath:&lt;/p&gt;
&lt;div class="highlight highlight-source-ruby"&gt;&lt;pre&gt;&lt;span class="pl-c1"&gt;Capybara&lt;/span&gt;.default_selector &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;:xpath&lt;/span&gt;
find(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;.//ul/li&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;).text&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Capybara provides a number of other built-in selector types. The full list, along
with applicable filters, can be seen at &lt;a href="https://www.rubydoc.info/github/teamcapybara/capybara/Capybara/Selector" rel="nofollow"&gt;built-in selectors&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Capybara also allows you to add custom selectors, which can be very useful if you
find yourself using the same kinds of selectors very often. The examples below are very
simple, and there are many available features not demonstrated. For more in-depth examples
please see Capybaras built-in selector definitions.&lt;/p&gt;
&lt;div class="highlight highlight-source-ruby"&gt;&lt;pre&gt;&lt;span class="pl-c1"&gt;Capybara&lt;/span&gt;.add_selector(&lt;span class="pl-c1"&gt;:my_attribute&lt;/span&gt;) &lt;span class="pl-k"&gt;do&lt;/span&gt;
  xpath { |&lt;span class="pl-smi"&gt;id&lt;/span&gt;| &lt;span class="pl-c1"&gt;XPath&lt;/span&gt;.descendant[&lt;span class="pl-c1"&gt;XPath&lt;/span&gt;.&lt;span class="pl-k"&gt;attr&lt;/span&gt;(&lt;span class="pl-c1"&gt;:my_attribute&lt;/span&gt;) &lt;span class="pl-k"&gt;==&lt;/span&gt; id.to_s] }
&lt;span class="pl-k"&gt;end&lt;/span&gt;

&lt;span class="pl-c1"&gt;Capybara&lt;/span&gt;.add_selector(&lt;span class="pl-c1"&gt;:row&lt;/span&gt;) &lt;span class="pl-k"&gt;do&lt;/span&gt;
  xpath { |&lt;span class="pl-smi"&gt;num&lt;/span&gt;| &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;.//tbody/tr[&lt;span class="pl-pse"&gt;#{&lt;/span&gt;&lt;span class="pl-s1"&gt;num&lt;/span&gt;&lt;span class="pl-pse"&gt;}&lt;/span&gt;]&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; }
&lt;span class="pl-k"&gt;end&lt;/span&gt;

&lt;span class="pl-c1"&gt;Capybara&lt;/span&gt;.add_selector(&lt;span class="pl-c1"&gt;:flash_type&lt;/span&gt;) &lt;span class="pl-k"&gt;do&lt;/span&gt;
  css { |&lt;span class="pl-smi"&gt;type&lt;/span&gt;| &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;#flash.&lt;span class="pl-pse"&gt;#{&lt;/span&gt;&lt;span class="pl-s1"&gt;type&lt;/span&gt;&lt;span class="pl-pse"&gt;}&lt;/span&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; }
&lt;span class="pl-k"&gt;end&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;The block given to xpath must always return an XPath expression as a String, or
an XPath expression generated through the XPath gem. You can now use these
selectors like this:&lt;/p&gt;
&lt;div class="highlight highlight-source-ruby"&gt;&lt;pre&gt;find(&lt;span class="pl-c1"&gt;:my_attribute&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;post_123&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;) &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; find element with matching attribute&lt;/span&gt;
find(&lt;span class="pl-c1"&gt;:row&lt;/span&gt;, &lt;span class="pl-c1"&gt;3&lt;/span&gt;) &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; find 3rd row in table body&lt;/span&gt;
find(&lt;span class="pl-c1"&gt;:flash_type&lt;/span&gt;, &lt;span class="pl-c1"&gt;:notice&lt;/span&gt;) &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; find element with id of 'flash' and class of 'notice'&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h2&gt;&lt;a id="user-content-beware-the-xpath--trap" class="anchor" aria-hidden="true" href="#beware-the-xpath--trap"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;a name="user-content-beware-the-xpath--trap"&gt;&lt;/a&gt;Beware the XPath // trap&lt;/h2&gt;
&lt;p&gt;In XPath the expression // means something very specific, and it might not be what
you think. Contrary to common belief, // means "anywhere in the document" not "anywhere
in the current context". As an example:&lt;/p&gt;
&lt;div class="highlight highlight-source-ruby"&gt;&lt;pre&gt;page.find(&lt;span class="pl-c1"&gt;:xpath&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;//body&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;).all(&lt;span class="pl-c1"&gt;:xpath&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;//script&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;)&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;You might expect this to find all script tags in the body, but actually, it finds all
script tags in the entire document, not only those in the body! What you're looking
for is the .// expression which means "any descendant of the current node":&lt;/p&gt;
&lt;div class="highlight highlight-source-ruby"&gt;&lt;pre&gt;page.find(&lt;span class="pl-c1"&gt;:xpath&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;//body&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;).all(&lt;span class="pl-c1"&gt;:xpath&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;.//script&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;)&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;The same thing goes for within:&lt;/p&gt;
&lt;div class="highlight highlight-source-ruby"&gt;&lt;pre&gt;within(&lt;span class="pl-c1"&gt;:xpath&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;//body&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;) &lt;span class="pl-k"&gt;do&lt;/span&gt;
  page.find(&lt;span class="pl-c1"&gt;:xpath&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;.//script&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;)
  within(&lt;span class="pl-c1"&gt;:xpath&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;.//table/tbody&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;) &lt;span class="pl-k"&gt;do&lt;/span&gt;
  ...
  &lt;span class="pl-k"&gt;end&lt;/span&gt;
&lt;span class="pl-k"&gt;end&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h2&gt;&lt;a id="user-content-configuring-and-adding-drivers" class="anchor" aria-hidden="true" href="#configuring-and-adding-drivers"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;a name="user-content-configuring-and-adding-drivers"&gt;&lt;/a&gt;Configuring and adding drivers&lt;/h2&gt;
&lt;p&gt;Capybara makes it convenient to switch between different drivers. It also exposes
an API to tweak those drivers with whatever settings you want, or to add your own
drivers. This is how to override the selenium driver configuration to use chrome:&lt;/p&gt;
&lt;div class="highlight highlight-source-ruby"&gt;&lt;pre&gt;&lt;span class="pl-c1"&gt;Capybara&lt;/span&gt;.register_driver &lt;span class="pl-c1"&gt;:selenium&lt;/span&gt; &lt;span class="pl-k"&gt;do&lt;/span&gt; |&lt;span class="pl-smi"&gt;app&lt;/span&gt;|
  &lt;span class="pl-c1"&gt;Capybara&lt;/span&gt;::&lt;span class="pl-c1"&gt;Selenium&lt;/span&gt;::&lt;span class="pl-c1"&gt;Driver&lt;/span&gt;.&lt;span class="pl-k"&gt;new&lt;/span&gt;(app, &lt;span class="pl-c1"&gt;:browser&lt;/span&gt; =&amp;gt; &lt;span class="pl-c1"&gt;:chrome&lt;/span&gt;)
&lt;span class="pl-k"&gt;end&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;However, it's also possible to give this configuration a different name.&lt;/p&gt;
&lt;div class="highlight highlight-source-ruby"&gt;&lt;pre&gt;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; Note: Capybara registers this by default&lt;/span&gt;
&lt;span class="pl-c1"&gt;Capybara&lt;/span&gt;.register_driver &lt;span class="pl-c1"&gt;:selenium_chrome&lt;/span&gt; &lt;span class="pl-k"&gt;do&lt;/span&gt; |&lt;span class="pl-smi"&gt;app&lt;/span&gt;|
  &lt;span class="pl-c1"&gt;Capybara&lt;/span&gt;::&lt;span class="pl-c1"&gt;Selenium&lt;/span&gt;::&lt;span class="pl-c1"&gt;Driver&lt;/span&gt;.&lt;span class="pl-k"&gt;new&lt;/span&gt;(app, &lt;span class="pl-c1"&gt;:browser&lt;/span&gt; =&amp;gt; &lt;span class="pl-c1"&gt;:chrome&lt;/span&gt;)
&lt;span class="pl-k"&gt;end&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Then tests can switch between using different browsers effortlessly:&lt;/p&gt;
&lt;div class="highlight highlight-source-ruby"&gt;&lt;pre&gt;&lt;span class="pl-c1"&gt;Capybara&lt;/span&gt;.current_driver &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;:selenium_chrome&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Whatever is returned from the block should conform to the API described by
Capybara::Driver::Base, it does not however have to inherit from this class.
Gems can use this API to add their own drivers to Capybara.&lt;/p&gt;
&lt;p&gt;The &lt;a href="https://github.com/SeleniumHQ/selenium/wiki/Ruby-Bindings"&gt;Selenium wiki&lt;/a&gt; has
additional info about how the underlying driver can be configured.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-gotchas" class="anchor" aria-hidden="true" href="#gotchas"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;a name="user-content-gotchas"&gt;&lt;/a&gt;Gotchas:&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Access to session and request is not possible from the test, Access to
response is limited. Some drivers allow access to response headers and HTTP
status code, but this kind of functionality is not provided by some drivers,
such as Selenium.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Access to Rails specific stuff (such as &lt;code&gt;controller&lt;/code&gt;) is unavailable,
since we're not using Rails' integration testing.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Freezing time: It's common practice to mock out the Time so that features
that depend on the current Date work as expected. This can be problematic on
ruby/platform combinations that don't support access to a monotonic process clock,
since Capybara's Ajax timing uses the system time, resulting in Capybara
never timing out and just hanging when a failure occurs. It's still possible to
use gems which allow you to travel in time, rather than freeze time.
One such gem is &lt;a href="https://github.com/travisjeffery/timecop"&gt;Timecop&lt;/a&gt;.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;When using Rack::Test, beware if attempting to visit absolute URLs. For
example, a session might not be shared between visits to &lt;code&gt;posts_path&lt;/code&gt;
and &lt;code&gt;posts_url&lt;/code&gt;. If testing an absolute URL in an Action Mailer email,
set &lt;code&gt;default_url_options&lt;/code&gt; to match the Rails default of
&lt;code&gt;www.example.com&lt;/code&gt;.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Server errors will only be raised in the session that initiates the server thread. If you
are testing for specific server errors and using multiple sessions make sure to test for the
errors using the initial session (usually :default)&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-threadsafe-mode" class="anchor" aria-hidden="true" href="#threadsafe-mode"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;a name="user-content-threadsafe"&gt;&lt;/a&gt;"Threadsafe" mode&lt;/h2&gt;
&lt;p&gt;In normal mode most of Capybara's configuration options are global settings which can cause issues
if using multiple sessions and wanting to change a setting for only one of the sessions.  To provide
support for this type of usage Capybara now provides a "threadsafe" mode which can be enabled by setting&lt;/p&gt;
&lt;div class="highlight highlight-source-ruby"&gt;&lt;pre&gt;&lt;span class="pl-c1"&gt;Capybara&lt;/span&gt;.threadsafe &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;true&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;This setting can only be changed before any sessions have been created.  In "threadsafe" mode the following
behaviors of Capybara change&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Most options can now be set on a session.  These can either be set at session creation time or after, and
default to the global options at the time of session creation.  Options which are NOT session specific are
&lt;code&gt;app&lt;/code&gt;, &lt;code&gt;reuse_server&lt;/code&gt;, &lt;code&gt;default_driver&lt;/code&gt;, &lt;code&gt;javascript_driver&lt;/code&gt;, and (obviously) &lt;code&gt;threadsafe&lt;/code&gt;.  Any drivers and servers
registered through &lt;code&gt;register_driver&lt;/code&gt; and &lt;code&gt;register_server&lt;/code&gt; are also global.&lt;/p&gt;
&lt;div class="highlight highlight-source-ruby"&gt;&lt;pre&gt;my_session &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;Capybara&lt;/span&gt;::&lt;span class="pl-c1"&gt;Session&lt;/span&gt;.&lt;span class="pl-k"&gt;new&lt;/span&gt;(&lt;span class="pl-c1"&gt;:driver&lt;/span&gt;, some_app) &lt;span class="pl-k"&gt;do&lt;/span&gt; |&lt;span class="pl-smi"&gt;config&lt;/span&gt;|
  config.automatic_label_click &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;true&lt;/span&gt; &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; only set for my_session&lt;/span&gt;
&lt;span class="pl-k"&gt;end&lt;/span&gt;
my_session.config.default_max_wait_time &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;10&lt;/span&gt; &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; only set for my_session&lt;/span&gt;
&lt;span class="pl-c1"&gt;Capybara&lt;/span&gt;.default_max_wait_time &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;2&lt;/span&gt; &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; will not change the default_max_wait in my_session&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;current_driver&lt;/code&gt; and &lt;code&gt;session_name&lt;/code&gt; are thread specific.  This means that &lt;code&gt;using_session&lt;/code&gt; and
&lt;code&gt;using_driver&lt;/code&gt; also only affect the current thread.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-development" class="anchor" aria-hidden="true" href="#development"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;a name="user-content-development"&gt;&lt;/a&gt;Development&lt;/h2&gt;
&lt;p&gt;To set up a development environment, simply do:&lt;/p&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt;bundle install
bundle &lt;span class="pl-c1"&gt;exec&lt;/span&gt; rake  &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; run the test suite with Firefox - requires `geckodriver` to be installed&lt;/span&gt;
bundle &lt;span class="pl-c1"&gt;exec&lt;/span&gt; rake spec_chrome &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; run the test suite with Chrome - require `chromedriver` to be installed&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;See
&lt;a href="https://github.com/teamcapybara/capybara/blob/master/CONTRIBUTING.md"&gt;CONTRIBUTING.md&lt;/a&gt;
for how to send issues and pull requests.&lt;/p&gt;
&lt;/article&gt;&lt;/div&gt;</description><author>teamcapybara</author><guid isPermaLink="false">https://github.com/teamcapybara/capybara</guid><pubDate>Fri, 01 Nov 2019 00:00:00 GMT</pubDate></item><item><title>dependabot/dependabot-core #6 in Ruby, This week</title><link>https://github.com/dependabot/dependabot-core</link><description>&lt;p&gt;&lt;i&gt;🤖The core logic behind Dependabot's update PR creation&lt;/i&gt;&lt;/p&gt;&lt;div id="readme" class="instapaper_body md" data-path="README.md"&gt;&lt;article class="markdown-body entry-content p-5" itemprop="text"&gt;&lt;p align="center"&gt;
  &lt;a target="_blank" rel="noopener noreferrer" href="https://camo.githubusercontent.com/a6145a86a8649d835144787251413dcd61cc9259/68747470733a2f2f73332e65752d776573742d322e616d617a6f6e6177732e636f6d2f646570656e6461626f742d696d616765732f6c6f676f2d776974682d6e616d652d686f72697a6f6e74616c2e7376673f7635"&gt;&lt;img src="https://camo.githubusercontent.com/a6145a86a8649d835144787251413dcd61cc9259/68747470733a2f2f73332e65752d776573742d322e616d617a6f6e6177732e636f6d2f646570656e6461626f742d696d616765732f6c6f676f2d776974682d6e616d652d686f72697a6f6e74616c2e7376673f7635" alt="Dependabot" width="336" data-canonical-src="https://s3.eu-west-2.amazonaws.com/dependabot-images/logo-with-name-horizontal.svg?v5" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;/p&gt;
&lt;h1&gt;&lt;a id="user-content-dependabot-core-" class="anchor" aria-hidden="true" href="#dependabot-core-"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Dependabot Core &lt;a href="https://dependabot.com" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/edf5f70aec36a1c4248fd2d3e40e29c6073122f4/68747470733a2f2f6170692e646570656e6461626f742e636f6d2f6261646765732f7374617475733f686f73743d676974687562266964656e7469666965723d3933313633303733" alt="Dependabot Status" data-canonical-src="https://api.dependabot.com/badges/status?host=github&amp;amp;identifier=93163073" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/h1&gt;
&lt;p&gt;Dependabot Core is the heart of &lt;a href="https://dependabot.com" rel="nofollow"&gt;Dependabot&lt;/a&gt;. It handles the logic
for updating dependencies on GitHub (including GitHub Enterprise), GitLab and
Azure DevOps.&lt;/p&gt;
&lt;p&gt;If you want to host your own automated dependency update bot then this repo
should give you the tools you need. A reference implementation is available
&lt;a href="https://github.com/dependabot/dependabot-script"&gt;here&lt;/a&gt;.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-whats-in-this-repo" class="anchor" aria-hidden="true" href="#whats-in-this-repo"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;What's in this repo?&lt;/h2&gt;
&lt;p&gt;Dependabot Core is a collection of packages for automating dependency updating
in Ruby, JavaScript, Python, PHP, Elixir, Elm, Go, Rust, Java and
.NET. It can also update git submodules, Docker files, and Terraform files.
Highlights include:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Logic to check for the latest version of a dependency &lt;em&gt;that's resolvable given
a project's other dependencies&lt;/em&gt;&lt;/li&gt;
&lt;li&gt;Logic to generate updated manifest and lockfiles for a new dependency version&lt;/li&gt;
&lt;li&gt;Logic to find changelogs, release notes, and commits for a dependency update&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-other-dependabot-resources" class="anchor" aria-hidden="true" href="#other-dependabot-resources"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Other Dependabot resources&lt;/h2&gt;
&lt;p&gt;In addition to this library, you may be interested in:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;The &lt;a href="https://github.com/dependabot/dependabot-script"&gt;dependabot-script&lt;/a&gt; repo, which provides a collection
of scripts that use this library to update dependencies on GitHub Enterprise,
GitLab or Azure DevOps&lt;/li&gt;
&lt;li&gt;The &lt;a href="https://github.com/dependabot/api-docs"&gt;API docs&lt;/a&gt; for Dependabot's hosted instance (dependabot.com)&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-setup" class="anchor" aria-hidden="true" href="#setup"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Setup&lt;/h2&gt;
&lt;p&gt;To run all of Dependabot Core, you'll need Ruby, Python, PHP, Elixir, Node, Go,
Elm, and Rust installed. However, if you just wish to run it for a single
language you can get away with just having that language and Ruby.&lt;/p&gt;
&lt;p&gt;The main library is written in Ruby, while JavaScript, Python, PHP, Elm,
Elixir, Go, and Rust are required for dealing with updates for their respective
languages.&lt;/p&gt;
&lt;p&gt;To install the helpers for each language:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;&lt;code&gt;cd npm_and_yarn/helpers &amp;amp;&amp;amp; yarn install --production &amp;amp;&amp;amp; cd -&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;cd composer/helpers &amp;amp;&amp;amp; composer install --no-dev &amp;amp;&amp;amp; cd -&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;cd python/helpers &amp;amp;&amp;amp; pyenv exec pip install -r requirements.txt &amp;amp;&amp;amp; cd -&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;cd hex/helpers &amp;amp;&amp;amp; mix deps.get &amp;amp;&amp;amp; cd -&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;cd terraform &amp;amp;&amp;amp; helpers/build "$(pwd)/helpers/install-dir/terraform" &amp;amp;&amp;amp; cd -&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;cd go_modules &amp;amp;&amp;amp; helpers/build "$(pwd)/helpers/install-dir/go_modules" &amp;amp;&amp;amp; cd -&lt;/code&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;h2&gt;&lt;a id="user-content-local-development" class="anchor" aria-hidden="true" href="#local-development"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Local development&lt;/h2&gt;
&lt;p&gt;Run the tests by running &lt;code&gt;rspec spec&lt;/code&gt; inside each of the packages. Style is
enforced by RuboCop. To check for style violations, simply run &lt;code&gt;rubocop&lt;/code&gt; in
each of the packages.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-running-with-docker" class="anchor" aria-hidden="true" href="#running-with-docker"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Running with Docker&lt;/h3&gt;
&lt;p&gt;While you can run Dependabot Core without Docker, we also provide a development
Dockerfile. In most cases, you'll be better off running Dependabot in the
development Docker container as it bakes in all required dependencies.&lt;/p&gt;
&lt;p&gt;Start by building the initial Dependabot Core image, or pull it from the
Docker registry.&lt;/p&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt;$ docker pull dependabot/dependabot-core &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; OR&lt;/span&gt;
$ docker build -f Dockerfile -t dependabot/dependabot-core &lt;span class="pl-c1"&gt;.&lt;/span&gt; &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; This may take a while&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Once you have the base Docker image, you can build and run the development
container using the &lt;code&gt;docker-dev-shell&lt;/code&gt; script. The script will automatically
build the container if it's not present and can be forced to rebuild with the
&lt;code&gt;--rebuild&lt;/code&gt; flag. The image includes all dependencies, and the script runs the
image, mounting the local copy of Dependabot Core so changes made locally will
be reflected inside the container. This means you can continue to use your
editor of choice while running the tests inside the container.&lt;/p&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt;$ bin/docker-dev-shell
=&lt;span class="pl-k"&gt;&amp;gt;&lt;/span&gt; building image from Dockerfile.development
=&lt;span class="pl-k"&gt;&amp;gt;&lt;/span&gt; running docker development shell
[dependabot-core-dev] &lt;span class="pl-k"&gt;~&lt;/span&gt;/dependabot-core $&lt;/pre&gt;&lt;/div&gt;
&lt;h3&gt;&lt;a id="user-content-dry-run-script" class="anchor" aria-hidden="true" href="#dry-run-script"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Dry run script&lt;/h3&gt;
&lt;p&gt;&lt;em&gt;Note: you must have run &lt;code&gt;bundle install&lt;/code&gt; in the &lt;code&gt;omnibus&lt;/code&gt; directory before
running this script.&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;You can use the "dry-run" script to simulate a dependency update job, printing
the diff that would be generated to the terminal. It takes two positional
arguments: the package manager and the GitHub repo name (including the
account):&lt;/p&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt;$ &lt;span class="pl-c1"&gt;cd&lt;/span&gt; omnibus &lt;span class="pl-k"&gt;&amp;amp;&amp;amp;&lt;/span&gt; bundle install &lt;span class="pl-k"&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class="pl-c1"&gt;cd&lt;/span&gt; -
$ bin/dry-run.rb go_modules rsc/quote
=&lt;span class="pl-k"&gt;&amp;gt;&lt;/span&gt; fetching dependency files
=&lt;span class="pl-k"&gt;&amp;gt;&lt;/span&gt; parsing dependency files
=&lt;span class="pl-k"&gt;&amp;gt;&lt;/span&gt; updating 2 dependencies
...&lt;/pre&gt;&lt;/div&gt;
&lt;h2&gt;&lt;a id="user-content-debugging-with-visual-studio-code-and-docker" class="anchor" aria-hidden="true" href="#debugging-with-visual-studio-code-and-docker"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Debugging with Visual Studio Code and Docker&lt;/h2&gt;
&lt;p&gt;There's built-in support for leveraging Visual Studio Code's &lt;a href="https://code.visualstudio.com/docs/remote/containers" rel="nofollow"&gt;ability for
debugging&lt;/a&gt; inside a Docker container.
After installing the recommended &lt;a href="https://marketplace.visualstudio.com/items?itemName=ms-vscode-remote.remote-containers" rel="nofollow"&gt;&lt;code&gt;Remote - Containers&lt;/code&gt; extension&lt;/a&gt;,
simply press &lt;code&gt;Ctrl+Shift+P&lt;/code&gt; (&lt;code&gt;⇧⌘P&lt;/code&gt; on macOS) and select &lt;code&gt;Remote-Containers: Reopen in Container&lt;/code&gt;.
You can also access the dropdown by clicking on the green button in the bottom-left corner of the editor.
If the development Docker image isn't present on your machine, it will be built automatically.
Once that's finished, start the &lt;code&gt;Debug Dry Run&lt;/code&gt; configuration &lt;code&gt;(F5)&lt;/code&gt; and you'll be prompted
to select a package manager and a repository to perform a dry run on.
Feel free to place breakpoints on the code.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-releasing" class="anchor" aria-hidden="true" href="#releasing"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Releasing&lt;/h2&gt;
&lt;p&gt;Triggering the jobs that will push the new gems is done by following the steps below.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Ensure you have the latest merged changes:  &lt;code&gt;git checkout master&lt;/code&gt; and &lt;code&gt;git pull&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Generate an updated &lt;code&gt;CHANGELOG&lt;/code&gt;, &lt;code&gt;version.rb&lt;/code&gt;, and the rest of the needed commands:  &lt;code&gt;bin/bump-version.rb patch&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Edit the &lt;code&gt;CHANGELOG&lt;/code&gt; file and remove any entries that aren't needed&lt;/li&gt;
&lt;li&gt;Run the commands that were output by running &lt;code&gt;bin/bump-version.rb patch&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-architecture" class="anchor" aria-hidden="true" href="#architecture"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Architecture&lt;/h2&gt;
&lt;p&gt;Dependabot Core is a collection of Ruby packages (gems), which contain the
logic for updating dependencies in several languages.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-dependabot-common" class="anchor" aria-hidden="true" href="#dependabot-common"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;code&gt;dependabot-common&lt;/code&gt;&lt;/h3&gt;
&lt;p&gt;The &lt;code&gt;common&lt;/code&gt; package contains all general-purpose/shared functionality. For
instance, the code for creating pull requests via GitHub's API lives here, as
does most of the logic for handling Git dependencies (as most languages support
Git dependencies in one way or another). There are also base classes defined for
each of the major concerns required to implement support for a language or
package manager.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-dependabot-package-manager" class="anchor" aria-hidden="true" href="#dependabot-package-manager"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;code&gt;dependabot-{package-manager}&lt;/code&gt;&lt;/h3&gt;
&lt;p&gt;There is a gem for each package manager or language that Dependabot
supports. At a minimum, each of these gems will implement the following
classes:&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Service&lt;/th&gt;
&lt;th&gt;Description&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;FileFetcher&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;Fetches the relevant dependency files for a project (e.g., the &lt;code&gt;Gemfile&lt;/code&gt; and &lt;code&gt;Gemfile.lock&lt;/code&gt;). See the &lt;a href="https://github.com/dependabot/dependabot-core/blob/master/common/lib/dependabot/file_fetchers/README.md"&gt;README&lt;/a&gt; for more details.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;FileParser&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;Parses a dependency file and extracts a list of dependencies for a project. See the &lt;a href="https://github.com/dependabot/dependabot-core/blob/master/common/lib/dependabot/file_parsers/README.md"&gt;README&lt;/a&gt; for more details.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;UpdateChecker&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;Checks whether a given dependency is up-to-date. See the &lt;a href="https://github.com/dependabot/dependabot-core/tree/master/common/lib/dependabot/update_checkers/README.md"&gt;README&lt;/a&gt; for more details.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;FileUpdater&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;Updates a dependency file to use the latest version of a given dependency. See the &lt;a href="https://github.com/dependabot/dependabot-core/tree/master/common/lib/dependabot/file_updaters/README.md"&gt;README&lt;/a&gt; for more details.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;MetadataFinder&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;Looks up metadata about a dependency, such as its GitHub URL. See the &lt;a href="https://github.com/dependabot/dependabot-core/tree/master/common/lib/dependabot/metadata_finders/README.md"&gt;README&lt;/a&gt; for more details.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;Version&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;Describes the logic for comparing dependency versions. See the &lt;a href="https://github.com/dependabot/dependabot-core/blob/master/hex/lib/dependabot/hex/version.rb"&gt;hex Version class&lt;/a&gt; for an example.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;Requirement&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;Describes the format of a dependency requirement (e.g. &lt;code&gt;&amp;gt;= 1.2.3&lt;/code&gt;). See the &lt;a href="https://github.com/dependabot/dependabot-core/blob/master/hex/lib/dependabot/hex/requirement.rb"&gt;hex Requirement class&lt;/a&gt; for an example.&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;The high-level flow looks like this:&lt;/p&gt;
&lt;p align="center"&gt;
  &lt;a target="_blank" rel="noopener noreferrer" href="https://camo.githubusercontent.com/3f164a54c0e2298483e81534cc979668d7ab9bfa/68747470733a2f2f73332e65752d776573742d322e616d617a6f6e6177732e636f6d2f646570656e6461626f742d696d616765732f7061636b6167652d6d616e616765722d6172636869746563747572652e737667"&gt;&lt;img src="https://camo.githubusercontent.com/3f164a54c0e2298483e81534cc979668d7ab9bfa/68747470733a2f2f73332e65752d776573742d322e616d617a6f6e6177732e636f6d2f646570656e6461626f742d696d616765732f7061636b6167652d6d616e616765722d6172636869746563747572652e737667" alt="Dependabot architecture" data-canonical-src="https://s3.eu-west-2.amazonaws.com/dependabot-images/package-manager-architecture.svg" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-dependabot-omnibus" class="anchor" aria-hidden="true" href="#dependabot-omnibus"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;code&gt;dependabot-omnibus&lt;/code&gt;&lt;/h3&gt;
&lt;p&gt;This is a "meta" gem, that simply depends on all the others. If you want to
automatically include support for all languages, you can just include this gem
and you'll get all you need.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-why-is-this-public" class="anchor" aria-hidden="true" href="#why-is-this-public"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Why is this public?&lt;/h2&gt;
&lt;p&gt;As the name suggests, Dependabot Core is the core of Dependabot (the rest of the
app is pretty much just a UI and database). If we were paranoid about someone
stealing our business then we'd be keeping it under lock and key.&lt;/p&gt;
&lt;p&gt;Dependabot Core is public because we're more interested in it having an
impact than we are in making a buck from it. We'd love you to use
&lt;a href="https://dependabot.com" rel="nofollow"&gt;Dependabot&lt;/a&gt; so that we can continue to develop it, but if you want
to build and host your own version then this library should make doing so a
&lt;em&gt;lot&lt;/em&gt; easier.&lt;/p&gt;
&lt;p&gt;If you use Dependabot Core then we'd love to hear what you build!&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-license" class="anchor" aria-hidden="true" href="#license"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;License&lt;/h2&gt;
&lt;p&gt;We use the License Zero Prosperity Public License, which essentially enshrines
the following:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;If you would like to use Dependabot Core in a non-commercial capacity, such as
to host a bot at your workplace, then we give you full permission to do so. In
fact, we'd love you to and will help and support you however we can.&lt;/li&gt;
&lt;li&gt;If you would like to add Dependabot's functionality to your for-profit
company's offering then we DO NOT give you permission to use Dependabot Core
to do so. Please contact us directly to discuss a partnership or licensing
arrangement.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;If you make a significant contribution to Dependabot Core then you will be asked
to transfer the IP of that contribution to Dependabot Ltd so that it can be
licensed in the same way as the above.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-history" class="anchor" aria-hidden="true" href="#history"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;History&lt;/h2&gt;
&lt;p&gt;Dependabot and Dependabot Core started life as &lt;a href="https://github.com/gocardless/bump"&gt;Bump&lt;/a&gt; and
&lt;a href="https://github.com/gocardless/bump-core"&gt;Bump Core&lt;/a&gt;, back when Harry and Grey were working at
&lt;a href="https://gocardless.com" rel="nofollow"&gt;GoCardless&lt;/a&gt;. We remain grateful for the help and support of
GoCardless in helping make Dependabot possible - if you need to collect
recurring payments from Europe, check them out.&lt;/p&gt;
&lt;/article&gt;&lt;/div&gt;</description><author>dependabot</author><guid isPermaLink="false">https://github.com/dependabot/dependabot-core</guid><pubDate>Fri, 01 Nov 2019 00:00:00 GMT</pubDate></item><item><title>thoughtbot/guides #7 in Ruby, This week</title><link>https://github.com/thoughtbot/guides</link><description>&lt;p&gt;&lt;i&gt;A guide for programming in style.&lt;/i&gt;&lt;/p&gt;&lt;div id="readme" class="instapaper_body md" data-path="README.md"&gt;&lt;article class="markdown-body entry-content p-5" itemprop="text"&gt;&lt;h1&gt;&lt;a id="user-content-guides" class="anchor" aria-hidden="true" href="#guides"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Guides&lt;/h1&gt;
&lt;p&gt;&lt;a href="https://houndci.com" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/1c940d021ef775a44e0880bc3ba124a6bee5fefb/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f52657669657765645f62792d486f756e642d3845363442302e737667" alt="Reviewed by Hound" data-canonical-src="https://img.shields.io/badge/Reviewed_by-Hound-8E64B0.svg" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Guides for getting things done, programming well, and programming in style.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="./best-practices"&gt;Best Practices&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="./code-review"&gt;Code Review&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="./how-to"&gt;How to&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="./protocol"&gt;Protocol&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="./protocol/communication"&gt;Communication&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="./protocol/git"&gt;Git&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="./protocol/ios"&gt;iOS&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="./protocol/open-source"&gt;Open Source&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="./protocol/product-review"&gt;Product Review&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="./protocol/rails"&gt;Rails&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="./protocol/react"&gt;React&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="./security"&gt;Security&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="./style"&gt;Style&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="./web-performance"&gt;Web Performance&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="./working-together"&gt;Working Together&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;High level guidelines:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Be consistent.&lt;/li&gt;
&lt;li&gt;Don't rewrite existing code to follow this guide.&lt;/li&gt;
&lt;li&gt;Don't violate a guideline without a good reason.&lt;/li&gt;
&lt;li&gt;A reason is good when you can convince a teammate.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;A note on the language:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;"Avoid" means don't do it unless you have good reason.&lt;/li&gt;
&lt;li&gt;"Don't" means there's never a good reason.&lt;/li&gt;
&lt;li&gt;"Prefer" indicates a better option and its alternative to watch out for.&lt;/li&gt;
&lt;li&gt;"Use" is a positive instruction.&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-contributing" class="anchor" aria-hidden="true" href="#contributing"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Contributing&lt;/h2&gt;
&lt;p&gt;Please read the &lt;a href="/CONTRIBUTING.md"&gt;contribution guidelines&lt;/a&gt; before submitting a pull request.&lt;/p&gt;
&lt;p&gt;In particular: &lt;strong&gt;if you have commit access, please don't merge changes without
waiting a week for everybody to leave feedback&lt;/strong&gt;.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-credits" class="anchor" aria-hidden="true" href="#credits"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Credits&lt;/h2&gt;
&lt;p&gt;Thank you, &lt;a href="https://github.com/thoughtbot/guides/graphs/contributors"&gt;contributors&lt;/a&gt;!&lt;/p&gt;
&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="https://camo.githubusercontent.com/34658edc824fd6980485133439a19f0682f3df89/687474703a2f2f70726573736b69742e74686f75676874626f742e636f6d2f696d616765732f74686f75676874626f742d6c6f676f2d666f722d726561646d65732e737667"&gt;&lt;img src="https://camo.githubusercontent.com/34658edc824fd6980485133439a19f0682f3df89/687474703a2f2f70726573736b69742e74686f75676874626f742e636f6d2f696d616765732f74686f75676874626f742d6c6f676f2d666f722d726561646d65732e737667" alt="thoughtbot" data-canonical-src="http://presskit.thoughtbot.com/images/thoughtbot-logo-for-readmes.svg" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Guides is maintained by &lt;a href="https://thoughtbot.com" rel="nofollow"&gt;thoughtbot, inc&lt;/a&gt;.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-license" class="anchor" aria-hidden="true" href="#license"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;License&lt;/h2&gt;
&lt;p&gt;Guides is © 2018 thoughtbot, inc. It is distributed under the &lt;a href="http://creativecommons.org/licenses/by/3.0/" rel="nofollow"&gt;Creative Commons
Attribution License&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;The names and logos for thoughtbot are trademarks of thoughtbot, inc.&lt;/p&gt;
&lt;/article&gt;&lt;/div&gt;</description><author>thoughtbot</author><guid isPermaLink="false">https://github.com/thoughtbot/guides</guid><pubDate>Fri, 01 Nov 2019 00:00:00 GMT</pubDate></item><item><title>plataformatec/devise #8 in Ruby, This week</title><link>https://github.com/plataformatec/devise</link><description>&lt;p&gt;&lt;i&gt;Flexible authentication solution for Rails with Warden.&lt;/i&gt;&lt;/p&gt;&lt;div id="readme" class="instapaper_body md" data-path="README.md"&gt;&lt;article class="markdown-body entry-content p-5" itemprop="text"&gt;&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="https://camo.githubusercontent.com/b1c21cc10f2f94857dea5135fe55f2e4d451e028/68747470733a2f2f7261772e6769746875622e636f6d2f706c617461666f726d617465632f6465766973652f6d61737465722f6465766973652e706e67"&gt;&lt;img src="https://camo.githubusercontent.com/b1c21cc10f2f94857dea5135fe55f2e4d451e028/68747470733a2f2f7261772e6769746875622e636f6d2f706c617461666f726d617465632f6465766973652f6d61737465722f6465766973652e706e67" alt="Devise Logo" data-canonical-src="https://raw.github.com/plataformatec/devise/master/devise.png" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;By &lt;a href="http://plataformatec.com.br/" rel="nofollow"&gt;Plataformatec&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;&lt;a href="http://travis-ci.org/plataformatec/devise" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/87a2d44cca6195d8131cac2a9f22b3df736fb82c/68747470733a2f2f6170692e7472617669732d63692e6f72672f706c617461666f726d617465632f6465766973652e7376673f6272616e63683d6d6173746572" alt="Build Status" data-canonical-src="https://api.travis-ci.org/plataformatec/devise.svg?branch=master" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://codeclimate.com/github/plataformatec/devise" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/e2e0abaea81e1deb12d1498f9816537ce2868bbd/68747470733a2f2f636f6465636c696d6174652e636f6d2f6769746875622f706c617461666f726d617465632f6465766973652e737667" alt="Code Climate" data-canonical-src="https://codeclimate.com/github/plataformatec/devise.svg" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;This README is &lt;a href="http://devise.plataformatec.com.br/" rel="nofollow"&gt;also available in a friendly navigable format&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Devise is a flexible authentication solution for Rails based on Warden. It:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Is Rack based;&lt;/li&gt;
&lt;li&gt;Is a complete MVC solution based on Rails engines;&lt;/li&gt;
&lt;li&gt;Allows you to have multiple models signed in at the same time;&lt;/li&gt;
&lt;li&gt;Is based on a modularity concept: use only what you really need.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;It's composed of 10 modules:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://www.rubydoc.info/github/plataformatec/devise/master/Devise/Models/DatabaseAuthenticatable" rel="nofollow"&gt;Database Authenticatable&lt;/a&gt;: hashes and stores a password in the database to validate the authenticity of a user while signing in. The authentication can be done both through POST requests or HTTP Basic Authentication.&lt;/li&gt;
&lt;li&gt;&lt;a href="http://www.rubydoc.info/github/plataformatec/devise/master/Devise/Models/Omniauthable" rel="nofollow"&gt;Omniauthable&lt;/a&gt;: adds OmniAuth (&lt;a href="https://github.com/omniauth/omniauth"&gt;https://github.com/omniauth/omniauth&lt;/a&gt;) support.&lt;/li&gt;
&lt;li&gt;&lt;a href="http://www.rubydoc.info/github/plataformatec/devise/master/Devise/Models/Confirmable" rel="nofollow"&gt;Confirmable&lt;/a&gt;: sends emails with confirmation instructions and verifies whether an account is already confirmed during sign in.&lt;/li&gt;
&lt;li&gt;&lt;a href="http://www.rubydoc.info/github/plataformatec/devise/master/Devise/Models/Recoverable" rel="nofollow"&gt;Recoverable&lt;/a&gt;: resets the user password and sends reset instructions.&lt;/li&gt;
&lt;li&gt;&lt;a href="http://www.rubydoc.info/github/plataformatec/devise/master/Devise/Models/Registerable" rel="nofollow"&gt;Registerable&lt;/a&gt;: handles signing up users through a registration process, also allowing them to edit and destroy their account.&lt;/li&gt;
&lt;li&gt;&lt;a href="http://www.rubydoc.info/github/plataformatec/devise/master/Devise/Models/Rememberable" rel="nofollow"&gt;Rememberable&lt;/a&gt;: manages generating and clearing a token for remembering the user from a saved cookie.&lt;/li&gt;
&lt;li&gt;&lt;a href="http://www.rubydoc.info/github/plataformatec/devise/master/Devise/Models/Trackable" rel="nofollow"&gt;Trackable&lt;/a&gt;: tracks sign in count, timestamps and IP address.&lt;/li&gt;
&lt;li&gt;&lt;a href="http://www.rubydoc.info/github/plataformatec/devise/master/Devise/Models/Timeoutable" rel="nofollow"&gt;Timeoutable&lt;/a&gt;: expires sessions that have not been active in a specified period of time.&lt;/li&gt;
&lt;li&gt;&lt;a href="http://www.rubydoc.info/github/plataformatec/devise/master/Devise/Models/Validatable" rel="nofollow"&gt;Validatable&lt;/a&gt;: provides validations of email and password. It's optional and can be customized, so you're able to define your own validations.&lt;/li&gt;
&lt;li&gt;&lt;a href="http://www.rubydoc.info/github/plataformatec/devise/master/Devise/Models/Lockable" rel="nofollow"&gt;Lockable&lt;/a&gt;: locks an account after a specified number of failed sign-in attempts. Can unlock via email or after a specified time period.&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-table-of-contents" class="anchor" aria-hidden="true" href="#table-of-contents"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Table of Contents&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="#information"&gt;Information&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="#the-devise-wiki"&gt;The Devise wiki&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#bug-reports"&gt;Bug reports&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#stackoverflow-and-mailing-list"&gt;StackOverflow and Mailing List&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#rdocs"&gt;RDocs&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#example-applications"&gt;Example applications&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#extensions"&gt;Extensions&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#contributing"&gt;Contributing&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="#starting-with-rails"&gt;Starting with Rails?&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#getting-started"&gt;Getting started&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="#controller-filters-and-helpers"&gt;Controller filters and helpers&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#configuring-models"&gt;Configuring Models&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#strong-parameters"&gt;Strong Parameters&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#configuring-views"&gt;Configuring views&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#configuring-controllers"&gt;Configuring controllers&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#configuring-routes"&gt;Configuring routes&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#i18n"&gt;I18n&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#test-helpers"&gt;Test helpers&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#controller-tests"&gt;Controller tests&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#integration-tests"&gt;Integration tests&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#omniauth"&gt;OmniAuth&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#configuring-multiple-models"&gt;Configuring multiple models&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#activejob-integration"&gt;ActiveJob Integration&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#password-reset-tokens-and-rails-logs"&gt;Password reset tokens and Rails logs&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#other-orms"&gt;Other ORMs&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#rails-api-mode"&gt;Rails API mode&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="#additional-information"&gt;Additional information&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="#heroku"&gt;Heroku&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#warden"&gt;Warden&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#contributors"&gt;Contributors&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="#license"&gt;License&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;&lt;a id="user-content-information" class="anchor" aria-hidden="true" href="#information"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Information&lt;/h2&gt;
&lt;h3&gt;&lt;a id="user-content-the-devise-wiki" class="anchor" aria-hidden="true" href="#the-devise-wiki"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;The Devise wiki&lt;/h3&gt;
&lt;p&gt;The Devise Wiki has lots of additional information about Devise including many "how-to" articles and answers to the most frequently asked questions. Please browse the Wiki after finishing this README:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://github.com/plataformatec/devise/wiki"&gt;https://github.com/plataformatec/devise/wiki&lt;/a&gt;&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-bug-reports" class="anchor" aria-hidden="true" href="#bug-reports"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Bug reports&lt;/h3&gt;
&lt;p&gt;If you discover a problem with Devise, we would like to know about it. However, we ask that you please review these guidelines before submitting a bug report:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://github.com/plataformatec/devise/wiki/Bug-reports"&gt;https://github.com/plataformatec/devise/wiki/Bug-reports&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;If you have discovered a security related bug, please do &lt;em&gt;NOT&lt;/em&gt; use the GitHub issue tracker. Send an email to &lt;a href="mailto:opensource@plataformatec.com.br"&gt;opensource@plataformatec.com.br&lt;/a&gt;.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-stackoverflow-and-mailing-list" class="anchor" aria-hidden="true" href="#stackoverflow-and-mailing-list"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;StackOverflow and Mailing List&lt;/h3&gt;
&lt;p&gt;If you have any questions, comments, or concerns, please use StackOverflow instead of the GitHub issue tracker:&lt;/p&gt;
&lt;p&gt;&lt;a href="http://stackoverflow.com/questions/tagged/devise" rel="nofollow"&gt;http://stackoverflow.com/questions/tagged/devise&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;The deprecated mailing list can still be read on&lt;/p&gt;
&lt;p&gt;&lt;a href="https://groups.google.com/group/plataformatec-devise" rel="nofollow"&gt;https://groups.google.com/group/plataformatec-devise&lt;/a&gt;&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-rdocs" class="anchor" aria-hidden="true" href="#rdocs"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;RDocs&lt;/h3&gt;
&lt;p&gt;You can view the Devise documentation in RDoc format here:&lt;/p&gt;
&lt;p&gt;&lt;a href="http://rubydoc.info/github/plataformatec/devise/master/frames" rel="nofollow"&gt;http://rubydoc.info/github/plataformatec/devise/master/frames&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;If you need to use Devise with previous versions of Rails, you can always run "gem server" from the command line after you install the gem to access the old documentation.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-example-applications" class="anchor" aria-hidden="true" href="#example-applications"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Example applications&lt;/h3&gt;
&lt;p&gt;There are a few example applications available on GitHub that demonstrate various features of Devise with different versions of Rails. You can view them here:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://github.com/plataformatec/devise/wiki/Example-Applications"&gt;https://github.com/plataformatec/devise/wiki/Example-Applications&lt;/a&gt;&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-extensions" class="anchor" aria-hidden="true" href="#extensions"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Extensions&lt;/h3&gt;
&lt;p&gt;Our community has created a number of extensions that add functionality above and beyond what is included with Devise. You can view a list of available extensions and add your own here:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://github.com/plataformatec/devise/wiki/Extensions"&gt;https://github.com/plataformatec/devise/wiki/Extensions&lt;/a&gt;&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-contributing" class="anchor" aria-hidden="true" href="#contributing"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Contributing&lt;/h3&gt;
&lt;p&gt;We hope that you will consider contributing to Devise. Please read this short overview for some information about how to get started:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://github.com/plataformatec/devise/wiki/Contributing"&gt;https://github.com/plataformatec/devise/wiki/Contributing&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;You will usually want to write tests for your changes.  To run the test suite, go into Devise's top-level directory and run &lt;code&gt;bundle install&lt;/code&gt; and &lt;code&gt;bin/test&lt;/code&gt;.
Devise works with multiple Ruby and Rails versions, and ActiveRecord and Mongoid ORMs, which means you can run the test suite with some modifiers: &lt;code&gt;DEVISE_ORM&lt;/code&gt; and &lt;code&gt;BUNDLE_GEMFILE&lt;/code&gt;.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-devise_orm" class="anchor" aria-hidden="true" href="#devise_orm"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;DEVISE_ORM&lt;/h3&gt;
&lt;p&gt;Since Devise support both Mongoid and ActiveRecord, we rely on this variable to run specific code for each ORM.
The default value of &lt;code&gt;DEVISE_ORM&lt;/code&gt; is &lt;code&gt;active_record&lt;/code&gt;. To run the tests for mongoid, you can pass &lt;code&gt;mongoid&lt;/code&gt;:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;DEVISE_ORM=mongoid bin/test

==&amp;gt; Devise.orm = :mongoid
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;When running the tests for Mongoid, you will need to have a MongoDB server (version 2.0 or newer) running on your system.&lt;/p&gt;
&lt;p&gt;Please note that the command output will show the variable value being used.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-bundle_gemfile" class="anchor" aria-hidden="true" href="#bundle_gemfile"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;BUNDLE_GEMFILE&lt;/h3&gt;
&lt;p&gt;We can use this variable to tell bundler what Gemfile it should use (instead of the one in the current directory).
Inside the &lt;a href="https://github.com/plataformatec/devise/tree/master/gemfiles"&gt;gemfiles&lt;/a&gt; directory, we have one for each version of Rails we support. When you send us a pull request, it may happen that the test suite breaks on Travis using some of them. If that's the case, you can simulate the same environment using the &lt;code&gt;BUNDLE_GEMFILE&lt;/code&gt; variable.
For example, if the tests broke using Ruby 2.4.2 and Rails 4.1, you can do the following:&lt;/p&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt;rbenv shell 2.4.2 &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; or rvm use 2.4.2&lt;/span&gt;
BUNDLE_GEMFILE=gemfiles/Gemfile.rails-4.1-stable bundle install
BUNDLE_GEMFILE=gemfiles/Gemfile.rails-4.1-stable bin/test&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;You can also combine both of them if the tests broke for Mongoid:&lt;/p&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt;BUNDLE_GEMFILE=gemfiles/Gemfile.rails-4.1-stable bundle install
BUNDLE_GEMFILE=gemfiles/Gemfile.rails-4.1-stable DEVISE_ORM=mongoid bin/test&lt;/pre&gt;&lt;/div&gt;
&lt;h3&gt;&lt;a id="user-content-running-tests" class="anchor" aria-hidden="true" href="#running-tests"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Running tests&lt;/h3&gt;
&lt;p&gt;Devise uses &lt;a href="https://github.com/seattlerb/minitest"&gt;Mini Test&lt;/a&gt; as test framework.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Running all tests:&lt;/li&gt;
&lt;/ul&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt;bin/test&lt;/pre&gt;&lt;/div&gt;
&lt;ul&gt;
&lt;li&gt;Running tests for an specific file:&lt;/li&gt;
&lt;/ul&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt;bin/test test/models/trackable_test.rb&lt;/pre&gt;&lt;/div&gt;
&lt;ul&gt;
&lt;li&gt;Running a specific test given a regex:&lt;/li&gt;
&lt;/ul&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt;bin/test test/models/trackable_test.rb:16&lt;/pre&gt;&lt;/div&gt;
&lt;h2&gt;&lt;a id="user-content-starting-with-rails" class="anchor" aria-hidden="true" href="#starting-with-rails"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Starting with Rails?&lt;/h2&gt;
&lt;p&gt;If you are building your first Rails application, we recommend you &lt;em&gt;do not&lt;/em&gt; use Devise. Devise requires a good understanding of the Rails Framework. In such cases, we advise you to start a simple authentication system from scratch. Today, we have three resources that should help you get started:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Michael Hartl's online book: &lt;a href="https://www.railstutorial.org/book/modeling_users" rel="nofollow"&gt;https://www.railstutorial.org/book/modeling_users&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Ryan Bates' Railscast: &lt;a href="http://railscasts.com/episodes/250-authentication-from-scratch" rel="nofollow"&gt;http://railscasts.com/episodes/250-authentication-from-scratch&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Codecademy's Ruby on Rails: Authentication and Authorization: &lt;a href="https://www.codecademy.com/learn/rails-auth" rel="nofollow"&gt;https://www.codecademy.com/learn/rails-auth&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Once you have solidified your understanding of Rails and authentication mechanisms, we assure you Devise will be very pleasant to work with. &lt;g-emoji class="g-emoji" alias="smiley" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f603.png"&gt;😃&lt;/g-emoji&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-getting-started" class="anchor" aria-hidden="true" href="#getting-started"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Getting started&lt;/h2&gt;
&lt;p&gt;Devise 4.0 works with Rails 4.1 onwards. Add the following line to your Gemfile:&lt;/p&gt;
&lt;div class="highlight highlight-source-ruby"&gt;&lt;pre&gt;gem &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;devise&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Then run &lt;code&gt;bundle install&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Next, you need to run the generator:&lt;/p&gt;
&lt;div class="highlight highlight-text-shell-session"&gt;&lt;pre&gt;$ &lt;span class="pl-s1"&gt;rails generate devise:install&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;At this point, a number of instructions will appear in the console. Among these instructions, you'll need to set up the default URL options for the Devise mailer in each environment. Here is a possible configuration for &lt;code&gt;config/environments/development.rb&lt;/code&gt;:&lt;/p&gt;
&lt;div class="highlight highlight-source-ruby"&gt;&lt;pre&gt;config.action_mailer.default_url_options &lt;span class="pl-k"&gt;=&lt;/span&gt; { &lt;span class="pl-c1"&gt;host:&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;localhost&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-c1"&gt;port:&lt;/span&gt; &lt;span class="pl-c1"&gt;3000&lt;/span&gt; }&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;The generator will install an initializer which describes ALL of Devise's configuration options. It is &lt;em&gt;imperative&lt;/em&gt; that you take a look at it. When you are done, you are ready to add Devise to any of your models using the generator.&lt;/p&gt;
&lt;p&gt;In the following command you will replace &lt;code&gt;MODEL&lt;/code&gt; with the class name used for the application’s users (it’s frequently &lt;code&gt;User&lt;/code&gt; but could also be &lt;code&gt;Admin&lt;/code&gt;). This will create a model (if one does not exist) and configure it with the default Devise modules. The generator also configures your &lt;code&gt;config/routes.rb&lt;/code&gt; file to point to the Devise controller.&lt;/p&gt;
&lt;div class="highlight highlight-text-shell-session"&gt;&lt;pre&gt;$ &lt;span class="pl-s1"&gt;rails generate devise MODEL&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Next, check the MODEL for any additional configuration options you might want to add, such as confirmable or lockable. If you add an option, be sure to inspect the migration file (created by the generator if your ORM supports them) and uncomment the appropriate section.  For example, if you add the confirmable option in the model, you'll need to uncomment the Confirmable section in the migration.&lt;/p&gt;
&lt;p&gt;Then run &lt;code&gt;rails db:migrate&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;You should restart your application after changing Devise's configuration options (this includes stopping spring). Otherwise, you will run into strange errors, for example, users being unable to login and route helpers being undefined.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-controller-filters-and-helpers" class="anchor" aria-hidden="true" href="#controller-filters-and-helpers"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Controller filters and helpers&lt;/h3&gt;
&lt;p&gt;Devise will create some helpers to use inside your controllers and views. To set up a controller with user authentication, just add this before_action (assuming your devise model is 'User'):&lt;/p&gt;
&lt;div class="highlight highlight-source-ruby"&gt;&lt;pre&gt;before_action &lt;span class="pl-c1"&gt;:authenticate_user!&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;For Rails 5, note that &lt;code&gt;protect_from_forgery&lt;/code&gt; is no longer prepended to the &lt;code&gt;before_action&lt;/code&gt; chain, so if you have set &lt;code&gt;authenticate_user&lt;/code&gt; before &lt;code&gt;protect_from_forgery&lt;/code&gt;, your request will result in "Can't verify CSRF token authenticity." To resolve this, either change the order in which you call them, or use &lt;code&gt;protect_from_forgery prepend: true&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;If your devise model is something other than User, replace "_user" with "_yourmodel". The same logic applies to the instructions below.&lt;/p&gt;
&lt;p&gt;To verify if a user is signed in, use the following helper:&lt;/p&gt;
&lt;div class="highlight highlight-source-ruby"&gt;&lt;pre&gt;user_signed_in?&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;For the current signed-in user, this helper is available:&lt;/p&gt;
&lt;div class="highlight highlight-source-ruby"&gt;&lt;pre&gt;current_user&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;You can access the session for this scope:&lt;/p&gt;
&lt;div class="highlight highlight-source-ruby"&gt;&lt;pre&gt;user_session&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;After signing in a user, confirming the account or updating the password, Devise will look for a scoped root path to redirect to. For instance, when using a &lt;code&gt;:user&lt;/code&gt; resource, the &lt;code&gt;user_root_path&lt;/code&gt; will be used if it exists; otherwise, the default &lt;code&gt;root_path&lt;/code&gt; will be used. This means that you need to set the root inside your routes:&lt;/p&gt;
&lt;div class="highlight highlight-source-ruby"&gt;&lt;pre&gt;root &lt;span class="pl-c1"&gt;to:&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;home#index&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;You can also override &lt;code&gt;after_sign_in_path_for&lt;/code&gt; and &lt;code&gt;after_sign_out_path_for&lt;/code&gt; to customize your redirect hooks.&lt;/p&gt;
&lt;p&gt;Notice that if your Devise model is called &lt;code&gt;Member&lt;/code&gt; instead of &lt;code&gt;User&lt;/code&gt;, for example, then the helpers available are:&lt;/p&gt;
&lt;div class="highlight highlight-source-ruby"&gt;&lt;pre&gt;before_action &lt;span class="pl-c1"&gt;:authenticate_member!&lt;/span&gt;

member_signed_in?

current_member

member_session&lt;/pre&gt;&lt;/div&gt;
&lt;h3&gt;&lt;a id="user-content-configuring-models" class="anchor" aria-hidden="true" href="#configuring-models"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Configuring Models&lt;/h3&gt;
&lt;p&gt;The Devise method in your models also accepts some options to configure its modules. For example, you can choose the cost of the hashing algorithm with:&lt;/p&gt;
&lt;div class="highlight highlight-source-ruby"&gt;&lt;pre&gt;devise &lt;span class="pl-c1"&gt;:database_authenticatable&lt;/span&gt;, &lt;span class="pl-c1"&gt;:registerable&lt;/span&gt;, &lt;span class="pl-c1"&gt;:confirmable&lt;/span&gt;, &lt;span class="pl-c1"&gt;:recoverable&lt;/span&gt;, &lt;span class="pl-c1"&gt;stretches:&lt;/span&gt; &lt;span class="pl-c1"&gt;13&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Besides &lt;code&gt;:stretches&lt;/code&gt;, you can define &lt;code&gt;:pepper&lt;/code&gt;, &lt;code&gt;:encryptor&lt;/code&gt;, &lt;code&gt;:confirm_within&lt;/code&gt;, &lt;code&gt;:remember_for&lt;/code&gt;, &lt;code&gt;:timeout_in&lt;/code&gt;, &lt;code&gt;:unlock_in&lt;/code&gt; among other options. For more details, see the initializer file that was created when you invoked the "devise:install" generator described above. This file is usually located at &lt;code&gt;/config/initializers/devise.rb&lt;/code&gt;.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-strong-parameters" class="anchor" aria-hidden="true" href="#strong-parameters"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Strong Parameters&lt;/h3&gt;
&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="https://camo.githubusercontent.com/50bf54a71ba05c29e6c1c1e55e021373f82f3741/687474703a2f2f6d657373616765732e68656c6c6f626974732e636f6d2f7761726e696e672e7376673f6d6573736167653d546865253230506172616d6574657225323053616e6974697a65722532304150492532306861732532306368616e676564253230666f7225323044657669736525323034"&gt;&lt;img src="https://camo.githubusercontent.com/50bf54a71ba05c29e6c1c1e55e021373f82f3741/687474703a2f2f6d657373616765732e68656c6c6f626974732e636f6d2f7761726e696e672e7376673f6d6573736167653d546865253230506172616d6574657225323053616e6974697a65722532304150492532306861732532306368616e676564253230666f7225323044657669736525323034" alt="The Parameter Sanitizer API has changed for Devise 4" data-canonical-src="http://messages.hellobits.com/warning.svg?message=The%20Parameter%20Sanitizer%20API%20has%20changed%20for%20Devise%204" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;em&gt;For previous Devise versions see &lt;a href="https://github.com/plataformatec/devise/tree/3-stable#strong-parameters"&gt;https://github.com/plataformatec/devise/tree/3-stable#strong-parameters&lt;/a&gt;&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;When you customize your own views, you may end up adding new attributes to forms. Rails 4 moved the parameter sanitization from the model to the controller, causing Devise to handle this concern at the controller as well.&lt;/p&gt;
&lt;p&gt;There are just three actions in Devise that allow any set of parameters to be passed down to the model, therefore requiring sanitization. Their names and default permitted parameters are:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;sign_in&lt;/code&gt; (&lt;code&gt;Devise::SessionsController#create&lt;/code&gt;) - Permits only the authentication keys (like &lt;code&gt;email&lt;/code&gt;)&lt;/li&gt;
&lt;li&gt;&lt;code&gt;sign_up&lt;/code&gt; (&lt;code&gt;Devise::RegistrationsController#create&lt;/code&gt;) - Permits authentication keys plus &lt;code&gt;password&lt;/code&gt; and &lt;code&gt;password_confirmation&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;account_update&lt;/code&gt; (&lt;code&gt;Devise::RegistrationsController#update&lt;/code&gt;) - Permits authentication keys plus &lt;code&gt;password&lt;/code&gt;, &lt;code&gt;password_confirmation&lt;/code&gt; and &lt;code&gt;current_password&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;In case you want to permit additional parameters (the lazy way™), you can do so using a simple before action in your &lt;code&gt;ApplicationController&lt;/code&gt;:&lt;/p&gt;
&lt;div class="highlight highlight-source-ruby"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;class&lt;/span&gt; &lt;span class="pl-en"&gt;ApplicationController&lt;span class="pl-e"&gt; &amp;lt; ActionController::Base&lt;/span&gt;&lt;/span&gt;
  before_action &lt;span class="pl-c1"&gt;:configure_permitted_parameters&lt;/span&gt;, &lt;span class="pl-c1"&gt;if:&lt;/span&gt; &lt;span class="pl-c1"&gt;:devise_controller?&lt;/span&gt;

  &lt;span class="pl-k"&gt;protected&lt;/span&gt;

  &lt;span class="pl-k"&gt;def&lt;/span&gt; &lt;span class="pl-en"&gt;configure_permitted_parameters&lt;/span&gt;
    devise_parameter_sanitizer.permit(&lt;span class="pl-c1"&gt;:sign_up&lt;/span&gt;, &lt;span class="pl-c1"&gt;keys:&lt;/span&gt; [&lt;span class="pl-c1"&gt;:username&lt;/span&gt;])
  &lt;span class="pl-k"&gt;end&lt;/span&gt;
&lt;span class="pl-k"&gt;end&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;The above works for any additional fields where the parameters are simple scalar types. If you have nested attributes (say you're using &lt;code&gt;accepts_nested_attributes_for&lt;/code&gt;), then you will need to tell devise about those nestings and types:&lt;/p&gt;
&lt;div class="highlight highlight-source-ruby"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;class&lt;/span&gt; &lt;span class="pl-en"&gt;ApplicationController&lt;span class="pl-e"&gt; &amp;lt; ActionController::Base&lt;/span&gt;&lt;/span&gt;
  before_action &lt;span class="pl-c1"&gt;:configure_permitted_parameters&lt;/span&gt;, &lt;span class="pl-c1"&gt;if:&lt;/span&gt; &lt;span class="pl-c1"&gt;:devise_controller?&lt;/span&gt;

  &lt;span class="pl-k"&gt;protected&lt;/span&gt;

  &lt;span class="pl-k"&gt;def&lt;/span&gt; &lt;span class="pl-en"&gt;configure_permitted_parameters&lt;/span&gt;
    devise_parameter_sanitizer.permit(&lt;span class="pl-c1"&gt;:sign_up&lt;/span&gt;, &lt;span class="pl-c1"&gt;keys:&lt;/span&gt; [&lt;span class="pl-c1"&gt;:first_name&lt;/span&gt;, &lt;span class="pl-c1"&gt;:last_name&lt;/span&gt;, &lt;span class="pl-c1"&gt;address_attributes:&lt;/span&gt; [&lt;span class="pl-c1"&gt;:country&lt;/span&gt;, &lt;span class="pl-c1"&gt;:state&lt;/span&gt;, &lt;span class="pl-c1"&gt;:city&lt;/span&gt;, &lt;span class="pl-c1"&gt;:area&lt;/span&gt;, &lt;span class="pl-c1"&gt;:postal_code&lt;/span&gt;]])
  &lt;span class="pl-k"&gt;end&lt;/span&gt;
&lt;span class="pl-k"&gt;end&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Devise allows you to completely change Devise defaults or invoke custom behaviour by passing a block:&lt;/p&gt;
&lt;p&gt;To permit simple scalar values for username and email, use this&lt;/p&gt;
&lt;div class="highlight highlight-source-ruby"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;def&lt;/span&gt; &lt;span class="pl-en"&gt;configure_permitted_parameters&lt;/span&gt;
  devise_parameter_sanitizer.permit(&lt;span class="pl-c1"&gt;:sign_in&lt;/span&gt;) &lt;span class="pl-k"&gt;do&lt;/span&gt; |&lt;span class="pl-smi"&gt;user_params&lt;/span&gt;|
    user_params.permit(&lt;span class="pl-c1"&gt;:username&lt;/span&gt;, &lt;span class="pl-c1"&gt;:email&lt;/span&gt;)
  &lt;span class="pl-k"&gt;end&lt;/span&gt;
&lt;span class="pl-k"&gt;end&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;If you have some checkboxes that express the roles a user may take on registration, the browser will send those selected checkboxes as an array. An array is not one of Strong Parameters' permitted scalars, so we need to configure Devise in the following way:&lt;/p&gt;
&lt;div class="highlight highlight-source-ruby"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;def&lt;/span&gt; &lt;span class="pl-en"&gt;configure_permitted_parameters&lt;/span&gt;
  devise_parameter_sanitizer.permit(&lt;span class="pl-c1"&gt;:sign_up&lt;/span&gt;) &lt;span class="pl-k"&gt;do&lt;/span&gt; |&lt;span class="pl-smi"&gt;user_params&lt;/span&gt;|
    user_params.permit({ &lt;span class="pl-c1"&gt;roles:&lt;/span&gt; [] }, &lt;span class="pl-c1"&gt;:email&lt;/span&gt;, &lt;span class="pl-c1"&gt;:password&lt;/span&gt;, &lt;span class="pl-c1"&gt;:password_confirmation&lt;/span&gt;)
  &lt;span class="pl-k"&gt;end&lt;/span&gt;
&lt;span class="pl-k"&gt;end&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;For the list of permitted scalars, and how to declare permitted keys in nested hashes and arrays, see&lt;/p&gt;
&lt;p&gt;&lt;a href="https://github.com/rails/strong_parameters#nested-parameters"&gt;https://github.com/rails/strong_parameters#nested-parameters&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;If you have multiple Devise models, you may want to set up a different parameter sanitizer per model. In this case, we recommend inheriting from &lt;code&gt;Devise::ParameterSanitizer&lt;/code&gt; and adding your own logic:&lt;/p&gt;
&lt;div class="highlight highlight-source-ruby"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;class&lt;/span&gt; &lt;span class="pl-en"&gt;User::ParameterSanitizer&lt;span class="pl-e"&gt; &amp;lt; Devise::ParameterSanitizer&lt;/span&gt;&lt;/span&gt;
  &lt;span class="pl-k"&gt;def&lt;/span&gt; &lt;span class="pl-en"&gt;initialize&lt;/span&gt;(&lt;span class="pl-k"&gt;*&lt;/span&gt;)
    &lt;span class="pl-k"&gt;super&lt;/span&gt;
    permit(&lt;span class="pl-c1"&gt;:sign_up&lt;/span&gt;, &lt;span class="pl-c1"&gt;keys:&lt;/span&gt; [&lt;span class="pl-c1"&gt;:username&lt;/span&gt;, &lt;span class="pl-c1"&gt;:email&lt;/span&gt;])
  &lt;span class="pl-k"&gt;end&lt;/span&gt;
&lt;span class="pl-k"&gt;end&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;And then configure your controllers to use it:&lt;/p&gt;
&lt;div class="highlight highlight-source-ruby"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;class&lt;/span&gt; &lt;span class="pl-en"&gt;ApplicationController&lt;span class="pl-e"&gt; &amp;lt; ActionController::Base&lt;/span&gt;&lt;/span&gt;
  &lt;span class="pl-k"&gt;protected&lt;/span&gt;

  &lt;span class="pl-k"&gt;def&lt;/span&gt; &lt;span class="pl-en"&gt;devise_parameter_sanitizer&lt;/span&gt;
    &lt;span class="pl-k"&gt;if&lt;/span&gt; resource_class &lt;span class="pl-k"&gt;==&lt;/span&gt; &lt;span class="pl-c1"&gt;User&lt;/span&gt;
      &lt;span class="pl-c1"&gt;User&lt;/span&gt;::&lt;span class="pl-c1"&gt;ParameterSanitizer&lt;/span&gt;.&lt;span class="pl-k"&gt;new&lt;/span&gt;(&lt;span class="pl-c1"&gt;User&lt;/span&gt;, &lt;span class="pl-c1"&gt;:user&lt;/span&gt;, params)
    &lt;span class="pl-k"&gt;else&lt;/span&gt;
      &lt;span class="pl-k"&gt;super&lt;/span&gt; &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; Use the default one&lt;/span&gt;
    &lt;span class="pl-k"&gt;end&lt;/span&gt;
  &lt;span class="pl-k"&gt;end&lt;/span&gt;
&lt;span class="pl-k"&gt;end&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;The example above overrides the permitted parameters for the user to be both &lt;code&gt;:username&lt;/code&gt; and &lt;code&gt;:email&lt;/code&gt;. The non-lazy way to configure parameters would be by defining the before filter above in a custom controller. We detail how to configure and customize controllers in some sections below.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-configuring-views" class="anchor" aria-hidden="true" href="#configuring-views"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Configuring views&lt;/h3&gt;
&lt;p&gt;We built Devise to help you quickly develop an application that uses authentication. However, we don't want to be in your way when you need to customize it.&lt;/p&gt;
&lt;p&gt;Since Devise is an engine, all its views are packaged inside the gem. These views will help you get started, but after some time you may want to change them. If this is the case, you just need to invoke the following generator, and it will copy all views to your application:&lt;/p&gt;
&lt;div class="highlight highlight-text-shell-session"&gt;&lt;pre&gt;$ &lt;span class="pl-s1"&gt;rails generate devise:views&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;If you have more than one Devise model in your application (such as &lt;code&gt;User&lt;/code&gt; and &lt;code&gt;Admin&lt;/code&gt;), you will notice that Devise uses the same views for all models. Fortunately, Devise offers an easy way to customize views. All you need to do is set &lt;code&gt;config.scoped_views = true&lt;/code&gt; inside the &lt;code&gt;config/initializers/devise.rb&lt;/code&gt; file.&lt;/p&gt;
&lt;p&gt;After doing so, you will be able to have views based on the role like &lt;code&gt;users/sessions/new&lt;/code&gt; and &lt;code&gt;admins/sessions/new&lt;/code&gt;. If no view is found within the scope, Devise will use the default view at &lt;code&gt;devise/sessions/new&lt;/code&gt;. You can also use the generator to generate scoped views:&lt;/p&gt;
&lt;div class="highlight highlight-text-shell-session"&gt;&lt;pre&gt;$ &lt;span class="pl-s1"&gt;rails generate devise:views users&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;If you would like to generate only a few sets of views, like the ones for the &lt;code&gt;registerable&lt;/code&gt; and &lt;code&gt;confirmable&lt;/code&gt; module,
you can pass a list of modules to the generator with the &lt;code&gt;-v&lt;/code&gt; flag.&lt;/p&gt;
&lt;div class="highlight highlight-text-shell-session"&gt;&lt;pre&gt;$ &lt;span class="pl-s1"&gt;rails generate devise:views -v registrations confirmations&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h3&gt;&lt;a id="user-content-configuring-controllers" class="anchor" aria-hidden="true" href="#configuring-controllers"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Configuring controllers&lt;/h3&gt;
&lt;p&gt;If the customization at the views level is not enough, you can customize each controller by following these steps:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;Create your custom controllers using the generator which requires a scope:&lt;/p&gt;
&lt;div class="highlight highlight-text-shell-session"&gt;&lt;pre&gt;$ &lt;span class="pl-s1"&gt;rails generate devise:controllers [scope]&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;If you specify &lt;code&gt;users&lt;/code&gt; as the scope, controllers will be created in &lt;code&gt;app/controllers/users/&lt;/code&gt;.
And the sessions controller will look like this:&lt;/p&gt;
&lt;div class="highlight highlight-source-ruby"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;class&lt;/span&gt; &lt;span class="pl-en"&gt;Users::SessionsController&lt;span class="pl-e"&gt; &amp;lt; Devise::SessionsController&lt;/span&gt;&lt;/span&gt;
  &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; GET /resource/sign_in&lt;/span&gt;
  &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; def new&lt;/span&gt;
  &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt;   super&lt;/span&gt;
  &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; end&lt;/span&gt;
  ...
&lt;span class="pl-k"&gt;end&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;(Use the -c flag to specify a controller, for example: &lt;code&gt;rails generate devise:controllers users -c=sessions&lt;/code&gt;)&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Tell the router to use this controller:&lt;/p&gt;
&lt;div class="highlight highlight-source-ruby"&gt;&lt;pre&gt;devise_for &lt;span class="pl-c1"&gt;:users&lt;/span&gt;, &lt;span class="pl-c1"&gt;controllers:&lt;/span&gt; { &lt;span class="pl-c1"&gt;sessions:&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;users/sessions&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt; }&lt;/pre&gt;&lt;/div&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Copy the views from &lt;code&gt;devise/sessions&lt;/code&gt; to &lt;code&gt;users/sessions&lt;/code&gt;. Since the controller was changed, it won't use the default views located in &lt;code&gt;devise/sessions&lt;/code&gt;.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Finally, change or extend the desired controller actions.&lt;/p&gt;
&lt;p&gt;You can completely override a controller action:&lt;/p&gt;
&lt;div class="highlight highlight-source-ruby"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;class&lt;/span&gt; &lt;span class="pl-en"&gt;Users::SessionsController&lt;span class="pl-e"&gt; &amp;lt; Devise::SessionsController&lt;/span&gt;&lt;/span&gt;
  &lt;span class="pl-k"&gt;def&lt;/span&gt; &lt;span class="pl-en"&gt;create&lt;/span&gt;
    &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; custom sign-in code&lt;/span&gt;
  &lt;span class="pl-k"&gt;end&lt;/span&gt;
&lt;span class="pl-k"&gt;end&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Or you can simply add new behaviour to it:&lt;/p&gt;
&lt;div class="highlight highlight-source-ruby"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;class&lt;/span&gt; &lt;span class="pl-en"&gt;Users::SessionsController&lt;span class="pl-e"&gt; &amp;lt; Devise::SessionsController&lt;/span&gt;&lt;/span&gt;
  &lt;span class="pl-k"&gt;def&lt;/span&gt; &lt;span class="pl-en"&gt;create&lt;/span&gt;
    &lt;span class="pl-k"&gt;super&lt;/span&gt; &lt;span class="pl-k"&gt;do&lt;/span&gt; |&lt;span class="pl-smi"&gt;resource&lt;/span&gt;|
      &lt;span class="pl-c1"&gt;BackgroundWorker&lt;/span&gt;.trigger(resource)
    &lt;span class="pl-k"&gt;end&lt;/span&gt;
  &lt;span class="pl-k"&gt;end&lt;/span&gt;
&lt;span class="pl-k"&gt;end&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;This is useful for triggering background jobs or logging events during certain actions.&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;Remember that Devise uses flash messages to let users know if sign in was successful or unsuccessful. Devise expects your application to call &lt;code&gt;flash[:notice]&lt;/code&gt; and &lt;code&gt;flash[:alert]&lt;/code&gt; as appropriate. Do not print the entire flash hash, print only specific keys. In some circumstances, Devise adds a &lt;code&gt;:timedout&lt;/code&gt; key to the flash hash, which is not meant for display. Remove this key from the hash if you intend to print the entire hash.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-configuring-routes" class="anchor" aria-hidden="true" href="#configuring-routes"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Configuring routes&lt;/h3&gt;
&lt;p&gt;Devise also ships with default routes. If you need to customize them, you should probably be able to do it through the devise_for method. It accepts several options like :class_name, :path_prefix and so on, including the possibility to change path names for I18n:&lt;/p&gt;
&lt;div class="highlight highlight-source-ruby"&gt;&lt;pre&gt;devise_for &lt;span class="pl-c1"&gt;:users&lt;/span&gt;, &lt;span class="pl-c1"&gt;path:&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;auth&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-c1"&gt;path_names:&lt;/span&gt; { &lt;span class="pl-c1"&gt;sign_in:&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;login&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-c1"&gt;sign_out:&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;logout&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-c1"&gt;password:&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;secret&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-c1"&gt;confirmation:&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;verification&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-c1"&gt;unlock:&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;unblock&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-c1"&gt;registration:&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;register&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-c1"&gt;sign_up:&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;cmon_let_me_in&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt; }&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Be sure to check &lt;code&gt;devise_for&lt;/code&gt; &lt;a href="http://www.rubydoc.info/github/plataformatec/devise/master/ActionDispatch/Routing/Mapper%3Adevise_for" rel="nofollow"&gt;documentation&lt;/a&gt; for details.&lt;/p&gt;
&lt;p&gt;If you have the need for more deep customization, for instance to also allow "/sign_in" besides "/users/sign_in", all you need to do is create your routes normally and wrap them in a &lt;code&gt;devise_scope&lt;/code&gt; block in the router:&lt;/p&gt;
&lt;div class="highlight highlight-source-ruby"&gt;&lt;pre&gt;devise_scope &lt;span class="pl-c1"&gt;:user&lt;/span&gt; &lt;span class="pl-k"&gt;do&lt;/span&gt;
  get &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;sign_in&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-c1"&gt;to:&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;devise/sessions#new&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;
&lt;span class="pl-k"&gt;end&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;This way, you tell Devise to use the scope &lt;code&gt;:user&lt;/code&gt; when "/sign_in" is accessed. Notice &lt;code&gt;devise_scope&lt;/code&gt; is also aliased as &lt;code&gt;as&lt;/code&gt; in your router.&lt;/p&gt;
&lt;p&gt;Please note: You will still need to add &lt;code&gt;devise_for&lt;/code&gt; in your routes in order to use helper methods such as &lt;code&gt;current_user&lt;/code&gt;.&lt;/p&gt;
&lt;div class="highlight highlight-source-ruby"&gt;&lt;pre&gt;devise_for &lt;span class="pl-c1"&gt;:users&lt;/span&gt;, &lt;span class="pl-c1"&gt;skip:&lt;/span&gt; &lt;span class="pl-c1"&gt;:all&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h3&gt;&lt;a id="user-content-i18n" class="anchor" aria-hidden="true" href="#i18n"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;I18n&lt;/h3&gt;
&lt;p&gt;Devise uses flash messages with I18n, in conjunction with the flash keys :notice and :alert. To customize your app, you can set up your locale file:&lt;/p&gt;
&lt;div class="highlight highlight-source-yaml"&gt;&lt;pre&gt;&lt;span class="pl-ent"&gt;en&lt;/span&gt;:
  &lt;span class="pl-ent"&gt;devise&lt;/span&gt;:
    &lt;span class="pl-ent"&gt;sessions&lt;/span&gt;:
      &lt;span class="pl-ent"&gt;signed_in&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;Signed in successfully.&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;You can also create distinct messages based on the resource you've configured using the singular name given in routes:&lt;/p&gt;
&lt;div class="highlight highlight-source-yaml"&gt;&lt;pre&gt;&lt;span class="pl-ent"&gt;en&lt;/span&gt;:
  &lt;span class="pl-ent"&gt;devise&lt;/span&gt;:
    &lt;span class="pl-ent"&gt;sessions&lt;/span&gt;:
      &lt;span class="pl-ent"&gt;user&lt;/span&gt;:
        &lt;span class="pl-ent"&gt;signed_in&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;Welcome user, you are signed in.&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;
      &lt;span class="pl-ent"&gt;admin&lt;/span&gt;:
        &lt;span class="pl-ent"&gt;signed_in&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;Hello admin!&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;The Devise mailer uses a similar pattern to create subject messages:&lt;/p&gt;
&lt;div class="highlight highlight-source-yaml"&gt;&lt;pre&gt;&lt;span class="pl-ent"&gt;en&lt;/span&gt;:
  &lt;span class="pl-ent"&gt;devise&lt;/span&gt;:
    &lt;span class="pl-ent"&gt;mailer&lt;/span&gt;:
      &lt;span class="pl-ent"&gt;confirmation_instructions&lt;/span&gt;:
        &lt;span class="pl-ent"&gt;subject&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;Hello everybody!&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;
        &lt;span class="pl-ent"&gt;user_subject&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;Hello User! Please confirm your email&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;
      &lt;span class="pl-ent"&gt;reset_password_instructions&lt;/span&gt;:
        &lt;span class="pl-ent"&gt;subject&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;Reset instructions&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Take a look at our locale file to check all available messages. You may also be interested in one of the many translations that are available on our wiki:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://github.com/plataformatec/devise/wiki/I18n"&gt;https://github.com/plataformatec/devise/wiki/I18n&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Caution: Devise Controllers inherit from ApplicationController. If your app uses multiple locales, you should be sure to set I18n.locale in ApplicationController.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-test-helpers" class="anchor" aria-hidden="true" href="#test-helpers"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Test helpers&lt;/h3&gt;
&lt;p&gt;Devise includes some test helpers for controller and integration tests.
In order to use them, you need to include the respective module in your test
cases/specs.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-controller-tests" class="anchor" aria-hidden="true" href="#controller-tests"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Controller tests&lt;/h3&gt;
&lt;p&gt;Controller tests require that you include &lt;code&gt;Devise::Test::ControllerHelpers&lt;/code&gt; on
your test case or its parent &lt;code&gt;ActionController::TestCase&lt;/code&gt; superclass.
For Rails 5, include &lt;code&gt;Devise::Test::IntegrationHelpers&lt;/code&gt; instead, since the superclass
for controller tests has been changed to ActionDispatch::IntegrationTest
(for more details, see the &lt;a href="#integration-tests"&gt;Integration tests&lt;/a&gt; section).&lt;/p&gt;
&lt;div class="highlight highlight-source-ruby"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;class&lt;/span&gt; &lt;span class="pl-en"&gt;PostsControllerTest&lt;span class="pl-e"&gt; &amp;lt; ActionController::TestCase&lt;/span&gt;&lt;/span&gt;
  &lt;span class="pl-k"&gt;include&lt;/span&gt; &lt;span class="pl-c1"&gt;Devise&lt;/span&gt;::&lt;span class="pl-c1"&gt;Test&lt;/span&gt;::&lt;span class="pl-c1"&gt;ControllerHelpers&lt;/span&gt;
&lt;span class="pl-k"&gt;end&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;If you're using RSpec, you can put the following inside a file named
&lt;code&gt;spec/support/devise.rb&lt;/code&gt; or in your &lt;code&gt;spec/spec_helper.rb&lt;/code&gt; (or
&lt;code&gt;spec/rails_helper.rb&lt;/code&gt; if you are using &lt;code&gt;rspec-rails&lt;/code&gt;):&lt;/p&gt;
&lt;div class="highlight highlight-source-ruby"&gt;&lt;pre&gt;&lt;span class="pl-c1"&gt;RSpec&lt;/span&gt;.configure &lt;span class="pl-k"&gt;do&lt;/span&gt; |&lt;span class="pl-smi"&gt;config&lt;/span&gt;|
  config.&lt;span class="pl-k"&gt;include&lt;/span&gt; &lt;span class="pl-c1"&gt;Devise&lt;/span&gt;::&lt;span class="pl-c1"&gt;Test&lt;/span&gt;::&lt;span class="pl-c1"&gt;ControllerHelpers&lt;/span&gt;, &lt;span class="pl-c1"&gt;type:&lt;/span&gt; &lt;span class="pl-c1"&gt;:controller&lt;/span&gt;
  config.&lt;span class="pl-k"&gt;include&lt;/span&gt; &lt;span class="pl-c1"&gt;Devise&lt;/span&gt;::&lt;span class="pl-c1"&gt;Test&lt;/span&gt;::&lt;span class="pl-c1"&gt;ControllerHelpers&lt;/span&gt;, &lt;span class="pl-c1"&gt;type:&lt;/span&gt; &lt;span class="pl-c1"&gt;:view&lt;/span&gt;
&lt;span class="pl-k"&gt;end&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Just be sure that this inclusion is made &lt;em&gt;after&lt;/em&gt; the &lt;code&gt;require 'rspec/rails'&lt;/code&gt; directive.&lt;/p&gt;
&lt;p&gt;Now you are ready to use the &lt;code&gt;sign_in&lt;/code&gt; and &lt;code&gt;sign_out&lt;/code&gt; methods on your controller
tests:&lt;/p&gt;
&lt;div class="highlight highlight-source-ruby"&gt;&lt;pre&gt;sign_in &lt;span class="pl-smi"&gt;@user&lt;/span&gt;
sign_in &lt;span class="pl-smi"&gt;@user&lt;/span&gt;, &lt;span class="pl-c1"&gt;scope:&lt;/span&gt; &lt;span class="pl-c1"&gt;:admin&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;If you are testing Devise internal controllers or a controller that inherits
from Devise's, you need to tell Devise which mapping should be used before a
request. This is necessary because Devise gets this information from the router,
but since controller tests do not pass through the router, it needs to be stated
explicitly. For example, if you are testing the user scope, simply use:&lt;/p&gt;
&lt;div class="highlight highlight-source-ruby"&gt;&lt;pre&gt;&lt;span class="pl-c1"&gt;test&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;GET new&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt; &lt;span class="pl-k"&gt;do&lt;/span&gt;
  &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; Mimic the router behavior of setting the Devise scope through the env.&lt;/span&gt;
  &lt;span class="pl-smi"&gt;@request&lt;/span&gt;.env[&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;devise.mapping&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;] &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;Devise&lt;/span&gt;.mappings[&lt;span class="pl-c1"&gt;:user&lt;/span&gt;]

  &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; Use the sign_in helper to sign in a fixture `User` record.&lt;/span&gt;
  sign_in users(&lt;span class="pl-c1"&gt;:alice&lt;/span&gt;)

  get &lt;span class="pl-c1"&gt;:new&lt;/span&gt;

  &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; assert something&lt;/span&gt;
&lt;span class="pl-k"&gt;end&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h3&gt;&lt;a id="user-content-integration-tests" class="anchor" aria-hidden="true" href="#integration-tests"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Integration tests&lt;/h3&gt;
&lt;p&gt;Integration test helpers are available by including the
&lt;code&gt;Devise::Test::IntegrationHelpers&lt;/code&gt; module.&lt;/p&gt;
&lt;div class="highlight highlight-source-ruby"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;class&lt;/span&gt; &lt;span class="pl-en"&gt;PostsTests&lt;span class="pl-e"&gt; &amp;lt; ActionDispatch::IntegrationTest&lt;/span&gt;&lt;/span&gt;
  &lt;span class="pl-k"&gt;include&lt;/span&gt; &lt;span class="pl-c1"&gt;Devise&lt;/span&gt;::&lt;span class="pl-c1"&gt;Test&lt;/span&gt;::&lt;span class="pl-c1"&gt;IntegrationHelpers&lt;/span&gt;
&lt;span class="pl-k"&gt;end&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Now you can use the following &lt;code&gt;sign_in&lt;/code&gt; and &lt;code&gt;sign_out&lt;/code&gt; methods in your integration
tests:&lt;/p&gt;
&lt;div class="highlight highlight-source-ruby"&gt;&lt;pre&gt;sign_in users(&lt;span class="pl-c1"&gt;:bob&lt;/span&gt;)
sign_in users(&lt;span class="pl-c1"&gt;:bob&lt;/span&gt;), &lt;span class="pl-c1"&gt;scope:&lt;/span&gt; &lt;span class="pl-c1"&gt;:admin&lt;/span&gt;

sign_out &lt;span class="pl-c1"&gt;:user&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;RSpec users can include the &lt;code&gt;IntegrationHelpers&lt;/code&gt; module on their &lt;code&gt;:feature&lt;/code&gt; specs.&lt;/p&gt;
&lt;div class="highlight highlight-source-ruby"&gt;&lt;pre&gt;&lt;span class="pl-c1"&gt;RSpec&lt;/span&gt;.configure &lt;span class="pl-k"&gt;do&lt;/span&gt; |&lt;span class="pl-smi"&gt;config&lt;/span&gt;|
  config.&lt;span class="pl-k"&gt;include&lt;/span&gt; &lt;span class="pl-c1"&gt;Devise&lt;/span&gt;::&lt;span class="pl-c1"&gt;Test&lt;/span&gt;::&lt;span class="pl-c1"&gt;IntegrationHelpers&lt;/span&gt;, &lt;span class="pl-c1"&gt;type:&lt;/span&gt; &lt;span class="pl-c1"&gt;:feature&lt;/span&gt;
&lt;span class="pl-k"&gt;end&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Unlike controller tests, integration tests do not need to supply the
&lt;code&gt;devise.mapping&lt;/code&gt; &lt;code&gt;env&lt;/code&gt; value, as the mapping can be inferred by the routes that
are executed in your tests.&lt;/p&gt;
&lt;p&gt;You can read more about testing your Rails 3 - Rails 4 controllers with RSpec in the wiki:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/plataformatec/devise/wiki/How-To:-Test-controllers-with-Rails-(and-RSpec)"&gt;https://github.com/plataformatec/devise/wiki/How-To:-Test-controllers-with-Rails-(and-RSpec)&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;&lt;a id="user-content-omniauth" class="anchor" aria-hidden="true" href="#omniauth"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;OmniAuth&lt;/h3&gt;
&lt;p&gt;Devise comes with OmniAuth support out of the box to authenticate with other providers. To use it, simply specify your OmniAuth configuration in &lt;code&gt;config/initializers/devise.rb&lt;/code&gt;:&lt;/p&gt;
&lt;div class="highlight highlight-source-ruby"&gt;&lt;pre&gt;config.omniauth &lt;span class="pl-c1"&gt;:github&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;APP_ID&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;APP_SECRET&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-c1"&gt;scope:&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;user,public_repo&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;You can read more about OmniAuth support in the wiki:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/plataformatec/devise/wiki/OmniAuth:-Overview"&gt;https://github.com/plataformatec/devise/wiki/OmniAuth:-Overview&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;&lt;a id="user-content-configuring-multiple-models" class="anchor" aria-hidden="true" href="#configuring-multiple-models"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Configuring multiple models&lt;/h3&gt;
&lt;p&gt;Devise allows you to set up as many Devise models as you want. If you want to have an Admin model with just authentication and timeout features, in addition to the User model above, just run:&lt;/p&gt;
&lt;div class="highlight highlight-source-ruby"&gt;&lt;pre&gt;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; Create a migration with the required fields&lt;/span&gt;
create_table &lt;span class="pl-c1"&gt;:admins&lt;/span&gt; &lt;span class="pl-k"&gt;do&lt;/span&gt; |&lt;span class="pl-smi"&gt;t&lt;/span&gt;|
  t.string &lt;span class="pl-c1"&gt;:email&lt;/span&gt;
  t.string &lt;span class="pl-c1"&gt;:encrypted_password&lt;/span&gt;
  t.timestamps &lt;span class="pl-c1"&gt;null:&lt;/span&gt; &lt;span class="pl-c1"&gt;false&lt;/span&gt;
&lt;span class="pl-k"&gt;end&lt;/span&gt;

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; Inside your Admin model&lt;/span&gt;
devise &lt;span class="pl-c1"&gt;:database_authenticatable&lt;/span&gt;, &lt;span class="pl-c1"&gt;:timeoutable&lt;/span&gt;

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; Inside your routes&lt;/span&gt;
devise_for &lt;span class="pl-c1"&gt;:admins&lt;/span&gt;

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; Inside your protected controller&lt;/span&gt;
before_action &lt;span class="pl-c1"&gt;:authenticate_admin!&lt;/span&gt;

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; Inside your controllers and views&lt;/span&gt;
admin_signed_in?
current_admin
admin_session&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Alternatively, you can simply run the Devise generator.&lt;/p&gt;
&lt;p&gt;Keep in mind that those models will have completely different routes. They &lt;strong&gt;do not&lt;/strong&gt; and &lt;strong&gt;cannot&lt;/strong&gt; share the same controller for sign in, sign out and so on. In case you want to have different roles sharing the same actions, we recommend that you use a role-based approach, by either providing a role column or using a dedicated gem for authorization.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-activejob-integration" class="anchor" aria-hidden="true" href="#activejob-integration"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;ActiveJob Integration&lt;/h3&gt;
&lt;p&gt;If you are using Rails 4.2 and ActiveJob to deliver ActionMailer messages in the
background through a queuing back-end, you can send Devise emails through your
existing queue by overriding the &lt;code&gt;send_devise_notification&lt;/code&gt; method in your model.&lt;/p&gt;
&lt;div class="highlight highlight-source-ruby"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;def&lt;/span&gt; &lt;span class="pl-en"&gt;send_devise_notification&lt;/span&gt;(&lt;span class="pl-smi"&gt;notification&lt;/span&gt;, &lt;span class="pl-k"&gt;*&lt;/span&gt;&lt;span class="pl-smi"&gt;args&lt;/span&gt;)
  devise_mailer.send(notification, &lt;span class="pl-c1"&gt;self&lt;/span&gt;, &lt;span class="pl-k"&gt;*&lt;/span&gt;args).deliver_later
&lt;span class="pl-k"&gt;end&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h3&gt;&lt;a id="user-content-password-reset-tokens-and-rails-logs" class="anchor" aria-hidden="true" href="#password-reset-tokens-and-rails-logs"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Password reset tokens and Rails logs&lt;/h3&gt;
&lt;p&gt;If you enable the &lt;a href="http://rubydoc.info/github/plataformatec/devise/master/Devise/Models/Recoverable" rel="nofollow"&gt;Recoverable&lt;/a&gt; module, note that a stolen password reset token could give an attacker access to your application. Devise takes effort to generate random, secure tokens, and stores only token digests in the database, never plaintext. However the default logging behavior in Rails can cause plaintext tokens to leak into log files:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Action Mailer logs the entire contents of all outgoing emails to the DEBUG level. Password reset tokens delivered to users in email will be leaked.&lt;/li&gt;
&lt;li&gt;Active Job logs all arguments to every enqueued job at the INFO level. If you configure Devise to use &lt;code&gt;deliver_later&lt;/code&gt; to send password reset emails, password reset tokens will be leaked.&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;Rails sets the production logger level to DEBUG by default. Consider changing your production logger level to WARN if you wish to prevent tokens from being leaked into your logs. In &lt;code&gt;config/environments/production.rb&lt;/code&gt;:&lt;/p&gt;
&lt;div class="highlight highlight-source-ruby"&gt;&lt;pre&gt;config.log_level &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;:warn&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h3&gt;&lt;a id="user-content-other-orms" class="anchor" aria-hidden="true" href="#other-orms"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Other ORMs&lt;/h3&gt;
&lt;p&gt;Devise supports ActiveRecord (default) and Mongoid. To select another ORM, simply require it in the initializer file.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-rails-api-mode" class="anchor" aria-hidden="true" href="#rails-api-mode"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Rails API Mode&lt;/h3&gt;
&lt;p&gt;Rails 5+ has a built-in &lt;a href="https://edgeguides.rubyonrails.org/api_app.html" rel="nofollow"&gt;API Mode&lt;/a&gt; which optimizes Rails for use as an API (only). Devise is &lt;em&gt;somewhat&lt;/em&gt; able to handle applications that are built in this mode without additional modifications in the sense that it should not raise exceptions and the like. But some issues may still arise during &lt;code&gt;development&lt;/code&gt;/&lt;code&gt;testing&lt;/code&gt;, as we still don't know the full extent of this compatibility. (For more information, see &lt;a href="https://github.com/plataformatec/devise/issues/4947/"&gt;issue #4947&lt;/a&gt;)&lt;/p&gt;
&lt;h4&gt;&lt;a id="user-content-supported-authentication-strategies" class="anchor" aria-hidden="true" href="#supported-authentication-strategies"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Supported Authentication Strategies&lt;/h4&gt;
&lt;p&gt;API-only applications don't support browser-based authentication via cookies, which is devise's default. Yet, devise can still provide authentication out of the box in those cases with the &lt;code&gt;http_authenticatable&lt;/code&gt; strategy, which uses HTTP Basic Auth and authenticates the user on each request. (For more info, see this wiki article for &lt;a href="https://github.com/plataformatec/devise/wiki/How-To:-Use-HTTP-Basic-Authentication"&gt;How To: Use HTTP Basic Authentication&lt;/a&gt;)&lt;/p&gt;
&lt;p&gt;The devise default for HTTP Auth is disabled, so it will need to be enabled in the devise initializer for the database strategy:&lt;/p&gt;
&lt;div class="highlight highlight-source-ruby"&gt;&lt;pre&gt;config.http_authenticatable &lt;span class="pl-k"&gt;=&lt;/span&gt; [&lt;span class="pl-c1"&gt;:database&lt;/span&gt;]&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;This restriction does not limit you from implementing custom warden strategies, either in your application or via gem-based extensions for devise.
A common authentication strategy for APIs is token-based authentication. For more information on extending devise to support this type of authentication and others, see the wiki article for &lt;a href="https://github.com/plataformatec/devise/wiki/How-To:-Simple-Token-Authentication-Example#alternatives"&gt;Simple Token Authentication Examples and alternatives&lt;/a&gt; or this blog post on &lt;a href="http://blog.plataformatec.com.br/2019/01/custom-authentication-methods-with-devise/" rel="nofollow"&gt;Custom authentication methods with Devise&lt;/a&gt;.&lt;/p&gt;
&lt;h4&gt;&lt;a id="user-content-testing" class="anchor" aria-hidden="true" href="#testing"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Testing&lt;/h4&gt;
&lt;p&gt;API Mode changes the order of the middleware stack, and this can cause problems for &lt;code&gt;Devise::Test::IntegrationHelpers&lt;/code&gt;. This problem usually surfaces as an &lt;code&gt;undefined method `[]=' for nil:NilClass&lt;/code&gt; error when using integration test helpers, such as &lt;code&gt;#sign_in&lt;/code&gt;. The solution is simply to reorder the middlewares by adding the following to test.rb:&lt;/p&gt;
&lt;div class="highlight highlight-source-ruby"&gt;&lt;pre&gt;&lt;span class="pl-c1"&gt;Rails&lt;/span&gt;.application.config.middleware.insert_before &lt;span class="pl-c1"&gt;Warden&lt;/span&gt;::&lt;span class="pl-c1"&gt;Manager&lt;/span&gt;, &lt;span class="pl-c1"&gt;ActionDispatch&lt;/span&gt;::&lt;span class="pl-c1"&gt;Cookies&lt;/span&gt;
&lt;span class="pl-c1"&gt;Rails&lt;/span&gt;.application.config.middleware.insert_before &lt;span class="pl-c1"&gt;Warden&lt;/span&gt;::&lt;span class="pl-c1"&gt;Manager&lt;/span&gt;, &lt;span class="pl-c1"&gt;ActionDispatch&lt;/span&gt;::&lt;span class="pl-c1"&gt;Session&lt;/span&gt;::&lt;span class="pl-c1"&gt;CookieStore&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;For a deeper understanding of this, review &lt;a href="https://github.com/plataformatec/devise/issues/4696"&gt;this issue&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Additionally be mindful that without views supported, some email-based flows from Confirmable, Recoverable and Lockable are not supported directly at this time.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-additional-information" class="anchor" aria-hidden="true" href="#additional-information"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Additional information&lt;/h2&gt;
&lt;h3&gt;&lt;a id="user-content-heroku" class="anchor" aria-hidden="true" href="#heroku"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Heroku&lt;/h3&gt;
&lt;p&gt;Using Devise on Heroku with Ruby on Rails 3.2 requires setting:&lt;/p&gt;
&lt;div class="highlight highlight-source-ruby"&gt;&lt;pre&gt;config.assets.initialize_on_precompile &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;false&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Read more about the potential issues at &lt;a href="http://guides.rubyonrails.org/asset_pipeline.html" rel="nofollow"&gt;http://guides.rubyonrails.org/asset_pipeline.html&lt;/a&gt;&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-warden" class="anchor" aria-hidden="true" href="#warden"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Warden&lt;/h3&gt;
&lt;p&gt;Devise is based on Warden, which is a general Rack authentication framework created by Daniel Neighman. We encourage you to read more about Warden here:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://github.com/hassox/warden"&gt;https://github.com/hassox/warden&lt;/a&gt;&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-contributors" class="anchor" aria-hidden="true" href="#contributors"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Contributors&lt;/h3&gt;
&lt;p&gt;We have a long list of valued contributors. Check them all at:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://github.com/plataformatec/devise/graphs/contributors"&gt;https://github.com/plataformatec/devise/graphs/contributors&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-license" class="anchor" aria-hidden="true" href="#license"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;License&lt;/h2&gt;
&lt;p&gt;MIT License. Copyright 2009-2019 Plataformatec. &lt;a href="http://plataformatec.com.br" rel="nofollow"&gt;http://plataformatec.com.br&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;You are not granted rights or licenses to the trademarks of Plataformatec, including without limitation the Devise name or logo.&lt;/p&gt;
&lt;/article&gt;&lt;/div&gt;</description><author>plataformatec</author><guid isPermaLink="false">https://github.com/plataformatec/devise</guid><pubDate>Fri, 01 Nov 2019 00:00:00 GMT</pubDate></item><item><title>ruby-grape/grape #9 in Ruby, This week</title><link>https://github.com/ruby-grape/grape</link><description>&lt;p&gt;&lt;i&gt;An opinionated framework for creating REST-like APIs in Ruby.&lt;/i&gt;&lt;/p&gt;&lt;div id="readme" class="instapaper_body md" data-path="README.md"&gt;&lt;article class="markdown-body entry-content p-5" itemprop="text"&gt;&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="grape.png"&gt;&lt;img src="grape.png" alt="grape logo" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href="http://badge.fury.io/rb/grape" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/18e445c3a067c90ef3b97b2ca9428f827baeeced/68747470733a2f2f62616467652e667572792e696f2f72622f67726170652e737667" alt="Gem Version" data-canonical-src="https://badge.fury.io/rb/grape.svg" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://travis-ci.org/ruby-grape/grape" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/670f6d4e773a5b4c0d43af35353ff8f78096cc73/68747470733a2f2f7472617669732d63692e6f72672f727562792d67726170652f67726170652e7376673f6272616e63683d6d6173746572" alt="Build Status" data-canonical-src="https://travis-ci.org/ruby-grape/grape.svg?branch=master" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://codeclimate.com/github/ruby-grape/grape" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/f82575aea6975f7e14f034d72dc39ad5d7638538/68747470733a2f2f636f6465636c696d6174652e636f6d2f6769746875622f727562792d67726170652f67726170652e737667" alt="Code Climate" data-canonical-src="https://codeclimate.com/github/ruby-grape/grape.svg" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://coveralls.io/github/ruby-grape/grape?branch=master" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/859cf842b14131c431dd3cc5221130a16b931aa4/68747470733a2f2f636f766572616c6c732e696f2f7265706f732f6769746875622f727562792d67726170652f67726170652f62616467652e7376673f6272616e63683d6d6173746572" alt="Coverage Status" data-canonical-src="https://coveralls.io/repos/github/ruby-grape/grape/badge.svg?branch=master" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://inch-ci.org/github/ruby-grape/grape" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/29df6a9348a116872dae92d027bc7fbde729531d/68747470733a2f2f696e63682d63692e6f72672f6769746875622f727562792d67726170652f67726170652e737667" alt="Inline docs" data-canonical-src="https://inch-ci.org/github/ruby-grape/grape.svg" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://gitter.im/ruby-grape/grape?utm_source=badge&amp;amp;utm_medium=badge&amp;amp;utm_campaign=pr-badge&amp;amp;utm_content=badge" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/160606926526cc01fb86305ce5ba149d5004b809/68747470733a2f2f6261646765732e6769747465722e696d2f727562792d67726170652f67726170652e737667" alt="Join the chat at https://gitter.im/ruby-grape/grape" data-canonical-src="https://badges.gitter.im/ruby-grape/grape.svg" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-table-of-contents" class="anchor" aria-hidden="true" href="#table-of-contents"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Table of Contents&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="#what-is-grape"&gt;What is Grape?&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#stable-release"&gt;Stable Release&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#project-resources"&gt;Project Resources&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#installation"&gt;Installation&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#basic-usage"&gt;Basic Usage&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#mounting"&gt;Mounting&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="#all"&gt;All&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#rack"&gt;Rack&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#activerecord-without-rails"&gt;ActiveRecord without Rails&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#alongside-sinatra-or-other-frameworks"&gt;Alongside Sinatra (or other frameworks)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#rails"&gt;Rails&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="#rails--52"&gt;Rails &amp;lt; 5.2&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#rails-60"&gt;Rails 6.0&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="#modules"&gt;Modules&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="#remounting"&gt;Remounting&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="#mount-configuration"&gt;Mount Configuration&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="#versioning"&gt;Versioning&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="#path"&gt;Path&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#header"&gt;Header&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#accept-version-header"&gt;Accept-Version Header&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#param"&gt;Param&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="#describing-methods"&gt;Describing Methods&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#configuration"&gt;Configuration&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#parameters"&gt;Parameters&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="#params-class"&gt;Params Class&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#declared"&gt;Declared&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#include-parent-namespaces"&gt;Include Parent Namespaces&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#include-missing"&gt;Include Missing&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="#parameter-validation-and-coercion"&gt;Parameter Validation and Coercion&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="#supported-parameter-types"&gt;Supported Parameter Types&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#integerfixnum-and-coercions"&gt;Integer/Fixnum and Coercions&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#custom-types-and-coercions"&gt;Custom Types and Coercions&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#multipart-file-parameters"&gt;Multipart File Parameters&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#first-class-json-types"&gt;First-Class JSON Types&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#multiple-allowed-types"&gt;Multiple Allowed Types&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#validation-of-nested-parameters"&gt;Validation of Nested Parameters&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#dependent-parameters"&gt;Dependent Parameters&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#group-options"&gt;Group Options&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#renaming"&gt;Renaming&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#built-in-validators"&gt;Built-in Validators&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="#allow_blank"&gt;allow_blank&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#values"&gt;values&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#except_values"&gt;except_values&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#same_as"&gt;same_as&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#regexp"&gt;regexp&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#mutually_exclusive"&gt;mutually_exclusive&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#exactly_one_of"&gt;exactly_one_of&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#at_least_one_of"&gt;at_least_one_of&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#all_or_none_of"&gt;all_or_none_of&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#nested-mutually_exclusive-exactly_one_of-at_least_one_of-all_or_none_of"&gt;Nested mutually_exclusive, exactly_one_of, at_least_one_of, all_or_none_of&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="#namespace-validation-and-coercion"&gt;Namespace Validation and Coercion&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#custom-validators"&gt;Custom Validators&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#validation-errors"&gt;Validation Errors&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#i18n"&gt;I18n&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#custom-validation-messages"&gt;Custom Validation messages&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="#presence-allow_blank-values-regexp"&gt;presence, allow_blank, values, regexp&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#same_as-1"&gt;same_as&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#all_or_none_of-1"&gt;all_or_none_of&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#mutually_exclusive-1"&gt;mutually_exclusive&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#exactly_one_of-1"&gt;exactly_one_of&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#at_least_one_of-1"&gt;at_least_one_of&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#coerce"&gt;Coerce&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#with-lambdas"&gt;With Lambdas&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#pass-symbols-for-i18n-translations"&gt;Pass symbols for i18n translations&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#overriding-attribute-names"&gt;Overriding Attribute Names&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#with-default"&gt;With Default&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="#headers"&gt;Headers&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="#request"&gt;Request&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="#header-case-handling"&gt;Header Case Handling&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="#response"&gt;Response&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="#routes"&gt;Routes&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#helpers"&gt;Helpers&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#path-helpers"&gt;Path Helpers&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#parameter-documentation"&gt;Parameter Documentation&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#cookies"&gt;Cookies&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#http-status-code"&gt;HTTP Status Code&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#redirecting"&gt;Redirecting&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#recognizing-path"&gt;Recognizing Path&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#allowed-methods"&gt;Allowed Methods&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#raising-exceptions"&gt;Raising Exceptions&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="#default-error-http-status-code"&gt;Default Error HTTP Status Code&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#handling-404"&gt;Handling 404&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="#exception-handling"&gt;Exception Handling&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="#rescuing-exceptions-inside-namespaces"&gt;Rescuing exceptions inside namespaces&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#unrescuable-exceptions"&gt;Unrescuable Exceptions&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#exceptions-that-should-be-rescued-explicitly"&gt;Exceptions that should be rescued explicitly&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#rails-3x"&gt;Rails 3.x&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="#logging"&gt;Logging&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#api-formats"&gt;API Formats&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="#jsonp"&gt;JSONP&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#cors"&gt;CORS&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="#content-type"&gt;Content-type&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#api-data-formats"&gt;API Data Formats&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#json-and-xml-processors"&gt;JSON and XML Processors&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#restful-model-representations"&gt;RESTful Model Representations&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="#grape-entities"&gt;Grape Entities&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#hypermedia-and-roar"&gt;Hypermedia and Roar&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#rabl"&gt;Rabl&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#active-model-serializers"&gt;Active Model Serializers&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="#sending-raw-or-no-data"&gt;Sending Raw or No Data&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#authentication"&gt;Authentication&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="#basic-and-digest-auth"&gt;Basic and Digest Auth&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#register-custom-middleware-for-authentication"&gt;Register custom middleware for authentication&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="#describing-and-inspecting-an-api"&gt;Describing and Inspecting an API&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#current-route-and-endpoint"&gt;Current Route and Endpoint&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#before-after-and-finally"&gt;Before, After and Finally&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#anchoring"&gt;Anchoring&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#using-custom-middleware"&gt;Using Custom Middleware&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="#grape-middleware"&gt;Grape Middleware&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#rails-middleware"&gt;Rails Middleware&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#remote-ip"&gt;Remote IP&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="#writing-tests"&gt;Writing Tests&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="#writing-tests-with-rack"&gt;Writing Tests with Rack&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="#rspec"&gt;RSpec&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#airborne"&gt;Airborne&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#minitest"&gt;MiniTest&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="#writing-tests-with-rails"&gt;Writing Tests with Rails&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="#rspec-1"&gt;RSpec&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#minitest-1"&gt;MiniTest&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="#stubbing-helpers"&gt;Stubbing Helpers&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="#reloading-api-changes-in-development"&gt;Reloading API Changes in Development&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="#reloading-in-rack-applications"&gt;Reloading in Rack Applications&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#reloading-in-rails-applications"&gt;Reloading in Rails Applications&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="#performance-monitoring"&gt;Performance Monitoring&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="#active-support-instrumentation"&gt;Active Support Instrumentation&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="#endpoint_rungrape"&gt;endpoint_run.grape&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#endpoint_rendergrape"&gt;endpoint_render.grape&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#endpoint_run_filtersgrape"&gt;endpoint_run_filters.grape&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#endpoint_run_validatorsgrape"&gt;endpoint_run_validators.grape&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#format_responsegrape"&gt;format_response.grape&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="#monitoring-products"&gt;Monitoring Products&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="#contributing-to-grape"&gt;Contributing to Grape&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#license"&gt;License&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#copyright"&gt;Copyright&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-what-is-grape" class="anchor" aria-hidden="true" href="#what-is-grape"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;What is Grape?&lt;/h2&gt;
&lt;p&gt;Grape is a REST-like API framework for Ruby. It's designed to run on Rack
or complement existing web application frameworks such as Rails and Sinatra by
providing a simple DSL to easily develop RESTful APIs. It has built-in support
for common conventions, including multiple formats, subdomain/prefix restriction,
content negotiation, versioning and much more.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-stable-release" class="anchor" aria-hidden="true" href="#stable-release"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Stable Release&lt;/h2&gt;
&lt;p&gt;You're reading the documentation for the next release of Grape, which should be &lt;strong&gt;1.2.5&lt;/strong&gt;.
Please read &lt;a href="UPGRADING.md"&gt;UPGRADING&lt;/a&gt; when upgrading from a previous version.
The current stable release is &lt;a href="https://github.com/ruby-grape/grape/blob/v1.2.4/README.md"&gt;1.2.4&lt;/a&gt;.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-project-resources" class="anchor" aria-hidden="true" href="#project-resources"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Project Resources&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://www.ruby-grape.org" rel="nofollow"&gt;Grape Website&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://www.rubydoc.info/gems/grape" rel="nofollow"&gt;Documentation&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Need help? Try &lt;a href="http://groups.google.com/group/ruby-grape" rel="nofollow"&gt;Grape Google Group&lt;/a&gt; or &lt;a href="https://gitter.im/ruby-grape/grape" rel="nofollow"&gt;Gitter&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://twitter.com/grapeframework" rel="nofollow"&gt;Follow us on Twitter&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-installation" class="anchor" aria-hidden="true" href="#installation"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Installation&lt;/h2&gt;
&lt;p&gt;Grape is available as a gem, to install it just install the gem:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;gem install grape
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;If you're using Bundler, add the gem to Gemfile.&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;gem 'grape'
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Run &lt;code&gt;bundle install&lt;/code&gt;.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-basic-usage" class="anchor" aria-hidden="true" href="#basic-usage"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Basic Usage&lt;/h2&gt;
&lt;p&gt;Grape APIs are Rack applications that are created by subclassing &lt;code&gt;Grape::API&lt;/code&gt;.
Below is a simple example showing some of the more common features of Grape in
the context of recreating parts of the Twitter API.&lt;/p&gt;
&lt;div class="highlight highlight-source-ruby"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;module&lt;/span&gt; &lt;span class="pl-en"&gt;Twitter&lt;/span&gt;
  &lt;span class="pl-k"&gt;class&lt;/span&gt; &lt;span class="pl-en"&gt;API&lt;span class="pl-e"&gt; &amp;lt; Grape::API&lt;/span&gt;&lt;/span&gt;
    version &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;v1&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-c1"&gt;using:&lt;/span&gt; &lt;span class="pl-c1"&gt;:header&lt;/span&gt;, &lt;span class="pl-c1"&gt;vendor:&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;twitter&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;
    &lt;span class="pl-c1"&gt;format&lt;/span&gt; &lt;span class="pl-c1"&gt;:json&lt;/span&gt;
    prefix &lt;span class="pl-c1"&gt;:api&lt;/span&gt;

    helpers &lt;span class="pl-k"&gt;do&lt;/span&gt;
      &lt;span class="pl-k"&gt;def&lt;/span&gt; &lt;span class="pl-en"&gt;current_user&lt;/span&gt;
        &lt;span class="pl-smi"&gt;@current_user&lt;/span&gt; &lt;span class="pl-k"&gt;||=&lt;/span&gt; &lt;span class="pl-c1"&gt;User&lt;/span&gt;.authorize!(env)
      &lt;span class="pl-k"&gt;end&lt;/span&gt;

      &lt;span class="pl-k"&gt;def&lt;/span&gt; &lt;span class="pl-en"&gt;authenticate!&lt;/span&gt;
        error!(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;401 Unauthorized&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-c1"&gt;401&lt;/span&gt;) &lt;span class="pl-k"&gt;unless&lt;/span&gt; current_user
      &lt;span class="pl-k"&gt;end&lt;/span&gt;
    &lt;span class="pl-k"&gt;end&lt;/span&gt;

    resource &lt;span class="pl-c1"&gt;:statuses&lt;/span&gt; &lt;span class="pl-k"&gt;do&lt;/span&gt;
      desc &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;Return a public timeline.&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;
      get &lt;span class="pl-c1"&gt;:public_timeline&lt;/span&gt; &lt;span class="pl-k"&gt;do&lt;/span&gt;
        &lt;span class="pl-c1"&gt;Status&lt;/span&gt;.limit(&lt;span class="pl-c1"&gt;20&lt;/span&gt;)
      &lt;span class="pl-k"&gt;end&lt;/span&gt;

      desc &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;Return a personal timeline.&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;
      get &lt;span class="pl-c1"&gt;:home_timeline&lt;/span&gt; &lt;span class="pl-k"&gt;do&lt;/span&gt;
        authenticate!
        current_user.statuses.limit(&lt;span class="pl-c1"&gt;20&lt;/span&gt;)
      &lt;span class="pl-k"&gt;end&lt;/span&gt;

      desc &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;Return a status.&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;
      params &lt;span class="pl-k"&gt;do&lt;/span&gt;
        requires &lt;span class="pl-c1"&gt;:id&lt;/span&gt;, &lt;span class="pl-c1"&gt;type:&lt;/span&gt; &lt;span class="pl-c1"&gt;Integer&lt;/span&gt;, &lt;span class="pl-c1"&gt;desc:&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;Status ID.&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;
      &lt;span class="pl-k"&gt;end&lt;/span&gt;
      route_param &lt;span class="pl-c1"&gt;:id&lt;/span&gt; &lt;span class="pl-k"&gt;do&lt;/span&gt;
        get &lt;span class="pl-k"&gt;do&lt;/span&gt;
          &lt;span class="pl-c1"&gt;Status&lt;/span&gt;.find(params[&lt;span class="pl-c1"&gt;:id&lt;/span&gt;])
        &lt;span class="pl-k"&gt;end&lt;/span&gt;
      &lt;span class="pl-k"&gt;end&lt;/span&gt;

      desc &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;Create a status.&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;
      params &lt;span class="pl-k"&gt;do&lt;/span&gt;
        requires &lt;span class="pl-c1"&gt;:status&lt;/span&gt;, &lt;span class="pl-c1"&gt;type:&lt;/span&gt; &lt;span class="pl-c1"&gt;String&lt;/span&gt;, &lt;span class="pl-c1"&gt;desc:&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;Your status.&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;
      &lt;span class="pl-k"&gt;end&lt;/span&gt;
      post &lt;span class="pl-k"&gt;do&lt;/span&gt;
        authenticate!
        &lt;span class="pl-c1"&gt;Status&lt;/span&gt;.create!({
          &lt;span class="pl-c1"&gt;user:&lt;/span&gt; current_user,
          &lt;span class="pl-c1"&gt;text:&lt;/span&gt; params[&lt;span class="pl-c1"&gt;:status&lt;/span&gt;]
        })
      &lt;span class="pl-k"&gt;end&lt;/span&gt;

      desc &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;Update a status.&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;
      params &lt;span class="pl-k"&gt;do&lt;/span&gt;
        requires &lt;span class="pl-c1"&gt;:id&lt;/span&gt;, &lt;span class="pl-c1"&gt;type:&lt;/span&gt; &lt;span class="pl-c1"&gt;String&lt;/span&gt;, &lt;span class="pl-c1"&gt;desc:&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;Status ID.&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;
        requires &lt;span class="pl-c1"&gt;:status&lt;/span&gt;, &lt;span class="pl-c1"&gt;type:&lt;/span&gt; &lt;span class="pl-c1"&gt;String&lt;/span&gt;, &lt;span class="pl-c1"&gt;desc:&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;Your status.&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;
      &lt;span class="pl-k"&gt;end&lt;/span&gt;
      put &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;:id&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt; &lt;span class="pl-k"&gt;do&lt;/span&gt;
        authenticate!
        current_user.statuses.find(params[&lt;span class="pl-c1"&gt;:id&lt;/span&gt;]).update({
          &lt;span class="pl-c1"&gt;user:&lt;/span&gt; current_user,
          &lt;span class="pl-c1"&gt;text:&lt;/span&gt; params[&lt;span class="pl-c1"&gt;:status&lt;/span&gt;]
        })
      &lt;span class="pl-k"&gt;end&lt;/span&gt;

      desc &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;Delete a status.&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;
      params &lt;span class="pl-k"&gt;do&lt;/span&gt;
        requires &lt;span class="pl-c1"&gt;:id&lt;/span&gt;, &lt;span class="pl-c1"&gt;type:&lt;/span&gt; &lt;span class="pl-c1"&gt;String&lt;/span&gt;, &lt;span class="pl-c1"&gt;desc:&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;Status ID.&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;
      &lt;span class="pl-k"&gt;end&lt;/span&gt;
      delete &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;:id&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt; &lt;span class="pl-k"&gt;do&lt;/span&gt;
        authenticate!
        current_user.statuses.find(params[&lt;span class="pl-c1"&gt;:id&lt;/span&gt;]).destroy
      &lt;span class="pl-k"&gt;end&lt;/span&gt;
    &lt;span class="pl-k"&gt;end&lt;/span&gt;
  &lt;span class="pl-k"&gt;end&lt;/span&gt;
&lt;span class="pl-k"&gt;end&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h2&gt;&lt;a id="user-content-mounting" class="anchor" aria-hidden="true" href="#mounting"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Mounting&lt;/h2&gt;
&lt;h3&gt;&lt;a id="user-content-all" class="anchor" aria-hidden="true" href="#all"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;All&lt;/h3&gt;
&lt;p&gt;By default Grape will compile the routes on the first route, it is possible to pre-load routes using the &lt;code&gt;compile!&lt;/code&gt; method.&lt;/p&gt;
&lt;div class="highlight highlight-source-ruby"&gt;&lt;pre&gt;&lt;span class="pl-c1"&gt;Twitter&lt;/span&gt;::&lt;span class="pl-c1"&gt;API&lt;/span&gt;.compile!&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;This can be added to your &lt;code&gt;config.ru&lt;/code&gt; (if using rackup), &lt;code&gt;application.rb&lt;/code&gt; (if using rails), or any file that loads your server.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-rack" class="anchor" aria-hidden="true" href="#rack"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Rack&lt;/h3&gt;
&lt;p&gt;The above sample creates a Rack application that can be run from a rackup &lt;code&gt;config.ru&lt;/code&gt; file
with &lt;code&gt;rackup&lt;/code&gt;:&lt;/p&gt;
&lt;div class="highlight highlight-source-ruby"&gt;&lt;pre&gt;run &lt;span class="pl-c1"&gt;Twitter&lt;/span&gt;::&lt;span class="pl-c1"&gt;API&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;(With pre-loading you can use)&lt;/p&gt;
&lt;div class="highlight highlight-source-ruby"&gt;&lt;pre&gt;&lt;span class="pl-c1"&gt;Twitter&lt;/span&gt;::&lt;span class="pl-c1"&gt;API&lt;/span&gt;.compile!
run &lt;span class="pl-c1"&gt;Twitter&lt;/span&gt;::&lt;span class="pl-c1"&gt;API&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;And would respond to the following routes:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;GET /api/statuses/public_timeline
GET /api/statuses/home_timeline
GET /api/statuses/:id
POST /api/statuses
PUT /api/statuses/:id
DELETE /api/statuses/:id
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Grape will also automatically respond to HEAD and OPTIONS for all GET, and just OPTIONS for all other routes.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-activerecord-without-rails" class="anchor" aria-hidden="true" href="#activerecord-without-rails"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;ActiveRecord without Rails&lt;/h3&gt;
&lt;p&gt;If you want to use ActiveRecord within Grape, you will need to make sure that ActiveRecord's connection pool
is handled correctly.&lt;/p&gt;
&lt;p&gt;The easiest way to achieve that is by using ActiveRecord's &lt;code&gt;ConnectionManagement&lt;/code&gt; middleware in your
&lt;code&gt;config.ru&lt;/code&gt; before mounting Grape, e.g.:&lt;/p&gt;
&lt;div class="highlight highlight-source-ruby"&gt;&lt;pre&gt;use &lt;span class="pl-c1"&gt;ActiveRecord&lt;/span&gt;::&lt;span class="pl-c1"&gt;ConnectionAdapters&lt;/span&gt;::&lt;span class="pl-c1"&gt;ConnectionManagement&lt;/span&gt;

run &lt;span class="pl-c1"&gt;Twitter&lt;/span&gt;::&lt;span class="pl-c1"&gt;API&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h3&gt;&lt;a id="user-content-alongside-sinatra-or-other-frameworks" class="anchor" aria-hidden="true" href="#alongside-sinatra-or-other-frameworks"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Alongside Sinatra (or other frameworks)&lt;/h3&gt;
&lt;p&gt;If you wish to mount Grape alongside another Rack framework such as Sinatra, you can do so easily using
&lt;code&gt;Rack::Cascade&lt;/code&gt;:&lt;/p&gt;
&lt;div class="highlight highlight-source-ruby"&gt;&lt;pre&gt;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; Example config.ru&lt;/span&gt;

&lt;span class="pl-k"&gt;require&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;sinatra&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;
&lt;span class="pl-k"&gt;require&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;grape&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;

&lt;span class="pl-k"&gt;class&lt;/span&gt; &lt;span class="pl-en"&gt;API&lt;span class="pl-e"&gt; &amp;lt; Grape::API&lt;/span&gt;&lt;/span&gt;
  get &lt;span class="pl-c1"&gt;:hello&lt;/span&gt; &lt;span class="pl-k"&gt;do&lt;/span&gt;
    { &lt;span class="pl-c1"&gt;hello:&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;world&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt; }
  &lt;span class="pl-k"&gt;end&lt;/span&gt;
&lt;span class="pl-k"&gt;end&lt;/span&gt;

&lt;span class="pl-k"&gt;class&lt;/span&gt; &lt;span class="pl-en"&gt;Web&lt;span class="pl-e"&gt; &amp;lt; Sinatra::Base&lt;/span&gt;&lt;/span&gt;
  get &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;/&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt; &lt;span class="pl-k"&gt;do&lt;/span&gt;
    &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;Hello world.&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;
  &lt;span class="pl-k"&gt;end&lt;/span&gt;
&lt;span class="pl-k"&gt;end&lt;/span&gt;

use &lt;span class="pl-c1"&gt;Rack&lt;/span&gt;::&lt;span class="pl-c1"&gt;Session&lt;/span&gt;::&lt;span class="pl-c1"&gt;Cookie&lt;/span&gt;
run &lt;span class="pl-c1"&gt;Rack&lt;/span&gt;::&lt;span class="pl-c1"&gt;Cascade&lt;/span&gt;.&lt;span class="pl-k"&gt;new&lt;/span&gt; [&lt;span class="pl-c1"&gt;API&lt;/span&gt;, &lt;span class="pl-c1"&gt;Web&lt;/span&gt;]&lt;/pre&gt;&lt;/div&gt;
&lt;h3&gt;&lt;a id="user-content-rails" class="anchor" aria-hidden="true" href="#rails"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Rails&lt;/h3&gt;
&lt;p&gt;Place API files into &lt;code&gt;app/api&lt;/code&gt;. Rails expects a subdirectory that matches the name of the Ruby module and a file name that matches the name of the class. In our example, the file name location and directory for &lt;code&gt;Twitter::API&lt;/code&gt; should be &lt;code&gt;app/api/twitter/api.rb&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;Modify &lt;code&gt;config/routes&lt;/code&gt;:&lt;/p&gt;
&lt;div class="highlight highlight-source-ruby"&gt;&lt;pre&gt;mount &lt;span class="pl-c1"&gt;Twitter&lt;/span&gt;::&lt;span class="pl-c1"&gt;API&lt;/span&gt; =&amp;gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;/&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h4&gt;&lt;a id="user-content-rails--52" class="anchor" aria-hidden="true" href="#rails--52"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Rails &amp;lt; 5.2&lt;/h4&gt;
&lt;p&gt;Modify &lt;code&gt;application.rb&lt;/code&gt;:&lt;/p&gt;
&lt;div class="highlight highlight-source-ruby"&gt;&lt;pre&gt;config.paths.add &lt;span class="pl-c1"&gt;File&lt;/span&gt;.join(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;app&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;api&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;), &lt;span class="pl-c1"&gt;glob:&lt;/span&gt; &lt;span class="pl-c1"&gt;File&lt;/span&gt;.join(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;**&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;*.rb&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;)
config.autoload_paths &lt;span class="pl-k"&gt;+=&lt;/span&gt; &lt;span class="pl-c1"&gt;Dir&lt;/span&gt;[&lt;span class="pl-c1"&gt;Rails&lt;/span&gt;.root.join(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;app&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;api&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;*&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;)]&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;See &lt;a href="#reloading-api-changes-in-development"&gt;below&lt;/a&gt; for additional code that enables reloading of API changes in development.&lt;/p&gt;
&lt;h4&gt;&lt;a id="user-content-rails-60" class="anchor" aria-hidden="true" href="#rails-60"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Rails 6.0&lt;/h4&gt;
&lt;p&gt;For Rails versions greater than 6.0.0.beta2, &lt;code&gt;Zeitwerk&lt;/code&gt; autoloader is the default for CRuby. By default &lt;code&gt;Zeitwerk&lt;/code&gt; inflects &lt;code&gt;api&lt;/code&gt; as &lt;code&gt;Api&lt;/code&gt; instead of &lt;code&gt;API&lt;/code&gt;. To make our example work, you need to uncomment the lines at the bottom of &lt;code&gt;config/initializers/inflections.rb&lt;/code&gt;, and add &lt;code&gt;API&lt;/code&gt; as an acronym:&lt;/p&gt;
&lt;div class="highlight highlight-source-ruby"&gt;&lt;pre&gt;&lt;span class="pl-c1"&gt;ActiveSupport&lt;/span&gt;::&lt;span class="pl-c1"&gt;Inflector&lt;/span&gt;.inflections(&lt;span class="pl-c1"&gt;:en&lt;/span&gt;) &lt;span class="pl-k"&gt;do&lt;/span&gt; |&lt;span class="pl-smi"&gt;inflect&lt;/span&gt;|
  inflect.acronym &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;API&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;
&lt;span class="pl-k"&gt;end&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h3&gt;&lt;a id="user-content-modules" class="anchor" aria-hidden="true" href="#modules"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Modules&lt;/h3&gt;
&lt;p&gt;You can mount multiple API implementations inside another one. These don't have to be
different versions, but may be components of the same API.&lt;/p&gt;
&lt;div class="highlight highlight-source-ruby"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;class&lt;/span&gt; &lt;span class="pl-en"&gt;Twitter::API&lt;span class="pl-e"&gt; &amp;lt; Grape::API&lt;/span&gt;&lt;/span&gt;
  mount &lt;span class="pl-c1"&gt;Twitter&lt;/span&gt;::&lt;span class="pl-c1"&gt;APIv1&lt;/span&gt;
  mount &lt;span class="pl-c1"&gt;Twitter&lt;/span&gt;::&lt;span class="pl-c1"&gt;APIv2&lt;/span&gt;
&lt;span class="pl-k"&gt;end&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;You can also mount on a path, which is similar to using &lt;code&gt;prefix&lt;/code&gt; inside the mounted API itself.&lt;/p&gt;
&lt;div class="highlight highlight-source-ruby"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;class&lt;/span&gt; &lt;span class="pl-en"&gt;Twitter::API&lt;span class="pl-e"&gt; &amp;lt; Grape::API&lt;/span&gt;&lt;/span&gt;
  mount &lt;span class="pl-c1"&gt;Twitter&lt;/span&gt;::&lt;span class="pl-c1"&gt;APIv1&lt;/span&gt; =&amp;gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;/v1&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;
&lt;span class="pl-k"&gt;end&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Keep in mind such declarations as &lt;code&gt;before/after/rescue_from&lt;/code&gt; must be placed before &lt;code&gt;mount&lt;/code&gt; in a case where they should be inherited.&lt;/p&gt;
&lt;div class="highlight highlight-source-ruby"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;class&lt;/span&gt; &lt;span class="pl-en"&gt;Twitter::API&lt;span class="pl-e"&gt; &amp;lt; Grape::API&lt;/span&gt;&lt;/span&gt;
  before &lt;span class="pl-k"&gt;do&lt;/span&gt;
    header &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;X-Base-Header&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;will be defined for all APIs that are mounted below&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;
  &lt;span class="pl-k"&gt;end&lt;/span&gt;

  mount &lt;span class="pl-c1"&gt;Twitter&lt;/span&gt;::&lt;span class="pl-c1"&gt;Users&lt;/span&gt;
  mount &lt;span class="pl-c1"&gt;Twitter&lt;/span&gt;::&lt;span class="pl-c1"&gt;Search&lt;/span&gt;
&lt;span class="pl-k"&gt;end&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h2&gt;&lt;a id="user-content-remounting" class="anchor" aria-hidden="true" href="#remounting"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Remounting&lt;/h2&gt;
&lt;p&gt;You can mount the same endpoints in two different locations.&lt;/p&gt;
&lt;div class="highlight highlight-source-ruby"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;class&lt;/span&gt; &lt;span class="pl-en"&gt;Voting::API&lt;span class="pl-e"&gt; &amp;lt; Grape::API&lt;/span&gt;&lt;/span&gt;
  namespace &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;votes&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt; &lt;span class="pl-k"&gt;do&lt;/span&gt;
    get &lt;span class="pl-k"&gt;do&lt;/span&gt;
      &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; Your logic&lt;/span&gt;
    &lt;span class="pl-k"&gt;end&lt;/span&gt;

    post &lt;span class="pl-k"&gt;do&lt;/span&gt;
      &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; Your logic&lt;/span&gt;
    &lt;span class="pl-k"&gt;end&lt;/span&gt;
  &lt;span class="pl-k"&gt;end&lt;/span&gt;
&lt;span class="pl-k"&gt;end&lt;/span&gt;

&lt;span class="pl-k"&gt;class&lt;/span&gt; &lt;span class="pl-en"&gt;Post::API&lt;span class="pl-e"&gt; &amp;lt; Grape::API&lt;/span&gt;&lt;/span&gt;
  mount &lt;span class="pl-c1"&gt;Voting&lt;/span&gt;::&lt;span class="pl-c1"&gt;API&lt;/span&gt;
&lt;span class="pl-k"&gt;end&lt;/span&gt;

&lt;span class="pl-k"&gt;class&lt;/span&gt; &lt;span class="pl-en"&gt;Comment::API&lt;span class="pl-e"&gt; &amp;lt; Grape::API&lt;/span&gt;&lt;/span&gt;
  mount &lt;span class="pl-c1"&gt;Voting&lt;/span&gt;::&lt;span class="pl-c1"&gt;API&lt;/span&gt;
&lt;span class="pl-k"&gt;end&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Assuming that the post and comment endpoints are mounted in &lt;code&gt;/posts&lt;/code&gt; and &lt;code&gt;/comments&lt;/code&gt;, you should now be able to do &lt;code&gt;get /posts/votes&lt;/code&gt;, &lt;code&gt;post /posts/votes&lt;/code&gt;, &lt;code&gt;get /comments/votes&lt;/code&gt; and &lt;code&gt;post /comments/votes&lt;/code&gt;.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-mount-configuration" class="anchor" aria-hidden="true" href="#mount-configuration"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Mount Configuration&lt;/h3&gt;
&lt;p&gt;You can configure remountable endpoints to change how they behave according to where they are mounted.&lt;/p&gt;
&lt;div class="highlight highlight-source-ruby"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;class&lt;/span&gt; &lt;span class="pl-en"&gt;Voting::API&lt;span class="pl-e"&gt; &amp;lt; Grape::API&lt;/span&gt;&lt;/span&gt;
  namespace &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;votes&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt; &lt;span class="pl-k"&gt;do&lt;/span&gt;
    desc &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;Vote for your &lt;span class="pl-pse"&gt;#{&lt;/span&gt;&lt;span class="pl-s1"&gt;configuration[&lt;span class="pl-c1"&gt;:votable&lt;/span&gt;]&lt;/span&gt;&lt;span class="pl-pse"&gt;}&lt;/span&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;
    get &lt;span class="pl-k"&gt;do&lt;/span&gt;
      &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; Your logic&lt;/span&gt;
    &lt;span class="pl-k"&gt;end&lt;/span&gt;
  &lt;span class="pl-k"&gt;end&lt;/span&gt;
&lt;span class="pl-k"&gt;end&lt;/span&gt;

&lt;span class="pl-k"&gt;class&lt;/span&gt; &lt;span class="pl-en"&gt;Post::API&lt;span class="pl-e"&gt; &amp;lt; Grape::API&lt;/span&gt;&lt;/span&gt;
  mount &lt;span class="pl-c1"&gt;Voting&lt;/span&gt;::&lt;span class="pl-c1"&gt;API&lt;/span&gt;, &lt;span class="pl-c1"&gt;with:&lt;/span&gt; { &lt;span class="pl-c1"&gt;votable:&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;posts&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt; }
&lt;span class="pl-k"&gt;end&lt;/span&gt;

&lt;span class="pl-k"&gt;class&lt;/span&gt; &lt;span class="pl-en"&gt;Comment::API&lt;span class="pl-e"&gt; &amp;lt; Grape::API&lt;/span&gt;&lt;/span&gt;
  mount &lt;span class="pl-c1"&gt;Voting&lt;/span&gt;::&lt;span class="pl-c1"&gt;API&lt;/span&gt;, &lt;span class="pl-c1"&gt;with:&lt;/span&gt; { &lt;span class="pl-c1"&gt;votable:&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;comments&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt; }
&lt;span class="pl-k"&gt;end&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;You can access &lt;code&gt;configuration&lt;/code&gt; on the class (to use as dynamic attributes), inside blocks (like namespace)&lt;/p&gt;
&lt;p&gt;If you want logic happening given on an &lt;code&gt;configuration&lt;/code&gt;, you can use the helper &lt;code&gt;given&lt;/code&gt;.&lt;/p&gt;
&lt;div class="highlight highlight-source-ruby"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;class&lt;/span&gt; &lt;span class="pl-en"&gt;ConditionalEndpoint::API&lt;span class="pl-e"&gt; &amp;lt; Grape::API&lt;/span&gt;&lt;/span&gt;
  given configuration[&lt;span class="pl-c1"&gt;:some_setting&lt;/span&gt;] &lt;span class="pl-k"&gt;do&lt;/span&gt;
    get &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;mount_this_endpoint_conditionally&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt; &lt;span class="pl-k"&gt;do&lt;/span&gt;
      configuration[&lt;span class="pl-c1"&gt;:configurable_response&lt;/span&gt;]
    &lt;span class="pl-k"&gt;end&lt;/span&gt;
  &lt;span class="pl-k"&gt;end&lt;/span&gt;
&lt;span class="pl-k"&gt;end&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;If you want a block of logic running every time an endpoint is mounted (within which you can access the &lt;code&gt;configuration&lt;/code&gt; Hash)&lt;/p&gt;
&lt;div class="highlight highlight-source-ruby"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;class&lt;/span&gt; &lt;span class="pl-en"&gt;ConditionalEndpoint::API&lt;span class="pl-e"&gt; &amp;lt; Grape::API&lt;/span&gt;&lt;/span&gt;
  mounted &lt;span class="pl-k"&gt;do&lt;/span&gt;
    &lt;span class="pl-c1"&gt;YourLogger&lt;/span&gt;.info &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;This API was mounted at: &lt;span class="pl-pse"&gt;#{&lt;/span&gt;&lt;span class="pl-s1"&gt;&lt;span class="pl-c1"&gt;Time&lt;/span&gt;.now&lt;/span&gt;&lt;span class="pl-pse"&gt;}&lt;/span&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;

    get configuration[&lt;span class="pl-c1"&gt;:endpoint_name&lt;/span&gt;] &lt;span class="pl-k"&gt;do&lt;/span&gt;
      configuration[&lt;span class="pl-c1"&gt;:configurable_response&lt;/span&gt;]
    &lt;span class="pl-k"&gt;end&lt;/span&gt;
  &lt;span class="pl-k"&gt;end&lt;/span&gt;
&lt;span class="pl-k"&gt;end&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h2&gt;&lt;a id="user-content-versioning" class="anchor" aria-hidden="true" href="#versioning"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Versioning&lt;/h2&gt;
&lt;p&gt;There are four strategies in which clients can reach your API's endpoints: &lt;code&gt;:path&lt;/code&gt;,
&lt;code&gt;:header&lt;/code&gt;, &lt;code&gt;:accept_version_header&lt;/code&gt; and &lt;code&gt;:param&lt;/code&gt;. The default strategy is &lt;code&gt;:path&lt;/code&gt;.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-path" class="anchor" aria-hidden="true" href="#path"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Path&lt;/h3&gt;
&lt;div class="highlight highlight-source-ruby"&gt;&lt;pre&gt;version &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;v1&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-c1"&gt;using:&lt;/span&gt; &lt;span class="pl-c1"&gt;:path&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Using this versioning strategy, clients should pass the desired version in the URL.&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;curl http://localhost:9292/v1/statuses/public_timeline
&lt;/code&gt;&lt;/pre&gt;
&lt;h3&gt;&lt;a id="user-content-header" class="anchor" aria-hidden="true" href="#header"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Header&lt;/h3&gt;
&lt;div class="highlight highlight-source-ruby"&gt;&lt;pre&gt;version &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;v1&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-c1"&gt;using:&lt;/span&gt; &lt;span class="pl-c1"&gt;:header&lt;/span&gt;, &lt;span class="pl-c1"&gt;vendor:&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;twitter&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Currently, Grape only supports versioned media types in the following format:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;vnd.vendor-and-or-resource-v1234+format
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Basically all tokens between the final &lt;code&gt;-&lt;/code&gt; and the &lt;code&gt;+&lt;/code&gt; will be interpreted as the version.&lt;/p&gt;
&lt;p&gt;Using this versioning strategy, clients should pass the desired version in the HTTP &lt;code&gt;Accept&lt;/code&gt; head.&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;curl -H Accept:application/vnd.twitter-v1+json http://localhost:9292/statuses/public_timeline
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;By default, the first matching version is used when no &lt;code&gt;Accept&lt;/code&gt; header is
supplied. This behavior is similar to routing in Rails. To circumvent this default behavior,
one could use the &lt;code&gt;:strict&lt;/code&gt; option. When this option is set to &lt;code&gt;true&lt;/code&gt;, a &lt;code&gt;406 Not Acceptable&lt;/code&gt; error
is returned when no correct &lt;code&gt;Accept&lt;/code&gt; header is supplied.&lt;/p&gt;
&lt;p&gt;When an invalid &lt;code&gt;Accept&lt;/code&gt; header is supplied, a &lt;code&gt;406 Not Acceptable&lt;/code&gt; error is returned if the &lt;code&gt;:cascade&lt;/code&gt;
option is set to &lt;code&gt;false&lt;/code&gt;. Otherwise a &lt;code&gt;404 Not Found&lt;/code&gt; error is returned by Rack if no other route
matches.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-accept-version-header" class="anchor" aria-hidden="true" href="#accept-version-header"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Accept-Version Header&lt;/h3&gt;
&lt;div class="highlight highlight-source-ruby"&gt;&lt;pre&gt;version &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;v1&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-c1"&gt;using:&lt;/span&gt; &lt;span class="pl-c1"&gt;:accept_version_header&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Using this versioning strategy, clients should pass the desired version in the HTTP &lt;code&gt;Accept-Version&lt;/code&gt; header.&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;curl -H "Accept-Version:v1" http://localhost:9292/statuses/public_timeline
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;By default, the first matching version is used when no &lt;code&gt;Accept-Version&lt;/code&gt; header is
supplied. This behavior is similar to routing in Rails. To circumvent this default behavior,
one could use the &lt;code&gt;:strict&lt;/code&gt; option. When this option is set to &lt;code&gt;true&lt;/code&gt;, a &lt;code&gt;406 Not Acceptable&lt;/code&gt; error
is returned when no correct &lt;code&gt;Accept&lt;/code&gt; header is supplied and the &lt;code&gt;:cascade&lt;/code&gt; option is set to &lt;code&gt;false&lt;/code&gt;.
Otherwise a &lt;code&gt;404 Not Found&lt;/code&gt; error is returned by Rack if no other route matches.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-param" class="anchor" aria-hidden="true" href="#param"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Param&lt;/h3&gt;
&lt;div class="highlight highlight-source-ruby"&gt;&lt;pre&gt;version &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;v1&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-c1"&gt;using:&lt;/span&gt; &lt;span class="pl-c1"&gt;:param&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Using this versioning strategy, clients should pass the desired version as a request parameter,
either in the URL query string or in the request body.&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;curl http://localhost:9292/statuses/public_timeline?apiver=v1
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;The default name for the query parameter is 'apiver' but can be specified using the &lt;code&gt;:parameter&lt;/code&gt; option.&lt;/p&gt;
&lt;div class="highlight highlight-source-ruby"&gt;&lt;pre&gt;version &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;v1&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-c1"&gt;using:&lt;/span&gt; &lt;span class="pl-c1"&gt;:param&lt;/span&gt;, &lt;span class="pl-c1"&gt;parameter:&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;v&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;pre&gt;&lt;code&gt;curl http://localhost:9292/statuses/public_timeline?v=v1
&lt;/code&gt;&lt;/pre&gt;
&lt;h2&gt;&lt;a id="user-content-describing-methods" class="anchor" aria-hidden="true" href="#describing-methods"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Describing Methods&lt;/h2&gt;
&lt;p&gt;You can add a description to API methods and namespaces. The description would be used by &lt;a href="https://github.com/ruby-grape/grape-swagger"&gt;grape-swagger&lt;/a&gt; to generate swagger compliant documentation.&lt;/p&gt;
&lt;p&gt;Note: Description block is only for documentation and won't affects API behavior.&lt;/p&gt;
&lt;div class="highlight highlight-source-ruby"&gt;&lt;pre&gt;desc &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;Returns your public timeline.&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt; &lt;span class="pl-k"&gt;do&lt;/span&gt;
  summary &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;summary&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;
  detail &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;more details&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;
  params  &lt;span class="pl-c1"&gt;API&lt;/span&gt;::&lt;span class="pl-c1"&gt;Entities&lt;/span&gt;::&lt;span class="pl-c1"&gt;Status&lt;/span&gt;.documentation
  success &lt;span class="pl-c1"&gt;API&lt;/span&gt;::&lt;span class="pl-c1"&gt;Entities&lt;/span&gt;::&lt;span class="pl-c1"&gt;Entity&lt;/span&gt;
  failure [[&lt;span class="pl-c1"&gt;401&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;Unauthorized&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;Entities::Error&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;]]
  named &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;My named route&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;
  headers &lt;span class="pl-c1"&gt;XAuthToken:&lt;/span&gt; {
            &lt;span class="pl-c1"&gt;description:&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;Validates your identity&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;,
            &lt;span class="pl-c1"&gt;required:&lt;/span&gt; &lt;span class="pl-c1"&gt;true&lt;/span&gt;
          },
          &lt;span class="pl-c1"&gt;XOptionalHeader:&lt;/span&gt; {
            &lt;span class="pl-c1"&gt;description:&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;Not really needed&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;,
            &lt;span class="pl-c1"&gt;required:&lt;/span&gt; &lt;span class="pl-c1"&gt;false&lt;/span&gt;
          }
  hidden &lt;span class="pl-c1"&gt;false&lt;/span&gt;
  deprecated &lt;span class="pl-c1"&gt;false&lt;/span&gt;
  is_array &lt;span class="pl-c1"&gt;true&lt;/span&gt;
  nickname &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;nickname&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;
  produces [&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;application/json&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;]
  consumes [&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;application/json&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;]
  tags [&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;tag1&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;tag2&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;]
&lt;span class="pl-k"&gt;end&lt;/span&gt;
get &lt;span class="pl-c1"&gt;:public_timeline&lt;/span&gt; &lt;span class="pl-k"&gt;do&lt;/span&gt;
  &lt;span class="pl-c1"&gt;Status&lt;/span&gt;.limit(&lt;span class="pl-c1"&gt;20&lt;/span&gt;)
&lt;span class="pl-k"&gt;end&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;detail&lt;/code&gt;: A more enhanced description&lt;/li&gt;
&lt;li&gt;&lt;code&gt;params&lt;/code&gt;: Define parameters directly from an &lt;code&gt;Entity&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;success&lt;/code&gt;: (former entity) The &lt;code&gt;Entity&lt;/code&gt; to be used to present by default this route&lt;/li&gt;
&lt;li&gt;&lt;code&gt;failure&lt;/code&gt;: (former http_codes) A definition of the used failure HTTP Codes and Entities&lt;/li&gt;
&lt;li&gt;&lt;code&gt;named&lt;/code&gt;: A helper to give a route a name and find it with this name in the documentation Hash&lt;/li&gt;
&lt;li&gt;&lt;code&gt;headers&lt;/code&gt;: A definition of the used Headers&lt;/li&gt;
&lt;li&gt;Other options can be found in &lt;a href="https://github.com/ruby-grape/grape-swagger"&gt;grape-swagger&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-configuration" class="anchor" aria-hidden="true" href="#configuration"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Configuration&lt;/h2&gt;
&lt;p&gt;Use &lt;code&gt;Grape.configure&lt;/code&gt; to set up global settings at load time.
Currently the configurable settings are:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;param_builder&lt;/code&gt;: Sets the &lt;a href="#parameters"&gt;Parameter Builder&lt;/a&gt;, defaults to &lt;code&gt;Grape::Extensions::ActiveSupport::HashWithIndifferentAccess::ParamBuilder&lt;/code&gt;.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;To change a setting value make sure that at some point during load time the following code runs&lt;/p&gt;
&lt;div class="highlight highlight-source-ruby"&gt;&lt;pre&gt;&lt;span class="pl-c1"&gt;Grape&lt;/span&gt;.configure &lt;span class="pl-k"&gt;do&lt;/span&gt; |&lt;span class="pl-smi"&gt;config&lt;/span&gt;|
  config.setting &lt;span class="pl-k"&gt;=&lt;/span&gt; value
&lt;span class="pl-k"&gt;end&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;For example, for the &lt;code&gt;param_builder&lt;/code&gt;, the following code could run in an initializer:&lt;/p&gt;
&lt;div class="highlight highlight-source-ruby"&gt;&lt;pre&gt;&lt;span class="pl-c1"&gt;Grape&lt;/span&gt;.configure &lt;span class="pl-k"&gt;do&lt;/span&gt; |&lt;span class="pl-smi"&gt;config&lt;/span&gt;|
  config.param_builder &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;Grape&lt;/span&gt;::&lt;span class="pl-c1"&gt;Extensions&lt;/span&gt;::&lt;span class="pl-c1"&gt;Hashie&lt;/span&gt;::&lt;span class="pl-c1"&gt;Mash&lt;/span&gt;::&lt;span class="pl-c1"&gt;ParamBuilder&lt;/span&gt;
&lt;span class="pl-k"&gt;end&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;You can also configure a single API:&lt;/p&gt;
&lt;div class="highlight highlight-source-ruby"&gt;&lt;pre&gt;&lt;span class="pl-c1"&gt;API&lt;/span&gt;.configure &lt;span class="pl-k"&gt;do&lt;/span&gt; |&lt;span class="pl-smi"&gt;config&lt;/span&gt;|
  config[key] &lt;span class="pl-k"&gt;=&lt;/span&gt; value
&lt;span class="pl-k"&gt;end&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;This will be available inside the API with &lt;code&gt;configuration&lt;/code&gt;, as if it were
&lt;a href="#mount-configuration"&gt;mount configuration&lt;/a&gt;.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-parameters" class="anchor" aria-hidden="true" href="#parameters"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Parameters&lt;/h2&gt;
&lt;p&gt;Request parameters are available through the &lt;code&gt;params&lt;/code&gt; hash object. This includes &lt;code&gt;GET&lt;/code&gt;, &lt;code&gt;POST&lt;/code&gt;
and &lt;code&gt;PUT&lt;/code&gt; parameters, along with any named parameters you specify in your route strings.&lt;/p&gt;
&lt;div class="highlight highlight-source-ruby"&gt;&lt;pre&gt;get &lt;span class="pl-c1"&gt;:public_timeline&lt;/span&gt; &lt;span class="pl-k"&gt;do&lt;/span&gt;
  &lt;span class="pl-c1"&gt;Status&lt;/span&gt;.order(params[&lt;span class="pl-c1"&gt;:sort_by&lt;/span&gt;])
&lt;span class="pl-k"&gt;end&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Parameters are automatically populated from the request body on &lt;code&gt;POST&lt;/code&gt; and &lt;code&gt;PUT&lt;/code&gt; for form input, JSON and
XML content-types.&lt;/p&gt;
&lt;p&gt;The request:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;curl -d '{"text": "140 characters"}' 'http://localhost:9292/statuses' -H Content-Type:application/json -v
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;The Grape endpoint:&lt;/p&gt;
&lt;div class="highlight highlight-source-ruby"&gt;&lt;pre&gt;post &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;/statuses&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt; &lt;span class="pl-k"&gt;do&lt;/span&gt;
  &lt;span class="pl-c1"&gt;Status&lt;/span&gt;.create!(&lt;span class="pl-c1"&gt;text:&lt;/span&gt; params[&lt;span class="pl-c1"&gt;:text&lt;/span&gt;])
&lt;span class="pl-k"&gt;end&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Multipart POSTs and PUTs are supported as well.&lt;/p&gt;
&lt;p&gt;The request:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;curl --form image_file='@image.jpg;type=image/jpg' http://localhost:9292/upload
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;The Grape endpoint:&lt;/p&gt;
&lt;div class="highlight highlight-source-ruby"&gt;&lt;pre&gt;post &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;upload&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt; &lt;span class="pl-k"&gt;do&lt;/span&gt;
  &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; file in params[:image_file]&lt;/span&gt;
&lt;span class="pl-k"&gt;end&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;In the case of conflict between either of:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;route string parameters&lt;/li&gt;
&lt;li&gt;&lt;code&gt;GET&lt;/code&gt;, &lt;code&gt;POST&lt;/code&gt; and &lt;code&gt;PUT&lt;/code&gt; parameters&lt;/li&gt;
&lt;li&gt;the contents of the request body on &lt;code&gt;POST&lt;/code&gt; and &lt;code&gt;PUT&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Route string parameters will have precedence.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-params-class" class="anchor" aria-hidden="true" href="#params-class"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Params Class&lt;/h3&gt;
&lt;p&gt;By default parameters are available as &lt;code&gt;ActiveSupport::HashWithIndifferentAccess&lt;/code&gt;. This can be changed to, for example, Ruby &lt;code&gt;Hash&lt;/code&gt; or &lt;code&gt;Hashie::Mash&lt;/code&gt; for the entire API.&lt;/p&gt;
&lt;div class="highlight highlight-source-ruby"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;class&lt;/span&gt; &lt;span class="pl-en"&gt;API&lt;span class="pl-e"&gt; &amp;lt; Grape::API&lt;/span&gt;&lt;/span&gt;
  &lt;span class="pl-k"&gt;include&lt;/span&gt; &lt;span class="pl-c1"&gt;Grape&lt;/span&gt;::&lt;span class="pl-c1"&gt;Extensions&lt;/span&gt;::&lt;span class="pl-c1"&gt;Hashie&lt;/span&gt;::&lt;span class="pl-c1"&gt;Mash&lt;/span&gt;::&lt;span class="pl-c1"&gt;ParamBuilder&lt;/span&gt;

  params &lt;span class="pl-k"&gt;do&lt;/span&gt;
    optional &lt;span class="pl-c1"&gt;:color&lt;/span&gt;, &lt;span class="pl-c1"&gt;type:&lt;/span&gt; &lt;span class="pl-c1"&gt;String&lt;/span&gt;
  &lt;span class="pl-k"&gt;end&lt;/span&gt;
  get &lt;span class="pl-k"&gt;do&lt;/span&gt;
    params.color &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; instead of params[:color]&lt;/span&gt;
  &lt;span class="pl-k"&gt;end&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;The class can also be overridden on individual parameter blocks using &lt;code&gt;build_with&lt;/code&gt; as follows.&lt;/p&gt;
&lt;div class="highlight highlight-source-ruby"&gt;&lt;pre&gt;params &lt;span class="pl-k"&gt;do&lt;/span&gt;
  build_with &lt;span class="pl-c1"&gt;Grape&lt;/span&gt;::&lt;span class="pl-c1"&gt;Extensions&lt;/span&gt;::&lt;span class="pl-c1"&gt;Hash&lt;/span&gt;::&lt;span class="pl-c1"&gt;ParamBuilder&lt;/span&gt;
  optional &lt;span class="pl-c1"&gt;:color&lt;/span&gt;, &lt;span class="pl-c1"&gt;type:&lt;/span&gt; &lt;span class="pl-c1"&gt;String&lt;/span&gt;
&lt;span class="pl-k"&gt;end&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Or globally with the &lt;a href="#configuration"&gt;Configuration&lt;/a&gt; &lt;code&gt;Grape.configure.param_builder&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;In the example above, &lt;code&gt;params["color"]&lt;/code&gt; will return &lt;code&gt;nil&lt;/code&gt; since &lt;code&gt;params&lt;/code&gt; is a plain &lt;code&gt;Hash&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;Available parameter builders are &lt;code&gt;Grape::Extensions::Hash::ParamBuilder&lt;/code&gt;, &lt;code&gt;Grape::Extensions::ActiveSupport::HashWithIndifferentAccess::ParamBuilder&lt;/code&gt; and &lt;code&gt;Grape::Extensions::Hashie::Mash::ParamBuilder&lt;/code&gt;.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-declared" class="anchor" aria-hidden="true" href="#declared"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Declared&lt;/h3&gt;
&lt;p&gt;Grape allows you to access only the parameters that have been declared by your &lt;code&gt;params&lt;/code&gt; block. It filters out the params that have been passed, but are not allowed. Consider the following API endpoint:&lt;/p&gt;
&lt;div class="highlight highlight-source-ruby"&gt;&lt;pre&gt;&lt;span class="pl-c1"&gt;format&lt;/span&gt; &lt;span class="pl-c1"&gt;:json&lt;/span&gt;

post &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;users/signup&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt; &lt;span class="pl-k"&gt;do&lt;/span&gt;
  { &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;declared_params&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt; =&amp;gt; declared(params) }
&lt;span class="pl-k"&gt;end&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;If you do not specify any parameters, &lt;code&gt;declared&lt;/code&gt; will return an empty hash.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Request&lt;/strong&gt;&lt;/p&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt;curl -X POST -H &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;Content-Type: application/json&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; localhost:9292/users/signup -d &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;{"user": {"first_name":"first name", "last_name": "last name"}}&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;strong&gt;Response&lt;/strong&gt;&lt;/p&gt;
&lt;div class="highlight highlight-source-json"&gt;&lt;pre&gt;{
  &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;declared_params&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;: {}
}
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Once we add parameters requirements, grape will start returning only the declared parameters.&lt;/p&gt;
&lt;div class="highlight highlight-source-ruby"&gt;&lt;pre&gt;&lt;span class="pl-c1"&gt;format&lt;/span&gt; &lt;span class="pl-c1"&gt;:json&lt;/span&gt;

params &lt;span class="pl-k"&gt;do&lt;/span&gt;
  requires &lt;span class="pl-c1"&gt;:user&lt;/span&gt;, &lt;span class="pl-c1"&gt;type:&lt;/span&gt; &lt;span class="pl-c1"&gt;Hash&lt;/span&gt; &lt;span class="pl-k"&gt;do&lt;/span&gt;
    requires &lt;span class="pl-c1"&gt;:first_name&lt;/span&gt;, &lt;span class="pl-c1"&gt;type:&lt;/span&gt; &lt;span class="pl-c1"&gt;String&lt;/span&gt;
    requires &lt;span class="pl-c1"&gt;:last_name&lt;/span&gt;, &lt;span class="pl-c1"&gt;type:&lt;/span&gt; &lt;span class="pl-c1"&gt;String&lt;/span&gt;
  &lt;span class="pl-k"&gt;end&lt;/span&gt;
&lt;span class="pl-k"&gt;end&lt;/span&gt;

post &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;users/signup&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt; &lt;span class="pl-k"&gt;do&lt;/span&gt;
  { &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;declared_params&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt; =&amp;gt; declared(params) }
&lt;span class="pl-k"&gt;end&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;strong&gt;Request&lt;/strong&gt;&lt;/p&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt;curl -X POST -H &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;Content-Type: application/json&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; localhost:9292/users/signup -d &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;{"user": {"first_name":"first name", "last_name": "last name", "random": "never shown"}}&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;strong&gt;Response&lt;/strong&gt;&lt;/p&gt;
&lt;div class="highlight highlight-source-json"&gt;&lt;pre&gt;{
  &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;declared_params&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;: {
    &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;user&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;: {
      &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;first_name&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;first name&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;,
      &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;last_name&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;last name&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;
    }
  }
}&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;The returned hash is an &lt;code&gt;ActiveSupport::HashWithIndifferentAccess&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;The &lt;code&gt;#declared&lt;/code&gt; method is not available to &lt;code&gt;before&lt;/code&gt; filters, as those are evaluated prior to parameter coercion.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-include-parent-namespaces" class="anchor" aria-hidden="true" href="#include-parent-namespaces"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Include Parent Namespaces&lt;/h3&gt;
&lt;p&gt;By default &lt;code&gt;declared(params)&lt;/code&gt; includes parameters that were defined in all parent namespaces. If you want to return only parameters from your current namespace, you can set &lt;code&gt;include_parent_namespaces&lt;/code&gt; option to &lt;code&gt;false&lt;/code&gt;.&lt;/p&gt;
&lt;div class="highlight highlight-source-ruby"&gt;&lt;pre&gt;&lt;span class="pl-c1"&gt;format&lt;/span&gt; &lt;span class="pl-c1"&gt;:json&lt;/span&gt;

namespace &lt;span class="pl-c1"&gt;:parent&lt;/span&gt; &lt;span class="pl-k"&gt;do&lt;/span&gt;
  params &lt;span class="pl-k"&gt;do&lt;/span&gt;
    requires &lt;span class="pl-c1"&gt;:parent_name&lt;/span&gt;, &lt;span class="pl-c1"&gt;type:&lt;/span&gt; &lt;span class="pl-c1"&gt;String&lt;/span&gt;
  &lt;span class="pl-k"&gt;end&lt;/span&gt;

  namespace &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;:parent_name&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt; &lt;span class="pl-k"&gt;do&lt;/span&gt;
    params &lt;span class="pl-k"&gt;do&lt;/span&gt;
      requires &lt;span class="pl-c1"&gt;:child_name&lt;/span&gt;, &lt;span class="pl-c1"&gt;type:&lt;/span&gt; &lt;span class="pl-c1"&gt;String&lt;/span&gt;
    &lt;span class="pl-k"&gt;end&lt;/span&gt;
    get &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;:child_name&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt; &lt;span class="pl-k"&gt;do&lt;/span&gt;
      {
        &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;without_parent_namespaces&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt; =&amp;gt; declared(params, &lt;span class="pl-c1"&gt;include_parent_namespaces:&lt;/span&gt; &lt;span class="pl-c1"&gt;false&lt;/span&gt;),
        &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;with_parent_namespaces&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt; =&amp;gt; declared(params, &lt;span class="pl-c1"&gt;include_parent_namespaces:&lt;/span&gt; &lt;span class="pl-c1"&gt;true&lt;/span&gt;),
      }
    &lt;span class="pl-k"&gt;end&lt;/span&gt;
  &lt;span class="pl-k"&gt;end&lt;/span&gt;
&lt;span class="pl-k"&gt;end&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;strong&gt;Request&lt;/strong&gt;&lt;/p&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt;curl -X GET -H &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;Content-Type: application/json&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; localhost:9292/parent/foo/bar&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;strong&gt;Response&lt;/strong&gt;&lt;/p&gt;
&lt;div class="highlight highlight-source-json"&gt;&lt;pre&gt;{
  &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;without_parent_namespaces&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;: {
    &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;child_name&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;bar&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;
  },
  &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;with_parent_namespaces&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;: {
    &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;parent_name&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;foo&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;,
    &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;child_name&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;bar&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;
  },
}&lt;/pre&gt;&lt;/div&gt;
&lt;h3&gt;&lt;a id="user-content-include-missing" class="anchor" aria-hidden="true" href="#include-missing"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Include Missing&lt;/h3&gt;
&lt;p&gt;By default &lt;code&gt;declared(params)&lt;/code&gt; includes parameters that have &lt;code&gt;nil&lt;/code&gt; values. If you want to return only the parameters that are not &lt;code&gt;nil&lt;/code&gt;, you can use the &lt;code&gt;include_missing&lt;/code&gt; option. By default, &lt;code&gt;include_missing&lt;/code&gt; is set to &lt;code&gt;true&lt;/code&gt;. Consider the following API:&lt;/p&gt;
&lt;div class="highlight highlight-source-ruby"&gt;&lt;pre&gt;&lt;span class="pl-c1"&gt;format&lt;/span&gt; &lt;span class="pl-c1"&gt;:json&lt;/span&gt;

params &lt;span class="pl-k"&gt;do&lt;/span&gt;
  requires &lt;span class="pl-c1"&gt;:first_name&lt;/span&gt;, &lt;span class="pl-c1"&gt;type:&lt;/span&gt; &lt;span class="pl-c1"&gt;String&lt;/span&gt;
  optional &lt;span class="pl-c1"&gt;:last_name&lt;/span&gt;, &lt;span class="pl-c1"&gt;type:&lt;/span&gt; &lt;span class="pl-c1"&gt;String&lt;/span&gt;
&lt;span class="pl-k"&gt;end&lt;/span&gt;

post &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;users/signup&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt; &lt;span class="pl-k"&gt;do&lt;/span&gt;
  { &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;declared_params&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt; =&amp;gt; declared(params, &lt;span class="pl-c1"&gt;include_missing:&lt;/span&gt; &lt;span class="pl-c1"&gt;false&lt;/span&gt;) }
&lt;span class="pl-k"&gt;end&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;strong&gt;Request&lt;/strong&gt;&lt;/p&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt;curl -X POST -H &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;Content-Type: application/json&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; localhost:9292/users/signup -d &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;{"user": {"first_name":"first name", "random": "never shown"}}&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;strong&gt;Response with include_missing:false&lt;/strong&gt;&lt;/p&gt;
&lt;div class="highlight highlight-source-json"&gt;&lt;pre&gt;{
  &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;declared_params&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;: {
    &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;user&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;: {
      &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;first_name&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;first name&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;
    }
  }
}&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;strong&gt;Response with include_missing:true&lt;/strong&gt;&lt;/p&gt;
&lt;div class="highlight highlight-source-json"&gt;&lt;pre&gt;{
  &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;declared_params&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;: {
    &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;first_name&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;first name&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;,
    &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;last_name&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;: &lt;span class="pl-c1"&gt;null&lt;/span&gt;
  }
}&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;It also works on nested hashes:&lt;/p&gt;
&lt;div class="highlight highlight-source-ruby"&gt;&lt;pre&gt;&lt;span class="pl-c1"&gt;format&lt;/span&gt; &lt;span class="pl-c1"&gt;:json&lt;/span&gt;

params &lt;span class="pl-k"&gt;do&lt;/span&gt;
  requires &lt;span class="pl-c1"&gt;:user&lt;/span&gt;, &lt;span class="pl-c1"&gt;type:&lt;/span&gt; &lt;span class="pl-c1"&gt;Hash&lt;/span&gt; &lt;span class="pl-k"&gt;do&lt;/span&gt;
    requires &lt;span class="pl-c1"&gt;:first_name&lt;/span&gt;, &lt;span class="pl-c1"&gt;type:&lt;/span&gt; &lt;span class="pl-c1"&gt;String&lt;/span&gt;
    optional &lt;span class="pl-c1"&gt;:last_name&lt;/span&gt;, &lt;span class="pl-c1"&gt;type:&lt;/span&gt; &lt;span class="pl-c1"&gt;String&lt;/span&gt;
    requires &lt;span class="pl-c1"&gt;:address&lt;/span&gt;, &lt;span class="pl-c1"&gt;type:&lt;/span&gt; &lt;span class="pl-c1"&gt;Hash&lt;/span&gt; &lt;span class="pl-k"&gt;do&lt;/span&gt;
      requires &lt;span class="pl-c1"&gt;:city&lt;/span&gt;, &lt;span class="pl-c1"&gt;type:&lt;/span&gt; &lt;span class="pl-c1"&gt;String&lt;/span&gt;
      optional &lt;span class="pl-c1"&gt;:region&lt;/span&gt;, &lt;span class="pl-c1"&gt;type:&lt;/span&gt; &lt;span class="pl-c1"&gt;String&lt;/span&gt;
    &lt;span class="pl-k"&gt;end&lt;/span&gt;
  &lt;span class="pl-k"&gt;end&lt;/span&gt;
&lt;span class="pl-k"&gt;end&lt;/span&gt;

post &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;users/signup&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt; &lt;span class="pl-k"&gt;do&lt;/span&gt;
  { &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;declared_params&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt; =&amp;gt; declared(params, &lt;span class="pl-c1"&gt;include_missing:&lt;/span&gt; &lt;span class="pl-c1"&gt;false&lt;/span&gt;) }
&lt;span class="pl-k"&gt;end&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;strong&gt;Request&lt;/strong&gt;&lt;/p&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt;curl -X POST -H &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;Content-Type: application/json&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; localhost:9292/users/signup -d &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;{"user": {"first_name":"first name", "random": "never shown", "address": { "city": "SF"}}}&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;strong&gt;Response with include_missing:false&lt;/strong&gt;&lt;/p&gt;
&lt;div class="highlight highlight-source-json"&gt;&lt;pre&gt;{
  &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;declared_params&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;: {
    &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;user&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;: {
      &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;first_name&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;first name&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;,
      &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;address&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;: {
        &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;city&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;SF&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;
      }
    }
  }
}&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;strong&gt;Response with include_missing:true&lt;/strong&gt;&lt;/p&gt;
&lt;div class="highlight highlight-source-json"&gt;&lt;pre&gt;{
  &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;declared_params&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;: {
    &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;user&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;: {
      &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;first_name&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;first name&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;,
      &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;last_name&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;: &lt;span class="pl-c1"&gt;null&lt;/span&gt;,
      &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;address&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;: {
        &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;city&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;Zurich&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;,
        &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;region&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;: &lt;span class="pl-c1"&gt;null&lt;/span&gt;
      }
    }
  }
}&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Note that an attribute with a &lt;code&gt;nil&lt;/code&gt; value is not considered &lt;em&gt;missing&lt;/em&gt; and will also be returned
when &lt;code&gt;include_missing&lt;/code&gt; is set to &lt;code&gt;false&lt;/code&gt;:&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Request&lt;/strong&gt;&lt;/p&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt;curl -X POST -H &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;Content-Type: application/json&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; localhost:9292/users/signup -d &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;{"user": {"first_name":"first name", "last_name": null, "address": { "city": "SF"}}}&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;strong&gt;Response with include_missing:false&lt;/strong&gt;&lt;/p&gt;
&lt;div class="highlight highlight-source-json"&gt;&lt;pre&gt;{
  &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;declared_params&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;: {
    &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;user&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;: {
      &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;first_name&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;first name&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;,
      &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;last_name&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;: &lt;span class="pl-c1"&gt;null&lt;/span&gt;,
      &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;address&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;: { &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;city&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;SF&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;}
    }
  }
}&lt;/pre&gt;&lt;/div&gt;
&lt;h2&gt;&lt;a id="user-content-parameter-validation-and-coercion" class="anchor" aria-hidden="true" href="#parameter-validation-and-coercion"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Parameter Validation and Coercion&lt;/h2&gt;
&lt;p&gt;You can define validations and coercion options for your parameters using a &lt;code&gt;params&lt;/code&gt; block.&lt;/p&gt;
&lt;div class="highlight highlight-source-ruby"&gt;&lt;pre&gt;params &lt;span class="pl-k"&gt;do&lt;/span&gt;
  requires &lt;span class="pl-c1"&gt;:id&lt;/span&gt;, &lt;span class="pl-c1"&gt;type:&lt;/span&gt; &lt;span class="pl-c1"&gt;Integer&lt;/span&gt;
  optional &lt;span class="pl-c1"&gt;:text&lt;/span&gt;, &lt;span class="pl-c1"&gt;type:&lt;/span&gt; &lt;span class="pl-c1"&gt;String&lt;/span&gt;, &lt;span class="pl-c1"&gt;regexp:&lt;/span&gt; &lt;span class="pl-sr"&gt;/&lt;span class="pl-cce"&gt;\A&lt;/span&gt;&lt;span class="pl-pds"&gt;[a-z]&lt;/span&gt;+&lt;span class="pl-cce"&gt;\z&lt;/span&gt;/&lt;/span&gt;
  group &lt;span class="pl-c1"&gt;:media&lt;/span&gt;, &lt;span class="pl-c1"&gt;type:&lt;/span&gt; &lt;span class="pl-c1"&gt;Hash&lt;/span&gt; &lt;span class="pl-k"&gt;do&lt;/span&gt;
    requires &lt;span class="pl-c1"&gt;:url&lt;/span&gt;
  &lt;span class="pl-k"&gt;end&lt;/span&gt;
  optional &lt;span class="pl-c1"&gt;:audio&lt;/span&gt;, &lt;span class="pl-c1"&gt;type:&lt;/span&gt; &lt;span class="pl-c1"&gt;Hash&lt;/span&gt; &lt;span class="pl-k"&gt;do&lt;/span&gt;
    requires &lt;span class="pl-c1"&gt;:format&lt;/span&gt;, &lt;span class="pl-c1"&gt;type:&lt;/span&gt; &lt;span class="pl-c1"&gt;Symbol&lt;/span&gt;, &lt;span class="pl-c1"&gt;values:&lt;/span&gt; [&lt;span class="pl-c1"&gt;:mp3&lt;/span&gt;, &lt;span class="pl-c1"&gt;:wav&lt;/span&gt;, &lt;span class="pl-c1"&gt;:aac&lt;/span&gt;, &lt;span class="pl-c1"&gt;:ogg&lt;/span&gt;], &lt;span class="pl-c1"&gt;default:&lt;/span&gt; &lt;span class="pl-c1"&gt;:mp3&lt;/span&gt;
  &lt;span class="pl-k"&gt;end&lt;/span&gt;
  mutually_exclusive &lt;span class="pl-c1"&gt;:media&lt;/span&gt;, &lt;span class="pl-c1"&gt;:audio&lt;/span&gt;
&lt;span class="pl-k"&gt;end&lt;/span&gt;
put &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;:id&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt; &lt;span class="pl-k"&gt;do&lt;/span&gt;
  &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; params[:id] is an Integer&lt;/span&gt;
&lt;span class="pl-k"&gt;end&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;When a type is specified an implicit validation is done after the coercion to ensure
the output type is the one declared.&lt;/p&gt;
&lt;p&gt;Optional parameters can have a default value.&lt;/p&gt;
&lt;div class="highlight highlight-source-ruby"&gt;&lt;pre&gt;params &lt;span class="pl-k"&gt;do&lt;/span&gt;
  optional &lt;span class="pl-c1"&gt;:color&lt;/span&gt;, &lt;span class="pl-c1"&gt;type:&lt;/span&gt; &lt;span class="pl-c1"&gt;String&lt;/span&gt;, &lt;span class="pl-c1"&gt;default:&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;blue&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;
  optional &lt;span class="pl-c1"&gt;:random_number&lt;/span&gt;, &lt;span class="pl-c1"&gt;type:&lt;/span&gt; &lt;span class="pl-c1"&gt;Integer&lt;/span&gt;, &lt;span class="pl-c1"&gt;default:&lt;/span&gt; &lt;span class="pl-c1"&gt;-&amp;gt;&lt;/span&gt; { &lt;span class="pl-c1"&gt;Random&lt;/span&gt;.&lt;span class="pl-c1"&gt;rand&lt;/span&gt;(&lt;span class="pl-c1"&gt;1&lt;/span&gt;..&lt;span class="pl-c1"&gt;100&lt;/span&gt;) }
  optional &lt;span class="pl-c1"&gt;:non_random_number&lt;/span&gt;, &lt;span class="pl-c1"&gt;type:&lt;/span&gt; &lt;span class="pl-c1"&gt;Integer&lt;/span&gt;, &lt;span class="pl-c1"&gt;default:&lt;/span&gt;  &lt;span class="pl-c1"&gt;Random&lt;/span&gt;.&lt;span class="pl-c1"&gt;rand&lt;/span&gt;(&lt;span class="pl-c1"&gt;1&lt;/span&gt;..&lt;span class="pl-c1"&gt;100&lt;/span&gt;)
&lt;span class="pl-k"&gt;end&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Note that default values will be passed through to any validation options specified.
The following example will always fail if &lt;code&gt;:color&lt;/code&gt; is not explicitly provided.&lt;/p&gt;
&lt;p&gt;Default values are eagerly evaluated. Above &lt;code&gt;:non_random_number&lt;/code&gt; will evaluate to the same
number for each call to the endpoint of this &lt;code&gt;params&lt;/code&gt; block. To have the default evaluate
lazily with each request use a lambda, like &lt;code&gt;:random_number&lt;/code&gt; above.&lt;/p&gt;
&lt;div class="highlight highlight-source-ruby"&gt;&lt;pre&gt;params &lt;span class="pl-k"&gt;do&lt;/span&gt;
  optional &lt;span class="pl-c1"&gt;:color&lt;/span&gt;, &lt;span class="pl-c1"&gt;type:&lt;/span&gt; &lt;span class="pl-c1"&gt;String&lt;/span&gt;, &lt;span class="pl-c1"&gt;default:&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;blue&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-c1"&gt;values:&lt;/span&gt; [&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;red&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;green&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;]
&lt;span class="pl-k"&gt;end&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;The correct implementation is to ensure the default value passes all validations.&lt;/p&gt;
&lt;div class="highlight highlight-source-ruby"&gt;&lt;pre&gt;params &lt;span class="pl-k"&gt;do&lt;/span&gt;
  optional &lt;span class="pl-c1"&gt;:color&lt;/span&gt;, &lt;span class="pl-c1"&gt;type:&lt;/span&gt; &lt;span class="pl-c1"&gt;String&lt;/span&gt;, &lt;span class="pl-c1"&gt;default:&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;blue&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-c1"&gt;values:&lt;/span&gt; [&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;blue&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;red&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;green&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;]
&lt;span class="pl-k"&gt;end&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h3&gt;&lt;a id="user-content-supported-parameter-types" class="anchor" aria-hidden="true" href="#supported-parameter-types"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Supported Parameter Types&lt;/h3&gt;
&lt;p&gt;The following are all valid types, supported out of the box by Grape:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Integer&lt;/li&gt;
&lt;li&gt;Float&lt;/li&gt;
&lt;li&gt;BigDecimal&lt;/li&gt;
&lt;li&gt;Numeric&lt;/li&gt;
&lt;li&gt;Date&lt;/li&gt;
&lt;li&gt;DateTime&lt;/li&gt;
&lt;li&gt;Time&lt;/li&gt;
&lt;li&gt;Boolean&lt;/li&gt;
&lt;li&gt;String&lt;/li&gt;
&lt;li&gt;Symbol&lt;/li&gt;
&lt;li&gt;Rack::Multipart::UploadedFile (alias &lt;code&gt;File&lt;/code&gt;)&lt;/li&gt;
&lt;li&gt;JSON&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;&lt;a id="user-content-integerfixnum-and-coercions" class="anchor" aria-hidden="true" href="#integerfixnum-and-coercions"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Integer/Fixnum and Coercions&lt;/h3&gt;
&lt;p&gt;Please be aware that the behavior differs between Ruby 2.4 and earlier versions.
In Ruby 2.4, values consisting of numbers are converted to Integer, but in earlier versions it will be treated as Fixnum.&lt;/p&gt;
&lt;div class="highlight highlight-source-ruby"&gt;&lt;pre&gt;params &lt;span class="pl-k"&gt;do&lt;/span&gt;
  requires &lt;span class="pl-c1"&gt;:integers&lt;/span&gt;, &lt;span class="pl-c1"&gt;type:&lt;/span&gt; &lt;span class="pl-c1"&gt;Hash&lt;/span&gt; &lt;span class="pl-k"&gt;do&lt;/span&gt;
    requires &lt;span class="pl-c1"&gt;:int&lt;/span&gt;, &lt;span class="pl-c1"&gt;coerce:&lt;/span&gt; &lt;span class="pl-c1"&gt;Integer&lt;/span&gt;
  &lt;span class="pl-k"&gt;end&lt;/span&gt;
&lt;span class="pl-k"&gt;end&lt;/span&gt;
get &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;/int&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt; &lt;span class="pl-k"&gt;do&lt;/span&gt;
  params[&lt;span class="pl-c1"&gt;:integers&lt;/span&gt;][&lt;span class="pl-c1"&gt;:int&lt;/span&gt;].class
&lt;span class="pl-k"&gt;end&lt;/span&gt;

...

get &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;/int&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt; &lt;span class="pl-c1"&gt;integers:&lt;/span&gt; { &lt;span class="pl-c1"&gt;int:&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;45&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt; }
  &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt;=&amp;gt; Integer in ruby 2.4&lt;/span&gt;
  &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt;=&amp;gt; Fixnum in earlier ruby versions&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h3&gt;&lt;a id="user-content-custom-types-and-coercions" class="anchor" aria-hidden="true" href="#custom-types-and-coercions"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Custom Types and Coercions&lt;/h3&gt;
&lt;p&gt;Aside from the default set of supported types listed above, any class can be
used as a type as long as an explicit coercion method is supplied. If the type
implements a class-level &lt;code&gt;parse&lt;/code&gt; method, Grape will use it automatically.
This method must take one string argument and return an instance of the correct
type, or raise an exception to indicate the value was invalid. E.g.,&lt;/p&gt;
&lt;div class="highlight highlight-source-ruby"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;class&lt;/span&gt; &lt;span class="pl-en"&gt;Color&lt;/span&gt;
  &lt;span class="pl-k"&gt;attr_reader&lt;/span&gt; &lt;span class="pl-c1"&gt;:value&lt;/span&gt;
  &lt;span class="pl-k"&gt;def&lt;/span&gt; &lt;span class="pl-en"&gt;initialize&lt;/span&gt;(&lt;span class="pl-smi"&gt;color&lt;/span&gt;)
    &lt;span class="pl-smi"&gt;@value&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; color
  &lt;span class="pl-k"&gt;end&lt;/span&gt;

  &lt;span class="pl-k"&gt;def&lt;/span&gt; &lt;span class="pl-en"&gt;self.parse&lt;/span&gt;(&lt;span class="pl-smi"&gt;value&lt;/span&gt;)
    &lt;span class="pl-k"&gt;fail&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;Invalid color&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt; &lt;span class="pl-k"&gt;unless&lt;/span&gt; &lt;span class="pl-s"&gt;%w(blue red green)&lt;/span&gt;.include?(value)
    &lt;span class="pl-k"&gt;new&lt;/span&gt;(value)
  &lt;span class="pl-k"&gt;end&lt;/span&gt;
&lt;span class="pl-k"&gt;end&lt;/span&gt;

params &lt;span class="pl-k"&gt;do&lt;/span&gt;
  requires &lt;span class="pl-c1"&gt;:color&lt;/span&gt;, &lt;span class="pl-c1"&gt;type:&lt;/span&gt; &lt;span class="pl-c1"&gt;Color&lt;/span&gt;, &lt;span class="pl-c1"&gt;default:&lt;/span&gt; &lt;span class="pl-c1"&gt;Color&lt;/span&gt;.&lt;span class="pl-k"&gt;new&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;blue&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;)
  requires &lt;span class="pl-c1"&gt;:more_colors&lt;/span&gt;, &lt;span class="pl-c1"&gt;type:&lt;/span&gt; &lt;span class="pl-c1"&gt;Array&lt;/span&gt;[&lt;span class="pl-c1"&gt;Color&lt;/span&gt;] &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; Collections work&lt;/span&gt;
  optional &lt;span class="pl-c1"&gt;:unique_colors&lt;/span&gt;, &lt;span class="pl-c1"&gt;type:&lt;/span&gt; &lt;span class="pl-c1"&gt;Set&lt;/span&gt;[&lt;span class="pl-c1"&gt;Color&lt;/span&gt;] &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; Duplicates discarded&lt;/span&gt;
&lt;span class="pl-k"&gt;end&lt;/span&gt;

get &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;/stuff&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt; &lt;span class="pl-k"&gt;do&lt;/span&gt;
  &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; params[:color] is already a Color.&lt;/span&gt;
  params[&lt;span class="pl-c1"&gt;:color&lt;/span&gt;].value
&lt;span class="pl-k"&gt;end&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Alternatively, a custom coercion method may be supplied for any type of parameter
using &lt;code&gt;coerce_with&lt;/code&gt;. Any class or object may be given that implements a &lt;code&gt;parse&lt;/code&gt; or
&lt;code&gt;call&lt;/code&gt; method, in that order of precedence. The method must accept a single string
parameter, and the return value must match the given &lt;code&gt;type&lt;/code&gt;.&lt;/p&gt;
&lt;div class="highlight highlight-source-ruby"&gt;&lt;pre&gt;params &lt;span class="pl-k"&gt;do&lt;/span&gt;
  requires &lt;span class="pl-c1"&gt;:passwd&lt;/span&gt;, &lt;span class="pl-c1"&gt;type:&lt;/span&gt; &lt;span class="pl-c1"&gt;String&lt;/span&gt;, &lt;span class="pl-c1"&gt;coerce_with:&lt;/span&gt; &lt;span class="pl-c1"&gt;Base64&lt;/span&gt;.method(&lt;span class="pl-c1"&gt;:decode64&lt;/span&gt;)
  requires &lt;span class="pl-c1"&gt;:loud_color&lt;/span&gt;, &lt;span class="pl-c1"&gt;type:&lt;/span&gt; &lt;span class="pl-c1"&gt;Color&lt;/span&gt;, &lt;span class="pl-c1"&gt;coerce_with:&lt;/span&gt; &lt;span class="pl-c1"&gt;-&amp;gt;&lt;/span&gt;(c) { &lt;span class="pl-c1"&gt;Color&lt;/span&gt;.parse(c.downcase) }

  requires &lt;span class="pl-c1"&gt;:obj&lt;/span&gt;, &lt;span class="pl-c1"&gt;type:&lt;/span&gt; &lt;span class="pl-c1"&gt;Hash&lt;/span&gt;, &lt;span class="pl-c1"&gt;coerce_with:&lt;/span&gt; &lt;span class="pl-c1"&gt;JSON&lt;/span&gt; &lt;span class="pl-k"&gt;do&lt;/span&gt;
    requires &lt;span class="pl-c1"&gt;:words&lt;/span&gt;, &lt;span class="pl-c1"&gt;type:&lt;/span&gt; &lt;span class="pl-c1"&gt;Array&lt;/span&gt;[&lt;span class="pl-c1"&gt;String&lt;/span&gt;], &lt;span class="pl-c1"&gt;coerce_with:&lt;/span&gt; &lt;span class="pl-c1"&gt;-&amp;gt;&lt;/span&gt;(val) { val.split(&lt;span class="pl-sr"&gt;/&lt;span class="pl-cce"&gt;\s&lt;/span&gt;+/&lt;/span&gt;) }
    optional &lt;span class="pl-c1"&gt;:time&lt;/span&gt;, &lt;span class="pl-c1"&gt;type:&lt;/span&gt; &lt;span class="pl-c1"&gt;Time&lt;/span&gt;, &lt;span class="pl-c1"&gt;coerce_with:&lt;/span&gt; &lt;span class="pl-c1"&gt;Chronic&lt;/span&gt;
  &lt;span class="pl-k"&gt;end&lt;/span&gt;
&lt;span class="pl-k"&gt;end&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Example of use of &lt;code&gt;coerce_with&lt;/code&gt; with a lambda (a class with a &lt;code&gt;parse&lt;/code&gt; method could also have been used)
It will parse a string and return an Array of Integers, matching the &lt;code&gt;Array[Integer]&lt;/code&gt; &lt;code&gt;type&lt;/code&gt;.&lt;/p&gt;
&lt;div class="highlight highlight-source-ruby"&gt;&lt;pre&gt;params &lt;span class="pl-k"&gt;do&lt;/span&gt;
  requires &lt;span class="pl-c1"&gt;:values&lt;/span&gt;, &lt;span class="pl-c1"&gt;type:&lt;/span&gt; &lt;span class="pl-c1"&gt;Array&lt;/span&gt;[&lt;span class="pl-c1"&gt;Integer&lt;/span&gt;], &lt;span class="pl-c1"&gt;coerce_with:&lt;/span&gt; &lt;span class="pl-c1"&gt;-&amp;gt;&lt;/span&gt;(val) { val.split(&lt;span class="pl-sr"&gt;/&lt;span class="pl-cce"&gt;\s&lt;/span&gt;+/&lt;/span&gt;).map(&lt;span class="pl-k"&gt;&amp;amp;&lt;/span&gt;&lt;span class="pl-c1"&gt;:to_i&lt;/span&gt;) }
&lt;span class="pl-k"&gt;end&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Grape will assert that coerced values match the given &lt;code&gt;type&lt;/code&gt;, and will reject the request
if they do not. To override this behaviour, custom types may implement a &lt;code&gt;parsed?&lt;/code&gt; method
that should accept a single argument and return &lt;code&gt;true&lt;/code&gt; if the value passes type validation.&lt;/p&gt;
&lt;div class="highlight highlight-source-ruby"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;class&lt;/span&gt; &lt;span class="pl-en"&gt;SecureUri&lt;/span&gt;
  &lt;span class="pl-k"&gt;def&lt;/span&gt; &lt;span class="pl-en"&gt;self.parse&lt;/span&gt;(&lt;span class="pl-smi"&gt;value&lt;/span&gt;)
    &lt;span class="pl-c1"&gt;URI&lt;/span&gt;.parse value
  &lt;span class="pl-k"&gt;end&lt;/span&gt;

  &lt;span class="pl-k"&gt;def&lt;/span&gt; &lt;span class="pl-en"&gt;self.parsed?&lt;/span&gt;(&lt;span class="pl-smi"&gt;value&lt;/span&gt;)
    value.is_a? &lt;span class="pl-c1"&gt;URI&lt;/span&gt;::&lt;span class="pl-c1"&gt;HTTPS&lt;/span&gt;
  &lt;span class="pl-k"&gt;end&lt;/span&gt;
&lt;span class="pl-k"&gt;end&lt;/span&gt;

params &lt;span class="pl-k"&gt;do&lt;/span&gt;
  requires &lt;span class="pl-c1"&gt;:secure_uri&lt;/span&gt;, &lt;span class="pl-c1"&gt;type:&lt;/span&gt; &lt;span class="pl-c1"&gt;SecureUri&lt;/span&gt;
&lt;span class="pl-k"&gt;end&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h3&gt;&lt;a id="user-content-multipart-file-parameters" class="anchor" aria-hidden="true" href="#multipart-file-parameters"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Multipart File Parameters&lt;/h3&gt;
&lt;p&gt;Grape makes use of &lt;code&gt;Rack::Request&lt;/code&gt;'s built-in support for multipart file parameters. Such parameters can be declared with &lt;code&gt;type: File&lt;/code&gt;:&lt;/p&gt;
&lt;div class="highlight highlight-source-ruby"&gt;&lt;pre&gt;params &lt;span class="pl-k"&gt;do&lt;/span&gt;
  requires &lt;span class="pl-c1"&gt;:avatar&lt;/span&gt;, &lt;span class="pl-c1"&gt;type:&lt;/span&gt; &lt;span class="pl-c1"&gt;File&lt;/span&gt;
&lt;span class="pl-k"&gt;end&lt;/span&gt;
post &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;/&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt; &lt;span class="pl-k"&gt;do&lt;/span&gt;
  params[&lt;span class="pl-c1"&gt;:avatar&lt;/span&gt;][&lt;span class="pl-c1"&gt;:filename&lt;/span&gt;] &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; =&amp;gt; 'avatar.png'&lt;/span&gt;
  params[&lt;span class="pl-c1"&gt;:avatar&lt;/span&gt;][&lt;span class="pl-c1"&gt;:type&lt;/span&gt;] &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; =&amp;gt; 'image/png'&lt;/span&gt;
  params[&lt;span class="pl-c1"&gt;:avatar&lt;/span&gt;][&lt;span class="pl-c1"&gt;:tempfile&lt;/span&gt;] &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; =&amp;gt; #&amp;lt;File&amp;gt;&lt;/span&gt;
&lt;span class="pl-k"&gt;end&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h3&gt;&lt;a id="user-content-first-class-json-types" class="anchor" aria-hidden="true" href="#first-class-json-types"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;First-Class &lt;code&gt;JSON&lt;/code&gt; Types&lt;/h3&gt;
&lt;p&gt;Grape supports complex parameters given as JSON-formatted strings using the special &lt;code&gt;type: JSON&lt;/code&gt;
declaration. JSON objects and arrays of objects are accepted equally, with nested validation
rules applied to all objects in either case:&lt;/p&gt;
&lt;div class="highlight highlight-source-ruby"&gt;&lt;pre&gt;params &lt;span class="pl-k"&gt;do&lt;/span&gt;
  requires &lt;span class="pl-c1"&gt;:json&lt;/span&gt;, &lt;span class="pl-c1"&gt;type:&lt;/span&gt; &lt;span class="pl-c1"&gt;JSON&lt;/span&gt; &lt;span class="pl-k"&gt;do&lt;/span&gt;
    requires &lt;span class="pl-c1"&gt;:int&lt;/span&gt;, &lt;span class="pl-c1"&gt;type:&lt;/span&gt; &lt;span class="pl-c1"&gt;Integer&lt;/span&gt;, &lt;span class="pl-c1"&gt;values:&lt;/span&gt; [&lt;span class="pl-c1"&gt;1&lt;/span&gt;, &lt;span class="pl-c1"&gt;2&lt;/span&gt;, &lt;span class="pl-c1"&gt;3&lt;/span&gt;]
  &lt;span class="pl-k"&gt;end&lt;/span&gt;
&lt;span class="pl-k"&gt;end&lt;/span&gt;
get &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;/&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt; &lt;span class="pl-k"&gt;do&lt;/span&gt;
  params[&lt;span class="pl-c1"&gt;:json&lt;/span&gt;].inspect
&lt;span class="pl-k"&gt;end&lt;/span&gt;

client.get(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;/&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-c1"&gt;json:&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;{"int":1}&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;) &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; =&amp;gt; "{:int=&amp;gt;1}"&lt;/span&gt;
client.get(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;/&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-c1"&gt;json:&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;[{"int":"1"}]&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;) &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; =&amp;gt; "[{:int=&amp;gt;1}]"&lt;/span&gt;

client.get(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;/&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-c1"&gt;json:&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;{"int":4}&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;) &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; =&amp;gt; HTTP 400&lt;/span&gt;
client.get(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;/&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-c1"&gt;json:&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;[{"int":4}]&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;) &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; =&amp;gt; HTTP 400&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Additionally &lt;code&gt;type: Array[JSON]&lt;/code&gt; may be used, which explicitly marks the parameter as an array
of objects. If a single object is supplied it will be wrapped.&lt;/p&gt;
&lt;div class="highlight highlight-source-ruby"&gt;&lt;pre&gt;params &lt;span class="pl-k"&gt;do&lt;/span&gt;
  requires &lt;span class="pl-c1"&gt;:json&lt;/span&gt;, &lt;span class="pl-c1"&gt;type:&lt;/span&gt; &lt;span class="pl-c1"&gt;Array&lt;/span&gt;[&lt;span class="pl-c1"&gt;JSON&lt;/span&gt;] &lt;span class="pl-k"&gt;do&lt;/span&gt;
    requires &lt;span class="pl-c1"&gt;:int&lt;/span&gt;, &lt;span class="pl-c1"&gt;type:&lt;/span&gt; &lt;span class="pl-c1"&gt;Integer&lt;/span&gt;
  &lt;span class="pl-k"&gt;end&lt;/span&gt;
&lt;span class="pl-k"&gt;end&lt;/span&gt;
get &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;/&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt; &lt;span class="pl-k"&gt;do&lt;/span&gt;
  params[&lt;span class="pl-c1"&gt;:json&lt;/span&gt;].each { |&lt;span class="pl-smi"&gt;obj&lt;/span&gt;| ... } &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; always works&lt;/span&gt;
&lt;span class="pl-k"&gt;end&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;For stricter control over the type of JSON structure which may be supplied,
use &lt;code&gt;type: Array, coerce_with: JSON&lt;/code&gt; or &lt;code&gt;type: Hash, coerce_with: JSON&lt;/code&gt;.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-multiple-allowed-types" class="anchor" aria-hidden="true" href="#multiple-allowed-types"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Multiple Allowed Types&lt;/h3&gt;
&lt;p&gt;Variant-type parameters can be declared using the &lt;code&gt;types&lt;/code&gt; option rather than &lt;code&gt;type&lt;/code&gt;:&lt;/p&gt;
&lt;div class="highlight highlight-source-ruby"&gt;&lt;pre&gt;params &lt;span class="pl-k"&gt;do&lt;/span&gt;
  requires &lt;span class="pl-c1"&gt;:status_code&lt;/span&gt;, &lt;span class="pl-c1"&gt;types:&lt;/span&gt; [&lt;span class="pl-c1"&gt;Integer&lt;/span&gt;, &lt;span class="pl-c1"&gt;String&lt;/span&gt;, &lt;span class="pl-c1"&gt;Array&lt;/span&gt;[&lt;span class="pl-c1"&gt;Integer&lt;/span&gt;, &lt;span class="pl-c1"&gt;String&lt;/span&gt;]]
&lt;span class="pl-k"&gt;end&lt;/span&gt;
get &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;/&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt; &lt;span class="pl-k"&gt;do&lt;/span&gt;
  params[&lt;span class="pl-c1"&gt;:status_code&lt;/span&gt;].inspect
&lt;span class="pl-k"&gt;end&lt;/span&gt;

client.get(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;/&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-c1"&gt;status_code:&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;OK_GOOD&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;) &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; =&amp;gt; "OK_GOOD"&lt;/span&gt;
client.get(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;/&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-c1"&gt;status_code:&lt;/span&gt; &lt;span class="pl-c1"&gt;300&lt;/span&gt;) &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; =&amp;gt; 300&lt;/span&gt;
client.get(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;/&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-c1"&gt;status_code:&lt;/span&gt; &lt;span class="pl-s"&gt;%w(404 NOT FOUND)&lt;/span&gt;) &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; =&amp;gt; [404, "NOT", "FOUND"]&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;As a special case, variant-member-type collections may also be declared, by
passing a &lt;code&gt;Set&lt;/code&gt; or &lt;code&gt;Array&lt;/code&gt; with more than one member to &lt;code&gt;type&lt;/code&gt;:&lt;/p&gt;
&lt;div class="highlight highlight-source-ruby"&gt;&lt;pre&gt;params &lt;span class="pl-k"&gt;do&lt;/span&gt;
  requires &lt;span class="pl-c1"&gt;:status_codes&lt;/span&gt;, &lt;span class="pl-c1"&gt;type:&lt;/span&gt; &lt;span class="pl-c1"&gt;Array&lt;/span&gt;[&lt;span class="pl-c1"&gt;Integer&lt;/span&gt;,&lt;span class="pl-c1"&gt;String&lt;/span&gt;]
&lt;span class="pl-k"&gt;end&lt;/span&gt;
get &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;/&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt; &lt;span class="pl-k"&gt;do&lt;/span&gt;
  params[&lt;span class="pl-c1"&gt;:status_codes&lt;/span&gt;].inspect
&lt;span class="pl-k"&gt;end&lt;/span&gt;

client.get(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;/&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-c1"&gt;status_codes:&lt;/span&gt; &lt;span class="pl-s"&gt;%w(1 two)&lt;/span&gt;) &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; =&amp;gt; [1, "two"]&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h3&gt;&lt;a id="user-content-validation-of-nested-parameters" class="anchor" aria-hidden="true" href="#validation-of-nested-parameters"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Validation of Nested Parameters&lt;/h3&gt;
&lt;p&gt;Parameters can be nested using &lt;code&gt;group&lt;/code&gt; or by calling &lt;code&gt;requires&lt;/code&gt; or &lt;code&gt;optional&lt;/code&gt; with a block.
In the &lt;a href="#parameter-validation-and-coercion"&gt;above example&lt;/a&gt;, this means &lt;code&gt;params[:media][:url]&lt;/code&gt; is required along with &lt;code&gt;params[:id]&lt;/code&gt;,
and &lt;code&gt;params[:audio][:format]&lt;/code&gt; is required only if &lt;code&gt;params[:audio]&lt;/code&gt; is present.
With a block, &lt;code&gt;group&lt;/code&gt;, &lt;code&gt;requires&lt;/code&gt; and &lt;code&gt;optional&lt;/code&gt; accept an additional option &lt;code&gt;type&lt;/code&gt; which can
be either &lt;code&gt;Array&lt;/code&gt; or &lt;code&gt;Hash&lt;/code&gt;, and defaults to &lt;code&gt;Array&lt;/code&gt;. Depending on the value, the nested
parameters will be treated either as values of a hash or as values of hashes in an array.&lt;/p&gt;
&lt;div class="highlight highlight-source-ruby"&gt;&lt;pre&gt;params &lt;span class="pl-k"&gt;do&lt;/span&gt;
  optional &lt;span class="pl-c1"&gt;:preferences&lt;/span&gt;, &lt;span class="pl-c1"&gt;type:&lt;/span&gt; &lt;span class="pl-c1"&gt;Array&lt;/span&gt; &lt;span class="pl-k"&gt;do&lt;/span&gt;
    requires &lt;span class="pl-c1"&gt;:key&lt;/span&gt;
    requires &lt;span class="pl-c1"&gt;:value&lt;/span&gt;
  &lt;span class="pl-k"&gt;end&lt;/span&gt;

  requires &lt;span class="pl-c1"&gt;:name&lt;/span&gt;, &lt;span class="pl-c1"&gt;type:&lt;/span&gt; &lt;span class="pl-c1"&gt;Hash&lt;/span&gt; &lt;span class="pl-k"&gt;do&lt;/span&gt;
    requires &lt;span class="pl-c1"&gt;:first_name&lt;/span&gt;
    requires &lt;span class="pl-c1"&gt;:last_name&lt;/span&gt;
  &lt;span class="pl-k"&gt;end&lt;/span&gt;
&lt;span class="pl-k"&gt;end&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h3&gt;&lt;a id="user-content-dependent-parameters" class="anchor" aria-hidden="true" href="#dependent-parameters"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Dependent Parameters&lt;/h3&gt;
&lt;p&gt;Suppose some of your parameters are only relevant if another parameter is given;
Grape allows you to express this relationship through the &lt;code&gt;given&lt;/code&gt; method in your
parameters block, like so:&lt;/p&gt;
&lt;div class="highlight highlight-source-ruby"&gt;&lt;pre&gt;params &lt;span class="pl-k"&gt;do&lt;/span&gt;
  optional &lt;span class="pl-c1"&gt;:shelf_id&lt;/span&gt;, &lt;span class="pl-c1"&gt;type:&lt;/span&gt; &lt;span class="pl-c1"&gt;Integer&lt;/span&gt;
  given &lt;span class="pl-c1"&gt;:shelf_id&lt;/span&gt; &lt;span class="pl-k"&gt;do&lt;/span&gt;
    requires &lt;span class="pl-c1"&gt;:bin_id&lt;/span&gt;, &lt;span class="pl-c1"&gt;type:&lt;/span&gt; &lt;span class="pl-c1"&gt;Integer&lt;/span&gt;
  &lt;span class="pl-k"&gt;end&lt;/span&gt;
&lt;span class="pl-k"&gt;end&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;In the example above Grape will use &lt;code&gt;blank?&lt;/code&gt; to check whether the &lt;code&gt;shelf_id&lt;/code&gt; param is present.&lt;/p&gt;
&lt;p&gt;&lt;code&gt;given&lt;/code&gt; also takes a &lt;code&gt;Proc&lt;/code&gt; with custom code. Below, the param &lt;code&gt;description&lt;/code&gt; is required only if the value of &lt;code&gt;category&lt;/code&gt; is equal &lt;code&gt;foo&lt;/code&gt;:&lt;/p&gt;
&lt;div class="highlight highlight-source-ruby"&gt;&lt;pre&gt;params &lt;span class="pl-k"&gt;do&lt;/span&gt;
  optional &lt;span class="pl-c1"&gt;:category&lt;/span&gt;
  given &lt;span class="pl-c1"&gt;category:&lt;/span&gt; &lt;span class="pl-c1"&gt;-&amp;gt;&lt;/span&gt;(val) { val &lt;span class="pl-k"&gt;==&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;foo&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt; } &lt;span class="pl-k"&gt;do&lt;/span&gt;
    requires &lt;span class="pl-c1"&gt;:description&lt;/span&gt;
  &lt;span class="pl-k"&gt;end&lt;/span&gt;
&lt;span class="pl-k"&gt;end&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;You can rename parameters:&lt;/p&gt;
&lt;div class="highlight highlight-source-ruby"&gt;&lt;pre&gt;params &lt;span class="pl-k"&gt;do&lt;/span&gt;
  optional &lt;span class="pl-c1"&gt;:category&lt;/span&gt;, &lt;span class="pl-c1"&gt;as:&lt;/span&gt; &lt;span class="pl-c1"&gt;:type&lt;/span&gt;
  given &lt;span class="pl-c1"&gt;type:&lt;/span&gt; &lt;span class="pl-c1"&gt;-&amp;gt;&lt;/span&gt;(val) { val &lt;span class="pl-k"&gt;==&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;foo&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt; } &lt;span class="pl-k"&gt;do&lt;/span&gt;
    requires &lt;span class="pl-c1"&gt;:description&lt;/span&gt;
  &lt;span class="pl-k"&gt;end&lt;/span&gt;
&lt;span class="pl-k"&gt;end&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Note: param in &lt;code&gt;given&lt;/code&gt; should be the renamed one. In the example, it should be &lt;code&gt;type&lt;/code&gt;, not &lt;code&gt;category&lt;/code&gt;.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-group-options" class="anchor" aria-hidden="true" href="#group-options"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Group Options&lt;/h3&gt;
&lt;p&gt;Parameters options can be grouped. It can be useful if you want to extract
common validation or types for several parameters. The example below presents a
typical case when parameters share common options.&lt;/p&gt;
&lt;div class="highlight highlight-source-ruby"&gt;&lt;pre&gt;params &lt;span class="pl-k"&gt;do&lt;/span&gt;
  requires &lt;span class="pl-c1"&gt;:first_name&lt;/span&gt;, &lt;span class="pl-c1"&gt;type:&lt;/span&gt; &lt;span class="pl-c1"&gt;String&lt;/span&gt;, &lt;span class="pl-c1"&gt;regexp:&lt;/span&gt; &lt;span class="pl-sr"&gt;/w+/&lt;/span&gt;, &lt;span class="pl-c1"&gt;desc:&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;First name&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;
  requires &lt;span class="pl-c1"&gt;:middle_name&lt;/span&gt;, &lt;span class="pl-c1"&gt;type:&lt;/span&gt; &lt;span class="pl-c1"&gt;String&lt;/span&gt;, &lt;span class="pl-c1"&gt;regexp:&lt;/span&gt; &lt;span class="pl-sr"&gt;/w+/&lt;/span&gt;, &lt;span class="pl-c1"&gt;desc:&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;Middle name&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;
  requires &lt;span class="pl-c1"&gt;:last_name&lt;/span&gt;, &lt;span class="pl-c1"&gt;type:&lt;/span&gt; &lt;span class="pl-c1"&gt;String&lt;/span&gt;, &lt;span class="pl-c1"&gt;regexp:&lt;/span&gt; &lt;span class="pl-sr"&gt;/w+/&lt;/span&gt;, &lt;span class="pl-c1"&gt;desc:&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;Last name&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;
&lt;span class="pl-k"&gt;end&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Grape allows you to present the same logic through the &lt;code&gt;with&lt;/code&gt; method in your
parameters block, like so:&lt;/p&gt;
&lt;div class="highlight highlight-source-ruby"&gt;&lt;pre&gt;params &lt;span class="pl-k"&gt;do&lt;/span&gt;
  with(&lt;span class="pl-c1"&gt;type:&lt;/span&gt; &lt;span class="pl-c1"&gt;String&lt;/span&gt;, &lt;span class="pl-c1"&gt;regexp:&lt;/span&gt; &lt;span class="pl-sr"&gt;/w+/&lt;/span&gt;) &lt;span class="pl-k"&gt;do&lt;/span&gt;
    requires &lt;span class="pl-c1"&gt;:first_name&lt;/span&gt;, &lt;span class="pl-c1"&gt;desc:&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;First name&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;
    requires &lt;span class="pl-c1"&gt;:middle_name&lt;/span&gt;, &lt;span class="pl-c1"&gt;desc:&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;Middle name&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;
    requires &lt;span class="pl-c1"&gt;:last_name&lt;/span&gt;, &lt;span class="pl-c1"&gt;desc:&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;Last name&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;
  &lt;span class="pl-k"&gt;end&lt;/span&gt;
&lt;span class="pl-k"&gt;end&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h3&gt;&lt;a id="user-content-renaming" class="anchor" aria-hidden="true" href="#renaming"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Renaming&lt;/h3&gt;
&lt;p&gt;You can rename parameters using &lt;code&gt;as&lt;/code&gt;, which can be useful when refactoring existing APIs:&lt;/p&gt;
&lt;div class="highlight highlight-source-ruby"&gt;&lt;pre&gt;resource &lt;span class="pl-c1"&gt;:users&lt;/span&gt; &lt;span class="pl-k"&gt;do&lt;/span&gt;
  params &lt;span class="pl-k"&gt;do&lt;/span&gt;
    requires &lt;span class="pl-c1"&gt;:email_address&lt;/span&gt;, &lt;span class="pl-c1"&gt;as:&lt;/span&gt; &lt;span class="pl-c1"&gt;:email&lt;/span&gt;
    requires &lt;span class="pl-c1"&gt;:password&lt;/span&gt;
  &lt;span class="pl-k"&gt;end&lt;/span&gt;
  post &lt;span class="pl-k"&gt;do&lt;/span&gt;
    &lt;span class="pl-c1"&gt;User&lt;/span&gt;.create!(declared(params)) &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; User takes email and password&lt;/span&gt;
  &lt;span class="pl-k"&gt;end&lt;/span&gt;
&lt;span class="pl-k"&gt;end&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;The value passed to &lt;code&gt;as&lt;/code&gt; will be the key when calling &lt;code&gt;params&lt;/code&gt; or &lt;code&gt;declared(params)&lt;/code&gt;.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-built-in-validators" class="anchor" aria-hidden="true" href="#built-in-validators"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Built-in Validators&lt;/h3&gt;
&lt;h4&gt;&lt;a id="user-content-allow_blank" class="anchor" aria-hidden="true" href="#allow_blank"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;code&gt;allow_blank&lt;/code&gt;&lt;/h4&gt;
&lt;p&gt;Parameters can be defined as &lt;code&gt;allow_blank&lt;/code&gt;, ensuring that they contain a value. By default, &lt;code&gt;requires&lt;/code&gt;
only validates that a parameter was sent in the request, regardless its value. With &lt;code&gt;allow_blank: false&lt;/code&gt;,
empty values or whitespace only values are invalid.&lt;/p&gt;
&lt;p&gt;&lt;code&gt;allow_blank&lt;/code&gt; can be combined with both &lt;code&gt;requires&lt;/code&gt; and &lt;code&gt;optional&lt;/code&gt;. If the parameter is required, it has to contain
a value. If it's optional, it's possible to not send it in the request, but if it's being sent, it has to have
some value, and not an empty string/only whitespaces.&lt;/p&gt;
&lt;div class="highlight highlight-source-ruby"&gt;&lt;pre&gt;params &lt;span class="pl-k"&gt;do&lt;/span&gt;
  requires &lt;span class="pl-c1"&gt;:username&lt;/span&gt;, &lt;span class="pl-c1"&gt;allow_blank:&lt;/span&gt; &lt;span class="pl-c1"&gt;false&lt;/span&gt;
  optional &lt;span class="pl-c1"&gt;:first_name&lt;/span&gt;, &lt;span class="pl-c1"&gt;allow_blank:&lt;/span&gt; &lt;span class="pl-c1"&gt;false&lt;/span&gt;
&lt;span class="pl-k"&gt;end&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h4&gt;&lt;a id="user-content-values" class="anchor" aria-hidden="true" href="#values"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;code&gt;values&lt;/code&gt;&lt;/h4&gt;
&lt;p&gt;Parameters can be restricted to a specific set of values with the &lt;code&gt;:values&lt;/code&gt; option.&lt;/p&gt;
&lt;div class="highlight highlight-source-ruby"&gt;&lt;pre&gt;params &lt;span class="pl-k"&gt;do&lt;/span&gt;
  requires &lt;span class="pl-c1"&gt;:status&lt;/span&gt;, &lt;span class="pl-c1"&gt;type:&lt;/span&gt; &lt;span class="pl-c1"&gt;Symbol&lt;/span&gt;, &lt;span class="pl-c1"&gt;values:&lt;/span&gt; [&lt;span class="pl-c1"&gt;:not_started&lt;/span&gt;, &lt;span class="pl-c1"&gt;:processing&lt;/span&gt;, &lt;span class="pl-c1"&gt;:done&lt;/span&gt;]
  optional &lt;span class="pl-c1"&gt;:numbers&lt;/span&gt;, &lt;span class="pl-c1"&gt;type:&lt;/span&gt; &lt;span class="pl-c1"&gt;Array&lt;/span&gt;[&lt;span class="pl-c1"&gt;Integer&lt;/span&gt;], &lt;span class="pl-c1"&gt;default:&lt;/span&gt; &lt;span class="pl-c1"&gt;1&lt;/span&gt;, &lt;span class="pl-c1"&gt;values:&lt;/span&gt; [&lt;span class="pl-c1"&gt;1&lt;/span&gt;, &lt;span class="pl-c1"&gt;2&lt;/span&gt;, &lt;span class="pl-c1"&gt;3&lt;/span&gt;, &lt;span class="pl-c1"&gt;5&lt;/span&gt;, &lt;span class="pl-c1"&gt;8&lt;/span&gt;]
&lt;span class="pl-k"&gt;end&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Supplying a range to the &lt;code&gt;:values&lt;/code&gt; option ensures that the parameter is (or parameters are) included in that range (using &lt;code&gt;Range#include?&lt;/code&gt;).&lt;/p&gt;
&lt;div class="highlight highlight-source-ruby"&gt;&lt;pre&gt;params &lt;span class="pl-k"&gt;do&lt;/span&gt;
  requires &lt;span class="pl-c1"&gt;:latitude&lt;/span&gt;, &lt;span class="pl-c1"&gt;type:&lt;/span&gt; &lt;span class="pl-c1"&gt;Float&lt;/span&gt;, &lt;span class="pl-c1"&gt;values:&lt;/span&gt; &lt;span class="pl-k"&gt;-&lt;/span&gt;&lt;span class="pl-c1"&gt;90.0&lt;/span&gt;..&lt;span class="pl-k"&gt;+&lt;/span&gt;&lt;span class="pl-c1"&gt;90.0&lt;/span&gt;
  requires &lt;span class="pl-c1"&gt;:longitude&lt;/span&gt;, &lt;span class="pl-c1"&gt;type:&lt;/span&gt; &lt;span class="pl-c1"&gt;Float&lt;/span&gt;, &lt;span class="pl-c1"&gt;values:&lt;/span&gt; &lt;span class="pl-k"&gt;-&lt;/span&gt;&lt;span class="pl-c1"&gt;180.0&lt;/span&gt;..&lt;span class="pl-k"&gt;+&lt;/span&gt;&lt;span class="pl-c1"&gt;180.0&lt;/span&gt;
  optional &lt;span class="pl-c1"&gt;:letters&lt;/span&gt;, &lt;span class="pl-c1"&gt;type:&lt;/span&gt; &lt;span class="pl-c1"&gt;Array&lt;/span&gt;[&lt;span class="pl-c1"&gt;String&lt;/span&gt;], &lt;span class="pl-c1"&gt;values:&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;a&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;..&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;z&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;
&lt;span class="pl-k"&gt;end&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Note that &lt;em&gt;both&lt;/em&gt; range endpoints have to be a &lt;code&gt;#kind_of?&lt;/code&gt; your &lt;code&gt;:type&lt;/code&gt; option (if you don't supply the &lt;code&gt;:type&lt;/code&gt; option, it will be guessed to be equal to the class of the range's first endpoint). So the following is invalid:&lt;/p&gt;
&lt;div class="highlight highlight-source-ruby"&gt;&lt;pre&gt;params &lt;span class="pl-k"&gt;do&lt;/span&gt;
  requires &lt;span class="pl-c1"&gt;:invalid1&lt;/span&gt;, &lt;span class="pl-c1"&gt;type:&lt;/span&gt; &lt;span class="pl-c1"&gt;Float&lt;/span&gt;, &lt;span class="pl-c1"&gt;values:&lt;/span&gt; &lt;span class="pl-c1"&gt;0&lt;/span&gt;..&lt;span class="pl-c1"&gt;10&lt;/span&gt; &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; 0.kind_of?(Float) =&amp;gt; false&lt;/span&gt;
  optional &lt;span class="pl-c1"&gt;:invalid2&lt;/span&gt;, &lt;span class="pl-c1"&gt;values:&lt;/span&gt; &lt;span class="pl-c1"&gt;0&lt;/span&gt;..&lt;span class="pl-c1"&gt;10.0&lt;/span&gt; &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; 10.0.kind_of?(0.class) =&amp;gt; false&lt;/span&gt;
&lt;span class="pl-k"&gt;end&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;The &lt;code&gt;:values&lt;/code&gt; option can also be supplied with a &lt;code&gt;Proc&lt;/code&gt;, evaluated lazily with each request.
If the Proc has arity zero (i.e. it takes no arguments) it is expected to return either a list
or a range which will then be used to validate the parameter.&lt;/p&gt;
&lt;p&gt;For example, given a status model you may want to restrict by hashtags that you have
previously defined in the &lt;code&gt;HashTag&lt;/code&gt; model.&lt;/p&gt;
&lt;div class="highlight highlight-source-ruby"&gt;&lt;pre&gt;params &lt;span class="pl-k"&gt;do&lt;/span&gt;
  requires &lt;span class="pl-c1"&gt;:hashtag&lt;/span&gt;, &lt;span class="pl-c1"&gt;type:&lt;/span&gt; &lt;span class="pl-c1"&gt;String&lt;/span&gt;, &lt;span class="pl-c1"&gt;values:&lt;/span&gt; &lt;span class="pl-c1"&gt;-&amp;gt;&lt;/span&gt; { &lt;span class="pl-c1"&gt;Hashtag&lt;/span&gt;.all.map(&lt;span class="pl-k"&gt;&amp;amp;&lt;/span&gt;&lt;span class="pl-c1"&gt;:tag&lt;/span&gt;) }
&lt;span class="pl-k"&gt;end&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Alternatively, a Proc with arity one (i.e. taking one argument) can be used to explicitly validate
each parameter value.  In that case, the Proc is expected to return a truthy value if the parameter
value is valid. The parameter will be considered invalid if the Proc returns a falsy value or if it
raises a StandardError.&lt;/p&gt;
&lt;div class="highlight highlight-source-ruby"&gt;&lt;pre&gt;params &lt;span class="pl-k"&gt;do&lt;/span&gt;
  requires &lt;span class="pl-c1"&gt;:number&lt;/span&gt;, &lt;span class="pl-c1"&gt;type:&lt;/span&gt; &lt;span class="pl-c1"&gt;Integer&lt;/span&gt;, &lt;span class="pl-c1"&gt;values:&lt;/span&gt; &lt;span class="pl-c1"&gt;-&amp;gt;&lt;/span&gt;(v) { v.even? &lt;span class="pl-k"&gt;&amp;amp;&amp;amp;&lt;/span&gt; v &lt;span class="pl-k"&gt;&amp;lt;&lt;/span&gt; &lt;span class="pl-c1"&gt;25&lt;/span&gt; }
&lt;span class="pl-k"&gt;end&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;While Procs are convenient for single cases, consider using &lt;a href="#custom-validators"&gt;Custom Validators&lt;/a&gt; in cases where a validation is used more than once.&lt;/p&gt;
&lt;h4&gt;&lt;a id="user-content-except_values" class="anchor" aria-hidden="true" href="#except_values"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;code&gt;except_values&lt;/code&gt;&lt;/h4&gt;
&lt;p&gt;Parameters can be restricted from having a specific set of values with the &lt;code&gt;:except_values&lt;/code&gt; option.&lt;/p&gt;
&lt;p&gt;The &lt;code&gt;except_values&lt;/code&gt; validator behaves similarly to the &lt;code&gt;values&lt;/code&gt; validator in that it accepts either
an Array, a Range, or a Proc.  Unlike the &lt;code&gt;values&lt;/code&gt; validator, however, &lt;code&gt;except_values&lt;/code&gt; only accepts
Procs with arity zero.&lt;/p&gt;
&lt;div class="highlight highlight-source-ruby"&gt;&lt;pre&gt;params &lt;span class="pl-k"&gt;do&lt;/span&gt;
  requires &lt;span class="pl-c1"&gt;:browser&lt;/span&gt;, &lt;span class="pl-c1"&gt;except_values:&lt;/span&gt; [ &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;ie6&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;ie7&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;ie8&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt; ]
  requires &lt;span class="pl-c1"&gt;:port&lt;/span&gt;, &lt;span class="pl-c1"&gt;except_values:&lt;/span&gt; { &lt;span class="pl-c1"&gt;value:&lt;/span&gt; &lt;span class="pl-c1"&gt;0&lt;/span&gt;..&lt;span class="pl-c1"&gt;1024&lt;/span&gt;, &lt;span class="pl-c1"&gt;message:&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;is not allowed&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt; }
  requires &lt;span class="pl-c1"&gt;:hashtag&lt;/span&gt;, &lt;span class="pl-c1"&gt;except_values:&lt;/span&gt; &lt;span class="pl-c1"&gt;-&amp;gt;&lt;/span&gt; { &lt;span class="pl-c1"&gt;Hashtag&lt;/span&gt;.&lt;span class="pl-c1"&gt;FORBIDDEN_LIST&lt;/span&gt; }
&lt;span class="pl-k"&gt;end&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h4&gt;&lt;a id="user-content-same_as" class="anchor" aria-hidden="true" href="#same_as"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;code&gt;same_as&lt;/code&gt;&lt;/h4&gt;
&lt;p&gt;A &lt;code&gt;same_as&lt;/code&gt; option can be given to ensure that values of parameters match.&lt;/p&gt;
&lt;div class="highlight highlight-source-ruby"&gt;&lt;pre&gt;params &lt;span class="pl-k"&gt;do&lt;/span&gt;
  requires &lt;span class="pl-c1"&gt;:password&lt;/span&gt;
  requires &lt;span class="pl-c1"&gt;:password_confirmation&lt;/span&gt;, &lt;span class="pl-c1"&gt;same_as:&lt;/span&gt; &lt;span class="pl-c1"&gt;:password&lt;/span&gt;
&lt;span class="pl-k"&gt;end&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h4&gt;&lt;a id="user-content-regexp" class="anchor" aria-hidden="true" href="#regexp"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;code&gt;regexp&lt;/code&gt;&lt;/h4&gt;
&lt;p&gt;Parameters can be restricted to match a specific regular expression with the &lt;code&gt;:regexp&lt;/code&gt; option. If the value
does not match the regular expression an error will be returned. Note that this is true for both &lt;code&gt;requires&lt;/code&gt;
and &lt;code&gt;optional&lt;/code&gt; parameters.&lt;/p&gt;
&lt;div class="highlight highlight-source-ruby"&gt;&lt;pre&gt;params &lt;span class="pl-k"&gt;do&lt;/span&gt;
  requires &lt;span class="pl-c1"&gt;:email&lt;/span&gt;, &lt;span class="pl-c1"&gt;regexp:&lt;/span&gt; &lt;span class="pl-sr"&gt;/.+@.+/&lt;/span&gt;
&lt;span class="pl-k"&gt;end&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;The validator will pass if the parameter was sent without value. To ensure that the parameter contains a value, use &lt;code&gt;allow_blank: false&lt;/code&gt;.&lt;/p&gt;
&lt;div class="highlight highlight-source-ruby"&gt;&lt;pre&gt;params &lt;span class="pl-k"&gt;do&lt;/span&gt;
  requires &lt;span class="pl-c1"&gt;:email&lt;/span&gt;, &lt;span class="pl-c1"&gt;allow_blank:&lt;/span&gt; &lt;span class="pl-c1"&gt;false&lt;/span&gt;, &lt;span class="pl-c1"&gt;regexp:&lt;/span&gt; &lt;span class="pl-sr"&gt;/.+@.+/&lt;/span&gt;
&lt;span class="pl-k"&gt;end&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h4&gt;&lt;a id="user-content-mutually_exclusive" class="anchor" aria-hidden="true" href="#mutually_exclusive"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;code&gt;mutually_exclusive&lt;/code&gt;&lt;/h4&gt;
&lt;p&gt;Parameters can be defined as &lt;code&gt;mutually_exclusive&lt;/code&gt;, ensuring that they aren't present at the same time in a request.&lt;/p&gt;
&lt;div class="highlight highlight-source-ruby"&gt;&lt;pre&gt;params &lt;span class="pl-k"&gt;do&lt;/span&gt;
  optional &lt;span class="pl-c1"&gt;:beer&lt;/span&gt;
  optional &lt;span class="pl-c1"&gt;:wine&lt;/span&gt;
  mutually_exclusive &lt;span class="pl-c1"&gt;:beer&lt;/span&gt;, &lt;span class="pl-c1"&gt;:wine&lt;/span&gt;
&lt;span class="pl-k"&gt;end&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Multiple sets can be defined:&lt;/p&gt;
&lt;div class="highlight highlight-source-ruby"&gt;&lt;pre&gt;params &lt;span class="pl-k"&gt;do&lt;/span&gt;
  optional &lt;span class="pl-c1"&gt;:beer&lt;/span&gt;
  optional &lt;span class="pl-c1"&gt;:wine&lt;/span&gt;
  mutually_exclusive &lt;span class="pl-c1"&gt;:beer&lt;/span&gt;, &lt;span class="pl-c1"&gt;:wine&lt;/span&gt;
  optional &lt;span class="pl-c1"&gt;:scotch&lt;/span&gt;
  optional &lt;span class="pl-c1"&gt;:aquavit&lt;/span&gt;
  mutually_exclusive &lt;span class="pl-c1"&gt;:scotch&lt;/span&gt;, &lt;span class="pl-c1"&gt;:aquavit&lt;/span&gt;
&lt;span class="pl-k"&gt;end&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;strong&gt;Warning&lt;/strong&gt;: Never define mutually exclusive sets with any required params. Two mutually exclusive required params will mean params are never valid, thus making the endpoint useless. One required param mutually exclusive with an optional param will mean the latter is never valid.&lt;/p&gt;
&lt;h4&gt;&lt;a id="user-content-exactly_one_of" class="anchor" aria-hidden="true" href="#exactly_one_of"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;code&gt;exactly_one_of&lt;/code&gt;&lt;/h4&gt;
&lt;p&gt;Parameters can be defined as 'exactly_one_of', ensuring that exactly one parameter gets selected.&lt;/p&gt;
&lt;div class="highlight highlight-source-ruby"&gt;&lt;pre&gt;params &lt;span class="pl-k"&gt;do&lt;/span&gt;
  optional &lt;span class="pl-c1"&gt;:beer&lt;/span&gt;
  optional &lt;span class="pl-c1"&gt;:wine&lt;/span&gt;
  exactly_one_of &lt;span class="pl-c1"&gt;:beer&lt;/span&gt;, &lt;span class="pl-c1"&gt;:wine&lt;/span&gt;
&lt;span class="pl-k"&gt;end&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Note that using &lt;code&gt;:default&lt;/code&gt; with &lt;code&gt;mutually_exclusive&lt;/code&gt; will cause multiple parameters to always have a default value and raise a &lt;code&gt;Grape::Exceptions::Validation&lt;/code&gt; mutually exclusive exception.&lt;/p&gt;
&lt;h4&gt;&lt;a id="user-content-at_least_one_of" class="anchor" aria-hidden="true" href="#at_least_one_of"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;code&gt;at_least_one_of&lt;/code&gt;&lt;/h4&gt;
&lt;p&gt;Parameters can be defined as 'at_least_one_of', ensuring that at least one parameter gets selected.&lt;/p&gt;
&lt;div class="highlight highlight-source-ruby"&gt;&lt;pre&gt;params &lt;span class="pl-k"&gt;do&lt;/span&gt;
  optional &lt;span class="pl-c1"&gt;:beer&lt;/span&gt;
  optional &lt;span class="pl-c1"&gt;:wine&lt;/span&gt;
  optional &lt;span class="pl-c1"&gt;:juice&lt;/span&gt;
  at_least_one_of &lt;span class="pl-c1"&gt;:beer&lt;/span&gt;, &lt;span class="pl-c1"&gt;:wine&lt;/span&gt;, &lt;span class="pl-c1"&gt;:juice&lt;/span&gt;
&lt;span class="pl-k"&gt;end&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h4&gt;&lt;a id="user-content-all_or_none_of" class="anchor" aria-hidden="true" href="#all_or_none_of"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;code&gt;all_or_none_of&lt;/code&gt;&lt;/h4&gt;
&lt;p&gt;Parameters can be defined as 'all_or_none_of', ensuring that all or none of parameters gets selected.&lt;/p&gt;
&lt;div class="highlight highlight-source-ruby"&gt;&lt;pre&gt;params &lt;span class="pl-k"&gt;do&lt;/span&gt;
  optional &lt;span class="pl-c1"&gt;:beer&lt;/span&gt;
  optional &lt;span class="pl-c1"&gt;:wine&lt;/span&gt;
  optional &lt;span class="pl-c1"&gt;:juice&lt;/span&gt;
  all_or_none_of &lt;span class="pl-c1"&gt;:beer&lt;/span&gt;, &lt;span class="pl-c1"&gt;:wine&lt;/span&gt;, &lt;span class="pl-c1"&gt;:juice&lt;/span&gt;
&lt;span class="pl-k"&gt;end&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h4&gt;&lt;a id="user-content-nested-mutually_exclusive-exactly_one_of-at_least_one_of-all_or_none_of" class="anchor" aria-hidden="true" href="#nested-mutually_exclusive-exactly_one_of-at_least_one_of-all_or_none_of"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Nested &lt;code&gt;mutually_exclusive&lt;/code&gt;, &lt;code&gt;exactly_one_of&lt;/code&gt;, &lt;code&gt;at_least_one_of&lt;/code&gt;, &lt;code&gt;all_or_none_of&lt;/code&gt;&lt;/h4&gt;
&lt;p&gt;All of these methods can be used at any nested level.&lt;/p&gt;
&lt;div class="highlight highlight-source-ruby"&gt;&lt;pre&gt;params &lt;span class="pl-k"&gt;do&lt;/span&gt;
  requires &lt;span class="pl-c1"&gt;:food&lt;/span&gt;, &lt;span class="pl-c1"&gt;type:&lt;/span&gt; &lt;span class="pl-c1"&gt;Hash&lt;/span&gt; &lt;span class="pl-k"&gt;do&lt;/span&gt;
    optional &lt;span class="pl-c1"&gt;:meat&lt;/span&gt;
    optional &lt;span class="pl-c1"&gt;:fish&lt;/span&gt;
    optional &lt;span class="pl-c1"&gt;:rice&lt;/span&gt;
    at_least_one_of &lt;span class="pl-c1"&gt;:meat&lt;/span&gt;, &lt;span class="pl-c1"&gt;:fish&lt;/span&gt;, &lt;span class="pl-c1"&gt;:rice&lt;/span&gt;
  &lt;span class="pl-k"&gt;end&lt;/span&gt;
  group &lt;span class="pl-c1"&gt;:drink&lt;/span&gt;, &lt;span class="pl-c1"&gt;type:&lt;/span&gt; &lt;span class="pl-c1"&gt;Hash&lt;/span&gt; &lt;span class="pl-k"&gt;do&lt;/span&gt;
    optional &lt;span class="pl-c1"&gt;:beer&lt;/span&gt;
    optional &lt;span class="pl-c1"&gt;:wine&lt;/span&gt;
    optional &lt;span class="pl-c1"&gt;:juice&lt;/span&gt;
    exactly_one_of &lt;span class="pl-c1"&gt;:beer&lt;/span&gt;, &lt;span class="pl-c1"&gt;:wine&lt;/span&gt;, &lt;span class="pl-c1"&gt;:juice&lt;/span&gt;
  &lt;span class="pl-k"&gt;end&lt;/span&gt;
  optional &lt;span class="pl-c1"&gt;:dessert&lt;/span&gt;, &lt;span class="pl-c1"&gt;type:&lt;/span&gt; &lt;span class="pl-c1"&gt;Hash&lt;/span&gt; &lt;span class="pl-k"&gt;do&lt;/span&gt;
    optional &lt;span class="pl-c1"&gt;:cake&lt;/span&gt;
    optional &lt;span class="pl-c1"&gt;:icecream&lt;/span&gt;
    mutually_exclusive &lt;span class="pl-c1"&gt;:cake&lt;/span&gt;, &lt;span class="pl-c1"&gt;:icecream&lt;/span&gt;
  &lt;span class="pl-k"&gt;end&lt;/span&gt;
  optional &lt;span class="pl-c1"&gt;:recipe&lt;/span&gt;, &lt;span class="pl-c1"&gt;type:&lt;/span&gt; &lt;span class="pl-c1"&gt;Hash&lt;/span&gt; &lt;span class="pl-k"&gt;do&lt;/span&gt;
    optional &lt;span class="pl-c1"&gt;:oil&lt;/span&gt;
    optional &lt;span class="pl-c1"&gt;:meat&lt;/span&gt;
    all_or_none_of &lt;span class="pl-c1"&gt;:oil&lt;/span&gt;, &lt;span class="pl-c1"&gt;:meat&lt;/span&gt;
  &lt;span class="pl-k"&gt;end&lt;/span&gt;
&lt;span class="pl-k"&gt;end&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h3&gt;&lt;a id="user-content-namespace-validation-and-coercion" class="anchor" aria-hidden="true" href="#namespace-validation-and-coercion"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Namespace Validation and Coercion&lt;/h3&gt;
&lt;p&gt;Namespaces allow parameter definitions and apply to every method within the namespace.&lt;/p&gt;
&lt;div class="highlight highlight-source-ruby"&gt;&lt;pre&gt;namespace &lt;span class="pl-c1"&gt;:statuses&lt;/span&gt; &lt;span class="pl-k"&gt;do&lt;/span&gt;
  params &lt;span class="pl-k"&gt;do&lt;/span&gt;
    requires &lt;span class="pl-c1"&gt;:user_id&lt;/span&gt;, &lt;span class="pl-c1"&gt;type:&lt;/span&gt; &lt;span class="pl-c1"&gt;Integer&lt;/span&gt;, &lt;span class="pl-c1"&gt;desc:&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;A user ID.&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;
  &lt;span class="pl-k"&gt;end&lt;/span&gt;
  namespace &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;:user_id&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt; &lt;span class="pl-k"&gt;do&lt;/span&gt;
    desc &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;Retrieve a user's status.&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;
    params &lt;span class="pl-k"&gt;do&lt;/span&gt;
      requires &lt;span class="pl-c1"&gt;:status_id&lt;/span&gt;, &lt;span class="pl-c1"&gt;type:&lt;/span&gt; &lt;span class="pl-c1"&gt;Integer&lt;/span&gt;, &lt;span class="pl-c1"&gt;desc:&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;A status ID.&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;
    &lt;span class="pl-k"&gt;end&lt;/span&gt;
    get &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;:status_id&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt; &lt;span class="pl-k"&gt;do&lt;/span&gt;
      &lt;span class="pl-c1"&gt;User&lt;/span&gt;.find(params[&lt;span class="pl-c1"&gt;:user_id&lt;/span&gt;]).statuses.find(params[&lt;span class="pl-c1"&gt;:status_id&lt;/span&gt;])
    &lt;span class="pl-k"&gt;end&lt;/span&gt;
  &lt;span class="pl-k"&gt;end&lt;/span&gt;
&lt;span class="pl-k"&gt;end&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;The &lt;code&gt;namespace&lt;/code&gt; method has a number of aliases, including: &lt;code&gt;group&lt;/code&gt;, &lt;code&gt;resource&lt;/code&gt;,
&lt;code&gt;resources&lt;/code&gt;, and &lt;code&gt;segment&lt;/code&gt;. Use whichever reads the best for your API.&lt;/p&gt;
&lt;p&gt;You can conveniently define a route parameter as a namespace using &lt;code&gt;route_param&lt;/code&gt;.&lt;/p&gt;
&lt;div class="highlight highlight-source-ruby"&gt;&lt;pre&gt;namespace &lt;span class="pl-c1"&gt;:statuses&lt;/span&gt; &lt;span class="pl-k"&gt;do&lt;/span&gt;
  route_param &lt;span class="pl-c1"&gt;:id&lt;/span&gt; &lt;span class="pl-k"&gt;do&lt;/span&gt;
    desc &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;Returns all replies for a status.&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;
    get &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;replies&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt; &lt;span class="pl-k"&gt;do&lt;/span&gt;
      &lt;span class="pl-c1"&gt;Status&lt;/span&gt;.find(params[&lt;span class="pl-c1"&gt;:id&lt;/span&gt;]).replies
    &lt;span class="pl-k"&gt;end&lt;/span&gt;
    desc &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;Returns a status.&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;
    get &lt;span class="pl-k"&gt;do&lt;/span&gt;
      &lt;span class="pl-c1"&gt;Status&lt;/span&gt;.find(params[&lt;span class="pl-c1"&gt;:id&lt;/span&gt;])
    &lt;span class="pl-k"&gt;end&lt;/span&gt;
  &lt;span class="pl-k"&gt;end&lt;/span&gt;
&lt;span class="pl-k"&gt;end&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;You can also define a route parameter type by passing to &lt;code&gt;route_param&lt;/code&gt;'s options.&lt;/p&gt;
&lt;div class="highlight highlight-source-ruby"&gt;&lt;pre&gt;namespace &lt;span class="pl-c1"&gt;:arithmetic&lt;/span&gt; &lt;span class="pl-k"&gt;do&lt;/span&gt;
  route_param &lt;span class="pl-c1"&gt;:n&lt;/span&gt;, &lt;span class="pl-c1"&gt;type:&lt;/span&gt; &lt;span class="pl-c1"&gt;Integer&lt;/span&gt; &lt;span class="pl-k"&gt;do&lt;/span&gt;
    desc &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;Returns in power&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;
    get &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;power&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt; &lt;span class="pl-k"&gt;do&lt;/span&gt;
      params[&lt;span class="pl-c1"&gt;:n&lt;/span&gt;] &lt;span class="pl-k"&gt;**&lt;/span&gt; params[&lt;span class="pl-c1"&gt;:n&lt;/span&gt;]
    &lt;span class="pl-k"&gt;end&lt;/span&gt;
  &lt;span class="pl-k"&gt;end&lt;/span&gt;
&lt;span class="pl-k"&gt;end&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h3&gt;&lt;a id="user-content-custom-validators" class="anchor" aria-hidden="true" href="#custom-validators"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Custom Validators&lt;/h3&gt;
&lt;div class="highlight highlight-source-ruby"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;class&lt;/span&gt; &lt;span class="pl-en"&gt;AlphaNumeric&lt;span class="pl-e"&gt; &amp;lt; Grape::Validations::Base&lt;/span&gt;&lt;/span&gt;
  &lt;span class="pl-k"&gt;def&lt;/span&gt; &lt;span class="pl-en"&gt;validate_param!&lt;/span&gt;(&lt;span class="pl-smi"&gt;attr_name&lt;/span&gt;, &lt;span class="pl-smi"&gt;params&lt;/span&gt;)
    &lt;span class="pl-k"&gt;unless&lt;/span&gt; params[attr_name] &lt;span class="pl-k"&gt;=~&lt;/span&gt; &lt;span class="pl-sr"&gt;/&lt;span class="pl-cce"&gt;\A&lt;/span&gt;&lt;span class="pl-pds"&gt;[[:alnum:]&lt;/span&gt;]+&lt;span class="pl-cce"&gt;\z&lt;/span&gt;/&lt;/span&gt;
      &lt;span class="pl-k"&gt;fail&lt;/span&gt; &lt;span class="pl-c1"&gt;Grape&lt;/span&gt;::&lt;span class="pl-c1"&gt;Exceptions&lt;/span&gt;::&lt;span class="pl-c1"&gt;Validation&lt;/span&gt;, &lt;span class="pl-c1"&gt;params:&lt;/span&gt; [&lt;span class="pl-smi"&gt;@scope&lt;/span&gt;.full_name(attr_name)], &lt;span class="pl-c1"&gt;message:&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;must consist of alpha-numeric characters&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;
    &lt;span class="pl-k"&gt;end&lt;/span&gt;
  &lt;span class="pl-k"&gt;end&lt;/span&gt;
&lt;span class="pl-k"&gt;end&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;div class="highlight highlight-source-ruby"&gt;&lt;pre&gt;params &lt;span class="pl-k"&gt;do&lt;/span&gt;
  requires &lt;span class="pl-c1"&gt;:text&lt;/span&gt;, &lt;span class="pl-c1"&gt;alpha_numeric:&lt;/span&gt; &lt;span class="pl-c1"&gt;true&lt;/span&gt;
&lt;span class="pl-k"&gt;end&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;You can also create custom classes that take parameters.&lt;/p&gt;
&lt;div class="highlight highlight-source-ruby"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;class&lt;/span&gt; &lt;span class="pl-en"&gt;Length&lt;span class="pl-e"&gt; &amp;lt; Grape::Validations::Base&lt;/span&gt;&lt;/span&gt;
  &lt;span class="pl-k"&gt;def&lt;/span&gt; &lt;span class="pl-en"&gt;validate_param!&lt;/span&gt;(&lt;span class="pl-smi"&gt;attr_name&lt;/span&gt;, &lt;span class="pl-smi"&gt;params&lt;/span&gt;)
    &lt;span class="pl-k"&gt;unless&lt;/span&gt; params[attr_name].length &lt;span class="pl-k"&gt;&amp;lt;=&lt;/span&gt; &lt;span class="pl-smi"&gt;@option&lt;/span&gt;
      &lt;span class="pl-k"&gt;fail&lt;/span&gt; &lt;span class="pl-c1"&gt;Grape&lt;/span&gt;::&lt;span class="pl-c1"&gt;Exceptions&lt;/span&gt;::&lt;span class="pl-c1"&gt;Validation&lt;/span&gt;, &lt;span class="pl-c1"&gt;params:&lt;/span&gt; [&lt;span class="pl-smi"&gt;@scope&lt;/span&gt;.full_name(attr_name)], &lt;span class="pl-c1"&gt;message:&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;must be at the most &lt;span class="pl-pse"&gt;#{&lt;/span&gt;&lt;span class="pl-s1"&gt;&lt;span class="pl-smi"&gt;@option&lt;/span&gt;&lt;/span&gt;&lt;span class="pl-pse"&gt;}&lt;/span&gt; characters long&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;
    &lt;span class="pl-k"&gt;end&lt;/span&gt;
  &lt;span class="pl-k"&gt;end&lt;/span&gt;
&lt;span class="pl-k"&gt;end&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;div class="highlight highlight-source-ruby"&gt;&lt;pre&gt;params &lt;span class="pl-k"&gt;do&lt;/span&gt;
  requires &lt;span class="pl-c1"&gt;:text&lt;/span&gt;, &lt;span class="pl-c1"&gt;length:&lt;/span&gt; &lt;span class="pl-c1"&gt;140&lt;/span&gt;
&lt;span class="pl-k"&gt;end&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;You can also create custom validation that use request to validate the attribute. For example if you want to have parameters that are available to only admins, you can do the following.&lt;/p&gt;
&lt;div class="highlight highlight-source-ruby"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;class&lt;/span&gt; &lt;span class="pl-en"&gt;Admin&lt;span class="pl-e"&gt; &amp;lt; Grape::Validations::Base&lt;/span&gt;&lt;/span&gt;
  &lt;span class="pl-k"&gt;def&lt;/span&gt; &lt;span class="pl-en"&gt;validate&lt;/span&gt;(&lt;span class="pl-smi"&gt;request&lt;/span&gt;)
    &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; return if the param we are checking was not in request&lt;/span&gt;
    &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; @attrs is a list containing the attribute we are currently validating&lt;/span&gt;
    &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; in our sample case this method once will get called with&lt;/span&gt;
    &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; @attrs being [:admin_field] and once with @attrs being [:admin_false_field]&lt;/span&gt;
    &lt;span class="pl-k"&gt;return&lt;/span&gt; &lt;span class="pl-k"&gt;unless&lt;/span&gt; request.params.key?(&lt;span class="pl-smi"&gt;@attrs&lt;/span&gt;.first)
    &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; check if admin flag is set to true&lt;/span&gt;
    &lt;span class="pl-k"&gt;return&lt;/span&gt; &lt;span class="pl-k"&gt;unless&lt;/span&gt; &lt;span class="pl-smi"&gt;@option&lt;/span&gt;
    &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; check if user is admin or not&lt;/span&gt;
    &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; as an example get a token from request and check if it's admin or not&lt;/span&gt;
    &lt;span class="pl-k"&gt;fail&lt;/span&gt; &lt;span class="pl-c1"&gt;Grape&lt;/span&gt;::&lt;span class="pl-c1"&gt;Exceptions&lt;/span&gt;::&lt;span class="pl-c1"&gt;Validation&lt;/span&gt;, &lt;span class="pl-c1"&gt;params:&lt;/span&gt; &lt;span class="pl-smi"&gt;@attrs&lt;/span&gt;, &lt;span class="pl-c1"&gt;message:&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;Can not set admin-only field.&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt; &lt;span class="pl-k"&gt;unless&lt;/span&gt; request.headers[&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;X-Access-Token&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;] &lt;span class="pl-k"&gt;==&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;admin&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;
  &lt;span class="pl-k"&gt;end&lt;/span&gt;
&lt;span class="pl-k"&gt;end&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;And use it in your endpoint definition as:&lt;/p&gt;
&lt;div class="highlight highlight-source-ruby"&gt;&lt;pre&gt;params &lt;span class="pl-k"&gt;do&lt;/span&gt;
  optional &lt;span class="pl-c1"&gt;:admin_field&lt;/span&gt;, &lt;span class="pl-c1"&gt;type:&lt;/span&gt; &lt;span class="pl-c1"&gt;String&lt;/span&gt;, &lt;span class="pl-c1"&gt;admin:&lt;/span&gt; &lt;span class="pl-c1"&gt;true&lt;/span&gt;
  optional &lt;span class="pl-c1"&gt;:non_admin_field&lt;/span&gt;, &lt;span class="pl-c1"&gt;type:&lt;/span&gt; &lt;span class="pl-c1"&gt;String&lt;/span&gt;
  optional &lt;span class="pl-c1"&gt;:admin_false_field&lt;/span&gt;, &lt;span class="pl-c1"&gt;type:&lt;/span&gt; &lt;span class="pl-c1"&gt;String&lt;/span&gt;, &lt;span class="pl-c1"&gt;admin:&lt;/span&gt; &lt;span class="pl-c1"&gt;false&lt;/span&gt;
&lt;span class="pl-k"&gt;end&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Every validation will have it's own instance of the validator, which means that the validator can have a state.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-validation-errors" class="anchor" aria-hidden="true" href="#validation-errors"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Validation Errors&lt;/h3&gt;
&lt;p&gt;Validation and coercion errors are collected and an exception of type &lt;code&gt;Grape::Exceptions::ValidationErrors&lt;/code&gt; is raised. If the exception goes uncaught it will respond with a status of 400 and an error message. The validation errors are grouped by parameter name and can be accessed via &lt;code&gt;Grape::Exceptions::ValidationErrors#errors&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;The default response from a &lt;code&gt;Grape::Exceptions::ValidationErrors&lt;/code&gt; is a humanly readable string, such as "beer, wine are mutually exclusive", in the following example.&lt;/p&gt;
&lt;div class="highlight highlight-source-ruby"&gt;&lt;pre&gt;params &lt;span class="pl-k"&gt;do&lt;/span&gt;
  optional &lt;span class="pl-c1"&gt;:beer&lt;/span&gt;
  optional &lt;span class="pl-c1"&gt;:wine&lt;/span&gt;
  optional &lt;span class="pl-c1"&gt;:juice&lt;/span&gt;
  exactly_one_of &lt;span class="pl-c1"&gt;:beer&lt;/span&gt;, &lt;span class="pl-c1"&gt;:wine&lt;/span&gt;, &lt;span class="pl-c1"&gt;:juice&lt;/span&gt;
&lt;span class="pl-k"&gt;end&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;You can rescue a &lt;code&gt;Grape::Exceptions::ValidationErrors&lt;/code&gt; and respond with a custom response or turn the response into well-formatted JSON for a JSON API that separates individual parameters and the corresponding error messages. The following &lt;code&gt;rescue_from&lt;/code&gt; example produces &lt;code&gt;[{"params":["beer","wine"],"messages":["are mutually exclusive"]}]&lt;/code&gt;.&lt;/p&gt;
&lt;div class="highlight highlight-source-ruby"&gt;&lt;pre&gt;&lt;span class="pl-c1"&gt;format&lt;/span&gt; &lt;span class="pl-c1"&gt;:json&lt;/span&gt;
subject.rescue_from &lt;span class="pl-c1"&gt;Grape&lt;/span&gt;::&lt;span class="pl-c1"&gt;Exceptions&lt;/span&gt;::&lt;span class="pl-c1"&gt;ValidationErrors&lt;/span&gt; &lt;span class="pl-k"&gt;do&lt;/span&gt; |&lt;span class="pl-smi"&gt;e&lt;/span&gt;|
  error! e, &lt;span class="pl-c1"&gt;400&lt;/span&gt;
&lt;span class="pl-k"&gt;end&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;code&gt;Grape::Exceptions::ValidationErrors#full_messages&lt;/code&gt; returns the validation messages as an array. &lt;code&gt;Grape::Exceptions::ValidationErrors#message&lt;/code&gt; joins the messages to one string.&lt;/p&gt;
&lt;p&gt;For responding with an array of validation messages, you can use &lt;code&gt;Grape::Exceptions::ValidationErrors#full_messages&lt;/code&gt;.&lt;/p&gt;
&lt;div class="highlight highlight-source-ruby"&gt;&lt;pre&gt;&lt;span class="pl-c1"&gt;format&lt;/span&gt; &lt;span class="pl-c1"&gt;:json&lt;/span&gt;
subject.rescue_from &lt;span class="pl-c1"&gt;Grape&lt;/span&gt;::&lt;span class="pl-c1"&gt;Exceptions&lt;/span&gt;::&lt;span class="pl-c1"&gt;ValidationErrors&lt;/span&gt; &lt;span class="pl-k"&gt;do&lt;/span&gt; |&lt;span class="pl-smi"&gt;e&lt;/span&gt;|
  error!({ &lt;span class="pl-c1"&gt;messages:&lt;/span&gt; e.full_messages }, &lt;span class="pl-c1"&gt;400&lt;/span&gt;)
&lt;span class="pl-k"&gt;end&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Grape returns all validation and coercion errors found by default.
To skip all subsequent validation checks when a specific param is found invalid, use &lt;code&gt;fail_fast: true&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;The following example will not check if &lt;code&gt;:wine&lt;/code&gt; is present unless it finds &lt;code&gt;:beer&lt;/code&gt;.&lt;/p&gt;
&lt;div class="highlight highlight-source-ruby"&gt;&lt;pre&gt;params &lt;span class="pl-k"&gt;do&lt;/span&gt;
  required &lt;span class="pl-c1"&gt;:beer&lt;/span&gt;, &lt;span class="pl-c1"&gt;fail_fast:&lt;/span&gt; &lt;span class="pl-c1"&gt;true&lt;/span&gt;
  required &lt;span class="pl-c1"&gt;:wine&lt;/span&gt;
&lt;span class="pl-k"&gt;end&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;The result of empty params would be a single &lt;code&gt;Grape::Exceptions::ValidationErrors&lt;/code&gt; error.&lt;/p&gt;
&lt;p&gt;Similarly, no regular expression test will be performed if &lt;code&gt;:blah&lt;/code&gt; is blank in the following example.&lt;/p&gt;
&lt;div class="highlight highlight-source-ruby"&gt;&lt;pre&gt;params &lt;span class="pl-k"&gt;do&lt;/span&gt;
  required &lt;span class="pl-c1"&gt;:blah&lt;/span&gt;, &lt;span class="pl-c1"&gt;allow_blank:&lt;/span&gt; &lt;span class="pl-c1"&gt;false&lt;/span&gt;, &lt;span class="pl-c1"&gt;regexp:&lt;/span&gt; &lt;span class="pl-sr"&gt;/blah/&lt;/span&gt;, &lt;span class="pl-c1"&gt;fail_fast:&lt;/span&gt; &lt;span class="pl-c1"&gt;true&lt;/span&gt;
&lt;span class="pl-k"&gt;end&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h3&gt;&lt;a id="user-content-i18n" class="anchor" aria-hidden="true" href="#i18n"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;I18n&lt;/h3&gt;
&lt;p&gt;Grape supports I18n for parameter-related error messages, but will fallback to English if
translations for the default locale have not been provided. See &lt;a href="lib/grape/locale/en.yml"&gt;en.yml&lt;/a&gt; for message keys.&lt;/p&gt;
&lt;p&gt;In case your app enforces available locales only and :en is not included in your available locales, Grape cannot fall back to English and will return the translation key for the error message. To avoid this behaviour, either provide a translation for your default locale or add :en to your available locales.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-custom-validation-messages" class="anchor" aria-hidden="true" href="#custom-validation-messages"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Custom Validation messages&lt;/h3&gt;
&lt;p&gt;Grape supports custom validation messages for parameter-related and coerce-related error messages.&lt;/p&gt;
&lt;h4&gt;&lt;a id="user-content-presence-allow_blank-values-regexp" class="anchor" aria-hidden="true" href="#presence-allow_blank-values-regexp"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;code&gt;presence&lt;/code&gt;, &lt;code&gt;allow_blank&lt;/code&gt;, &lt;code&gt;values&lt;/code&gt;, &lt;code&gt;regexp&lt;/code&gt;&lt;/h4&gt;
&lt;div class="highlight highlight-source-ruby"&gt;&lt;pre&gt;params &lt;span class="pl-k"&gt;do&lt;/span&gt;
  requires &lt;span class="pl-c1"&gt;:name&lt;/span&gt;, &lt;span class="pl-c1"&gt;values:&lt;/span&gt; { &lt;span class="pl-c1"&gt;value:&lt;/span&gt; &lt;span class="pl-c1"&gt;1&lt;/span&gt;..&lt;span class="pl-c1"&gt;10&lt;/span&gt;, &lt;span class="pl-c1"&gt;message:&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;not in range from 1 to 10&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt; }, &lt;span class="pl-c1"&gt;allow_blank:&lt;/span&gt; { &lt;span class="pl-c1"&gt;value:&lt;/span&gt; &lt;span class="pl-c1"&gt;false&lt;/span&gt;, &lt;span class="pl-c1"&gt;message:&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;cannot be blank&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt; }, &lt;span class="pl-c1"&gt;regexp:&lt;/span&gt; { &lt;span class="pl-c1"&gt;value:&lt;/span&gt; &lt;span class="pl-sr"&gt;/^&lt;span class="pl-pds"&gt;[a-z]&lt;/span&gt;+$/&lt;/span&gt;, &lt;span class="pl-c1"&gt;message:&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;format is invalid&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt; }, &lt;span class="pl-c1"&gt;message:&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;is required&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;
&lt;span class="pl-k"&gt;end&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h4&gt;&lt;a id="user-content-same_as-1" class="anchor" aria-hidden="true" href="#same_as-1"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;code&gt;same_as&lt;/code&gt;&lt;/h4&gt;
&lt;div class="highlight highlight-source-ruby"&gt;&lt;pre&gt;params &lt;span class="pl-k"&gt;do&lt;/span&gt;
  requires &lt;span class="pl-c1"&gt;:password&lt;/span&gt;
  requires &lt;span class="pl-c1"&gt;:password_confirmation&lt;/span&gt;, &lt;span class="pl-c1"&gt;same_as:&lt;/span&gt; { &lt;span class="pl-c1"&gt;value:&lt;/span&gt; &lt;span class="pl-c1"&gt;:password&lt;/span&gt;, &lt;span class="pl-c1"&gt;message:&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;not match&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt; }
&lt;span class="pl-k"&gt;end&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h4&gt;&lt;a id="user-content-all_or_none_of-1" class="anchor" aria-hidden="true" href="#all_or_none_of-1"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;code&gt;all_or_none_of&lt;/code&gt;&lt;/h4&gt;
&lt;div class="highlight highlight-source-ruby"&gt;&lt;pre&gt;params &lt;span class="pl-k"&gt;do&lt;/span&gt;
  optional &lt;span class="pl-c1"&gt;:beer&lt;/span&gt;
  optional &lt;span class="pl-c1"&gt;:wine&lt;/span&gt;
  optional &lt;span class="pl-c1"&gt;:juice&lt;/span&gt;
  all_or_none_of &lt;span class="pl-c1"&gt;:beer&lt;/span&gt;, &lt;span class="pl-c1"&gt;:wine&lt;/span&gt;, &lt;span class="pl-c1"&gt;:juice&lt;/span&gt;, &lt;span class="pl-c1"&gt;message:&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;all params are required or none is required&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;
&lt;span class="pl-k"&gt;end&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h4&gt;&lt;a id="user-content-mutually_exclusive-1" class="anchor" aria-hidden="true" href="#mutually_exclusive-1"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;code&gt;mutually_exclusive&lt;/code&gt;&lt;/h4&gt;
&lt;div class="highlight highlight-source-ruby"&gt;&lt;pre&gt;params &lt;span class="pl-k"&gt;do&lt;/span&gt;
  optional &lt;span class="pl-c1"&gt;:beer&lt;/span&gt;
  optional &lt;span class="pl-c1"&gt;:wine&lt;/span&gt;
  optional &lt;span class="pl-c1"&gt;:juice&lt;/span&gt;
  mutually_exclusive &lt;span class="pl-c1"&gt;:beer&lt;/span&gt;, &lt;span class="pl-c1"&gt;:wine&lt;/span&gt;, &lt;span class="pl-c1"&gt;:juice&lt;/span&gt;, &lt;span class="pl-c1"&gt;message:&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;are mutually exclusive cannot pass both params&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;
&lt;span class="pl-k"&gt;end&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h4&gt;&lt;a id="user-content-exactly_one_of-1" class="anchor" aria-hidden="true" href="#exactly_one_of-1"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;code&gt;exactly_one_of&lt;/code&gt;&lt;/h4&gt;
&lt;div class="highlight highlight-source-ruby"&gt;&lt;pre&gt;params &lt;span class="pl-k"&gt;do&lt;/span&gt;
  optional &lt;span class="pl-c1"&gt;:beer&lt;/span&gt;
  optional &lt;span class="pl-c1"&gt;:wine&lt;/span&gt;
  optional &lt;span class="pl-c1"&gt;:juice&lt;/span&gt;
  exactly_one_of &lt;span class="pl-c1"&gt;:beer&lt;/span&gt;, &lt;span class="pl-c1"&gt;:wine&lt;/span&gt;, &lt;span class="pl-c1"&gt;:juice&lt;/span&gt;, &lt;span class="pl-c1"&gt;message:&lt;/span&gt; { &lt;span class="pl-c1"&gt;exactly_one:&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;are missing, exactly one parameter is required&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-c1"&gt;mutual_exclusion:&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;are mutually exclusive, exactly one parameter is required&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; }
&lt;span class="pl-k"&gt;end&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h4&gt;&lt;a id="user-content-at_least_one_of-1" class="anchor" aria-hidden="true" href="#at_least_one_of-1"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;code&gt;at_least_one_of&lt;/code&gt;&lt;/h4&gt;
&lt;div class="highlight highlight-source-ruby"&gt;&lt;pre&gt;params &lt;span class="pl-k"&gt;do&lt;/span&gt;
  optional &lt;span class="pl-c1"&gt;:beer&lt;/span&gt;
  optional &lt;span class="pl-c1"&gt;:wine&lt;/span&gt;
  optional &lt;span class="pl-c1"&gt;:juice&lt;/span&gt;
  at_least_one_of &lt;span class="pl-c1"&gt;:beer&lt;/span&gt;, &lt;span class="pl-c1"&gt;:wine&lt;/span&gt;, &lt;span class="pl-c1"&gt;:juice&lt;/span&gt;, &lt;span class="pl-c1"&gt;message:&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;are missing, please specify at least one param&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;
&lt;span class="pl-k"&gt;end&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h4&gt;&lt;a id="user-content-coerce" class="anchor" aria-hidden="true" href="#coerce"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;code&gt;Coerce&lt;/code&gt;&lt;/h4&gt;
&lt;div class="highlight highlight-source-ruby"&gt;&lt;pre&gt;params &lt;span class="pl-k"&gt;do&lt;/span&gt;
  requires &lt;span class="pl-c1"&gt;:int&lt;/span&gt;, &lt;span class="pl-c1"&gt;type:&lt;/span&gt; { &lt;span class="pl-c1"&gt;value:&lt;/span&gt; &lt;span class="pl-c1"&gt;Integer&lt;/span&gt;, &lt;span class="pl-c1"&gt;message:&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;type cast is invalid&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; }
&lt;span class="pl-k"&gt;end&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h4&gt;&lt;a id="user-content-with-lambdas" class="anchor" aria-hidden="true" href="#with-lambdas"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;code&gt;With Lambdas&lt;/code&gt;&lt;/h4&gt;
&lt;div class="highlight highlight-source-ruby"&gt;&lt;pre&gt;params &lt;span class="pl-k"&gt;do&lt;/span&gt;
  requires &lt;span class="pl-c1"&gt;:name&lt;/span&gt;, &lt;span class="pl-c1"&gt;values:&lt;/span&gt; { &lt;span class="pl-c1"&gt;value:&lt;/span&gt; &lt;span class="pl-c1"&gt;-&amp;gt;&lt;/span&gt; { (&lt;span class="pl-c1"&gt;1&lt;/span&gt;..&lt;span class="pl-c1"&gt;10&lt;/span&gt;).to_a }, &lt;span class="pl-c1"&gt;message:&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;not in range from 1 to 10&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt; }
&lt;span class="pl-k"&gt;end&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h4&gt;&lt;a id="user-content-pass-symbols-for-i18n-translations" class="anchor" aria-hidden="true" href="#pass-symbols-for-i18n-translations"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;code&gt;Pass symbols for i18n translations&lt;/code&gt;&lt;/h4&gt;
&lt;p&gt;You can pass a symbol if you want i18n translations for your custom validation messages.&lt;/p&gt;
&lt;div class="highlight highlight-source-ruby"&gt;&lt;pre&gt;params &lt;span class="pl-k"&gt;do&lt;/span&gt;
  requires &lt;span class="pl-c1"&gt;:name&lt;/span&gt;, &lt;span class="pl-c1"&gt;message:&lt;/span&gt; &lt;span class="pl-c1"&gt;:name_required&lt;/span&gt;
&lt;span class="pl-k"&gt;end&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;div class="highlight highlight-source-ruby"&gt;&lt;pre&gt;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; en.yml&lt;/span&gt;

&lt;span class="pl-c1"&gt;en:&lt;/span&gt;
  &lt;span class="pl-c1"&gt;grape:&lt;/span&gt;
    &lt;span class="pl-c1"&gt;errors:&lt;/span&gt;
      &lt;span class="pl-c1"&gt;format:&lt;/span&gt; &lt;span class="pl-k"&gt;!&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;%{attributes} %{message}&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;
      &lt;span class="pl-c1"&gt;messages:&lt;/span&gt;
        &lt;span class="pl-c1"&gt;name_required:&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;must be present&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h4&gt;&lt;a id="user-content-overriding-attribute-names" class="anchor" aria-hidden="true" href="#overriding-attribute-names"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Overriding Attribute Names&lt;/h4&gt;
&lt;p&gt;You can also override attribute names.&lt;/p&gt;
&lt;div class="highlight highlight-source-ruby"&gt;&lt;pre&gt;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; en.yml&lt;/span&gt;

&lt;span class="pl-c1"&gt;en:&lt;/span&gt;
  &lt;span class="pl-c1"&gt;grape:&lt;/span&gt;
    &lt;span class="pl-c1"&gt;errors:&lt;/span&gt;
      &lt;span class="pl-c1"&gt;format:&lt;/span&gt; &lt;span class="pl-k"&gt;!&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;%{attributes} %{message}&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;
      &lt;span class="pl-c1"&gt;messages:&lt;/span&gt;
        &lt;span class="pl-c1"&gt;name_required:&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;must be present&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;
      &lt;span class="pl-c1"&gt;attributes:&lt;/span&gt;
        &lt;span class="pl-c1"&gt;name:&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;Oops! Name&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Will produce 'Oops! Name must be present'&lt;/p&gt;
&lt;h4&gt;&lt;a id="user-content-with-default" class="anchor" aria-hidden="true" href="#with-default"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;With Default&lt;/h4&gt;
&lt;p&gt;You cannot set a custom message option for Default as it requires interpolation &lt;code&gt;%{option1}: %{value1} is incompatible with %{option2}: %{value2}&lt;/code&gt;. You can change the default error message for Default by changing the &lt;code&gt;incompatible_option_values&lt;/code&gt; message key inside &lt;a href="lib/grape/locale/en.yml"&gt;en.yml&lt;/a&gt;&lt;/p&gt;
&lt;div class="highlight highlight-source-ruby"&gt;&lt;pre&gt;params &lt;span class="pl-k"&gt;do&lt;/span&gt;
  requires &lt;span class="pl-c1"&gt;:name&lt;/span&gt;, &lt;span class="pl-c1"&gt;values:&lt;/span&gt; { &lt;span class="pl-c1"&gt;value:&lt;/span&gt; &lt;span class="pl-c1"&gt;-&amp;gt;&lt;/span&gt; { (&lt;span class="pl-c1"&gt;1&lt;/span&gt;..&lt;span class="pl-c1"&gt;10&lt;/span&gt;).to_a }, &lt;span class="pl-c1"&gt;message:&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;not in range from 1 to 10&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt; }, &lt;span class="pl-c1"&gt;default:&lt;/span&gt; &lt;span class="pl-c1"&gt;5&lt;/span&gt;
&lt;span class="pl-k"&gt;end&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h2&gt;&lt;a id="user-content-headers" class="anchor" aria-hidden="true" href="#headers"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Headers&lt;/h2&gt;
&lt;h3&gt;&lt;a id="user-content-request" class="anchor" aria-hidden="true" href="#request"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Request&lt;/h3&gt;
&lt;p&gt;Request headers are available through the &lt;code&gt;headers&lt;/code&gt; helper or from &lt;code&gt;env&lt;/code&gt; in their original form.&lt;/p&gt;
&lt;div class="highlight highlight-source-ruby"&gt;&lt;pre&gt;get &lt;span class="pl-k"&gt;do&lt;/span&gt;
  error!(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;Unauthorized&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-c1"&gt;401&lt;/span&gt;) &lt;span class="pl-k"&gt;unless&lt;/span&gt; headers[&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;Secret-Password&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;] &lt;span class="pl-k"&gt;==&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;swordfish&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;
&lt;span class="pl-k"&gt;end&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;div class="highlight highlight-source-ruby"&gt;&lt;pre&gt;get &lt;span class="pl-k"&gt;do&lt;/span&gt;
  error!(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;Unauthorized&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-c1"&gt;401&lt;/span&gt;) &lt;span class="pl-k"&gt;unless&lt;/span&gt; env[&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;HTTP_SECRET_PASSWORD&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;] &lt;span class="pl-k"&gt;==&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;swordfish&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;
&lt;span class="pl-k"&gt;end&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h4&gt;&lt;a id="user-content-header-case-handling" class="anchor" aria-hidden="true" href="#header-case-handling"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Header Case Handling&lt;/h4&gt;
&lt;p&gt;The above example may have been requested as follows:&lt;/p&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt;curl -H &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;secret_PassWord: swordfish&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; ...&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;The header name will have been normalized for you.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;In the &lt;code&gt;header&lt;/code&gt; helper names will be coerced into a capitalized kebab case.&lt;/li&gt;
&lt;li&gt;In the &lt;code&gt;env&lt;/code&gt; collection they appear in all uppercase, in snake case, and prefixed with 'HTTP_'.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;The header name will have been normalized per HTTP standards defined in &lt;a href="https://www.w3.org/Protocols/rfc2616/rfc2616-sec4.html#sec4.2" rel="nofollow"&gt;RFC2616 Section 4.2&lt;/a&gt; regardless of what is being sent by a client.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-response" class="anchor" aria-hidden="true" href="#response"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Response&lt;/h3&gt;
&lt;p&gt;You can set a response header with &lt;code&gt;header&lt;/code&gt; inside an API.&lt;/p&gt;
&lt;div class="highlight highlight-source-ruby"&gt;&lt;pre&gt;header &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;X-Robots-Tag&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;noindex&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;When raising &lt;code&gt;error!&lt;/code&gt;, pass additional headers as arguments. Additional headers will be merged with headers set before &lt;code&gt;error!&lt;/code&gt; call.&lt;/p&gt;
&lt;div class="highlight highlight-source-ruby"&gt;&lt;pre&gt;error! &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;Unauthorized&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-c1"&gt;401&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;X-Error-Detail&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt; =&amp;gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;Invalid token.&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h2&gt;&lt;a id="user-content-routes" class="anchor" aria-hidden="true" href="#routes"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Routes&lt;/h2&gt;
&lt;p&gt;Optionally, you can define requirements for your named route parameters using regular
expressions on namespace or endpoint. The route will match only if all requirements are met.&lt;/p&gt;
&lt;div class="highlight highlight-source-ruby"&gt;&lt;pre&gt;get &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;:id&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-c1"&gt;requirements:&lt;/span&gt; { &lt;span class="pl-c1"&gt;id:&lt;/span&gt; &lt;span class="pl-sr"&gt;/&lt;span class="pl-pds"&gt;[0-9]&lt;/span&gt;*/&lt;/span&gt; } &lt;span class="pl-k"&gt;do&lt;/span&gt;
  &lt;span class="pl-c1"&gt;Status&lt;/span&gt;.find(params[&lt;span class="pl-c1"&gt;:id&lt;/span&gt;])
&lt;span class="pl-k"&gt;end&lt;/span&gt;

namespace &lt;span class="pl-c1"&gt;:outer&lt;/span&gt;, &lt;span class="pl-c1"&gt;requirements:&lt;/span&gt; { &lt;span class="pl-c1"&gt;id:&lt;/span&gt; &lt;span class="pl-sr"&gt;/&lt;span class="pl-pds"&gt;[0-9]&lt;/span&gt;*/&lt;/span&gt; } &lt;span class="pl-k"&gt;do&lt;/span&gt;
  get &lt;span class="pl-c1"&gt;:id&lt;/span&gt; &lt;span class="pl-k"&gt;do&lt;/span&gt;
  &lt;span class="pl-k"&gt;end&lt;/span&gt;

  get &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;:id/edit&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt; &lt;span class="pl-k"&gt;do&lt;/span&gt;
  &lt;span class="pl-k"&gt;end&lt;/span&gt;
&lt;span class="pl-k"&gt;end&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h2&gt;&lt;a id="user-content-helpers" class="anchor" aria-hidden="true" href="#helpers"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Helpers&lt;/h2&gt;
&lt;p&gt;You can define helper methods that your endpoints can use with the &lt;code&gt;helpers&lt;/code&gt;
macro by either giving a block or an array of modules.&lt;/p&gt;
&lt;div class="highlight highlight-source-ruby"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;module&lt;/span&gt; &lt;span class="pl-en"&gt;StatusHelpers&lt;/span&gt;
  &lt;span class="pl-k"&gt;def&lt;/span&gt; &lt;span class="pl-en"&gt;user_info&lt;/span&gt;(&lt;span class="pl-smi"&gt;user&lt;/span&gt;)
    &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;span class="pl-pse"&gt;#{&lt;/span&gt;&lt;span class="pl-s1"&gt;user&lt;/span&gt;&lt;span class="pl-pse"&gt;}&lt;/span&gt; has statused &lt;span class="pl-pse"&gt;#{&lt;/span&gt;&lt;span class="pl-s1"&gt;user.statuses&lt;/span&gt;&lt;span class="pl-pse"&gt;}&lt;/span&gt; status(s)&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;
  &lt;span class="pl-k"&gt;end&lt;/span&gt;
&lt;span class="pl-k"&gt;end&lt;/span&gt;

&lt;span class="pl-k"&gt;module&lt;/span&gt; &lt;span class="pl-en"&gt;HttpCodesHelpers&lt;/span&gt;
  &lt;span class="pl-k"&gt;def&lt;/span&gt; &lt;span class="pl-en"&gt;unauthorized&lt;/span&gt;
    &lt;span class="pl-c1"&gt;401&lt;/span&gt;
  &lt;span class="pl-k"&gt;end&lt;/span&gt;
&lt;span class="pl-k"&gt;end&lt;/span&gt;

&lt;span class="pl-k"&gt;class&lt;/span&gt; &lt;span class="pl-en"&gt;API&lt;span class="pl-e"&gt; &amp;lt; Grape::API&lt;/span&gt;&lt;/span&gt;
  &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; define helpers with a block&lt;/span&gt;
  helpers &lt;span class="pl-k"&gt;do&lt;/span&gt;
    &lt;span class="pl-k"&gt;def&lt;/span&gt; &lt;span class="pl-en"&gt;current_user&lt;/span&gt;
      &lt;span class="pl-c1"&gt;User&lt;/span&gt;.find(params[&lt;span class="pl-c1"&gt;:user_id&lt;/span&gt;])
    &lt;span class="pl-k"&gt;end&lt;/span&gt;
  &lt;span class="pl-k"&gt;end&lt;/span&gt;

  &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; or mix in an array of modules&lt;/span&gt;
  helpers &lt;span class="pl-c1"&gt;StatusHelpers&lt;/span&gt;, &lt;span class="pl-c1"&gt;HttpCodesHelpers&lt;/span&gt;

  before &lt;span class="pl-k"&gt;do&lt;/span&gt;
    error!(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;Access Denied&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;, unauthorized) &lt;span class="pl-k"&gt;unless&lt;/span&gt; current_user
  &lt;span class="pl-k"&gt;end&lt;/span&gt;

  get &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;info&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt; &lt;span class="pl-k"&gt;do&lt;/span&gt;
    &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; helpers available in your endpoint and filters&lt;/span&gt;
    user_info(current_user)
  &lt;span class="pl-k"&gt;end&lt;/span&gt;
&lt;span class="pl-k"&gt;end&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;You can define reusable &lt;code&gt;params&lt;/code&gt; using &lt;code&gt;helpers&lt;/code&gt;.&lt;/p&gt;
&lt;div class="highlight highlight-source-ruby"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;class&lt;/span&gt; &lt;span class="pl-en"&gt;API&lt;span class="pl-e"&gt; &amp;lt; Grape::API&lt;/span&gt;&lt;/span&gt;
  helpers &lt;span class="pl-k"&gt;do&lt;/span&gt;
    params &lt;span class="pl-c1"&gt;:pagination&lt;/span&gt; &lt;span class="pl-k"&gt;do&lt;/span&gt;
      optional &lt;span class="pl-c1"&gt;:page&lt;/span&gt;, &lt;span class="pl-c1"&gt;type:&lt;/span&gt; &lt;span class="pl-c1"&gt;Integer&lt;/span&gt;
      optional &lt;span class="pl-c1"&gt;:per_page&lt;/span&gt;, &lt;span class="pl-c1"&gt;type:&lt;/span&gt; &lt;span class="pl-c1"&gt;Integer&lt;/span&gt;
    &lt;span class="pl-k"&gt;end&lt;/span&gt;
  &lt;span class="pl-k"&gt;end&lt;/span&gt;

  desc &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;Get collection&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;
  params &lt;span class="pl-k"&gt;do&lt;/span&gt;
    use &lt;span class="pl-c1"&gt;:pagination&lt;/span&gt; &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; aliases: includes, use_scope&lt;/span&gt;
  &lt;span class="pl-k"&gt;end&lt;/span&gt;
  get &lt;span class="pl-k"&gt;do&lt;/span&gt;
    &lt;span class="pl-c1"&gt;Collection&lt;/span&gt;.page(params[&lt;span class="pl-c1"&gt;:page&lt;/span&gt;]).per(params[&lt;span class="pl-c1"&gt;:per_page&lt;/span&gt;])
  &lt;span class="pl-k"&gt;end&lt;/span&gt;
&lt;span class="pl-k"&gt;end&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;You can also define reusable &lt;code&gt;params&lt;/code&gt; using shared helpers.&lt;/p&gt;
&lt;div class="highlight highlight-source-ruby"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;module&lt;/span&gt; &lt;span class="pl-en"&gt;SharedParams&lt;/span&gt;
  &lt;span class="pl-k"&gt;extend&lt;/span&gt; &lt;span class="pl-c1"&gt;Grape&lt;/span&gt;::&lt;span class="pl-c1"&gt;API&lt;/span&gt;::&lt;span class="pl-c1"&gt;Helpers&lt;/span&gt;

  params &lt;span class="pl-c1"&gt;:period&lt;/span&gt; &lt;span class="pl-k"&gt;do&lt;/span&gt;
    optional &lt;span class="pl-c1"&gt;:start_date&lt;/span&gt;
    optional &lt;span class="pl-c1"&gt;:end_date&lt;/span&gt;
  &lt;span class="pl-k"&gt;end&lt;/span&gt;

  params &lt;span class="pl-c1"&gt;:pagination&lt;/span&gt; &lt;span class="pl-k"&gt;do&lt;/span&gt;
    optional &lt;span class="pl-c1"&gt;:page&lt;/span&gt;, &lt;span class="pl-c1"&gt;type:&lt;/span&gt; &lt;span class="pl-c1"&gt;Integer&lt;/span&gt;
    optional &lt;span class="pl-c1"&gt;:per_page&lt;/span&gt;, &lt;span class="pl-c1"&gt;type:&lt;/span&gt; &lt;span class="pl-c1"&gt;Integer&lt;/span&gt;
  &lt;span class="pl-k"&gt;end&lt;/span&gt;
&lt;span class="pl-k"&gt;end&lt;/span&gt;

&lt;span class="pl-k"&gt;class&lt;/span&gt; &lt;span class="pl-en"&gt;API&lt;span class="pl-e"&gt; &amp;lt; Grape::API&lt;/span&gt;&lt;/span&gt;
  helpers &lt;span class="pl-c1"&gt;SharedParams&lt;/span&gt;

  desc &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;Get collection.&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;
  params &lt;span class="pl-k"&gt;do&lt;/span&gt;
    use &lt;span class="pl-c1"&gt;:period&lt;/span&gt;, &lt;span class="pl-c1"&gt;:pagination&lt;/span&gt;
  &lt;span class="pl-k"&gt;end&lt;/span&gt;

  get &lt;span class="pl-k"&gt;do&lt;/span&gt;
    &lt;span class="pl-c1"&gt;Collection&lt;/span&gt;
      .from(params[&lt;span class="pl-c1"&gt;:start_date&lt;/span&gt;])
      .to(params[&lt;span class="pl-c1"&gt;:end_date&lt;/span&gt;])
      .page(params[&lt;span class="pl-c1"&gt;:page&lt;/span&gt;])
      .per(params[&lt;span class="pl-c1"&gt;:per_page&lt;/span&gt;])
  &lt;span class="pl-k"&gt;end&lt;/span&gt;
&lt;span class="pl-k"&gt;end&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Helpers support blocks that can help set default values. The following API can return a collection sorted by &lt;code&gt;id&lt;/code&gt; or &lt;code&gt;created_at&lt;/code&gt; in &lt;code&gt;asc&lt;/code&gt; or &lt;code&gt;desc&lt;/code&gt; order.&lt;/p&gt;
&lt;div class="highlight highlight-source-ruby"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;module&lt;/span&gt; &lt;span class="pl-en"&gt;SharedParams&lt;/span&gt;
  &lt;span class="pl-k"&gt;extend&lt;/span&gt; &lt;span class="pl-c1"&gt;Grape&lt;/span&gt;::&lt;span class="pl-c1"&gt;API&lt;/span&gt;::&lt;span class="pl-c1"&gt;Helpers&lt;/span&gt;

  params &lt;span class="pl-c1"&gt;:order&lt;/span&gt; &lt;span class="pl-k"&gt;do&lt;/span&gt; |&lt;span class="pl-smi"&gt;options&lt;/span&gt;|
    optional &lt;span class="pl-c1"&gt;:order_by&lt;/span&gt;, &lt;span class="pl-c1"&gt;type:&lt;/span&gt; &lt;span class="pl-c1"&gt;Symbol&lt;/span&gt;, &lt;span class="pl-c1"&gt;values:&lt;/span&gt; options[&lt;span class="pl-c1"&gt;:order_by&lt;/span&gt;], &lt;span class="pl-c1"&gt;default:&lt;/span&gt; options[&lt;span class="pl-c1"&gt;:default_order_by&lt;/span&gt;]
    optional &lt;span class="pl-c1"&gt;:order&lt;/span&gt;, &lt;span class="pl-c1"&gt;type:&lt;/span&gt; &lt;span class="pl-c1"&gt;Symbol&lt;/span&gt;, &lt;span class="pl-c1"&gt;values:&lt;/span&gt; &lt;span class="pl-c1"&gt;%i(asc desc)&lt;/span&gt;, &lt;span class="pl-c1"&gt;default:&lt;/span&gt; options[&lt;span class="pl-c1"&gt;:default_order&lt;/span&gt;]
  &lt;span class="pl-k"&gt;end&lt;/span&gt;
&lt;span class="pl-k"&gt;end&lt;/span&gt;

&lt;span class="pl-k"&gt;class&lt;/span&gt; &lt;span class="pl-en"&gt;API&lt;span class="pl-e"&gt; &amp;lt; Grape::API&lt;/span&gt;&lt;/span&gt;
  helpers &lt;span class="pl-c1"&gt;SharedParams&lt;/span&gt;

  desc &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;Get a sorted collection.&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;
  params &lt;span class="pl-k"&gt;do&lt;/span&gt;
    use &lt;span class="pl-c1"&gt;:order&lt;/span&gt;, &lt;span class="pl-c1"&gt;order_by:&lt;/span&gt; &lt;span class="pl-c1"&gt;%i(id created_at)&lt;/span&gt;, &lt;span class="pl-c1"&gt;default_order_by:&lt;/span&gt; &lt;span class="pl-c1"&gt;:created_at&lt;/span&gt;, &lt;span class="pl-c1"&gt;default_order:&lt;/span&gt; &lt;span class="pl-c1"&gt;:asc&lt;/span&gt;
  &lt;span class="pl-k"&gt;end&lt;/span&gt;

  get &lt;span class="pl-k"&gt;do&lt;/span&gt;
    &lt;span class="pl-c1"&gt;Collection&lt;/span&gt;.send(params[&lt;span class="pl-c1"&gt;:order&lt;/span&gt;], params[&lt;span class="pl-c1"&gt;:order_by&lt;/span&gt;])
  &lt;span class="pl-k"&gt;end&lt;/span&gt;
&lt;span class="pl-k"&gt;end&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h2&gt;&lt;a id="user-content-path-helpers" class="anchor" aria-hidden="true" href="#path-helpers"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Path Helpers&lt;/h2&gt;
&lt;p&gt;If you need methods for generating paths inside your endpoints, please see the &lt;a href="https://github.com/reprah/grape-route-helpers"&gt;grape-route-helpers&lt;/a&gt; gem.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-parameter-documentation" class="anchor" aria-hidden="true" href="#parameter-documentation"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Parameter Documentation&lt;/h2&gt;
&lt;p&gt;You can attach additional documentation to &lt;code&gt;params&lt;/code&gt; using a &lt;code&gt;documentation&lt;/code&gt; hash.&lt;/p&gt;
&lt;div class="highlight highlight-source-ruby"&gt;&lt;pre&gt;params &lt;span class="pl-k"&gt;do&lt;/span&gt;
  optional &lt;span class="pl-c1"&gt;:first_name&lt;/span&gt;, &lt;span class="pl-c1"&gt;type:&lt;/span&gt; &lt;span class="pl-c1"&gt;String&lt;/span&gt;, &lt;span class="pl-c1"&gt;documentation:&lt;/span&gt; { &lt;span class="pl-c1"&gt;example:&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;Jim&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt; }
  requires &lt;span class="pl-c1"&gt;:last_name&lt;/span&gt;, &lt;span class="pl-c1"&gt;type:&lt;/span&gt; &lt;span class="pl-c1"&gt;String&lt;/span&gt;, &lt;span class="pl-c1"&gt;documentation:&lt;/span&gt; { &lt;span class="pl-c1"&gt;example:&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;Smith&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt; }
&lt;span class="pl-k"&gt;end&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h2&gt;&lt;a id="user-content-cookies" class="anchor" aria-hidden="true" href="#cookies"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Cookies&lt;/h2&gt;
&lt;p&gt;You can set, get and delete your cookies very simply using &lt;code&gt;cookies&lt;/code&gt; method.&lt;/p&gt;
&lt;div class="highlight highlight-source-ruby"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;class&lt;/span&gt; &lt;span class="pl-en"&gt;API&lt;span class="pl-e"&gt; &amp;lt; Grape::API&lt;/span&gt;&lt;/span&gt;
  get &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;status_count&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt; &lt;span class="pl-k"&gt;do&lt;/span&gt;
    cookies[&lt;span class="pl-c1"&gt;:status_count&lt;/span&gt;] &lt;span class="pl-k"&gt;||=&lt;/span&gt; &lt;span class="pl-c1"&gt;0&lt;/span&gt;
    cookies[&lt;span class="pl-c1"&gt;:status_count&lt;/span&gt;] &lt;span class="pl-k"&gt;+=&lt;/span&gt; &lt;span class="pl-c1"&gt;1&lt;/span&gt;
    { &lt;span class="pl-c1"&gt;status_count:&lt;/span&gt; cookies[&lt;span class="pl-c1"&gt;:status_count&lt;/span&gt;] }
  &lt;span class="pl-k"&gt;end&lt;/span&gt;

  delete &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;status_count&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt; &lt;span class="pl-k"&gt;do&lt;/span&gt;
    { &lt;span class="pl-c1"&gt;status_count:&lt;/span&gt; cookies.delete(&lt;span class="pl-c1"&gt;:status_count&lt;/span&gt;) }
  &lt;span class="pl-k"&gt;end&lt;/span&gt;
&lt;span class="pl-k"&gt;end&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Use a hash-based syntax to set more than one value.&lt;/p&gt;
&lt;div class="highlight highlight-source-ruby"&gt;&lt;pre&gt;cookies[&lt;span class="pl-c1"&gt;:status_count&lt;/span&gt;] &lt;span class="pl-k"&gt;=&lt;/span&gt; {
  &lt;span class="pl-c1"&gt;value:&lt;/span&gt; &lt;span class="pl-c1"&gt;0&lt;/span&gt;,
  &lt;span class="pl-c1"&gt;expires:&lt;/span&gt; &lt;span class="pl-c1"&gt;Time&lt;/span&gt;.tomorrow,
  &lt;span class="pl-c1"&gt;domain:&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;.twitter.com&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;,
  &lt;span class="pl-c1"&gt;path:&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;/&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;
}

cookies[&lt;span class="pl-c1"&gt;:status_count&lt;/span&gt;][&lt;span class="pl-c1"&gt;:value&lt;/span&gt;] &lt;span class="pl-k"&gt;+=&lt;/span&gt;&lt;span class="pl-c1"&gt;1&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Delete a cookie with &lt;code&gt;delete&lt;/code&gt;.&lt;/p&gt;
&lt;div class="highlight highlight-source-ruby"&gt;&lt;pre&gt;cookies.delete &lt;span class="pl-c1"&gt;:status_count&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Specify an optional path.&lt;/p&gt;
&lt;div class="highlight highlight-source-ruby"&gt;&lt;pre&gt;cookies.delete &lt;span class="pl-c1"&gt;:status_count&lt;/span&gt;, &lt;span class="pl-c1"&gt;path:&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;/&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h2&gt;&lt;a id="user-content-http-status-code" class="anchor" aria-hidden="true" href="#http-status-code"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;HTTP Status Code&lt;/h2&gt;
&lt;p&gt;By default Grape returns a 201 for &lt;code&gt;POST&lt;/code&gt;-Requests, 204 for &lt;code&gt;DELETE&lt;/code&gt;-Requests that don't return any content, and 200 status code for all other Requests.
You can use &lt;code&gt;status&lt;/code&gt; to query and set the actual HTTP Status Code&lt;/p&gt;
&lt;div class="highlight highlight-source-ruby"&gt;&lt;pre&gt;post &lt;span class="pl-k"&gt;do&lt;/span&gt;
  status &lt;span class="pl-c1"&gt;202&lt;/span&gt;

  &lt;span class="pl-k"&gt;if&lt;/span&gt; status &lt;span class="pl-k"&gt;==&lt;/span&gt; &lt;span class="pl-c1"&gt;200&lt;/span&gt;
     &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; do some thing&lt;/span&gt;
  &lt;span class="pl-k"&gt;end&lt;/span&gt;
&lt;span class="pl-k"&gt;end&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;You can also use one of status codes symbols that are provided by &lt;a href="http://www.rubydoc.info/github/rack/rack/Rack/Utils#HTTP_STATUS_CODES-constant" rel="nofollow"&gt;Rack utils&lt;/a&gt;&lt;/p&gt;
&lt;div class="highlight highlight-source-ruby"&gt;&lt;pre&gt;post &lt;span class="pl-k"&gt;do&lt;/span&gt;
  status &lt;span class="pl-c1"&gt;:no_content&lt;/span&gt;
&lt;span class="pl-k"&gt;end&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h2&gt;&lt;a id="user-content-redirecting" class="anchor" aria-hidden="true" href="#redirecting"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Redirecting&lt;/h2&gt;
&lt;p&gt;You can redirect to a new url temporarily (302) or permanently (301).&lt;/p&gt;
&lt;div class="highlight highlight-source-ruby"&gt;&lt;pre&gt;redirect &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;/statuses&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;div class="highlight highlight-source-ruby"&gt;&lt;pre&gt;redirect &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;/statuses&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-c1"&gt;permanent:&lt;/span&gt; &lt;span class="pl-c1"&gt;true&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h2&gt;&lt;a id="user-content-recognizing-path" class="anchor" aria-hidden="true" href="#recognizing-path"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Recognizing Path&lt;/h2&gt;
&lt;p&gt;You can recognize the endpoint matched with given path.&lt;/p&gt;
&lt;p&gt;This API returns an instance of &lt;code&gt;Grape::Endpoint&lt;/code&gt;.&lt;/p&gt;
&lt;div class="highlight highlight-source-ruby"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;class&lt;/span&gt; &lt;span class="pl-en"&gt;API&lt;span class="pl-e"&gt; &amp;lt; Grape::API&lt;/span&gt;&lt;/span&gt;
  get &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;/statuses&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt; &lt;span class="pl-k"&gt;do&lt;/span&gt;
  &lt;span class="pl-k"&gt;end&lt;/span&gt;
&lt;span class="pl-k"&gt;end&lt;/span&gt;

&lt;span class="pl-c1"&gt;API&lt;/span&gt;.recognize_path &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;/statuses&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h2&gt;&lt;a id="user-content-allowed-methods" class="anchor" aria-hidden="true" href="#allowed-methods"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Allowed Methods&lt;/h2&gt;
&lt;p&gt;When you add a &lt;code&gt;GET&lt;/code&gt; route for a resource, a route for the &lt;code&gt;HEAD&lt;/code&gt;
method will also be added automatically. You can disable this
behavior with &lt;code&gt;do_not_route_head!&lt;/code&gt;.&lt;/p&gt;
&lt;div class="highlight highlight-source-ruby"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;class&lt;/span&gt; &lt;span class="pl-en"&gt;API&lt;span class="pl-e"&gt; &amp;lt; Grape::API&lt;/span&gt;&lt;/span&gt;
  do_not_route_head!

  get &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;/example&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt; &lt;span class="pl-k"&gt;do&lt;/span&gt;
    &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; only responds to GET&lt;/span&gt;
  &lt;span class="pl-k"&gt;end&lt;/span&gt;
&lt;span class="pl-k"&gt;end&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;When you add a route for a resource, a route for the &lt;code&gt;OPTIONS&lt;/code&gt;
method will also be added. The response to an OPTIONS request will
include an "Allow" header listing the supported methods. If the resource
has &lt;code&gt;before&lt;/code&gt; and &lt;code&gt;after&lt;/code&gt; callbacks they will be executed, but no other callbacks will
run.&lt;/p&gt;
&lt;div class="highlight highlight-source-ruby"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;class&lt;/span&gt; &lt;span class="pl-en"&gt;API&lt;span class="pl-e"&gt; &amp;lt; Grape::API&lt;/span&gt;&lt;/span&gt;
  get &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;/rt_count&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt; &lt;span class="pl-k"&gt;do&lt;/span&gt;
    { &lt;span class="pl-c1"&gt;rt_count:&lt;/span&gt; current_user.rt_count }
  &lt;span class="pl-k"&gt;end&lt;/span&gt;

  params &lt;span class="pl-k"&gt;do&lt;/span&gt;
    requires &lt;span class="pl-c1"&gt;:value&lt;/span&gt;, &lt;span class="pl-c1"&gt;type:&lt;/span&gt; &lt;span class="pl-c1"&gt;Integer&lt;/span&gt;, &lt;span class="pl-c1"&gt;desc:&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;Value to add to the rt count.&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;
  &lt;span class="pl-k"&gt;end&lt;/span&gt;
  put &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;/rt_count&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt; &lt;span class="pl-k"&gt;do&lt;/span&gt;
    current_user.rt_count &lt;span class="pl-k"&gt;+=&lt;/span&gt; params[&lt;span class="pl-c1"&gt;:value&lt;/span&gt;].to_i
    { &lt;span class="pl-c1"&gt;rt_count:&lt;/span&gt; current_user.rt_count }
  &lt;span class="pl-k"&gt;end&lt;/span&gt;
&lt;span class="pl-k"&gt;end&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt;curl -v -X OPTIONS http://localhost:3000/rt_count

&lt;span class="pl-k"&gt;&amp;gt;&lt;/span&gt; OPTIONS /rt_count HTTP/1.1
&lt;span class="pl-k"&gt;&amp;gt;&lt;/span&gt;
&lt;span class="pl-k"&gt;&amp;lt;&lt;/span&gt; HTTP/1.1 204 No Content
&lt;span class="pl-k"&gt;&amp;lt;&lt;/span&gt; Allow: OPTIONS, GET, PUT&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;You can disable this behavior with &lt;code&gt;do_not_route_options!&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;If a request for a resource is made with an unsupported HTTP method, an
HTTP 405 (Method Not Allowed) response will be returned. If the resource
has &lt;code&gt;before&lt;/code&gt; callbacks they will be executed, but no other callbacks will
run.&lt;/p&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt;curl -X DELETE -v http://localhost:3000/rt_count/

&lt;span class="pl-k"&gt;&amp;gt;&lt;/span&gt; DELETE /rt_count/ HTTP/1.1
&lt;span class="pl-k"&gt;&amp;gt;&lt;/span&gt; Host: localhost:3000
&lt;span class="pl-k"&gt;&amp;gt;&lt;/span&gt;
&lt;span class="pl-k"&gt;&amp;lt;&lt;/span&gt; HTTP/1.1 405 Method Not Allowed
&lt;span class="pl-k"&gt;&amp;lt;&lt;/span&gt; Allow: OPTIONS, GET, PUT&lt;/pre&gt;&lt;/div&gt;
&lt;h2&gt;&lt;a id="user-content-raising-exceptions" class="anchor" aria-hidden="true" href="#raising-exceptions"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Raising Exceptions&lt;/h2&gt;
&lt;p&gt;You can abort the execution of an API method by raising errors with &lt;code&gt;error!&lt;/code&gt;.&lt;/p&gt;
&lt;div class="highlight highlight-source-ruby"&gt;&lt;pre&gt;error! &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;Access Denied&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-c1"&gt;401&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Anything that responds to &lt;code&gt;#to_s&lt;/code&gt; can be given as a first argument to &lt;code&gt;error!&lt;/code&gt;.&lt;/p&gt;
&lt;div class="highlight highlight-source-ruby"&gt;&lt;pre&gt;error! &lt;span class="pl-c1"&gt;:not_found&lt;/span&gt;, &lt;span class="pl-c1"&gt;404&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;You can also return JSON formatted objects by raising error! and passing a hash
instead of a message.&lt;/p&gt;
&lt;div class="highlight highlight-source-ruby"&gt;&lt;pre&gt;error!({ &lt;span class="pl-c1"&gt;error:&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;unexpected error&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-c1"&gt;detail:&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;missing widget&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt; }, &lt;span class="pl-c1"&gt;500&lt;/span&gt;)&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;You can set additional headers for the response. They will be merged with headers set before &lt;code&gt;error!&lt;/code&gt; call.&lt;/p&gt;
&lt;div class="highlight highlight-source-ruby"&gt;&lt;pre&gt;error!(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;Something went wrong&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-c1"&gt;500&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;X-Error-Detail&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt; =&amp;gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;Invalid token.&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;)&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;You can present documented errors with a Grape entity using the the &lt;a href="https://github.com/ruby-grape/grape-entity"&gt;grape-entity&lt;/a&gt; gem.&lt;/p&gt;
&lt;div class="highlight highlight-source-ruby"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;module&lt;/span&gt; &lt;span class="pl-en"&gt;API&lt;/span&gt;
  &lt;span class="pl-k"&gt;class&lt;/span&gt; &lt;span class="pl-en"&gt;Error&lt;span class="pl-e"&gt; &amp;lt; Grape::Entity&lt;/span&gt;&lt;/span&gt;
    expose &lt;span class="pl-c1"&gt;:code&lt;/span&gt;
    expose &lt;span class="pl-c1"&gt;:message&lt;/span&gt;
  &lt;span class="pl-k"&gt;end&lt;/span&gt;
&lt;span class="pl-k"&gt;end&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;The following example specifies the entity to use in the &lt;code&gt;http_codes&lt;/code&gt; definition.&lt;/p&gt;
&lt;div class="highlight highlight-source-ruby"&gt;&lt;pre&gt;desc &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;My Route&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt; &lt;span class="pl-k"&gt;do&lt;/span&gt;
 failure [[&lt;span class="pl-c1"&gt;408&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;Unauthorized&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-c1"&gt;API&lt;/span&gt;::&lt;span class="pl-c1"&gt;Error&lt;/span&gt;]]
&lt;span class="pl-k"&gt;end&lt;/span&gt;
error!({ &lt;span class="pl-c1"&gt;message:&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;Unauthorized&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt; }, &lt;span class="pl-c1"&gt;408&lt;/span&gt;)&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;The following example specifies the presented entity explicitly in the error message.&lt;/p&gt;
&lt;div class="highlight highlight-source-ruby"&gt;&lt;pre&gt;desc &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;My Route&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt; &lt;span class="pl-k"&gt;do&lt;/span&gt;
 failure [[&lt;span class="pl-c1"&gt;408&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;Unauthorized&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;]]
&lt;span class="pl-k"&gt;end&lt;/span&gt;
error!({ &lt;span class="pl-c1"&gt;message:&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;Unauthorized&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-c1"&gt;with:&lt;/span&gt; &lt;span class="pl-c1"&gt;API&lt;/span&gt;::&lt;span class="pl-c1"&gt;Error&lt;/span&gt; }, &lt;span class="pl-c1"&gt;408&lt;/span&gt;)&lt;/pre&gt;&lt;/div&gt;
&lt;h3&gt;&lt;a id="user-content-default-error-http-status-code" class="anchor" aria-hidden="true" href="#default-error-http-status-code"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Default Error HTTP Status Code&lt;/h3&gt;
&lt;p&gt;By default Grape returns a 500 status code from &lt;code&gt;error!&lt;/code&gt;. You can change this with &lt;code&gt;default_error_status&lt;/code&gt;.&lt;/p&gt;
&lt;div class="highlight highlight-source-ruby"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;class&lt;/span&gt; &lt;span class="pl-en"&gt;API&lt;span class="pl-e"&gt; &amp;lt; Grape::API&lt;/span&gt;&lt;/span&gt;
  default_error_status &lt;span class="pl-c1"&gt;400&lt;/span&gt;
  get &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;/example&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt; &lt;span class="pl-k"&gt;do&lt;/span&gt;
    error! &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;This should have http status code 400&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;
  &lt;span class="pl-k"&gt;end&lt;/span&gt;
&lt;span class="pl-k"&gt;end&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h3&gt;&lt;a id="user-content-handling-404" class="anchor" aria-hidden="true" href="#handling-404"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Handling 404&lt;/h3&gt;
&lt;p&gt;For Grape to handle all the 404s for your API, it can be useful to use a catch-all.
In its simplest form, it can be like:&lt;/p&gt;
&lt;div class="highlight highlight-source-ruby"&gt;&lt;pre&gt;route &lt;span class="pl-c1"&gt;:any&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;*path&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt; &lt;span class="pl-k"&gt;do&lt;/span&gt;
  error! &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; or something else&lt;/span&gt;
&lt;span class="pl-k"&gt;end&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;It is very crucial to &lt;strong&gt;define this endpoint at the very end of your API&lt;/strong&gt;, as it
literally accepts every request.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-exception-handling" class="anchor" aria-hidden="true" href="#exception-handling"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Exception Handling&lt;/h2&gt;
&lt;p&gt;Grape can be told to rescue all &lt;code&gt;StandardError&lt;/code&gt; exceptions and return them in the API format.&lt;/p&gt;
&lt;div class="highlight highlight-source-ruby"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;class&lt;/span&gt; &lt;span class="pl-en"&gt;Twitter::API&lt;span class="pl-e"&gt; &amp;lt; Grape::API&lt;/span&gt;&lt;/span&gt;
  rescue_from &lt;span class="pl-c1"&gt;:all&lt;/span&gt;
&lt;span class="pl-k"&gt;end&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;This mimics &lt;a href="https://ruby-doc.org/core/StandardError.html" rel="nofollow"&gt;default &lt;code&gt;rescue&lt;/code&gt; behaviour&lt;/a&gt; when an exception type is not provided.
Any other exception should be rescued explicitly, see &lt;a href="#exceptions-that-should-be-rescued-explicitly"&gt;below&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Grape can also rescue from all exceptions and still use the built-in exception handing.
This will give the same behavior as &lt;code&gt;rescue_from :all&lt;/code&gt; with the addition that Grape will use the exception handling defined by all Exception classes that inherit &lt;code&gt;Grape::Exceptions::Base&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;The intent of this setting is to provide a simple way to cover the most common exceptions and return any unexpected exceptions in the API format.&lt;/p&gt;
&lt;div class="highlight highlight-source-ruby"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;class&lt;/span&gt; &lt;span class="pl-en"&gt;Twitter::API&lt;span class="pl-e"&gt; &amp;lt; Grape::API&lt;/span&gt;&lt;/span&gt;
  rescue_from &lt;span class="pl-c1"&gt;:grape_exceptions&lt;/span&gt;
&lt;span class="pl-k"&gt;end&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;You can also rescue specific exceptions.&lt;/p&gt;
&lt;div class="highlight highlight-source-ruby"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;class&lt;/span&gt; &lt;span class="pl-en"&gt;Twitter::API&lt;span class="pl-e"&gt; &amp;lt; Grape::API&lt;/span&gt;&lt;/span&gt;
  rescue_from &lt;span class="pl-c1"&gt;ArgumentError&lt;/span&gt;, &lt;span class="pl-c1"&gt;UserDefinedError&lt;/span&gt;
&lt;span class="pl-k"&gt;end&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;In this case &lt;code&gt;UserDefinedError&lt;/code&gt; must be inherited from &lt;code&gt;StandardError&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;Notice that you could combine these two approaches (rescuing custom errors takes precedence). For example, it's useful for handling all exceptions except Grape validation errors.&lt;/p&gt;
&lt;div class="highlight highlight-source-ruby"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;class&lt;/span&gt; &lt;span class="pl-en"&gt;Twitter::API&lt;span class="pl-e"&gt; &amp;lt; Grape::API&lt;/span&gt;&lt;/span&gt;
  rescue_from &lt;span class="pl-c1"&gt;Grape&lt;/span&gt;::&lt;span class="pl-c1"&gt;Exceptions&lt;/span&gt;::&lt;span class="pl-c1"&gt;ValidationErrors&lt;/span&gt; &lt;span class="pl-k"&gt;do&lt;/span&gt; |&lt;span class="pl-smi"&gt;e&lt;/span&gt;|
    error!(e, &lt;span class="pl-c1"&gt;400&lt;/span&gt;)
  &lt;span class="pl-k"&gt;end&lt;/span&gt;

  rescue_from &lt;span class="pl-c1"&gt;:all&lt;/span&gt;
&lt;span class="pl-k"&gt;end&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;The error format will match the request format. See "Content-Types" below.&lt;/p&gt;
&lt;p&gt;Custom error formatters for existing and additional types can be defined with a proc.&lt;/p&gt;
&lt;div class="highlight highlight-source-ruby"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;class&lt;/span&gt; &lt;span class="pl-en"&gt;Twitter::API&lt;span class="pl-e"&gt; &amp;lt; Grape::API&lt;/span&gt;&lt;/span&gt;
  error_formatter &lt;span class="pl-c1"&gt;:txt&lt;/span&gt;, &lt;span class="pl-c1"&gt;-&amp;gt;&lt;/span&gt;(message, backtrace, options, env, original_exception) {
    &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;error: &lt;span class="pl-pse"&gt;#{&lt;/span&gt;&lt;span class="pl-s1"&gt;message&lt;/span&gt;&lt;span class="pl-pse"&gt;}&lt;/span&gt; from &lt;span class="pl-pse"&gt;#{&lt;/span&gt;&lt;span class="pl-s1"&gt;backtrace&lt;/span&gt;&lt;span class="pl-pse"&gt;}&lt;/span&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;
  }
&lt;span class="pl-k"&gt;end&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;You can also use a module or class.&lt;/p&gt;
&lt;div class="highlight highlight-source-ruby"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;module&lt;/span&gt; &lt;span class="pl-en"&gt;CustomFormatter&lt;/span&gt;
  &lt;span class="pl-k"&gt;def&lt;/span&gt; &lt;span class="pl-en"&gt;self.call&lt;/span&gt;(&lt;span class="pl-smi"&gt;message&lt;/span&gt;, &lt;span class="pl-smi"&gt;backtrace&lt;/span&gt;, &lt;span class="pl-smi"&gt;options&lt;/span&gt;, &lt;span class="pl-smi"&gt;env&lt;/span&gt;, &lt;span class="pl-smi"&gt;original_exception&lt;/span&gt;)
    { &lt;span class="pl-c1"&gt;message:&lt;/span&gt; message, &lt;span class="pl-c1"&gt;backtrace:&lt;/span&gt; backtrace }
  &lt;span class="pl-k"&gt;end&lt;/span&gt;
&lt;span class="pl-k"&gt;end&lt;/span&gt;

&lt;span class="pl-k"&gt;class&lt;/span&gt; &lt;span class="pl-en"&gt;Twitter::API&lt;span class="pl-e"&gt; &amp;lt; Grape::API&lt;/span&gt;&lt;/span&gt;
  error_formatter &lt;span class="pl-c1"&gt;:custom&lt;/span&gt;, &lt;span class="pl-c1"&gt;CustomFormatter&lt;/span&gt;
&lt;span class="pl-k"&gt;end&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;You can rescue all exceptions with a code block. The &lt;code&gt;error!&lt;/code&gt; wrapper automatically sets the default error code and content-type.&lt;/p&gt;
&lt;div class="highlight highlight-source-ruby"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;class&lt;/span&gt; &lt;span class="pl-en"&gt;Twitter::API&lt;span class="pl-e"&gt; &amp;lt; Grape::API&lt;/span&gt;&lt;/span&gt;
  rescue_from &lt;span class="pl-c1"&gt;:all&lt;/span&gt; &lt;span class="pl-k"&gt;do&lt;/span&gt; |&lt;span class="pl-smi"&gt;e&lt;/span&gt;|
    error!(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;rescued from &lt;span class="pl-pse"&gt;#{&lt;/span&gt;&lt;span class="pl-s1"&gt;e.class.name&lt;/span&gt;&lt;span class="pl-pse"&gt;}&lt;/span&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
  &lt;span class="pl-k"&gt;end&lt;/span&gt;
&lt;span class="pl-k"&gt;end&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Optionally, you can set the format, status code and headers.&lt;/p&gt;
&lt;div class="highlight highlight-source-ruby"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;class&lt;/span&gt; &lt;span class="pl-en"&gt;Twitter::API&lt;span class="pl-e"&gt; &amp;lt; Grape::API&lt;/span&gt;&lt;/span&gt;
  &lt;span class="pl-c1"&gt;format&lt;/span&gt; &lt;span class="pl-c1"&gt;:json&lt;/span&gt;
  rescue_from &lt;span class="pl-c1"&gt;:all&lt;/span&gt; &lt;span class="pl-k"&gt;do&lt;/span&gt; |&lt;span class="pl-smi"&gt;e&lt;/span&gt;|
    error!({ &lt;span class="pl-c1"&gt;error:&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;Server error.&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt; }, &lt;span class="pl-c1"&gt;500&lt;/span&gt;, { &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;Content-Type&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt; =&amp;gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;text/error&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt; })
  &lt;span class="pl-k"&gt;end&lt;/span&gt;
&lt;span class="pl-k"&gt;end&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;You can also rescue all exceptions with a code block and handle the Rack response at the lowest level.&lt;/p&gt;
&lt;div class="highlight highlight-source-ruby"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;class&lt;/span&gt; &lt;span class="pl-en"&gt;Twitter::API&lt;span class="pl-e"&gt; &amp;lt; Grape::API&lt;/span&gt;&lt;/span&gt;
  rescue_from &lt;span class="pl-c1"&gt;:all&lt;/span&gt; &lt;span class="pl-k"&gt;do&lt;/span&gt; |&lt;span class="pl-smi"&gt;e&lt;/span&gt;|
    &lt;span class="pl-c1"&gt;Rack&lt;/span&gt;::&lt;span class="pl-c1"&gt;Response&lt;/span&gt;.&lt;span class="pl-k"&gt;new&lt;/span&gt;([ e.message ], &lt;span class="pl-c1"&gt;500&lt;/span&gt;, { &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;Content-type&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt; =&amp;gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;text/error&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt; })
  &lt;span class="pl-k"&gt;end&lt;/span&gt;
&lt;span class="pl-k"&gt;end&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Or rescue specific exceptions.&lt;/p&gt;
&lt;div class="highlight highlight-source-ruby"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;class&lt;/span&gt; &lt;span class="pl-en"&gt;Twitter::API&lt;span class="pl-e"&gt; &amp;lt; Grape::API&lt;/span&gt;&lt;/span&gt;
  rescue_from &lt;span class="pl-c1"&gt;ArgumentError&lt;/span&gt; &lt;span class="pl-k"&gt;do&lt;/span&gt; |&lt;span class="pl-smi"&gt;e&lt;/span&gt;|
    error!(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;ArgumentError: &lt;span class="pl-pse"&gt;#{&lt;/span&gt;&lt;span class="pl-s1"&gt;e.message&lt;/span&gt;&lt;span class="pl-pse"&gt;}&lt;/span&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
  &lt;span class="pl-k"&gt;end&lt;/span&gt;

  rescue_from &lt;span class="pl-c1"&gt;NoMethodError&lt;/span&gt; &lt;span class="pl-k"&gt;do&lt;/span&gt; |&lt;span class="pl-smi"&gt;e&lt;/span&gt;|
    error!(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;NoMethodError: &lt;span class="pl-pse"&gt;#{&lt;/span&gt;&lt;span class="pl-s1"&gt;e.message&lt;/span&gt;&lt;span class="pl-pse"&gt;}&lt;/span&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
  &lt;span class="pl-k"&gt;end&lt;/span&gt;
&lt;span class="pl-k"&gt;end&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;By default, &lt;code&gt;rescue_from&lt;/code&gt; will rescue the exceptions listed and all their subclasses.&lt;/p&gt;
&lt;p&gt;Assume you have the following exception classes defined.&lt;/p&gt;
&lt;div class="highlight highlight-source-ruby"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;module&lt;/span&gt; &lt;span class="pl-en"&gt;APIErrors&lt;/span&gt;
  &lt;span class="pl-k"&gt;class&lt;/span&gt; &lt;span class="pl-en"&gt;ParentError&lt;span class="pl-e"&gt; &amp;lt; StandardError&lt;/span&gt;&lt;/span&gt;; &lt;span class="pl-k"&gt;end&lt;/span&gt;
  &lt;span class="pl-k"&gt;class&lt;/span&gt; &lt;span class="pl-en"&gt;ChildError&lt;span class="pl-e"&gt; &amp;lt; ParentError&lt;/span&gt;&lt;/span&gt;; &lt;span class="pl-k"&gt;end&lt;/span&gt;
&lt;span class="pl-k"&gt;end&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Then the following &lt;code&gt;rescue_from&lt;/code&gt; clause will rescue exceptions of type &lt;code&gt;APIErrors::ParentError&lt;/code&gt; and its subclasses (in this case &lt;code&gt;APIErrors::ChildError&lt;/code&gt;).&lt;/p&gt;
&lt;div class="highlight highlight-source-ruby"&gt;&lt;pre&gt;rescue_from &lt;span class="pl-c1"&gt;APIErrors&lt;/span&gt;::&lt;span class="pl-c1"&gt;ParentError&lt;/span&gt; &lt;span class="pl-k"&gt;do&lt;/span&gt; |&lt;span class="pl-smi"&gt;e&lt;/span&gt;|
    error!({
      &lt;span class="pl-c1"&gt;error:&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;span class="pl-pse"&gt;#{&lt;/span&gt;&lt;span class="pl-s1"&gt;e.class&lt;/span&gt;&lt;span class="pl-pse"&gt;}&lt;/span&gt; error&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;,
      &lt;span class="pl-c1"&gt;message:&lt;/span&gt; e.message
    }, e.status)
&lt;span class="pl-k"&gt;end&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;To only rescue the base exception class, set &lt;code&gt;rescue_subclasses: false&lt;/code&gt;.
The code below will rescue exceptions of type &lt;code&gt;RuntimeError&lt;/code&gt; but &lt;em&gt;not&lt;/em&gt; its subclasses.&lt;/p&gt;
&lt;div class="highlight highlight-source-ruby"&gt;&lt;pre&gt;rescue_from &lt;span class="pl-c1"&gt;RuntimeError&lt;/span&gt;, &lt;span class="pl-c1"&gt;rescue_subclasses:&lt;/span&gt; &lt;span class="pl-c1"&gt;false&lt;/span&gt; &lt;span class="pl-k"&gt;do&lt;/span&gt; |&lt;span class="pl-smi"&gt;e&lt;/span&gt;|
    error!({
      &lt;span class="pl-c1"&gt;status:&lt;/span&gt; e.status,
      &lt;span class="pl-c1"&gt;message:&lt;/span&gt; e.message,
      &lt;span class="pl-c1"&gt;errors:&lt;/span&gt; e.errors
    }, e.status)
&lt;span class="pl-k"&gt;end&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Helpers are also available inside &lt;code&gt;rescue_from&lt;/code&gt;.&lt;/p&gt;
&lt;div class="highlight highlight-source-ruby"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;class&lt;/span&gt; &lt;span class="pl-en"&gt;Twitter::API&lt;span class="pl-e"&gt; &amp;lt; Grape::API&lt;/span&gt;&lt;/span&gt;
  &lt;span class="pl-c1"&gt;format&lt;/span&gt; &lt;span class="pl-c1"&gt;:json&lt;/span&gt;
  helpers &lt;span class="pl-k"&gt;do&lt;/span&gt;
    &lt;span class="pl-k"&gt;def&lt;/span&gt; &lt;span class="pl-en"&gt;server_error!&lt;/span&gt;
      error!({ &lt;span class="pl-c1"&gt;error:&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;Server error.&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt; }, &lt;span class="pl-c1"&gt;500&lt;/span&gt;, { &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;Content-Type&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt; =&amp;gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;text/error&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt; })
    &lt;span class="pl-k"&gt;end&lt;/span&gt;
  &lt;span class="pl-k"&gt;end&lt;/span&gt;

  rescue_from &lt;span class="pl-c1"&gt;:all&lt;/span&gt; &lt;span class="pl-k"&gt;do&lt;/span&gt; |&lt;span class="pl-smi"&gt;e&lt;/span&gt;|
    server_error!
  &lt;span class="pl-k"&gt;end&lt;/span&gt;
&lt;span class="pl-k"&gt;end&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;The &lt;code&gt;rescue_from&lt;/code&gt; handler must return a &lt;code&gt;Rack::Response&lt;/code&gt; object, call &lt;code&gt;error!&lt;/code&gt;, or raise an exception (either the original exception or another custom one). The exception raised in &lt;code&gt;rescue_from&lt;/code&gt; will be handled outside Grape. For example, if you mount Grape in Rails, the exception will be handle by &lt;a href="https://guides.rubyonrails.org/action_controller_overview.html#rescue" rel="nofollow"&gt;Rails Action Controller&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Alternately, use the &lt;code&gt;with&lt;/code&gt; option in &lt;code&gt;rescue_from&lt;/code&gt; to specify a method or a &lt;code&gt;proc&lt;/code&gt;.&lt;/p&gt;
&lt;div class="highlight highlight-source-ruby"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;class&lt;/span&gt; &lt;span class="pl-en"&gt;Twitter::API&lt;span class="pl-e"&gt; &amp;lt; Grape::API&lt;/span&gt;&lt;/span&gt;
  &lt;span class="pl-c1"&gt;format&lt;/span&gt; &lt;span class="pl-c1"&gt;:json&lt;/span&gt;
  helpers &lt;span class="pl-k"&gt;do&lt;/span&gt;
    &lt;span class="pl-k"&gt;def&lt;/span&gt; &lt;span class="pl-en"&gt;server_error!&lt;/span&gt;
      error!({ &lt;span class="pl-c1"&gt;error:&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;Server error.&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt; }, &lt;span class="pl-c1"&gt;500&lt;/span&gt;, { &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;Content-Type&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt; =&amp;gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;text/error&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt; })
    &lt;span class="pl-k"&gt;end&lt;/span&gt;
  &lt;span class="pl-k"&gt;end&lt;/span&gt;

  rescue_from &lt;span class="pl-c1"&gt;:all&lt;/span&gt;,          &lt;span class="pl-c1"&gt;with:&lt;/span&gt; &lt;span class="pl-c1"&gt;:server_error!&lt;/span&gt;
  rescue_from &lt;span class="pl-c1"&gt;ArgumentError&lt;/span&gt;, &lt;span class="pl-c1"&gt;with:&lt;/span&gt; &lt;span class="pl-c1"&gt;-&amp;gt;&lt;/span&gt; { &lt;span class="pl-c1"&gt;Rack&lt;/span&gt;::&lt;span class="pl-c1"&gt;Response&lt;/span&gt;.&lt;span class="pl-k"&gt;new&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;rescued with a method&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-c1"&gt;400&lt;/span&gt;) }
&lt;span class="pl-k"&gt;end&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Inside the &lt;code&gt;rescue_from&lt;/code&gt; block, the environment of the original controller method(&lt;code&gt;.self&lt;/code&gt; receiver) is accessible through the &lt;code&gt;#context&lt;/code&gt; method.&lt;/p&gt;
&lt;div class="highlight highlight-source-ruby"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;class&lt;/span&gt; &lt;span class="pl-en"&gt;Twitter::API&lt;span class="pl-e"&gt; &amp;lt; Grape::API&lt;/span&gt;&lt;/span&gt;
  rescue_from &lt;span class="pl-c1"&gt;:all&lt;/span&gt; &lt;span class="pl-k"&gt;do&lt;/span&gt; |&lt;span class="pl-smi"&gt;e&lt;/span&gt;|
    user_id &lt;span class="pl-k"&gt;=&lt;/span&gt; context.params[&lt;span class="pl-c1"&gt;:user_id&lt;/span&gt;]
    error!(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;error for &lt;span class="pl-pse"&gt;#{&lt;/span&gt;&lt;span class="pl-s1"&gt;user_id&lt;/span&gt;&lt;span class="pl-pse"&gt;}&lt;/span&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
  &lt;span class="pl-k"&gt;end&lt;/span&gt;
&lt;span class="pl-k"&gt;end&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h4&gt;&lt;a id="user-content-rescuing-exceptions-inside-namespaces" class="anchor" aria-hidden="true" href="#rescuing-exceptions-inside-namespaces"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Rescuing exceptions inside namespaces&lt;/h4&gt;
&lt;p&gt;You could put &lt;code&gt;rescue_from&lt;/code&gt; clauses inside a namespace and they will take precedence over ones
defined in the root scope:&lt;/p&gt;
&lt;div class="highlight highlight-source-ruby"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;class&lt;/span&gt; &lt;span class="pl-en"&gt;Twitter::API&lt;span class="pl-e"&gt; &amp;lt; Grape::API&lt;/span&gt;&lt;/span&gt;
  rescue_from &lt;span class="pl-c1"&gt;ArgumentError&lt;/span&gt; &lt;span class="pl-k"&gt;do&lt;/span&gt; |&lt;span class="pl-smi"&gt;e&lt;/span&gt;|
    error!(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;outer&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
  &lt;span class="pl-k"&gt;end&lt;/span&gt;

  namespace &lt;span class="pl-c1"&gt;:statuses&lt;/span&gt; &lt;span class="pl-k"&gt;do&lt;/span&gt;
    rescue_from &lt;span class="pl-c1"&gt;ArgumentError&lt;/span&gt; &lt;span class="pl-k"&gt;do&lt;/span&gt; |&lt;span class="pl-smi"&gt;e&lt;/span&gt;|
      error!(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;inner&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
    &lt;span class="pl-k"&gt;end&lt;/span&gt;
    get &lt;span class="pl-k"&gt;do&lt;/span&gt;
      &lt;span class="pl-k"&gt;raise&lt;/span&gt; &lt;span class="pl-c1"&gt;ArgumentError&lt;/span&gt;.&lt;span class="pl-k"&gt;new&lt;/span&gt;
    &lt;span class="pl-k"&gt;end&lt;/span&gt;
  &lt;span class="pl-k"&gt;end&lt;/span&gt;
&lt;span class="pl-k"&gt;end&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Here &lt;code&gt;'inner'&lt;/code&gt; will be result of handling occurred &lt;code&gt;ArgumentError&lt;/code&gt;.&lt;/p&gt;
&lt;h4&gt;&lt;a id="user-content-unrescuable-exceptions" class="anchor" aria-hidden="true" href="#unrescuable-exceptions"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Unrescuable Exceptions&lt;/h4&gt;
&lt;p&gt;&lt;code&gt;Grape::Exceptions::InvalidVersionHeader&lt;/code&gt;, which is raised when the version in the request header doesn't match the currently evaluated version for the endpoint, will &lt;em&gt;never&lt;/em&gt; be rescued from a &lt;code&gt;rescue_from&lt;/code&gt; block (even a &lt;code&gt;rescue_from :all&lt;/code&gt;) This is because Grape relies on Rack to catch that error and try the next versioned-route for cases where there exist identical Grape endpoints with different versions.&lt;/p&gt;
&lt;h4&gt;&lt;a id="user-content-exceptions-that-should-be-rescued-explicitly" class="anchor" aria-hidden="true" href="#exceptions-that-should-be-rescued-explicitly"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Exceptions that should be rescued explicitly&lt;/h4&gt;
&lt;p&gt;Any exception that is not subclass of &lt;code&gt;StandardError&lt;/code&gt; should be rescued explicitly.
Usually it is not a case for an application logic as such errors point to problems in Ruby runtime.
This is following &lt;a href="https://ruby-doc.org/core/Exception.html" rel="nofollow"&gt;standard recommendations for exceptions handling&lt;/a&gt;.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-rails-3x" class="anchor" aria-hidden="true" href="#rails-3x"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Rails 3.x&lt;/h3&gt;
&lt;p&gt;When mounted inside containers, such as Rails 3.x, errors such as "404 Not Found" or
"406 Not Acceptable" will likely be handled and rendered by Rails handlers. For instance,
accessing a nonexistent route "/api/foo" raises a 404, which inside rails will ultimately
be translated to an &lt;code&gt;ActionController::RoutingError&lt;/code&gt;, which most likely will get rendered
to a HTML error page.&lt;/p&gt;
&lt;p&gt;Most APIs will enjoy preventing downstream handlers from handling errors. You may set the
&lt;code&gt;:cascade&lt;/code&gt; option to &lt;code&gt;false&lt;/code&gt; for the entire API or separately on specific &lt;code&gt;version&lt;/code&gt; definitions,
which will remove the &lt;code&gt;X-Cascade: true&lt;/code&gt; header from API responses.&lt;/p&gt;
&lt;div class="highlight highlight-source-ruby"&gt;&lt;pre&gt;cascade &lt;span class="pl-c1"&gt;false&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;div class="highlight highlight-source-ruby"&gt;&lt;pre&gt;version &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;v1&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-c1"&gt;using:&lt;/span&gt; &lt;span class="pl-c1"&gt;:header&lt;/span&gt;, &lt;span class="pl-c1"&gt;vendor:&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;twitter&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-c1"&gt;cascade:&lt;/span&gt; &lt;span class="pl-c1"&gt;false&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h2&gt;&lt;a id="user-content-logging" class="anchor" aria-hidden="true" href="#logging"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Logging&lt;/h2&gt;
&lt;p&gt;&lt;code&gt;Grape::API&lt;/code&gt; provides a &lt;code&gt;logger&lt;/code&gt; method which by default will return an instance of the &lt;code&gt;Logger&lt;/code&gt;
class from Ruby's standard library.&lt;/p&gt;
&lt;p&gt;To log messages from within an endpoint, you need to define a helper to make the logger
available in the endpoint context.&lt;/p&gt;
&lt;div class="highlight highlight-source-ruby"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;class&lt;/span&gt; &lt;span class="pl-en"&gt;API&lt;span class="pl-e"&gt; &amp;lt; Grape::API&lt;/span&gt;&lt;/span&gt;
  helpers &lt;span class="pl-k"&gt;do&lt;/span&gt;
    &lt;span class="pl-k"&gt;def&lt;/span&gt; &lt;span class="pl-en"&gt;logger&lt;/span&gt;
      &lt;span class="pl-c1"&gt;API&lt;/span&gt;.logger
    &lt;span class="pl-k"&gt;end&lt;/span&gt;
  &lt;span class="pl-k"&gt;end&lt;/span&gt;
  post &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;/statuses&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt; &lt;span class="pl-k"&gt;do&lt;/span&gt;
    logger.info &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;span class="pl-pse"&gt;#{&lt;/span&gt;&lt;span class="pl-s1"&gt;current_user&lt;/span&gt;&lt;span class="pl-pse"&gt;}&lt;/span&gt; has statused&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;
  &lt;span class="pl-k"&gt;end&lt;/span&gt;
&lt;span class="pl-k"&gt;end&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;To change the logger level.&lt;/p&gt;
&lt;div class="highlight highlight-source-ruby"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;class&lt;/span&gt; &lt;span class="pl-en"&gt;API&lt;span class="pl-e"&gt; &amp;lt; Grape::API&lt;/span&gt;&lt;/span&gt;
  &lt;span class="pl-c1"&gt;self&lt;/span&gt;.logger.level &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;Logger&lt;/span&gt;::&lt;span class="pl-c1"&gt;INFO&lt;/span&gt;
&lt;span class="pl-k"&gt;end&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;You can also set your own logger.&lt;/p&gt;
&lt;div class="highlight highlight-source-ruby"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;class&lt;/span&gt; &lt;span class="pl-en"&gt;MyLogger&lt;/span&gt;
  &lt;span class="pl-k"&gt;def&lt;/span&gt; &lt;span class="pl-en"&gt;warning&lt;/span&gt;(&lt;span class="pl-smi"&gt;message&lt;/span&gt;)
    &lt;span class="pl-c1"&gt;puts&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;this is a warning: &lt;span class="pl-pse"&gt;#{&lt;/span&gt;&lt;span class="pl-s1"&gt;message&lt;/span&gt;&lt;span class="pl-pse"&gt;}&lt;/span&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;
  &lt;span class="pl-k"&gt;end&lt;/span&gt;
&lt;span class="pl-k"&gt;end&lt;/span&gt;

&lt;span class="pl-k"&gt;class&lt;/span&gt; &lt;span class="pl-en"&gt;API&lt;span class="pl-e"&gt; &amp;lt; Grape::API&lt;/span&gt;&lt;/span&gt;
  logger &lt;span class="pl-c1"&gt;MyLogger&lt;/span&gt;.&lt;span class="pl-k"&gt;new&lt;/span&gt;
  helpers &lt;span class="pl-k"&gt;do&lt;/span&gt;
    &lt;span class="pl-k"&gt;def&lt;/span&gt; &lt;span class="pl-en"&gt;logger&lt;/span&gt;
      &lt;span class="pl-c1"&gt;API&lt;/span&gt;.logger
    &lt;span class="pl-k"&gt;end&lt;/span&gt;
  &lt;span class="pl-k"&gt;end&lt;/span&gt;
  get &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;/statuses&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt; &lt;span class="pl-k"&gt;do&lt;/span&gt;
    logger.warning &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;span class="pl-pse"&gt;#{&lt;/span&gt;&lt;span class="pl-s1"&gt;current_user&lt;/span&gt;&lt;span class="pl-pse"&gt;}&lt;/span&gt; has statused&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;
  &lt;span class="pl-k"&gt;end&lt;/span&gt;
&lt;span class="pl-k"&gt;end&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;For similar to Rails request logging try the &lt;a href="https://github.com/aserafin/grape_logging"&gt;grape_logging&lt;/a&gt; or &lt;a href="https://github.com/ridiculous/grape-middleware-logger"&gt;grape-middleware-logger&lt;/a&gt; gems.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-api-formats" class="anchor" aria-hidden="true" href="#api-formats"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;API Formats&lt;/h2&gt;
&lt;p&gt;Your API can declare which content-types to support by using &lt;code&gt;content_type&lt;/code&gt;. If you do not specify any, Grape will support
&lt;em&gt;XML&lt;/em&gt;, &lt;em&gt;JSON&lt;/em&gt;, &lt;em&gt;BINARY&lt;/em&gt;, and &lt;em&gt;TXT&lt;/em&gt; content-types. The default format is &lt;code&gt;:txt&lt;/code&gt;; you can change this with &lt;code&gt;default_format&lt;/code&gt;.
Essentially, the two APIs below are equivalent.&lt;/p&gt;
&lt;div class="highlight highlight-source-ruby"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;class&lt;/span&gt; &lt;span class="pl-en"&gt;Twitter::API&lt;span class="pl-e"&gt; &amp;lt; Grape::API&lt;/span&gt;&lt;/span&gt;
  &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; no content_type declarations, so Grape uses the defaults&lt;/span&gt;
&lt;span class="pl-k"&gt;end&lt;/span&gt;

&lt;span class="pl-k"&gt;class&lt;/span&gt; &lt;span class="pl-en"&gt;Twitter::API&lt;span class="pl-e"&gt; &amp;lt; Grape::API&lt;/span&gt;&lt;/span&gt;
  &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; the following declarations are equivalent to the defaults&lt;/span&gt;

  content_type &lt;span class="pl-c1"&gt;:xml&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;application/xml&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;
  content_type &lt;span class="pl-c1"&gt;:json&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;application/json&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;
  content_type &lt;span class="pl-c1"&gt;:binary&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;application/octet-stream&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;
  content_type &lt;span class="pl-c1"&gt;:txt&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;text/plain&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;

  default_format &lt;span class="pl-c1"&gt;:txt&lt;/span&gt;
&lt;span class="pl-k"&gt;end&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;If you declare any &lt;code&gt;content_type&lt;/code&gt; whatsoever, the Grape defaults will be overridden. For example, the following API will only
support the &lt;code&gt;:xml&lt;/code&gt; and &lt;code&gt;:rss&lt;/code&gt; content-types, but not &lt;code&gt;:txt&lt;/code&gt;, &lt;code&gt;:json&lt;/code&gt;, or &lt;code&gt;:binary&lt;/code&gt;. Importantly, this means the &lt;code&gt;:txt&lt;/code&gt;
default format is not supported! So, make sure to set a new &lt;code&gt;default_format&lt;/code&gt;.&lt;/p&gt;
&lt;div class="highlight highlight-source-ruby"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;class&lt;/span&gt; &lt;span class="pl-en"&gt;Twitter::API&lt;span class="pl-e"&gt; &amp;lt; Grape::API&lt;/span&gt;&lt;/span&gt;
  content_type &lt;span class="pl-c1"&gt;:xml&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;application/xml&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;
  content_type &lt;span class="pl-c1"&gt;:rss&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;application/xml+rss&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;

  default_format &lt;span class="pl-c1"&gt;:xml&lt;/span&gt;
&lt;span class="pl-k"&gt;end&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Serialization takes place automatically. For example, you do not have to call &lt;code&gt;to_json&lt;/code&gt; in each JSON API endpoint
implementation. The response format (and thus the automatic serialization) is determined in the following order:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Use the file extension, if specified. If the file is .json, choose the JSON format.&lt;/li&gt;
&lt;li&gt;Use the value of the &lt;code&gt;format&lt;/code&gt; parameter in the query string, if specified.&lt;/li&gt;
&lt;li&gt;Use the format set by the &lt;code&gt;format&lt;/code&gt; option, if specified.&lt;/li&gt;
&lt;li&gt;Attempt to find an acceptable format from the &lt;code&gt;Accept&lt;/code&gt; header.&lt;/li&gt;
&lt;li&gt;Use the default format, if specified by the &lt;code&gt;default_format&lt;/code&gt; option.&lt;/li&gt;
&lt;li&gt;Default to &lt;code&gt;:txt&lt;/code&gt;.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;For example, consider the following API.&lt;/p&gt;
&lt;div class="highlight highlight-source-ruby"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;class&lt;/span&gt; &lt;span class="pl-en"&gt;MultipleFormatAPI&lt;span class="pl-e"&gt; &amp;lt; Grape::API&lt;/span&gt;&lt;/span&gt;
  content_type &lt;span class="pl-c1"&gt;:xml&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;application/xml&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;
  content_type &lt;span class="pl-c1"&gt;:json&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;application/json&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;

  default_format &lt;span class="pl-c1"&gt;:json&lt;/span&gt;

  get &lt;span class="pl-c1"&gt;:hello&lt;/span&gt; &lt;span class="pl-k"&gt;do&lt;/span&gt;
    { &lt;span class="pl-c1"&gt;hello:&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;world&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt; }
  &lt;span class="pl-k"&gt;end&lt;/span&gt;
&lt;span class="pl-k"&gt;end&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;GET /hello&lt;/code&gt; (with an &lt;code&gt;Accept: */*&lt;/code&gt; header) does not have an extension or a &lt;code&gt;format&lt;/code&gt; parameter, so it will respond with
JSON (the default format).&lt;/li&gt;
&lt;li&gt;&lt;code&gt;GET /hello.xml&lt;/code&gt; has a recognized extension, so it will respond with XML.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;GET /hello?format=xml&lt;/code&gt; has a recognized &lt;code&gt;format&lt;/code&gt; parameter, so it will respond with XML.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;GET /hello.xml?format=json&lt;/code&gt; has a recognized extension (which takes precedence over the &lt;code&gt;format&lt;/code&gt; parameter), so it will
respond with XML.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;GET /hello.xls&lt;/code&gt; (with an &lt;code&gt;Accept: */*&lt;/code&gt; header) has an extension, but that extension is not recognized, so it will respond
with JSON (the default format).&lt;/li&gt;
&lt;li&gt;&lt;code&gt;GET /hello.xls&lt;/code&gt; with an &lt;code&gt;Accept: application/xml&lt;/code&gt; header has an unrecognized extension, but the &lt;code&gt;Accept&lt;/code&gt; header
corresponds to a recognized format, so it will respond with XML.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;GET /hello.xls&lt;/code&gt; with an &lt;code&gt;Accept: text/plain&lt;/code&gt; header has an unrecognized extension &lt;em&gt;and&lt;/em&gt; an unrecognized &lt;code&gt;Accept&lt;/code&gt; header,
so it will respond with JSON (the default format).&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;You can override this process explicitly by specifying &lt;code&gt;env['api.format']&lt;/code&gt; in the API itself.
For example, the following API will let you upload arbitrary files and return their contents as an attachment with the correct MIME type.&lt;/p&gt;
&lt;div class="highlight highlight-source-ruby"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;class&lt;/span&gt; &lt;span class="pl-en"&gt;Twitter::API&lt;span class="pl-e"&gt; &amp;lt; Grape::API&lt;/span&gt;&lt;/span&gt;
  post &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;attachment&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt; &lt;span class="pl-k"&gt;do&lt;/span&gt;
    filename &lt;span class="pl-k"&gt;=&lt;/span&gt; params[&lt;span class="pl-c1"&gt;:file&lt;/span&gt;][&lt;span class="pl-c1"&gt;:filename&lt;/span&gt;]
    content_type &lt;span class="pl-c1"&gt;MIME&lt;/span&gt;::&lt;span class="pl-c1"&gt;Types&lt;/span&gt;.type_for(filename)[&lt;span class="pl-c1"&gt;0&lt;/span&gt;].to_s
    env[&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;api.format&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;] &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;:binary&lt;/span&gt; &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; there's no formatter for :binary, data will be returned "as is"&lt;/span&gt;
    header &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;Content-Disposition&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;attachment; filename*=UTF-8''&lt;span class="pl-pse"&gt;#{&lt;/span&gt;&lt;span class="pl-s1"&gt;&lt;span class="pl-c1"&gt;CGI&lt;/span&gt;.escape(filename)&lt;/span&gt;&lt;span class="pl-pse"&gt;}&lt;/span&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;
    params[&lt;span class="pl-c1"&gt;:file&lt;/span&gt;][&lt;span class="pl-c1"&gt;:tempfile&lt;/span&gt;].read
  &lt;span class="pl-k"&gt;end&lt;/span&gt;
&lt;span class="pl-k"&gt;end&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;You can have your API only respond to a single format with &lt;code&gt;format&lt;/code&gt;. If you use this, the API will &lt;strong&gt;not&lt;/strong&gt; respond to file
extensions other than specified in &lt;code&gt;format&lt;/code&gt;. For example, consider the following API.&lt;/p&gt;
&lt;div class="highlight highlight-source-ruby"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;class&lt;/span&gt; &lt;span class="pl-en"&gt;SingleFormatAPI&lt;span class="pl-e"&gt; &amp;lt; Grape::API&lt;/span&gt;&lt;/span&gt;
  &lt;span class="pl-c1"&gt;format&lt;/span&gt; &lt;span class="pl-c1"&gt;:json&lt;/span&gt;

  get &lt;span class="pl-c1"&gt;:hello&lt;/span&gt; &lt;span class="pl-k"&gt;do&lt;/span&gt;
    { &lt;span class="pl-c1"&gt;hello:&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;world&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt; }
  &lt;span class="pl-k"&gt;end&lt;/span&gt;
&lt;span class="pl-k"&gt;end&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;GET /hello&lt;/code&gt; will respond with JSON.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;GET /hello.json&lt;/code&gt; will respond with JSON.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;GET /hello.xml&lt;/code&gt;, &lt;code&gt;GET /hello.foobar&lt;/code&gt;, or &lt;em&gt;any&lt;/em&gt; other extension will respond with an HTTP 404 error code.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;GET /hello?format=xml&lt;/code&gt; will respond with an HTTP 406 error code, because the XML format specified by the request parameter
is not supported.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;GET /hello&lt;/code&gt; with an &lt;code&gt;Accept: application/xml&lt;/code&gt; header will still respond with JSON, since it could not negotiate a
recognized content-type from the headers and JSON is the effective default.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;The formats apply to parsing, too. The following API will only respond to the JSON content-type and will not parse any other
input than &lt;code&gt;application/json&lt;/code&gt;, &lt;code&gt;application/x-www-form-urlencoded&lt;/code&gt;, &lt;code&gt;multipart/form-data&lt;/code&gt;, &lt;code&gt;multipart/related&lt;/code&gt; and
&lt;code&gt;multipart/mixed&lt;/code&gt;. All other requests will fail with an HTTP 406 error code.&lt;/p&gt;
&lt;div class="highlight highlight-source-ruby"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;class&lt;/span&gt; &lt;span class="pl-en"&gt;Twitter::API&lt;span class="pl-e"&gt; &amp;lt; Grape::API&lt;/span&gt;&lt;/span&gt;
  &lt;span class="pl-c1"&gt;format&lt;/span&gt; &lt;span class="pl-c1"&gt;:json&lt;/span&gt;
&lt;span class="pl-k"&gt;end&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;When the content-type is omitted, Grape will return a 406 error code unless &lt;code&gt;default_format&lt;/code&gt; is specified.
The following API will try to parse any data without a content-type using a JSON parser.&lt;/p&gt;
&lt;div class="highlight highlight-source-ruby"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;class&lt;/span&gt; &lt;span class="pl-en"&gt;Twitter::API&lt;span class="pl-e"&gt; &amp;lt; Grape::API&lt;/span&gt;&lt;/span&gt;
  &lt;span class="pl-c1"&gt;format&lt;/span&gt; &lt;span class="pl-c1"&gt;:json&lt;/span&gt;
  default_format &lt;span class="pl-c1"&gt;:json&lt;/span&gt;
&lt;span class="pl-k"&gt;end&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;If you combine &lt;code&gt;format&lt;/code&gt; with &lt;code&gt;rescue_from :all&lt;/code&gt;, errors will be rendered using the same format.
If you do not want this behavior, set the default error formatter with &lt;code&gt;default_error_formatter&lt;/code&gt;.&lt;/p&gt;
&lt;div class="highlight highlight-source-ruby"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;class&lt;/span&gt; &lt;span class="pl-en"&gt;Twitter::API&lt;span class="pl-e"&gt; &amp;lt; Grape::API&lt;/span&gt;&lt;/span&gt;
  &lt;span class="pl-c1"&gt;format&lt;/span&gt; &lt;span class="pl-c1"&gt;:json&lt;/span&gt;
  content_type &lt;span class="pl-c1"&gt;:txt&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;text/plain&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;
  default_error_formatter &lt;span class="pl-c1"&gt;:txt&lt;/span&gt;
&lt;span class="pl-k"&gt;end&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Custom formatters for existing and additional types can be defined with a proc.&lt;/p&gt;
&lt;div class="highlight highlight-source-ruby"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;class&lt;/span&gt; &lt;span class="pl-en"&gt;Twitter::API&lt;span class="pl-e"&gt; &amp;lt; Grape::API&lt;/span&gt;&lt;/span&gt;
  content_type &lt;span class="pl-c1"&gt;:xls&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;application/vnd.ms-excel&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;
  formatter &lt;span class="pl-c1"&gt;:xls&lt;/span&gt;, &lt;span class="pl-c1"&gt;-&amp;gt;&lt;/span&gt;(object, env) { object.to_xls }
&lt;span class="pl-k"&gt;end&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;You can also use a module or class.&lt;/p&gt;
&lt;div class="highlight highlight-source-ruby"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;module&lt;/span&gt; &lt;span class="pl-en"&gt;XlsFormatter&lt;/span&gt;
  &lt;span class="pl-k"&gt;def&lt;/span&gt; &lt;span class="pl-en"&gt;self.call&lt;/span&gt;(&lt;span class="pl-smi"&gt;object&lt;/span&gt;, &lt;span class="pl-smi"&gt;env&lt;/span&gt;)
    object.to_xls
  &lt;span class="pl-k"&gt;end&lt;/span&gt;
&lt;span class="pl-k"&gt;end&lt;/span&gt;

&lt;span class="pl-k"&gt;class&lt;/span&gt; &lt;span class="pl-en"&gt;Twitter::API&lt;span class="pl-e"&gt; &amp;lt; Grape::API&lt;/span&gt;&lt;/span&gt;
  content_type &lt;span class="pl-c1"&gt;:xls&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;application/vnd.ms-excel&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;
  formatter &lt;span class="pl-c1"&gt;:xls&lt;/span&gt;, &lt;span class="pl-c1"&gt;XlsFormatter&lt;/span&gt;
&lt;span class="pl-k"&gt;end&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Built-in formatters are the following.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;:json&lt;/code&gt;: use object's &lt;code&gt;to_json&lt;/code&gt; when available, otherwise call &lt;code&gt;MultiJson.dump&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;:xml&lt;/code&gt;: use object's &lt;code&gt;to_xml&lt;/code&gt; when available, usually via &lt;code&gt;MultiXml&lt;/code&gt;, otherwise call &lt;code&gt;to_s&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;:txt&lt;/code&gt;: use object's &lt;code&gt;to_txt&lt;/code&gt; when available, otherwise &lt;code&gt;to_s&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;:serializable_hash&lt;/code&gt;: use object's &lt;code&gt;serializable_hash&lt;/code&gt; when available, otherwise fallback to &lt;code&gt;:json&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;:binary&lt;/code&gt;: data will be returned "as is"&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;If a body is present in a request to an API, with a Content-Type header value that is of an unsupported type a
"415 Unsupported Media Type" error code will be returned by Grape.&lt;/p&gt;
&lt;p&gt;Response statuses that indicate no content as defined by &lt;a href="https://github.com/rack"&gt;Rack&lt;/a&gt;
&lt;a href="https://github.com/rack/rack/blob/master/lib/rack/utils.rb#L567"&gt;here&lt;/a&gt;
will bypass serialization and the body entity - though there should be none -
will not be modified.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-jsonp" class="anchor" aria-hidden="true" href="#jsonp"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;JSONP&lt;/h3&gt;
&lt;p&gt;Grape supports JSONP via &lt;a href="https://github.com/rack/rack-contrib"&gt;Rack::JSONP&lt;/a&gt;, part of the
&lt;a href="https://github.com/rack/rack-contrib"&gt;rack-contrib&lt;/a&gt; gem. Add &lt;code&gt;rack-contrib&lt;/code&gt; to your &lt;code&gt;Gemfile&lt;/code&gt;.&lt;/p&gt;
&lt;div class="highlight highlight-source-ruby"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;require&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;rack/contrib&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;

&lt;span class="pl-k"&gt;class&lt;/span&gt; &lt;span class="pl-en"&gt;API&lt;span class="pl-e"&gt; &amp;lt; Grape::API&lt;/span&gt;&lt;/span&gt;
  use &lt;span class="pl-c1"&gt;Rack&lt;/span&gt;::&lt;span class="pl-c1"&gt;JSONP&lt;/span&gt;
  &lt;span class="pl-c1"&gt;format&lt;/span&gt; &lt;span class="pl-c1"&gt;:json&lt;/span&gt;
  get &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;/&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt; &lt;span class="pl-k"&gt;do&lt;/span&gt;
    &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;Hello World&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;
  &lt;span class="pl-k"&gt;end&lt;/span&gt;
&lt;span class="pl-k"&gt;end&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h3&gt;&lt;a id="user-content-cors" class="anchor" aria-hidden="true" href="#cors"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;CORS&lt;/h3&gt;
&lt;p&gt;Grape supports CORS via &lt;a href="https://github.com/cyu/rack-cors"&gt;Rack::CORS&lt;/a&gt;, part of the
&lt;a href="https://github.com/cyu/rack-cors"&gt;rack-cors&lt;/a&gt; gem. Add &lt;code&gt;rack-cors&lt;/code&gt; to your &lt;code&gt;Gemfile&lt;/code&gt;,
then use the middleware in your config.ru file.&lt;/p&gt;
&lt;div class="highlight highlight-source-ruby"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;require&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;rack/cors&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;

use &lt;span class="pl-c1"&gt;Rack&lt;/span&gt;::&lt;span class="pl-c1"&gt;Cors&lt;/span&gt; &lt;span class="pl-k"&gt;do&lt;/span&gt;
  allow &lt;span class="pl-k"&gt;do&lt;/span&gt;
    origins &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;*&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;
    resource &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;*&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-c1"&gt;headers:&lt;/span&gt; &lt;span class="pl-c1"&gt;:any&lt;/span&gt;, &lt;span class="pl-c1"&gt;methods:&lt;/span&gt; &lt;span class="pl-c1"&gt;:get&lt;/span&gt;
  &lt;span class="pl-k"&gt;end&lt;/span&gt;
&lt;span class="pl-k"&gt;end&lt;/span&gt;

run &lt;span class="pl-c1"&gt;Twitter&lt;/span&gt;::&lt;span class="pl-c1"&gt;API&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;h2&gt;&lt;a id="user-content-content-type" class="anchor" aria-hidden="true" href="#content-type"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Content-type&lt;/h2&gt;
&lt;p&gt;Content-type is set by the formatter. You can override the content-type of the response at runtime
by setting the &lt;code&gt;Content-Type&lt;/code&gt; header.&lt;/p&gt;
&lt;div class="highlight highlight-source-ruby"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;class&lt;/span&gt; &lt;span class="pl-en"&gt;API&lt;span class="pl-e"&gt; &amp;lt; Grape::API&lt;/span&gt;&lt;/span&gt;
  get &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;/home_timeline_js&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt; &lt;span class="pl-k"&gt;do&lt;/span&gt;
    content_type &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;application/javascript&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;
    &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;var statuses = ...;&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;
  &lt;span class="pl-k"&gt;end&lt;/span&gt;
&lt;span class="pl-k"&gt;end&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h2&gt;&lt;a id="user-content-api-data-formats" class="anchor" aria-hidden="true" href="#api-data-formats"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;API Data Formats&lt;/h2&gt;
&lt;p&gt;Grape accepts and parses input data sent with the POST and PUT methods as described in the Parameters
section above. It also supports custom data formats. You must declare additional content-types via
&lt;code&gt;content_type&lt;/code&gt; and optionally supply a parser via &lt;code&gt;parser&lt;/code&gt; unless a parser is already available within
Grape to enable a custom format. Such a parser can be a function or a class.&lt;/p&gt;
&lt;p&gt;With a parser, parsed data is available "as-is" in &lt;code&gt;env['api.request.body']&lt;/code&gt;.
Without a parser, data is available "as-is" and in &lt;code&gt;env['api.request.input']&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;The following example is a trivial parser that will assign any input with the "text/custom" content-type
to &lt;code&gt;:value&lt;/code&gt;. The parameter will be available via &lt;code&gt;params[:value]&lt;/code&gt; inside the API call.&lt;/p&gt;
&lt;div class="highlight highlight-source-ruby"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;module&lt;/span&gt; &lt;span class="pl-en"&gt;CustomParser&lt;/span&gt;
  &lt;span class="pl-k"&gt;def&lt;/span&gt; &lt;span class="pl-en"&gt;self.call&lt;/span&gt;(&lt;span class="pl-smi"&gt;object&lt;/span&gt;, &lt;span class="pl-smi"&gt;env&lt;/span&gt;)
    { &lt;span class="pl-c1"&gt;value:&lt;/span&gt; object.to_s }
  &lt;span class="pl-k"&gt;end&lt;/span&gt;
&lt;span class="pl-k"&gt;end&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;div class="highlight highlight-source-ruby"&gt;&lt;pre&gt;content_type &lt;span class="pl-c1"&gt;:txt&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;text/plain&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;
content_type &lt;span class="pl-c1"&gt;:custom&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;text/custom&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;
parser &lt;span class="pl-c1"&gt;:custom&lt;/span&gt;, &lt;span class="pl-c1"&gt;CustomParser&lt;/span&gt;

put &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;value&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt; &lt;span class="pl-k"&gt;do&lt;/span&gt;
  params[&lt;span class="pl-c1"&gt;:value&lt;/span&gt;]
&lt;span class="pl-k"&gt;end&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;You can invoke the above API as follows.&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;curl -X PUT -d 'data' 'http://localhost:9292/value' -H Content-Type:text/custom -v
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;You can disable parsing for a content-type with &lt;code&gt;nil&lt;/code&gt;. For example, &lt;code&gt;parser :json, nil&lt;/code&gt; will disable JSON parsing altogether. The request data is then available as-is in &lt;code&gt;env['api.request.body']&lt;/code&gt;.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-json-and-xml-processors" class="anchor" aria-hidden="true" href="#json-and-xml-processors"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;JSON and XML Processors&lt;/h2&gt;
&lt;p&gt;Grape uses &lt;code&gt;JSON&lt;/code&gt; and &lt;code&gt;ActiveSupport::XmlMini&lt;/code&gt; for JSON and XML parsing by default. It also detects and supports &lt;a href="https://github.com/intridea/multi_json"&gt;multi_json&lt;/a&gt; and &lt;a href="https://github.com/sferik/multi_xml"&gt;multi_xml&lt;/a&gt;. Adding those gems to your Gemfile and requiring them will enable them and allow you to swap the JSON and XML back-ends.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-restful-model-representations" class="anchor" aria-hidden="true" href="#restful-model-representations"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;RESTful Model Representations&lt;/h2&gt;
&lt;p&gt;Grape supports a range of ways to present your data with some help from a generic &lt;code&gt;present&lt;/code&gt; method,
which accepts two arguments: the object to be presented and the options associated with it. The options
hash may include &lt;code&gt;:with&lt;/code&gt;, which defines the entity to expose.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-grape-entities" class="anchor" aria-hidden="true" href="#grape-entities"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Grape Entities&lt;/h3&gt;
&lt;p&gt;Add the &lt;a href="https://github.com/ruby-grape/grape-entity"&gt;grape-entity&lt;/a&gt; gem to your Gemfile.
Please refer to the &lt;a href="https://github.com/ruby-grape/grape-entity/blob/master/README.md"&gt;grape-entity documentation&lt;/a&gt;
for more details.&lt;/p&gt;
&lt;p&gt;The following example exposes statuses.&lt;/p&gt;
&lt;div class="highlight highlight-source-ruby"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;module&lt;/span&gt; &lt;span class="pl-en"&gt;API&lt;/span&gt;
  &lt;span class="pl-k"&gt;module&lt;/span&gt; &lt;span class="pl-en"&gt;Entities&lt;/span&gt;
    &lt;span class="pl-k"&gt;class&lt;/span&gt; &lt;span class="pl-en"&gt;Status&lt;span class="pl-e"&gt; &amp;lt; Grape::Entity&lt;/span&gt;&lt;/span&gt;
      expose &lt;span class="pl-c1"&gt;:user_name&lt;/span&gt;
      expose &lt;span class="pl-c1"&gt;:text&lt;/span&gt;, &lt;span class="pl-c1"&gt;documentation:&lt;/span&gt; { &lt;span class="pl-c1"&gt;type:&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;string&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-c1"&gt;desc:&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;Status update text.&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt; }
      expose &lt;span class="pl-c1"&gt;:ip&lt;/span&gt;, &lt;span class="pl-c1"&gt;if:&lt;/span&gt; { &lt;span class="pl-c1"&gt;type:&lt;/span&gt; &lt;span class="pl-c1"&gt;:full&lt;/span&gt; }
      expose &lt;span class="pl-c1"&gt;:user_type&lt;/span&gt;, &lt;span class="pl-c1"&gt;:user_id&lt;/span&gt;, &lt;span class="pl-c1"&gt;if:&lt;/span&gt; &lt;span class="pl-c1"&gt;-&amp;gt;&lt;/span&gt;(status, options) { status.user.public? }
      expose &lt;span class="pl-c1"&gt;:digest&lt;/span&gt; &lt;span class="pl-k"&gt;do&lt;/span&gt; |&lt;span class="pl-smi"&gt;status&lt;/span&gt;, &lt;span class="pl-smi"&gt;options&lt;/span&gt;|
        &lt;span class="pl-c1"&gt;Digest&lt;/span&gt;::&lt;span class="pl-c1"&gt;MD5&lt;/span&gt;.hexdigest(status.txt)
      &lt;span class="pl-k"&gt;end&lt;/span&gt;
      expose &lt;span class="pl-c1"&gt;:replies&lt;/span&gt;, &lt;span class="pl-c1"&gt;using:&lt;/span&gt; &lt;span class="pl-c1"&gt;API&lt;/span&gt;::&lt;span class="pl-c1"&gt;Status&lt;/span&gt;, &lt;span class="pl-c1"&gt;as:&lt;/span&gt; &lt;span class="pl-c1"&gt;:replies&lt;/span&gt;
    &lt;span class="pl-k"&gt;end&lt;/span&gt;
  &lt;span class="pl-k"&gt;end&lt;/span&gt;

  &lt;span class="pl-k"&gt;class&lt;/span&gt; &lt;span class="pl-en"&gt;Statuses&lt;span class="pl-e"&gt; &amp;lt; Grape::API&lt;/span&gt;&lt;/span&gt;
    version &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;v1&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;

    desc &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;Statuses index&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt; &lt;span class="pl-k"&gt;do&lt;/span&gt;
      &lt;span class="pl-c1"&gt;params:&lt;/span&gt; &lt;span class="pl-c1"&gt;API&lt;/span&gt;::&lt;span class="pl-c1"&gt;Entities&lt;/span&gt;::&lt;span class="pl-c1"&gt;Status&lt;/span&gt;.documentation
    &lt;span class="pl-k"&gt;end&lt;/span&gt;
    get &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;/statuses&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt; &lt;span class="pl-k"&gt;do&lt;/span&gt;
      statuses &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;Status&lt;/span&gt;.all
      type &lt;span class="pl-k"&gt;=&lt;/span&gt; current_user.admin? &lt;span class="pl-k"&gt;?&lt;/span&gt; &lt;span class="pl-c1"&gt;:full&lt;/span&gt; : &lt;span class="pl-c1"&gt;:default&lt;/span&gt;
      present statuses, &lt;span class="pl-c1"&gt;with:&lt;/span&gt; &lt;span class="pl-c1"&gt;API&lt;/span&gt;::&lt;span class="pl-c1"&gt;Entities&lt;/span&gt;::&lt;span class="pl-c1"&gt;Status&lt;/span&gt;, &lt;span class="pl-c1"&gt;type:&lt;/span&gt; type
    &lt;span class="pl-k"&gt;end&lt;/span&gt;
  &lt;span class="pl-k"&gt;end&lt;/span&gt;
&lt;span class="pl-k"&gt;end&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;You can use entity documentation directly in the params block with &lt;code&gt;using: Entity.documentation&lt;/code&gt;.&lt;/p&gt;
&lt;div class="highlight highlight-source-ruby"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;module&lt;/span&gt; &lt;span class="pl-en"&gt;API&lt;/span&gt;
  &lt;span class="pl-k"&gt;class&lt;/span&gt; &lt;span class="pl-en"&gt;Statuses&lt;span class="pl-e"&gt; &amp;lt; Grape::API&lt;/span&gt;&lt;/span&gt;
    version &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;v1&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;

    desc &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;Create a status&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;
    params &lt;span class="pl-k"&gt;do&lt;/span&gt;
      requires &lt;span class="pl-c1"&gt;:all&lt;/span&gt;, &lt;span class="pl-c1"&gt;except:&lt;/span&gt; [&lt;span class="pl-c1"&gt;:ip&lt;/span&gt;], &lt;span class="pl-c1"&gt;using:&lt;/span&gt; &lt;span class="pl-c1"&gt;API&lt;/span&gt;::&lt;span class="pl-c1"&gt;Entities&lt;/span&gt;::&lt;span class="pl-c1"&gt;Status&lt;/span&gt;.documentation.except(&lt;span class="pl-c1"&gt;:id&lt;/span&gt;)
    &lt;span class="pl-k"&gt;end&lt;/span&gt;
    post &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;/status&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt; &lt;span class="pl-k"&gt;do&lt;/span&gt;
      &lt;span class="pl-c1"&gt;Status&lt;/span&gt;.create! params
    &lt;span class="pl-k"&gt;end&lt;/span&gt;
  &lt;span class="pl-k"&gt;end&lt;/span&gt;
&lt;span class="pl-k"&gt;end&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;You can present with multiple entities using an optional Symbol argument.&lt;/p&gt;
&lt;div class="highlight highlight-source-ruby"&gt;&lt;pre&gt;  get &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;/statuses&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt; &lt;span class="pl-k"&gt;do&lt;/span&gt;
    statuses &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;Status&lt;/span&gt;.all.page(&lt;span class="pl-c1"&gt;1&lt;/span&gt;).per(&lt;span class="pl-c1"&gt;20&lt;/span&gt;)
    present &lt;span class="pl-c1"&gt;:total_page&lt;/span&gt;, &lt;span class="pl-c1"&gt;10&lt;/span&gt;
    present &lt;span class="pl-c1"&gt;:per_page&lt;/span&gt;, &lt;span class="pl-c1"&gt;20&lt;/span&gt;
    present &lt;span class="pl-c1"&gt;:statuses&lt;/span&gt;, statuses, &lt;span class="pl-c1"&gt;with:&lt;/span&gt; &lt;span class="pl-c1"&gt;API&lt;/span&gt;::&lt;span class="pl-c1"&gt;Entities&lt;/span&gt;::&lt;span class="pl-c1"&gt;Status&lt;/span&gt;
  &lt;span class="pl-k"&gt;end&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;The response will be&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;  {
    total_page: 10,
    per_page: 20,
    statuses: []
  }
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;In addition to separately organizing entities, it may be useful to put them as namespaced
classes underneath the model they represent.&lt;/p&gt;
&lt;div class="highlight highlight-source-ruby"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;class&lt;/span&gt; &lt;span class="pl-en"&gt;Status&lt;/span&gt;
  &lt;span class="pl-k"&gt;def&lt;/span&gt; &lt;span class="pl-en"&gt;entity&lt;/span&gt;
    &lt;span class="pl-c1"&gt;Entity&lt;/span&gt;.&lt;span class="pl-k"&gt;new&lt;/span&gt;(&lt;span class="pl-c1"&gt;self&lt;/span&gt;)
  &lt;span class="pl-k"&gt;end&lt;/span&gt;

  &lt;span class="pl-k"&gt;class&lt;/span&gt; &lt;span class="pl-en"&gt;Entity&lt;span class="pl-e"&gt; &amp;lt; Grape::Entity&lt;/span&gt;&lt;/span&gt;
    expose &lt;span class="pl-c1"&gt;:text&lt;/span&gt;, &lt;span class="pl-c1"&gt;:user_id&lt;/span&gt;
  &lt;span class="pl-k"&gt;end&lt;/span&gt;
&lt;span class="pl-k"&gt;end&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;If you organize your entities this way, Grape will automatically detect the &lt;code&gt;Entity&lt;/code&gt; class and
use it to present your models. In this example, if you added &lt;code&gt;present Status.new&lt;/code&gt; to your endpoint,
Grape will automatically detect that there is a &lt;code&gt;Status::Entity&lt;/code&gt; class and use that as the
representative entity. This can still be overridden by using the &lt;code&gt;:with&lt;/code&gt; option or an explicit
&lt;code&gt;represents&lt;/code&gt; call.&lt;/p&gt;
&lt;p&gt;You can present &lt;code&gt;hash&lt;/code&gt; with &lt;code&gt;Grape::Presenters::Presenter&lt;/code&gt; to keep things consistent.&lt;/p&gt;
&lt;div class="highlight highlight-source-ruby"&gt;&lt;pre&gt;get &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;/users&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt; &lt;span class="pl-k"&gt;do&lt;/span&gt;
  present { &lt;span class="pl-c1"&gt;id:&lt;/span&gt; &lt;span class="pl-c1"&gt;10&lt;/span&gt;, &lt;span class="pl-c1"&gt;name:&lt;/span&gt; &lt;span class="pl-c1"&gt;:dgz&lt;/span&gt; }, &lt;span class="pl-c1"&gt;with:&lt;/span&gt; &lt;span class="pl-c1"&gt;Grape&lt;/span&gt;::&lt;span class="pl-c1"&gt;Presenters&lt;/span&gt;::&lt;span class="pl-c1"&gt;Presenter&lt;/span&gt;
&lt;span class="pl-k"&gt;end&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;The response will be&lt;/p&gt;
&lt;div class="highlight highlight-source-ruby"&gt;&lt;pre&gt;{
  &lt;span class="pl-c1"&gt;id:&lt;/span&gt;   &lt;span class="pl-c1"&gt;10&lt;/span&gt;,
  &lt;span class="pl-c1"&gt;name:&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;dgz&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;
}&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;It has the same result with&lt;/p&gt;
&lt;div class="highlight highlight-source-ruby"&gt;&lt;pre&gt;get &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;/users&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt; &lt;span class="pl-k"&gt;do&lt;/span&gt;
  present &lt;span class="pl-c1"&gt;:id&lt;/span&gt;, &lt;span class="pl-c1"&gt;10&lt;/span&gt;
  present &lt;span class="pl-c1"&gt;:name&lt;/span&gt;, &lt;span class="pl-c1"&gt;:dgz&lt;/span&gt;
&lt;span class="pl-k"&gt;end&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h3&gt;&lt;a id="user-content-hypermedia-and-roar" class="anchor" aria-hidden="true" href="#hypermedia-and-roar"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Hypermedia and Roar&lt;/h3&gt;
&lt;p&gt;You can use &lt;a href="https://github.com/apotonick/roar"&gt;Roar&lt;/a&gt; to render HAL or Collection+JSON with the help of &lt;a href="https://github.com/ruby-grape/grape-roar"&gt;grape-roar&lt;/a&gt;, which defines a custom JSON formatter and enables presenting entities with Grape's &lt;code&gt;present&lt;/code&gt; keyword.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-rabl" class="anchor" aria-hidden="true" href="#rabl"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Rabl&lt;/h3&gt;
&lt;p&gt;You can use &lt;a href="https://github.com/nesquena/rabl"&gt;Rabl&lt;/a&gt; templates with the help of the
&lt;a href="https://github.com/ruby-grape/grape-rabl"&gt;grape-rabl&lt;/a&gt; gem, which defines a custom Grape Rabl
formatter.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-active-model-serializers" class="anchor" aria-hidden="true" href="#active-model-serializers"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Active Model Serializers&lt;/h3&gt;
&lt;p&gt;You can use &lt;a href="https://github.com/rails-api/active_model_serializers"&gt;Active Model Serializers&lt;/a&gt; serializers with the help of the
&lt;a href="https://github.com/jrhe/grape-active_model_serializers"&gt;grape-active_model_serializers&lt;/a&gt; gem, which defines a custom Grape AMS
formatter.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-sending-raw-or-no-data" class="anchor" aria-hidden="true" href="#sending-raw-or-no-data"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Sending Raw or No Data&lt;/h2&gt;
&lt;p&gt;In general, use the binary format to send raw data.&lt;/p&gt;
&lt;div class="highlight highlight-source-ruby"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;class&lt;/span&gt; &lt;span class="pl-en"&gt;API&lt;span class="pl-e"&gt; &amp;lt; Grape::API&lt;/span&gt;&lt;/span&gt;
  get &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;/file&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt; &lt;span class="pl-k"&gt;do&lt;/span&gt;
    content_type &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;application/octet-stream&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;
    &lt;span class="pl-c1"&gt;File&lt;/span&gt;.binread &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;file.bin&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;
  &lt;span class="pl-k"&gt;end&lt;/span&gt;
&lt;span class="pl-k"&gt;end&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;You can set the response body explicitly with &lt;code&gt;body&lt;/code&gt;.&lt;/p&gt;
&lt;div class="highlight highlight-source-ruby"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;class&lt;/span&gt; &lt;span class="pl-en"&gt;API&lt;span class="pl-e"&gt; &amp;lt; Grape::API&lt;/span&gt;&lt;/span&gt;
  get &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;/&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt; &lt;span class="pl-k"&gt;do&lt;/span&gt;
    content_type &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;text/plain&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;
    body &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;Hello World&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;
    &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; return value ignored&lt;/span&gt;
  &lt;span class="pl-k"&gt;end&lt;/span&gt;
&lt;span class="pl-k"&gt;end&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Use &lt;code&gt;body false&lt;/code&gt; to return &lt;code&gt;204 No Content&lt;/code&gt; without any data or content-type.&lt;/p&gt;
&lt;p&gt;You can also set the response to a file with &lt;code&gt;file&lt;/code&gt;.&lt;/p&gt;
&lt;div class="highlight highlight-source-ruby"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;class&lt;/span&gt; &lt;span class="pl-en"&gt;API&lt;span class="pl-e"&gt; &amp;lt; Grape::API&lt;/span&gt;&lt;/span&gt;
  get &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;/&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt; &lt;span class="pl-k"&gt;do&lt;/span&gt;
    file &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;/path/to/file&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;
  &lt;span class="pl-k"&gt;end&lt;/span&gt;
&lt;span class="pl-k"&gt;end&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;If you want a file to be streamed using Rack::Chunked, use &lt;code&gt;stream&lt;/code&gt;.&lt;/p&gt;
&lt;div class="highlight highlight-source-ruby"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;class&lt;/span&gt; &lt;span class="pl-en"&gt;API&lt;span class="pl-e"&gt; &amp;lt; Grape::API&lt;/span&gt;&lt;/span&gt;
  get &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;/&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt; &lt;span class="pl-k"&gt;do&lt;/span&gt;
    stream &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;/path/to/file&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;
  &lt;span class="pl-k"&gt;end&lt;/span&gt;
&lt;span class="pl-k"&gt;end&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h2&gt;&lt;a id="user-content-authentication" class="anchor" aria-hidden="true" href="#authentication"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Authentication&lt;/h2&gt;
&lt;h3&gt;&lt;a id="user-content-basic-and-digest-auth" class="anchor" aria-hidden="true" href="#basic-and-digest-auth"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Basic and Digest Auth&lt;/h3&gt;
&lt;p&gt;Grape has built-in Basic and Digest authentication (the given &lt;code&gt;block&lt;/code&gt;
is executed in the context of the current &lt;code&gt;Endpoint&lt;/code&gt;).  Authentication
applies to the current namespace and any children, but not parents.&lt;/p&gt;
&lt;div class="highlight highlight-source-ruby"&gt;&lt;pre&gt;http_basic &lt;span class="pl-k"&gt;do&lt;/span&gt; |&lt;span class="pl-smi"&gt;username&lt;/span&gt;, &lt;span class="pl-smi"&gt;password&lt;/span&gt;|
  &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; verify user's password here&lt;/span&gt;
  { &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;test&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt; =&amp;gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;password1&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt; }[username] &lt;span class="pl-k"&gt;==&lt;/span&gt; password
&lt;span class="pl-k"&gt;end&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;div class="highlight highlight-source-ruby"&gt;&lt;pre&gt;http_digest({ &lt;span class="pl-c1"&gt;realm:&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;Test Api&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-c1"&gt;opaque:&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;app secret&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt; }) &lt;span class="pl-k"&gt;do&lt;/span&gt; |&lt;span class="pl-smi"&gt;username&lt;/span&gt;|
  &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; lookup the user's password here&lt;/span&gt;
  { &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;user1&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt; =&amp;gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;password1&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt; }[username]
&lt;span class="pl-k"&gt;end&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h3&gt;&lt;a id="user-content-register-custom-middleware-for-authentication" class="anchor" aria-hidden="true" href="#register-custom-middleware-for-authentication"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Register custom middleware for authentication&lt;/h3&gt;
&lt;p&gt;Grape can use custom Middleware for authentication. How to implement these
Middleware have a look at &lt;code&gt;Rack::Auth::Basic&lt;/code&gt; or similar implementations.&lt;/p&gt;
&lt;p&gt;For registering a Middleware you need the following options:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;label&lt;/code&gt; - the name for your authenticator to use it later&lt;/li&gt;
&lt;li&gt;&lt;code&gt;MiddlewareClass&lt;/code&gt; - the MiddlewareClass to use for authentication&lt;/li&gt;
&lt;li&gt;&lt;code&gt;option_lookup_proc&lt;/code&gt; - A Proc with one Argument to lookup the options at
runtime (return value is an &lt;code&gt;Array&lt;/code&gt; as Parameter for the Middleware).&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Example:&lt;/p&gt;
&lt;div class="highlight highlight-source-ruby"&gt;&lt;pre&gt;&lt;span class="pl-c1"&gt;Grape&lt;/span&gt;::&lt;span class="pl-c1"&gt;Middleware&lt;/span&gt;::&lt;span class="pl-c1"&gt;Auth&lt;/span&gt;::&lt;span class="pl-c1"&gt;Strategies&lt;/span&gt;.add(&lt;span class="pl-c1"&gt;:my_auth&lt;/span&gt;, &lt;span class="pl-c1"&gt;AuthMiddleware&lt;/span&gt;, &lt;span class="pl-c1"&gt;-&amp;gt;&lt;/span&gt;(options) { [options[&lt;span class="pl-c1"&gt;:realm&lt;/span&gt;]] } )


auth &lt;span class="pl-c1"&gt;:my_auth&lt;/span&gt;, { &lt;span class="pl-c1"&gt;realm:&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;Test Api&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;} &lt;span class="pl-k"&gt;do&lt;/span&gt; |&lt;span class="pl-smi"&gt;credentials&lt;/span&gt;|
  &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; lookup the user's password here&lt;/span&gt;
  { &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;user1&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt; =&amp;gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;password1&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt; }[username]
&lt;span class="pl-k"&gt;end&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Use &lt;a href="https://github.com/doorkeeper-gem/doorkeeper"&gt;Doorkeeper&lt;/a&gt;, &lt;a href="https://github.com/opperator/warden-oauth2"&gt;warden-oauth2&lt;/a&gt; or &lt;a href="https://github.com/nov/rack-oauth2"&gt;rack-oauth2&lt;/a&gt; for OAuth2 support.&lt;/p&gt;
&lt;p&gt;You can access the controller params, headers, and helpers through the context with the &lt;code&gt;#context&lt;/code&gt; method inside any auth middleware inherited from &lt;code&gt;Grape::Middlware::Auth::Base&lt;/code&gt;.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-describing-and-inspecting-an-api" class="anchor" aria-hidden="true" href="#describing-and-inspecting-an-api"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Describing and Inspecting an API&lt;/h2&gt;
&lt;p&gt;Grape routes can be reflected at runtime. This can notably be useful for generating documentation.&lt;/p&gt;
&lt;p&gt;Grape exposes arrays of API versions and compiled routes. Each route contains a &lt;code&gt;route_prefix&lt;/code&gt;, &lt;code&gt;route_version&lt;/code&gt;, &lt;code&gt;route_namespace&lt;/code&gt;, &lt;code&gt;route_method&lt;/code&gt;, &lt;code&gt;route_path&lt;/code&gt; and &lt;code&gt;route_params&lt;/code&gt;. You can add custom route settings to the route metadata with &lt;code&gt;route_setting&lt;/code&gt;.&lt;/p&gt;
&lt;div class="highlight highlight-source-ruby"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;class&lt;/span&gt; &lt;span class="pl-en"&gt;TwitterAPI&lt;span class="pl-e"&gt; &amp;lt; Grape::API&lt;/span&gt;&lt;/span&gt;
  version &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;v1&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;
  desc &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;Includes custom settings.&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;
  route_setting &lt;span class="pl-c1"&gt;:custom&lt;/span&gt;, &lt;span class="pl-c1"&gt;key:&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;value&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;
  get &lt;span class="pl-k"&gt;do&lt;/span&gt;

  &lt;span class="pl-k"&gt;end&lt;/span&gt;
&lt;span class="pl-k"&gt;end&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Examine the routes at runtime.&lt;/p&gt;
&lt;div class="highlight highlight-source-ruby"&gt;&lt;pre&gt;&lt;span class="pl-c1"&gt;TwitterAPI&lt;/span&gt;::versions &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; yields [ 'v1', 'v2' ]&lt;/span&gt;
&lt;span class="pl-c1"&gt;TwitterAPI&lt;/span&gt;::routes &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; yields an array of Grape::Route objects&lt;/span&gt;
&lt;span class="pl-c1"&gt;TwitterAPI&lt;/span&gt;::routes[&lt;span class="pl-c1"&gt;0&lt;/span&gt;].version &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; =&amp;gt; 'v1'&lt;/span&gt;
&lt;span class="pl-c1"&gt;TwitterAPI&lt;/span&gt;::routes[&lt;span class="pl-c1"&gt;0&lt;/span&gt;].description &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; =&amp;gt; 'Includes custom settings.'&lt;/span&gt;
&lt;span class="pl-c1"&gt;TwitterAPI&lt;/span&gt;::routes[&lt;span class="pl-c1"&gt;0&lt;/span&gt;].settings[&lt;span class="pl-c1"&gt;:custom&lt;/span&gt;] &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; =&amp;gt; { key: 'value' }&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Note that &lt;code&gt;Route#route_xyz&lt;/code&gt; methods have been deprecated since 0.15.0.&lt;/p&gt;
&lt;p&gt;Please use &lt;code&gt;Route#xyz&lt;/code&gt; instead.&lt;/p&gt;
&lt;p&gt;Note that difference of &lt;code&gt;Route#options&lt;/code&gt; and &lt;code&gt;Route#settings&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;The &lt;code&gt;options&lt;/code&gt; can be referred from your route, it should be set by specifing key and value on verb methods such as &lt;code&gt;get&lt;/code&gt;, &lt;code&gt;post&lt;/code&gt; and &lt;code&gt;put&lt;/code&gt;.
The &lt;code&gt;settings&lt;/code&gt; can also be referred from your route, but it should be set by specifing key and value on &lt;code&gt;route_setting&lt;/code&gt;.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-current-route-and-endpoint" class="anchor" aria-hidden="true" href="#current-route-and-endpoint"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Current Route and Endpoint&lt;/h2&gt;
&lt;p&gt;It's possible to retrieve the information about the current route from within an API call with &lt;code&gt;route&lt;/code&gt;.&lt;/p&gt;
&lt;div class="highlight highlight-source-ruby"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;class&lt;/span&gt; &lt;span class="pl-en"&gt;MyAPI&lt;span class="pl-e"&gt; &amp;lt; Grape::API&lt;/span&gt;&lt;/span&gt;
  desc &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;Returns a description of a parameter.&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;
  params &lt;span class="pl-k"&gt;do&lt;/span&gt;
    requires &lt;span class="pl-c1"&gt;:id&lt;/span&gt;, &lt;span class="pl-c1"&gt;type:&lt;/span&gt; &lt;span class="pl-c1"&gt;Integer&lt;/span&gt;, &lt;span class="pl-c1"&gt;desc:&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;Identity.&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;
  &lt;span class="pl-k"&gt;end&lt;/span&gt;
  get &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;params/:id&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt; &lt;span class="pl-k"&gt;do&lt;/span&gt;
    route.route_params[params[&lt;span class="pl-c1"&gt;:id&lt;/span&gt;]] &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; yields the parameter description&lt;/span&gt;
  &lt;span class="pl-k"&gt;end&lt;/span&gt;
&lt;span class="pl-k"&gt;end&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;The current endpoint responding to the request is &lt;code&gt;self&lt;/code&gt; within the API block
or &lt;code&gt;env['api.endpoint']&lt;/code&gt; elsewhere. The endpoint has some interesting properties,
such as &lt;code&gt;source&lt;/code&gt; which gives you access to the original code block of the API
implementation. This can be particularly useful for building a logger middleware.&lt;/p&gt;
&lt;div class="highlight highlight-source-ruby"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;class&lt;/span&gt; &lt;span class="pl-en"&gt;ApiLogger&lt;span class="pl-e"&gt; &amp;lt; Grape::Middleware::Base&lt;/span&gt;&lt;/span&gt;
  &lt;span class="pl-k"&gt;def&lt;/span&gt; &lt;span class="pl-en"&gt;before&lt;/span&gt;
    file &lt;span class="pl-k"&gt;=&lt;/span&gt; env[&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;api.endpoint&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;].source.source_location[&lt;span class="pl-c1"&gt;0&lt;/span&gt;]
    line &lt;span class="pl-k"&gt;=&lt;/span&gt; env[&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;api.endpoint&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;].source.source_location[&lt;span class="pl-c1"&gt;1&lt;/span&gt;]
    logger.debug &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;[api] &lt;span class="pl-pse"&gt;#{&lt;/span&gt;&lt;span class="pl-s1"&gt;file&lt;/span&gt;&lt;span class="pl-pse"&gt;}&lt;/span&gt;:&lt;span class="pl-pse"&gt;#{&lt;/span&gt;&lt;span class="pl-s1"&gt;line&lt;/span&gt;&lt;span class="pl-pse"&gt;}&lt;/span&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;
  &lt;span class="pl-k"&gt;end&lt;/span&gt;
&lt;span class="pl-k"&gt;end&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h2&gt;&lt;a id="user-content-before-after-and-finally" class="anchor" aria-hidden="true" href="#before-after-and-finally"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Before, After and Finally&lt;/h2&gt;
&lt;p&gt;Blocks can be executed before or after every API call, using &lt;code&gt;before&lt;/code&gt;, &lt;code&gt;after&lt;/code&gt;,
&lt;code&gt;before_validation&lt;/code&gt; and &lt;code&gt;after_validation&lt;/code&gt;.
If the API fails the &lt;code&gt;after&lt;/code&gt; call will not be trigered, if you need code to execute for sure
use the &lt;code&gt;finally&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;Before and after callbacks execute in the following order:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;&lt;code&gt;before&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;before_validation&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;em&gt;validations&lt;/em&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;after_validation&lt;/code&gt; (upon successful validation)&lt;/li&gt;
&lt;li&gt;&lt;em&gt;the API call&lt;/em&gt; (upon successful validation)&lt;/li&gt;
&lt;li&gt;&lt;code&gt;after&lt;/code&gt; (upon successful validation and API call)&lt;/li&gt;
&lt;li&gt;&lt;code&gt;finally&lt;/code&gt; (always)&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;Steps 4, 5 and 6 only happen if validation succeeds.&lt;/p&gt;
&lt;p&gt;If a request for a resource is made with an unsupported HTTP method (returning
HTTP 405) only &lt;code&gt;before&lt;/code&gt; callbacks will be executed.  The remaining callbacks will
be bypassed.&lt;/p&gt;
&lt;p&gt;If a request for a resource is made that triggers the built-in &lt;code&gt;OPTIONS&lt;/code&gt; handler,
only &lt;code&gt;before&lt;/code&gt; and &lt;code&gt;after&lt;/code&gt; callbacks will be executed.  The remaining callbacks will
be bypassed.&lt;/p&gt;
&lt;p&gt;For example, using a simple &lt;code&gt;before&lt;/code&gt; block to set a header.&lt;/p&gt;
&lt;div class="highlight highlight-source-ruby"&gt;&lt;pre&gt;before &lt;span class="pl-k"&gt;do&lt;/span&gt;
  header &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;X-Robots-Tag&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;noindex&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;
&lt;span class="pl-k"&gt;end&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;You can ensure a block of code runs after every request (including failures) with &lt;code&gt;finally&lt;/code&gt;:&lt;/p&gt;
&lt;div class="highlight highlight-source-ruby"&gt;&lt;pre&gt;finally &lt;span class="pl-k"&gt;do&lt;/span&gt;
  &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; this code will run after every request (successful or failed)&lt;/span&gt;
&lt;span class="pl-k"&gt;end&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;strong&gt;Namespaces&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Callbacks apply to each API call within and below the current namespace:&lt;/p&gt;
&lt;div class="highlight highlight-source-ruby"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;class&lt;/span&gt; &lt;span class="pl-en"&gt;MyAPI&lt;span class="pl-e"&gt; &amp;lt; Grape::API&lt;/span&gt;&lt;/span&gt;
  get &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;/&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt; &lt;span class="pl-k"&gt;do&lt;/span&gt;
    &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;root - &lt;span class="pl-pse"&gt;#{&lt;/span&gt;&lt;span class="pl-s1"&gt;&lt;span class="pl-smi"&gt;@blah&lt;/span&gt;&lt;/span&gt;&lt;span class="pl-pse"&gt;}&lt;/span&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;
  &lt;span class="pl-k"&gt;end&lt;/span&gt;

  namespace &lt;span class="pl-c1"&gt;:foo&lt;/span&gt; &lt;span class="pl-k"&gt;do&lt;/span&gt;
    before &lt;span class="pl-k"&gt;do&lt;/span&gt;
      &lt;span class="pl-smi"&gt;@blah&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;blah&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;
    &lt;span class="pl-k"&gt;end&lt;/span&gt;

    get &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;/&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt; &lt;span class="pl-k"&gt;do&lt;/span&gt;
      &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;root - foo - &lt;span class="pl-pse"&gt;#{&lt;/span&gt;&lt;span class="pl-s1"&gt;&lt;span class="pl-smi"&gt;@blah&lt;/span&gt;&lt;/span&gt;&lt;span class="pl-pse"&gt;}&lt;/span&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;
    &lt;span class="pl-k"&gt;end&lt;/span&gt;

    namespace &lt;span class="pl-c1"&gt;:bar&lt;/span&gt; &lt;span class="pl-k"&gt;do&lt;/span&gt;
      get &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;/&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt; &lt;span class="pl-k"&gt;do&lt;/span&gt;
        &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;root - foo - bar - &lt;span class="pl-pse"&gt;#{&lt;/span&gt;&lt;span class="pl-s1"&gt;&lt;span class="pl-smi"&gt;@blah&lt;/span&gt;&lt;/span&gt;&lt;span class="pl-pse"&gt;}&lt;/span&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;
      &lt;span class="pl-k"&gt;end&lt;/span&gt;
    &lt;span class="pl-k"&gt;end&lt;/span&gt;
  &lt;span class="pl-k"&gt;end&lt;/span&gt;
&lt;span class="pl-k"&gt;end&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;The behavior is then:&lt;/p&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt;GET /           &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; 'root - '&lt;/span&gt;
GET /foo        &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; 'root - foo - blah'&lt;/span&gt;
GET /foo/bar    &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; 'root - foo - bar - blah'&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Params on a &lt;code&gt;namespace&lt;/code&gt; (or whichever alias you are using) will also be available when using &lt;code&gt;before_validation&lt;/code&gt; or &lt;code&gt;after_validation&lt;/code&gt;:&lt;/p&gt;
&lt;div class="highlight highlight-source-ruby"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;class&lt;/span&gt; &lt;span class="pl-en"&gt;MyAPI&lt;span class="pl-e"&gt; &amp;lt; Grape::API&lt;/span&gt;&lt;/span&gt;
  params &lt;span class="pl-k"&gt;do&lt;/span&gt;
    requires &lt;span class="pl-c1"&gt;:blah&lt;/span&gt;, &lt;span class="pl-c1"&gt;type:&lt;/span&gt; &lt;span class="pl-c1"&gt;Integer&lt;/span&gt;
  &lt;span class="pl-k"&gt;end&lt;/span&gt;
  resource &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;:blah&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt; &lt;span class="pl-k"&gt;do&lt;/span&gt;
    after_validation &lt;span class="pl-k"&gt;do&lt;/span&gt;
      &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; if we reach this point validations will have passed&lt;/span&gt;
      &lt;span class="pl-smi"&gt;@blah&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; declared(params, &lt;span class="pl-c1"&gt;include_missing:&lt;/span&gt; &lt;span class="pl-c1"&gt;false&lt;/span&gt;)[&lt;span class="pl-c1"&gt;:blah&lt;/span&gt;]
    &lt;span class="pl-k"&gt;end&lt;/span&gt;

    get &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;/&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt; &lt;span class="pl-k"&gt;do&lt;/span&gt;
      &lt;span class="pl-smi"&gt;@blah&lt;/span&gt;.class
    &lt;span class="pl-k"&gt;end&lt;/span&gt;
  &lt;span class="pl-k"&gt;end&lt;/span&gt;
&lt;span class="pl-k"&gt;end&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;The behavior is then:&lt;/p&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt;GET /123        &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; 'Integer'&lt;/span&gt;
GET /foo        &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; 400 error - 'blah is invalid'&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;strong&gt;Versioning&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;When a callback is defined within a version block, it's only called for the routes defined in that block.&lt;/p&gt;
&lt;div class="highlight highlight-source-ruby"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;class&lt;/span&gt; &lt;span class="pl-en"&gt;Test&lt;span class="pl-e"&gt; &amp;lt; Grape::API&lt;/span&gt;&lt;/span&gt;
  resource &lt;span class="pl-c1"&gt;:foo&lt;/span&gt; &lt;span class="pl-k"&gt;do&lt;/span&gt;
    version &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;v1&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-c1"&gt;:using&lt;/span&gt; =&amp;gt; &lt;span class="pl-c1"&gt;:path&lt;/span&gt; &lt;span class="pl-k"&gt;do&lt;/span&gt;
      before &lt;span class="pl-k"&gt;do&lt;/span&gt;
        &lt;span class="pl-smi"&gt;@output&lt;/span&gt; &lt;span class="pl-k"&gt;||=&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;v1-&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;
      &lt;span class="pl-k"&gt;end&lt;/span&gt;
      get &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;/&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt; &lt;span class="pl-k"&gt;do&lt;/span&gt;
        &lt;span class="pl-smi"&gt;@output&lt;/span&gt; &lt;span class="pl-k"&gt;+=&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;hello&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;
      &lt;span class="pl-k"&gt;end&lt;/span&gt;
    &lt;span class="pl-k"&gt;end&lt;/span&gt;

    version &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;v2&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-c1"&gt;:using&lt;/span&gt; =&amp;gt; &lt;span class="pl-c1"&gt;:path&lt;/span&gt; &lt;span class="pl-k"&gt;do&lt;/span&gt;
      before &lt;span class="pl-k"&gt;do&lt;/span&gt;
        &lt;span class="pl-smi"&gt;@output&lt;/span&gt; &lt;span class="pl-k"&gt;||=&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;v2-&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;
      &lt;span class="pl-k"&gt;end&lt;/span&gt;
      get &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;/&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt; &lt;span class="pl-k"&gt;do&lt;/span&gt;
        &lt;span class="pl-smi"&gt;@output&lt;/span&gt; &lt;span class="pl-k"&gt;+=&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;hello&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;
      &lt;span class="pl-k"&gt;end&lt;/span&gt;
    &lt;span class="pl-k"&gt;end&lt;/span&gt;
  &lt;span class="pl-k"&gt;end&lt;/span&gt;
&lt;span class="pl-k"&gt;end&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;The behavior is then:&lt;/p&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt;GET /foo/v1       &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; 'v1-hello'&lt;/span&gt;
GET /foo/v2       &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; 'v2-hello'&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;strong&gt;Altering Responses&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Using &lt;code&gt;present&lt;/code&gt; in any callback allows you to add data to a response:&lt;/p&gt;
&lt;div class="highlight highlight-source-ruby"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;class&lt;/span&gt; &lt;span class="pl-en"&gt;MyAPI&lt;span class="pl-e"&gt; &amp;lt; Grape::API&lt;/span&gt;&lt;/span&gt;
  &lt;span class="pl-c1"&gt;format&lt;/span&gt; &lt;span class="pl-c1"&gt;:json&lt;/span&gt;

  after_validation &lt;span class="pl-k"&gt;do&lt;/span&gt;
    present &lt;span class="pl-c1"&gt;:name&lt;/span&gt;, params[&lt;span class="pl-c1"&gt;:name&lt;/span&gt;] &lt;span class="pl-k"&gt;if&lt;/span&gt; params[&lt;span class="pl-c1"&gt;:name&lt;/span&gt;]
  &lt;span class="pl-k"&gt;end&lt;/span&gt;

  get &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;/greeting&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt; &lt;span class="pl-k"&gt;do&lt;/span&gt;
    present &lt;span class="pl-c1"&gt;:greeting&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;Hello!&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;
  &lt;span class="pl-k"&gt;end&lt;/span&gt;
&lt;span class="pl-k"&gt;end&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;The behavior is then:&lt;/p&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt;GET /greeting              &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; {"greeting":"Hello!"}&lt;/span&gt;
GET /greeting&lt;span class="pl-k"&gt;?&lt;/span&gt;name=Alan    &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; {"name":"Alan","greeting":"Hello!"}&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Instead of altering a response, you can also terminate and rewrite it from any callback using &lt;code&gt;error!&lt;/code&gt;, including &lt;code&gt;after&lt;/code&gt;. This will cause all subsequent steps in the process to not be called. &lt;strong&gt;This includes the actual api call and any callbacks&lt;/strong&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-anchoring" class="anchor" aria-hidden="true" href="#anchoring"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Anchoring&lt;/h2&gt;
&lt;p&gt;Grape by default anchors all request paths, which means that the request URL
should match from start to end to match, otherwise a &lt;code&gt;404 Not Found&lt;/code&gt; is
returned. However, this is sometimes not what you want, because it is not always
known upfront what can be expected from the call. This is because Rack-mount by
default anchors requests to match from the start to the end, or not at all.
Rails solves this problem by using a &lt;code&gt;anchor: false&lt;/code&gt; option in your routes.
In Grape this option can be used as well when a method is defined.&lt;/p&gt;
&lt;p&gt;For instance when your API needs to get part of an URL, for instance:&lt;/p&gt;
&lt;div class="highlight highlight-source-ruby"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;class&lt;/span&gt; &lt;span class="pl-en"&gt;TwitterAPI&lt;span class="pl-e"&gt; &amp;lt; Grape::API&lt;/span&gt;&lt;/span&gt;
  namespace &lt;span class="pl-c1"&gt;:statuses&lt;/span&gt; &lt;span class="pl-k"&gt;do&lt;/span&gt;
    get &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;/(*:status)&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-c1"&gt;anchor:&lt;/span&gt; &lt;span class="pl-c1"&gt;false&lt;/span&gt; &lt;span class="pl-k"&gt;do&lt;/span&gt;

    &lt;span class="pl-k"&gt;end&lt;/span&gt;
  &lt;span class="pl-k"&gt;end&lt;/span&gt;
&lt;span class="pl-k"&gt;end&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;This will match all paths starting with '/statuses/'. There is one caveat though:
the &lt;code&gt;params[:status]&lt;/code&gt; parameter only holds the first part of the request url.
Luckily this can be circumvented by using the described above syntax for path
specification and using the &lt;code&gt;PATH_INFO&lt;/code&gt; Rack environment variable, using
&lt;code&gt;env['PATH_INFO']&lt;/code&gt;. This will hold everything that comes after the '/statuses/'
part.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-using-custom-middleware" class="anchor" aria-hidden="true" href="#using-custom-middleware"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Using Custom Middleware&lt;/h2&gt;
&lt;h3&gt;&lt;a id="user-content-grape-middleware" class="anchor" aria-hidden="true" href="#grape-middleware"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Grape Middleware&lt;/h3&gt;
&lt;p&gt;You can make a custom middleware by using &lt;code&gt;Grape::Middleware::Base&lt;/code&gt;.
It's inherited from some grape official middlewares in fact.&lt;/p&gt;
&lt;p&gt;For example, you can write a middleware to log application exception.&lt;/p&gt;
&lt;div class="highlight highlight-source-ruby"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;class&lt;/span&gt; &lt;span class="pl-en"&gt;LoggingError&lt;span class="pl-e"&gt; &amp;lt; Grape::Middleware::Base&lt;/span&gt;&lt;/span&gt;
  &lt;span class="pl-k"&gt;def&lt;/span&gt; &lt;span class="pl-en"&gt;after&lt;/span&gt;
    &lt;span class="pl-k"&gt;return&lt;/span&gt; &lt;span class="pl-k"&gt;unless&lt;/span&gt; &lt;span class="pl-smi"&gt;@app_response&lt;/span&gt; &lt;span class="pl-k"&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class="pl-smi"&gt;@app_response&lt;/span&gt;[&lt;span class="pl-c1"&gt;0&lt;/span&gt;] &lt;span class="pl-k"&gt;==&lt;/span&gt; &lt;span class="pl-c1"&gt;500&lt;/span&gt;
    env[&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;rack.logger&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;].error(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;Raised error on &lt;span class="pl-pse"&gt;#{&lt;/span&gt;&lt;span class="pl-s1"&gt;env[&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;PATH_INFO&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;]&lt;/span&gt;&lt;span class="pl-pse"&gt;}&lt;/span&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
  &lt;span class="pl-k"&gt;end&lt;/span&gt;
&lt;span class="pl-k"&gt;end&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Your middleware can overwrite application response as follows, except error case.&lt;/p&gt;
&lt;div class="highlight highlight-source-ruby"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;class&lt;/span&gt; &lt;span class="pl-en"&gt;Overwriter&lt;span class="pl-e"&gt; &amp;lt; Grape::Middleware::Base&lt;/span&gt;&lt;/span&gt;
  &lt;span class="pl-k"&gt;def&lt;/span&gt; &lt;span class="pl-en"&gt;after&lt;/span&gt;
    [&lt;span class="pl-c1"&gt;200&lt;/span&gt;, { &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;Content-Type&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt; =&amp;gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;text/plain&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt; }, [&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;Overwritten.&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;]]
  &lt;span class="pl-k"&gt;end&lt;/span&gt;
&lt;span class="pl-k"&gt;end&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;You can add your custom middleware with &lt;code&gt;use&lt;/code&gt;, that push the middleware onto the stack, and you can also control where the middleware is inserted using &lt;code&gt;insert&lt;/code&gt;, &lt;code&gt;insert_before&lt;/code&gt; and &lt;code&gt;insert_after&lt;/code&gt;.&lt;/p&gt;
&lt;div class="highlight highlight-source-ruby"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;class&lt;/span&gt; &lt;span class="pl-en"&gt;CustomOverwriter&lt;span class="pl-e"&gt; &amp;lt; Grape::Middleware::Base&lt;/span&gt;&lt;/span&gt;
  &lt;span class="pl-k"&gt;def&lt;/span&gt; &lt;span class="pl-en"&gt;after&lt;/span&gt;
    [&lt;span class="pl-c1"&gt;200&lt;/span&gt;, { &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;Content-Type&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt; =&amp;gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;text/plain&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt; }, [&lt;span class="pl-smi"&gt;@options&lt;/span&gt;[&lt;span class="pl-c1"&gt;:message&lt;/span&gt;]]]
  &lt;span class="pl-k"&gt;end&lt;/span&gt;
&lt;span class="pl-k"&gt;end&lt;/span&gt;


&lt;span class="pl-k"&gt;class&lt;/span&gt; &lt;span class="pl-en"&gt;API&lt;span class="pl-e"&gt; &amp;lt; Grape::API&lt;/span&gt;&lt;/span&gt;
  use &lt;span class="pl-c1"&gt;Overwriter&lt;/span&gt;
  insert_before &lt;span class="pl-c1"&gt;Overwriter&lt;/span&gt;, &lt;span class="pl-c1"&gt;CustomOverwriter&lt;/span&gt;, &lt;span class="pl-c1"&gt;message:&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;Overwritten again.&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;
  insert &lt;span class="pl-c1"&gt;0&lt;/span&gt;, &lt;span class="pl-c1"&gt;CustomOverwriter&lt;/span&gt;, &lt;span class="pl-c1"&gt;message:&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;Overwrites all other middleware.&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;

  get &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;/&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt; &lt;span class="pl-k"&gt;do&lt;/span&gt;
  &lt;span class="pl-k"&gt;end&lt;/span&gt;
&lt;span class="pl-k"&gt;end&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;You can access the controller params, headers, and helpers through the context with the &lt;code&gt;#context&lt;/code&gt; method inside any middleware inherited from &lt;code&gt;Grape::Middlware::Base&lt;/code&gt;.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-rails-middleware" class="anchor" aria-hidden="true" href="#rails-middleware"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Rails Middleware&lt;/h3&gt;
&lt;p&gt;Note that when you're using Grape mounted on Rails you don't have to use Rails middleware because it's already included into your middleware stack.
You only have to implement the helpers to access the specific &lt;code&gt;env&lt;/code&gt; variable.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-remote-ip" class="anchor" aria-hidden="true" href="#remote-ip"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Remote IP&lt;/h3&gt;
&lt;p&gt;By default you can access remote IP with &lt;code&gt;request.ip&lt;/code&gt;. This is the remote IP address implemented by Rack. Sometimes it is desirable to get the remote IP &lt;a href="http://stackoverflow.com/questions/10997005/whats-the-difference-between-request-remote-ip-and-request-ip-in-rails" rel="nofollow"&gt;Rails-style&lt;/a&gt; with &lt;code&gt;ActionDispatch::RemoteIp&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;Add &lt;code&gt;gem 'actionpack'&lt;/code&gt; to your Gemfile and &lt;code&gt;require 'action_dispatch/middleware/remote_ip.rb'&lt;/code&gt;. Use the middleware in your API and expose a &lt;code&gt;client_ip&lt;/code&gt; helper. See &lt;a href="http://api.rubyonrails.org/classes/ActionDispatch/RemoteIp.html" rel="nofollow"&gt;this documentation&lt;/a&gt; for additional options.&lt;/p&gt;
&lt;div class="highlight highlight-source-ruby"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;class&lt;/span&gt; &lt;span class="pl-en"&gt;API&lt;span class="pl-e"&gt; &amp;lt; Grape::API&lt;/span&gt;&lt;/span&gt;
  use &lt;span class="pl-c1"&gt;ActionDispatch&lt;/span&gt;::&lt;span class="pl-c1"&gt;RemoteIp&lt;/span&gt;

  helpers &lt;span class="pl-k"&gt;do&lt;/span&gt;
    &lt;span class="pl-k"&gt;def&lt;/span&gt; &lt;span class="pl-en"&gt;client_ip&lt;/span&gt;
      env[&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;action_dispatch.remote_ip&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;].to_s
    &lt;span class="pl-k"&gt;end&lt;/span&gt;
  &lt;span class="pl-k"&gt;end&lt;/span&gt;

  get &lt;span class="pl-c1"&gt;:remote_ip&lt;/span&gt; &lt;span class="pl-k"&gt;do&lt;/span&gt;
    { &lt;span class="pl-c1"&gt;ip:&lt;/span&gt; client_ip }
  &lt;span class="pl-k"&gt;end&lt;/span&gt;
&lt;span class="pl-k"&gt;end&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h2&gt;&lt;a id="user-content-writing-tests" class="anchor" aria-hidden="true" href="#writing-tests"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Writing Tests&lt;/h2&gt;
&lt;h3&gt;&lt;a id="user-content-writing-tests-with-rack" class="anchor" aria-hidden="true" href="#writing-tests-with-rack"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Writing Tests with Rack&lt;/h3&gt;
&lt;p&gt;Use &lt;code&gt;rack-test&lt;/code&gt; and define your API as &lt;code&gt;app&lt;/code&gt;.&lt;/p&gt;
&lt;h4&gt;&lt;a id="user-content-rspec" class="anchor" aria-hidden="true" href="#rspec"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;RSpec&lt;/h4&gt;
&lt;p&gt;You can test a Grape API with RSpec by making HTTP requests and examining the response.&lt;/p&gt;
&lt;div class="highlight highlight-source-ruby"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;require&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;spec_helper&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;

describe &lt;span class="pl-c1"&gt;Twitter&lt;/span&gt;::&lt;span class="pl-c1"&gt;API&lt;/span&gt; &lt;span class="pl-k"&gt;do&lt;/span&gt;
  &lt;span class="pl-k"&gt;include&lt;/span&gt; &lt;span class="pl-c1"&gt;Rack&lt;/span&gt;::&lt;span class="pl-c1"&gt;Test&lt;/span&gt;::&lt;span class="pl-c1"&gt;Methods&lt;/span&gt;

  &lt;span class="pl-k"&gt;def&lt;/span&gt; &lt;span class="pl-en"&gt;app&lt;/span&gt;
    &lt;span class="pl-c1"&gt;Twitter&lt;/span&gt;::&lt;span class="pl-c1"&gt;API&lt;/span&gt;
  &lt;span class="pl-k"&gt;end&lt;/span&gt;

  context &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;GET /api/statuses/public_timeline&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt; &lt;span class="pl-k"&gt;do&lt;/span&gt;
    it &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;returns an empty array of statuses&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt; &lt;span class="pl-k"&gt;do&lt;/span&gt;
      get &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;/api/statuses/public_timeline&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;
      expect(last_response.status).to eq(&lt;span class="pl-c1"&gt;200&lt;/span&gt;)
      expect(&lt;span class="pl-c1"&gt;JSON&lt;/span&gt;.parse(last_response.body)).to eq []
    &lt;span class="pl-k"&gt;end&lt;/span&gt;
  &lt;span class="pl-k"&gt;end&lt;/span&gt;
  context &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;GET /api/statuses/:id&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt; &lt;span class="pl-k"&gt;do&lt;/span&gt;
    it &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;returns a status by id&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt; &lt;span class="pl-k"&gt;do&lt;/span&gt;
      status &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;Status&lt;/span&gt;.create!
      get &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;/api/statuses/&lt;span class="pl-pse"&gt;#{&lt;/span&gt;&lt;span class="pl-s1"&gt;status.id&lt;/span&gt;&lt;span class="pl-pse"&gt;}&lt;/span&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;
      expect(last_response.body).to eq status.to_json
    &lt;span class="pl-k"&gt;end&lt;/span&gt;
  &lt;span class="pl-k"&gt;end&lt;/span&gt;
&lt;span class="pl-k"&gt;end&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;There's no standard way of sending arrays of objects via an HTTP GET, so POST JSON data and specify the correct content-type.&lt;/p&gt;
&lt;div class="highlight highlight-source-ruby"&gt;&lt;pre&gt;describe &lt;span class="pl-c1"&gt;Twitter&lt;/span&gt;::&lt;span class="pl-c1"&gt;API&lt;/span&gt; &lt;span class="pl-k"&gt;do&lt;/span&gt;
  context &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;POST /api/statuses&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt; &lt;span class="pl-k"&gt;do&lt;/span&gt;
    it &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;creates many statuses&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt; &lt;span class="pl-k"&gt;do&lt;/span&gt;
      statuses &lt;span class="pl-k"&gt;=&lt;/span&gt; [{ &lt;span class="pl-c1"&gt;text:&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;...&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt; }, { &lt;span class="pl-c1"&gt;text:&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;...&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;}]
      post &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;/api/statuses&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;, statuses.to_json, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;CONTENT_TYPE&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt; =&amp;gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;application/json&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;
      expect(last_response.body).to eq &lt;span class="pl-c1"&gt;201&lt;/span&gt;
    &lt;span class="pl-k"&gt;end&lt;/span&gt;
  &lt;span class="pl-k"&gt;end&lt;/span&gt;
&lt;span class="pl-k"&gt;end&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h4&gt;&lt;a id="user-content-airborne" class="anchor" aria-hidden="true" href="#airborne"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Airborne&lt;/h4&gt;
&lt;p&gt;You can test with other RSpec-based frameworks, including &lt;a href="https://github.com/brooklynDev/airborne"&gt;Airborne&lt;/a&gt;, which uses &lt;code&gt;rack-test&lt;/code&gt; to make requests.&lt;/p&gt;
&lt;div class="highlight highlight-source-ruby"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;require&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;airborne&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;

&lt;span class="pl-c1"&gt;Airborne&lt;/span&gt;.configure &lt;span class="pl-k"&gt;do&lt;/span&gt; |&lt;span class="pl-smi"&gt;config&lt;/span&gt;|
  config.rack_app &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;Twitter&lt;/span&gt;::&lt;span class="pl-c1"&gt;API&lt;/span&gt;
&lt;span class="pl-k"&gt;end&lt;/span&gt;

describe &lt;span class="pl-c1"&gt;Twitter&lt;/span&gt;::&lt;span class="pl-c1"&gt;API&lt;/span&gt; &lt;span class="pl-k"&gt;do&lt;/span&gt;
  context &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;GET /api/statuses/:id&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt; &lt;span class="pl-k"&gt;do&lt;/span&gt;
    it &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;returns a status by id&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt; &lt;span class="pl-k"&gt;do&lt;/span&gt;
      status &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;Status&lt;/span&gt;.create!
      get &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;/api/statuses/&lt;span class="pl-pse"&gt;#{&lt;/span&gt;&lt;span class="pl-s1"&gt;status.id&lt;/span&gt;&lt;span class="pl-pse"&gt;}&lt;/span&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;
      expect_json(status.as_json)
    &lt;span class="pl-k"&gt;end&lt;/span&gt;
  &lt;span class="pl-k"&gt;end&lt;/span&gt;
&lt;span class="pl-k"&gt;end&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h4&gt;&lt;a id="user-content-minitest" class="anchor" aria-hidden="true" href="#minitest"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;MiniTest&lt;/h4&gt;
&lt;div class="highlight highlight-source-ruby"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;require&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;test_helper&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;

&lt;span class="pl-k"&gt;class&lt;/span&gt; &lt;span class="pl-en"&gt;Twitter::APITest&lt;span class="pl-e"&gt; &amp;lt; MiniTest::Test&lt;/span&gt;&lt;/span&gt;
  &lt;span class="pl-k"&gt;include&lt;/span&gt; &lt;span class="pl-c1"&gt;Rack&lt;/span&gt;::&lt;span class="pl-c1"&gt;Test&lt;/span&gt;::&lt;span class="pl-c1"&gt;Methods&lt;/span&gt;

  &lt;span class="pl-k"&gt;def&lt;/span&gt; &lt;span class="pl-en"&gt;app&lt;/span&gt;
    &lt;span class="pl-c1"&gt;Twitter&lt;/span&gt;::&lt;span class="pl-c1"&gt;API&lt;/span&gt;
  &lt;span class="pl-k"&gt;end&lt;/span&gt;

  &lt;span class="pl-k"&gt;def&lt;/span&gt; &lt;span class="pl-en"&gt;test_get_api_statuses_public_timeline_returns_an_empty_array_of_statuses&lt;/span&gt;
    get &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;/api/statuses/public_timeline&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;
    assert last_response.ok?
    assert_equal [], &lt;span class="pl-c1"&gt;JSON&lt;/span&gt;.parse(last_response.body)
  &lt;span class="pl-k"&gt;end&lt;/span&gt;

  &lt;span class="pl-k"&gt;def&lt;/span&gt; &lt;span class="pl-en"&gt;test_get_api_statuses_id_returns_a_status_by_id&lt;/span&gt;
    status &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;Status&lt;/span&gt;.create!
    get &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;/api/statuses/&lt;span class="pl-pse"&gt;#{&lt;/span&gt;&lt;span class="pl-s1"&gt;status.id&lt;/span&gt;&lt;span class="pl-pse"&gt;}&lt;/span&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;
    assert_equal status.to_json, last_response.body
  &lt;span class="pl-k"&gt;end&lt;/span&gt;
&lt;span class="pl-k"&gt;end&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h3&gt;&lt;a id="user-content-writing-tests-with-rails" class="anchor" aria-hidden="true" href="#writing-tests-with-rails"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Writing Tests with Rails&lt;/h3&gt;
&lt;h4&gt;&lt;a id="user-content-rspec-1" class="anchor" aria-hidden="true" href="#rspec-1"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;RSpec&lt;/h4&gt;
&lt;div class="highlight highlight-source-ruby"&gt;&lt;pre&gt;describe &lt;span class="pl-c1"&gt;Twitter&lt;/span&gt;::&lt;span class="pl-c1"&gt;API&lt;/span&gt; &lt;span class="pl-k"&gt;do&lt;/span&gt;
  context &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;GET /api/statuses/public_timeline&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt; &lt;span class="pl-k"&gt;do&lt;/span&gt;
    it &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;returns an empty array of statuses&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt; &lt;span class="pl-k"&gt;do&lt;/span&gt;
      get &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;/api/statuses/public_timeline&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;
      expect(response.status).to eq(&lt;span class="pl-c1"&gt;200&lt;/span&gt;)
      expect(&lt;span class="pl-c1"&gt;JSON&lt;/span&gt;.parse(response.body)).to eq []
    &lt;span class="pl-k"&gt;end&lt;/span&gt;
  &lt;span class="pl-k"&gt;end&lt;/span&gt;
  context &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;GET /api/statuses/:id&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt; &lt;span class="pl-k"&gt;do&lt;/span&gt;
    it &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;returns a status by id&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt; &lt;span class="pl-k"&gt;do&lt;/span&gt;
      status &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;Status&lt;/span&gt;.create!
      get &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;/api/statuses/&lt;span class="pl-pse"&gt;#{&lt;/span&gt;&lt;span class="pl-s1"&gt;status.id&lt;/span&gt;&lt;span class="pl-pse"&gt;}&lt;/span&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;
      expect(response.body).to eq status.to_json
    &lt;span class="pl-k"&gt;end&lt;/span&gt;
  &lt;span class="pl-k"&gt;end&lt;/span&gt;
&lt;span class="pl-k"&gt;end&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;In Rails, HTTP request tests would go into the &lt;code&gt;spec/requests&lt;/code&gt; group. You may want your API code to go into
&lt;code&gt;app/api&lt;/code&gt; - you can match that layout under &lt;code&gt;spec&lt;/code&gt; by adding the following in &lt;code&gt;spec/rails_helper.rb&lt;/code&gt;.&lt;/p&gt;
&lt;div class="highlight highlight-source-ruby"&gt;&lt;pre&gt;&lt;span class="pl-c1"&gt;RSpec&lt;/span&gt;.configure &lt;span class="pl-k"&gt;do&lt;/span&gt; |&lt;span class="pl-smi"&gt;config&lt;/span&gt;|
  config.&lt;span class="pl-k"&gt;include&lt;/span&gt; &lt;span class="pl-c1"&gt;RSpec&lt;/span&gt;::&lt;span class="pl-c1"&gt;Rails&lt;/span&gt;::&lt;span class="pl-c1"&gt;RequestExampleGroup&lt;/span&gt;, &lt;span class="pl-c1"&gt;type:&lt;/span&gt; &lt;span class="pl-c1"&gt;:request&lt;/span&gt;, &lt;span class="pl-c1"&gt;file_path:&lt;/span&gt; &lt;span class="pl-sr"&gt;/spec&lt;span class="pl-cce"&gt;\/&lt;/span&gt;api/&lt;/span&gt;
&lt;span class="pl-k"&gt;end&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h4&gt;&lt;a id="user-content-minitest-1" class="anchor" aria-hidden="true" href="#minitest-1"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;MiniTest&lt;/h4&gt;
&lt;div class="highlight highlight-source-ruby"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;class&lt;/span&gt; &lt;span class="pl-en"&gt;Twitter::APITest&lt;span class="pl-e"&gt; &amp;lt; ActiveSupport::TestCase&lt;/span&gt;&lt;/span&gt;
  &lt;span class="pl-k"&gt;include&lt;/span&gt; &lt;span class="pl-c1"&gt;Rack&lt;/span&gt;::&lt;span class="pl-c1"&gt;Test&lt;/span&gt;::&lt;span class="pl-c1"&gt;Methods&lt;/span&gt;

  &lt;span class="pl-k"&gt;def&lt;/span&gt; &lt;span class="pl-en"&gt;app&lt;/span&gt;
    &lt;span class="pl-c1"&gt;Rails&lt;/span&gt;.application
  &lt;span class="pl-k"&gt;end&lt;/span&gt;

  &lt;span class="pl-c1"&gt;test&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;GET /api/statuses/public_timeline returns an empty array of statuses&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt; &lt;span class="pl-k"&gt;do&lt;/span&gt;
    get &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;/api/statuses/public_timeline&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;
    assert last_response.ok?
    assert_equal [], &lt;span class="pl-c1"&gt;JSON&lt;/span&gt;.parse(last_response.body)
  &lt;span class="pl-k"&gt;end&lt;/span&gt;

  &lt;span class="pl-c1"&gt;test&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;GET /api/statuses/:id returns a status by id&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt; &lt;span class="pl-k"&gt;do&lt;/span&gt;
    status &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;Status&lt;/span&gt;.create!
    get &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;/api/statuses/&lt;span class="pl-pse"&gt;#{&lt;/span&gt;&lt;span class="pl-s1"&gt;status.id&lt;/span&gt;&lt;span class="pl-pse"&gt;}&lt;/span&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;
    assert_equal status.to_json, last_response.body
  &lt;span class="pl-k"&gt;end&lt;/span&gt;
&lt;span class="pl-k"&gt;end&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h3&gt;&lt;a id="user-content-stubbing-helpers" class="anchor" aria-hidden="true" href="#stubbing-helpers"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Stubbing Helpers&lt;/h3&gt;
&lt;p&gt;Because helpers are mixed in based on the context when an endpoint is defined, it can
be difficult to stub or mock them for testing. The &lt;code&gt;Grape::Endpoint.before_each&lt;/code&gt; method
can help by allowing you to define behavior on the endpoint that will run before every
request.&lt;/p&gt;
&lt;div class="highlight highlight-source-ruby"&gt;&lt;pre&gt;describe &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;an endpoint that needs helpers stubbed&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt; &lt;span class="pl-k"&gt;do&lt;/span&gt;
  before &lt;span class="pl-k"&gt;do&lt;/span&gt;
    &lt;span class="pl-c1"&gt;Grape&lt;/span&gt;::&lt;span class="pl-c1"&gt;Endpoint&lt;/span&gt;.before_each &lt;span class="pl-k"&gt;do&lt;/span&gt; |&lt;span class="pl-smi"&gt;endpoint&lt;/span&gt;|
      allow(endpoint).to receive(&lt;span class="pl-c1"&gt;:helper_name&lt;/span&gt;).and_return(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;desired_value&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;)
    &lt;span class="pl-k"&gt;end&lt;/span&gt;
  &lt;span class="pl-k"&gt;end&lt;/span&gt;

  after &lt;span class="pl-k"&gt;do&lt;/span&gt;
    &lt;span class="pl-c1"&gt;Grape&lt;/span&gt;::&lt;span class="pl-c1"&gt;Endpoint&lt;/span&gt;.before_each &lt;span class="pl-c1"&gt;nil&lt;/span&gt;
  &lt;span class="pl-k"&gt;end&lt;/span&gt;

  it &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;stubs the helper&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt; &lt;span class="pl-k"&gt;do&lt;/span&gt;

  &lt;span class="pl-k"&gt;end&lt;/span&gt;
&lt;span class="pl-k"&gt;end&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h2&gt;&lt;a id="user-content-reloading-api-changes-in-development" class="anchor" aria-hidden="true" href="#reloading-api-changes-in-development"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Reloading API Changes in Development&lt;/h2&gt;
&lt;h3&gt;&lt;a id="user-content-reloading-in-rack-applications" class="anchor" aria-hidden="true" href="#reloading-in-rack-applications"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Reloading in Rack Applications&lt;/h3&gt;
&lt;p&gt;Use &lt;a href="https://github.com/AlexYankee/grape-reload"&gt;grape-reload&lt;/a&gt;.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-reloading-in-rails-applications" class="anchor" aria-hidden="true" href="#reloading-in-rails-applications"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Reloading in Rails Applications&lt;/h3&gt;
&lt;p&gt;Add API paths to &lt;code&gt;config/application.rb&lt;/code&gt;.&lt;/p&gt;
&lt;div class="highlight highlight-source-ruby"&gt;&lt;pre&gt;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; Auto-load API and its subdirectories&lt;/span&gt;
config.paths.add &lt;span class="pl-c1"&gt;File&lt;/span&gt;.join(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;app&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;api&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;), &lt;span class="pl-c1"&gt;glob:&lt;/span&gt; &lt;span class="pl-c1"&gt;File&lt;/span&gt;.join(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;**&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;*.rb&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;)
config.autoload_paths &lt;span class="pl-k"&gt;+=&lt;/span&gt; &lt;span class="pl-c1"&gt;Dir&lt;/span&gt;[&lt;span class="pl-c1"&gt;Rails&lt;/span&gt;.root.join(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;app&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;api&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;*&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;)]&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Create &lt;code&gt;config/initializers/reload_api.rb&lt;/code&gt;.&lt;/p&gt;
&lt;div class="highlight highlight-source-ruby"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;if&lt;/span&gt; &lt;span class="pl-c1"&gt;Rails&lt;/span&gt;.env.development?
  &lt;span class="pl-c1"&gt;ActiveSupport&lt;/span&gt;::&lt;span class="pl-c1"&gt;Dependencies&lt;/span&gt;.explicitly_unloadable_constants &lt;span class="pl-k"&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;Twitter::API&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;

  api_files &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;Dir&lt;/span&gt;[&lt;span class="pl-c1"&gt;Rails&lt;/span&gt;.root.join(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;app&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;api&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;**&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;*.rb&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;)]
  api_reloader &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;ActiveSupport&lt;/span&gt;::&lt;span class="pl-c1"&gt;FileUpdateChecker&lt;/span&gt;.&lt;span class="pl-k"&gt;new&lt;/span&gt;(api_files) &lt;span class="pl-k"&gt;do&lt;/span&gt;
    &lt;span class="pl-c1"&gt;Rails&lt;/span&gt;.application.reload_routes!
  &lt;span class="pl-k"&gt;end&lt;/span&gt;
  &lt;span class="pl-c1"&gt;ActionDispatch&lt;/span&gt;::&lt;span class="pl-c1"&gt;Callbacks&lt;/span&gt;.to_prepare &lt;span class="pl-k"&gt;do&lt;/span&gt;
    api_reloader.execute_if_updated
  &lt;span class="pl-k"&gt;end&lt;/span&gt;
&lt;span class="pl-k"&gt;end&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;For Rails &amp;gt;= 5.1.4, change this:&lt;/p&gt;
&lt;div class="highlight highlight-source-ruby"&gt;&lt;pre&gt;&lt;span class="pl-c1"&gt;ActionDispatch&lt;/span&gt;::&lt;span class="pl-c1"&gt;Callbacks&lt;/span&gt;.to_prepare &lt;span class="pl-k"&gt;do&lt;/span&gt;
  api_reloader.execute_if_updated
&lt;span class="pl-k"&gt;end&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;to this:&lt;/p&gt;
&lt;div class="highlight highlight-source-ruby"&gt;&lt;pre&gt;&lt;span class="pl-c1"&gt;ActiveSupport&lt;/span&gt;::&lt;span class="pl-c1"&gt;Reloader&lt;/span&gt;.to_prepare &lt;span class="pl-k"&gt;do&lt;/span&gt;
  api_reloader.execute_if_updated
&lt;span class="pl-k"&gt;end&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;See &lt;a href="http://stackoverflow.com/questions/3282655/ruby-on-rails-3-reload-lib-directory-for-each-request/4368838#4368838" rel="nofollow"&gt;StackOverflow #3282655&lt;/a&gt; for more information.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-performance-monitoring" class="anchor" aria-hidden="true" href="#performance-monitoring"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Performance Monitoring&lt;/h2&gt;
&lt;h3&gt;&lt;a id="user-content-active-support-instrumentation" class="anchor" aria-hidden="true" href="#active-support-instrumentation"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Active Support Instrumentation&lt;/h3&gt;
&lt;p&gt;Grape has built-in support for &lt;a href="http://api.rubyonrails.org/classes/ActiveSupport/Notifications.html" rel="nofollow"&gt;ActiveSupport::Notifications&lt;/a&gt; which provides simple hook points to instrument key parts of your application.&lt;/p&gt;
&lt;p&gt;The following are currently supported:&lt;/p&gt;
&lt;h4&gt;&lt;a id="user-content-endpoint_rungrape" class="anchor" aria-hidden="true" href="#endpoint_rungrape"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;endpoint_run.grape&lt;/h4&gt;
&lt;p&gt;The main execution of an endpoint, includes filters and rendering.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;em&gt;endpoint&lt;/em&gt; - The endpoint instance&lt;/li&gt;
&lt;/ul&gt;
&lt;h4&gt;&lt;a id="user-content-endpoint_rendergrape" class="anchor" aria-hidden="true" href="#endpoint_rendergrape"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;endpoint_render.grape&lt;/h4&gt;
&lt;p&gt;The execution of the main content block of the endpoint.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;em&gt;endpoint&lt;/em&gt; - The endpoint instance&lt;/li&gt;
&lt;/ul&gt;
&lt;h4&gt;&lt;a id="user-content-endpoint_run_filtersgrape" class="anchor" aria-hidden="true" href="#endpoint_run_filtersgrape"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;endpoint_run_filters.grape&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;&lt;em&gt;endpoint&lt;/em&gt; - The endpoint instance&lt;/li&gt;
&lt;li&gt;&lt;em&gt;filters&lt;/em&gt; - The filters being executed&lt;/li&gt;
&lt;li&gt;&lt;em&gt;type&lt;/em&gt; - The type of filters (before, before_validation, after_validation, after)&lt;/li&gt;
&lt;/ul&gt;
&lt;h4&gt;&lt;a id="user-content-endpoint_run_validatorsgrape" class="anchor" aria-hidden="true" href="#endpoint_run_validatorsgrape"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;endpoint_run_validators.grape&lt;/h4&gt;
&lt;p&gt;The execution of validators.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;em&gt;endpoint&lt;/em&gt; - The endpoint instance&lt;/li&gt;
&lt;li&gt;&lt;em&gt;validators&lt;/em&gt; - The validators being executed&lt;/li&gt;
&lt;li&gt;&lt;em&gt;request&lt;/em&gt; - The request being validated&lt;/li&gt;
&lt;/ul&gt;
&lt;h4&gt;&lt;a id="user-content-format_responsegrape" class="anchor" aria-hidden="true" href="#format_responsegrape"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;format_response.grape&lt;/h4&gt;
&lt;p&gt;Serialization or template rendering.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;em&gt;env&lt;/em&gt; - The request environment&lt;/li&gt;
&lt;li&gt;&lt;em&gt;formatter&lt;/em&gt; - The formatter object (e.g., &lt;code&gt;Grape::Formatter::Json&lt;/code&gt;)&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;See the &lt;a href="http://api.rubyonrails.org/classes/ActiveSupport/Notifications.html" rel="nofollow"&gt;ActiveSupport::Notifications documentation&lt;/a&gt; for information on how to subscribe to these events.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-monitoring-products" class="anchor" aria-hidden="true" href="#monitoring-products"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Monitoring Products&lt;/h3&gt;
&lt;p&gt;Grape integrates with following third-party tools:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;New Relic&lt;/strong&gt; - &lt;a href="https://docs.newrelic.com/docs/agents/ruby-agent/frameworks/grape-instrumentation" rel="nofollow"&gt;built-in support&lt;/a&gt; from v3.10.0 of the official &lt;a href="https://github.com/newrelic/rpm"&gt;newrelic_rpm&lt;/a&gt; gem, also &lt;a href="https://github.com/xinminlabs/newrelic-grape"&gt;newrelic-grape&lt;/a&gt; gem&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Librato Metrics&lt;/strong&gt; - &lt;a href="https://github.com/seanmoon/grape-librato"&gt;grape-librato&lt;/a&gt; gem&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;&lt;a href="https://www.skylight.io/" rel="nofollow"&gt;Skylight&lt;/a&gt;&lt;/strong&gt; - &lt;a href="https://github.com/skylightio/skylight-ruby"&gt;skylight&lt;/a&gt; gem, &lt;a href="https://docs.skylight.io/grape/" rel="nofollow"&gt;documentation&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;&lt;a href="https://www.appsignal.com" rel="nofollow"&gt;AppSignal&lt;/a&gt;&lt;/strong&gt; - &lt;a href="https://github.com/appsignal/appsignal-ruby"&gt;appsignal-ruby&lt;/a&gt; gem, &lt;a href="http://docs.appsignal.com/getting-started/supported-frameworks.html#grape" rel="nofollow"&gt;documentation&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-contributing-to-grape" class="anchor" aria-hidden="true" href="#contributing-to-grape"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Contributing to Grape&lt;/h2&gt;
&lt;p&gt;Grape is work of hundreds of contributors. You're encouraged to submit pull requests, propose
features and discuss issues.&lt;/p&gt;
&lt;p&gt;See &lt;a href="CONTRIBUTING.md"&gt;CONTRIBUTING&lt;/a&gt;.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-license" class="anchor" aria-hidden="true" href="#license"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;License&lt;/h2&gt;
&lt;p&gt;MIT License. See LICENSE for details.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-copyright" class="anchor" aria-hidden="true" href="#copyright"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Copyright&lt;/h2&gt;
&lt;p&gt;Copyright (c) 2010-2019 Michael Bleigh, Intridea Inc. and Contributors.&lt;/p&gt;
&lt;/article&gt;&lt;/div&gt;</description><author>ruby-grape</author><guid isPermaLink="false">https://github.com/ruby-grape/grape</guid><pubDate>Fri, 01 Nov 2019 00:00:00 GMT</pubDate></item><item><title>samaaron/sonic-pi #10 in Ruby, This week</title><link>https://github.com/samaaron/sonic-pi</link><description>&lt;p&gt;&lt;i&gt;The Live Coding Music Synth for Everyone&lt;/i&gt;&lt;/p&gt;&lt;div id="readme" class="instapaper_body md" data-path="README.md"&gt;&lt;article class="markdown-body entry-content p-5" itemprop="text"&gt;&lt;pre&gt;&lt;code&gt;                                       ╘
                                ─       ╛▒╛
                                 ▐╫       ▄█├
                          ─╟╛      █▄      ╪▓▀
                ╓┤┤┤┤┤┤┤┤┤  ╩▌      ██      ▀▓▌
                 ▐▒   ╬▒     ╟▓╘    ─▓█      ▓▓├
                 ▒╫   ▒╪      ▓█     ▓▓─     ▓▓▄
                ╒▒─  │▒       ▓█     ▓▓     ─▓▓─
                ╬▒   ▄▒ ╒    ╪▓═    ╬▓╬     ▌▓▄
                ╥╒   ╦╥     ╕█╒    ╙▓▐     ▄▓╫
                           ▐╩     ▒▒      ▀▀
                                ╒╪      ▐▄

             _____             __        ____  __
            / ___/____  ____  /_/____   / __ \/_/
            \__ \/ __ \/ __ \/ / ___/  / /_/ / /
           ___/ / /_/ / / / / / /__   / ____/ /
          /____/\____/_/ /_/_/\___/  /_/   /_/
&lt;/code&gt;&lt;/pre&gt;
&lt;h2&gt;&lt;a id="user-content-the-live-coding-music-synth-for-everyone" class="anchor" aria-hidden="true" href="#the-live-coding-music-synth-for-everyone"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;The Live Coding Music Synth for Everyone.&lt;/h2&gt;
&lt;p&gt;Sonic Pi is a &lt;em&gt;new kind of musical instrument&lt;/em&gt;. Instead of strumming
strings or whacking things with sticks - you write code - &lt;strong&gt;live&lt;/strong&gt;.&lt;/p&gt;
&lt;p&gt;Sonic Pi has been designed with the aim to find a harmonious balance
between three core principles:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Simple&lt;/strong&gt; enough for the 10 year old within you&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Joyful&lt;/strong&gt; enough for you to lose yourself through play&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Powerful&lt;/strong&gt; enough for your own expressions&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Sonic Pi is a complete open source programming environment originally
designed to explore and &lt;em&gt;teach programming concepts&lt;/em&gt; within schools through
the process of creating &lt;em&gt;new sounds&lt;/em&gt;.&lt;/p&gt;
&lt;p&gt;In addition to being an engaging education resource it has evolved into
an &lt;em&gt;extremely powerful&lt;/em&gt; and performance-ready &lt;em&gt;live coding instrument&lt;/em&gt; suitable
for professional artists and DJs.&lt;/p&gt;
&lt;p&gt;Whilst Education is a core focus it now sits at the intersection
between three core domains:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Art&lt;/strong&gt; - providing the means to express yourself and ask new questions of music and notation&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Technology&lt;/strong&gt; - exploring questions related to liveness, time and concurrency in programming languages&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Education&lt;/strong&gt;  - demonstrating that open play rather than rigid structures increases motivation and engagement in the classroom&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Again, finding a balance working to the best benefits of all these
domains is the objective.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Info &amp;amp; Latest Releases: &lt;a href="https://sonic-pi.net" rel="nofollow"&gt;https://sonic-pi.net&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Source: &lt;a href="https://github.com/samaaron/sonic-pi"&gt;https://github.com/samaaron/sonic-pi&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Computing Education Resources for Schools: &lt;a href="https://www.raspberrypi.org/learning/sonic-pi-lessons/" rel="nofollow"&gt;https://www.raspberrypi.org/learning/sonic-pi-lessons/&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Music Education Toolkit for Schools: &lt;a href="https://sonic-pi.mehackit.org" rel="nofollow"&gt;https://sonic-pi.mehackit.org&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-contributors" class="anchor" aria-hidden="true" href="#contributors"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Contributors&lt;/h2&gt;
&lt;p&gt;Sonic Pi has been developed with support from many individuals and organisations. Please see the &lt;a href="https://github.com/samaaron/sonic-pi/blob/master/CONTRIBUTORS.md"&gt;CONTRIBUTORS.md&lt;/a&gt; file for a more complete list.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-translations" class="anchor" aria-hidden="true" href="#translations"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Translations&lt;/h2&gt;
&lt;p&gt;Sonic Pi's application and built in tutorial have been translated into several languages thanks to the awesome work of several &lt;a href="CONTRIBUTORS.md#translation"&gt;volunteer translators&lt;/a&gt;:&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th align="right"&gt;Status&lt;/th&gt;
&lt;th align="left"&gt;Language&lt;/th&gt;
&lt;th align="center"&gt;Application&lt;/th&gt;
&lt;th align="center"&gt;Tutorial&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td align="right"&gt;&lt;a href="https://hosted.weblate.org/engage/sonic-pi/" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/7eaa7bcfffb51b7b4d63a0438cba48d27ccf3958/68747470733a2f2f686f737465642e7765626c6174652e6f72672f776964676574732f736f6e69632d70692f64612f7376672d62616467652e737667" alt="Translation Status of Sonic Pi: da" data-canonical-src="https://hosted.weblate.org/widgets/sonic-pi/da/svg-badge.svg" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/td&gt;
&lt;td align="left"&gt;Danish&lt;/td&gt;
&lt;td align="center"&gt;&lt;g-emoji class="g-emoji" alias="white_check_mark" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/2705.png"&gt;✅&lt;/g-emoji&gt;&lt;/td&gt;
&lt;td align="center"&gt;&lt;g-emoji class="g-emoji" alias="red_circle" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f534.png"&gt;🔴&lt;/g-emoji&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="right"&gt;&lt;a href="https://hosted.weblate.org/engage/sonic-pi/" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/9ac54a1febf3b605062c8236173c8b01e72b8c90/68747470733a2f2f686f737465642e7765626c6174652e6f72672f776964676574732f736f6e69632d70692f6e6c2f7376672d62616467652e737667" alt="Translation Status of Sonic Pi: nl" data-canonical-src="https://hosted.weblate.org/widgets/sonic-pi/nl/svg-badge.svg" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/td&gt;
&lt;td align="left"&gt;Dutch&lt;/td&gt;
&lt;td align="center"&gt;&lt;g-emoji class="g-emoji" alias="white_check_mark" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/2705.png"&gt;✅&lt;/g-emoji&gt;&lt;/td&gt;
&lt;td align="center"&gt;&lt;g-emoji class="g-emoji" alias="white_check_mark" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/2705.png"&gt;✅&lt;/g-emoji&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="right"&gt;&lt;a href="https://hosted.weblate.org/engage/sonic-pi/" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/6ca4eced43bc73f849d437e026cde423a11bcb97/68747470733a2f2f686f737465642e7765626c6174652e6f72672f776964676574732f736f6e69632d70692f66692f7376672d62616467652e737667" alt="Translation Status of Sonic Pi: fi" data-canonical-src="https://hosted.weblate.org/widgets/sonic-pi/fi/svg-badge.svg" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/td&gt;
&lt;td align="left"&gt;Finnish&lt;/td&gt;
&lt;td align="center"&gt;&lt;g-emoji class="g-emoji" alias="white_check_mark" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/2705.png"&gt;✅&lt;/g-emoji&gt;&lt;/td&gt;
&lt;td align="center"&gt;&lt;g-emoji class="g-emoji" alias="red_circle" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f534.png"&gt;🔴&lt;/g-emoji&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="right"&gt;&lt;a href="https://hosted.weblate.org/engage/sonic-pi/" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/b0a1a0bef0132914208278f97eca8b1596598c8a/68747470733a2f2f686f737465642e7765626c6174652e6f72672f776964676574732f736f6e69632d70692f66722f7376672d62616467652e737667" alt="Translation Status of Sonic Pi: fr" data-canonical-src="https://hosted.weblate.org/widgets/sonic-pi/fr/svg-badge.svg" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/td&gt;
&lt;td align="left"&gt;French&lt;/td&gt;
&lt;td align="center"&gt;&lt;g-emoji class="g-emoji" alias="white_check_mark" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/2705.png"&gt;✅&lt;/g-emoji&gt;&lt;/td&gt;
&lt;td align="center"&gt;&lt;g-emoji class="g-emoji" alias="white_check_mark" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/2705.png"&gt;✅&lt;/g-emoji&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="right"&gt;&lt;a href="https://hosted.weblate.org/engage/sonic-pi/" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/c7be17a362a597e363a297e80390692aaf69d7c5/68747470733a2f2f686f737465642e7765626c6174652e6f72672f776964676574732f736f6e69632d70692f64652f7376672d62616467652e737667" alt="Translation Status of Sonic Pi: de" data-canonical-src="https://hosted.weblate.org/widgets/sonic-pi/de/svg-badge.svg" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/td&gt;
&lt;td align="left"&gt;German&lt;/td&gt;
&lt;td align="center"&gt;&lt;g-emoji class="g-emoji" alias="white_check_mark" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/2705.png"&gt;✅&lt;/g-emoji&gt;&lt;/td&gt;
&lt;td align="center"&gt;&lt;g-emoji class="g-emoji" alias="white_check_mark" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/2705.png"&gt;✅&lt;/g-emoji&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="right"&gt;&lt;a href="https://hosted.weblate.org/engage/sonic-pi/" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/fe5746a40cfef02a956f84ee54093fee9d840908/68747470733a2f2f686f737465642e7765626c6174652e6f72672f776964676574732f736f6e69632d70692f68752f7376672d62616467652e737667" alt="Translation Status of Sonic Pi: hu" data-canonical-src="https://hosted.weblate.org/widgets/sonic-pi/hu/svg-badge.svg" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/td&gt;
&lt;td align="left"&gt;Hungarian&lt;/td&gt;
&lt;td align="center"&gt;&lt;g-emoji class="g-emoji" alias="white_check_mark" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/2705.png"&gt;✅&lt;/g-emoji&gt;&lt;/td&gt;
&lt;td align="center"&gt;&lt;g-emoji class="g-emoji" alias="red_circle" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f534.png"&gt;🔴&lt;/g-emoji&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="right"&gt;&lt;a href="https://hosted.weblate.org/engage/sonic-pi/" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/ddf7c5589600466f7c25692f8329e645a0beec92/68747470733a2f2f686f737465642e7765626c6174652e6f72672f776964676574732f736f6e69632d70692f69732f7376672d62616467652e737667" alt="Translation Status of Sonic Pi: is" data-canonical-src="https://hosted.weblate.org/widgets/sonic-pi/is/svg-badge.svg" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/td&gt;
&lt;td align="left"&gt;Icelandic&lt;/td&gt;
&lt;td align="center"&gt;&lt;g-emoji class="g-emoji" alias="white_check_mark" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/2705.png"&gt;✅&lt;/g-emoji&gt;&lt;/td&gt;
&lt;td align="center"&gt;&lt;g-emoji class="g-emoji" alias="red_circle" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f534.png"&gt;🔴&lt;/g-emoji&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="right"&gt;&lt;a href="https://hosted.weblate.org/engage/sonic-pi/" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/8f20f5c560f4504780865056508bc2b3d5c65146/68747470733a2f2f686f737465642e7765626c6174652e6f72672f776964676574732f736f6e69632d70692f69742f7376672d62616467652e737667" alt="Translation Status of Sonic Pi: it" data-canonical-src="https://hosted.weblate.org/widgets/sonic-pi/it/svg-badge.svg" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/td&gt;
&lt;td align="left"&gt;Italian&lt;/td&gt;
&lt;td align="center"&gt;&lt;g-emoji class="g-emoji" alias="white_check_mark" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/2705.png"&gt;✅&lt;/g-emoji&gt;&lt;/td&gt;
&lt;td align="center"&gt;&lt;g-emoji class="g-emoji" alias="white_check_mark" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/2705.png"&gt;✅&lt;/g-emoji&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="right"&gt;&lt;a href="https://hosted.weblate.org/engage/sonic-pi/" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/a27212f98089d78996ab068787daaefeafd66c6e/68747470733a2f2f686f737465642e7765626c6174652e6f72672f776964676574732f736f6e69632d70692f6a612f7376672d62616467652e737667" alt="Translation Status of Sonic Pi: ja" data-canonical-src="https://hosted.weblate.org/widgets/sonic-pi/ja/svg-badge.svg" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/td&gt;
&lt;td align="left"&gt;Japanese&lt;/td&gt;
&lt;td align="center"&gt;&lt;g-emoji class="g-emoji" alias="white_check_mark" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/2705.png"&gt;✅&lt;/g-emoji&gt;&lt;/td&gt;
&lt;td align="center"&gt;&lt;g-emoji class="g-emoji" alias="white_check_mark" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/2705.png"&gt;✅&lt;/g-emoji&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="right"&gt;&lt;a href="https://hosted.weblate.org/engage/sonic-pi/" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/02ec8f1fc57a275422cbccc4f38fb7d4f99e86e2/68747470733a2f2f686f737465642e7765626c6174652e6f72672f776964676574732f736f6e69632d70692f6e622f7376672d62616467652e737667" alt="Translation Status of Sonic Pi: nb" data-canonical-src="https://hosted.weblate.org/widgets/sonic-pi/nb/svg-badge.svg" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/td&gt;
&lt;td align="left"&gt;Norwegian Bokmål&lt;/td&gt;
&lt;td align="center"&gt;&lt;g-emoji class="g-emoji" alias="white_check_mark" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/2705.png"&gt;✅&lt;/g-emoji&gt;&lt;/td&gt;
&lt;td align="center"&gt;&lt;g-emoji class="g-emoji" alias="white_check_mark" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/2705.png"&gt;✅&lt;/g-emoji&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="right"&gt;&lt;a href="https://hosted.weblate.org/engage/sonic-pi/" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/bdb9a213e54b93f8400d6be46b4cb8b6800eb8df/68747470733a2f2f686f737465642e7765626c6174652e6f72672f776964676574732f736f6e69632d70692f706c2f7376672d62616467652e737667" alt="Translation Status of Sonic Pi: pl" data-canonical-src="https://hosted.weblate.org/widgets/sonic-pi/pl/svg-badge.svg" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/td&gt;
&lt;td align="left"&gt;Polish&lt;/td&gt;
&lt;td align="center"&gt;&lt;g-emoji class="g-emoji" alias="white_check_mark" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/2705.png"&gt;✅&lt;/g-emoji&gt;&lt;/td&gt;
&lt;td align="center"&gt;&lt;g-emoji class="g-emoji" alias="white_check_mark" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/2705.png"&gt;✅&lt;/g-emoji&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="right"&gt;&lt;a href="https://hosted.weblate.org/engage/sonic-pi/" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/e9e4ad2da0dcc2e2c0b05aa0c2ee0b46e3793394/68747470733a2f2f686f737465642e7765626c6174652e6f72672f776964676574732f736f6e69632d70692f70742f7376672d62616467652e737667" alt="Translation Status of Sonic Pi: pt" data-canonical-src="https://hosted.weblate.org/widgets/sonic-pi/pt/svg-badge.svg" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/td&gt;
&lt;td align="left"&gt;Portuguese&lt;/td&gt;
&lt;td align="center"&gt;&lt;g-emoji class="g-emoji" alias="red_circle" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f534.png"&gt;🔴&lt;/g-emoji&gt;&lt;/td&gt;
&lt;td align="center"&gt;&lt;g-emoji class="g-emoji" alias="white_check_mark" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/2705.png"&gt;✅&lt;/g-emoji&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="right"&gt;&lt;a href="https://hosted.weblate.org/engage/sonic-pi/" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/4fc621377c3ad74542007a72d31e873d354ded6b/68747470733a2f2f686f737465642e7765626c6174652e6f72672f776964676574732f736f6e69632d70692f726f2f7376672d62616467652e737667" alt="Translation Status of Sonic Pi: ro" data-canonical-src="https://hosted.weblate.org/widgets/sonic-pi/ro/svg-badge.svg" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/td&gt;
&lt;td align="left"&gt;Romanian&lt;/td&gt;
&lt;td align="center"&gt;&lt;g-emoji class="g-emoji" alias="white_check_mark" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/2705.png"&gt;✅&lt;/g-emoji&gt;&lt;/td&gt;
&lt;td align="center"&gt;&lt;g-emoji class="g-emoji" alias="white_check_mark" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/2705.png"&gt;✅&lt;/g-emoji&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="right"&gt;&lt;a href="https://hosted.weblate.org/engage/sonic-pi/" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/fc83d26161911d96135fa4d404f0bcbd82dd0330/68747470733a2f2f686f737465642e7765626c6174652e6f72672f776964676574732f736f6e69632d70692f72752f7376672d62616467652e737667" alt="Translation Status of Sonic Pi: ru" data-canonical-src="https://hosted.weblate.org/widgets/sonic-pi/ru/svg-badge.svg" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/td&gt;
&lt;td align="left"&gt;Russian&lt;/td&gt;
&lt;td align="center"&gt;&lt;g-emoji class="g-emoji" alias="white_check_mark" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/2705.png"&gt;✅&lt;/g-emoji&gt;&lt;/td&gt;
&lt;td align="center"&gt;&lt;g-emoji class="g-emoji" alias="white_check_mark" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/2705.png"&gt;✅&lt;/g-emoji&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="right"&gt;&lt;a href="https://hosted.weblate.org/engage/sonic-pi/" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/99a930330b712af6ec06b721fe27e3b0027e32a6/68747470733a2f2f686f737465642e7765626c6174652e6f72672f776964676574732f736f6e69632d70692f7a685f48616e732f7376672d62616467652e737667" alt="Translation Status of Sonic Pi: zh_Hans" data-canonical-src="https://hosted.weblate.org/widgets/sonic-pi/zh_Hans/svg-badge.svg" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/td&gt;
&lt;td align="left"&gt;Simplified Chinese&lt;/td&gt;
&lt;td align="center"&gt;&lt;g-emoji class="g-emoji" alias="white_check_mark" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/2705.png"&gt;✅&lt;/g-emoji&gt;&lt;/td&gt;
&lt;td align="center"&gt;&lt;g-emoji class="g-emoji" alias="red_circle" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f534.png"&gt;🔴&lt;/g-emoji&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="right"&gt;&lt;a href="https://hosted.weblate.org/engage/sonic-pi/" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/3d23a1d53dc50b10486a3075d57a3ca4db9f6e7d/68747470733a2f2f686f737465642e7765626c6174652e6f72672f776964676574732f736f6e69632d70692f65732f7376672d62616467652e737667" alt="Translation Status of Sonic Pi: es" data-canonical-src="https://hosted.weblate.org/widgets/sonic-pi/es/svg-badge.svg" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/td&gt;
&lt;td align="left"&gt;Spanish&lt;/td&gt;
&lt;td align="center"&gt;&lt;g-emoji class="g-emoji" alias="white_check_mark" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/2705.png"&gt;✅&lt;/g-emoji&gt;&lt;/td&gt;
&lt;td align="center"&gt;&lt;g-emoji class="g-emoji" alias="white_check_mark" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/2705.png"&gt;✅&lt;/g-emoji&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;Would you like to contribute a translation too? If so, please take a look at our &lt;a href="https://github.com/samaaron/sonic-pi/blob/master/TRANSLATION.md"&gt;translation docs&lt;/a&gt; to get started.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-information-for-developers" class="anchor" aria-hidden="true" href="#information-for-developers"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Information for developers&lt;/h2&gt;
&lt;p&gt;Sonic Pi is under active development, and welcomes new contributors:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="HOW-TO-CONTRIBUTE.md"&gt;How to contribute&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="CHANGELOG.md"&gt;Change log&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="COMMUNITY.md"&gt;Community&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="CONTRIBUTORS.md"&gt;Contributors&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="INSTALL.md"&gt;Installation&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="LICENSE.md"&gt;License&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="TESTING.md"&gt;Testing&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="TRANSLATION.md"&gt;Translation&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;a href="https://hosted.weblate.org/engage/sonic-pi/" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/3f039f33d12fab0b99c7f9b3fb49fe18b5abef5b/68747470733a2f2f686f737465642e7765626c6174652e6f72672f776964676574732f736f6e69632d70692f2d2f7376672d62616467652e737667" alt="Weblate" data-canonical-src="https://hosted.weblate.org/widgets/sonic-pi/-/svg-badge.svg" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;br&gt;
&lt;a href="https://travis-ci.org/samaaron/sonic-pi" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/02b638cc4e9fb42b520d84feb63d2a6862e8834e/68747470733a2f2f7472617669732d63692e6f72672f73616d6161726f6e2f736f6e69632d70692e7376673f6272616e63683d6d6173746572" alt="Travis CI" data-canonical-src="https://travis-ci.org/samaaron/sonic-pi.svg?branch=master" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;br&gt;
&lt;a href="https://gitter.im/samaaron/sonic-pi?utm_source=badge&amp;amp;utm_medium=badge&amp;amp;utm_campaign=pr-badge&amp;amp;utm_content=badge" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/da2edb525cde1455a622c58c0effc3a90b9a181c/68747470733a2f2f6261646765732e6769747465722e696d2f4a6f696e253230436861742e737667" alt="Gitter" data-canonical-src="https://badges.gitter.im/Join%20Chat.svg" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;/article&gt;&lt;/div&gt;</description><author>samaaron</author><guid isPermaLink="false">https://github.com/samaaron/sonic-pi</guid><pubDate>Fri, 01 Nov 2019 00:00:00 GMT</pubDate></item><item><title>Shopify/liquid #11 in Ruby, This week</title><link>https://github.com/Shopify/liquid</link><description>&lt;p&gt;&lt;i&gt;Liquid markup language. Safe, customer facing template language for flexible web apps. &lt;/i&gt;&lt;/p&gt;&lt;div id="readme" class="instapaper_body md" data-path="README.md"&gt;&lt;article class="markdown-body entry-content p-5" itemprop="text"&gt;&lt;p&gt;&lt;a href="http://travis-ci.org/Shopify/liquid" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/754dd3bf3595313d1f23523364819eb35ec0b10a/68747470733a2f2f6170692e7472617669732d63692e6f72672f53686f706966792f6c69717569642e7376673f6272616e63683d6d6173746572" alt="Build Status" data-canonical-src="https://api.travis-ci.org/Shopify/liquid.svg?branch=master" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="http://inch-ci.org/github/Shopify/liquid" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/7d60357955956824f3cb9739b190ca1dca8e209e/687474703a2f2f696e63682d63692e6f72672f6769746875622f53686f706966792f6c69717569642e7376673f6272616e63683d6d6173746572" alt="Inline docs" data-canonical-src="http://inch-ci.org/github/Shopify/liquid.svg?branch=master" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h1&gt;&lt;a id="user-content-liquid-template-engine" class="anchor" aria-hidden="true" href="#liquid-template-engine"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Liquid template engine&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="CONTRIBUTING.md"&gt;Contributing guidelines&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="History.md"&gt;Version history&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://docs.shopify.com/themes/liquid-basics" rel="nofollow"&gt;Liquid documentation from Shopify&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/Shopify/liquid/wiki"&gt;Liquid Wiki at GitHub&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://liquidmarkup.org/" rel="nofollow"&gt;Website&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-introduction" class="anchor" aria-hidden="true" href="#introduction"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Introduction&lt;/h2&gt;
&lt;p&gt;Liquid is a template engine which was written with very specific requirements:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;It has to have beautiful and simple markup. Template engines which don't produce good looking markup are no fun to use.&lt;/li&gt;
&lt;li&gt;It needs to be non evaling and secure. Liquid templates are made so that users can edit them. You don't want to run code on your server which your users wrote.&lt;/li&gt;
&lt;li&gt;It has to be stateless. Compile and render steps have to be separate so that the expensive parsing and compiling can be done once and later on you can just render it passing in a hash with local variables and objects.&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-why-you-should-use-liquid" class="anchor" aria-hidden="true" href="#why-you-should-use-liquid"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Why you should use Liquid&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;You want to allow your users to edit the appearance of your application but don't want them to run &lt;strong&gt;insecure code on your server&lt;/strong&gt;.&lt;/li&gt;
&lt;li&gt;You want to render templates directly from the database.&lt;/li&gt;
&lt;li&gt;You like smarty (PHP) style template engines.&lt;/li&gt;
&lt;li&gt;You need a template engine which does HTML just as well as emails.&lt;/li&gt;
&lt;li&gt;You don't like the markup of your current templating engine.&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-what-does-it-look-like" class="anchor" aria-hidden="true" href="#what-does-it-look-like"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;What does it look like?&lt;/h2&gt;
&lt;div class="highlight highlight-text-html-basic"&gt;&lt;pre&gt;&amp;lt;&lt;span class="pl-ent"&gt;ul&lt;/span&gt; &lt;span class="pl-e"&gt;id&lt;/span&gt;=&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;products&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;&amp;gt;
  {% for product in products %}
    &amp;lt;&lt;span class="pl-ent"&gt;li&lt;/span&gt;&amp;gt;
      &amp;lt;&lt;span class="pl-ent"&gt;h2&lt;/span&gt;&amp;gt;{{ product.name }}&amp;lt;/&lt;span class="pl-ent"&gt;h2&lt;/span&gt;&amp;gt;
      Only {{ product.price | price }}

      {{ product.description | prettyprint | paragraph }}
    &amp;lt;/&lt;span class="pl-ent"&gt;li&lt;/span&gt;&amp;gt;
  {% endfor %}
&amp;lt;/&lt;span class="pl-ent"&gt;ul&lt;/span&gt;&amp;gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h2&gt;&lt;a id="user-content-how-to-use-liquid" class="anchor" aria-hidden="true" href="#how-to-use-liquid"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;How to use Liquid&lt;/h2&gt;
&lt;p&gt;Install Liquid by adding &lt;code&gt;gem 'liquid'&lt;/code&gt; to your gemfile.&lt;/p&gt;
&lt;p&gt;Liquid supports a very simple API based around the Liquid::Template class.
For standard use you can just pass it the content of a file and call render with a parameters hash.&lt;/p&gt;
&lt;div class="highlight highlight-source-ruby"&gt;&lt;pre&gt;&lt;span class="pl-smi"&gt;@template&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;Liquid&lt;/span&gt;::&lt;span class="pl-c1"&gt;Template&lt;/span&gt;.parse(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;hi {{name}}&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;) &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; Parses and compiles the template&lt;/span&gt;
&lt;span class="pl-smi"&gt;@template&lt;/span&gt;.render(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;name&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt; =&amp;gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;tobi&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;)                &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; =&amp;gt; "hi tobi"&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h3&gt;&lt;a id="user-content-error-modes" class="anchor" aria-hidden="true" href="#error-modes"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Error Modes&lt;/h3&gt;
&lt;p&gt;Setting the error mode of Liquid lets you specify how strictly you want your templates to be interpreted.
Normally the parser is very lax and will accept almost anything without error. Unfortunately this can make
it very hard to debug and can lead to unexpected behaviour.&lt;/p&gt;
&lt;p&gt;Liquid also comes with a stricter parser that can be used when editing templates to give better error messages
when templates are invalid. You can enable this new parser like this:&lt;/p&gt;
&lt;div class="highlight highlight-source-ruby"&gt;&lt;pre&gt;&lt;span class="pl-c1"&gt;Liquid&lt;/span&gt;::&lt;span class="pl-c1"&gt;Template&lt;/span&gt;.error_mode &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;:strict&lt;/span&gt; &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; Raises a SyntaxError when invalid syntax is used&lt;/span&gt;
&lt;span class="pl-c1"&gt;Liquid&lt;/span&gt;::&lt;span class="pl-c1"&gt;Template&lt;/span&gt;.error_mode &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;:warn&lt;/span&gt; &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; Adds errors to template.errors but continues as normal&lt;/span&gt;
&lt;span class="pl-c1"&gt;Liquid&lt;/span&gt;::&lt;span class="pl-c1"&gt;Template&lt;/span&gt;.error_mode &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;:lax&lt;/span&gt; &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; The default mode, accepts almost anything.&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;If you want to set the error mode only on specific templates you can pass &lt;code&gt;:error_mode&lt;/code&gt; as an option to &lt;code&gt;parse&lt;/code&gt;:&lt;/p&gt;
&lt;div class="highlight highlight-source-ruby"&gt;&lt;pre&gt;&lt;span class="pl-c1"&gt;Liquid&lt;/span&gt;::&lt;span class="pl-c1"&gt;Template&lt;/span&gt;.parse(source, &lt;span class="pl-c1"&gt;:error_mode&lt;/span&gt; =&amp;gt; &lt;span class="pl-c1"&gt;:strict&lt;/span&gt;)&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;This is useful for doing things like enabling strict mode only in the theme editor.&lt;/p&gt;
&lt;p&gt;It is recommended that you enable &lt;code&gt;:strict&lt;/code&gt; or &lt;code&gt;:warn&lt;/code&gt; mode on new apps to stop invalid templates from being created.
It is also recommended that you use it in the template editors of existing apps to give editors better error messages.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-undefined-variables-and-filters" class="anchor" aria-hidden="true" href="#undefined-variables-and-filters"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Undefined variables and filters&lt;/h3&gt;
&lt;p&gt;By default, the renderer doesn't raise or in any other way notify you if some variables or filters are missing, i.e. not passed to the &lt;code&gt;render&lt;/code&gt; method.
You can improve this situation by passing &lt;code&gt;strict_variables: true&lt;/code&gt; and/or &lt;code&gt;strict_filters: true&lt;/code&gt; options to the &lt;code&gt;render&lt;/code&gt; method.
When one of these options is set to true, all errors about undefined variables and undefined filters will be stored in &lt;code&gt;errors&lt;/code&gt; array of a &lt;code&gt;Liquid::Template&lt;/code&gt; instance.
Here are some examples:&lt;/p&gt;
&lt;div class="highlight highlight-source-ruby"&gt;&lt;pre&gt;template &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;Liquid&lt;/span&gt;::&lt;span class="pl-c1"&gt;Template&lt;/span&gt;.parse(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;{{x}} {{y}} {{z.a}} {{z.b}}&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
template.render({ &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;x&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt; =&amp;gt; &lt;span class="pl-c1"&gt;1&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;z&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt; =&amp;gt; { &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;a&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt; =&amp;gt; &lt;span class="pl-c1"&gt;2&lt;/span&gt; } }, { &lt;span class="pl-c1"&gt;strict_variables:&lt;/span&gt; &lt;span class="pl-c1"&gt;true&lt;/span&gt; })
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt;=&amp;gt; '1  2 ' # when a variable is undefined, it's rendered as nil&lt;/span&gt;
template.errors
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt;=&amp;gt; [#&amp;lt;Liquid::UndefinedVariable: Liquid error: undefined variable y&amp;gt;, #&amp;lt;Liquid::UndefinedVariable: Liquid error: undefined variable b&amp;gt;]&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;div class="highlight highlight-source-ruby"&gt;&lt;pre&gt;template &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;Liquid&lt;/span&gt;::&lt;span class="pl-c1"&gt;Template&lt;/span&gt;.parse(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;{{x | filter1 | upcase}}&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
template.render({ &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;x&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt; =&amp;gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;foo&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt; }, { &lt;span class="pl-c1"&gt;strict_filters:&lt;/span&gt; &lt;span class="pl-c1"&gt;true&lt;/span&gt; })
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt;=&amp;gt; '' # when at least one filter in the filter chain is undefined, a whole expression is rendered as nil&lt;/span&gt;
template.errors
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt;=&amp;gt; [#&amp;lt;Liquid::UndefinedFilter: Liquid error: undefined filter filter1&amp;gt;]&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;If you want to raise on a first exception instead of pushing all of them in &lt;code&gt;errors&lt;/code&gt;, you can use &lt;code&gt;render!&lt;/code&gt; method:&lt;/p&gt;
&lt;div class="highlight highlight-source-ruby"&gt;&lt;pre&gt;template &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;Liquid&lt;/span&gt;::&lt;span class="pl-c1"&gt;Template&lt;/span&gt;.parse(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;{{x}} {{y}}&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
template.render!({ &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;x&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt; =&amp;gt; &lt;span class="pl-c1"&gt;1&lt;/span&gt;}, { &lt;span class="pl-c1"&gt;strict_variables:&lt;/span&gt; &lt;span class="pl-c1"&gt;true&lt;/span&gt; })
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt;=&amp;gt; Liquid::UndefinedVariable: Liquid error: undefined variable y&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h3&gt;&lt;a id="user-content-usage-tracking" class="anchor" aria-hidden="true" href="#usage-tracking"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Usage tracking&lt;/h3&gt;
&lt;p&gt;To help track usages of a feature or code path in production, we have released opt-in usage tracking. To enable this, we provide an empty &lt;code&gt;Liquid:: Usage.increment&lt;/code&gt; method which you can customize to your needs. The feature is well suited to &lt;a href="https://github.com/Shopify/statsd-instrument"&gt;https://github.com/Shopify/statsd-instrument&lt;/a&gt;. However, the choice of implementation is up to you.&lt;/p&gt;
&lt;p&gt;Once you have enabled usage tracking, we recommend reporting any events through Github Issues that your system may be logging. It is highly likely this event has been added to consider deprecating or improving code specific to this event, so please raise any concerns.&lt;/p&gt;
&lt;/article&gt;&lt;/div&gt;</description><author>Shopify</author><guid isPermaLink="false">https://github.com/Shopify/liquid</guid><pubDate>Fri, 01 Nov 2019 00:00:00 GMT</pubDate></item><item><title>jeremyevans/sequel #12 in Ruby, This week</title><link>https://github.com/jeremyevans/sequel</link><description>&lt;p&gt;&lt;i&gt;Sequel: The Database Toolkit for Ruby&lt;/i&gt;&lt;/p&gt;&lt;div id="readme" class="instapaper_body rdoc" data-path="README.rdoc"&gt;&lt;article class="markdown-body entry-content p-5" itemprop="text"&gt;
&lt;h2&gt;&lt;a id="user-content-sequel-the-database-toolkit-for-ruby" class="anchor" aria-hidden="true" href="#sequel-the-database-toolkit-for-ruby"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Sequel: The Database Toolkit for Ruby&lt;/h2&gt;

&lt;p&gt;Sequel is a simple, flexible, and powerful SQL database access toolkit for
Ruby.&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;
&lt;p&gt;Sequel provides thread safety, connection pooling and a concise DSL for
constructing SQL queries and table schemas.&lt;/p&gt;
&lt;/li&gt;&lt;li&gt;
&lt;p&gt;Sequel includes a comprehensive ORM layer for mapping records to Ruby
objects and handling associated records.&lt;/p&gt;
&lt;/li&gt;&lt;li&gt;
&lt;p&gt;Sequel supports advanced database features such as prepared statements,
bound variables, savepoints, two-phase commit, transaction isolation,
primary/replica configurations, and database sharding.&lt;/p&gt;
&lt;/li&gt;&lt;li&gt;
&lt;p&gt;Sequel currently has adapters for ADO, Amalgalite,  IBM_DB, JDBC, MySQL,
Mysql2, ODBC, Oracle, PostgreSQL, SQLAnywhere, SQLite3, and TinyTDS.&lt;/p&gt;
&lt;/li&gt;&lt;/ul&gt;

&lt;h2&gt;&lt;a id="user-content-resources" class="anchor" aria-hidden="true" href="#resources"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Resources&lt;/h2&gt;
&lt;table&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td&gt;&lt;p&gt;Website &lt;/p&gt;&lt;/td&gt;
&lt;td&gt;
&lt;p&gt;&lt;a href="http://sequel.jeremyevans.net" rel="nofollow"&gt;sequel.jeremyevans.net&lt;/a&gt;&lt;/p&gt;
&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;&lt;p&gt;RDoc Documentation &lt;/p&gt;&lt;/td&gt;
&lt;td&gt;
&lt;p&gt;&lt;a href="http://sequel.jeremyevans.net/rdoc" rel="nofollow"&gt;sequel.jeremyevans.net/rdoc&lt;/a&gt;&lt;/p&gt;
&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;&lt;p&gt;Source Code &lt;/p&gt;&lt;/td&gt;
&lt;td&gt;
&lt;p&gt;&lt;a href="https://github.com/jeremyevans/sequel"&gt;github.com/jeremyevans/sequel&lt;/a&gt;&lt;/p&gt;
&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;&lt;p&gt;Bug tracking (GitHub Issues) &lt;/p&gt;&lt;/td&gt;
&lt;td&gt;
&lt;p&gt;&lt;a href="http://github.com/jeremyevans/sequel/issues"&gt;github.com/jeremyevans/sequel/issues&lt;/a&gt;&lt;/p&gt;
&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;&lt;p&gt;Discussion Forum (sequel-talk Google Group) &lt;/p&gt;&lt;/td&gt;
&lt;td&gt;
&lt;p&gt;&lt;a href="http://groups.google.com/group/sequel-talk" rel="nofollow"&gt;groups.google.com/group/sequel-talk&lt;/a&gt;&lt;/p&gt;
&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;&lt;p&gt;IRC Channel (#sequel) &lt;/p&gt;&lt;/td&gt;
&lt;td&gt;
&lt;p&gt;irc://irc.freenode.net/sequel&lt;/p&gt;
&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;

&lt;p&gt;If you have questions about how to use Sequel, please ask on the
sequel-talk Google Group or IRC.  Only use the the bug tracker to report
bugs in Sequel, not to ask for help on using Sequel.&lt;/p&gt;

&lt;p&gt;To check out the source code:&lt;/p&gt;

&lt;pre&gt;git clone git://github.com/jeremyevans/sequel.git&lt;/pre&gt;

&lt;h3&gt;&lt;a id="user-content-contact" class="anchor" aria-hidden="true" href="#contact"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Contact&lt;/h3&gt;

&lt;p&gt;If you have any comments or suggestions please post to the Google group.&lt;/p&gt;

&lt;h2&gt;&lt;a id="user-content-installation" class="anchor" aria-hidden="true" href="#installation"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Installation&lt;/h2&gt;

&lt;pre&gt;gem install sequel&lt;/pre&gt;

&lt;h2&gt;&lt;a id="user-content-a-short-example" class="anchor" aria-hidden="true" href="#a-short-example"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;A Short Example&lt;/h2&gt;

&lt;pre&gt;require 'sequel'

DB = Sequel.sqlite # memory database, requires sqlite3

DB.create_table :items do
  primary_key :id
  String :name
  Float :price
end

items = DB[:items] # Create a dataset

# Populate the table
items.insert(:name =&amp;gt; 'abc', :price =&amp;gt; rand * 100)
items.insert(:name =&amp;gt; 'def', :price =&amp;gt; rand * 100)
items.insert(:name =&amp;gt; 'ghi', :price =&amp;gt; rand * 100)

# Print out the number of records
puts "Item count: #{items.count}"

# Print out the average price
puts "The average price is: #{items.avg(:price)}"&lt;/pre&gt;

&lt;h2&gt;&lt;a id="user-content-the-sequel-console" class="anchor" aria-hidden="true" href="#the-sequel-console"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;The Sequel Console&lt;/h2&gt;

&lt;p&gt;Sequel includes an IRB console for quick access to databases (usually
referred to as &lt;tt&gt;bin/sequel&lt;/tt&gt;). You can use it like this:&lt;/p&gt;

&lt;pre&gt;sequel sqlite://test.db # test.db in current directory&lt;/pre&gt;

&lt;p&gt;You get an IRB session with the Sequel::Database object stored in DB.&lt;/p&gt;

&lt;p&gt;In addition to providing an IRB shell (the default behavior), bin/sequel
also has support for migrating databases, dumping schema migrations, and
copying databases.  See the bin/sequel guide for more details.&lt;/p&gt;

&lt;h2&gt;&lt;a id="user-content-an-introduction" class="anchor" aria-hidden="true" href="#an-introduction"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;An Introduction&lt;/h2&gt;

&lt;p&gt;Sequel is designed to take the hassle away from connecting to databases and
manipulating them. Sequel deals with all the boring stuff like maintaining
connections, formatting SQL correctly and fetching records so you can
concentrate on your application.&lt;/p&gt;

&lt;p&gt;Sequel uses the concept of datasets to retrieve data. A Dataset object
encapsulates an SQL query and supports chainability, letting you fetch data
using a convenient Ruby DSL that is both concise and flexible.&lt;/p&gt;

&lt;p&gt;For example, the following one-liner returns the average GDP for countries
in the middle east region:&lt;/p&gt;

&lt;pre&gt;DB[:countries].where(:region =&amp;gt; 'Middle East').avg(:GDP)&lt;/pre&gt;

&lt;p&gt;Which is equivalent to:&lt;/p&gt;

&lt;pre&gt;SELECT avg(GDP) FROM countries WHERE region = 'Middle East'&lt;/pre&gt;

&lt;p&gt;Since datasets retrieve records only when needed, they can be stored and
later reused. Records are fetched as hashes, and are accessed using an
&lt;tt&gt;Enumerable&lt;/tt&gt; interface:&lt;/p&gt;

&lt;pre&gt;middle_east = DB[:countries].where(:region =&amp;gt; 'Middle East')
middle_east.order(:name).each{|r| puts r[:name]}&lt;/pre&gt;

&lt;p&gt;Sequel also offers convenience methods for extracting data from Datasets,
such as an extended &lt;tt&gt;map&lt;/tt&gt; method:&lt;/p&gt;

&lt;pre&gt;middle_east.map(:name) # =&amp;gt; ['Egypt', 'Turkey', 'Israel', ...]
middle_east.map([:id, :name]) # =&amp;gt; [[1, 'Egypt'], [3, 'Turkey'], [2, 'Israel'], ...]&lt;/pre&gt;

&lt;p&gt;Or getting results as a hash via &lt;tt&gt;as_hash&lt;/tt&gt;, with one column as key
and another as value:&lt;/p&gt;

&lt;pre&gt;middle_east.as_hash(:name, :area) # =&amp;gt; {'Israel' =&amp;gt; 20000, 'Turkey' =&amp;gt; 120000, ...}&lt;/pre&gt;

&lt;h2&gt;&lt;a id="user-content-getting-started" class="anchor" aria-hidden="true" href="#getting-started"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Getting Started&lt;/h2&gt;

&lt;h3&gt;&lt;a id="user-content-connecting-to-a-database" class="anchor" aria-hidden="true" href="#connecting-to-a-database"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Connecting to a database&lt;/h3&gt;

&lt;p&gt;To connect to a database you simply provide &lt;tt&gt;Sequel.connect&lt;/tt&gt; with a
URL:&lt;/p&gt;

&lt;pre&gt;require 'sequel'
DB = Sequel.connect('sqlite://blog.db') # requires sqlite3&lt;/pre&gt;

&lt;p&gt;The connection URL can also include such stuff as the user name, password,
and port:&lt;/p&gt;

&lt;pre&gt;DB = Sequel.connect('postgres://user:password@host:port/database_name') # requires pg&lt;/pre&gt;

&lt;p&gt;You can also specify optional parameters, such as the connection pool size,
or loggers for logging SQL queries:&lt;/p&gt;

&lt;pre&gt;DB = Sequel.connect("postgres://user:password@host:port/database_name",
  max_connections: 10, logger: Logger.new('log/db.log'))&lt;/pre&gt;

&lt;p&gt;It is also possible to use a hash instead of a connection URL, but make
sure to include the :adapter option in this case:&lt;/p&gt;

&lt;pre&gt;DB = Sequel.connect(adapter: :postgres, user: 'user', password: 'password', host: 'host', port: port,
  database: 'database_name', max_connections: 10, logger: Logger.new('log/db.log'))&lt;/pre&gt;

&lt;p&gt;You can specify a block to connect, which will disconnect from the database
after it completes:&lt;/p&gt;

&lt;pre&gt;Sequel.connect('postgres://user:password@host:port/database_name'){|db| db[:posts].delete}&lt;/pre&gt;

&lt;h3&gt;&lt;a id="user-content-the-db-convention" class="anchor" aria-hidden="true" href="#the-db-convention"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;The DB convention&lt;/h3&gt;

&lt;p&gt;Throughout Sequel's documentation, you will see the &lt;tt&gt;DB&lt;/tt&gt;
constant used to refer to the Sequel::Database instance you create. This
reflects the recommendation that for an app with a single Sequel::Database
instance, the Sequel convention is to store the instance in the &lt;tt&gt;DB&lt;/tt&gt;
constant.  This is just a convention, it's not required, but it is
recommended.&lt;/p&gt;

&lt;p&gt;Note that some frameworks that use Sequel may create the Sequel::Database
instance for you, and you might not know how to access it.  In most cases,
you can access the Sequel::Database instance through
&lt;tt&gt;Sequel::Model.db&lt;/tt&gt;.&lt;/p&gt;

&lt;h3&gt;&lt;a id="user-content-arbitrary-sql-queries" class="anchor" aria-hidden="true" href="#arbitrary-sql-queries"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Arbitrary SQL queries&lt;/h3&gt;

&lt;p&gt;You can execute arbitrary SQL code using &lt;tt&gt;Database#run&lt;/tt&gt;:&lt;/p&gt;

&lt;pre&gt;DB.run("create table t (a text, b text)")
DB.run("insert into t values ('a', 'b')")&lt;/pre&gt;

&lt;p&gt;You can also create datasets based on raw SQL:&lt;/p&gt;

&lt;pre&gt;dataset = DB['select id from items']
dataset.count # will return the number of records in the result set
dataset.map(:id) # will return an array containing all values of the id column in the result set&lt;/pre&gt;

&lt;p&gt;You can also fetch records with raw SQL through the dataset:&lt;/p&gt;

&lt;pre&gt;DB['select * from items'].each do |row|
  p row
end&lt;/pre&gt;

&lt;p&gt;You can use placeholders in your SQL string as well:&lt;/p&gt;

&lt;pre&gt;name = 'Jim'
DB['select * from items where name = ?', name].each do |row|
  p row
end&lt;/pre&gt;

&lt;h3&gt;&lt;a id="user-content-getting-dataset-instances" class="anchor" aria-hidden="true" href="#getting-dataset-instances"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Getting Dataset Instances&lt;/h3&gt;

&lt;p&gt;Datasets are the primary way records are retrieved and manipulated.  They
are generally created via the &lt;tt&gt;Database#from&lt;/tt&gt; or
&lt;tt&gt;Database#[]&lt;/tt&gt; methods:&lt;/p&gt;

&lt;pre&gt;posts = DB.from(:posts)
posts = DB[:posts] # same&lt;/pre&gt;

&lt;p&gt;Datasets will only fetch records when you tell them to. They can be
manipulated to filter records, change ordering, join tables, etc.. 
Datasets are always frozen, and they safe to use by multiple threads
concurrently.&lt;/p&gt;

&lt;h3&gt;&lt;a id="user-content-retrieving-records" class="anchor" aria-hidden="true" href="#retrieving-records"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Retrieving Records&lt;/h3&gt;

&lt;p&gt;You can retrieve all records by using the &lt;tt&gt;all&lt;/tt&gt; method:&lt;/p&gt;

&lt;pre&gt;posts.all
# SELECT * FROM posts&lt;/pre&gt;

&lt;p&gt;The &lt;tt&gt;all&lt;/tt&gt; method returns an array of hashes, where each hash
corresponds to a record.&lt;/p&gt;

&lt;p&gt;You can also iterate through records one at a time using &lt;tt&gt;each&lt;/tt&gt;:&lt;/p&gt;

&lt;pre&gt;posts.each{|row| p row}&lt;/pre&gt;

&lt;p&gt;Or perform more advanced stuff:&lt;/p&gt;

&lt;pre&gt;names_and_dates = posts.map([:name, :date])
old_posts, recent_posts = posts.partition{|r| r[:date] &amp;lt; Date.today - 7}&lt;/pre&gt;

&lt;p&gt;You can also retrieve the first record in a dataset:&lt;/p&gt;

&lt;pre&gt;posts.order(:id).first
# SELECT * FROM posts ORDER BY id LIMIT 1&lt;/pre&gt;

&lt;p&gt;Note that you can get the first record in a dataset even if it isn't
ordered:&lt;/p&gt;

&lt;pre&gt;posts.first
# SELECT * FROM posts LIMIT 1&lt;/pre&gt;

&lt;p&gt;If the dataset is ordered, you can also ask for the last record:&lt;/p&gt;

&lt;pre&gt;posts.order(:stamp).last
# SELECT * FROM posts ORDER BY stamp DESC LIMIT 1&lt;/pre&gt;

&lt;p&gt;You can also provide a filter when asking for a single record:&lt;/p&gt;

&lt;pre&gt;posts.first(:id =&amp;gt; 1)
# SELECT * FROM posts WHERE id = 1 LIMIT 1&lt;/pre&gt;

&lt;p&gt;Or retrieve a single value for a specific record:&lt;/p&gt;

&lt;pre&gt;posts.where(:id =&amp;gt; 1).get(:name)
# SELECT name FROM posts WHERE id = 1 LIMIT 1&lt;/pre&gt;

&lt;h3&gt;&lt;a id="user-content-filtering-records" class="anchor" aria-hidden="true" href="#filtering-records"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Filtering Records&lt;/h3&gt;

&lt;p&gt;The most common way to filter records is to provide a hash of values to
match to &lt;tt&gt;where&lt;/tt&gt;:&lt;/p&gt;

&lt;pre&gt;my_posts = posts.where(category: 'ruby', author: 'david')
# WHERE ((category = 'ruby') AND (author = 'david'))&lt;/pre&gt;

&lt;p&gt;You can also specify ranges:&lt;/p&gt;

&lt;pre&gt;my_posts = posts.where(stamp: (Date.today - 14)..(Date.today - 7))
# WHERE ((stamp &amp;gt;= '2010-06-30') AND (stamp &amp;lt;= '2010-07-07'))&lt;/pre&gt;

&lt;p&gt;Or arrays of values:&lt;/p&gt;

&lt;pre&gt;my_posts = posts.where(category: ['ruby', 'postgres', 'linux'])
# WHERE (category IN ('ruby', 'postgres', 'linux'))&lt;/pre&gt;

&lt;p&gt;By passing a block to where, you can use expressions (this is fairly
“magical”):&lt;/p&gt;

&lt;pre&gt;my_posts = posts.where{stamp &amp;gt; Date.today &amp;lt;&amp;lt; 1}
# WHERE (stamp &amp;gt; '2010-06-14')
my_posts = posts.where{stamp =~ Date.today}
# WHERE (stamp = '2010-07-14')&lt;/pre&gt;

&lt;p&gt;If you want to wrap the objects yourself, you can use expressions without
the “magic”:&lt;/p&gt;

&lt;pre&gt;my_posts = posts.where(Sequel[:stamp] &amp;gt; Date.today &amp;lt;&amp;lt; 1)
# WHERE (stamp &amp;gt; '2010-06-14')
my_posts = posts.where(Sequel[:stamp] =~ Date.today)
# WHERE (stamp = '2010-07-14')&lt;/pre&gt;

&lt;p&gt;Some databases such as PostgreSQL and MySQL also support filtering via
Regexps:&lt;/p&gt;

&lt;pre&gt;my_posts = posts.where(category: /ruby/i)
# WHERE (category ~* 'ruby')&lt;/pre&gt;

&lt;p&gt;You can also use an inverse filter via &lt;tt&gt;exclude&lt;/tt&gt;:&lt;/p&gt;

&lt;pre&gt;my_posts = posts.exclude(category: ['ruby', 'postgres', 'linux'])
# WHERE (category NOT IN ('ruby', 'postgres', 'linux'))&lt;/pre&gt;

&lt;p&gt;But note that this does a full inversion of the filter:&lt;/p&gt;

&lt;pre&gt;my_posts = posts.exclude(category: ['ruby', 'postgres', 'linux'], id: 1)
# WHERE ((category NOT IN ('ruby', 'postgres', 'linux')) OR (id != 1))&lt;/pre&gt;

&lt;p&gt;If at any point you want to use a custom SQL fragment for part of a query,
you can do so via &lt;tt&gt;Sequel.lit&lt;/tt&gt;:&lt;/p&gt;

&lt;pre&gt;posts.where(Sequel.lit('stamp IS NOT NULL'))
# WHERE (stamp IS NOT NULL)&lt;/pre&gt;

&lt;p&gt;You can safely interpolate parameters into the custom SQL fragment by
providing them as additional arguments:&lt;/p&gt;

&lt;pre&gt;author_name = 'JKR'
posts.where(Sequel.lit('(stamp &amp;lt; ?) AND (author != ?)', Date.today - 3, author_name))
# WHERE ((stamp &amp;lt; '2010-07-11') AND (author != 'JKR'))&lt;/pre&gt;

&lt;p&gt;Datasets can also be used as subqueries:&lt;/p&gt;

&lt;pre&gt;DB[:items].where(Sequel[:price] &amp;gt; DB[:items].select{avg(price) + 100})
# WHERE (price &amp;gt; (SELECT avg(price) + 100 FROM items))&lt;/pre&gt;

&lt;p&gt;After filtering, you can retrieve the matching records by using any of the
retrieval methods:&lt;/p&gt;

&lt;pre&gt;my_posts.each{|row| p row}&lt;/pre&gt;

&lt;p&gt;See the Dataset Filtering
file for more details.&lt;/p&gt;

&lt;h3&gt;&lt;a id="user-content-security" class="anchor" aria-hidden="true" href="#security"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Security&lt;/h3&gt;

&lt;p&gt;Designing apps with security in mind is a best practice. Please read the Security Guide for details on
security issues that you should be aware of when using Sequel.&lt;/p&gt;

&lt;h3&gt;&lt;a id="user-content-summarizing-records" class="anchor" aria-hidden="true" href="#summarizing-records"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Summarizing Records&lt;/h3&gt;

&lt;p&gt;Counting records is easy using &lt;tt&gt;count&lt;/tt&gt;:&lt;/p&gt;

&lt;pre&gt;posts.where(Sequel.like(:category, '%ruby%')).count
# SELECT COUNT(*) FROM posts WHERE (category LIKE '%ruby%' ESCAPE '\')&lt;/pre&gt;

&lt;p&gt;And you can also query maximum/minimum values via &lt;tt&gt;max&lt;/tt&gt; and
&lt;tt&gt;min&lt;/tt&gt;:&lt;/p&gt;

&lt;pre&gt;max = DB[:history].max(:value)
# SELECT max(value) FROM history

min = DB[:history].min(:value)
# SELECT min(value) FROM history&lt;/pre&gt;

&lt;p&gt;Or calculate a sum or average via &lt;tt&gt;sum&lt;/tt&gt; and &lt;tt&gt;avg&lt;/tt&gt;:&lt;/p&gt;

&lt;pre&gt;sum = DB[:items].sum(:price)
# SELECT sum(price) FROM items
avg = DB[:items].avg(:price)
# SELECT avg(price) FROM items&lt;/pre&gt;

&lt;h3&gt;&lt;a id="user-content-ordering-records" class="anchor" aria-hidden="true" href="#ordering-records"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Ordering Records&lt;/h3&gt;

&lt;p&gt;Ordering datasets is simple using &lt;tt&gt;order&lt;/tt&gt;:&lt;/p&gt;

&lt;pre&gt;posts.order(:stamp)
# ORDER BY stamp
posts.order(:stamp, :name)
# ORDER BY stamp, name&lt;/pre&gt;

&lt;p&gt;&lt;tt&gt;order&lt;/tt&gt; always overrides the existing order:&lt;/p&gt;

&lt;pre&gt;posts.order(:stamp).order(:name)
# ORDER BY name&lt;/pre&gt;

&lt;p&gt;If you would like to add to the existing order, use &lt;tt&gt;order_append&lt;/tt&gt;
or &lt;tt&gt;order_prepend&lt;/tt&gt;:&lt;/p&gt;

&lt;pre&gt;posts.order(:stamp).order_append(:name)
# ORDER BY stamp, name
posts.order(:stamp).order_prepend(:name)
# ORDER BY name, stamp&lt;/pre&gt;

&lt;p&gt;You can also specify descending order:&lt;/p&gt;

&lt;pre&gt;posts.reverse_order(:stamp)
# ORDER BY stamp DESC
posts.order(Sequel.desc(:stamp))
# ORDER BY stamp DESC&lt;/pre&gt;

&lt;h3&gt;&lt;a id="user-content-core-extensions" class="anchor" aria-hidden="true" href="#core-extensions"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Core Extensions&lt;/h3&gt;

&lt;p&gt;Note the use of &lt;tt&gt;Sequel.desc(:stamp)&lt;/tt&gt; in the above example.  Much of
Sequel's DSL uses this style, calling methods on the Sequel module that
return SQL expression objects.  Sequel also ships with a core_extensions extension that
integrates Sequel's DSL better into the Ruby language, allowing you to
write:&lt;/p&gt;

&lt;pre&gt;:stamp.desc&lt;/pre&gt;

&lt;p&gt;instead of:&lt;/p&gt;

&lt;pre&gt;Sequel.desc(:stamp)&lt;/pre&gt;

&lt;h3&gt;&lt;a id="user-content-selecting-columns" class="anchor" aria-hidden="true" href="#selecting-columns"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Selecting Columns&lt;/h3&gt;

&lt;p&gt;Selecting specific columns to be returned is also simple using
&lt;tt&gt;select&lt;/tt&gt;:&lt;/p&gt;

&lt;pre&gt;posts.select(:stamp)
# SELECT stamp FROM posts
posts.select(:stamp, :name)
# SELECT stamp, name FROM posts&lt;/pre&gt;

&lt;p&gt;Like &lt;tt&gt;order&lt;/tt&gt;, &lt;tt&gt;select&lt;/tt&gt; overrides an existing selection:&lt;/p&gt;

&lt;pre&gt;posts.select(:stamp).select(:name)
# SELECT name FROM posts&lt;/pre&gt;

&lt;p&gt;As you might expect, there is an &lt;tt&gt;order_append&lt;/tt&gt; equivalent for
&lt;tt&gt;select&lt;/tt&gt; called &lt;tt&gt;select_append&lt;/tt&gt;:&lt;/p&gt;

&lt;pre&gt;posts.select(:stamp).select_append(:name)
# SELECT stamp, name FROM posts&lt;/pre&gt;

&lt;h3&gt;&lt;a id="user-content-deleting-records" class="anchor" aria-hidden="true" href="#deleting-records"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Deleting Records&lt;/h3&gt;

&lt;p&gt;Deleting records from the table is done with &lt;tt&gt;delete&lt;/tt&gt;:&lt;/p&gt;

&lt;pre&gt;posts.where(Sequel[:stamp] &amp;lt; Date.today - 3).delete
# DELETE FROM posts WHERE (stamp &amp;lt; '2010-07-11')&lt;/pre&gt;

&lt;p&gt;Be very careful when deleting, as &lt;tt&gt;delete&lt;/tt&gt; affects all rows in the
dataset. Call &lt;tt&gt;where&lt;/tt&gt; first and &lt;tt&gt;delete&lt;/tt&gt; second:&lt;/p&gt;

&lt;pre&gt;# DO THIS:
posts.where(Sequel[:stamp] &amp;lt; Date.today - 7).delete
# NOT THIS:
posts.delete.where(Sequel[:stamp] &amp;lt; Date.today - 7)&lt;/pre&gt;

&lt;h3&gt;&lt;a id="user-content-inserting-records" class="anchor" aria-hidden="true" href="#inserting-records"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Inserting Records&lt;/h3&gt;

&lt;p&gt;Inserting records into the table is done with &lt;tt&gt;insert&lt;/tt&gt;:&lt;/p&gt;

&lt;pre&gt;posts.insert(category: 'ruby', author: 'david')
# INSERT INTO posts (category, author) VALUES ('ruby', 'david')&lt;/pre&gt;

&lt;h3&gt;&lt;a id="user-content-updating-records" class="anchor" aria-hidden="true" href="#updating-records"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Updating Records&lt;/h3&gt;

&lt;p&gt;Updating records in the table is done with &lt;tt&gt;update&lt;/tt&gt;:&lt;/p&gt;

&lt;pre&gt;posts.where(Sequel[:stamp] &amp;lt; Date.today - 7).update(state: 'archived')
# UPDATE posts SET state = 'archived' WHERE (stamp &amp;lt; '2010-07-07')&lt;/pre&gt;

&lt;p&gt;You can provide arbitrary expressions when choosing what values to set:&lt;/p&gt;

&lt;pre&gt;posts.where(Sequel[:stamp] &amp;lt; Date.today - 7).update(backup_number: Sequel[:backup_number] + 1)
# UPDATE posts SET backup_number = (backup_number + 1) WHERE (stamp &amp;lt; '2010-07-07'))))&lt;/pre&gt;

&lt;p&gt;As with &lt;tt&gt;delete&lt;/tt&gt;, &lt;tt&gt;update&lt;/tt&gt; affects all rows in the dataset,
so &lt;tt&gt;where&lt;/tt&gt; first, &lt;tt&gt;update&lt;/tt&gt; second:&lt;/p&gt;

&lt;pre&gt;# DO THIS:
posts.where(Sequel[:stamp] &amp;lt; Date.today - 7).update(:state =&amp;gt; 'archived')
# NOT THIS:
posts.update(:state =&amp;gt; 'archived').where(Sequel[:stamp] &amp;lt; Date.today - 7)&lt;/pre&gt;

&lt;h3&gt;&lt;a id="user-content-transactions" class="anchor" aria-hidden="true" href="#transactions"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Transactions&lt;/h3&gt;

&lt;p&gt;You can wrap a block of code in a database transaction using the
&lt;tt&gt;Database#transaction&lt;/tt&gt; method:&lt;/p&gt;

&lt;pre&gt;DB.transaction do
  # BEGIN
  posts.insert(category: 'ruby', author: 'david')
  # INSERT
  posts.where(Sequel[:stamp] &amp;lt; Date.today - 7).update(:state =&amp;gt; 'archived')
  # UPDATE 
end
# COMMIT&lt;/pre&gt;

&lt;p&gt;If the block does not raise an exception, the transaction will be
committed. If the block does raise an exception, the transaction will be
rolled back, and the exception will be reraised.  If you want to rollback
the transaction and not raise an exception outside the block, you can raise
the &lt;tt&gt;Sequel::Rollback&lt;/tt&gt; exception inside the block:&lt;/p&gt;

&lt;pre&gt;DB.transaction do
  # BEGIN
  posts.insert(:category =&amp;gt; 'ruby', :author =&amp;gt; 'david')
  # INSERT
  if posts.where('stamp &amp;lt; ?', Date.today - 7).update(:state =&amp;gt; 'archived') == 0
  # UPDATE 
    raise Sequel::Rollback
  end
end
# ROLLBACK&lt;/pre&gt;

&lt;h3&gt;&lt;a id="user-content-joining-tables" class="anchor" aria-hidden="true" href="#joining-tables"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Joining Tables&lt;/h3&gt;

&lt;p&gt;Sequel makes it easy to join tables:&lt;/p&gt;

&lt;pre&gt;order_items = DB[:items].join(:order_items, item_id: :id).where(order_id: 1234)
# SELECT * FROM items
# INNER JOIN order_items ON (order_items.item_id = items.id)
# WHERE (order_id = 1234)&lt;/pre&gt;

&lt;p&gt;The important thing to note here is that item_id is automatically qualified
with the table being joined, and id is automatically qualified with the
last table joined.&lt;/p&gt;

&lt;p&gt;You can then do anything you like with the dataset:&lt;/p&gt;

&lt;pre&gt;order_total = order_items.sum(:price)
# SELECT sum(price) FROM items
# INNER JOIN order_items ON (order_items.item_id = items.id)
# WHERE (order_id = 1234)&lt;/pre&gt;

&lt;p&gt;Note that the default selection in Sequel is &lt;tt&gt;*&lt;/tt&gt;, which includes all
columns in all joined tables.  Because Sequel returns results as a hash
keyed by column name symbols, if any tables have columns with the same
name, this will clobber the columns in the returned hash.  So when joining
you are usually going to want to change the selection using
&lt;tt&gt;select&lt;/tt&gt;, &lt;tt&gt;select_all&lt;/tt&gt;, and/or &lt;tt&gt;select_append&lt;/tt&gt;.&lt;/p&gt;

&lt;h2&gt;&lt;a id="user-content-column-references-in-sequel" class="anchor" aria-hidden="true" href="#column-references-in-sequel"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Column references in Sequel&lt;/h2&gt;

&lt;p&gt;Sequel expects column names to be specified using symbols. In addition,
returned hashes always use symbols as their keys. This allows you to freely
mix literal values and column references in many cases. For example, the
two following lines produce equivalent SQL:&lt;/p&gt;

&lt;pre&gt;items.where(x: 1)
# SELECT * FROM items WHERE (x = 1)
items.where(1 =&amp;gt; :x)
# SELECT * FROM items WHERE (1 = x)"&lt;/pre&gt;

&lt;p&gt;Ruby strings are generally treated as SQL strings:&lt;/p&gt;

&lt;pre&gt;items.where(x: 'x')
# SELECT * FROM items WHERE (x = 'x')&lt;/pre&gt;

&lt;h3&gt;&lt;a id="user-content-qualifying-identifiers-columntable-names" class="anchor" aria-hidden="true" href="#qualifying-identifiers-columntable-names"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Qualifying identifiers (column/table names)&lt;/h3&gt;

&lt;p&gt;An identifier in SQL is a name that represents a column, table, or schema.
The recommended way to qualify columns is to use &lt;tt&gt;Sequel[][]&lt;/tt&gt; or
&lt;tt&gt;Sequel.qualify&lt;/tt&gt;&lt;/p&gt;

&lt;pre&gt;Sequel[:table][:column]
Sequel.qualify(:table, :column)
# table.column&lt;/pre&gt;

&lt;p&gt;You can also qualify tables with schemas:&lt;/p&gt;

&lt;pre&gt;Sequel[:schema][:table]
# schema.table&lt;/pre&gt;

&lt;p&gt;or use multi-level qualification:&lt;/p&gt;

&lt;pre&gt;Sequel[:schema][:table][:column]
# schema.table.column&lt;/pre&gt;

&lt;h3&gt;&lt;a id="user-content-expression-aliases" class="anchor" aria-hidden="true" href="#expression-aliases"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Expression aliases&lt;/h3&gt;

&lt;p&gt;You can alias identifiers using  &lt;tt&gt;Sequel[].as&lt;/tt&gt; or
&lt;tt&gt;Sequel.as&lt;/tt&gt;:&lt;/p&gt;

&lt;pre&gt;Sequel[:column].as(:alias)
Sequel.as(:column, :alias)
# column AS alias&lt;/pre&gt;

&lt;p&gt;You can use the &lt;tt&gt;Sequel.as&lt;/tt&gt; method to alias arbitrary expressions,
not just identifiers:&lt;/p&gt;

&lt;pre&gt;Sequel.as(DB[:posts].select{max(id)}, :p)
# (SELECT max(id) FROM posts) AS p&lt;/pre&gt;

&lt;p&gt;And most Sequel expression objects support an &lt;tt&gt;as&lt;/tt&gt; method for
aliasing:&lt;/p&gt;

&lt;pre&gt;(Sequel[:column] + 2).as(:c_plus_2)
# (column + 2) AS c_plus_2&lt;/pre&gt;

&lt;h2&gt;&lt;a id="user-content-sequel-models" class="anchor" aria-hidden="true" href="#sequel-models"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Sequel Models&lt;/h2&gt;

&lt;p&gt;A model class wraps a dataset, and an instance of that class wraps a single
record in the dataset.&lt;/p&gt;

&lt;p&gt;Model classes are defined as regular Ruby classes inheriting from
&lt;tt&gt;Sequel::Model&lt;/tt&gt;:&lt;/p&gt;

&lt;pre&gt;DB = Sequel.connect('sqlite://blog.db')
class Post &amp;lt; Sequel::Model
end&lt;/pre&gt;

&lt;p&gt;When a model class is created, it parses the schema in the table from the
database, and automatically sets up accessor methods for all of the columns
in the table (Sequel::Model implements the active record pattern).&lt;/p&gt;

&lt;p&gt;Sequel model classes assume that the table name is an underscored plural of
the class name:&lt;/p&gt;

&lt;pre&gt;Post.table_name # =&amp;gt; :posts&lt;/pre&gt;

&lt;p&gt;You can explicitly set the table name or even the dataset used:&lt;/p&gt;

&lt;pre&gt;class Post &amp;lt; Sequel::Model(:my_posts); end
# or:
class Post &amp;lt; Sequel::Model(DB[:my_posts]); end&lt;/pre&gt;

&lt;p&gt;If you pass a symbol to the &lt;tt&gt;Sequel::Model&lt;/tt&gt; method, it assumes you
are referring to the table with the same name.  You can also call it with a
dataset, which will set the defaults for all retrievals for that model:&lt;/p&gt;

&lt;pre&gt;class Post &amp;lt; Sequel::Model(DB[:my_posts].where(category: 'ruby')); end
class Post &amp;lt; Sequel::Model(DB[:my_posts].select(:id, :name).order(:date)); end&lt;/pre&gt;

&lt;h3&gt;&lt;a id="user-content-model-instances" class="anchor" aria-hidden="true" href="#model-instances"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Model instances&lt;/h3&gt;

&lt;p&gt;Model instances are identified by a primary key.  Sequel queries the
database to determine the primary key for each model. The &lt;tt&gt;Model.[]&lt;/tt&gt;
method can be used to fetch records by their primary key:&lt;/p&gt;

&lt;pre&gt;post = Post[123]&lt;/pre&gt;

&lt;p&gt;The &lt;tt&gt;pk&lt;/tt&gt; method is used to retrieve the record's primary key
value:&lt;/p&gt;

&lt;pre&gt;post.pk # =&amp;gt; 123&lt;/pre&gt;

&lt;p&gt;If you want to override which column(s) to use as the primary key, you can
use &lt;tt&gt;set_primary_key&lt;/tt&gt;:&lt;/p&gt;

&lt;pre&gt;class Post &amp;lt; Sequel::Model
  set_primary_key [:category, :title]
end

post = Post['ruby', 'hello world']
post.pk # =&amp;gt; ['ruby', 'hello world']&lt;/pre&gt;

&lt;p&gt;You can also define a model class that does not have a primary key via
&lt;tt&gt;no_primary_key&lt;/tt&gt;, but then you lose the ability to easily update and
delete records:&lt;/p&gt;

&lt;pre&gt;Post.no_primary_key&lt;/pre&gt;

&lt;p&gt;A single model instance can also be fetched by specifying a condition:&lt;/p&gt;

&lt;pre&gt;post = Post.first(title: 'hello world')
post = Post.first{num_comments &amp;lt; 10}&lt;/pre&gt;

&lt;p&gt;The dataset for a model class returns rows of model instances instead of
plain hashes:&lt;/p&gt;

&lt;pre&gt;DB[:posts].first.class # =&amp;gt; Hash
Post.first.class # =&amp;gt; Post&lt;/pre&gt;

&lt;h3&gt;&lt;a id="user-content-acts-like-a-dataset" class="anchor" aria-hidden="true" href="#acts-like-a-dataset"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Acts like a dataset&lt;/h3&gt;

&lt;p&gt;A model class forwards many methods to the underlying dataset. This means
that you can use most of the &lt;tt&gt;Dataset&lt;/tt&gt; API to create customized
queries that return model instances, e.g.:&lt;/p&gt;

&lt;pre&gt;Post.where(category: 'ruby').each{|post| p post}&lt;/pre&gt;

&lt;p&gt;You can also manipulate the records in the dataset:&lt;/p&gt;

&lt;pre&gt;Post.where{num_comments &amp;lt; 7}.delete
Post.where(Sequel.like(:title, /ruby/)).update(category: 'ruby')&lt;/pre&gt;

&lt;h3&gt;&lt;a id="user-content-accessing-record-values" class="anchor" aria-hidden="true" href="#accessing-record-values"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Accessing record values&lt;/h3&gt;

&lt;p&gt;A model instance stores its values as a hash with column symbol keys, which
you can access directly via the &lt;tt&gt;values&lt;/tt&gt; method:&lt;/p&gt;

&lt;pre&gt;post.values # =&amp;gt; {:id =&amp;gt; 123, :category =&amp;gt; 'ruby', :title =&amp;gt; 'hello world'}&lt;/pre&gt;

&lt;p&gt;You can read the record values as object attributes, assuming the attribute
names are valid columns in the model's dataset:&lt;/p&gt;

&lt;pre&gt;post.id # =&amp;gt; 123
post.title # =&amp;gt; 'hello world'&lt;/pre&gt;

&lt;p&gt;If the record's attributes names are not valid columns in the
model's dataset (maybe because you used &lt;tt&gt;select_append&lt;/tt&gt; to add a
computed value column), you can use &lt;tt&gt;Model#[]&lt;/tt&gt; to access the values:&lt;/p&gt;

&lt;pre&gt;post[:id] # =&amp;gt; 123
post[:title] # =&amp;gt; 'hello world'&lt;/pre&gt;

&lt;p&gt;You can also modify record values using attribute setters or the
&lt;tt&gt;[]=&lt;/tt&gt; method.&lt;/p&gt;

&lt;pre&gt;post.title = 'hey there'
post[:title] = 'hey there'&lt;/pre&gt;

&lt;p&gt;That will just change the value for the object, it will not update the row
in the database.  To update the database row, call the &lt;tt&gt;save&lt;/tt&gt;
method:&lt;/p&gt;

&lt;pre&gt;post.save&lt;/pre&gt;

&lt;h3&gt;&lt;a id="user-content-mass-assignment" class="anchor" aria-hidden="true" href="#mass-assignment"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Mass assignment&lt;/h3&gt;

&lt;p&gt;You can also set the values for multiple columns in a single method call,
using one of the mass-assignment methods.  See the mass assignment guide for
details.  For example &lt;tt&gt;set&lt;/tt&gt; updates the model's column values
without saving:&lt;/p&gt;

&lt;pre&gt;post.set(title: 'hey there', updated_by: 'foo')&lt;/pre&gt;

&lt;p&gt;and &lt;tt&gt;update&lt;/tt&gt; updates the model's column values and then saves
the changes to the database:&lt;/p&gt;

&lt;pre&gt;post.update(title: 'hey there', updated_by: 'foo')&lt;/pre&gt;

&lt;h3&gt;&lt;a id="user-content-creating-new-records" class="anchor" aria-hidden="true" href="#creating-new-records"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Creating new records&lt;/h3&gt;

&lt;p&gt;New model instances can be created by calling &lt;tt&gt;Model.new&lt;/tt&gt;, which
returns a new model instance without updating the database:&lt;/p&gt;

&lt;pre&gt;post = Post.new(title: 'hello world')&lt;/pre&gt;

&lt;p&gt;You can save the record to the database later by calling &lt;tt&gt;save&lt;/tt&gt; on
the model instance:&lt;/p&gt;

&lt;pre&gt;post.save&lt;/pre&gt;

&lt;p&gt;If you want to create a new record and save it to the database at the same
time, you can use &lt;tt&gt;Model.create&lt;/tt&gt;:&lt;/p&gt;

&lt;pre&gt;post = Post.create(title: 'hello world')&lt;/pre&gt;

&lt;p&gt;You can also supply a block to &lt;tt&gt;Model.new&lt;/tt&gt; and
&lt;tt&gt;Model.create&lt;/tt&gt;:&lt;/p&gt;

&lt;pre&gt;post = Post.new do |p|
  p.title = 'hello world'
end

post = Post.create{|p| p.title = 'hello world'}&lt;/pre&gt;

&lt;h3&gt;&lt;a id="user-content-hooks" class="anchor" aria-hidden="true" href="#hooks"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Hooks&lt;/h3&gt;

&lt;p&gt;You can execute custom code when creating, updating, or deleting records by
defining hook methods. The &lt;tt&gt;before_create&lt;/tt&gt; and &lt;tt&gt;after_create&lt;/tt&gt;
hook methods wrap record creation. The &lt;tt&gt;before_update&lt;/tt&gt; and
&lt;tt&gt;after_update&lt;/tt&gt; hook methods wrap record updating. The
&lt;tt&gt;before_save&lt;/tt&gt; and &lt;tt&gt;after_save&lt;/tt&gt; hook methods wrap record
creation and updating. The &lt;tt&gt;before_destroy&lt;/tt&gt; and
&lt;tt&gt;after_destroy&lt;/tt&gt; hook methods wrap destruction. The
&lt;tt&gt;before_validation&lt;/tt&gt; and &lt;tt&gt;after_validation&lt;/tt&gt; hook methods wrap
validation. Example:&lt;/p&gt;

&lt;pre&gt;class Post &amp;lt; Sequel::Model
  def after_create
    super
    author.increase_post_count
  end

  def after_destroy
    super
    author.decrease_post_count
  end
end&lt;/pre&gt;

&lt;p&gt;Note the use of &lt;tt&gt;super&lt;/tt&gt; if you define your own hook methods.  Almost
all &lt;tt&gt;Sequel::Model&lt;/tt&gt; class and instance methods (not just hook
methods) can be overridden safely, but you have to make sure to call
&lt;tt&gt;super&lt;/tt&gt; when doing so, otherwise you risk breaking things.&lt;/p&gt;

&lt;p&gt;For the example above, you should probably use a database trigger if you
can.  Hooks can be used for data integrity, but they will only enforce that
integrity when you are modifying the database through model instances, and
even then they are often subject to race conditions.  It's best to use
database triggers and database constraints to enforce data integrity.&lt;/p&gt;

&lt;h3&gt;&lt;a id="user-content-deleting-records-1" class="anchor" aria-hidden="true" href="#deleting-records-1"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Deleting records&lt;/h3&gt;

&lt;p&gt;You can delete individual records by calling &lt;tt&gt;delete&lt;/tt&gt; or
&lt;tt&gt;destroy&lt;/tt&gt;. The only difference between the two methods is that
&lt;tt&gt;destroy&lt;/tt&gt; invokes &lt;tt&gt;before_destroy&lt;/tt&gt; and &lt;tt&gt;after_destroy&lt;/tt&gt;
hook methods, while &lt;tt&gt;delete&lt;/tt&gt; does not:&lt;/p&gt;

&lt;pre&gt;post.delete # =&amp;gt; bypasses hooks
post.destroy # =&amp;gt; runs hooks&lt;/pre&gt;

&lt;p&gt;Records can also be deleted en-masse by calling &lt;tt&gt;delete&lt;/tt&gt; and
&lt;tt&gt;destroy&lt;/tt&gt; on the model's dataset. As stated above, you can
specify filters for the deleted records:&lt;/p&gt;

&lt;pre&gt;Post.where(:category =&amp;gt; 32).delete # =&amp;gt; bypasses hooks
Post.where(:category =&amp;gt; 32).destroy # =&amp;gt; runs hooks&lt;/pre&gt;

&lt;p&gt;Please note that if &lt;tt&gt;destroy&lt;/tt&gt; is called, each record is deleted 
separately, but &lt;tt&gt;delete&lt;/tt&gt; deletes all matching records with a single 
SQL query.&lt;/p&gt;

&lt;h3&gt;&lt;a id="user-content-associations" class="anchor" aria-hidden="true" href="#associations"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Associations&lt;/h3&gt;

&lt;p&gt;Associations are used in order to specify relationships between model
classes that reflect relationships between tables in the database, which
are usually specified using foreign keys.  You specify model associations
via class methods:&lt;/p&gt;

&lt;pre&gt;class Post &amp;lt; Sequel::Model
  many_to_one :author
  one_to_many :comments
  one_to_one :first_comment, :class=&amp;gt;:Comment, :order=&amp;gt;:id
  many_to_many :tags
  one_through_one :first_tag, :class=&amp;gt;:Tag, :order=&amp;gt;:name, :right_key=&amp;gt;:tag_id
end&lt;/pre&gt;

&lt;p&gt;&lt;tt&gt;many_to_one&lt;/tt&gt; and &lt;tt&gt;one_to_one&lt;/tt&gt; create a getter and setter for
each model object:&lt;/p&gt;

&lt;pre&gt;post = Post.create(name: 'hi!')
post.author = Author.first(name: 'Sharon')
post.author&lt;/pre&gt;

&lt;p&gt;&lt;tt&gt;one_to_many&lt;/tt&gt; and &lt;tt&gt;many_to_many&lt;/tt&gt; create a getter method, a
method for adding an object to the association, a method for removing an
object from the association, and a method for removing all associated
objects from the association:&lt;/p&gt;

&lt;pre&gt;post = Post.create(name: 'hi!')
post.comments

comment = Comment.create(text: 'hi')
post.add_comment(comment)
post.remove_comment(comment)
post.remove_all_comments

tag = Tag.create(tag: 'interesting')
post.add_tag(tag)
post.remove_tag(tag)
post.remove_all_tags&lt;/pre&gt;

&lt;p&gt;Note that the remove_* and remove_all_* methods do not delete the object
from the database, they merely disassociate the associated object from the
receiver.&lt;/p&gt;

&lt;p&gt;All associations add a dataset method that can be used to further filter or
reorder the returned objects, or modify all of them:&lt;/p&gt;

&lt;pre&gt;# Delete all of this post's comments from the database
post.comments_dataset.destroy

# Return all tags related to this post with no subscribers, ordered by the tag's name
post.tags_dataset.where(subscribers: 0).order(:name).all&lt;/pre&gt;

&lt;h3&gt;&lt;a id="user-content-eager-loading" class="anchor" aria-hidden="true" href="#eager-loading"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Eager Loading&lt;/h3&gt;

&lt;p&gt;Associations can be eagerly loaded via &lt;tt&gt;eager&lt;/tt&gt; and the
&lt;tt&gt;:eager&lt;/tt&gt; association option. Eager loading is used when loading a
group of objects. It loads all associated objects for all of the current
objects in one query, instead of using a separate query to get the
associated objects for each current object. Eager loading requires that you
retrieve all model objects at once via &lt;tt&gt;all&lt;/tt&gt; (instead of
individually by &lt;tt&gt;each&lt;/tt&gt;). Eager loading can be cascaded, loading
association's associated objects.&lt;/p&gt;

&lt;pre&gt;class Person &amp;lt; Sequel::Model
  one_to_many :posts, :eager=&amp;gt;[:tags]
end

class Post &amp;lt; Sequel::Model
  many_to_one :person
  one_to_many :replies
  many_to_many :tags
end

class Tag &amp;lt; Sequel::Model
  many_to_many :posts
  many_to_many :replies
end

class Reply &amp;lt; Sequel::Model
  many_to_one :person
  many_to_one :post
  many_to_many :tags
end

# Eager loading via .eager
Post.eager(:person).all

# eager is a dataset method, so it works with filters/orders/limits/etc.
Post.where{topic &amp;gt; 'M'}.order(:date).limit(5).eager(:person).all

person = Person.first
# Eager loading via :eager (will eagerly load the tags for this person's posts)
person.posts

# These are equivalent
Post.eager(:person, :tags).all
Post.eager(:person).eager(:tags).all

# Cascading via .eager
Tag.eager(posts: :replies).all

# Will also grab all associated posts' tags (because of :eager)
Reply.eager(person: :posts).all

# No depth limit (other than memory/stack), and will also grab posts' tags
# Loads all people, their posts, their posts' tags, replies to those posts,
# the person for each reply, the tag for each reply, and all posts and
# replies that have that tag.  Uses a total of 8 queries.
Person.eager(posts: {replies: [:person, {tags: [:posts, :replies]}]}).all&lt;/pre&gt;

&lt;p&gt;In addition to using &lt;tt&gt;eager&lt;/tt&gt;, you can also use &lt;tt&gt;eager_graph&lt;/tt&gt;,
which will use a single query to get the object and all associated objects.
This may be necessary if you want to filter or order the result set based
on columns in associated tables.  It works with cascading as well, the API
is similar.  Note that using &lt;tt&gt;eager_graph&lt;/tt&gt; to eagerly load multiple
&lt;tt&gt;*_to_many&lt;/tt&gt; associations will cause the result set to be a cartesian
product, so you should be very careful with your filters when using it in
that case.&lt;/p&gt;

&lt;p&gt;You can dynamically customize the eagerly loaded dataset by using a proc. 
This proc is passed the dataset used for eager loading, and should return a
modified copy of that dataset:&lt;/p&gt;

&lt;pre&gt;# Eagerly load only replies containing 'foo'
Post.eager(replies: proc{|ds| ds.where(Sequel.like(text, '%foo%'))}).all&lt;/pre&gt;

&lt;p&gt;This also works when using &lt;tt&gt;eager_graph&lt;/tt&gt;, in which case the proc is
called with dataset to graph into the current dataset:&lt;/p&gt;

&lt;pre&gt;Post.eager_graph(replies: proc{|ds| ds.where(Sequel.like(text, '%foo%'))}).all&lt;/pre&gt;

&lt;p&gt;You can dynamically customize eager loads for both &lt;tt&gt;eager&lt;/tt&gt; and
&lt;tt&gt;eager_graph&lt;/tt&gt; while also cascading, by making the value a single
entry hash with the proc as a key, and the cascaded associations as the
value:&lt;/p&gt;

&lt;pre&gt;# Eagerly load only replies containing 'foo', and the person and tags for those replies
Post.eager(replies: {proc{|ds| ds.where(Sequel.like(text, '%foo%'))} =&amp;gt; [:person, :tags]}).all&lt;/pre&gt;

&lt;h3&gt;&lt;a id="user-content-joining-with-associations" class="anchor" aria-hidden="true" href="#joining-with-associations"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Joining with Associations&lt;/h3&gt;

&lt;p&gt;You can use the &lt;tt&gt;association_join&lt;/tt&gt; method to add a join to the
model's dataset based on the assocation:&lt;/p&gt;

&lt;pre&gt;Post.association_join(:author)
# SELECT * FROM posts
# INNER JOIN authors AS author ON (author.id = posts.author_id)&lt;/pre&gt;

&lt;p&gt;This comes with variants for different join types:&lt;/p&gt;

&lt;pre&gt;Post.association_left_join(:replies)
# SELECT * FROM posts
# LEFT JOIN replies ON (replies.post_id = posts.id)&lt;/pre&gt;

&lt;p&gt;Similar to the eager loading methods, you can use multiple associations and
nested associations:&lt;/p&gt;

&lt;pre&gt;Post.association_join(:author, replies: :person).all
# SELECT * FROM posts
# INNER JOIN authors AS author ON (author.id = posts.author_id)
# INNER JOIN replies ON (replies.post_id = posts.id)
# INNER JOIN people AS person ON (person.id = replies.person_id)&lt;/pre&gt;

&lt;h3&gt;&lt;a id="user-content-extending-the-underlying-dataset" class="anchor" aria-hidden="true" href="#extending-the-underlying-dataset"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Extending the underlying dataset&lt;/h3&gt;

&lt;p&gt;The recommended way to implement table-wide logic by defining methods on
the dataset using &lt;tt&gt;dataset_module&lt;/tt&gt;:&lt;/p&gt;

&lt;pre&gt;class Post &amp;lt; Sequel::Model
  dataset_module do
    def with_few_comments
      where{num_comments &amp;lt; 30}
    end

    def clean_boring
      with_few_comments.delete
    end
  end
end&lt;/pre&gt;

&lt;p&gt;This allows you to have access to your model API from filtered datasets as
well:&lt;/p&gt;

&lt;pre&gt;Post.where(category: 'ruby').clean_boring
# DELETE FROM posts WHERE ((category = 'ruby') AND (num_comments &amp;lt; 30))&lt;/pre&gt;

&lt;p&gt;Inside &lt;tt&gt;dataset_module&lt;/tt&gt; blocks, there are numerous methods that
support easy creation of dataset methods. Most of these methods are named
after the dataset methods themselves, such as &lt;tt&gt;select&lt;/tt&gt;,
&lt;tt&gt;order&lt;/tt&gt;, and &lt;tt&gt;group&lt;/tt&gt;:&lt;/p&gt;

&lt;pre&gt;class Post &amp;lt; Sequel::Model
  dataset_module do
    where(:with_few_comments, Sequel[:num_comments] &amp;lt; 30)
    select :with_title_and_date, :id, :title, :post_date
    order :by_post_date, :post_date
    limit :top10, 10
  end
end

Post.with_few_comments.with_title_and_date.by_post_date.top10
# SELECT id, title, post_date
# FROM posts
# ORDER BY post_date
# LIMIT 10&lt;/pre&gt;

&lt;p&gt;One advantage of using these methods inside dataset_module blocks, instead
of defining methods manually, is that the created methods will generally
cache the resulting values and result in better performance.&lt;/p&gt;

&lt;h3&gt;&lt;a id="user-content-model-validations" class="anchor" aria-hidden="true" href="#model-validations"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Model Validations&lt;/h3&gt;

&lt;p&gt;You can define a &lt;tt&gt;validate&lt;/tt&gt; method for your model, which
&lt;tt&gt;save&lt;/tt&gt; will check before attempting to save the model in the
database. If an attribute of the model isn't valid, you should add an
error message for that attribute to the model object's &lt;tt&gt;errors&lt;/tt&gt;.
If an object has any errors added by the validate method, &lt;tt&gt;save&lt;/tt&gt;
will raise an error by default:&lt;/p&gt;

&lt;pre&gt;class Post &amp;lt; Sequel::Model
  def validate
    super
    errors.add(:name, "can't be empty") if name.empty?
    errors.add(:written_on, "should be in the past") if written_on &amp;gt;= Time.now
  end
end&lt;/pre&gt;

&lt;h2&gt;&lt;a id="user-content-sequel-release-policy" class="anchor" aria-hidden="true" href="#sequel-release-policy"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Sequel Release Policy&lt;/h2&gt;

&lt;p&gt;New major versions of Sequel do not have a defined release policy, but
historically have occurred once ever few years.&lt;/p&gt;

&lt;p&gt;New minor versions of Sequel are released around once a month near the
start of the month.&lt;/p&gt;

&lt;p&gt;New tiny versions of Sequel are only released to address security issues or
regressions in the most current release.&lt;/p&gt;

&lt;h2&gt;&lt;a id="user-content-ruby-support-policy" class="anchor" aria-hidden="true" href="#ruby-support-policy"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Ruby Support Policy&lt;/h2&gt;

&lt;p&gt;Sequel fully supports the currently supported versions of Ruby (MRI) and
JRuby.  It may support unsupported versions of Ruby or JRuby, but such
support may be dropped in any minor version of keeping it becomes a support
issue.  The minimum Ruby version required to run the current version of
Sequel is 1.9.2.&lt;/p&gt;

&lt;h2&gt;&lt;a id="user-content-maintainer" class="anchor" aria-hidden="true" href="#maintainer"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Maintainer&lt;/h2&gt;

&lt;p&gt;Jeremy Evans &amp;lt;code@jeremyevans.net&amp;gt;&lt;/p&gt;
&lt;/article&gt;&lt;/div&gt;</description><author>jeremyevans</author><guid isPermaLink="false">https://github.com/jeremyevans/sequel</guid><pubDate>Fri, 01 Nov 2019 00:00:00 GMT</pubDate></item><item><title>github/explore #13 in Ruby, This week</title><link>https://github.com/github/explore</link><description>&lt;p&gt;&lt;i&gt;Community-curated topic and collection pages on GitHub&lt;/i&gt;&lt;/p&gt;&lt;div id="readme" class="instapaper_body md" data-path="README.md"&gt;&lt;article class="markdown-body entry-content p-5" itemprop="text"&gt;&lt;h1&gt;&lt;a id="user-content-github-explore" class="anchor" aria-hidden="true" href="#github-explore"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;GitHub Explore&lt;/h1&gt;
&lt;p&gt;This repository houses all of the community-curated content for GitHub Topics and Collections.&lt;/p&gt;
&lt;p&gt;&lt;a href="https://help.github.com/articles/about-topics/"&gt;Topics&lt;/a&gt; help you explore repositories in a particular subject area, learn more about that subject, and find projects to contribute to.&lt;/p&gt;
&lt;p&gt;&lt;a href="http://github.com/collections"&gt;Collections&lt;/a&gt; help you discover hand-picked repositories, developers, organizations, videos, and articles that share a common theme.&lt;/p&gt;
&lt;p&gt;If you want to suggest edits to an existing topic page or collection, or curate a new one, read our &lt;a href="CONTRIBUTING.md"&gt;contributing guide&lt;/a&gt; to get started. You can also &lt;a href="topics-todo.md"&gt;review a list of popular topics that need more context&lt;/a&gt; to get an idea of where to start.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-running-tests" class="anchor" aria-hidden="true" href="#running-tests"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Running tests&lt;/h2&gt;
&lt;p&gt;There are some lint tests in place to ensure each topic is formatted in the way we expect. Travis CI will run the tests automatically. If you want to run the tests yourself locally, you will need Ruby and Bundler installed.&lt;/p&gt;
&lt;p&gt;You can run the tests using:&lt;/p&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt;script/cibuild&lt;/pre&gt;&lt;/div&gt;
&lt;h2&gt;&lt;a id="user-content-licenses" class="anchor" aria-hidden="true" href="#licenses"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Licenses&lt;/h2&gt;
&lt;p&gt;Content is released under &lt;a href="https://creativecommons.org/licenses/by/4.0/" rel="nofollow"&gt;CC-BY-4.0&lt;/a&gt; which gives you permission to use content for almost any purpose (but does not grant you any trademark permissions). See &lt;a href="notices.md"&gt;notices&lt;/a&gt; for complete details, including attribution guidelines, contribution terms, and software and third-party licenses and permissions.&lt;/p&gt;
&lt;/article&gt;&lt;/div&gt;</description><author>github</author><guid isPermaLink="false">https://github.com/github/explore</guid><pubDate>Fri, 01 Nov 2019 00:00:00 GMT</pubDate></item><item><title>Netflix/fast_jsonapi #14 in Ruby, This week</title><link>https://github.com/Netflix/fast_jsonapi</link><description>&lt;p&gt;&lt;i&gt;A lightning fast JSON:API serializer for Ruby Objects.&lt;/i&gt;&lt;/p&gt;&lt;div id="readme" class="instapaper_body md" data-path="README.md"&gt;&lt;article class="markdown-body entry-content p-5" itemprop="text"&gt;&lt;h1&gt;&lt;a id="user-content-fast-json-api" class="anchor" aria-hidden="true" href="#fast-json-api"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Fast JSON API&lt;/h1&gt;
&lt;p&gt;&lt;a href="https://travis-ci.org/Netflix/fast_jsonapi" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/fc2aa7cae4aacb77ca35b562c0f77764ed4a60f1/68747470733a2f2f7472617669732d63692e6f72672f4e6574666c69782f666173745f6a736f6e6170692e7376673f6272616e63683d6d6173746572" alt="Build Status" data-canonical-src="https://travis-ci.org/Netflix/fast_jsonapi.svg?branch=master" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;A lightning fast &lt;a href="http://jsonapi.org/" rel="nofollow"&gt;JSON:API&lt;/a&gt; serializer for Ruby Objects.&lt;/p&gt;
&lt;h1&gt;&lt;a id="user-content-performance-comparison" class="anchor" aria-hidden="true" href="#performance-comparison"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Performance Comparison&lt;/h1&gt;
&lt;p&gt;We compare serialization times with Active Model Serializer as part of RSpec performance tests included on this library. We want to ensure that with every change on this library, serialization time is at least &lt;code&gt;25 times&lt;/code&gt; faster than Active Model Serializers on up to current benchmark of 1000 records. Please read the &lt;a href="https://github.com/Netflix/fast_jsonapi/blob/master/performance_methodology.md"&gt;performance document&lt;/a&gt; for any questions related to methodology.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-benchmark-times-for-250-records" class="anchor" aria-hidden="true" href="#benchmark-times-for-250-records"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Benchmark times for 250 records&lt;/h2&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt;$ rspec
Active Model Serializer serialized 250 records &lt;span class="pl-k"&gt;in&lt;/span&gt; 138.71 ms
Fast JSON API serialized 250 records &lt;span class="pl-k"&gt;in&lt;/span&gt; 3.01 ms&lt;/pre&gt;&lt;/div&gt;
&lt;h1&gt;&lt;a id="user-content-table-of-contents" class="anchor" aria-hidden="true" href="#table-of-contents"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Table of Contents&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="#features"&gt;Features&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#installation"&gt;Installation&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#usage"&gt;Usage&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="#rails-generator"&gt;Rails Generator&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#model-definition"&gt;Model Definition&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#serializer-definition"&gt;Serializer Definition&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#object-serialization"&gt;Object Serialization&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#compound-document"&gt;Compound Document&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#key-transforms"&gt;Key Transforms&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#collection-serialization"&gt;Collection Serialization&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#caching"&gt;Caching&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#params"&gt;Params&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#conditional-attributes"&gt;Conditional Attributes&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#conditional-relationships"&gt;Conditional Relationships&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#sparse-fieldsets"&gt;Sparse Fieldsets&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#using-helper-methods"&gt;Using helper methods&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="#contributing"&gt;Contributing&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-features" class="anchor" aria-hidden="true" href="#features"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Features&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Declaration syntax similar to Active Model Serializer&lt;/li&gt;
&lt;li&gt;Support for &lt;code&gt;belongs_to&lt;/code&gt;, &lt;code&gt;has_many&lt;/code&gt; and &lt;code&gt;has_one&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Support for compound documents (included)&lt;/li&gt;
&lt;li&gt;Optimized serialization of compound documents&lt;/li&gt;
&lt;li&gt;Caching&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-installation" class="anchor" aria-hidden="true" href="#installation"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Installation&lt;/h2&gt;
&lt;p&gt;Add this line to your application's Gemfile:&lt;/p&gt;
&lt;div class="highlight highlight-source-ruby"&gt;&lt;pre&gt;gem &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;fast_jsonapi&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Execute:&lt;/p&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt;$ bundle install&lt;/pre&gt;&lt;/div&gt;
&lt;h2&gt;&lt;a id="user-content-usage" class="anchor" aria-hidden="true" href="#usage"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Usage&lt;/h2&gt;
&lt;h3&gt;&lt;a id="user-content-rails-generator" class="anchor" aria-hidden="true" href="#rails-generator"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Rails Generator&lt;/h3&gt;
&lt;p&gt;You can use the bundled generator if you are using the library inside of
a Rails project:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;rails g serializer Movie name year
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;This will create a new serializer in &lt;code&gt;app/serializers/movie_serializer.rb&lt;/code&gt;&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-model-definition" class="anchor" aria-hidden="true" href="#model-definition"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Model Definition&lt;/h3&gt;
&lt;div class="highlight highlight-source-ruby"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;class&lt;/span&gt; &lt;span class="pl-en"&gt;Movie&lt;/span&gt;
  &lt;span class="pl-k"&gt;attr_accessor&lt;/span&gt; &lt;span class="pl-c1"&gt;:id&lt;/span&gt;, &lt;span class="pl-c1"&gt;:name&lt;/span&gt;, &lt;span class="pl-c1"&gt;:year&lt;/span&gt;, &lt;span class="pl-c1"&gt;:actor_ids&lt;/span&gt;, &lt;span class="pl-c1"&gt;:owner_id&lt;/span&gt;, &lt;span class="pl-c1"&gt;:movie_type_id&lt;/span&gt;
&lt;span class="pl-k"&gt;end&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h3&gt;&lt;a id="user-content-serializer-definition" class="anchor" aria-hidden="true" href="#serializer-definition"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Serializer Definition&lt;/h3&gt;
&lt;div class="highlight highlight-source-ruby"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;class&lt;/span&gt; &lt;span class="pl-en"&gt;MovieSerializer&lt;/span&gt;
  &lt;span class="pl-k"&gt;include&lt;/span&gt; &lt;span class="pl-c1"&gt;FastJsonapi&lt;/span&gt;::&lt;span class="pl-c1"&gt;ObjectSerializer&lt;/span&gt;
  set_type &lt;span class="pl-c1"&gt;:movie&lt;/span&gt;  &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; optional&lt;/span&gt;
  set_id &lt;span class="pl-c1"&gt;:owner_id&lt;/span&gt; &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; optional&lt;/span&gt;
  attributes &lt;span class="pl-c1"&gt;:name&lt;/span&gt;, &lt;span class="pl-c1"&gt;:year&lt;/span&gt;
  has_many &lt;span class="pl-c1"&gt;:actors&lt;/span&gt;
  belongs_to &lt;span class="pl-c1"&gt;:owner&lt;/span&gt;, &lt;span class="pl-c1"&gt;record_type:&lt;/span&gt; &lt;span class="pl-c1"&gt;:user&lt;/span&gt;
  belongs_to &lt;span class="pl-c1"&gt;:movie_type&lt;/span&gt;
&lt;span class="pl-k"&gt;end&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h3&gt;&lt;a id="user-content-sample-object" class="anchor" aria-hidden="true" href="#sample-object"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Sample Object&lt;/h3&gt;
&lt;div class="highlight highlight-source-ruby"&gt;&lt;pre&gt;movie &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;Movie&lt;/span&gt;.&lt;span class="pl-k"&gt;new&lt;/span&gt;
movie.id &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;232&lt;/span&gt;
movie.name &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;test movie&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;
movie.actor_ids &lt;span class="pl-k"&gt;=&lt;/span&gt; [&lt;span class="pl-c1"&gt;1&lt;/span&gt;, &lt;span class="pl-c1"&gt;2&lt;/span&gt;, &lt;span class="pl-c1"&gt;3&lt;/span&gt;]
movie.owner_id &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;3&lt;/span&gt;
movie.movie_type_id &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;1&lt;/span&gt;
movie&lt;/pre&gt;&lt;/div&gt;
&lt;h3&gt;&lt;a id="user-content-object-serialization" class="anchor" aria-hidden="true" href="#object-serialization"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Object Serialization&lt;/h3&gt;
&lt;h4&gt;&lt;a id="user-content-return-a-hash" class="anchor" aria-hidden="true" href="#return-a-hash"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Return a hash&lt;/h4&gt;
&lt;div class="highlight highlight-source-ruby"&gt;&lt;pre&gt;hash &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;MovieSerializer&lt;/span&gt;.&lt;span class="pl-k"&gt;new&lt;/span&gt;(movie).serializable_hash&lt;/pre&gt;&lt;/div&gt;
&lt;h4&gt;&lt;a id="user-content-return-serialized-json" class="anchor" aria-hidden="true" href="#return-serialized-json"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Return Serialized JSON&lt;/h4&gt;
&lt;div class="highlight highlight-source-ruby"&gt;&lt;pre&gt;json_string &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;MovieSerializer&lt;/span&gt;.&lt;span class="pl-k"&gt;new&lt;/span&gt;(movie).serialized_json&lt;/pre&gt;&lt;/div&gt;
&lt;h4&gt;&lt;a id="user-content-serialized-output" class="anchor" aria-hidden="true" href="#serialized-output"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Serialized Output&lt;/h4&gt;
&lt;div class="highlight highlight-source-json"&gt;&lt;pre&gt;{
  &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;data&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;: {
    &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;id&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;3&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;,
    &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;type&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;movie&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;,
    &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;attributes&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;: {
      &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;name&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;test movie&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;,
      &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;year&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;: &lt;span class="pl-c1"&gt;null&lt;/span&gt;
    },
    &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;relationships&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;: {
      &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;actors&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;: {
        &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;data&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;: [
          {
            &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;id&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;1&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;,
            &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;type&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;actor&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;
          },
          {
            &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;id&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;2&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;,
            &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;type&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;actor&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;
          }
        ]
      },
      &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;owner&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;: {
        &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;data&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;: {
          &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;id&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;3&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;,
          &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;type&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;user&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;
        }
      }
    }
  }
}
&lt;/pre&gt;&lt;/div&gt;
&lt;h3&gt;&lt;a id="user-content-key-transforms" class="anchor" aria-hidden="true" href="#key-transforms"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Key Transforms&lt;/h3&gt;
&lt;p&gt;By default fast_jsonapi underscores the key names. It supports the same key transforms that are supported by AMS. Here is the syntax of specifying a key transform&lt;/p&gt;
&lt;div class="highlight highlight-source-ruby"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;class&lt;/span&gt; &lt;span class="pl-en"&gt;MovieSerializer&lt;/span&gt;
  &lt;span class="pl-k"&gt;include&lt;/span&gt; &lt;span class="pl-c1"&gt;FastJsonapi&lt;/span&gt;::&lt;span class="pl-c1"&gt;ObjectSerializer&lt;/span&gt;
  &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; Available options :camel, :camel_lower, :dash, :underscore(default)&lt;/span&gt;
  set_key_transform &lt;span class="pl-c1"&gt;:camel&lt;/span&gt;
&lt;span class="pl-k"&gt;end&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Here are examples of how these options transform the keys&lt;/p&gt;
&lt;div class="highlight highlight-source-ruby"&gt;&lt;pre&gt;set_key_transform &lt;span class="pl-c1"&gt;:camel&lt;/span&gt; &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; "some_key" =&amp;gt; "SomeKey"&lt;/span&gt;
set_key_transform &lt;span class="pl-c1"&gt;:camel_lower&lt;/span&gt; &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; "some_key" =&amp;gt; "someKey"&lt;/span&gt;
set_key_transform &lt;span class="pl-c1"&gt;:dash&lt;/span&gt; &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; "some_key" =&amp;gt; "some-key"&lt;/span&gt;
set_key_transform &lt;span class="pl-c1"&gt;:underscore&lt;/span&gt; &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; "some_key" =&amp;gt; "some_key"&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h3&gt;&lt;a id="user-content-attributes" class="anchor" aria-hidden="true" href="#attributes"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Attributes&lt;/h3&gt;
&lt;p&gt;Attributes are defined in FastJsonapi using the &lt;code&gt;attributes&lt;/code&gt; method.  This method is also aliased as &lt;code&gt;attribute&lt;/code&gt;, which is useful when defining a single attribute.&lt;/p&gt;
&lt;p&gt;By default, attributes are read directly from the model property of the same name.  In this example, &lt;code&gt;name&lt;/code&gt; is expected to be a property of the object being serialized:&lt;/p&gt;
&lt;div class="highlight highlight-source-ruby"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;class&lt;/span&gt; &lt;span class="pl-en"&gt;MovieSerializer&lt;/span&gt;
  &lt;span class="pl-k"&gt;include&lt;/span&gt; &lt;span class="pl-c1"&gt;FastJsonapi&lt;/span&gt;::&lt;span class="pl-c1"&gt;ObjectSerializer&lt;/span&gt;

  attribute &lt;span class="pl-c1"&gt;:name&lt;/span&gt;
&lt;span class="pl-k"&gt;end&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Custom attributes that must be serialized but do not exist on the model can be declared using Ruby block syntax:&lt;/p&gt;
&lt;div class="highlight highlight-source-ruby"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;class&lt;/span&gt; &lt;span class="pl-en"&gt;MovieSerializer&lt;/span&gt;
  &lt;span class="pl-k"&gt;include&lt;/span&gt; &lt;span class="pl-c1"&gt;FastJsonapi&lt;/span&gt;::&lt;span class="pl-c1"&gt;ObjectSerializer&lt;/span&gt;

  attributes &lt;span class="pl-c1"&gt;:name&lt;/span&gt;, &lt;span class="pl-c1"&gt;:year&lt;/span&gt;

  attribute &lt;span class="pl-c1"&gt;:name_with_year&lt;/span&gt; &lt;span class="pl-k"&gt;do&lt;/span&gt; |&lt;span class="pl-smi"&gt;object&lt;/span&gt;|
    &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;span class="pl-pse"&gt;#{&lt;/span&gt;&lt;span class="pl-s1"&gt;object.name&lt;/span&gt;&lt;span class="pl-pse"&gt;}&lt;/span&gt; (&lt;span class="pl-pse"&gt;#{&lt;/span&gt;&lt;span class="pl-s1"&gt;object.year&lt;/span&gt;&lt;span class="pl-pse"&gt;}&lt;/span&gt;)&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;
  &lt;span class="pl-k"&gt;end&lt;/span&gt;
&lt;span class="pl-k"&gt;end&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;The block syntax can also be used to override the property on the object:&lt;/p&gt;
&lt;div class="highlight highlight-source-ruby"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;class&lt;/span&gt; &lt;span class="pl-en"&gt;MovieSerializer&lt;/span&gt;
  &lt;span class="pl-k"&gt;include&lt;/span&gt; &lt;span class="pl-c1"&gt;FastJsonapi&lt;/span&gt;::&lt;span class="pl-c1"&gt;ObjectSerializer&lt;/span&gt;

  attribute &lt;span class="pl-c1"&gt;:name&lt;/span&gt; &lt;span class="pl-k"&gt;do&lt;/span&gt; |&lt;span class="pl-smi"&gt;object&lt;/span&gt;|
    &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;span class="pl-pse"&gt;#{&lt;/span&gt;&lt;span class="pl-s1"&gt;object.name&lt;/span&gt;&lt;span class="pl-pse"&gt;}&lt;/span&gt; Part 2&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;
  &lt;span class="pl-k"&gt;end&lt;/span&gt;
&lt;span class="pl-k"&gt;end&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Attributes can also use a different name by passing the original method or accessor with a proc shortcut:&lt;/p&gt;
&lt;div class="highlight highlight-source-ruby"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;class&lt;/span&gt; &lt;span class="pl-en"&gt;MovieSerializer&lt;/span&gt;
  &lt;span class="pl-k"&gt;include&lt;/span&gt; &lt;span class="pl-c1"&gt;FastJsonapi&lt;/span&gt;::&lt;span class="pl-c1"&gt;ObjectSerializer&lt;/span&gt;

  attributes &lt;span class="pl-c1"&gt;:name&lt;/span&gt;

  attribute &lt;span class="pl-c1"&gt;:released_in_year&lt;/span&gt;, &lt;span class="pl-k"&gt;&amp;amp;&lt;/span&gt;&lt;span class="pl-c1"&gt;:year&lt;/span&gt;
&lt;span class="pl-k"&gt;end&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h3&gt;&lt;a id="user-content-links-per-object" class="anchor" aria-hidden="true" href="#links-per-object"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Links Per Object&lt;/h3&gt;
&lt;p&gt;Links are defined in FastJsonapi using the &lt;code&gt;link&lt;/code&gt; method. By default, links are read directly from the model property of the same name. In this example, &lt;code&gt;public_url&lt;/code&gt; is expected to be a property of the object being serialized.&lt;/p&gt;
&lt;p&gt;You can configure the method to use on the object for example a link with key &lt;code&gt;self&lt;/code&gt; will get set to the value returned by a method called &lt;code&gt;url&lt;/code&gt; on the movie object.&lt;/p&gt;
&lt;p&gt;You can also use a block to define a url as shown in &lt;code&gt;custom_url&lt;/code&gt;. You can access params in these blocks as well as shown in &lt;code&gt;personalized_url&lt;/code&gt;&lt;/p&gt;
&lt;div class="highlight highlight-source-ruby"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;class&lt;/span&gt; &lt;span class="pl-en"&gt;MovieSerializer&lt;/span&gt;
  &lt;span class="pl-k"&gt;include&lt;/span&gt; &lt;span class="pl-c1"&gt;FastJsonapi&lt;/span&gt;::&lt;span class="pl-c1"&gt;ObjectSerializer&lt;/span&gt;

  link &lt;span class="pl-c1"&gt;:public_url&lt;/span&gt;

  link &lt;span class="pl-c1"&gt;:self&lt;/span&gt;, &lt;span class="pl-c1"&gt;:url&lt;/span&gt;

  link &lt;span class="pl-c1"&gt;:custom_url&lt;/span&gt; &lt;span class="pl-k"&gt;do&lt;/span&gt; |&lt;span class="pl-smi"&gt;object&lt;/span&gt;|
    &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;http://movies.com/&lt;span class="pl-pse"&gt;#{&lt;/span&gt;&lt;span class="pl-s1"&gt;object.name&lt;/span&gt;&lt;span class="pl-pse"&gt;}&lt;/span&gt;-(&lt;span class="pl-pse"&gt;#{&lt;/span&gt;&lt;span class="pl-s1"&gt;object.year&lt;/span&gt;&lt;span class="pl-pse"&gt;}&lt;/span&gt;)&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;
  &lt;span class="pl-k"&gt;end&lt;/span&gt;

  link &lt;span class="pl-c1"&gt;:personalized_url&lt;/span&gt; &lt;span class="pl-k"&gt;do&lt;/span&gt; |&lt;span class="pl-smi"&gt;object&lt;/span&gt;, &lt;span class="pl-smi"&gt;params&lt;/span&gt;|
    &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;http://movies.com/&lt;span class="pl-pse"&gt;#{&lt;/span&gt;&lt;span class="pl-s1"&gt;object.name&lt;/span&gt;&lt;span class="pl-pse"&gt;}&lt;/span&gt;-&lt;span class="pl-pse"&gt;#{&lt;/span&gt;&lt;span class="pl-s1"&gt;params[&lt;span class="pl-c1"&gt;:user&lt;/span&gt;].reference_code&lt;/span&gt;&lt;span class="pl-pse"&gt;}&lt;/span&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;
  &lt;span class="pl-k"&gt;end&lt;/span&gt;
&lt;span class="pl-k"&gt;end&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h4&gt;&lt;a id="user-content-links-on-a-relationship" class="anchor" aria-hidden="true" href="#links-on-a-relationship"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Links on a Relationship&lt;/h4&gt;
&lt;p&gt;You can specify &lt;a href="http://jsonapi.org/format/#document-resource-object-relationships" rel="nofollow"&gt;relationship links&lt;/a&gt; by using the &lt;code&gt;links:&lt;/code&gt; option on the serializer. Relationship links in JSON API are useful if you want to load a parent document and then load associated documents later due to size constraints (see &lt;a href="http://jsonapi.org/format/#document-resource-object-related-resource-links" rel="nofollow"&gt;related resource links&lt;/a&gt;)&lt;/p&gt;
&lt;div class="highlight highlight-source-ruby"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;class&lt;/span&gt; &lt;span class="pl-en"&gt;MovieSerializer&lt;/span&gt;
  &lt;span class="pl-k"&gt;include&lt;/span&gt; &lt;span class="pl-c1"&gt;FastJsonapi&lt;/span&gt;::&lt;span class="pl-c1"&gt;ObjectSerializer&lt;/span&gt;

  has_many &lt;span class="pl-c1"&gt;:actors&lt;/span&gt;, &lt;span class="pl-c1"&gt;links:&lt;/span&gt; {
    &lt;span class="pl-c1"&gt;self:&lt;/span&gt; &lt;span class="pl-c1"&gt;:url&lt;/span&gt;,
    &lt;span class="pl-c1"&gt;related:&lt;/span&gt; &lt;span class="pl-c1"&gt;-&amp;gt;&lt;/span&gt; (object) {
      &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;https://movies.com/&lt;span class="pl-pse"&gt;#{&lt;/span&gt;&lt;span class="pl-s1"&gt;object.id&lt;/span&gt;&lt;span class="pl-pse"&gt;}&lt;/span&gt;/actors&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;
    }
  }
&lt;span class="pl-k"&gt;end&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;This will create a &lt;code&gt;self&lt;/code&gt; reference for the relationship, and a &lt;code&gt;related&lt;/code&gt; link for loading the actors relationship later. NB: This will not automatically disable loading the data in the relationship, you'll need to do that using the &lt;code&gt;lazy_load_data&lt;/code&gt; option:&lt;/p&gt;
&lt;div class="highlight highlight-source-ruby"&gt;&lt;pre&gt;  has_many &lt;span class="pl-c1"&gt;:actors&lt;/span&gt;, &lt;span class="pl-c1"&gt;lazy_load_data:&lt;/span&gt; &lt;span class="pl-c1"&gt;true&lt;/span&gt;, &lt;span class="pl-c1"&gt;links:&lt;/span&gt; {
    &lt;span class="pl-c1"&gt;self:&lt;/span&gt; &lt;span class="pl-c1"&gt;:url&lt;/span&gt;,
    &lt;span class="pl-c1"&gt;related:&lt;/span&gt; &lt;span class="pl-c1"&gt;-&amp;gt;&lt;/span&gt; (object) {
      &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;https://movies.com/&lt;span class="pl-pse"&gt;#{&lt;/span&gt;&lt;span class="pl-s1"&gt;object.id&lt;/span&gt;&lt;span class="pl-pse"&gt;}&lt;/span&gt;/actors&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;
    }
  }&lt;/pre&gt;&lt;/div&gt;
&lt;h3&gt;&lt;a id="user-content-meta-per-resource" class="anchor" aria-hidden="true" href="#meta-per-resource"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Meta Per Resource&lt;/h3&gt;
&lt;p&gt;For every resource in the collection, you can include a meta object containing non-standard meta-information about a resource that can not be represented as an attribute or relationship.&lt;/p&gt;
&lt;div class="highlight highlight-source-ruby"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;class&lt;/span&gt; &lt;span class="pl-en"&gt;MovieSerializer&lt;/span&gt;
  &lt;span class="pl-k"&gt;include&lt;/span&gt; &lt;span class="pl-c1"&gt;FastJsonapi&lt;/span&gt;::&lt;span class="pl-c1"&gt;ObjectSerializer&lt;/span&gt;

  meta &lt;span class="pl-k"&gt;do&lt;/span&gt; |&lt;span class="pl-smi"&gt;movie&lt;/span&gt;|
    {
      &lt;span class="pl-c1"&gt;years_since_release:&lt;/span&gt; &lt;span class="pl-c1"&gt;Date&lt;/span&gt;.current.year &lt;span class="pl-k"&gt;-&lt;/span&gt; movie.year
    }
  &lt;span class="pl-k"&gt;end&lt;/span&gt;
&lt;span class="pl-k"&gt;end&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h3&gt;&lt;a id="user-content-compound-document" class="anchor" aria-hidden="true" href="#compound-document"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Compound Document&lt;/h3&gt;
&lt;p&gt;Support for top-level and nested included associations through &lt;code&gt;options[:include]&lt;/code&gt;.&lt;/p&gt;
&lt;div class="highlight highlight-source-ruby"&gt;&lt;pre&gt;options &lt;span class="pl-k"&gt;=&lt;/span&gt; {}
options[&lt;span class="pl-c1"&gt;:meta&lt;/span&gt;] &lt;span class="pl-k"&gt;=&lt;/span&gt; { &lt;span class="pl-c1"&gt;total:&lt;/span&gt; &lt;span class="pl-c1"&gt;2&lt;/span&gt; }
options[&lt;span class="pl-c1"&gt;:links&lt;/span&gt;] &lt;span class="pl-k"&gt;=&lt;/span&gt; {
  &lt;span class="pl-c1"&gt;self:&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;...&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;,
  &lt;span class="pl-c1"&gt;next:&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;...&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;,
  &lt;span class="pl-c1"&gt;prev:&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;...&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;
}
options[&lt;span class="pl-c1"&gt;:include&lt;/span&gt;] &lt;span class="pl-k"&gt;=&lt;/span&gt; [&lt;span class="pl-c1"&gt;:actors&lt;/span&gt;, &lt;span class="pl-c1"&gt;:'actors.agency'&lt;/span&gt;, &lt;span class="pl-c1"&gt;:'actors.agency.state'&lt;/span&gt;]
&lt;span class="pl-c1"&gt;MovieSerializer&lt;/span&gt;.&lt;span class="pl-k"&gt;new&lt;/span&gt;([movie, movie], options).serialized_json&lt;/pre&gt;&lt;/div&gt;
&lt;h3&gt;&lt;a id="user-content-collection-serialization" class="anchor" aria-hidden="true" href="#collection-serialization"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Collection Serialization&lt;/h3&gt;
&lt;div class="highlight highlight-source-ruby"&gt;&lt;pre&gt;options[&lt;span class="pl-c1"&gt;:meta&lt;/span&gt;] &lt;span class="pl-k"&gt;=&lt;/span&gt; { &lt;span class="pl-c1"&gt;total:&lt;/span&gt; &lt;span class="pl-c1"&gt;2&lt;/span&gt; }
options[&lt;span class="pl-c1"&gt;:links&lt;/span&gt;] &lt;span class="pl-k"&gt;=&lt;/span&gt; {
  &lt;span class="pl-c1"&gt;self:&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;...&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;,
  &lt;span class="pl-c1"&gt;next:&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;...&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;,
  &lt;span class="pl-c1"&gt;prev:&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;...&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;
}
hash &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;MovieSerializer&lt;/span&gt;.&lt;span class="pl-k"&gt;new&lt;/span&gt;([movie, movie], options).serializable_hash
json_string &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;MovieSerializer&lt;/span&gt;.&lt;span class="pl-k"&gt;new&lt;/span&gt;([movie, movie], options).serialized_json&lt;/pre&gt;&lt;/div&gt;
&lt;h4&gt;&lt;a id="user-content-control-over-collection-serialization" class="anchor" aria-hidden="true" href="#control-over-collection-serialization"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Control Over Collection Serialization&lt;/h4&gt;
&lt;p&gt;You can use &lt;code&gt;is_collection&lt;/code&gt; option to have better control over collection serialization.&lt;/p&gt;
&lt;p&gt;If this option is not provided or &lt;code&gt;nil&lt;/code&gt; autedetect logic is used to try understand
if provided resource is a single object or collection.&lt;/p&gt;
&lt;p&gt;Autodetect logic is compatible with most DB toolkits (ActiveRecord, Sequel, etc.) but
&lt;strong&gt;cannot&lt;/strong&gt; guarantee that single vs collection will be always detected properly.&lt;/p&gt;
&lt;div class="highlight highlight-source-ruby"&gt;&lt;pre&gt;options[&lt;span class="pl-c1"&gt;:is_collection&lt;/span&gt;]&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;was introduced to be able to have precise control this behavior&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;nil&lt;/code&gt; or not provided: will try to autodetect single vs collection (please, see notes above)&lt;/li&gt;
&lt;li&gt;&lt;code&gt;true&lt;/code&gt; will always treat input resource as &lt;em&gt;collection&lt;/em&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;false&lt;/code&gt; will always treat input resource as &lt;em&gt;single object&lt;/em&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;&lt;a id="user-content-caching" class="anchor" aria-hidden="true" href="#caching"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Caching&lt;/h3&gt;
&lt;p&gt;Requires a &lt;code&gt;cache_key&lt;/code&gt; method be defined on model:&lt;/p&gt;
&lt;div class="highlight highlight-source-ruby"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;class&lt;/span&gt; &lt;span class="pl-en"&gt;MovieSerializer&lt;/span&gt;
  &lt;span class="pl-k"&gt;include&lt;/span&gt; &lt;span class="pl-c1"&gt;FastJsonapi&lt;/span&gt;::&lt;span class="pl-c1"&gt;ObjectSerializer&lt;/span&gt;
  set_type &lt;span class="pl-c1"&gt;:movie&lt;/span&gt;  &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; optional&lt;/span&gt;
  cache_options &lt;span class="pl-c1"&gt;enabled:&lt;/span&gt; &lt;span class="pl-c1"&gt;true&lt;/span&gt;, &lt;span class="pl-c1"&gt;cache_length:&lt;/span&gt; &lt;span class="pl-c1"&gt;12&lt;/span&gt;.hours
  attributes &lt;span class="pl-c1"&gt;:name&lt;/span&gt;, &lt;span class="pl-c1"&gt;:year&lt;/span&gt;
&lt;span class="pl-k"&gt;end&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h3&gt;&lt;a id="user-content-params" class="anchor" aria-hidden="true" href="#params"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Params&lt;/h3&gt;
&lt;p&gt;In some cases, attribute values might require more information than what is
available on the record, for example, access privileges or other information
related to a current authenticated user. The &lt;code&gt;options[:params]&lt;/code&gt; value covers these
cases by allowing you to pass in a hash of additional parameters necessary for
your use case.&lt;/p&gt;
&lt;p&gt;Leveraging the new params is easy, when you define a custom attribute or relationship with a
block you opt-in to using params by adding it as a block parameter.&lt;/p&gt;
&lt;div class="highlight highlight-source-ruby"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;class&lt;/span&gt; &lt;span class="pl-en"&gt;MovieSerializer&lt;/span&gt;
  &lt;span class="pl-k"&gt;include&lt;/span&gt; &lt;span class="pl-c1"&gt;FastJsonapi&lt;/span&gt;::&lt;span class="pl-c1"&gt;ObjectSerializer&lt;/span&gt;

  attributes &lt;span class="pl-c1"&gt;:name&lt;/span&gt;, &lt;span class="pl-c1"&gt;:year&lt;/span&gt;
  attribute &lt;span class="pl-c1"&gt;:can_view_early&lt;/span&gt; &lt;span class="pl-k"&gt;do&lt;/span&gt; |&lt;span class="pl-smi"&gt;movie&lt;/span&gt;, &lt;span class="pl-smi"&gt;params&lt;/span&gt;|
    &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; in here, params is a hash containing the `:current_user` key&lt;/span&gt;
    params[&lt;span class="pl-c1"&gt;:current_user&lt;/span&gt;].is_employee? &lt;span class="pl-k"&gt;?&lt;/span&gt; &lt;span class="pl-c1"&gt;true&lt;/span&gt; : &lt;span class="pl-c1"&gt;false&lt;/span&gt;
  &lt;span class="pl-k"&gt;end&lt;/span&gt;

  belongs_to &lt;span class="pl-c1"&gt;:primary_agent&lt;/span&gt; &lt;span class="pl-k"&gt;do&lt;/span&gt; |&lt;span class="pl-smi"&gt;movie&lt;/span&gt;, &lt;span class="pl-smi"&gt;params&lt;/span&gt;|
    &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; in here, params is a hash containing the `:current_user` key&lt;/span&gt;
    params[&lt;span class="pl-c1"&gt;:current_user&lt;/span&gt;].is_employee? &lt;span class="pl-k"&gt;?&lt;/span&gt; &lt;span class="pl-c1"&gt;true&lt;/span&gt; : &lt;span class="pl-c1"&gt;false&lt;/span&gt;
  &lt;span class="pl-k"&gt;end&lt;/span&gt;
&lt;span class="pl-k"&gt;end&lt;/span&gt;

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; ...&lt;/span&gt;
current_user &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;User&lt;/span&gt;.find(cookies[&lt;span class="pl-c1"&gt;:current_user_id&lt;/span&gt;])
serializer &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;MovieSerializer&lt;/span&gt;.&lt;span class="pl-k"&gt;new&lt;/span&gt;(movie, {&lt;span class="pl-c1"&gt;params:&lt;/span&gt; {&lt;span class="pl-c1"&gt;current_user:&lt;/span&gt; current_user}})
serializer.serializable_hash&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Custom attributes and relationships that only receive the resource are still possible by defining
the block to only receive one argument.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-conditional-attributes" class="anchor" aria-hidden="true" href="#conditional-attributes"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Conditional Attributes&lt;/h3&gt;
&lt;p&gt;Conditional attributes can be defined by passing a Proc to the &lt;code&gt;if&lt;/code&gt; key on the &lt;code&gt;attribute&lt;/code&gt; method. Return &lt;code&gt;true&lt;/code&gt; if the attribute should be serialized, and &lt;code&gt;false&lt;/code&gt; if not. The record and any params passed to the serializer are available inside the Proc as the first and second parameters, respectively.&lt;/p&gt;
&lt;div class="highlight highlight-source-ruby"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;class&lt;/span&gt; &lt;span class="pl-en"&gt;MovieSerializer&lt;/span&gt;
  &lt;span class="pl-k"&gt;include&lt;/span&gt; &lt;span class="pl-c1"&gt;FastJsonapi&lt;/span&gt;::&lt;span class="pl-c1"&gt;ObjectSerializer&lt;/span&gt;

  attributes &lt;span class="pl-c1"&gt;:name&lt;/span&gt;, &lt;span class="pl-c1"&gt;:year&lt;/span&gt;
  attribute &lt;span class="pl-c1"&gt;:release_year&lt;/span&gt;, &lt;span class="pl-c1"&gt;if:&lt;/span&gt; &lt;span class="pl-c1"&gt;Proc&lt;/span&gt;.&lt;span class="pl-k"&gt;new&lt;/span&gt; { |&lt;span class="pl-smi"&gt;record&lt;/span&gt;|
    &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; Release year will only be serialized if it's greater than 1990&lt;/span&gt;
    record.release_year &lt;span class="pl-k"&gt;&amp;gt;&lt;/span&gt; &lt;span class="pl-c1"&gt;1990&lt;/span&gt;
  }

  attribute &lt;span class="pl-c1"&gt;:director&lt;/span&gt;, &lt;span class="pl-c1"&gt;if:&lt;/span&gt; &lt;span class="pl-c1"&gt;Proc&lt;/span&gt;.&lt;span class="pl-k"&gt;new&lt;/span&gt; { |&lt;span class="pl-smi"&gt;record&lt;/span&gt;, &lt;span class="pl-smi"&gt;params&lt;/span&gt;|
    &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; The director will be serialized only if the :admin key of params is true&lt;/span&gt;
    params &lt;span class="pl-k"&gt;&amp;amp;&amp;amp;&lt;/span&gt; params[&lt;span class="pl-c1"&gt;:admin&lt;/span&gt;] &lt;span class="pl-k"&gt;==&lt;/span&gt; &lt;span class="pl-c1"&gt;true&lt;/span&gt;
  }
&lt;span class="pl-k"&gt;end&lt;/span&gt;

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; ...&lt;/span&gt;
current_user &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;User&lt;/span&gt;.find(cookies[&lt;span class="pl-c1"&gt;:current_user_id&lt;/span&gt;])
serializer &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;MovieSerializer&lt;/span&gt;.&lt;span class="pl-k"&gt;new&lt;/span&gt;(movie, { &lt;span class="pl-c1"&gt;params:&lt;/span&gt; { &lt;span class="pl-c1"&gt;admin:&lt;/span&gt; current_user.admin? }})
serializer.serializable_hash&lt;/pre&gt;&lt;/div&gt;
&lt;h3&gt;&lt;a id="user-content-conditional-relationships" class="anchor" aria-hidden="true" href="#conditional-relationships"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Conditional Relationships&lt;/h3&gt;
&lt;p&gt;Conditional relationships can be defined by passing a Proc to the &lt;code&gt;if&lt;/code&gt; key. Return &lt;code&gt;true&lt;/code&gt; if the relationship should be serialized, and &lt;code&gt;false&lt;/code&gt; if not. The record and any params passed to the serializer are available inside the Proc as the first and second parameters, respectively.&lt;/p&gt;
&lt;div class="highlight highlight-source-ruby"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;class&lt;/span&gt; &lt;span class="pl-en"&gt;MovieSerializer&lt;/span&gt;
  &lt;span class="pl-k"&gt;include&lt;/span&gt; &lt;span class="pl-c1"&gt;FastJsonapi&lt;/span&gt;::&lt;span class="pl-c1"&gt;ObjectSerializer&lt;/span&gt;

  &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; Actors will only be serialized if the record has any associated actors&lt;/span&gt;
  has_many &lt;span class="pl-c1"&gt;:actors&lt;/span&gt;, &lt;span class="pl-c1"&gt;if:&lt;/span&gt; &lt;span class="pl-c1"&gt;Proc&lt;/span&gt;.&lt;span class="pl-k"&gt;new&lt;/span&gt; { |&lt;span class="pl-smi"&gt;record&lt;/span&gt;| record.actors.any? }

  &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; Owner will only be serialized if the :admin key of params is true&lt;/span&gt;
  belongs_to &lt;span class="pl-c1"&gt;:owner&lt;/span&gt;, &lt;span class="pl-c1"&gt;if:&lt;/span&gt; &lt;span class="pl-c1"&gt;Proc&lt;/span&gt;.&lt;span class="pl-k"&gt;new&lt;/span&gt; { |&lt;span class="pl-smi"&gt;record&lt;/span&gt;, &lt;span class="pl-smi"&gt;params&lt;/span&gt;| params &lt;span class="pl-k"&gt;&amp;amp;&amp;amp;&lt;/span&gt; params[&lt;span class="pl-c1"&gt;:admin&lt;/span&gt;] &lt;span class="pl-k"&gt;==&lt;/span&gt; &lt;span class="pl-c1"&gt;true&lt;/span&gt; }
&lt;span class="pl-k"&gt;end&lt;/span&gt;

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; ...&lt;/span&gt;
current_user &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;User&lt;/span&gt;.find(cookies[&lt;span class="pl-c1"&gt;:current_user_id&lt;/span&gt;])
serializer &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;MovieSerializer&lt;/span&gt;.&lt;span class="pl-k"&gt;new&lt;/span&gt;(movie, { &lt;span class="pl-c1"&gt;params:&lt;/span&gt; { &lt;span class="pl-c1"&gt;admin:&lt;/span&gt; current_user.admin? }})
serializer.serializable_hash&lt;/pre&gt;&lt;/div&gt;
&lt;h3&gt;&lt;a id="user-content-sparse-fieldsets" class="anchor" aria-hidden="true" href="#sparse-fieldsets"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Sparse Fieldsets&lt;/h3&gt;
&lt;p&gt;Attributes and relationships can be selectively returned per record type by using the &lt;code&gt;fields&lt;/code&gt; option.&lt;/p&gt;
&lt;div class="highlight highlight-source-ruby"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;class&lt;/span&gt; &lt;span class="pl-en"&gt;MovieSerializer&lt;/span&gt;
  &lt;span class="pl-k"&gt;include&lt;/span&gt; &lt;span class="pl-c1"&gt;FastJsonapi&lt;/span&gt;::&lt;span class="pl-c1"&gt;ObjectSerializer&lt;/span&gt;

  attributes &lt;span class="pl-c1"&gt;:name&lt;/span&gt;, &lt;span class="pl-c1"&gt;:year&lt;/span&gt;
&lt;span class="pl-k"&gt;end&lt;/span&gt;

serializer &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;MovieSerializer&lt;/span&gt;.&lt;span class="pl-k"&gt;new&lt;/span&gt;(movie, { &lt;span class="pl-c1"&gt;fields:&lt;/span&gt; { &lt;span class="pl-c1"&gt;movie:&lt;/span&gt; [&lt;span class="pl-c1"&gt;:name&lt;/span&gt;] } })
serializer.serializable_hash&lt;/pre&gt;&lt;/div&gt;
&lt;h3&gt;&lt;a id="user-content-using-helper-methods" class="anchor" aria-hidden="true" href="#using-helper-methods"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Using helper methods&lt;/h3&gt;
&lt;p&gt;You can mix-in code from another ruby module into your serializer class to reuse functions across your app.&lt;/p&gt;
&lt;p&gt;Since a serializer is evaluated in a the context of a &lt;code&gt;class&lt;/code&gt; rather than an &lt;code&gt;instance&lt;/code&gt; of a class, you need to make sure that your methods act as &lt;code&gt;class&lt;/code&gt; methods when mixed in.&lt;/p&gt;
&lt;h5&gt;&lt;a id="user-content-using-activesupportconcern" class="anchor" aria-hidden="true" href="#using-activesupportconcern"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Using ActiveSupport::Concern&lt;/h5&gt;
&lt;div class="highlight highlight-source-ruby"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;module&lt;/span&gt; &lt;span class="pl-en"&gt;AvatarHelper&lt;/span&gt;
  &lt;span class="pl-k"&gt;extend&lt;/span&gt; &lt;span class="pl-c1"&gt;ActiveSupport&lt;/span&gt;::&lt;span class="pl-c1"&gt;Concern&lt;/span&gt;

  class_methods &lt;span class="pl-k"&gt;do&lt;/span&gt;
    &lt;span class="pl-k"&gt;def&lt;/span&gt; &lt;span class="pl-en"&gt;avatar_url&lt;/span&gt;(&lt;span class="pl-smi"&gt;user&lt;/span&gt;)
      user.image.url
    &lt;span class="pl-k"&gt;end&lt;/span&gt;
  &lt;span class="pl-k"&gt;end&lt;/span&gt;
&lt;span class="pl-k"&gt;end&lt;/span&gt;

&lt;span class="pl-k"&gt;class&lt;/span&gt; &lt;span class="pl-en"&gt;UserSerializer&lt;/span&gt;
  &lt;span class="pl-k"&gt;include&lt;/span&gt; &lt;span class="pl-c1"&gt;FastJsonapi&lt;/span&gt;::&lt;span class="pl-c1"&gt;ObjectSerializer&lt;/span&gt;

  &lt;span class="pl-k"&gt;include&lt;/span&gt; &lt;span class="pl-c1"&gt;AvatarHelper&lt;/span&gt; &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; mixes in your helper method as class method&lt;/span&gt;

  set_type &lt;span class="pl-c1"&gt;:user&lt;/span&gt;

  attributes &lt;span class="pl-c1"&gt;:name&lt;/span&gt;, &lt;span class="pl-c1"&gt;:email&lt;/span&gt;

  attribute &lt;span class="pl-c1"&gt;:avatar&lt;/span&gt; &lt;span class="pl-k"&gt;do&lt;/span&gt; |&lt;span class="pl-smi"&gt;user&lt;/span&gt;|
    avatar_url(user)
  &lt;span class="pl-k"&gt;end&lt;/span&gt;
&lt;span class="pl-k"&gt;end&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;h5&gt;&lt;a id="user-content-using-plain-old-ruby" class="anchor" aria-hidden="true" href="#using-plain-old-ruby"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Using Plain Old Ruby&lt;/h5&gt;
&lt;div class="highlight highlight-source-ruby"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;module&lt;/span&gt; &lt;span class="pl-en"&gt;AvatarHelper&lt;/span&gt;
  &lt;span class="pl-k"&gt;def&lt;/span&gt; &lt;span class="pl-en"&gt;avatar_url&lt;/span&gt;(&lt;span class="pl-smi"&gt;user&lt;/span&gt;)
    user.image.url
  &lt;span class="pl-k"&gt;end&lt;/span&gt;
&lt;span class="pl-k"&gt;end&lt;/span&gt;

&lt;span class="pl-k"&gt;class&lt;/span&gt; &lt;span class="pl-en"&gt;UserSerializer&lt;/span&gt;
  &lt;span class="pl-k"&gt;include&lt;/span&gt; &lt;span class="pl-c1"&gt;FastJsonapi&lt;/span&gt;::&lt;span class="pl-c1"&gt;ObjectSerializer&lt;/span&gt;

  &lt;span class="pl-k"&gt;extend&lt;/span&gt; &lt;span class="pl-c1"&gt;AvatarHelper&lt;/span&gt; &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; mixes in your helper method as class method&lt;/span&gt;

  set_type &lt;span class="pl-c1"&gt;:user&lt;/span&gt;

  attributes &lt;span class="pl-c1"&gt;:name&lt;/span&gt;, &lt;span class="pl-c1"&gt;:email&lt;/span&gt;

  attribute &lt;span class="pl-c1"&gt;:avatar&lt;/span&gt; &lt;span class="pl-k"&gt;do&lt;/span&gt; |&lt;span class="pl-smi"&gt;user&lt;/span&gt;|
    avatar_url(user)
  &lt;span class="pl-k"&gt;end&lt;/span&gt;
&lt;span class="pl-k"&gt;end&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;h3&gt;&lt;a id="user-content-customizable-options" class="anchor" aria-hidden="true" href="#customizable-options"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Customizable Options&lt;/h3&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Option&lt;/th&gt;
&lt;th&gt;Purpose&lt;/th&gt;
&lt;th&gt;Example&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;set_type&lt;/td&gt;
&lt;td&gt;Type name of Object&lt;/td&gt;
&lt;td&gt;&lt;code&gt;set_type :movie &lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;key&lt;/td&gt;
&lt;td&gt;Key of Object&lt;/td&gt;
&lt;td&gt;&lt;code&gt;belongs_to :owner, key: :user &lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;set_id&lt;/td&gt;
&lt;td&gt;ID of Object&lt;/td&gt;
&lt;td&gt;&lt;code&gt;set_id :owner_id &lt;/code&gt; or ```set_id {&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;cache_options&lt;/td&gt;
&lt;td&gt;Hash to enable caching and set cache length&lt;/td&gt;
&lt;td&gt;&lt;code&gt;cache_options enabled: true, cache_length: 12.hours, race_condition_ttl: 10.seconds&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;id_method_name&lt;/td&gt;
&lt;td&gt;Set custom method name to get ID of an object (If block is provided for the relationship, &lt;code&gt;id_method_name&lt;/code&gt; is invoked on the return value of the block instead of the resource object)&lt;/td&gt;
&lt;td&gt;&lt;code&gt;has_many :locations, id_method_name: :place_ids &lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;object_method_name&lt;/td&gt;
&lt;td&gt;Set custom method name to get related objects&lt;/td&gt;
&lt;td&gt;&lt;code&gt;has_many :locations, object_method_name: :places &lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;record_type&lt;/td&gt;
&lt;td&gt;Set custom Object Type for a relationship&lt;/td&gt;
&lt;td&gt;&lt;code&gt;belongs_to :owner, record_type: :user&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;serializer&lt;/td&gt;
&lt;td&gt;Set custom Serializer for a relationship&lt;/td&gt;
&lt;td&gt;&lt;code&gt;has_many :actors, serializer: :custom_actor&lt;/code&gt; or &lt;code&gt;has_many :actors, serializer: MyApp::Api::V1::ActorSerializer&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;polymorphic&lt;/td&gt;
&lt;td&gt;Allows different record types for a polymorphic association&lt;/td&gt;
&lt;td&gt;&lt;code&gt;has_many :targets, polymorphic: true&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;polymorphic&lt;/td&gt;
&lt;td&gt;Sets custom record types for each object class in a polymorphic association&lt;/td&gt;
&lt;td&gt;&lt;code&gt;has_many :targets, polymorphic: { Person =&amp;gt; :person, Group =&amp;gt; :group }&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h3&gt;&lt;a id="user-content-instrumentation" class="anchor" aria-hidden="true" href="#instrumentation"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Instrumentation&lt;/h3&gt;
&lt;p&gt;&lt;code&gt;fast_jsonapi&lt;/code&gt; also has builtin &lt;a href="https://www.skylight.io/" rel="nofollow"&gt;Skylight&lt;/a&gt; integration. To enable, add the following to an initializer:&lt;/p&gt;
&lt;div class="highlight highlight-source-ruby"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;require&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;fast_jsonapi/instrumentation/skylight&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Skylight relies on &lt;code&gt;ActiveSupport::Notifications&lt;/code&gt; to track these two core methods. If you would like to use these notifications without using Skylight, simply require the instrumentation integration:&lt;/p&gt;
&lt;div class="highlight highlight-source-ruby"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;require&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;fast_jsonapi/instrumentation&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;The two instrumented notifcations are supplied by these two constants:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;FastJsonapi::ObjectSerializer::SERIALIZABLE_HASH_NOTIFICATION&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;FastJsonapi::ObjectSerializer::SERIALIZED_JSON_NOTIFICATION&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;It is also possible to instrument one method without the other by using one of the following require statements:&lt;/p&gt;
&lt;div class="highlight highlight-source-ruby"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;require&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;fast_jsonapi/instrumentation/serializable_hash&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;
&lt;span class="pl-k"&gt;require&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;fast_jsonapi/instrumentation/serialized_json&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Same goes for the Skylight integration:&lt;/p&gt;
&lt;div class="highlight highlight-source-ruby"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;require&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;fast_jsonapi/instrumentation/skylight/normalizers/serializable_hash&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;
&lt;span class="pl-k"&gt;require&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;fast_jsonapi/instrumentation/skylight/normalizers/serialized_json&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h2&gt;&lt;a id="user-content-contributing" class="anchor" aria-hidden="true" href="#contributing"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Contributing&lt;/h2&gt;
&lt;p&gt;Please see &lt;a href="https://github.com/Netflix/fast_jsonapi/blob/master/CONTRIBUTING.md"&gt;contribution check&lt;/a&gt; for more details on contributing&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-running-tests" class="anchor" aria-hidden="true" href="#running-tests"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Running Tests&lt;/h3&gt;
&lt;p&gt;We use &lt;a href="http://rspec.info/" rel="nofollow"&gt;RSpec&lt;/a&gt; for testing. We have unit tests, functional tests and performance tests. To run tests use the following command:&lt;/p&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt;rspec&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;To run tests without the performance tests (for quicker test runs):&lt;/p&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt;rspec spec --tag &lt;span class="pl-k"&gt;~&lt;/span&gt;performance:true&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;To run tests only performance tests:&lt;/p&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt;rspec spec --tag performance:true&lt;/pre&gt;&lt;/div&gt;
&lt;/article&gt;&lt;/div&gt;</description><author>Netflix</author><guid isPermaLink="false">https://github.com/Netflix/fast_jsonapi</guid><pubDate>Fri, 01 Nov 2019 00:00:00 GMT</pubDate></item><item><title>mperham/sidekiq #15 in Ruby, This week</title><link>https://github.com/mperham/sidekiq</link><description>&lt;p&gt;&lt;i&gt;Simple, efficient background processing for Ruby&lt;/i&gt;&lt;/p&gt;&lt;div id="readme" class="instapaper_body md" data-path="README.md"&gt;&lt;article class="markdown-body entry-content p-5" itemprop="text"&gt;&lt;h1&gt;&lt;a id="user-content-sidekiq" class="anchor" aria-hidden="true" href="#sidekiq"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Sidekiq&lt;/h1&gt;
&lt;p&gt;&lt;a href="https://rubygems.org/gems/sidekiq" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/4ce639c57e0ff844c195196c5d085bf2f4db6552/68747470733a2f2f62616467652e667572792e696f2f72622f736964656b69712e737667" alt="Gem Version" data-canonical-src="https://badge.fury.io/rb/sidekiq.svg" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://codeclimate.com/github/mperham/sidekiq" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/955d4c723e1d3c0915ce523f58fd40961d910984/68747470733a2f2f636f6465636c696d6174652e636f6d2f6769746875622f6d70657268616d2f736964656b69712e737667" alt="Code Climate" data-canonical-src="https://codeclimate.com/github/mperham/sidekiq.svg" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://codeclimate.com/github/mperham/sidekiq/coverage" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/a8a9365bbfb3738fce817b75f9979452fb885ee8/68747470733a2f2f636f6465636c696d6174652e636f6d2f6769746875622f6d70657268616d2f736964656b69712f6261646765732f636f7665726167652e737667" alt="Test Coverage" data-canonical-src="https://codeclimate.com/github/mperham/sidekiq/badges/coverage.svg" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://circleci.com/gh/mperham/sidekiq/tree/master" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/c418e1322eda3d98581c51792b2cef6161f42908/68747470733a2f2f636972636c6563692e636f6d2f67682f6d70657268616d2f736964656b69712f747265652f6d61737465722e7376673f7374796c653d737667" alt="Build Status" data-canonical-src="https://circleci.com/gh/mperham/sidekiq/tree/master.svg?style=svg" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://gitter.im/mperham/sidekiq" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/4365ebca967e72d3ab502ec8554c9182c8d404fb/68747470733a2f2f6261646765732e6769747465722e696d2f6d70657268616d2f736964656b69712e737667" alt="Gitter Chat" data-canonical-src="https://badges.gitter.im/mperham/sidekiq.svg" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Simple, efficient background processing for Ruby.&lt;/p&gt;
&lt;p&gt;Sidekiq uses threads to handle many jobs at the same time in the
same process.  It does not require Rails but will integrate tightly with
Rails to make background processing dead simple.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-performance" class="anchor" aria-hidden="true" href="#performance"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Performance&lt;/h2&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Version&lt;/th&gt;
&lt;th&gt;Latency&lt;/th&gt;
&lt;th&gt;Garbage created for 10k jobs&lt;/th&gt;
&lt;th&gt;Time to process 100k jobs&lt;/th&gt;
&lt;th&gt;Throughput&lt;/th&gt;
&lt;th&gt;Ruby&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;Sidekiq 6.0.2&lt;/td&gt;
&lt;td&gt;3 ms&lt;/td&gt;
&lt;td&gt;156 MB&lt;/td&gt;
&lt;td&gt;14.0 sec&lt;/td&gt;
&lt;td&gt;&lt;strong&gt;7100 jobs/sec&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;MRI 2.6.3&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Sidekiq 6.0.0&lt;/td&gt;
&lt;td&gt;3 ms&lt;/td&gt;
&lt;td&gt;156 MB&lt;/td&gt;
&lt;td&gt;19 sec&lt;/td&gt;
&lt;td&gt;5200 jobs/sec&lt;/td&gt;
&lt;td&gt;MRI 2.6.3&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Sidekiq 4.0.0&lt;/td&gt;
&lt;td&gt;10 ms&lt;/td&gt;
&lt;td&gt;151 MB&lt;/td&gt;
&lt;td&gt;22 sec&lt;/td&gt;
&lt;td&gt;4500 jobs/sec&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Sidekiq 3.5.1&lt;/td&gt;
&lt;td&gt;22 ms&lt;/td&gt;
&lt;td&gt;1257 MB&lt;/td&gt;
&lt;td&gt;125 sec&lt;/td&gt;
&lt;td&gt;800 jobs/sec&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Resque 1.25.2&lt;/td&gt;
&lt;td&gt;-&lt;/td&gt;
&lt;td&gt;-&lt;/td&gt;
&lt;td&gt;420 sec&lt;/td&gt;
&lt;td&gt;240 jobs/sec&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;DelayedJob 4.1.1&lt;/td&gt;
&lt;td&gt;-&lt;/td&gt;
&lt;td&gt;-&lt;/td&gt;
&lt;td&gt;465 sec&lt;/td&gt;
&lt;td&gt;215 jobs/sec&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;This benchmark can be found in &lt;code&gt;bin/sidekiqload&lt;/code&gt; and assumes a Redis network latency of 1ms.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-requirements" class="anchor" aria-hidden="true" href="#requirements"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Requirements&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Redis: 4.0+&lt;/li&gt;
&lt;li&gt;Ruby: MRI 2.5+ or JRuby 9.2+.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Sidekiq 6.0 supports Rails 5.0+ but does not require it.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-installation" class="anchor" aria-hidden="true" href="#installation"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Installation&lt;/h2&gt;
&lt;pre&gt;&lt;code&gt;gem install sidekiq
&lt;/code&gt;&lt;/pre&gt;
&lt;h2&gt;&lt;a id="user-content-getting-started" class="anchor" aria-hidden="true" href="#getting-started"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Getting Started&lt;/h2&gt;
&lt;p&gt;See the &lt;a href="https://github.com/mperham/sidekiq/wiki/Getting-Started"&gt;Getting Started wiki page&lt;/a&gt; and follow the simple setup process.
You can watch &lt;a href="https://www.youtube.com/playlist?list=PLjeHh2LSCFrWGT5uVjUuFKAcrcj5kSai1" rel="nofollow"&gt;this Youtube playlist&lt;/a&gt; to learn all about
Sidekiq and see its features in action.  Here's the Web UI:&lt;/p&gt;
&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="https://github.com/mperham/sidekiq/raw/master/examples/web-ui.png"&gt;&lt;img src="https://github.com/mperham/sidekiq/raw/master/examples/web-ui.png" alt="Web UI" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-want-to-upgrade" class="anchor" aria-hidden="true" href="#want-to-upgrade"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Want to Upgrade?&lt;/h2&gt;
&lt;p&gt;I also sell Sidekiq Pro and Sidekiq Enterprise, extensions to Sidekiq which provide more
features, a commercial-friendly license and allow you to support high
quality open source development all at the same time.  Please see the
&lt;a href="https://sidekiq.org/" rel="nofollow"&gt;Sidekiq&lt;/a&gt; homepage for more detail.&lt;/p&gt;
&lt;p&gt;Subscribe to the &lt;strong&gt;&lt;a href="https://tinyletter.com/sidekiq" rel="nofollow"&gt;quarterly newsletter&lt;/a&gt;&lt;/strong&gt; to stay informed about the latest
features and changes to Sidekiq and its bigger siblings.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-problems" class="anchor" aria-hidden="true" href="#problems"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Problems?&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;Please do not directly email any Sidekiq committers with questions or problems.&lt;/strong&gt;  A community is best served when discussions are held in public.&lt;/p&gt;
&lt;p&gt;If you have a problem, please review the &lt;a href="https://github.com/mperham/sidekiq/wiki/FAQ"&gt;FAQ&lt;/a&gt; and &lt;a href="https://github.com/mperham/sidekiq/wiki/Problems-and-Troubleshooting"&gt;Troubleshooting&lt;/a&gt; wiki pages.
Searching the &lt;a href="https://github.com/mperham/sidekiq/issues"&gt;issues&lt;/a&gt; for your problem is also a good idea.&lt;/p&gt;
&lt;p&gt;Sidekiq Pro and Sidekiq Enterprise customers get private email support.  You can purchase at &lt;a href="https://sidekiq.org" rel="nofollow"&gt;https://sidekiq.org&lt;/a&gt;; email &lt;a href="mailto:support@contribsys.com"&gt;support@contribsys.com&lt;/a&gt; for help.&lt;/p&gt;
&lt;p&gt;Useful resources:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Product documentation is in the &lt;a href="https://github.com/mperham/sidekiq/wiki"&gt;wiki&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;Occasional announcements are made to the &lt;a href="https://twitter.com/sidekiq" rel="nofollow"&gt;@sidekiq&lt;/a&gt; Twitter account.&lt;/li&gt;
&lt;li&gt;The &lt;a href="https://stackoverflow.com/questions/tagged/sidekiq" rel="nofollow"&gt;Sidekiq tag&lt;/a&gt; on Stack Overflow has lots of useful Q &amp;amp; A.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Every Friday morning is Sidekiq happy hour: I video chat and answer questions.
See the &lt;a href="https://sidekiq.org/support.html" rel="nofollow"&gt;Sidekiq support page&lt;/a&gt; for details.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-license" class="anchor" aria-hidden="true" href="#license"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;License&lt;/h2&gt;
&lt;p&gt;Please see &lt;a href="https://github.com/mperham/sidekiq/blob/master/LICENSE"&gt;LICENSE&lt;/a&gt; for licensing details.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-author" class="anchor" aria-hidden="true" href="#author"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Author&lt;/h2&gt;
&lt;p&gt;Mike Perham, &lt;a href="https://mastodon.xyz/@mperham" rel="nofollow"&gt;@mperham@mastodon.xyz&lt;/a&gt; / &lt;a href="https://twitter.com/sidekiq" rel="nofollow"&gt;@sidekiq&lt;/a&gt;, &lt;a href="https://www.mikeperham.com" rel="nofollow"&gt;https://www.mikeperham.com&lt;/a&gt; / &lt;a href="https://www.contribsys.com" rel="nofollow"&gt;https://www.contribsys.com&lt;/a&gt;&lt;/p&gt;
&lt;/article&gt;&lt;/div&gt;</description><author>mperham</author><guid isPermaLink="false">https://github.com/mperham/sidekiq</guid><pubDate>Fri, 01 Nov 2019 00:00:00 GMT</pubDate></item><item><title>colszowka/simplecov #16 in Ruby, This week</title><link>https://github.com/colszowka/simplecov</link><description>&lt;p&gt;&lt;i&gt;Code coverage for Ruby 1.9+ with a powerful configuration library and automatic merging of coverage across test suites&lt;/i&gt;&lt;/p&gt;&lt;div id="readme" class="instapaper_body md" data-path="README.md"&gt;&lt;article class="markdown-body entry-content p-5" itemprop="text"&gt;&lt;h1&gt;&lt;a id="user-content-simplecov---" class="anchor" aria-hidden="true" href="#simplecov---"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;SimpleCov &lt;a href="http://travis-ci.org/colszowka/simplecov" title="SimpleCov is built around the clock by travis-ci.org" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/9df4e4de2290be7ba6ff9028d3e4eca0b8c1bde1/68747470733a2f2f7472617669732d63692e6f72672f636f6c737a6f776b612f73696d706c65636f762e737667" alt="Build Status" data-canonical-src="https://travis-ci.org/colszowka/simplecov.svg" style="max-width:100%;"&gt;&lt;/a&gt; &lt;a href="https://codeclimate.com/github/colszowka/simplecov" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/f453231803f262e40b23d0efa16be9f933225362/68747470733a2f2f636f6465636c696d6174652e636f6d2f6769746875622f636f6c737a6f776b612f73696d706c65636f762e737667" alt="Code Climate" data-canonical-src="https://codeclimate.com/github/colszowka/simplecov.svg" style="max-width:100%;"&gt;&lt;/a&gt; &lt;a href="http://inch-ci.org/github/colszowka/simplecov" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/46ffef80a99925f22df515d6aa2f578828c195cf/687474703a2f2f696e63682d63692e6f72672f6769746875622f636f6c737a6f776b612f73696d706c65636f762e737667" alt="Inline docs" data-canonical-src="http://inch-ci.org/github/colszowka/simplecov.svg" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/h1&gt;
&lt;p&gt;&lt;strong&gt;Code coverage for Ruby&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/colszowka/simplecov" title="Source Code @ GitHub"&gt;Source Code&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://rubydoc.info/gems/simplecov/frames" title="RDoc API Documentation at Rubydoc.info" rel="nofollow"&gt;API documentation&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/colszowka/simplecov/blob/master/CHANGELOG.md" title="Project Changelog"&gt;Changelog&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://rubygems.org/gems/simplecov" title="SimpleCov @ rubygems.org" rel="nofollow"&gt;Rubygem&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://travis-ci.org/colszowka/simplecov" title="SimpleCov is built around the clock by travis-ci.org" rel="nofollow"&gt;Continuous Integration&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;SimpleCov is a code coverage analysis tool for Ruby. It uses &lt;a href="https://ruby-doc.org/stdlib/libdoc/coverage/rdoc/Coverage.html" title="API doc for Ruby's Coverage library" rel="nofollow"&gt;Ruby's built-in Coverage&lt;/a&gt; library to gather code
coverage data, but makes processing its results much easier by providing a clean API to filter, group, merge, format,
and display those results, giving you a complete code coverage suite that can be set up with just a couple lines of
code.&lt;/p&gt;
&lt;p&gt;In most cases, you'll want overall coverage results for your projects, including all types of tests, Cucumber features,
etc. SimpleCov automatically takes care of this by caching and merging results when generating reports, so your
report actually includes coverage across your test suites and thereby gives you a better picture of blank spots.&lt;/p&gt;
&lt;p&gt;The official formatter of SimpleCov is packaged as a separate gem called &lt;a href="https://github.com/colszowka/simplecov-html" title="SimpleCov HTML Formatter Source Code @ GitHub"&gt;simplecov-html&lt;/a&gt;, but will be installed and
configured automatically when you launch SimpleCov. If you're curious, you can find it &lt;a href="https://github.com/colszowka/simplecov-html" title="SimpleCov HTML Formatter Source Code @ GitHub"&gt;on GitHub, too&lt;/a&gt;.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-contact" class="anchor" aria-hidden="true" href="#contact"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Contact&lt;/h2&gt;
&lt;p&gt;&lt;em&gt;Code and Bug Reports&lt;/em&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/colszowka/simplecov/issues"&gt;Issue Tracker&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;See &lt;a href="https://github.com/colszowka/simplecov/blob/master/CONTRIBUTING.md"&gt;CONTRIBUTING&lt;/a&gt; for how to contribute along
with some common problems to check out before creating an issue.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;em&gt;Questions, Problems, Suggestions, etc.&lt;/em&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://groups.google.com/forum/#!forum/simplecov" rel="nofollow"&gt;Mailing List&lt;/a&gt; "Open mailing list for discussion and announcements
on Google Groups"&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-getting-started" class="anchor" aria-hidden="true" href="#getting-started"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Getting started&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;Add SimpleCov to your &lt;code&gt;Gemfile&lt;/code&gt; and &lt;code&gt;bundle install&lt;/code&gt;:&lt;/p&gt;
&lt;div class="highlight highlight-source-ruby"&gt;&lt;pre&gt;gem &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;simplecov&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-c1"&gt;require:&lt;/span&gt; &lt;span class="pl-c1"&gt;false&lt;/span&gt;, &lt;span class="pl-c1"&gt;group:&lt;/span&gt; &lt;span class="pl-c1"&gt;:test&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Load and launch SimpleCov &lt;strong&gt;at the very top&lt;/strong&gt; of your &lt;code&gt;test/test_helper.rb&lt;/code&gt;
(&lt;em&gt;or &lt;code&gt;spec_helper.rb&lt;/code&gt;, &lt;code&gt;rails_helper&lt;/code&gt;, cucumber &lt;code&gt;env.rb&lt;/code&gt;, or whatever your preferred test
framework uses&lt;/em&gt;):&lt;/p&gt;
&lt;div class="highlight highlight-source-ruby"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;require&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;simplecov&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;
&lt;span class="pl-c1"&gt;SimpleCov&lt;/span&gt;.start

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; Previous content of test helper now starts here&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;strong&gt;Note:&lt;/strong&gt; If SimpleCov starts after your application code is already loaded
(via &lt;code&gt;require&lt;/code&gt;), it won't be able to track your files and their coverage!
The &lt;code&gt;SimpleCov.start&lt;/code&gt; &lt;strong&gt;must&lt;/strong&gt; be issued &lt;strong&gt;before any of your application
code is required!&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;SimpleCov must be running in the process that you want the code coverage
analysis to happen on. When testing a server process (e.g. a JSON API
endpoint) via a separate test process (e.g. when using Selenium) where you
want to see all code executed by the &lt;code&gt;rails server&lt;/code&gt;, and not just code
executed in your actual test files, you'll want to add something like this
to the top of &lt;code&gt;bin/rails&lt;/code&gt;, but below the "shebang" line (&lt;code&gt;#! /usr/bin/env ruby&lt;/code&gt;):&lt;/p&gt;
&lt;div class="highlight highlight-source-ruby"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;if&lt;/span&gt; &lt;span class="pl-c1"&gt;ENV&lt;/span&gt;[&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;RAILS_ENV&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;] &lt;span class="pl-k"&gt;==&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;test&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;
  &lt;span class="pl-k"&gt;require&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;simplecov&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;
  &lt;span class="pl-c1"&gt;SimpleCov&lt;/span&gt;.start &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;rails&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;
  &lt;span class="pl-c1"&gt;puts&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;required simplecov&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;
&lt;span class="pl-k"&gt;end&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Run your full test suite to see the percent coverage that your application has.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;After running your tests, open &lt;code&gt;coverage/index.html&lt;/code&gt; in the browser of your choice. For example, in a Mac Terminal,
run the following command from your application's root directory:&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;pre&gt;&lt;code&gt;open coverage/index.html
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;strong&gt;Note:&lt;/strong&gt; &lt;a href="https://dwheeler.com/essays/open-files-urls.html" rel="nofollow"&gt;This guide&lt;/a&gt; can help if you're unsure which command your particular
operating system requires.
5. Add the following to your &lt;code&gt;.gitignore&lt;/code&gt; file to ensure that coverage results
are not tracked by Git (optional):&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;echo "coverage" &amp;gt;&amp;gt; .gitignore
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Or if you use Windows:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;echo coverage &amp;gt;&amp;gt; .gitignore
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;If you're making a Rails application, SimpleCov comes with built-in configurations (see below for information on
profiles) that will get you started with groups for your Controllers, Views, Models and Helpers. To use it, the
first two lines of your test_helper should be like this:&lt;/p&gt;
&lt;div class="highlight highlight-source-ruby"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;require&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;simplecov&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;
&lt;span class="pl-c1"&gt;SimpleCov&lt;/span&gt;.start &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;rails&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h2&gt;&lt;a id="user-content-example-output" class="anchor" aria-hidden="true" href="#example-output"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Example output&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;Coverage results report, fully browsable locally with sorting and much more:&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="https://cloud.githubusercontent.com/assets/137793/17071162/db6f253e-502d-11e6-9d84-e40c3d75f333.png"&gt;&lt;img src="https://cloud.githubusercontent.com/assets/137793/17071162/db6f253e-502d-11e6-9d84-e40c3d75f333.png" alt="SimpleCov coverage report" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Source file coverage details view:&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="https://cloud.githubusercontent.com/assets/137793/17071163/db6f9f0a-502d-11e6-816c-edb2c66fad8d.png"&gt;&lt;img src="https://cloud.githubusercontent.com/assets/137793/17071163/db6f9f0a-502d-11e6-816c-edb2c66fad8d.png" alt="SimpleCov source file detail view" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-use-it-with-any-framework" class="anchor" aria-hidden="true" href="#use-it-with-any-framework"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Use it with any framework!&lt;/h2&gt;
&lt;p&gt;Similarly to the usage with Test::Unit described above, the only thing you have to do is to add the SimpleCov
config to the very top of your Cucumber/RSpec/whatever setup file.&lt;/p&gt;
&lt;p&gt;Add the setup code to the &lt;strong&gt;top&lt;/strong&gt; of &lt;code&gt;features/support/env.rb&lt;/code&gt; (for Cucumber) or &lt;code&gt;spec/spec_helper.rb&lt;/code&gt; (for RSpec).
Other test frameworks should work accordingly, whatever their setup file may be:&lt;/p&gt;
&lt;div class="highlight highlight-source-ruby"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;require&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;simplecov&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;
&lt;span class="pl-c1"&gt;SimpleCov&lt;/span&gt;.start &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;rails&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;You could even track what kind of code your UI testers are touching if you want to go overboard with things. SimpleCov
does not care what kind of framework it is running in; it just looks at what code is being executed and generates a
report about it.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-notes-on-specific-frameworks-and-test-utilities" class="anchor" aria-hidden="true" href="#notes-on-specific-frameworks-and-test-utilities"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Notes on specific frameworks and test utilities&lt;/h3&gt;
&lt;p&gt;For some frameworks and testing tools there are quirks and problems you might want to know about if you want
to use SimpleCov with them. Here's an overview of the known ones:&lt;/p&gt;
&lt;table&gt;
  &lt;tbody&gt;&lt;tr&gt;&lt;th&gt;Framework&lt;/th&gt;&lt;th&gt;Notes&lt;/th&gt;&lt;th&gt;Issue&lt;/th&gt;&lt;/tr&gt;
  &lt;tr&gt;
    &lt;th&gt;
      parallel_tests
    &lt;/th&gt;
    &lt;td&gt;
      As of 0.8.0, SimpleCov should correctly recognize parallel_tests and
      supplement your test suite names with their corresponding test env
      numbers. SimpleCov locks the resultset cache while merging, ensuring no
      race conditions occur when results are merged.
    &lt;/td&gt;
    &lt;td&gt;
      &lt;a href="https://github.com/colszowka/simplecov/issues/64"&gt;#64&lt;/a&gt; &amp;amp;
      &lt;a href="https://github.com/colszowka/simplecov/pull/185"&gt;#185&lt;/a&gt;
    &lt;/td&gt;
  &lt;/tr&gt;
  &lt;tr&gt;
    &lt;th&gt;
      RubyMine
    &lt;/th&gt;
    &lt;td&gt;
      The &lt;a href="https://www.jetbrains.com/ruby/" rel="nofollow"&gt;RubyMine IDE&lt;/a&gt; has
      built-in support for SimpleCov's coverage reports, though you might need
      to explicitly set the output root using `SimpleCov.root('foo/bar/baz')`
    &lt;/td&gt;
    &lt;td&gt;
      &lt;a href="https://github.com/colszowka/simplecov/issues/95"&gt;#95&lt;/a&gt;
    &lt;/td&gt;
  &lt;/tr&gt;
  &lt;tr&gt;
    &lt;th&gt;
      Spork
    &lt;/th&gt;
    &lt;td&gt;
      Because of how Spork works internally (using preforking), there used to
      be trouble when using SimpleCov with it, but that has apparently been
      resolved with a specific configuration strategy. See &lt;a href="https://github.com/colszowka/simplecov/issues/42#issuecomment-4440284"&gt;this&lt;/a&gt;
      comment.
    &lt;/td&gt;
    &lt;td&gt;
      &lt;a href="https://github.com/colszowka/simplecov/issues/42#issuecomment-4440284"&gt;#42&lt;/a&gt;
    &lt;/td&gt;
  &lt;/tr&gt;
  &lt;tr&gt;
    &lt;th&gt;
      Spring
    &lt;/th&gt;
    &lt;td&gt;
      &lt;a href="#want-to-use-spring-with-simplecov"&gt;See section below.&lt;/a&gt;
    &lt;/td&gt;
    &lt;td&gt;
      &lt;a href="https://github.com/colszowka/simplecov/issues/381"&gt;#381&lt;/a&gt;
    &lt;/td&gt;
  &lt;/tr&gt;
  &lt;tr&gt;
    &lt;th&gt;
      Test/Unit
    &lt;/th&gt;
    &lt;td&gt;
      Test Unit 2 used to mess with ARGV, leading to a failure to detect the
      test process name in SimpleCov. &lt;code&gt;test-unit&lt;/code&gt; releases 2.4.3+
      (Dec 11th, 2011) should have this problem resolved.
    &lt;/td&gt;
    &lt;td&gt;
      &lt;a href="https://github.com/colszowka/simplecov/issues/45"&gt;#45&lt;/a&gt; &amp;amp;
      &lt;a href="https://github.com/test-unit/test-unit/pull/12"&gt;test-unit/test-unit#12&lt;/a&gt;
    &lt;/td&gt;
  &lt;/tr&gt;
&lt;/tbody&gt;&lt;/table&gt;
&lt;h2&gt;&lt;a id="user-content-configuring-simplecov" class="anchor" aria-hidden="true" href="#configuring-simplecov"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Configuring SimpleCov&lt;/h2&gt;
&lt;p&gt;&lt;a href="http://rubydoc.info/gems/simplecov/SimpleCov/Configuration" title="Configuration options API documentation" rel="nofollow"&gt;Configuration&lt;/a&gt; settings can be applied in three formats, which are completely equivalent:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;The most common way is to configure it directly in your start block:&lt;/p&gt;
&lt;div class="highlight highlight-source-ruby"&gt;&lt;pre&gt;&lt;span class="pl-c1"&gt;SimpleCov&lt;/span&gt;.start &lt;span class="pl-k"&gt;do&lt;/span&gt;
  some_config_option &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;foo&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;
&lt;span class="pl-k"&gt;end&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;You can also set all configuration options directly:&lt;/p&gt;
&lt;div class="highlight highlight-source-ruby"&gt;&lt;pre&gt;&lt;span class="pl-c1"&gt;SimpleCov&lt;/span&gt;.some_config_option &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;foo&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;If you do not want to start coverage immediately after launch or want to add additional configuration later on in a
concise way, use:&lt;/p&gt;
&lt;div class="highlight highlight-source-ruby"&gt;&lt;pre&gt;&lt;span class="pl-c1"&gt;SimpleCov&lt;/span&gt;.configure &lt;span class="pl-k"&gt;do&lt;/span&gt;
  some_config_option &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;foo&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;
&lt;span class="pl-k"&gt;end&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Please check out the &lt;a href="http://rubydoc.info/gems/simplecov/SimpleCov/Configuration" title="Configuration options API documentation" rel="nofollow"&gt;Configuration&lt;/a&gt; API documentation to find out what you can customize.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-using-simplecov-for-centralized-config" class="anchor" aria-hidden="true" href="#using-simplecov-for-centralized-config"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Using .simplecov for centralized config&lt;/h2&gt;
&lt;p&gt;If you use SimpleCov to merge multiple test suite results (e.g. Test/Unit and Cucumber) into a single report, you'd
normally have to set up all your config options twice, once in &lt;code&gt;test_helper.rb&lt;/code&gt; and once in &lt;code&gt;env.rb&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;To avoid this, you can place a file called &lt;code&gt;.simplecov&lt;/code&gt; in your project root. You can then just leave the
&lt;code&gt;require 'simplecov'&lt;/code&gt; in each test setup helper (&lt;strong&gt;at the top&lt;/strong&gt;) and move the &lt;code&gt;SimpleCov.start&lt;/code&gt; code with all your
custom config options into &lt;code&gt;.simplecov&lt;/code&gt;:&lt;/p&gt;
&lt;div class="highlight highlight-source-ruby"&gt;&lt;pre&gt;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; test/test_helper.rb&lt;/span&gt;
&lt;span class="pl-k"&gt;require&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;simplecov&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; features/support/env.rb&lt;/span&gt;
&lt;span class="pl-k"&gt;require&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;simplecov&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; .simplecov&lt;/span&gt;
&lt;span class="pl-c1"&gt;SimpleCov&lt;/span&gt;.start &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;rails&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt; &lt;span class="pl-k"&gt;do&lt;/span&gt;
  &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; any custom configs like groups and filters can be here at a central place&lt;/span&gt;
&lt;span class="pl-k"&gt;end&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Using &lt;code&gt;.simplecov&lt;/code&gt; rather than separately requiring SimpleCov multiple times is recommended if you are merging multiple
test frameworks like Cucumber and RSpec that rely on each other, as invoking SimpleCov multiple times can cause coverage
information to be lost.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-filters" class="anchor" aria-hidden="true" href="#filters"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Filters&lt;/h2&gt;
&lt;p&gt;Filters can be used to remove selected files from your coverage data. By default, a filter is applied that removes all
files OUTSIDE of your project's root directory - otherwise you'd end up with billions of coverage reports for source
files in the gems you are using.&lt;/p&gt;
&lt;p&gt;You can define your own to remove things like configuration files, tests or whatever you don't need in your coverage
report.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-defining-custom-filters" class="anchor" aria-hidden="true" href="#defining-custom-filters"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Defining custom filters&lt;/h3&gt;
&lt;p&gt;You can currently define a filter using either a String or Regexp (that will then be Regexp-matched against each source
file's path), a block or by passing in your own Filter class.&lt;/p&gt;
&lt;h4&gt;&lt;a id="user-content-string-filter" class="anchor" aria-hidden="true" href="#string-filter"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;String filter&lt;/h4&gt;
&lt;div class="highlight highlight-source-ruby"&gt;&lt;pre&gt;&lt;span class="pl-c1"&gt;SimpleCov&lt;/span&gt;.start &lt;span class="pl-k"&gt;do&lt;/span&gt;
  add_filter &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;/test/&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;
&lt;span class="pl-k"&gt;end&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;This simple string filter will remove all files that match "/test/" in their path.&lt;/p&gt;
&lt;h4&gt;&lt;a id="user-content-regex-filter" class="anchor" aria-hidden="true" href="#regex-filter"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Regex filter&lt;/h4&gt;
&lt;div class="highlight highlight-source-ruby"&gt;&lt;pre&gt;&lt;span class="pl-c1"&gt;SimpleCov&lt;/span&gt;.start &lt;span class="pl-k"&gt;do&lt;/span&gt;
  add_filter &lt;span class="pl-sr"&gt;%r{^/test/}&lt;/span&gt;
&lt;span class="pl-k"&gt;end&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;This simple regex filter will remove all files that start with /test/ in their path.&lt;/p&gt;
&lt;h4&gt;&lt;a id="user-content-block-filter" class="anchor" aria-hidden="true" href="#block-filter"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Block filter&lt;/h4&gt;
&lt;div class="highlight highlight-source-ruby"&gt;&lt;pre&gt;&lt;span class="pl-c1"&gt;SimpleCov&lt;/span&gt;.start &lt;span class="pl-k"&gt;do&lt;/span&gt;
  add_filter &lt;span class="pl-k"&gt;do&lt;/span&gt; |&lt;span class="pl-smi"&gt;source_file&lt;/span&gt;|
    source_file.lines.count &lt;span class="pl-k"&gt;&amp;lt;&lt;/span&gt; &lt;span class="pl-c1"&gt;5&lt;/span&gt;
  &lt;span class="pl-k"&gt;end&lt;/span&gt;
&lt;span class="pl-k"&gt;end&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Block filters receive a SimpleCov::SourceFile instance and expect your block to return either true (if the file is to be
removed from the result) or false (if the result should be kept). Please check out the RDoc for SimpleCov::SourceFile to
learn about the methods available to you. In the above example, the filter will remove all files that have less than 5
lines of code.&lt;/p&gt;
&lt;h4&gt;&lt;a id="user-content-custom-filter-class" class="anchor" aria-hidden="true" href="#custom-filter-class"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Custom filter class&lt;/h4&gt;
&lt;div class="highlight highlight-source-ruby"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;class&lt;/span&gt; &lt;span class="pl-en"&gt;LineFilter&lt;span class="pl-e"&gt; &amp;lt; SimpleCov::Filter&lt;/span&gt;&lt;/span&gt;
  &lt;span class="pl-k"&gt;def&lt;/span&gt; &lt;span class="pl-en"&gt;matches?&lt;/span&gt;(&lt;span class="pl-smi"&gt;source_file&lt;/span&gt;)
    source_file.lines.count &lt;span class="pl-k"&gt;&amp;lt;&lt;/span&gt; filter_argument
  &lt;span class="pl-k"&gt;end&lt;/span&gt;
&lt;span class="pl-k"&gt;end&lt;/span&gt;

&lt;span class="pl-c1"&gt;SimpleCov&lt;/span&gt;.add_filter &lt;span class="pl-c1"&gt;LineFilter&lt;/span&gt;.&lt;span class="pl-k"&gt;new&lt;/span&gt;(&lt;span class="pl-c1"&gt;5&lt;/span&gt;)&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Defining your own filters is pretty easy: Just inherit from SimpleCov::Filter and define a method
'matches?(source_file)'. When running the filter, a true return value from this method will result in the removal of the
given source_file. The filter_argument method is being set in the SimpleCov::Filter initialize method and thus is set to
5 in this example.&lt;/p&gt;
&lt;h4&gt;&lt;a id="user-content-array-filter" class="anchor" aria-hidden="true" href="#array-filter"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Array filter&lt;/h4&gt;
&lt;div class="highlight highlight-source-ruby"&gt;&lt;pre&gt;&lt;span class="pl-c1"&gt;SimpleCov&lt;/span&gt;.start &lt;span class="pl-k"&gt;do&lt;/span&gt;
  &lt;span class="pl-c1"&gt;proc&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;Proc&lt;/span&gt;.&lt;span class="pl-k"&gt;new&lt;/span&gt; { |&lt;span class="pl-smi"&gt;source_file&lt;/span&gt;| &lt;span class="pl-c1"&gt;false&lt;/span&gt; }
  add_filter [&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;string&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-sr"&gt;/regex/&lt;/span&gt;, &lt;span class="pl-c1"&gt;proc&lt;/span&gt;, &lt;span class="pl-c1"&gt;LineFilter&lt;/span&gt;.&lt;span class="pl-k"&gt;new&lt;/span&gt;(&lt;span class="pl-c1"&gt;5&lt;/span&gt;)]
&lt;span class="pl-k"&gt;end&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;You can pass in an array containing any of the other filter types.&lt;/p&gt;
&lt;h4&gt;&lt;a id="user-content-ignoringskipping-code" class="anchor" aria-hidden="true" href="#ignoringskipping-code"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Ignoring/skipping code&lt;/h4&gt;
&lt;p&gt;You can exclude code from the coverage report by wrapping it in &lt;code&gt;# :nocov:&lt;/code&gt;.&lt;/p&gt;
&lt;div class="highlight highlight-source-ruby"&gt;&lt;pre&gt;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; :nocov:&lt;/span&gt;
&lt;span class="pl-k"&gt;def&lt;/span&gt; &lt;span class="pl-en"&gt;skip_this_method&lt;/span&gt;
  never_reached
&lt;span class="pl-k"&gt;end&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; :nocov:&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;The name of the token can be changed to your liking. &lt;a href="https://github.com/colszowka/simplecov/blob/master/features/config_nocov_token.feature"&gt;Learn more about the nocov feature.&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Note:&lt;/strong&gt; You shouldn't have to use the nocov token to skip private methods that are being included in your coverage. If
you appropriately test the public interface of your classes and objects you should automatically get full coverage of
your private methods.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-default-root-filter-and-coverage-for-things-outside-of-it" class="anchor" aria-hidden="true" href="#default-root-filter-and-coverage-for-things-outside-of-it"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Default root filter and coverage for things outside of it&lt;/h2&gt;
&lt;p&gt;By default, SimpleCov filters everything outside of the &lt;code&gt;SimpleCov.root&lt;/code&gt; directory. However, sometimes you may want
to include coverage reports for things you include as a gem, for example a Rails Engine.&lt;/p&gt;
&lt;p&gt;Here's an example by &lt;a href="https://github.com/lsaffie"&gt;@lsaffie&lt;/a&gt; from &lt;a href="https://github.com/colszowka/simplecov/issues/221"&gt;#221&lt;/a&gt;
that shows how you can achieve just that:&lt;/p&gt;
&lt;div class="highlight highlight-source-ruby"&gt;&lt;pre&gt;&lt;span class="pl-c1"&gt;SimpleCov&lt;/span&gt;.start &lt;span class="pl-c1"&gt;:rails&lt;/span&gt; &lt;span class="pl-k"&gt;do&lt;/span&gt;
  filters.clear &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; This will remove the :root_filter and :bundler_filter that come via simplecov's defaults&lt;/span&gt;
  add_filter &lt;span class="pl-k"&gt;do&lt;/span&gt; |&lt;span class="pl-smi"&gt;src&lt;/span&gt;|
    &lt;span class="pl-k"&gt;!&lt;/span&gt;(src.filename &lt;span class="pl-k"&gt;=~&lt;/span&gt; &lt;span class="pl-sr"&gt;/^&lt;span class="pl-pse"&gt;#{&lt;/span&gt;&lt;span class="pl-s1"&gt;&lt;span class="pl-c1"&gt;SimpleCov&lt;/span&gt;.root&lt;/span&gt;&lt;span class="pl-pse"&gt;}&lt;/span&gt;/&lt;/span&gt;) &lt;span class="pl-k"&gt;unless&lt;/span&gt; src.filename &lt;span class="pl-k"&gt;=~&lt;/span&gt; &lt;span class="pl-sr"&gt;/my_engine/&lt;/span&gt;
  &lt;span class="pl-k"&gt;end&lt;/span&gt;
&lt;span class="pl-k"&gt;end&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h2&gt;&lt;a id="user-content-groups" class="anchor" aria-hidden="true" href="#groups"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Groups&lt;/h2&gt;
&lt;p&gt;You can separate your source files into groups. For example, in a Rails app, you'll want to have separate listings for
Models, Controllers, Helpers, and Libs. Group definition works similarly to Filters (and also accepts custom
filter classes), but source files end up in a group when the filter passes (returns true), as opposed to filtering
results, which exclude files from results when the filter results in a true value.&lt;/p&gt;
&lt;p&gt;Add your groups with:&lt;/p&gt;
&lt;div class="highlight highlight-source-ruby"&gt;&lt;pre&gt;&lt;span class="pl-c1"&gt;SimpleCov&lt;/span&gt;.start &lt;span class="pl-k"&gt;do&lt;/span&gt;
  add_group &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;Models&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;app/models&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;
  add_group &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;Controllers&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;app/controllers&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;
  add_group &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;Long files&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; &lt;span class="pl-k"&gt;do&lt;/span&gt; |&lt;span class="pl-smi"&gt;src_file&lt;/span&gt;|
    src_file.lines.count &lt;span class="pl-k"&gt;&amp;gt;&lt;/span&gt; &lt;span class="pl-c1"&gt;100&lt;/span&gt;
  &lt;span class="pl-k"&gt;end&lt;/span&gt;
  add_group &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;Multiple Files&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, [&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;app/models&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;app/controllers&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;] &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; You can also pass in an array&lt;/span&gt;
  add_group &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;Short files&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-c1"&gt;LineFilter&lt;/span&gt;.&lt;span class="pl-k"&gt;new&lt;/span&gt;(&lt;span class="pl-c1"&gt;5&lt;/span&gt;) &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; Using the LineFilter class defined in Filters section above&lt;/span&gt;
&lt;span class="pl-k"&gt;end&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h2&gt;&lt;a id="user-content-merging-results" class="anchor" aria-hidden="true" href="#merging-results"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Merging results&lt;/h2&gt;
&lt;p&gt;You normally want to have your coverage analyzed across ALL of your test suites, right?&lt;/p&gt;
&lt;p&gt;Simplecov automatically caches coverage results in your (coverage_path)/.resultset.json. Those results will then
be automatically merged when generating the result, so when coverage is set up properly for Cucumber and your
unit / functional / integration tests, all of those test suites will be taken into account when building the
coverage report.&lt;/p&gt;
&lt;p&gt;There are two things to note here though:&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-test-suite-names" class="anchor" aria-hidden="true" href="#test-suite-names"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Test suite names&lt;/h3&gt;
&lt;p&gt;SimpleCov tries to guess the name of the currently running test suite based upon the shell command the tests
are running on. This should work fine for Unit Tests, RSpec, and Cucumber. If it fails, it will use the shell
command that invoked the test suite as a command name.&lt;/p&gt;
&lt;p&gt;If you have some non-standard setup and still want nicely labeled test suites, you have to give Simplecov a
cue as to what the name of the currently running test suite is. You can do so by specifying
&lt;code&gt;SimpleCov.command_name&lt;/code&gt; in one test file that is part of your specific suite.&lt;/p&gt;
&lt;p&gt;To customize the suite names on a Rails app (yeah, sorry for being Rails-biased, but everyone knows what
the structure of those projects is. You can apply this accordingly to the RSpecs in your
Outlook-WebDAV-Calendar-Sync gem), you could do something like this:&lt;/p&gt;
&lt;div class="highlight highlight-source-ruby"&gt;&lt;pre&gt;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; test/unit/some_test.rb&lt;/span&gt;
&lt;span class="pl-c1"&gt;SimpleCov&lt;/span&gt;.command_name &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;test:units&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; test/functionals/some_controller_test.rb&lt;/span&gt;
&lt;span class="pl-c1"&gt;SimpleCov&lt;/span&gt;.command_name &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;test:functionals&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; test/integration/some_integration_test.rb&lt;/span&gt;
&lt;span class="pl-c1"&gt;SimpleCov&lt;/span&gt;.command_name &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;test:integration&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; features/support/env.rb&lt;/span&gt;
&lt;span class="pl-c1"&gt;SimpleCov&lt;/span&gt;.command_name &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;features&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Note that this only has to be invoked ONCE PER TEST SUITE, so even if you have 200 unit test files,
specifying it in &lt;code&gt;some_test.rb&lt;/code&gt; is enough.&lt;/p&gt;
&lt;p&gt;Last but not least &lt;strong&gt;if multiple suites resolve to the same &lt;code&gt;command_name&lt;/code&gt;&lt;/strong&gt; be aware that the coverage results &lt;strong&gt;will
clobber each other instead of being merged&lt;/strong&gt;.  SimpleCov is smart enough to detect unique names for the most common
setups, but if you have more than one test suite that doesn't follow a common pattern then you will want to manually
ensure that each suite gets a unique &lt;code&gt;command_name&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;If you are running tests in parallel each process has the potential to clobber results from the other test processes.
If you are relying on the default &lt;code&gt;command_name&lt;/code&gt; then SimpleCov will attempt to detect and avoid parallel test suite
&lt;code&gt;command_name&lt;/code&gt; collisions based on the presence of &lt;code&gt;ENV['PARALLEL_TEST_GROUPS']&lt;/code&gt; and &lt;code&gt;ENV['TEST_ENV_NUMBER']&lt;/code&gt;.  If your
parallel test runner does not set one or both of these then &lt;em&gt;you must&lt;/em&gt; set a &lt;code&gt;command_name&lt;/code&gt; and ensure that it is unique
per process (eg. &lt;code&gt;command_name "Unit Tests PID #{$$}"&lt;/code&gt;).&lt;/p&gt;
&lt;p&gt;If you are using parallel_tests, you must incorporate &lt;code&gt;TEST_ENV_NUMBER&lt;/code&gt; into the command name yourself, in
order for SimpleCov to merge the results correctly. For example:&lt;/p&gt;
&lt;div class="highlight highlight-source-ruby"&gt;&lt;pre&gt;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; spec/spec_helper.rb&lt;/span&gt;
&lt;span class="pl-c1"&gt;SimpleCov&lt;/span&gt;.command_name &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;features&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; &lt;span class="pl-k"&gt;+&lt;/span&gt; (&lt;span class="pl-c1"&gt;ENV&lt;/span&gt;[&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;TEST_ENV_NUMBER&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;] &lt;span class="pl-k"&gt;||&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;)&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;a href="https://github.com/colszowka/simplecov-html" title="SimpleCov HTML Formatter Source Code @ GitHub"&gt;simplecov-html&lt;/a&gt; prints the used test suites in the footer of the generated coverage report.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-timeout-for-merge" class="anchor" aria-hidden="true" href="#timeout-for-merge"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Timeout for merge&lt;/h3&gt;
&lt;p&gt;Of course, your cached coverage data is likely to become invalid at some point. Thus, result sets that are older than
&lt;code&gt;SimpleCov.merge_timeout&lt;/code&gt; will not be used any more. By default, the timeout is 600 seconds (10 minutes), and you can
raise (or lower) it by specifying &lt;code&gt;SimpleCov.merge_timeout 3600&lt;/code&gt; (1 hour), or, inside a configure/start block, with
just &lt;code&gt;merge_timeout 3600&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;You can deactivate merging altogether with &lt;code&gt;SimpleCov.use_merging false&lt;/code&gt;.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-running-coverage-only-on-demand" class="anchor" aria-hidden="true" href="#running-coverage-only-on-demand"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Running coverage only on demand&lt;/h2&gt;
&lt;p&gt;The Ruby STDLIB Coverage library that SimpleCov builds upon is &lt;em&gt;very&lt;/em&gt; fast (on a ~10 min Rails test suite, the speed
drop was only a couple seconds for me), and therefore it's SimpleCov's policy to just generate coverage every time you
run your tests because it doesn't do your test speed any harm and you're always equipped with the latest and greatest
coverage results.&lt;/p&gt;
&lt;p&gt;Because of this, SimpleCov has no explicit built-in mechanism to run coverage only on demand.&lt;/p&gt;
&lt;p&gt;However, you can still accomplish this very easily by introducing an ENV variable conditional into your SimpleCov setup
block, like this:&lt;/p&gt;
&lt;div class="highlight highlight-source-ruby"&gt;&lt;pre&gt;&lt;span class="pl-c1"&gt;SimpleCov&lt;/span&gt;.start &lt;span class="pl-k"&gt;if&lt;/span&gt; &lt;span class="pl-c1"&gt;ENV&lt;/span&gt;[&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;COVERAGE&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;]&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Then, SimpleCov will only run if you execute your tests like this:&lt;/p&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt;COVERAGE=true rake &lt;span class="pl-c1"&gt;test&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h2&gt;&lt;a id="user-content-errors-and-exit-statuses" class="anchor" aria-hidden="true" href="#errors-and-exit-statuses"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Errors and exit statuses&lt;/h2&gt;
&lt;p&gt;To aid in debugging issues, if an error is raised, SimpleCov will print a message to &lt;code&gt;STDERR&lt;/code&gt;
with the exit status of the error, like:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;SimpleCov failed with exit 1
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;This &lt;code&gt;STDERR&lt;/code&gt; message can be disabled with:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;SimpleCov.print_error_status = false
&lt;/code&gt;&lt;/pre&gt;
&lt;h2&gt;&lt;a id="user-content-profiles" class="anchor" aria-hidden="true" href="#profiles"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Profiles&lt;/h2&gt;
&lt;p&gt;By default, SimpleCov's only config assumption is that you only want coverage reports for files inside your project
root. To save yourself from repetitive configuration, you can use predefined blocks of configuration, called 'profiles',
or define your own.&lt;/p&gt;
&lt;p&gt;You can then pass the name of the profile to be used as the first argument to SimpleCov.start. For example, simplecov
comes bundled with a 'rails' profile. It looks somewhat like this:&lt;/p&gt;
&lt;div class="highlight highlight-source-ruby"&gt;&lt;pre&gt;&lt;span class="pl-c1"&gt;SimpleCov&lt;/span&gt;.profiles.define &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;rails&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt; &lt;span class="pl-k"&gt;do&lt;/span&gt;
  add_filter &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;/test/&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;
  add_filter &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;/config/&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;

  add_group &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;Controllers&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;app/controllers&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;
  add_group &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;Models&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;app/models&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;
  add_group &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;Helpers&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;app/helpers&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;
  add_group &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;Libraries&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;lib&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;
&lt;span class="pl-k"&gt;end&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;As you can see, it's just a SimpleCov.configure block. In your test_helper.rb, launch SimpleCov with:&lt;/p&gt;
&lt;div class="highlight highlight-source-ruby"&gt;&lt;pre&gt;&lt;span class="pl-c1"&gt;SimpleCov&lt;/span&gt;.start &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;rails&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;or&lt;/p&gt;
&lt;div class="highlight highlight-source-ruby"&gt;&lt;pre&gt;&lt;span class="pl-c1"&gt;SimpleCov&lt;/span&gt;.start &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;rails&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt; &lt;span class="pl-k"&gt;do&lt;/span&gt;
  &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; additional config here&lt;/span&gt;
&lt;span class="pl-k"&gt;end&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h3&gt;&lt;a id="user-content-custom-profiles" class="anchor" aria-hidden="true" href="#custom-profiles"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Custom profiles&lt;/h3&gt;
&lt;p&gt;You can load additional profiles with the SimpleCov.load_profile('xyz') method. This allows you to build upon an
existing profile and customize it so you can reuse it in unit tests and Cucumber features. For example:&lt;/p&gt;
&lt;div class="highlight highlight-source-ruby"&gt;&lt;pre&gt;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; lib/simplecov_custom_profile.rb&lt;/span&gt;
&lt;span class="pl-k"&gt;require&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;simplecov&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;
&lt;span class="pl-c1"&gt;SimpleCov&lt;/span&gt;.profiles.define &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;myprofile&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt; &lt;span class="pl-k"&gt;do&lt;/span&gt;
  load_profile &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;rails&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;
  add_filter &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;vendor&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt; &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; Don't include vendored stuff&lt;/span&gt;
&lt;span class="pl-k"&gt;end&lt;/span&gt;

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; features/support/env.rb&lt;/span&gt;
&lt;span class="pl-k"&gt;require&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;simplecov_custom_profile&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;
&lt;span class="pl-c1"&gt;SimpleCov&lt;/span&gt;.start &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;myprofile&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; test/test_helper.rb&lt;/span&gt;
&lt;span class="pl-k"&gt;require&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;simplecov_custom_profile&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;
&lt;span class="pl-c1"&gt;SimpleCov&lt;/span&gt;.start &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;myprofile&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h2&gt;&lt;a id="user-content-customizing-exit-behaviour" class="anchor" aria-hidden="true" href="#customizing-exit-behaviour"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Customizing exit behaviour&lt;/h2&gt;
&lt;p&gt;You can define what SimpleCov should do when your test suite finishes by customizing the at_exit hook:&lt;/p&gt;
&lt;div class="highlight highlight-source-ruby"&gt;&lt;pre&gt;&lt;span class="pl-c1"&gt;SimpleCov&lt;/span&gt;.&lt;span class="pl-c1"&gt;at_exit&lt;/span&gt; &lt;span class="pl-k"&gt;do&lt;/span&gt;
  &lt;span class="pl-c1"&gt;SimpleCov&lt;/span&gt;.result.format!
&lt;span class="pl-k"&gt;end&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Above is the default behaviour. Do whatever you like instead!&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-minimum-coverage" class="anchor" aria-hidden="true" href="#minimum-coverage"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Minimum coverage&lt;/h3&gt;
&lt;p&gt;You can define the minimum coverage percentage expected. SimpleCov will return non-zero if unmet.&lt;/p&gt;
&lt;div class="highlight highlight-source-ruby"&gt;&lt;pre&gt;&lt;span class="pl-c1"&gt;SimpleCov&lt;/span&gt;.minimum_coverage &lt;span class="pl-c1"&gt;90&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h3&gt;&lt;a id="user-content-minimum-coverage-by-file" class="anchor" aria-hidden="true" href="#minimum-coverage-by-file"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Minimum coverage by file&lt;/h3&gt;
&lt;p&gt;You can define the minimum coverage by file percentage expected. SimpleCov will return non-zero if unmet. This is useful
to help ensure coverage is relatively consistent, rather than being skewed by particularly good or bad areas of the code.&lt;/p&gt;
&lt;div class="highlight highlight-source-ruby"&gt;&lt;pre&gt;&lt;span class="pl-c1"&gt;SimpleCov&lt;/span&gt;.minimum_coverage_by_file &lt;span class="pl-c1"&gt;80&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h3&gt;&lt;a id="user-content-maximum-coverage-drop" class="anchor" aria-hidden="true" href="#maximum-coverage-drop"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Maximum coverage drop&lt;/h3&gt;
&lt;p&gt;You can define the maximum coverage drop percentage at once. SimpleCov will return non-zero if exceeded.&lt;/p&gt;
&lt;div class="highlight highlight-source-ruby"&gt;&lt;pre&gt;&lt;span class="pl-c1"&gt;SimpleCov&lt;/span&gt;.maximum_coverage_drop &lt;span class="pl-c1"&gt;5&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h3&gt;&lt;a id="user-content-refuse-dropping-coverage" class="anchor" aria-hidden="true" href="#refuse-dropping-coverage"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Refuse dropping coverage&lt;/h3&gt;
&lt;p&gt;You can also entirely refuse dropping coverage between test runs:&lt;/p&gt;
&lt;div class="highlight highlight-source-ruby"&gt;&lt;pre&gt;&lt;span class="pl-c1"&gt;SimpleCov&lt;/span&gt;.refuse_coverage_drop&lt;/pre&gt;&lt;/div&gt;
&lt;h2&gt;&lt;a id="user-content-using-your-own-formatter" class="anchor" aria-hidden="true" href="#using-your-own-formatter"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Using your own formatter&lt;/h2&gt;
&lt;p&gt;You can use your own formatter with:&lt;/p&gt;
&lt;div class="highlight highlight-source-ruby"&gt;&lt;pre&gt;&lt;span class="pl-c1"&gt;SimpleCov&lt;/span&gt;.formatter &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;SimpleCov&lt;/span&gt;::&lt;span class="pl-c1"&gt;Formatter&lt;/span&gt;::&lt;span class="pl-c1"&gt;HTMLFormatter&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;When calling SimpleCov.result.format!, it will be invoked with SimpleCov::Formatter::YourFormatter.new.format(result),
"result" being an instance of SimpleCov::Result. Do whatever your wish with that!&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-using-multiple-formatters" class="anchor" aria-hidden="true" href="#using-multiple-formatters"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Using multiple formatters&lt;/h2&gt;
&lt;p&gt;As of SimpleCov 0.9, you can specify multiple result formats:&lt;/p&gt;
&lt;div class="highlight highlight-source-ruby"&gt;&lt;pre&gt;&lt;span class="pl-c1"&gt;SimpleCov&lt;/span&gt;.formatters &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;SimpleCov&lt;/span&gt;::&lt;span class="pl-c1"&gt;Formatter&lt;/span&gt;::&lt;span class="pl-c1"&gt;MultiFormatter&lt;/span&gt;.&lt;span class="pl-k"&gt;new&lt;/span&gt;([
  &lt;span class="pl-c1"&gt;SimpleCov&lt;/span&gt;::&lt;span class="pl-c1"&gt;Formatter&lt;/span&gt;::&lt;span class="pl-c1"&gt;HTMLFormatter&lt;/span&gt;,
  &lt;span class="pl-c1"&gt;SimpleCov&lt;/span&gt;::&lt;span class="pl-c1"&gt;Formatter&lt;/span&gt;::&lt;span class="pl-c1"&gt;CSVFormatter&lt;/span&gt;,
])&lt;/pre&gt;&lt;/div&gt;
&lt;h2&gt;&lt;a id="user-content-available-formatters-editor-integrations-and-hosted-services" class="anchor" aria-hidden="true" href="#available-formatters-editor-integrations-and-hosted-services"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Available formatters, editor integrations and hosted services&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="doc/alternate-formatters.md"&gt;Open Source formatter and integration plugins for SimpleCov&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="doc/editor-integration.md"&gt;Editor Integration&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="doc/commercial-services.md"&gt;Hosted (commercial) services&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-ruby-version-compatibility" class="anchor" aria-hidden="true" href="#ruby-version-compatibility"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Ruby version compatibility&lt;/h2&gt;
&lt;p&gt;SimpleCov is built in &lt;a href="http://travis-ci.org/colszowka/simplecov" title="SimpleCov is built around the clock by travis-ci.org" rel="nofollow"&gt;Continuous Integration&lt;/a&gt; on Ruby 2.4+ as well as JRuby 9.2+.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-want-to-find-dead-code-in-production" class="anchor" aria-hidden="true" href="#want-to-find-dead-code-in-production"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Want to find dead code in production?&lt;/h2&gt;
&lt;p&gt;Try &lt;a href="https://github.com/danmayer/coverband"&gt;Coverband&lt;/a&gt;.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-want-to-use-spring-with-simplecov" class="anchor" aria-hidden="true" href="#want-to-use-spring-with-simplecov"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Want to use Spring with SimpleCov?&lt;/h2&gt;
&lt;p&gt;If you're using &lt;a href="https://github.com/rails/spring"&gt;Spring&lt;/a&gt; to speed up test suite runs and want to run SimpleCov along
with them, you'll find that it often misreports coverage with the default config due to some sort of eager loading
issue. Don't despair!&lt;/p&gt;
&lt;p&gt;One solution is to &lt;a href="https://github.com/colszowka/simplecov/issues/381#issuecomment-347651728"&gt;explicitly call eager
load&lt;/a&gt;
in your &lt;code&gt;test_helper.rb&lt;/code&gt; / &lt;code&gt;spec_helper.rb&lt;/code&gt; after calling &lt;code&gt;SimpleCov.start&lt;/code&gt;.&lt;/p&gt;
&lt;div class="highlight highlight-source-ruby"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;require&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;simplecov&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;
&lt;span class="pl-c1"&gt;SimpleCov&lt;/span&gt;.start &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;rails&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;
&lt;span class="pl-c1"&gt;Rails&lt;/span&gt;.application.eager_load!&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Alternatively, you could disable Spring while running SimpleCov:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;DISABLE_SPRING=1 rake test
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Or you could remove &lt;code&gt;gem 'spring'&lt;/code&gt; from your &lt;code&gt;Gemfile&lt;/code&gt;.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-troubleshooting" class="anchor" aria-hidden="true" href="#troubleshooting"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Troubleshooting&lt;/h2&gt;
&lt;p&gt;The &lt;strong&gt;most common problem is that simplecov isn't required and started before everything else&lt;/strong&gt;. In order to track
coverage for your whole application &lt;strong&gt;simplecov needs to be the first one&lt;/strong&gt; so that it (and the underlying coverage
library) can subsequently track loaded files and their usage.&lt;/p&gt;
&lt;p&gt;If you are missing coverage for some code a simple trick is to put a puts statement in there and right after
&lt;code&gt;SimpleCov.start&lt;/code&gt; so you can see if the file really was loaded after simplecov was started.&lt;/p&gt;
&lt;div class="highlight highlight-source-ruby"&gt;&lt;pre&gt;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; my_code.rb&lt;/span&gt;
&lt;span class="pl-k"&gt;class&lt;/span&gt; &lt;span class="pl-en"&gt;MyCode&lt;/span&gt;

  &lt;span class="pl-c1"&gt;puts&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;MyCode is being loaded!&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;

  &lt;span class="pl-k"&gt;def&lt;/span&gt; &lt;span class="pl-en"&gt;my_method&lt;/span&gt;
    &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; ...&lt;/span&gt;
  &lt;span class="pl-k"&gt;end&lt;/span&gt;
&lt;span class="pl-k"&gt;end&lt;/span&gt;

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; spec_helper.rb/rails_helper.rb/test_helper.rb/.simplecov whatever&lt;/span&gt;

&lt;span class="pl-c1"&gt;SimpleCov&lt;/span&gt;.start
&lt;span class="pl-c1"&gt;puts&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;SimpleCov started successfully!&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Now when you run your test suite and you see:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;SimpleCov started successfully!
MyCode is being loaded!
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;then it's good otherwise you likely have a problem :)&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-code-of-conduct" class="anchor" aria-hidden="true" href="#code-of-conduct"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Code of Conduct&lt;/h2&gt;
&lt;p&gt;Everyone participating in this project's development, issue trackers and other channels is expected to follow our
&lt;a href="./CODE_OF_CONDUCT.md"&gt;Code of Conduct&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-contributing" class="anchor" aria-hidden="true" href="#contributing"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Contributing&lt;/h2&gt;
&lt;p&gt;See the &lt;a href="https://github.com/colszowka/simplecov/blob/master/CONTRIBUTING.md"&gt;contributing guide&lt;/a&gt;.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-kudos" class="anchor" aria-hidden="true" href="#kudos"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Kudos&lt;/h2&gt;
&lt;p&gt;Thanks to Aaron Patterson for the original idea for this!&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-copyright" class="anchor" aria-hidden="true" href="#copyright"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Copyright&lt;/h2&gt;
&lt;p&gt;Copyright (c) 2010-2017 Christoph Olszowka. See MIT-LICENSE for details.&lt;/p&gt;
&lt;/article&gt;&lt;/div&gt;</description><author>colszowka</author><guid isPermaLink="false">https://github.com/colszowka/simplecov</guid><pubDate>Fri, 01 Nov 2019 00:00:00 GMT</pubDate></item><item><title>carolcodes/videos-pt.br-tecnologia #17 in Ruby, This week</title><link>https://github.com/carolcodes/videos-pt.br-tecnologia</link><description>&lt;p&gt;&lt;i&gt;Repositório de canais no Youtube BR sobre desenvolvimento&lt;/i&gt;&lt;/p&gt;&lt;div id="readme" class="instapaper_body md" data-path="README.md"&gt;&lt;article class="markdown-body entry-content p-5" itemprop="text"&gt;&lt;p&gt;&lt;a href="https://travis-ci.org/carolcodes/videos-pt.br-tecnologia" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/c914c295762ea7b0ae6cc3f41f178f22cafe1c5a/68747470733a2f2f7472617669732d63692e6f72672f6361726f6c636f6465732f766964656f732d70742e62722d7465636e6f6c6f6769612e7376673f6272616e63683d6d6173746572" alt="Build Status" data-canonical-src="https://travis-ci.org/carolcodes/videos-pt.br-tecnologia.svg?branch=master" style="max-width:100%;"&gt;&lt;/a&gt; &lt;a href="https://awesome.re" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/1997c7e760b163a61aba3a2c98f21be8c524be29/68747470733a2f2f617765736f6d652e72652f62616467652e737667" alt="Awesome" data-canonical-src="https://awesome.re/badge.svg" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h1&gt;&lt;a id="user-content-canais-brasileiros-para-pessoas-desenvolvedoras" class="anchor" aria-hidden="true" href="#canais-brasileiros-para-pessoas-desenvolvedoras"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Canais Brasileiros para Pessoas Desenvolvedoras&lt;/h1&gt;
&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="https://camo.githubusercontent.com/cf44c22570386ca765f3b0afd2da41d7c13f6138/68747470733a2f2f692e696d67736166652e6f72672f32632f326330323432373062332e676966"&gt;&lt;img align="right" src="https://camo.githubusercontent.com/cf44c22570386ca765f3b0afd2da41d7c13f6138/68747470733a2f2f692e696d67736166652e6f72672f32632f326330323432373062332e676966" width="150px;" data-canonical-src="https://i.imgsafe.org/2c/2c024270b3.gif" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Repositório responsável em listar Canais no Youtube ou Streaming sobre Tecnologia, Desenvolvimento e Programação em Português.&lt;/p&gt;
&lt;p&gt;Esse projeto foi baseado no projeto &lt;strong&gt;&lt;a href="https://awesome.re" rel="nofollow"&gt;Awesome&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Agradecimentos especiais para &lt;a href="https://github.com/glaucia86"&gt;Glaucia&lt;/a&gt; e &lt;a href="https://github.com/lucasgomide"&gt;Lucas&lt;/a&gt; que se propuseram em ajudar com ótimas ideias e modificações &lt;g-emoji class="g-emoji" alias="heart" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/2764.png"&gt;❤️&lt;/g-emoji&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-contribuições-" class="anchor" aria-hidden="true" href="#contribuições-"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Contribuições &lt;g-emoji class="g-emoji" alias="pushpin" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f4cc.png"&gt;📌&lt;/g-emoji&gt;&lt;/h2&gt;
&lt;p&gt;Pedimos, por favor, que dêem uma olhada nas &lt;strong&gt;&lt;a href="https://github.com/carolcodes/videos-pt.br-tecnologia/blob/master/CONTRIBUTING.md"&gt;Diretrizes de Contribuição&lt;/a&gt;&lt;/strong&gt; antes. E desde já, agradecemos a todos os contribuidores. Vocês são demais! &lt;g-emoji class="g-emoji" alias="heart" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/2764.png"&gt;❤️&lt;/g-emoji&gt;&lt;g-emoji class="g-emoji" alias="heart" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/2764.png"&gt;❤️&lt;/g-emoji&gt;&lt;/p&gt;
&lt;p&gt;Para propor melhorias nessa lista, basta abrir uma &lt;strong&gt;&lt;a href="https://github.com/carolcodes/videos-pt.br-tecnologia/issues"&gt;issue&lt;/a&gt;&lt;/strong&gt; nesse repositório. Assim, todos poderão colaborar para o melhor desenvolvimento desse repositório. E sintam-se à vontade em fazer Pull Requests!!&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-conteúdos-" class="anchor" aria-hidden="true" href="#conteúdos-"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Conteúdos &lt;g-emoji class="g-emoji" alias="fire" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f525.png"&gt;🔥&lt;/g-emoji&gt;&lt;/h2&gt;
&lt;p&gt;Procuramos ordenar os conteúdos e criar uma navegação amigável, visando facilitar a busca por conteúdos e temas. Bastam clicar em algum conteúdo que te interesse, e vòilá!&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="#canais-brasileiros-para-pessoas-desenvolvedoras"&gt;Canais Brasileiros para Pessoas Desenvolvedoras&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="#banco-de-dados--bancos-n%C3%A3o-relacionais-"&gt;Banco de Dados &amp;amp; Bancos Não Relacionais &lt;g-emoji class="g-emoji" alias="floppy_disk" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f4be.png"&gt;💾&lt;/g-emoji&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#desenvolvimento-back-end-"&gt;Desenvolvimento Back-End &lt;g-emoji class="g-emoji" alias="computer" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f4bb.png"&gt;💻&lt;/g-emoji&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#desenvolvimento-front-end-"&gt;Desenvolvimento Front-End &lt;g-emoji class="g-emoji" alias="computer" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f4bb.png"&gt;💻&lt;/g-emoji&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#desenvolvimento-mobile-nativo--h%C3%ADbrido-"&gt;Desenvolvimento Mobile Nativo &amp;amp; Híbrido &lt;g-emoji class="g-emoji" alias="iphone" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f4f1.png"&gt;📱&lt;/g-emoji&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#entrevista-webinars--dicas-"&gt;Entrevista, Webinars &amp;amp; Dicas &lt;g-emoji class="g-emoji" alias="mega" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f4e3.png"&gt;📣&lt;/g-emoji&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#infraestrutura-"&gt;Infraestrutura 🖧 &lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#intelig%C3%AAncia-artificial-"&gt;Inteligência Artificial &lt;g-emoji class="g-emoji" alias="robot" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f916.png"&gt;🤖&lt;/g-emoji&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#games-video_game"&gt;Games &lt;g-emoji class="g-emoji" alias="video_game" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f3ae.png"&gt;🎮&lt;/g-emoji&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#l%C3%B3gica-de-programacao"&gt;Lógica de Programacao&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#seguran%C3%A7a-"&gt;Segurança &lt;g-emoji class="g-emoji" alias="closed_lock_with_key" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f510.png"&gt;🔐&lt;/g-emoji&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;&lt;a id="user-content-banco-de-dados--bancos-não-relacionais-" class="anchor" aria-hidden="true" href="#banco-de-dados--bancos-não-relacionais-"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Banco de Dados &amp;amp; Bancos Não Relacionais &lt;g-emoji class="g-emoji" alias="floppy_disk" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f4be.png"&gt;💾&lt;/g-emoji&gt;&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.youtube.com/caquicoders" rel="nofollow"&gt;CaquiCoders&lt;/a&gt; - Canal da comunidade Caqui Coders, sempre rolam lives de assuntos variados relacionados à tecnologia, tudo completamente gratuito. &lt;em&gt;Tags: &lt;code&gt;entrevistas&lt;/code&gt;, &lt;code&gt;nodejs&lt;/code&gt;, &lt;code&gt;testes&lt;/code&gt;, &lt;code&gt;sql&lt;/code&gt;, &lt;code&gt;azure&lt;/code&gt;, &lt;code&gt;docker&lt;/code&gt;&lt;/em&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.youtube.com/channel/UCjit8ssBmA7pWISOEqFtbAw" rel="nofollow"&gt;Nataniel Paiva Oficial&lt;/a&gt; - Canal focado em MongoDb. &lt;em&gt;Tags: &lt;code&gt;mongodb&lt;/code&gt;&lt;/em&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.youtube.com/channel/UCcgvGfLMZ8Xh8lxhFPMqjLw" rel="nofollow"&gt;Sthefane Soares - Vida Programação&lt;/a&gt; - Canal que trata de programação e opinião própria sobre softwares. Para apaixonados por Tecnologia da Informação. &lt;em&gt;Tags: &lt;code&gt;java&lt;/code&gt;,&lt;code&gt;android&lt;/code&gt;, &lt;code&gt;ionic&lt;/code&gt;, &lt;code&gt;c#&lt;/code&gt;, &lt;code&gt;sql&lt;/code&gt;&lt;/em&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;&lt;a id="user-content-desenvolvimento-back-end-" class="anchor" aria-hidden="true" href="#desenvolvimento-back-end-"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Desenvolvimento Back-End &lt;g-emoji class="g-emoji" alias="computer" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f4bb.png"&gt;💻&lt;/g-emoji&gt;&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.youtube.com/user/andrebaltieri" rel="nofollow"&gt;Andre Baltieri&lt;/a&gt; - Aqui você vai encontrar conteúdo sobre desenvolvimento de aplicações Web na plataforma .NET e muito JavaScript. &lt;em&gt;Tags: &lt;code&gt;.net&lt;/code&gt;, &lt;code&gt;javascript&lt;/code&gt;&lt;/em&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.youtube.com/channel/UCgnACLvM9O5lfm9ZBh_d3cg" rel="nofollow"&gt;Balta.io&lt;/a&gt; - Canal com foco em desenvolvimento WEB. &lt;em&gt;Tags: &lt;code&gt;nodejs&lt;/code&gt;, &lt;code&gt;entrevistas&lt;/code&gt;, &lt;code&gt;carreira em ti&lt;/code&gt;, &lt;code&gt;.net&lt;/code&gt;, &lt;code&gt;c#&lt;/code&gt;, &lt;code&gt;angular&lt;/code&gt;&lt;/em&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.youtube.com/channel/UCMre98RDRijOX_fvG1gnsYg" rel="nofollow"&gt;Bruno Rocha - Python e Flask&lt;/a&gt; - Aprenda Python e Flask com Bruno Rocha. &lt;em&gt;Tags: &lt;code&gt;python&lt;/code&gt;, &lt;code&gt;flask&lt;/code&gt;, &lt;code&gt;web&lt;/code&gt;&lt;/em&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.youtube.com/channel/UCIahKJr2Q50Sprk5ztPGnVg/playlists" rel="nofollow"&gt;Canal dotNET&lt;/a&gt; - Canal para desenvolvedores que desejam aprender a desenvolver software com o .NET Framework. &lt;em&gt;Tags: &lt;code&gt;entrevistas&lt;/code&gt;, &lt;code&gt;azure&lt;/code&gt;, &lt;code&gt;testes&lt;/code&gt;, &lt;code&gt;.net&lt;/code&gt;&lt;/em&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.youtube.com/channel/UC5ClMRHFl8o_MAaO4w7ZYug" rel="nofollow"&gt;Celke&lt;/a&gt; - Canal pertencente a &lt;a href="https://celke.com.br/" rel="nofollow"&gt;Celke&lt;/a&gt; que aborda as linguagens de programação Back-End PHP e NodeJS. &lt;em&gt;Tags: &lt;code&gt;php&lt;/code&gt;,&lt;code&gt;nodejs&lt;/code&gt;,&lt;code&gt;bootstrap&lt;/code&gt;,&lt;code&gt;cakephp&lt;/code&gt;&lt;/em&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.youtube.com/channel/UCaXHZLldk54oEwDDAxY_i4A" rel="nofollow"&gt;Code Experts Learning&lt;/a&gt; - Canal pertencente a &lt;a href="https://codeexpertslearning.com.br/" rel="nofollow"&gt;Code Experts Learning&lt;/a&gt;, escola online de programação na prática, com foco em desenvolvimento web e mobile, mostrando as principais tendências do mercado de desenvolvimento. &lt;em&gt;Tags: &lt;code&gt;php&lt;/code&gt;,&lt;code&gt;nodejs&lt;/code&gt;,&lt;code&gt;ionic&lt;/code&gt;,&lt;code&gt;laravel&lt;/code&gt;,&lt;code&gt;symfony&lt;/code&gt;&lt;/em&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.youtube.com/channel/UCwZFL945LUQcF9OpEWSfbeg" rel="nofollow"&gt;Código Logo&lt;/a&gt; - Canal com foco em desenvolvimento utilizando diversas linguagens de programação, ministrado por Pedro Lima. Aborda a metodologia de tutoriais. Disponilibiliza conteúdos exelentes sobre Inteligência Artificial, Keras, TensorFlow e outras. &lt;em&gt;Tags: &lt;code&gt;.net&lt;/code&gt;,  &lt;code&gt;c#&lt;/code&gt;,&lt;code&gt;c&lt;/code&gt;, &lt;code&gt;c++&lt;/code&gt;, &lt;code&gt;python&lt;/code&gt;, &lt;code&gt;Keras&lt;/code&gt;, &lt;code&gt;TensorFlow&lt;/code&gt;, &lt;code&gt;inteligência artificial&lt;/code&gt;&lt;/em&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.youtube.com/channel/UCLoVnmvp0fYn-BCK7yKTxUQ" rel="nofollow"&gt;Coding Night&lt;/a&gt; - Canal para compartilhar conhecimento em diversas tecnologias para desenvolvimento de software, principalmente na plataforma Microsoft. &lt;em&gt;Tags: &lt;code&gt;.net&lt;/code&gt;, &lt;code&gt;c#&lt;/code&gt;, &lt;code&gt;DevOps&lt;/code&gt;, &lt;code&gt;entrevistas&lt;/code&gt;&lt;/em&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.youtube.com/channel/UCwUtX5abMMaL8KkryVJx09w" rel="nofollow"&gt;Como Programar Melhor&lt;/a&gt; - Canal do Raniere Silva com dicas e reflexões sobre desenvolvimento, além de cursos de C#. &lt;em&gt;Tags: &lt;code&gt;c#&lt;/code&gt;, &lt;code&gt;.net&lt;/code&gt;, &lt;code&gt;entrevista&lt;/code&gt;, &lt;code&gt;carreira em ti&lt;/code&gt;&lt;/em&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.youtube.com/user/cursosemvideo" rel="nofollow"&gt;Curso Em Video&lt;/a&gt; - No canal do Curso em video são encontrados diversos cursos na àrea de tecnologia, sendo alguns deles com foco em programação e desenvolvimento web. &lt;em&gt;Tags: &lt;code&gt;python&lt;/code&gt;, &lt;code&gt;javascript&lt;/code&gt;, &lt;code&gt;html&lt;/code&gt;, &lt;code&gt;java&lt;/code&gt;, &lt;code&gt;sql&lt;/code&gt;, &lt;code&gt;php&lt;/code&gt;&lt;/em&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.youtube.com/user/italogross" rel="nofollow"&gt;De aluno para aluno&lt;/a&gt; - Canal do Italo com vários vídeos de programação em C e JAVA. Bem completo e com ótima didática. &lt;em&gt;Tags: &lt;code&gt;c&lt;/code&gt;, &lt;code&gt;c#&lt;/code&gt;, &lt;code&gt;java&lt;/code&gt;&lt;/em&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.youtube.com/channel/UCkDJEKQpbxY9LFUwfEKNRbQ" rel="nofollow"&gt;DevMasterTeam - Code &amp;amp; Learning&lt;/a&gt; - Canal com foco em videos curtos sem enrolação, com cursos de alta qualidade e atualizados. &lt;em&gt;Tags: &lt;code&gt;java&lt;/code&gt;, &lt;code&gt;android&lt;/code&gt;, &lt;code&gt;kotlin&lt;/code&gt;, &lt;code&gt;git&lt;/code&gt;&lt;/em&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.youtube.com/channel/UCexpfXtye8oLjTSW-wKipcw" rel="nofollow"&gt;Django MOC&lt;/a&gt; - Canal com foco em desenvolvimento WEB voltado para: Python com Django. &lt;em&gt;Tags: &lt;code&gt;python&lt;/code&gt;, &lt;code&gt;django&lt;/code&gt;&lt;/em&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.youtube.com/user/mendesesduardo/featured" rel="nofollow"&gt;Eduardo Mendes - Live de Python&lt;/a&gt; - Canal focado em Lives sobre o mundo de Python. &lt;em&gt;Tags: &lt;code&gt;python&lt;/code&gt;, &lt;code&gt;carreira em ti&lt;/code&gt;&lt;/em&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.youtube.com/user/headfox" rel="nofollow"&gt;Eduardo Pires&lt;/a&gt; - Melhor canal para quem realmente quer aprender sobre padrões de desenvolvimento: SOLID, DDD, TDD tudo em C# &amp;amp; .NET. &lt;em&gt;Tags: &lt;code&gt;asp.net&lt;/code&gt;, &lt;code&gt;c#&lt;/code&gt;, &lt;code&gt;ddd&lt;/code&gt;, &lt;code&gt;tdd&lt;/code&gt;, &lt;code&gt;design patterns&lt;/code&gt;&lt;/em&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.youtube.com/engenhariareversa" rel="nofollow"&gt;Engenharia Reversa&lt;/a&gt; - Canal com vídeos didáticos e profundos sobre assuntos complexos da ciência da computação. &lt;em&gt;Tags: &lt;code&gt;ciência da computação&lt;/code&gt;, &lt;code&gt;seguranca da informação&lt;/code&gt;, &lt;code&gt;segurança e hacking&lt;/code&gt;&lt;/em&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.youtube.com/channel/UC7c2c7E1L9xhCinShl8-iZA" rel="nofollow"&gt;EuProgramador&lt;/a&gt; - O canal aborda assuntos relacionados à vida de um programador. Temas como front-end backend são discultidos em bate papos. Têm também aulas, dicas e tutoriais sobre Golang, PHP e React. &lt;em&gt;Tags: &lt;code&gt;golang&lt;/code&gt;, &lt;code&gt;php&lt;/code&gt;, &lt;code&gt;react&lt;/code&gt;&lt;/em&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.youtube.com/channel/UCRu4BNG9k_BRUu-aCYJsgHg" rel="nofollow"&gt;eXcript&lt;/a&gt; - Canal com foco em tutoriais sobre diferentes linguagens de programação, ministrado pelo professor Cláudio R. Carvalho, com foco em iniciantes e uma didática rápida e de fácil entendimento, este canal merece sua visita. &lt;em&gt;Tags: &lt;code&gt;java&lt;/code&gt;, &lt;code&gt;php&lt;/code&gt;, &lt;code&gt;c#&lt;/code&gt;,&lt;code&gt;c&lt;/code&gt;, &lt;code&gt;c++&lt;/code&gt;, &lt;code&gt;python&lt;/code&gt;&lt;/em&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.youtube.com/channel/UCh1mfPKMBS0wZz_E5RRFQ_A" rel="nofollow"&gt;Filipe Morelli&lt;/a&gt; - Canal focado em Desenvolvimento WEB. &lt;em&gt;Tags: &lt;code&gt;cakephp&lt;/code&gt;, &lt;code&gt;php&lt;/code&gt;, &lt;code&gt;less&lt;/code&gt;, &lt;code&gt;linguagem R&lt;/code&gt;, &lt;code&gt;typescript&lt;/code&gt;&lt;/em&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.youtube.com/channel/UCAf9hyf52WQe1oTRhrtpCBw" rel="nofollow"&gt;G- Tech&lt;/a&gt; - Cursos de programação, desenvolvimento de sistemas e sites e consultoria em TI. &lt;em&gt;Tags: &lt;code&gt;java&lt;/code&gt;, &lt;code&gt;c&lt;/code&gt;, &lt;code&gt;c++&lt;/code&gt;, &lt;code&gt;php&lt;/code&gt;&lt;/em&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.youtube.com/channel/UC2Qzw5aqCBk_z0lWJnumWQQ" rel="nofollow"&gt;Glaucia Lemos&lt;/a&gt; - Canal para desenvolvedores que desejam aprender a desenvolver software com: Node.js, JavaScript, Angular, TDD, Padrões de Desenvolvimento, ChatBots, Inteligência Artificial e .NET Framework. &lt;em&gt;Tags: &lt;code&gt;javascript&lt;/code&gt;, &lt;code&gt;nodejs&lt;/code&gt;, &lt;code&gt;angularjs&lt;/code&gt;, &lt;code&gt;.net&lt;/code&gt;, &lt;code&gt;chatbots&lt;/code&gt;, &lt;code&gt;inteligência artificial&lt;/code&gt;, &lt;code&gt;entrevistas&lt;/code&gt;&lt;/em&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.youtube.com/channel/UCBFCipnenbWX-EhWn05r6aA" rel="nofollow"&gt;Glider&lt;/a&gt; - Nosso canal no youtube foca na ideologia que o Glider representa para ensinar para você tudo que a gente acha curioso e inteligente na área de tecnologia. &lt;em&gt;Tags: &lt;code&gt;Lua&lt;/code&gt;, &lt;code&gt;regex&lt;/code&gt;&lt;/em&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.youtube.com/channel/UC_issB-37g9lwfAA37fy2Tg" rel="nofollow"&gt;Guia do Programador&lt;/a&gt; - Canal focado em desenvolvimento web e programação, com cursos de Python, Django, Node.Js, Git, dentre outros. &lt;em&gt;Tags: &lt;code&gt;python&lt;/code&gt;, &lt;code&gt;django&lt;/code&gt;, &lt;code&gt;sql&lt;/code&gt;, &lt;code&gt;nodejs&lt;/code&gt;, &lt;code&gt;php&lt;/code&gt;, &lt;code&gt;git&lt;/code&gt;&lt;/em&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.youtube.com/channel/UCmjj41YfcaCpZIkU-oqVIIw" rel="nofollow"&gt;Ignorância Zero&lt;/a&gt; - Canal focado em Python, com um método simples e direto. &lt;em&gt;Tags: &lt;code&gt;python&lt;/code&gt;, &lt;code&gt;django&lt;/code&gt;, &lt;code&gt;carreira em ti&lt;/code&gt;&lt;/em&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.youtube.com/user/JLDRPT" rel="nofollow"&gt;João Ribeiro&lt;/a&gt; - Canal focado em Desenvolvimento WEB. &lt;em&gt;Tags: &lt;code&gt;javascript&lt;/code&gt;, &lt;code&gt;html&lt;/code&gt;, &lt;code&gt;css&lt;/code&gt;, &lt;code&gt;sass&lt;/code&gt;, &lt;code&gt;typescript&lt;/code&gt;, &lt;code&gt;ajax&lt;/code&gt;, &lt;code&gt;sql&lt;/code&gt;, &lt;code&gt;.net&lt;/code&gt;, &lt;code&gt;c#&lt;/code&gt;, &lt;code&gt;bootstrap&lt;/code&gt;, &lt;code&gt;java&lt;/code&gt;, &lt;code&gt;jquery&lt;/code&gt;&lt;/em&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.youtube.com/user/progdescomplicada" rel="nofollow"&gt;Linguagem C Programação Descomplicada&lt;/a&gt; - Ensino em Linguagem C que aborda desde conceitos básicos de algoritmos até conceitos avançados de estrutura de dados, como teoria dos grafos e complexidade. Ministrado pelo Dr. André Backes, professor adjunto da Universidade Federal de Uberlândia e revisor de periódico da IEEE Transactions on Image Processing. Também conta com uma série de vídeo aulas sobre matlab. &lt;em&gt;Tags:&lt;code&gt;c&lt;/code&gt;, &lt;code&gt;matlab&lt;/code&gt;&lt;/em&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.youtube.com/user/lucascaton" rel="nofollow"&gt;Lucas Caton&lt;/a&gt; - Lives e vídeos sobre programação, com "mão na massa", direto ao ponto e sem enrolação. &lt;em&gt;Tags: &lt;code&gt;ruby&lt;/code&gt;, &lt;code&gt;rails&lt;/code&gt;, &lt;code&gt;react&lt;/code&gt;, &lt;code&gt;criação de APIs&lt;/code&gt;, &lt;code&gt;expressões regulares&lt;/code&gt;, &lt;code&gt;css&lt;/code&gt;, &lt;code&gt;jekyll&lt;/code&gt;, &lt;code&gt;rspec&lt;/code&gt;&lt;/em&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.youtube.com/channel/UCoqYHkQy8q5nEMv1gkcZgSw" rel="nofollow"&gt;Macoratti&lt;/a&gt; - Um dos canais mais conhecidos por todos os brasileiros. Macoratti possui inúmeros tutoriais, desde do Front-End desde ao Back-End, abordando assim, inúmeros tópicos. &lt;em&gt;Tags: &lt;code&gt;asp.net&lt;/code&gt;, &lt;code&gt;asp.net core&lt;/code&gt;, &lt;code&gt;react native&lt;/code&gt;, &lt;code&gt;angularjs&lt;/code&gt;, &lt;code&gt;xamarin&lt;/code&gt;, &lt;code&gt;visual basic&lt;/code&gt;, &lt;code&gt;c#&lt;/code&gt;, &lt;code&gt;sql&lt;/code&gt;&lt;/em&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.youtube.com/channel/UC9l968_q3tSQIRROvJPesow/" rel="nofollow"&gt;Marcos Azevedo&lt;/a&gt; - O canal e focado em compartilhar conhecimento para que todos possam aprender tudo sobre programação JAVA. &lt;em&gt;Tags: &lt;code&gt;java&lt;/code&gt;, &lt;code&gt;spring-boot&lt;/code&gt;, &lt;code&gt;linux&lt;/code&gt;&lt;/em&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.youtube.com/channel/UC2WbG8UgpPaLcFSNJYwtPow" rel="nofollow"&gt;Michelli Brito&lt;/a&gt; - Este canal apresenta um conteúdo relacionado a programação web, utilizando principalmente a linguagem Java e o Spring Framework. &lt;em&gt;Tags:&lt;code&gt;java&lt;/code&gt;&lt;/em&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.youtube.com/channel/UCd4Cp-rzdSAze6C-FOFQ3aw/videos" rel="nofollow"&gt;NodeBR&lt;/a&gt; - Canal que disponibiliza vários webinars sobre desenvolvimento com Node.js. &lt;em&gt;Tags: &lt;code&gt;javascript&lt;/code&gt;,&lt;code&gt;nodejs&lt;/code&gt;&lt;/em&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.youtube.com/channel/UC44Mzz2-5TpyfklUCQ5NuxQ" rel="nofollow"&gt;One Bit Code&lt;/a&gt; - O One Bit Code nasceu como um blog dedicado ao mundo da programação, em especial &lt;em&gt;Ruby on Rails&lt;/em&gt;. No canal é disponibilizado posts, tutoriais, screencasts e dicas sobre temas que envolvem linhas de códigos. &lt;em&gt;Tags:&lt;code&gt;ruby on rails&lt;/code&gt;, &lt;code&gt;carreira em ti&lt;/code&gt;, &lt;code&gt;entrevista&lt;/code&gt;&lt;/em&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.youtube.com/channel/UCORZcu08VQiRCKpVGHTWwAA" rel="nofollow"&gt;Otávio Miranda&lt;/a&gt; - O canal do Otávio Miranda fala de diversas tecnologias como php, python, linux, wordpress. &lt;em&gt;Tags:&lt;code&gt;linux&lt;/code&gt;, &lt;code&gt;php&lt;/code&gt;, &lt;code&gt;python&lt;/code&gt;&lt;/em&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.youtube.com/PortalProgramando" rel="nofollow"&gt;Portal Programando&lt;/a&gt; - O objetivo do canal é apresentar conceitos de algoritmos, programação e dicas da área de tecnologia. É apresentado também cursos completos e cursos práticos de pequena duração. O conteúdo do canal está disponível como podcast de mesmo nome. &lt;em&gt;Tags: &lt;code&gt;algoritimos&lt;/code&gt;&lt;/em&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.youtube.com/channel/UC70mr11REaCqgKke7DPJoLg/" rel="nofollow"&gt;Python Café&lt;/a&gt; - Canal do Hallison Paz focado em desenvolvimento com Python, incluindo playlists de estruturas de dados e programação orientada a objetos com a linguagem. &lt;em&gt;Tags:&lt;code&gt;python&lt;/code&gt;&lt;/em&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.youtube.com/channel/UCripRddD4BnaMcU833ExuwA/" rel="nofollow"&gt;Python para Zumbis&lt;/a&gt; - Programação para iniciantes com Python. &lt;em&gt;Tags:&lt;code&gt;python&lt;/code&gt;&lt;/em&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.youtube.com/channel/UCKmWWUSI6m51A8a-bZ0dQNw" rel="nofollow"&gt;TDevRocks&lt;/a&gt; - Programação Delphi Desktop, Web e Mobile para todos os níveis, incluindo dicas, cursos grátis, Clean Code e RestFULL. &lt;em&gt;Tags:&lt;code&gt;Delphi&lt;/code&gt;, &lt;code&gt;Mobile&lt;/code&gt;, &lt;code&gt;RestFULL&lt;/code&gt;, &lt;code&gt;DataSnap&lt;/code&gt;&lt;/em&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.youtube.com/channel/UCTjD7yoMG-pNFqy50FE0u5A/featured" rel="nofollow"&gt;Techiesse&lt;/a&gt; - Aulas, tutoriais e vídeos sobre tecnologia, engenharia, telecomunicações e programação. Aulas de MATLAB, Scilab ou programação. &lt;em&gt;Tags: &lt;code&gt;lua&lt;/code&gt;, &lt;code&gt;matlab&lt;/code&gt;&lt;/em&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.youtube.com/channel/UCs19XXHJtVgqBahCEAQEiIg" rel="nofollow"&gt;Thulio Bittencourt&lt;/a&gt; - Canal focado em Delphi, MongoDB, FirebirdSQL, ORM e JavaScript. Apresenta algumas séries com dicas e cursos. &lt;em&gt;Tags:&lt;code&gt;Delphi&lt;/code&gt;,&lt;code&gt;MeteorJS&lt;/code&gt;, &lt;code&gt;MongoDB&lt;/code&gt;, &lt;code&gt;FirebirdSQL&lt;/code&gt;, &lt;code&gt;RAD - Rapid Application Development&lt;/code&gt;&lt;/em&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.youtube.com/user/tiagomatosweb" rel="nofollow"&gt;Tiago Matos&lt;/a&gt; - Canal focado em vídeo aulas sobre Vue.js.&lt;em&gt;Tags: &lt;code&gt;laravel&lt;/code&gt;, &lt;code&gt;javascript&lt;/code&gt;, &lt;code&gt;css&lt;/code&gt;, &lt;code&gt;sass&lt;/code&gt;, &lt;code&gt;vuejs&lt;/code&gt;&lt;/em&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.youtube.com/user/waldemaneto/featured" rel="nofollow"&gt;Waldemar Neto&lt;/a&gt; - Canal do &lt;em&gt;Software Engineer&lt;/em&gt; Waldemar Neto, contendo muita informação sobre diversas tecnologias atuais como Docker, Elasticsearch, Node.Js e muito mais. &lt;em&gt;Tags: &lt;code&gt;javascript&lt;/code&gt;,&lt;code&gt;nodejs&lt;/code&gt;, &lt;code&gt;php&lt;/code&gt;&lt;/em&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;&lt;a id="user-content-desenvolvimento-front-end-" class="anchor" aria-hidden="true" href="#desenvolvimento-front-end-"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Desenvolvimento Front-End &lt;g-emoji class="g-emoji" alias="computer" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f4bb.png"&gt;💻&lt;/g-emoji&gt;&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.youtube.com/channel/UCZXLQtYuKWpPq2Oaf5zpzhg" rel="nofollow"&gt;201 Front-End&lt;/a&gt; - Canal com conteúdos relacionados ao desenvolvimento Front-End. Interfaces amigáveis, programação de animações, estética de interfaces, plugins e bibliotecas, dentre outros assuntos. &lt;em&gt;Tags: &lt;code&gt;front-end&lt;/code&gt;,&lt;code&gt;html&lt;/code&gt;,&lt;code&gt;css&lt;/code&gt;,&lt;code&gt;ui design&lt;/code&gt;,&lt;code&gt;web design&lt;/code&gt;&lt;/em&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.youtube.com/user/algaworks/playlists?view=1&amp;amp;flow=grid" rel="nofollow"&gt;Algaworks&lt;/a&gt; - Canal da empresa de cursos online Algaworks, onde disponibilizam variados vídeos desde material de apoio sobre diversas tecnologias da atualidade até dicas para quem atua ou pretende atuar na área de desenvolvimento. &lt;em&gt;Tags: &lt;code&gt;html5&lt;/code&gt;, &lt;code&gt;css&lt;/code&gt;, &lt;code&gt;angularjs&lt;/code&gt;, &lt;code&gt;angular&lt;/code&gt;, &lt;code&gt;angular material&lt;/code&gt;&lt;/em&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.youtube.com/+sw9brl" rel="nofollow"&gt;Canal SW9 - FullStack&lt;/a&gt; - O Canal SW9 é mantido por Paulo Eduardo de Camargo. Engenheiro da Computação com mais de 15 anos de experiência em desenvolvimento web. A proposta do canal é apoiar a comunidade de desenvolvedores web e híbrido mobile compartilhando dicas, tutorias e aulas relacionadas com linguagens Back e Front, Análise de Ferramentas/Serviços Web, API, SEO e Trilhas de Conhecimento. Todos os códigos fontes estão disponíveis de graça em &lt;a href="http://blog.sw9.com.br/acesso-area-de-downloads" rel="nofollow"&gt;http://blog.sw9.com.br/acesso-area-de-downloads&lt;/a&gt; . &lt;em&gt;Tags: &lt;code&gt;Javascript&lt;/code&gt;, &lt;code&gt;BootStrap UI&lt;/code&gt;, &lt;code&gt;HTML5&lt;/code&gt;,&lt;code&gt;CSS3&lt;/code&gt;, &lt;code&gt;AngularJS&lt;/code&gt;, &lt;code&gt;Angular 2+&lt;/code&gt;, &lt;code&gt;NodeJS&lt;/code&gt;, &lt;code&gt;PHP&lt;/code&gt;, &lt;code&gt;API&lt;/code&gt;, &lt;code&gt;TDD&lt;/code&gt;, &lt;code&gt;Firebase&lt;/code&gt;, &lt;code&gt;Gulp&lt;/code&gt;&lt;/em&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.youtube.com/ClaudineyJunior" rel="nofollow"&gt;Claudiney Junior&lt;/a&gt; - Canal focado principalmente em tecnologia e programação, com ênfase em Javascript, Node.js e ferramentas DevOps, mas de vez em quando também rolam uns conteúdos de diversidades, como jogos e dicas pra relaxar e se divertir. &lt;em&gt;Tags: &lt;code&gt;nodejs&lt;/code&gt;, &lt;code&gt;javascript&lt;/code&gt;, &lt;code&gt;devopss&lt;/code&gt;&lt;/em&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.youtube.com/channel/UCm63tB8wsKOVvxoU4iMpS2A" rel="nofollow"&gt;Code Hill College&lt;/a&gt; - Canal com aulas rápidas e de fácil compreensão com tutoriais de JavaScript e de Angular para iniciantes. &lt;em&gt;Tags: &lt;code&gt;javascript&lt;/code&gt;, &lt;code&gt;angular&lt;/code&gt;&lt;/em&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.youtube.com/channel/UCsaZv7dlu8737N0e44kX66w" rel="nofollow"&gt;Código de Estagiário&lt;/a&gt; - Canal com projetos práticos sobre javascript, react, vue e outras tecnologias do ecossistema do javascript. &lt;em&gt;Tags: &lt;code&gt;javascript&lt;/code&gt;, &lt;code&gt;react&lt;/code&gt;, &lt;code&gt;vue&lt;/code&gt;.&lt;/em&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.youtube.com/channel/UCVheRLgrk7bOAByaQ0IVolg/playlists" rel="nofollow"&gt;CollabCode&lt;/a&gt; - No canal do Marco tem cursos online incríveis, conteúdo técnico de qualidade e sem contar que o cara tem uma didática absurda. &lt;em&gt;Tags: &lt;code&gt;javascript&lt;/code&gt;, &lt;code&gt;react&lt;/code&gt;, &lt;code&gt;front-end&lt;/code&gt;, &lt;code&gt;entrevistas&lt;/code&gt;, &lt;code&gt;carreira em ti&lt;/code&gt;&lt;/em&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.youtube.com/playlist?list=PLBjvYfV_TvwJlOctQ49KiOrxrFwJGqAdr" rel="nofollow"&gt;Curso Quasar Framework - Patrick Monteiro&lt;/a&gt; - Canal do Patrick Monteiro focado atualmente em um curso de Quasar Framework. O que motivou a produção deste curso, foi a falta de conteúdo atualizado em português na internet. &lt;em&gt;Tags: &lt;code&gt;quasar framework&lt;/code&gt;, &lt;code&gt;javascript&lt;/code&gt;&lt;/em&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.youtube.com/channel/UCdbMvobipjxi6gdr3L1PBrQ" rel="nofollow"&gt;Danki Code&lt;/a&gt; - Vídeos sobre Programação, Marketing digital e Empreendedorismo. &lt;em&gt;Tags: &lt;code&gt;html&lt;/code&gt;, &lt;code&gt;carreira em ti&lt;/code&gt;&lt;/em&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.youtube.com/user/CanalSamuelson" rel="nofollow"&gt;Descompila&lt;/a&gt; - Dicas, sacadas e tutoriais para você tornar-se um profissional completo ou um devPleno. &lt;em&gt;Tags: &lt;code&gt;javascript&lt;/code&gt;, &lt;code&gt;react&lt;/code&gt;, &lt;code&gt;react native&lt;/code&gt;, &lt;code&gt;carreira em ti&lt;/code&gt;&lt;/em&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.youtube.com/channel/UCjF0OccBT05WxsJb2zNkL4g" rel="nofollow"&gt;DevDojo&lt;/a&gt; - O DevDojo é um canal de cursos gratuitos de desenvolvimento, como Java e TypeScript. &lt;em&gt;Tags: &lt;code&gt;java&lt;/code&gt;, &lt;code&gt;typescript&lt;/code&gt;&lt;/em&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.youtube.com/channel/UCj75B_51OXb9qH15wiHs-Hw" rel="nofollow"&gt;DeveloperDeck101&lt;/a&gt; - O DeveloperDeck101 é um canal que ensina novas tecnologias passo a passo e sem complicação.&lt;em&gt;Tags:  &lt;code&gt;javascript&lt;/code&gt;, &lt;code&gt;react&lt;/code&gt;, &lt;code&gt;react-native&lt;/code&gt;,  &lt;code&gt;bootstrap&lt;/code&gt;,  &lt;code&gt;flexbox&lt;/code&gt;,  &lt;code&gt;docker&lt;/code&gt;,  &lt;code&gt;aws&lt;/code&gt;&lt;/em&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.youtube.com/channel/UC07JWf9A0B1scApbS1Te7Ww/featured" rel="nofollow"&gt;DevPleno&lt;/a&gt; - Dicas, sacadas e tutoriais para você tornar-se um profissional completo ou um devPleno. &lt;em&gt;Tags: &lt;code&gt;javascript&lt;/code&gt;, &lt;code&gt;react&lt;/code&gt;, &lt;code&gt;react native&lt;/code&gt;, &lt;code&gt;carreira em ti&lt;/code&gt;&lt;/em&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.youtube.com/channel/UC29n3f6JhwqtD-kCJi_BwoA" rel="nofollow"&gt;Emerson Broga&lt;/a&gt; - Aprenda Javascript, NodeJs, React e muito mais! Dicas e tutoriais sobre programação para você se tornar um profissional mais qualificado. &lt;em&gt;Tags: &lt;code&gt;javascript&lt;/code&gt;, &lt;code&gt;nodejs&lt;/code&gt;, &lt;code&gt;react&lt;/code&gt;, &lt;code&gt;html&lt;/code&gt;, &lt;code&gt;css&lt;/code&gt;&lt;/em&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.youtube.com/c/EscolaFrontend" rel="nofollow"&gt;Escola Front-End&lt;/a&gt; - Canal que disponibiliza conteúdo referente a aprendizagem do mundo Front-End, Desde Simples Sites em HTML,CSS e JS até Frameworks JS. &lt;em&gt;Tags: &lt;code&gt;javascript&lt;/code&gt;, &lt;code&gt;html&lt;/code&gt;, &lt;code&gt;css&lt;/code&gt;&lt;/em&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.youtube.com/user/vedovelli" rel="nofollow"&gt;Fabio Vedovelli&lt;/a&gt; - O canal tem o foco principal desenvolvimento de Front-End. &lt;em&gt;Tags: &lt;code&gt;vuejs&lt;/code&gt;, &lt;code&gt;react&lt;/code&gt;, &lt;code&gt;angular&lt;/code&gt;, &lt;code&gt;laravel&lt;/code&gt;&lt;/em&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.youtube.com/channel/UCEkMd3Bw_bVUuGbXU0sFPSg" rel="nofollow"&gt;Guilherme Chinaglia&lt;/a&gt; - Vídeos sobre Programação, Tecnologia e Empreendedorismo. &lt;em&gt;Tags: &lt;code&gt;html5&lt;/code&gt;, &lt;code&gt;css3&lt;/code&gt;, &lt;code&gt;javascript&lt;/code&gt;&lt;/em&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.youtube.com/channel/UC-nuC9rI-GnfdWubIzN7FRA" rel="nofollow"&gt;JWDev Treinamentos&lt;/a&gt; - O canal que fala sobre tecnologia de uma forma diferente, sem essa de Hello World! Aqui vamos sempre usar das ferramentas de desenvolvimento para recriar de forma inusitada programas consagrados. &lt;em&gt;Tags: &lt;code&gt;javascript&lt;/code&gt;, &lt;code&gt;games&lt;/code&gt;, &lt;code&gt;layouts&lt;/code&gt;, &lt;code&gt;css&lt;/code&gt;, &lt;code&gt;typescript&lt;/code&gt;, &lt;code&gt;react&lt;/code&gt;, &lt;code&gt;angular&lt;/code&gt;, &lt;code&gt;node.js&lt;/code&gt;, &lt;code&gt;rxjs&lt;/code&gt;&lt;/em&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.youtube.com/channel/UCn2jh8rvEePP9s61z-H1P1w" rel="nofollow"&gt;Keven Jesus&lt;/a&gt; - Canal do instrutor de programação Keven Jesus, com um bom material para quem está iniciando em JavaScript. &lt;em&gt;Tags: &lt;code&gt;javascript&lt;/code&gt;, &lt;code&gt;bootstrap&lt;/code&gt;&lt;/em&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.youtube.com/channel/UCK4uy3QaoEFQ7DLWR-Ih-gg" rel="nofollow"&gt;Mateus Fernandes&lt;/a&gt; - O canal do Mateus Fernades e focado na aprendizagem do mundo Front-End com javascript. &lt;em&gt;Tags: &lt;code&gt;node&lt;/code&gt;, &lt;code&gt;react&lt;/code&gt;, &lt;code&gt;react-redux&lt;/code&gt;&lt;/em&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.youtube.com/channel/UCZZ0NTtOgsLIT4Skr6GUpAw" rel="nofollow"&gt;Node Studio Treinamentos&lt;/a&gt; - Cursos completos de Desenvolvimento Web. 100% vídeo aulas, acesso ilimitado e aprendizado garantido. &lt;em&gt;Tags: &lt;code&gt;php&lt;/code&gt;, &lt;code&gt;css&lt;/code&gt;, &lt;code&gt;html&lt;/code&gt;&lt;/em&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.youtube.com.br/user/origamidlabs" rel="nofollow"&gt;Origamid&lt;/a&gt; - Canal focado em desenvolvimento web e web design. &lt;em&gt;Tags: &lt;code&gt;javascript&lt;/code&gt;, &lt;code&gt;vue&lt;/code&gt;, &lt;code&gt;html&lt;/code&gt;, &lt;code&gt;css&lt;/code&gt;, &lt;code&gt;adobexd&lt;/code&gt;&lt;/em&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.youtube.com/channel/UC5fWvbBnaFAi2hJlHRmg5kw/videos?&amp;amp;ab_channel=ProgramadoraBordo" rel="nofollow"&gt;Programador a Bordo&lt;/a&gt;- O canal tem foco em desenvolvimento web e em todo o seu universo, desde técnico ao mercado de trabalho. &lt;em&gt;Tags: &lt;code&gt;javascript&lt;/code&gt;, &lt;code&gt;html&lt;/code&gt;, &lt;code&gt;css&lt;/code&gt;&lt;/em&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.youtube.com/channel/UCrdgeUeCll2QKmqmihIgKBQ" rel="nofollow"&gt;Programador BR&lt;/a&gt; - Um canal para programadores e aspirantes a programadores. &lt;em&gt;Tags: &lt;code&gt;javascript&lt;/code&gt;, &lt;code&gt;html&lt;/code&gt;, &lt;code&gt;css&lt;/code&gt;, &lt;code&gt;carreira em ti&lt;/code&gt;, &lt;code&gt;entrevistas&lt;/code&gt;&lt;/em&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.youtube.com/channel/UCSfwM5u0Kce6Cce8_S72olg" rel="nofollow"&gt;Rocketseat&lt;/a&gt; - O canal da Rocketseat tá lotado de conteúdo para pessoas desenvolvedoras e ainda tem apoio da plataforma com vários conteúdos de programação gratuitos. &lt;em&gt;Tags: &lt;code&gt;javascript&lt;/code&gt;, &lt;code&gt;react&lt;/code&gt;, &lt;code&gt;react native&lt;/code&gt;&lt;/em&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.youtube.com/user/rodrigobranas/" rel="nofollow"&gt;Rodrigo Branas&lt;/a&gt; - O canal é apresentado por Rodrigo Branas. Arquiteto de software, especialista no desenvolvimento de aplicações web há mais de 15 anos, autor do livro AngularJS Essentials (editora PacktPub) e de diversos artigos da revista Java Magazine. Canal com foco em JavaScript, Angular, Grunt, Bower, Jasmine e outros tópicos. &lt;em&gt;Tags: &lt;code&gt;javascript&lt;/code&gt;, &lt;code&gt;angularjs&lt;/code&gt;, &lt;code&gt;bower&lt;/code&gt;&lt;/em&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.youtube.com/user/tekzoom/" rel="nofollow"&gt;TekZoom&lt;/a&gt; - O TekZoom é um projeto criado e mantido por Reinaldo Silotto. Nosso conteúdo é voltado para profissionais e estudantes de Tecnologia. Aqui no Canal você encontrará o que existe de mais moderno para criação de sites, blogs, redes sociais e lojas online. &lt;em&gt;Tags: &lt;code&gt;php&lt;/code&gt;, &lt;code&gt;javascript&lt;/code&gt;, &lt;code&gt;node&lt;/code&gt;, &lt;code&gt;vuejs&lt;/code&gt;, &lt;code&gt;css&lt;/code&gt;&lt;/em&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.youtube.com/channel/UCL-mk7btv-dHI5hY2Tl1GHg" rel="nofollow"&gt;Webdesign em Foco&lt;/a&gt; - Canal focado no Desenvolvimento Web. &lt;em&gt;Tags: &lt;code&gt;javascript&lt;/code&gt;,&lt;code&gt;html&lt;/code&gt;, &lt;code&gt;css&lt;/code&gt;, &lt;code&gt;php&lt;/code&gt;, &lt;code&gt;react&lt;/code&gt;, &lt;code&gt;bootstrap&lt;/code&gt;&lt;/em&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.youtube.com/c/webschool-io" rel="nofollow"&gt;Webschool.io&lt;/a&gt; - Canal focado em desenvolvimento web, abordando muito javascript, css, vue, node, git, programação funcional e muito mais. &lt;em&gt;Tags: &lt;code&gt;javascript&lt;/code&gt;,&lt;code&gt;node&lt;/code&gt;,&lt;code&gt;angular&lt;/code&gt;,&lt;code&gt;vue&lt;/code&gt;,&lt;code&gt;es6&lt;/code&gt;, &lt;code&gt;saas&lt;/code&gt;,&lt;code&gt;css&lt;/code&gt;, &lt;code&gt;git&lt;/code&gt;&lt;/em&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.youtube.com/channel/UCa12brLWzCqnxN0KOyjfmJQ" rel="nofollow"&gt;William Justen Cursos&lt;/a&gt; - Um Screencast focado em Desenvolvimento Web, abordando assuntos como HTML, CSS, JS, SVG, React, Canvas, Acessibilidade e muito mais, com cursos ministrados pelo William Justen. &lt;em&gt;Tags: &lt;code&gt;javascript&lt;/code&gt;,&lt;code&gt;html&lt;/code&gt;, &lt;code&gt;css&lt;/code&gt;, &lt;code&gt;svg&lt;/code&gt;,&lt;code&gt;react&lt;/code&gt;, &lt;code&gt;canvas&lt;/code&gt;&lt;/em&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.youtube.com/user/wouerner" rel="nofollow"&gt;Wouerner&lt;/a&gt; - Canal do &lt;em&gt;Wouerner&lt;/em&gt; falando sobre Javascript com foco no VueJS e um pouquinho de PHP. &lt;em&gt;Tags:&lt;code&gt;javascript&lt;/code&gt;,&lt;code&gt;vuejs&lt;/code&gt;,&lt;code&gt;php&lt;/code&gt;&lt;/em&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.youtube.com/channel/UCA97Pg29SezvcPIGsRHC8ew" rel="nofollow"&gt;WTricks&lt;/a&gt; - De web design à desenvolvimento, aqui você encontra de tudo em videos didáticos e incriveis. &lt;em&gt;Tags &lt;code&gt;carreira em ti&lt;/code&gt;, &lt;code&gt;entrevistas&lt;/code&gt;&lt;/em&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;&lt;a id="user-content-desenvolvimento-mobile-nativo--híbrido-" class="anchor" aria-hidden="true" href="#desenvolvimento-mobile-nativo--híbrido-"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Desenvolvimento Mobile Nativo &amp;amp; Híbrido &lt;g-emoji class="g-emoji" alias="iphone" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f4f1.png"&gt;📱&lt;/g-emoji&gt;&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.youtube.com/channel/UC1duiHpWq191tlnMk3mSPNA" rel="nofollow"&gt;CODEficando&lt;/a&gt; - Canal que mostra dicas sobre desenvolvimento de aplicativos para os sistemas Android e iOS. Além de outras linguagens de programação como Python e Java. &lt;em&gt;Tags: &lt;code&gt;python&lt;/code&gt;, &lt;code&gt;android&lt;/code&gt;, &lt;code&gt;java&lt;/code&gt;&lt;/em&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.youtube.com/channel/UCXepHP9GmUtF73xtEIa9RWA" rel="nofollow"&gt;Fábrica de Código&lt;/a&gt; - Canal com foco em desenvolvimento híbrido usando Ionic e desenvolvimento web. &lt;em&gt;Tags: &lt;code&gt;angular&lt;/code&gt;, &lt;code&gt;typescript&lt;/code&gt;, &lt;code&gt;ionic&lt;/code&gt;, &lt;code&gt;firebase&lt;/code&gt;&lt;/em&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.youtube.com/channel/UCv6aZVQz8IHrhgemxZrNRmQ" rel="nofollow"&gt;Filipe Alves&lt;/a&gt; - Canal com tutoriais de desenvolvimento de jogos e dicas de cursos de graduação em computação. &lt;em&gt;Tags: &lt;code&gt;javascript&lt;/code&gt;, &lt;code&gt;desenvolvimento de jogos&lt;/code&gt;, &lt;code&gt;android&lt;/code&gt;, &lt;code&gt;c&lt;/code&gt;, &lt;code&gt;swift&lt;/code&gt;&lt;/em&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.youtube.com/user/jacobaraujo7" rel="nofollow"&gt;Flutterando&lt;/a&gt; - Canal com foco em desenvolvimento mobile com flutter. &lt;em&gt;Tags: &lt;code&gt;flutter&lt;/code&gt;,&lt;code&gt;mobile&lt;/code&gt;, &lt;code&gt;android&lt;/code&gt;, &lt;code&gt;ios&lt;/code&gt;&lt;/em&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.youtube.com/channel/UC-8goXO6sjFuIbanvBd-jfA/featured" rel="nofollow"&gt;Full Stack Developer&lt;/a&gt; - Canal com foco em desenvolvimento mobile híbrido com Ionic. &lt;em&gt;Tags: &lt;code&gt;ionic&lt;/code&gt;,&lt;code&gt;mobile&lt;/code&gt;&lt;/em&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.youtube.com/user/tutoriais01" rel="nofollow"&gt;Hugo Vasconcelos&lt;/a&gt; - 135 cursos, todos ministrados por Hugo Vasconcelos, em nosso canal sempre é disponibilizado os cursos básicos e diversas vídeo aulas sobre desenvolvimento todos os dias. &lt;em&gt;Tags: &lt;code&gt;c#&lt;/code&gt;, &lt;code&gt;vb.net&lt;/code&gt;, &lt;code&gt;sql&lt;/code&gt;, &lt;code&gt;android&lt;/code&gt;, &lt;code&gt;java&lt;/code&gt;, &lt;code&gt;bootstrap&lt;/code&gt;&lt;/em&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.youtube.com/user/Loianeg" rel="nofollow"&gt;Loiane Groner&lt;/a&gt; - O canal da nossa Deusa da programação é repleto de conteúdos técnicos, desde suas palestras até cursos gratuitos (como o de Angular que está em andamento). &lt;em&gt;Tags: &lt;code&gt;java&lt;/code&gt;, &lt;code&gt;javascript&lt;/code&gt;, &lt;code&gt;angular&lt;/code&gt;, &lt;code&gt;typescript&lt;/code&gt;, &lt;code&gt;ionic&lt;/code&gt;&lt;/em&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.youtube.com/user/mhgs11" rel="nofollow"&gt;Marcelo Simões&lt;/a&gt; - Canal focado em desenvolvimento em Swift. &lt;em&gt;Tags: &lt;code&gt;swift&lt;/code&gt;, &lt;code&gt;ios&lt;/code&gt;&lt;/em&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.youtube.com/user/empreendedormobile" rel="nofollow"&gt;Thiago Aguiar&lt;/a&gt; - Canal focado em desenvolvimento iOS e Android. Que ajuda programadores comuns a se tornarem desenvolvedores Android extraordinários. &lt;em&gt;Tags: &lt;code&gt;swift&lt;/code&gt;, &lt;code&gt;ios&lt;/code&gt;,&lt;code&gt;android&lt;/code&gt;,&lt;code&gt;kotlin&lt;/code&gt;,&lt;code&gt;java&lt;/code&gt;&lt;/em&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.youtube.com/user/thiengoCalopsita" rel="nofollow"&gt;Vinicius Thiengo&lt;/a&gt; - Vídeos sobre Desenvolvimento Web, Desenvolvimento Android, Avaliação de Sites e Tutoriais de técnicas importantes para desenvolvedores. &lt;em&gt;Tags: &lt;code&gt;java&lt;/code&gt;,&lt;code&gt;android&lt;/code&gt;&lt;/em&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;&lt;a id="user-content-entrevista-webinars--dicas-" class="anchor" aria-hidden="true" href="#entrevista-webinars--dicas-"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Entrevista, Webinars &amp;amp; Dicas &lt;g-emoji class="g-emoji" alias="mega" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f4e3.png"&gt;📣&lt;/g-emoji&gt;&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.youtube.com/user/aluracursosonline" rel="nofollow"&gt;Alura&lt;/a&gt; - No canal da Alura você encontra conversas incríveis com profissionais diversos de tecnologia falando tudo o que você gostaria de saber sobre a área (ou quase tudo). &lt;em&gt;Tags: &lt;code&gt;entrevistas&lt;/code&gt;, &lt;code&gt;palestras&lt;/code&gt;, &lt;code&gt;programaçao em geral&lt;/code&gt;, &lt;code&gt;soft skills&lt;/code&gt;, &lt;code&gt;back-end&lt;/code&gt;, &lt;code&gt;front-end&lt;/code&gt;, &lt;code&gt;mobile&lt;/code&gt;&lt;/em&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.youtube.com/user/BrazilJS" rel="nofollow"&gt;BrazilJS&lt;/a&gt; - Provavelmente você já conhece o evento BrazilJS, certo? Agora imagina um canal que tem todas as palestras que rolam no maior evento de JavaScript do mundo e videos semanais com as novidades do mundo da tecnologia, corre e ativa o sininho. &lt;em&gt;Tags: &lt;code&gt;javascript&lt;/code&gt;, &lt;code&gt;entrevistas&lt;/code&gt;, &lt;code&gt;palestras&lt;/code&gt;, &lt;code&gt;programaçao em geral&lt;/code&gt;, &lt;code&gt;soft skills&lt;/code&gt;, &lt;code&gt;back-end&lt;/code&gt;, &lt;code&gt;front-end&lt;/code&gt;, &lt;code&gt;mobile&lt;/code&gt;&lt;/em&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.youtube.com/channel/UC-lHCBqKEtnXA0SBtdOP0bw" rel="nofollow"&gt;Canal Dev Samurai&lt;/a&gt; - Canal do Felipe Fontoura, desenvolvedor, que dá dicas sobre desenvolvimento e carreira em TI. &lt;em&gt;Tags: &lt;code&gt;soft skills&lt;/code&gt;, &lt;code&gt;carreira em ti&lt;/code&gt;&lt;/em&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.youtube.com/user/codigofontetv" rel="nofollow"&gt;Código Fonte TV&lt;/a&gt; - Canal bem divertido com diversos vídeos relacionados ao mundo do desenvolvimento, apresentados pelo Gabriel e sua esposa Vanessa, ambos desenvolvedores. &lt;em&gt;Tags: &lt;code&gt;carreira em ti&lt;/code&gt;&lt;/em&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.youtube.com/channel/UCaBOUYQGTZgIdMTXtZTosRQ" rel="nofollow"&gt;Computação sem Caô&lt;/a&gt; - O Computação sem Caô é um projeto que busca democratizar o entendimento da ciência da computação no Brasil, realizado pelo Olabi e apresentado por Ana Carolina da Hora, cientista da computação em formação pela PUC-RJ e moradora de Caxias, na Baixada Fluminense. &lt;em&gt;Tags: &lt;code&gt;carreira em ti&lt;/code&gt;&lt;/em&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.youtube.com/user/brunovegan/" rel="nofollow"&gt;Curso De Python - Bruno Rocha&lt;/a&gt; - A proposta do canal é criar videos rápidos e direto ao assunto com dicas de Python e desenvolvimento web, os videos são apresentados por Bruno Rocha, Engenheiro de Software da Red Hat e membro da Python Software Foundation. &lt;em&gt;Tags: &lt;code&gt;python&lt;/code&gt;, &lt;code&gt;entrevistas&lt;/code&gt;&lt;/em&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.youtube.com/channel/UClBrpNsTEFLbZDDMW1xiOaQ" rel="nofollow"&gt;DevMedia&lt;/a&gt; - A DevMedia é um portal de conhecimento voltado para programadores, com milhares de artigos, dicas, cursos online e videoaulas sobre diferentes áreas de desenvolvimento de tecnologia. &lt;em&gt;Tags: &lt;code&gt;carreira em ti&lt;/code&gt;&lt;/em&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.youtube.com/channel/UCtIygB7LtILSFWR0kxtZC-A" rel="nofollow"&gt;DevNaEstrada&lt;/a&gt; - Já famoso por seu maravilhoso &lt;a href="https://devnaestrada.com.br/" rel="nofollow"&gt;podcast&lt;/a&gt;, o Dev Na Estrada, ou DNE para os mais íntimos, trata sobre diversos assuntos relacionados a desenvolvimento, porém não fica restrito somente a códigos, porém a lições de vida, inspiração e dicas sobre o mundo do desenvolvimento. &lt;em&gt;Tags: &lt;code&gt;carreira em ti&lt;/code&gt;, &lt;code&gt;entrevistas&lt;/code&gt;&lt;/em&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.youtube.com/channel/UCgoGOLleKmM9ikxQhGhhOhQ/featured" rel="nofollow"&gt;Devs Java Girl&lt;/a&gt; - O canal ainda está se desenvolvendo, mas essa é uma comunidade que tem crescido bastante em participantes e conteúdos no mundo Java ultimamente, se você gosta de java, recomendo dar uma olhada. &lt;em&gt;Tags: &lt;code&gt;java&lt;/code&gt;&lt;/em&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.youtube.com/channel/UCklJJvb043h5KB7kZ2-tO3Q/featured" rel="nofollow"&gt;Digitalmente&lt;/a&gt; - O digital[mente] é uma série [quase] semanal de vídeo ensaios que realiza a convergência de temas-chave para a reflexão e compreensão do nosso futuro próximo. Tecnologia, cibercultura, comunicação, ciberativismo etc. &lt;em&gt;Tags: &lt;code&gt;carreira em ti&lt;/code&gt;&lt;/em&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.youtube.com/user/AkitaOnRails" rel="nofollow"&gt;Fabio Akita&lt;/a&gt; - Canal aborda a experiência pessoal do Fabio Akita, que trabalha na área há décadas, sua visão sobre linguagens, metodologias de estudo, questões sobre a área em geral e Blockchain. &lt;em&gt;Tags: &lt;code&gt;ruby on rails&lt;/code&gt;, &lt;code&gt;carreira em ti&lt;/code&gt;&lt;/em&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.youtube.com/user/nandinhabernardo" rel="nofollow"&gt;Fernanda Bernardo&lt;/a&gt; - O canal da Fernanda Bernardo está começando com uma série maravilhosa sobre comunicação, onde os assuntos que são tratados lá no @Help4Papers estão se tornando ótimos videos. Se você quer palestrar ou aprender a se comunicar melhor, assina agora o canal. &lt;em&gt;Tags: &lt;code&gt;carreira em ti&lt;/code&gt;&lt;/em&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.youtube.com/channel/UCztMwfGqsnPeGat7Np-bFKg" rel="nofollow"&gt;Ferreira Studios&lt;/a&gt; - Canal de desenvolvimento web, dicas e métodos sobre design e ferramentas criativas, do designer gráfico e desenvolvedor Leonardo Ferreira. &lt;em&gt;Tags: &lt;code&gt;design&lt;/code&gt;&lt;/em&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.youtube.com/channel/UCU5JicSrEM5A63jkJ2QvGYw" rel="nofollow"&gt;Filipe Deschamps&lt;/a&gt; - O lema do canal descreve bem o que o Filipe quer nos apresentar com seu conteúdo. Como diz a descrição: programação vai muito além da sintaxe. &lt;em&gt;Tags: &lt;code&gt;entrevistas&lt;/code&gt;&lt;/em&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.youtube.com/channel/UCh1xOy7SP_KyRn4wTNVvFHw" rel="nofollow"&gt;Hackers House BR&lt;/a&gt; - Aqui, rolam palestras em lives com pessoas incríveis da TI e com todo o tipo de conteúdo. Vale o play. &lt;em&gt;Tags: &lt;code&gt;docker&lt;/code&gt;, &lt;code&gt;infra&lt;/code&gt;, &lt;code&gt;back-end&lt;/code&gt;, &lt;code&gt;front-end&lt;/code&gt;, &lt;code&gt;carreira em ti&lt;/code&gt;&lt;/em&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.youtube.com/channel/UCTJ1mLre8sT-d4KuvmQsSQA" rel="nofollow"&gt;Harlley Oliveira&lt;/a&gt; - Canal sobre tecnologias, programação e dicas sobre a área de TI. &lt;em&gt;Tags: &lt;code&gt;carreira em ti&lt;/code&gt;&lt;/em&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.youtube.com/user/henriquebastosnet" rel="nofollow"&gt;Henrique Bastos&lt;/a&gt; - Muito conteúdo e dicas relacionadas ao mundo da programação, lives no estilo bate-papo com o Henrique e vários outros profissionais com muitos conhecimentos e experiências. &lt;em&gt;Tags: &lt;code&gt;python&lt;/code&gt;, &lt;code&gt;django&lt;/code&gt;, &lt;code&gt;carreira em ti&lt;/code&gt;&lt;/em&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.youtube.com/c/InfoQBrasil" rel="nofollow"&gt;InfoQ Brasil&lt;/a&gt; - Canal de vídeos do site &lt;a href="https://www.infoq.com/br" rel="nofollow"&gt;InfoQ Brasil&lt;/a&gt; contendo palestras de diversos eventos que ocorrem pelo Brasil, tais como &lt;a href="https://qconsp.com" rel="nofollow"&gt;QCon São Paulo&lt;/a&gt;, &lt;a href="https://www.theconf.club/" rel="nofollow"&gt;The Conf&lt;/a&gt; e &lt;a href="https://www.papis.io/" rel="nofollow"&gt;PAPis&lt;/a&gt;. &lt;em&gt;Tags &lt;code&gt;carreira em ti&lt;/code&gt;, &lt;code&gt;entrevistas&lt;/code&gt;&lt;/em&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.youtube.com/channel/UChfu9xWITOvsXYLKm7hieSQ" rel="nofollow"&gt;Laboratório da Julia&lt;/a&gt; - Canal da Julia, uma estudante de Engenharia da computação, onde compartilha videos sobre o seu dia na faculdade e seus projetos. &lt;em&gt;Tags &lt;code&gt;carreira em ti&lt;/code&gt;, &lt;code&gt;entrevistas&lt;/code&gt;&lt;/em&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.youtube.com/channel/UCKN63lTXUgCSjR5gPNDUjmw" rel="nofollow"&gt;Leandro Bighetti&lt;/a&gt; - O Leandro Bighetti mora na Alemanha e compartilha tudo sobre como é ser desenvolvedor fora do país, como se virar com idiomas, linguagens utilizadas e várias dicas foda. Vai lá e não perde essa chance. &lt;em&gt;Tags &lt;code&gt;carreira em ti&lt;/code&gt;, &lt;code&gt;entrevistas&lt;/code&gt;&lt;/em&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.youtube.com/lucasmontano" rel="nofollow"&gt;Lucas Montano&lt;/a&gt; - Especialista em desenvolvimento mobile com projetos que alcançaram + 1 Milhão de usuários. Lucas aborda assuntos como: carreira na tecnologia e como tirar ideias do papel (perspectiva do programador). &lt;em&gt;Tags: &lt;code&gt;carreira em ti&lt;/code&gt;, &lt;code&gt;empreendedorismo&lt;/code&gt;, &lt;code&gt;mobile&lt;/code&gt;&lt;/em&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.youtube.com/channel/UCex749toAZQyjOE-607e27g" rel="nofollow"&gt;Moacir Moda&lt;/a&gt; - Canal do Moacir Moda, desenvolvedor e fundador da Codevance. Da dicas sobre negócios, desenvolvimento pessoal e carreira em TI. &lt;em&gt;Tags: &lt;code&gt;soft skills&lt;/code&gt;, &lt;code&gt;carreira em ti&lt;/code&gt;, &lt;code&gt;empreendedorismo&lt;/code&gt;&lt;/em&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.youtube.com/channel/UCBWbWViVqDHckknir8PIIdg" rel="nofollow"&gt;O Bruno Germano&lt;/a&gt; - No canal do Bruno, rola video toda semana com review de produtos, toques de carreira, opiniões etc. &lt;em&gt;Tags &lt;code&gt;carreira em ti&lt;/code&gt;, &lt;code&gt;entrevista&lt;/code&gt;&lt;/em&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.youtube.com/channel/UCNhSCufrcOMeFvzEM7tt9Lw" rel="nofollow"&gt;Pagar.me Talks&lt;/a&gt; - Um canal que apresenta várias palestras feitas pela equipe do Pagar.me. &lt;em&gt;Tags &lt;code&gt;carreira em ti&lt;/code&gt;, &lt;code&gt;entrevistas&lt;/code&gt;&lt;/em&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.youtube.com/channel/UCuQ8zW9VmVyml7KytSqJDzg" rel="nofollow"&gt;Papo Binário&lt;/a&gt; - O canal é um projeto da Mente Binária sobre tecnologia da informação com o objetivo de integrar profissionais de TI, explorar projetos colaborativos e contribuir para a difusão de conhecimento através de discussões, tutoriais e entrevistas com grandes nomes da área. &lt;em&gt;Tags: &lt;code&gt;c&lt;/code&gt;, &lt;code&gt;python&lt;/code&gt;, &lt;code&gt;carreira em ti&lt;/code&gt;, &lt;code&gt;entrevistas&lt;/code&gt;&lt;/em&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.youtube.com/user/CanalPeixeBabel" rel="nofollow"&gt;Peixe Babel&lt;/a&gt; - O canal onde ciência e tecnologia se encontram lindamente em videos semanais e alguns encontros em BH no Chopp comCiência. &lt;em&gt;Tags &lt;code&gt;carreira em ti&lt;/code&gt;, &lt;code&gt;entrevistas&lt;/code&gt;&lt;/em&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.youtube.com/user/phpsp1" rel="nofollow"&gt;PHPSP&lt;/a&gt; - Canal feito pela comunidade do PHPSP, onde é possível encontrar vários Hangouts e palestras com dicas valiosas para quem programa PHP. &lt;em&gt;Tags: &lt;code&gt;php&lt;/code&gt;, &lt;code&gt;carreira em ti&lt;/code&gt;, &lt;code&gt;entrevistas&lt;/code&gt;&lt;/em&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.youtube.com/channel/UCqOX4hl_9DJ5Zmzh8MpgL9A" rel="nofollow"&gt;Pizza de Dados&lt;/a&gt; - Podcasts sobre desenvolvimento. &lt;em&gt;Tags: &lt;code&gt;podcast&lt;/code&gt; &lt;code&gt;carreira em ti&lt;/code&gt;, &lt;code&gt;entrevistas&lt;/code&gt;&lt;/em&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.youtube.com/user/fmassetto" rel="nofollow"&gt;Professor Isidro&lt;/a&gt; - Canal do professor universitário Isidro, onde é disponibilizado bastante conteúdo sobre estrutura de dados, programação, banco de dados e muito mais. &lt;em&gt;Tags &lt;code&gt;carreira em ti&lt;/code&gt;, &lt;code&gt;entrevistas&lt;/code&gt;&lt;/em&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.youtube.com/channel/UCaqc3TH-ZdPw7OTIlndvSgQ" rel="nofollow"&gt;Programador Sagaz&lt;/a&gt; - Dicas, tutoriais e notícias sobre o mundo da programação. Vídeos para programadores, feitos pelo programador Weuler Borges. &lt;em&gt;Tags:&lt;code&gt;python&lt;/code&gt;, &lt;code&gt;carreira em ti&lt;/code&gt;, &lt;code&gt;entrevistas&lt;/code&gt;&lt;/em&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.youtube.com/queroserprogramador" rel="nofollow"&gt;Quero Ser Programador&lt;/a&gt; - Um canal para ajudar semanalmente pessoas a dar o próximo passo na programação. Essa passo pode ser escrever o primeiro código, se preparar pra entrevistas fora do país ou aprender a trabalhar com outras ferramentas como git e terminal. &lt;em&gt;Tags &lt;code&gt;carreira em ti&lt;/code&gt;, &lt;code&gt;entrevistas&lt;/code&gt;&lt;/em&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.youtube.com/user/ramonduraes" rel="nofollow"&gt;Ramon Durães&lt;/a&gt; - Nesse canal Ramon Durães compartilha a sua experiência ao longo dos últimos 20 anos desenvolvendo software. Você pode acompanhar vídeos relacionados a estratégia moderna para o desenvolvimento de software, serviços de nuvem, gestão de aplicações, arquitetura de software, carreira, gestão de pessoas,serviços, cloud, mobilidade, ALM, DevOps. &lt;em&gt;Tags:&lt;code&gt;carreira em ti&lt;/code&gt;, &lt;code&gt;gestão de pessoas&lt;/code&gt;, &lt;code&gt;entrevistas&lt;/code&gt;, &lt;code&gt;cloud&lt;/code&gt;, &lt;code&gt;DevOps&lt;/code&gt;&lt;/em&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.youtube.com/channel/UCH0qj1HFZ9jy0w87YfMSA7w" rel="nofollow"&gt;Sou Java&lt;/a&gt; - Muito conteúdo e dicas relacionadas ao mundo da JVM, falando muito sobre JDK, Spring, Jakarta EE e por aí vai. &lt;em&gt;Tags: &lt;code&gt;java&lt;/code&gt; &lt;code&gt;carreira em ti&lt;/code&gt;, &lt;code&gt;entrevistas&lt;/code&gt;&lt;/em&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.youtube.com/channel/UC4VqseCpRctjC7Di6c5Bh5Q" rel="nofollow"&gt;The Velopers&lt;/a&gt; - Nosso querido Pokemaobr vulgo Rodrigo Cardoso agora em um talk show cheio de humor, pessoas fodas e muito conteúdo. Não dá pra perder né. &lt;em&gt;Tags &lt;code&gt;carreira em ti&lt;/code&gt;, &lt;code&gt;entrevistas&lt;/code&gt;&lt;/em&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.youtube.com/channel/UC8reCbWAXloUaFmHhsOh2Xw" rel="nofollow"&gt;Training Center&lt;/a&gt; - No TC você encontra uma galera incrível, disposta a compartilhar seus conhecimentos técnicos e soft skills, além de ser um espaço aberto para todas as pessoas poderem compartilhar o que sabem. &lt;em&gt;Tags &lt;code&gt;carreira em ti&lt;/code&gt;, &lt;code&gt;entrevistas&lt;/code&gt;&lt;/em&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.youtube.com/user/TreinaWeb" rel="nofollow"&gt;TreinaWeb&lt;/a&gt; - Canal de uma das principais escolas especializadas em cursos online de programação web, desktop, mobile e edição de foto e vídeo no Brasil com várias dicas. &lt;em&gt;Tags: &lt;code&gt;dicas&lt;/code&gt;, &lt;code&gt;diversos&lt;/code&gt;, &lt;code&gt;soft skills&lt;/code&gt;, &lt;code&gt;back-end&lt;/code&gt;, &lt;code&gt;front-end&lt;/code&gt;, &lt;code&gt;mobile&lt;/code&gt;&lt;/em&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.youtube.com/channel/UCEn6kONg6EC_Ylh0RlInsMw" rel="nofollow"&gt;Universo Discreto&lt;/a&gt; - Canal criado pelo Lucas Latarri, professor do IF Sudeste MG - Rio Pomba. Contém videoaulas e conteúdo em geral sobre Ciência da Computação. &lt;em&gt;Tags: &lt;code&gt;deep learning&lt;/code&gt;, &lt;code&gt;inteligência artificial&lt;/code&gt;, &lt;code&gt;carreira em ti&lt;/code&gt;, &lt;code&gt;entrevistas&lt;/code&gt;, &lt;code&gt;diversos&lt;/code&gt;&lt;/em&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.youtube.com/channel/UCgfaifzmqadwKyCd0lagylQ" rel="nofollow"&gt;UXNOW&lt;/a&gt; - No canal UXNOW você aprende tudo sobre Design, UI e UX em videos curtos, lives e até uma playlist com curso de UX gratuito. &lt;em&gt;Tags: &lt;code&gt;design&lt;/code&gt;, &lt;code&gt;carreira em ti&lt;/code&gt;, &lt;code&gt;entrevistas&lt;/code&gt;&lt;/em&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.youtube.com/channel/UCW4XS1NWmwOKWA1rmfgmyHQ" rel="nofollow"&gt;Vida de Programador&lt;/a&gt; - Canal de vídeos do mesmo criador do Vida de Programador, sobre desenvolviemento e outros assuntos variados. &lt;em&gt;Tags &lt;code&gt;carreira em ti&lt;/code&gt;, &lt;code&gt;entrevistas&lt;/code&gt;&lt;/em&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.youtube.com/channel/UC9DvZyV1QU3Y0-Tpv97oAxw" rel="nofollow"&gt;Vue.js Brasil&lt;/a&gt; - Canal focado em Vue.js e JavaScript que conta com hangouts semanais sobre temas diversos no universo front-end e vídeos com dicas de desenvolvimento. &lt;em&gt;Tags: &lt;code&gt;javascript&lt;/code&gt;,&lt;code&gt;vuejs&lt;/code&gt;&lt;/em&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.youtube.com/channel/UCWrqsnPLl6aRX0ECUmPaZEw" rel="nofollow"&gt;William Oliveira&lt;/a&gt; - Com o Will você aprender tudo o que gostaria de saber sobre desenvolvimento de software e não tinha a quem perguntar. Rolam videos, lives, tudo sem firula e startupismo. E ah, já tem video lá falando do salário de pessoas programadoras, então corre e não esquece do like. &lt;em&gt;Tags &lt;code&gt;carreira em ti&lt;/code&gt;, &lt;code&gt;entrevistas&lt;/code&gt;&lt;/em&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.youtube.com/womakerscode" rel="nofollow"&gt;WoMakersCode&lt;/a&gt; - Iniciativa sem fins lucrativos para incentivar mulheres na TI, o WoMakersCode também possui um canal no YouTube com palestras e webinars principalmente sobre front-end e carreira. &lt;em&gt;Tags: &lt;code&gt;carreira em ti&lt;/code&gt;, &lt;code&gt;html&lt;/code&gt;, &lt;code&gt;css&lt;/code&gt;, &lt;code&gt;javascript&lt;/code&gt;, &lt;code&gt;front-end&lt;/code&gt;&lt;/em&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;&lt;a id="user-content-infraestrutura-" class="anchor" aria-hidden="true" href="#infraestrutura-"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Infraestrutura 🖧&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.youtube.com/user/kretcheu2001" rel="nofollow"&gt;Canal do Paulo Kretcheu&lt;/a&gt; - Canal do entusiasta de Software Livre Paulo Kretcheu, onde levanta tópicos sobre Internet, Software Livre e outros tópicos relacionados. &lt;em&gt;Tags: &lt;code&gt;linux&lt;/code&gt;, &lt;code&gt;redes&lt;/code&gt;, &lt;code&gt;internet&lt;/code&gt;&lt;/em&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.youtube.com/channel/UCMsyeaScaqxDLmIGhTfSoNA" rel="nofollow"&gt;Eu faço a internet funcionar&lt;/a&gt; - Um canal que apresenta como a internet realmente funciona para além (e muitas vezes contra) o senso comum. &lt;em&gt;Tags: &lt;code&gt;internet&lt;/code&gt;&lt;/em&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.youtube.com/getupcloud" rel="nofollow"&gt;Getup Cloud&lt;/a&gt; - Dicas sobre cloud e Kubernetes. &lt;em&gt;Tags: &lt;code&gt;devops&lt;/code&gt;, &lt;code&gt;docker&lt;/code&gt;, &lt;code&gt;kubernetes&lt;/code&gt;&lt;/em&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.youtube.com/linuxtips" rel="nofollow"&gt;LinuxTips&lt;/a&gt; - Dicas interessantes sobre Linux, Docker, Cloud e DevOps. &lt;em&gt;Tags: &lt;code&gt;linux&lt;/code&gt;, &lt;code&gt;devops&lt;/code&gt;, &lt;code&gt;docker&lt;/code&gt;, &lt;code&gt;kubernetes&lt;/code&gt;&lt;/em&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.youtube.com/channel/UCscVLgae-2f9baEXhVbM1ng" rel="nofollow"&gt;NIC.br Videos&lt;/a&gt; - Canal oficial do NIC.br - Núcleo de Informação e Coordenação do Ponto BR, organização responsável prinicpalmente pelo registro.br, pelo cgi.br (Comitê Gestor da Internet no Brasil) e pelo IX.br - Pontos de troca de trafego brasileiros. O canal concentra as apresentações dos eventos do NIC onde divulgam-se tutoriais, discussões técnicas e políticas envolvendo a infraestrutura de internet Brasileira. &lt;em&gt;Tags: &lt;code&gt;internet&lt;/code&gt;, &lt;code&gt;nic.br&lt;/code&gt;, &lt;code&gt;dominios&lt;/code&gt;, &lt;code&gt;redes&lt;/code&gt;, &lt;code&gt;regulamentação&lt;/code&gt;&lt;/em&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;&lt;a id="user-content-inteligência-artificial-" class="anchor" aria-hidden="true" href="#inteligência-artificial-"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Inteligência Artificial &lt;g-emoji class="g-emoji" alias="robot" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f916.png"&gt;🤖&lt;/g-emoji&gt;&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.youtube.com/channel/UCcGk83PAQ5aGR7IVlD_cBaw" rel="nofollow"&gt;Brincando com Ideias&lt;/a&gt; - Canal com foco em desenvolvimento em IOT. &lt;em&gt;Tags: &lt;code&gt;python&lt;/code&gt;, &lt;code&gt;arduino&lt;/code&gt;, &lt;code&gt;raspberry pi&lt;/code&gt;&lt;/em&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.youtube.com/channel/UCIQne9yW4TvCCNYQLszfXCQ" rel="nofollow"&gt;Canal Sandeco&lt;/a&gt; - O objetivo do canal é mostrar como desenvolver aplicações de Data Science, Aprendizagem de Máquina (machine Learning) utilizando grandes massas de dados contidos em armazenamentos Big Data, tudo isso de forma bem humorada. &lt;em&gt;Tags: &lt;code&gt;inteligência artifical&lt;/code&gt;, &lt;code&gt;deep learning&lt;/code&gt;, &lt;code&gt;data science&lt;/code&gt;&lt;/em&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.youtube.com/channel/UCEQ-nGDGFupHyta90z6hVNQ" rel="nofollow"&gt;Canal TI&lt;/a&gt; - O Canal TI produz vídeos relacionados a Tecnologia da Informação em geral. &lt;em&gt;Tags: &lt;code&gt;inteligência artificial&lt;/code&gt;, &lt;code&gt;php&lt;/code&gt;, &lt;code&gt;arquitetura da informação&lt;/code&gt;&lt;/em&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.youtube.com/channel/UC0BiVs5EYh57gzGVvhddjsA" rel="nofollow"&gt;Didática Tech&lt;/a&gt; - O Canal aborda temas relacionados à inteligência artificial, aprendizagem de máquina (machine learning), ciência de dados, matemática, programação e outros assuntos ligados à tecnologia. &lt;em&gt;Tags: &lt;code&gt;aprendizagem de máquina&lt;/code&gt;, &lt;code&gt;ciência de dados&lt;/code&gt;, &lt;code&gt;inteligência artificial&lt;/code&gt;, &lt;code&gt;matemática&lt;/code&gt;&lt;/em&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.youtube.com/channel/UCMSGXqLEE1q5NqG3hjA5vCg/" rel="nofollow"&gt;ML4U&lt;/a&gt; - Canal criado pelo professor Rodrigo Mello, onde ele aborda algoritmos de Aprendizado de Máquina, Ciência de Dados e Inteligência Artificial, explicando desde a teoria à prática. &lt;em&gt;Tags: &lt;code&gt;aprendizagem de máquina&lt;/code&gt;,&lt;code&gt;deep learning&lt;/code&gt;, &lt;code&gt;data science&lt;/code&gt;, &lt;code&gt;carreira em ti&lt;/code&gt;, &lt;code&gt;entrevistas&lt;/code&gt;&lt;/em&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.youtube.com/channel/UCa4Dj04ABMCxBUJ_aWTP9Bg" rel="nofollow"&gt;O programador&lt;/a&gt; - Conselhos, dicas e truques para o dia a dia do desenvolvedor de software. &lt;em&gt;Tags &lt;code&gt;carreira em ti&lt;/code&gt;, &lt;code&gt;entrevistas&lt;/code&gt;&lt;/em&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.youtube.com/channel/UCf_kacKyoRRUP0nM3obzFbg" rel="nofollow"&gt;Universo Programado&lt;/a&gt; - O Universo Programado é um canal com foco em inteligência artificial, mostrando a IA jogando joguinhos clássicos e explicando-a. &lt;em&gt;Tags: &lt;code&gt;inteligência artificial&lt;/code&gt;&lt;/em&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;&lt;a id="user-content-games-video_game" class="anchor" aria-hidden="true" href="#games-video_game"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Games &lt;g-emoji class="g-emoji" alias="video_game" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f3ae.png"&gt;🎮&lt;/g-emoji&gt;&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.youtube.com/channel/UCLKmrL8UuRczNPkr7VzW1ow/featured" rel="nofollow"&gt;Davifo&lt;/a&gt; - Canal com foco em desenvolvimento e monetização de jogos, abordando diversos assuntos que envolve não só o desenvolvimento como também estratégias para ganhos com produtos desenvolvidos. &lt;em&gt;Tags: &lt;code&gt;c#&lt;/code&gt;, &lt;code&gt;unity 2D&lt;/code&gt;, &lt;code&gt;unity 3D &lt;/code&gt;, &lt;code&gt;desenvolvimento de jogos&lt;/code&gt;, &lt;code&gt;entrevistas&lt;/code&gt;, &lt;code&gt;carreira em ti&lt;/code&gt;&lt;/em&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.youtube.com/user/GamesIndie/featured" rel="nofollow"&gt;GamesIndie - Tutoriais de Unity &amp;amp; Programação&lt;/a&gt; - Canal do Bruno, sobre tutoriais com foco em pessoas iniciantes no mundo do desenvolvimento de jogos 2D e 3D usando a Unity engine.  &lt;em&gt;Tags: &lt;code&gt;c#&lt;/code&gt;, &lt;code&gt;unity 2D&lt;/code&gt;, &lt;code&gt;unity 3D &lt;/code&gt;, &lt;code&gt;desenvolvimento de jogos&lt;/code&gt;&lt;/em&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.youtube.com/channel/UCoxRNjIDKlzxxl8OOJub6CA" rel="nofollow"&gt;Gus Game Dev&lt;/a&gt; - Canal de tutoriais de desenvolvimento de jogos 2D em Godot, Unity e Construct. &lt;em&gt;Tags: &lt;code&gt;unit 2D&lt;/code&gt;, &lt;code&gt;Construct&lt;/code&gt;, &lt;code&gt;Godot&lt;/code&gt;&lt;/em&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.youtube.com/channel/UCsXIdvfp138xs1K1eTsaezQ" rel="nofollow"&gt;Marcos Schultz&lt;/a&gt; - Canal que aborda diversos tutoriais relacionado ao desenvolvimento usando C# e Unity3D, Possui um fórum para todos que desejarem compartilhar ou solucionar dúvidas relacionadas ao desenvolvimento na Unity3D e  assuntos correlato ao mundo dos jogos. &lt;em&gt;Tags: &lt;code&gt;c#&lt;/code&gt;, &lt;code&gt;unity 3D &lt;/code&gt;, &lt;code&gt;desenvolvimento de jogos&lt;/code&gt;&lt;/em&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.youtube.com/user/wemakeagame" rel="nofollow"&gt;Paulo (We make a game)&lt;/a&gt; - Canal voltado a criação de jogos autorais e tutoriais de desenvolvimento, nas palavras do criador, também conhecido como Paulo: "Esse canal é destinado a comunidade de desenvolvedores de jogos, aprenda, compartilhe e complemente". &lt;em&gt;Tags: &lt;code&gt;c#&lt;/code&gt;, &lt;code&gt;unity 3D&lt;/code&gt;, &lt;code&gt;desenvolvimento de jogos&lt;/code&gt;&lt;/em&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.youtube.com/user/praxinoscopio3d" rel="nofollow"&gt;PRX 3D - Praxinoscopio&lt;/a&gt; - Canal com foco em marketing digital, modelagem 3d e tutoriais de desenvolvimento de jogos com unity. &lt;em&gt;Tags: &lt;code&gt;c#&lt;/code&gt;, &lt;code&gt;unity 3D&lt;/code&gt;, &lt;code&gt;desenvolvimento de jogos&lt;/code&gt;&lt;/em&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;&lt;a id="user-content-lógica-de-programacao" class="anchor" aria-hidden="true" href="#lógica-de-programacao"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Lógica de Programacao&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.youtube.com/user/AllEletronicsGR/playlists" rel="nofollow"&gt;All Electronics&lt;/a&gt; - Vai encontrar playlists de lógica booleana, portas lógicas, circuitos lógicos e também tem um curso básico de arduino. E muitos outros vídeos voltados para lógica e eletrônica. &lt;em&gt;Tags: &lt;code&gt;arduino&lt;/code&gt;, &lt;code&gt;portas lógicas&lt;/code&gt;, &lt;code&gt;hardware&lt;/code&gt;, &lt;code&gt;FPGA&lt;/code&gt;, &lt;code&gt;VHDL&lt;/code&gt;, &lt;code&gt;eletrônica&lt;/code&gt;&lt;/em&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.youtube.com/channel/UCvtP8QFmYE9zpDrxxhFEwTg/playlists" rel="nofollow"&gt;Canal do Código&lt;/a&gt; - O Canal do Código possui alguns cursos sobre estruturas de dados e lógica de programação, focado em resolução de problemas e Java. &lt;em&gt;Tags: &lt;code&gt;java&lt;/code&gt;, &lt;code&gt;lógica de programacao&lt;/code&gt;&lt;/em&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.youtube.com/user/RBTechinfo" rel="nofollow"&gt;RBtech&lt;/a&gt; - Canal onde você encontra aulas e cursos sobre hardware, desenvolvimento web, design e criação. Cursos de lógica de programação, PHP, Android, HTML e CSS, JavaScript, Git e muito mais. &lt;em&gt;Tags: &lt;code&gt;javascript&lt;/code&gt;, &lt;code&gt;html&lt;/code&gt;, &lt;code&gt;css&lt;/code&gt;, &lt;code&gt;carreira em ti&lt;/code&gt;, &lt;code&gt;arduino&lt;/code&gt;&lt;/em&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.youtube.com/channel/UCqWo_iZvIALqgmXkzJ8S0Sg" rel="nofollow"&gt;Zurubabel&lt;/a&gt; - De JavaScript a lógica proposicional, de Java a estatística, esse canal possui dezenas de cursos completos. &lt;em&gt;Tags:&lt;code&gt;java&lt;/code&gt;, &lt;code&gt;inteligência artificial&lt;/code&gt;, &lt;code&gt;hardware&lt;/code&gt;, &lt;code&gt;unity&lt;/code&gt;, &lt;code&gt;css&lt;/code&gt;, &lt;code&gt;html&lt;/code&gt;, &lt;code&gt;javascript&lt;/code&gt;, &lt;code&gt;python&lt;/code&gt;&lt;/em&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;&lt;a id="user-content-segurança-" class="anchor" aria-hidden="true" href="#segurança-"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Segurança &lt;g-emoji class="g-emoji" alias="closed_lock_with_key" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f510.png"&gt;🔐&lt;/g-emoji&gt;&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.youtube.com/user/bosontreinamentos/playlists?flow=grid&amp;amp;view=1" rel="nofollow"&gt;Bóson Treinamentos&lt;/a&gt; - Fábio dos Reis e a Bóson Treinamentos em Tecnologia criam cursos em vídeo de forma gratuita, com o intuito de disseminar conhecimento para o maior número de pessoas possível, com qualidade e facilidade de acesso. &lt;em&gt;Tags: &lt;code&gt;redes&lt;/code&gt;, &lt;code&gt;base de dados&lt;/code&gt;, &lt;code&gt;html&lt;/code&gt;, &lt;code&gt;css&lt;/code&gt;, &lt;code&gt;java&lt;/code&gt;, &lt;code&gt;uml&lt;/code&gt;, &lt;code&gt;php&lt;/code&gt;, &lt;code&gt;python&lt;/code&gt;, &lt;code&gt;sql&lt;/code&gt;, &lt;code&gt;android&lt;/code&gt;, &lt;code&gt;linux&lt;/code&gt;, &lt;code&gt;javascript&lt;/code&gt;&lt;/em&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.youtube.com/caveiratech2" rel="nofollow"&gt;CaveiraTech&lt;/a&gt; - Canal focado em segurança da informação, hacking e programação, onde Guilherme Junqueira ministra cursos gratuitos de python e segurança da informação, além de dicas e vlogs sobre TI. &lt;em&gt;Tags: &lt;code&gt;seguranca da informação&lt;/code&gt;, &lt;code&gt;seguranca e hacking&lt;/code&gt;, &lt;code&gt;nodejs&lt;/code&gt;, &lt;code&gt;testes&lt;/code&gt;, &lt;code&gt;sql&lt;/code&gt;, &lt;code&gt;azure&lt;/code&gt;, &lt;code&gt;docker&lt;/code&gt;&lt;/em&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.youtube.com/user/DanielDonda" rel="nofollow"&gt;Daniel Donda&lt;/a&gt; - Dicas sobre tecnologia, administração de redes, carreiras e certificação, hacking, segurança da informação e muito mais. &lt;em&gt;Tags: &lt;code&gt;seguranca da informação&lt;/code&gt;, &lt;code&gt;cyber security&lt;/code&gt;, &lt;code&gt;pentest&lt;/code&gt;&lt;/em&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.youtube.com/channel/UCGObNjkNjo1OUPLlm8BTb3A/playlists" rel="nofollow"&gt;Fábrica de Noobs&lt;/a&gt; - Canal fala sobre computação forense, segurança da informação, desafios hackers e muitos outros vídeos sobre computação e temas diversos. &lt;em&gt;Tags:&lt;code&gt;seguranca da informação&lt;/code&gt;, &lt;code&gt;cyber security&lt;/code&gt;, &lt;code&gt;computação forense&lt;/code&gt;, &lt;code&gt;hacking&lt;/code&gt;&lt;/em&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.youtube.com/channel/UC70YG2WHVxlOJRng4v-CIFQ" rel="nofollow"&gt;Gabriel Pato&lt;/a&gt; - Canal focado em segurança da informação, segurança ofensiva, pentest, técnicas de ataques, dicas de segurança. &lt;em&gt;Tags: &lt;code&gt;seguranca da informação&lt;/code&gt;&lt;/em&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.youtube.com/user/daybsonbruno" rel="nofollow"&gt;Xtreme Security&lt;/a&gt; - Canal focado em compartilhar conhecimento entre os profissionais de Segurança da Informação incentivando estudantes e entusiastas da área. &lt;em&gt;Tags: &lt;code&gt;seguranca da informação&lt;/code&gt;&lt;/em&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/article&gt;&lt;/div&gt;</description><author>carolcodes</author><guid isPermaLink="false">https://github.com/carolcodes/videos-pt.br-tecnologia</guid><pubDate>Fri, 01 Nov 2019 00:00:00 GMT</pubDate></item><item><title>fluent/fluentd #18 in Ruby, This week</title><link>https://github.com/fluent/fluentd</link><description>&lt;p&gt;&lt;i&gt;Fluentd: Unified Logging Layer (project under CNCF)&lt;/i&gt;&lt;/p&gt;&lt;div id="readme" class="instapaper_body md" data-path="README.md"&gt;&lt;article class="markdown-body entry-content p-5" itemprop="text"&gt;&lt;h1&gt;&lt;a id="user-content-fluentd-open-source-log-collector" class="anchor" aria-hidden="true" href="#fluentd-open-source-log-collector"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Fluentd: Open-Source Log Collector&lt;/h1&gt;
&lt;p&gt;Travis CI:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://travis-ci.org/fluent/fluentd" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/dc1771fe5ce7a4d73fb2610cab2ae0c684913113/68747470733a2f2f7472617669732d63692e6f72672f666c75656e742f666c75656e74642e737667" data-canonical-src="https://travis-ci.org/fluent/fluentd.svg" style="max-width:100%;"&gt;&lt;/a&gt; &lt;a href="https://codeclimate.com/github/fluent/fluentd" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/954143fc85ef29a876c5de8ad1e7c07fdd8f5290/68747470733a2f2f636f6465636c696d6174652e636f6d2f6769746875622f666c75656e742f666c75656e74642f6261646765732f6770612e737667" alt="Code Climate" data-canonical-src="https://codeclimate.com/github/fluent/fluentd/badges/gpa.svg" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://bestpractices.coreinfrastructure.org/projects/1189" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/638976144230b1aec18f2ec5c0b805ebb5175413/68747470733a2f2f626573747072616374696365732e636f7265696e6672617374727563747572652e6f72672f70726f6a656374732f313138392f6261646765" alt="CII Best Practices" data-canonical-src="https://bestpractices.coreinfrastructure.org/projects/1189/badge" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://app.fossa.io/projects/git%2Bhttps%3A%2F%2Fgithub.com%2Ffluent%2Ffluentd?ref=badge_shield" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/9bbf232fb230750796310e91e79db31b9a91a1b7/68747470733a2f2f6170702e666f7373612e696f2f6170692f70726f6a656374732f67697425324268747470732533412532462532466769746875622e636f6d253246666c75656e74253246666c75656e74642e7376673f747970653d736869656c64" alt="FOSSA Status" data-canonical-src="https://app.fossa.io/api/projects/git%2Bhttps%3A%2F%2Fgithub.com%2Ffluent%2Ffluentd.svg?type=shield" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;GitLab CI:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://gitlab.com/fluent/fluentd/commits/master" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/d2f506dfbce76303008b6dfb3c4b53073fb574be/68747470733a2f2f6769746c61622e636f6d2f666c75656e742f666c75656e74642f6261646765732f6d61737465722f706970656c696e652e737667" alt="pipeline status" data-canonical-src="https://gitlab.com/fluent/fluentd/badges/master/pipeline.svg" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Drone CI for Arm64:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://cloud.drone.io/fluent/fluentd" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/35b5bd7f47c5c9941dd0750fea26ad69c481a2ef/68747470733a2f2f636c6f75642e64726f6e652e696f2f6170692f6261646765732f666c75656e742f666c75656e74642f7374617475732e7376673f6272616e63683d6d6173746572" alt="pipeline status" data-canonical-src="https://cloud.drone.io/api/badges/fluent/fluentd/status.svg?branch=master" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href="https://www.fluentd.org/" rel="nofollow"&gt;Fluentd&lt;/a&gt; collects events from various data sources and writes them to files, RDBMS, NoSQL, IaaS, SaaS, Hadoop and so on. Fluentd helps you unify your logging infrastructure (Learn more about the &lt;a href="https://www.fluentd.org/blog/unified-logging-layer" rel="nofollow"&gt;Unified Logging Layer&lt;/a&gt;).&lt;/p&gt;
&lt;p align="center"&gt;
&lt;a target="_blank" rel="noopener noreferrer" href="https://raw.githubusercontent.com/fluent/fluentd-docs-gitbook/1.0/images/fluentd-architecture.png"&gt;&lt;img src="https://raw.githubusercontent.com/fluent/fluentd-docs-gitbook/1.0/images/fluentd-architecture.png" width="500px" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;An event consists of &lt;em&gt;tag&lt;/em&gt;, &lt;em&gt;time&lt;/em&gt; and &lt;em&gt;record&lt;/em&gt;. Tag is a string separated with '.' (e.g. myapp.access). It is used to categorize events. Time is a UNIX time recorded at occurrence of an event. Record is a JSON object.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-example-use-cases" class="anchor" aria-hidden="true" href="#example-use-cases"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Example Use Cases&lt;/h2&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Use Case&lt;/th&gt;
&lt;th&gt;Description&lt;/th&gt;
&lt;th align="center"&gt;Diagram&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;Centralizing Apache/Nginx Server Logs&lt;/td&gt;
&lt;td&gt;Fluentd can be used to tail access/error logs and transport them reliably to remote systems.&lt;/td&gt;
&lt;td align="center"&gt;&lt;a target="_blank" rel="noopener noreferrer" href="https://camo.githubusercontent.com/af84f3901f5e49936d5dff00bec5f145058bb689/68747470733a2f2f7777772e666c75656e74642e6f72672f6173736574732f696d672f726563697065732f656c61737469637365617263682d73332d666c75656e74642e706e67"&gt;&lt;img src="https://camo.githubusercontent.com/af84f3901f5e49936d5dff00bec5f145058bb689/68747470733a2f2f7777772e666c75656e74642e6f72672f6173736574732f696d672f726563697065732f656c61737469637365617263682d73332d666c75656e74642e706e67" height="150" data-canonical-src="https://www.fluentd.org/assets/img/recipes/elasticsearch-s3-fluentd.png" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Syslog Alerting&lt;/td&gt;
&lt;td&gt;Fluentd can "grep" for events and send out alerts.&lt;/td&gt;
&lt;td align="center"&gt;&lt;a target="_blank" rel="noopener noreferrer" href="https://camo.githubusercontent.com/67c60b52f5c9f04fab65068cbc0b90e8eabf5b81/68747470733a2f2f7777772e666c75656e74642e6f72672f696d616765732f7379736c6f672d666c75656e74642d616c6572742e706e67"&gt;&lt;img src="https://camo.githubusercontent.com/67c60b52f5c9f04fab65068cbc0b90e8eabf5b81/68747470733a2f2f7777772e666c75656e74642e6f72672f696d616765732f7379736c6f672d666c75656e74642d616c6572742e706e67" height="100" data-canonical-src="https://www.fluentd.org/images/syslog-fluentd-alert.png" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Mobile/Web Application Logging&lt;/td&gt;
&lt;td&gt;Fluentd can function as middleware to enable asynchronous, scalable logging for user action events.&lt;/td&gt;
&lt;td align="center"&gt;&lt;a target="_blank" rel="noopener noreferrer" href="https://camo.githubusercontent.com/84049a9afa03f7fdaabec8a84c1e96fed6e8900b/68747470733a2f2f7777772e666c75656e74642e6f72672f6173736574732f696d672f64617461736f75726365732f6173796e6368726f6e6f75735f6c6f6767696e672e706e67"&gt;&lt;img src="https://camo.githubusercontent.com/84049a9afa03f7fdaabec8a84c1e96fed6e8900b/68747470733a2f2f7777772e666c75656e74642e6f72672f6173736574732f696d672f64617461736f75726365732f6173796e6368726f6e6f75735f6c6f6767696e672e706e67" height="150" data-canonical-src="https://www.fluentd.org/assets/img/datasources/asynchronous_logging.png" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h2&gt;&lt;a id="user-content-quick-start" class="anchor" aria-hidden="true" href="#quick-start"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Quick Start&lt;/h2&gt;
&lt;pre&gt;&lt;code&gt;$ gem install fluentd
$ fluentd -s conf
$ fluentd -c conf/fluent.conf &amp;amp;
$ echo '{"json":"message"}' | fluent-cat debug.test
&lt;/code&gt;&lt;/pre&gt;
&lt;h2&gt;&lt;a id="user-content-development" class="anchor" aria-hidden="true" href="#development"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Development&lt;/h2&gt;
&lt;h3&gt;&lt;a id="user-content-branch" class="anchor" aria-hidden="true" href="#branch"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Branch&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;master: For v1 development.&lt;/li&gt;
&lt;li&gt;v0.12: For v0.12. This is security maintenance mode. Only security fix is accepted.&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;&lt;a id="user-content-prerequisites" class="anchor" aria-hidden="true" href="#prerequisites"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Prerequisites&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;Ruby 2.1 or later&lt;/li&gt;
&lt;li&gt;git&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;code&gt;git&lt;/code&gt; should be in &lt;code&gt;PATH&lt;/code&gt;. On Windows, you can use &lt;code&gt;Github for Windows&lt;/code&gt; and &lt;code&gt;GitShell&lt;/code&gt; for easy setup.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-install-dependent-gems" class="anchor" aria-hidden="true" href="#install-dependent-gems"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Install dependent gems&lt;/h3&gt;
&lt;p&gt;Use bundler:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;$ gem install bundler
$ bundle install --path vendor/bundle
&lt;/code&gt;&lt;/pre&gt;
&lt;h3&gt;&lt;a id="user-content-run-test" class="anchor" aria-hidden="true" href="#run-test"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Run test&lt;/h3&gt;
&lt;pre&gt;&lt;code&gt;$ bundle exec rake test
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;You can run specified test via &lt;code&gt;TEST&lt;/code&gt; environment variable:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;$ bundle exec rake test TEST=test/test_specified_path.rb
$ bundle exec rake test TEST=test/test_*.rb
&lt;/code&gt;&lt;/pre&gt;
&lt;h2&gt;&lt;a id="user-content-fluentd-ui-admin-gui" class="anchor" aria-hidden="true" href="#fluentd-ui-admin-gui"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Fluentd UI: Admin GUI&lt;/h2&gt;
&lt;p&gt;&lt;a href="https://github.com/fluent/fluentd-ui"&gt;Fluentd UI&lt;/a&gt; is a graphical user interface to start/stop/configure Fluentd.&lt;/p&gt;
&lt;p align="center"&gt;&lt;a target="_blank" rel="noopener noreferrer" href="https://camo.githubusercontent.com/fe7e76f9c170e09247f0e7178433f3a2c3d37284/68747470733a2f2f7777772e666c75656e74642e6f72672f696d616765732f626c6f672f666c75656e74642d75692e676966"&gt;&lt;img width="500" src="https://camo.githubusercontent.com/fe7e76f9c170e09247f0e7178433f3a2c3d37284/68747470733a2f2f7777772e666c75656e74642e6f72672f696d616765732f626c6f672f666c75656e74642d75692e676966" data-canonical-src="https://www.fluentd.org/images/blog/fluentd-ui.gif" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-more-information" class="anchor" aria-hidden="true" href="#more-information"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;More Information&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Website: &lt;a href="https://www.fluentd.org/" rel="nofollow"&gt;https://www.fluentd.org/&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Documentation: &lt;a href="https://docs.fluentd.org/" rel="nofollow"&gt;https://docs.fluentd.org/&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Project repository: &lt;a href="https://github.com/fluent"&gt;https://github.com/fluent&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Discussion: &lt;a href="https://groups.google.com/group/fluentd" rel="nofollow"&gt;https://groups.google.com/group/fluentd&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Slack / Community: &lt;a href="https://slack.fluentd.org" rel="nofollow"&gt;https://slack.fluentd.org&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Newsletters: &lt;a href="https://www.fluentd.org/newsletter" rel="nofollow"&gt;https://www.fluentd.org/newsletter&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Author: &lt;a href="https://github.com/frsyuki"&gt;Sadayuki Furuhashi&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Copyright: 2011-2019 Fluentd Authors&lt;/li&gt;
&lt;li&gt;License: Apache License, Version 2.0&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-contributors" class="anchor" aria-hidden="true" href="#contributors"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Contributors:&lt;/h2&gt;
&lt;p&gt;Patches contributed by &lt;a href="https://github.com/fluent/fluentd/contributors"&gt;great developers&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;&lt;a href="https://github.com/fluent/fluentd"&gt;&lt;img src="https://camo.githubusercontent.com/bd55a13e923515693aab379abe306a40f2ff312e/68747470733a2f2f67612d626561636f6e2e61707073706f742e636f6d2f55412d32343839303236352d362f666c75656e742f666c75656e7464" data-canonical-src="https://ga-beacon.appspot.com/UA-24890265-6/fluent/fluentd" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;/article&gt;&lt;/div&gt;</description><author>fluent</author><guid isPermaLink="false">https://github.com/fluent/fluentd</guid><pubDate>Fri, 01 Nov 2019 00:00:00 GMT</pubDate></item><item><title>haml/haml #19 in Ruby, This week</title><link>https://github.com/haml/haml</link><description>&lt;p&gt;&lt;i&gt;HTML Abstraction Markup Language - A Markup Haiku&lt;/i&gt;&lt;/p&gt;&lt;div id="readme" class="instapaper_body md" data-path="README.md"&gt;&lt;article class="markdown-body entry-content p-5" itemprop="text"&gt;&lt;h1&gt;&lt;a id="user-content-haml" class="anchor" aria-hidden="true" href="#haml"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Haml&lt;/h1&gt;
&lt;p&gt;&lt;a href="http://rubygems.org/gems/haml" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/8b1ca62cf5bc65870089e92507dddc21c5b8f38e/68747470733a2f2f62616467652e667572792e696f2f72622f68616d6c2e737667" alt="Gem Version" data-canonical-src="https://badge.fury.io/rb/haml.svg" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="http://travis-ci.org/haml/haml" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/8a886d7932e568a98c3ae7801d65db7b739bc492/68747470733a2f2f7472617669732d63692e6f72672f68616d6c2f68616d6c2e7376673f6272616e63683d6d6173746572" alt="Build Status" data-canonical-src="https://travis-ci.org/haml/haml.svg?branch=master" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://codeclimate.com/github/haml/haml" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/e74fc36611c422e57090b8341726b5dcb02d4695/68747470733a2f2f636f6465636c696d6174652e636f6d2f6769746875622f68616d6c2f68616d6c2f6261646765732f6770612e737667" alt="Code Climate" data-canonical-src="https://codeclimate.com/github/haml/haml/badges/gpa.svg" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://coveralls.io/r/haml/haml" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/25592b3cf0e73e131b333e77b2a4066f17c3902a/687474703a2f2f696d672e736869656c64732e696f2f636f766572616c6c732f68616d6c2f68616d6c2e737667" alt="Coverage Status" data-canonical-src="http://img.shields.io/coveralls/haml/haml.svg" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="http://inch-ci.org/github/haml/haml" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/f158cff8e26b9b581f96837ed61e3f647a507568/687474703a2f2f696e63682d63692e6f72672f6769746875622f68616d6c2f68616d6c2e706e67" alt="Inline docs" data-canonical-src="http://inch-ci.org/github/haml/haml.png" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Haml is a templating engine for HTML. It's designed to make it both easier and
more pleasant to write HTML documents, by eliminating redundancy, reflecting the
underlying structure that the document represents, and providing an elegant syntax
that's both powerful and easy to understand.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-basic-usage" class="anchor" aria-hidden="true" href="#basic-usage"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Basic Usage&lt;/h2&gt;
&lt;p&gt;Haml can be used from the command line or as part of a Ruby web framework. The
first step is to install the gem:&lt;/p&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt;gem install haml&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;After you write some Haml, you can run&lt;/p&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt;haml document.haml&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;to compile it to HTML. For more information on these commands, check out&lt;/p&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt;haml --help&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;To use Haml programatically, check out the &lt;a href="http://haml.info/docs/yardoc/" rel="nofollow"&gt;YARD documentation&lt;/a&gt;.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-using-haml-with-rails" class="anchor" aria-hidden="true" href="#using-haml-with-rails"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Using Haml with Rails&lt;/h2&gt;
&lt;p&gt;To use Haml with Rails, simply add Haml to your Gemfile and run &lt;code&gt;bundle&lt;/code&gt;.&lt;/p&gt;
&lt;div class="highlight highlight-source-ruby"&gt;&lt;pre&gt;gem &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;haml&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;If you'd like to replace Rails's Erb-based generators with Haml, add
&lt;a href="https://github.com/indirect/haml-rails"&gt;haml-rails&lt;/a&gt; to your Gemfile as well.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-formatting" class="anchor" aria-hidden="true" href="#formatting"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Formatting&lt;/h2&gt;
&lt;p&gt;The most basic element of Haml is a shorthand for creating HTML:&lt;/p&gt;
&lt;div class="highlight highlight-text-haml"&gt;&lt;pre&gt;%&lt;span class="pl-ent"&gt;tagname&lt;/span&gt;{:attr1 =&lt;span class="pl-sre"&gt;&amp;gt; 'value1', :attr2 =&amp;gt; 'value2'} Contents&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;No end-tag is needed; Haml handles that automatically. If you prefer HTML-style
attributes, you can also use:&lt;/p&gt;
&lt;div class="highlight highlight-text-haml"&gt;&lt;pre&gt;%&lt;span class="pl-ent"&gt;tagname&lt;/span&gt;(&lt;span class="pl-c1"&gt;attr1&lt;/span&gt;=&lt;span class="pl-s"&gt;'value1'&lt;/span&gt; &lt;span class="pl-c1"&gt;attr2&lt;/span&gt;=&lt;span class="pl-s"&gt;'value2'&lt;/span&gt;) Contents&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Adding &lt;code&gt;class&lt;/code&gt; and &lt;code&gt;id&lt;/code&gt; attributes is even easier. Haml uses the same syntax as
the CSS that styles the document:&lt;/p&gt;
&lt;div class="highlight highlight-text-haml"&gt;&lt;pre&gt;%&lt;span class="pl-ent"&gt;tagname&lt;/span&gt;&lt;span class="pl-ent"&gt;#id&lt;/span&gt;&lt;span class="pl-ent"&gt;.class&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;In fact, when you're using the &lt;code&gt;&amp;lt;div&amp;gt;&lt;/code&gt; tag, it becomes &lt;em&gt;even easier&lt;/em&gt;. Because
&lt;code&gt;&amp;lt;div&amp;gt;&lt;/code&gt; is such a common element, a tag without a name defaults to a div. So&lt;/p&gt;
&lt;div class="highlight highlight-text-haml"&gt;&lt;pre&gt;&lt;span class="pl-ent"&gt;#foo&lt;/span&gt; Hello!&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;becomes&lt;/p&gt;
&lt;div class="highlight highlight-text-html-basic"&gt;&lt;pre&gt;&amp;lt;&lt;span class="pl-ent"&gt;div&lt;/span&gt; &lt;span class="pl-e"&gt;id&lt;/span&gt;=&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;foo&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;&amp;gt;Hello!&amp;lt;/&lt;span class="pl-ent"&gt;div&lt;/span&gt;&amp;gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Haml uses indentation to bring the individual elements to represent the HTML
structure. A tag's children are indented beneath than the parent tag. Again, a
closing tag is automatically added. For example:&lt;/p&gt;
&lt;div class="highlight highlight-text-haml"&gt;&lt;pre&gt;%&lt;span class="pl-ent"&gt;ul&lt;/span&gt;
  %&lt;span class="pl-ent"&gt;li&lt;/span&gt; Salt
  %&lt;span class="pl-ent"&gt;li&lt;/span&gt; Pepper&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;becomes:&lt;/p&gt;
&lt;div class="highlight highlight-text-html-basic"&gt;&lt;pre&gt;&amp;lt;&lt;span class="pl-ent"&gt;ul&lt;/span&gt;&amp;gt;
  &amp;lt;&lt;span class="pl-ent"&gt;li&lt;/span&gt;&amp;gt;Salt&amp;lt;/&lt;span class="pl-ent"&gt;li&lt;/span&gt;&amp;gt;
  &amp;lt;&lt;span class="pl-ent"&gt;li&lt;/span&gt;&amp;gt;Pepper&amp;lt;/&lt;span class="pl-ent"&gt;li&lt;/span&gt;&amp;gt;
&amp;lt;/&lt;span class="pl-ent"&gt;ul&lt;/span&gt;&amp;gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;You can also put plain text as a child of an element:&lt;/p&gt;
&lt;div class="highlight highlight-text-haml"&gt;&lt;pre&gt;%&lt;span class="pl-ent"&gt;p&lt;/span&gt;
  Hello,
  World!&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;It's also possible to embed Ruby code into Haml documents. An equals sign, &lt;code&gt;=&lt;/code&gt;,
will output the result of the code. A hyphen, &lt;code&gt;-&lt;/code&gt;, will run the code but not
output the result. You can even use control statements like &lt;code&gt;if&lt;/code&gt; and &lt;code&gt;while&lt;/code&gt;:&lt;/p&gt;
&lt;div class="highlight highlight-text-haml"&gt;&lt;pre&gt;%&lt;span class="pl-ent"&gt;p&lt;/span&gt;
  Date/Time:
  -&lt;span class="pl-sre"&gt; now = DateTime.now&lt;/span&gt;
  %&lt;span class="pl-ent"&gt;strong&lt;/span&gt;=&lt;span class="pl-sre"&gt; now&lt;/span&gt;
  -&lt;span class="pl-sre"&gt; if now &amp;gt; DateTime.parse(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;December 31, 2006&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)&lt;/span&gt;
    =&lt;span class="pl-sre"&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;Happy new &lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; + &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;year!&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Haml provides far more tools than those presented here. Check out the &lt;a href="http://haml.info/docs/yardoc/file.REFERENCE.html" rel="nofollow"&gt;reference
documentation&lt;/a&gt;
for full details.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-indentation" class="anchor" aria-hidden="true" href="#indentation"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Indentation&lt;/h3&gt;
&lt;p&gt;Haml's indentation can be made up of one or more tabs or spaces. However,
indentation must be consistent within a given document. Hard tabs and spaces
can't be mixed, and the same number of tabs or spaces must be used throughout.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-contributing" class="anchor" aria-hidden="true" href="#contributing"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Contributing&lt;/h2&gt;
&lt;p&gt;Contributions are welcomed, but before you get started please read the
&lt;a href="http://haml.info/development.html#contributing" rel="nofollow"&gt;guidelines&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;After forking and then cloning the repo locally, install Bundler and then use it
to install the development gem dependencies:&lt;/p&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt;gem install bundler
bundle install&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Once this is complete, you should be able to run the test suite:&lt;/p&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt;rake&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;You'll get a warning that you need to install haml-spec, so run this:&lt;/p&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt;git submodule update --init&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;At this point &lt;code&gt;rake&lt;/code&gt; should run without error or warning and you are ready to
start working on your patch!&lt;/p&gt;
&lt;p&gt;Note that you can also run just one test out of the test suite if you're working
on a specific area:&lt;/p&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt;ruby -Itest test/helper_test.rb -n test_buffer_access&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Haml currently supports Ruby 2.0.0 and higher, so please make sure your changes run on 2.0+.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-team" class="anchor" aria-hidden="true" href="#team"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Team&lt;/h2&gt;
&lt;h3&gt;&lt;a id="user-content-current-maintainers" class="anchor" aria-hidden="true" href="#current-maintainers"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Current Maintainers&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/amatsuda"&gt;Akira Matsuda&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/mattwildig"&gt;Matt Wildig&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/teeparham"&gt;Tee Parham&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/k0kubun"&gt;Takashi Kokubun&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;&lt;a id="user-content-alumni" class="anchor" aria-hidden="true" href="#alumni"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Alumni&lt;/h3&gt;
&lt;p&gt;Haml was created by &lt;a href="http://hamptoncatlin.com" rel="nofollow"&gt;Hampton Catlin&lt;/a&gt;, the author of
the original implementation. Hampton is no longer involved in day-to-day coding,
but still consults on language issues.&lt;/p&gt;
&lt;p&gt;&lt;a href="http://nex-3.com" rel="nofollow"&gt;Natalie Weizenbaum&lt;/a&gt; was for many years the primary developer
and architect of the "modern" Ruby implementation of Haml.&lt;/p&gt;
&lt;p&gt;&lt;a href="http://github.com/norman"&gt;Norman Clarke&lt;/a&gt; was the primary maintainer of Haml from 2012 to 2016.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-license" class="anchor" aria-hidden="true" href="#license"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;License&lt;/h2&gt;
&lt;p&gt;Some of Natalie's work on Haml was supported by Unspace Interactive.&lt;/p&gt;
&lt;p&gt;Beyond that, the implementation is licensed under the MIT License.&lt;/p&gt;
&lt;p&gt;Copyright (c) 2006-2019 Hampton Catlin, Natalie Weizenbaum and the Haml team&lt;/p&gt;
&lt;p&gt;Permission is hereby granted, free of charge, to any person obtaining a copy of
this software and associated documentation files (the "Software"), to deal in
the Software without restriction, including without limitation the rights to
use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of
the Software, and to permit persons to whom the Software is furnished to do so,
subject to the following conditions:&lt;/p&gt;
&lt;p&gt;The above copyright notice and this permission notice shall be included in all
copies or substantial portions of the Software.&lt;/p&gt;
&lt;p&gt;THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS
FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR
COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER
IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN
CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.&lt;/p&gt;
&lt;/article&gt;&lt;/div&gt;</description><author>haml</author><guid isPermaLink="false">https://github.com/haml/haml</guid><pubDate>Fri, 01 Nov 2019 00:00:00 GMT</pubDate></item><item><title>github-changelog-generator/github-changelog-generator #20 in Ruby, This week</title><link>https://github.com/github-changelog-generator/github-changelog-generator</link><description>&lt;p&gt;&lt;i&gt;Automatically generate change log from your tags, issues, labels and pull requests on GitHub.&lt;/i&gt;&lt;/p&gt;&lt;div id="readme" class="instapaper_body md" data-path="README.md"&gt;&lt;article class="markdown-body entry-content p-5" itemprop="text"&gt;&lt;p&gt;&lt;a href="http://badge.fury.io/rb/github_changelog_generator" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/ec4d2f0a6e902906f50b6c43e6dc55ab36499849/68747470733a2f2f62616467652e667572792e696f2f72622f6769746875625f6368616e67656c6f675f67656e657261746f722e737667" alt="Gem Version" data-canonical-src="https://badge.fury.io/rb/github_changelog_generator.svg" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://circleci.com/gh/github-changelog-generator/github-changelog-generator" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/d60166d27ae5b5cfbae29be9c6f812d7a7d6b1d8/68747470733a2f2f636972636c6563692e636f6d2f67682f6769746875622d6368616e67656c6f672d67656e657261746f722f6769746875622d6368616e67656c6f672d67656e657261746f722e7376673f7374796c653d737667" alt="CircleCI" data-canonical-src="https://circleci.com/gh/github-changelog-generator/github-changelog-generator.svg?style=svg" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="http://inch-ci.org/github/github-changelog-generator/github-changelog-generator" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/ebcd1e9aa250a88ecdd276fb7aea7707e3c6c081/687474703a2f2f696e63682d63692e6f72672f6769746875622f6769746875622d6368616e67656c6f672d67656e657261746f722f6769746875622d6368616e67656c6f672d67656e657261746f722e737667" alt="Inline docs" data-canonical-src="http://inch-ci.org/github/github-changelog-generator/github-changelog-generator.svg" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://gitter.im/github-changelog-generator/chat?utm_source=badge&amp;amp;utm_medium=badge&amp;amp;utm_campaign=pr-badge&amp;amp;utm_content=badge" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/035436a8e799f4826ec0e1f4ab2011180e209049/68747470733a2f2f6261646765732e6769747465722e696d2f6769746875622d6368616e67656c6f672d67656e657261746f722f636861742e737667" alt="Join the chat at https://gitter.im/github-changelog-generator/chat" data-canonical-src="https://badges.gitter.im/github-changelog-generator/chat.svg" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h1&gt;&lt;a id="user-content-github-changelog-generator-" class="anchor" aria-hidden="true" href="#github-changelog-generator-"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;github-changelog-generator &lt;a target="_blank" rel="noopener noreferrer" href="../master/images/logo.jpg"&gt;&lt;img src="../master/images/logo.jpg" alt="GitHub Logo" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/h1&gt;
&lt;h4&gt;&lt;a id="user-content-update" class="anchor" aria-hidden="true" href="#update"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Update:&lt;/h4&gt;
&lt;p&gt;&lt;g-emoji class="g-emoji" alias="vulcan_salute" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f596.png"&gt;🖖&lt;/g-emoji&gt; Keep it alive: We need more Collaborators to github-changelog-generator &lt;a href="https://github.com/github-changelog-generator/github-changelog-generator/issues/727"&gt;#727&lt;/a&gt;&lt;/p&gt;
&lt;hr&gt;



&lt;ul&gt;
&lt;li&gt;&lt;a href="#changelog-generation-has-never-been-so-easy"&gt;Changelog generation has never been so easy&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#whats-the-point-of-a-changelog"&gt;&lt;em&gt;What’s the point of a changelog?&lt;/em&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#why-should-i-care"&gt;&lt;em&gt;Why should I care?&lt;/em&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#installation"&gt;Installation&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#running-with-docker"&gt;Running with Docker&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#output-example"&gt;Output example&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#usage"&gt;Usage&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="#params"&gt;Params&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#params-file"&gt;Params File&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#github-token"&gt;GitHub token&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="#migrating-from-a-manual-changelog"&gt;Migrating from a manual changelog&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="#rake-task"&gt;Rake task&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="#features-and-advantages-of-this-project"&gt;Features and advantages of this project&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="#using-the-summary-section-feature"&gt;Using the summary section feature&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#alternatives"&gt;Alternatives&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#projects-using-this-library"&gt;Projects using this library&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="#am-i-missing-some-essential-feature"&gt;Am I missing some essential feature?&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#faq"&gt;FAQ&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#contributing"&gt;Contributing&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#license"&gt;License&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;&lt;a id="user-content-changelog-generation-has-never-been-so-easy" class="anchor" aria-hidden="true" href="#changelog-generation-has-never-been-so-easy"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Changelog generation has never been so easy&lt;/h3&gt;
&lt;p&gt;&lt;strong&gt;Fully automated changelog generation&lt;/strong&gt; - This gem generates a changelog file based on &lt;strong&gt;tags&lt;/strong&gt;, &lt;strong&gt;issues&lt;/strong&gt; and merged &lt;strong&gt;pull requests&lt;/strong&gt; (and splits them into separate lists according to labels) from &lt;img class="emoji" title=":octocat:" alt=":octocat:" src="https://github.githubassets.com/images/icons/emoji/octocat.png" height="20" width="20" align="absmiddle"&gt; GitHub Issue Tracker.&lt;/p&gt;
&lt;p&gt;Since you don't have to fill your &lt;code&gt;CHANGELOG.md&lt;/code&gt; manually now: just run the script, relax and take a cup of &lt;g-emoji class="g-emoji" alias="coffee" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/2615.png"&gt;☕️&lt;/g-emoji&gt; before your next release! &lt;g-emoji class="g-emoji" alias="tada" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f389.png"&gt;🎉&lt;/g-emoji&gt;&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-whats-the-point-of-a-changelog" class="anchor" aria-hidden="true" href="#whats-the-point-of-a-changelog"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;em&gt;What’s the point of a changelog?&lt;/em&gt;&lt;/h3&gt;
&lt;p&gt;To make it easier for users and contributors to see precisely what notable changes have been made between each release (or version) of the project.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-why-should-i-care" class="anchor" aria-hidden="true" href="#why-should-i-care"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;em&gt;Why should I care?&lt;/em&gt;&lt;/h3&gt;
&lt;p&gt;Because software tools are for &lt;em&gt;people&lt;/em&gt;. "Changelogs make it easier for users and
contributors to see precisely what notable changes have been made between each
release (or version) of the project."&lt;/p&gt;
&lt;p&gt;&lt;g-emoji class="g-emoji" alias="arrow_right" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/27a1.png"&gt;➡️&lt;/g-emoji&gt; &lt;em&gt;&lt;a href="https://keepachangelog.com" rel="nofollow"&gt;https://keepachangelog.com&lt;/a&gt;&lt;/em&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-installation" class="anchor" aria-hidden="true" href="#installation"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Installation&lt;/h2&gt;
&lt;p&gt;GitHub Changelog Generator is a &lt;a href="https://www.ruby-lang.org/" rel="nofollow"&gt;Ruby&lt;/a&gt;
program, distributed as a RubyGem. The Ruby language homepage has an &lt;a href="https://www.ruby-lang.org/en/documentation/installation/" rel="nofollow"&gt;Installation page&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Install the gem like:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;$ gem install github_changelog_generator
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Depending on your system, you &lt;em&gt;may&lt;/em&gt; need to run the shell as an Administrator (Windows),
or use &lt;code&gt;sudo gem install github_changelog_generator&lt;/code&gt; (Linux).&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-running-with-docker" class="anchor" aria-hidden="true" href="#running-with-docker"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Running with Docker&lt;/h2&gt;
&lt;p&gt;Using &lt;a href="https://www.docker.com/products/docker-desktop" rel="nofollow"&gt;Docker&lt;/a&gt; is an alternative to installing Ruby and the gem.&lt;/p&gt;
&lt;p&gt;&lt;code&gt;ferrarimarco&lt;/code&gt; has made a Docker image available that you can use.&lt;/p&gt;
&lt;p&gt;Example invocation:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;$ docker run -it --rm -v "$(pwd)":/usr/local/src/your-app ferrarimarco/github-changelog-generator
&lt;/code&gt;&lt;/pre&gt;
&lt;h2&gt;&lt;a id="user-content-output-example" class="anchor" aria-hidden="true" href="#output-example"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Output example&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Look at &lt;strong&gt;&lt;a href="https://github.com/github-changelog-generator/Github-Changelog-Generator/blob/master/CHANGELOG.md"&gt;CHANGELOG.md&lt;/a&gt;&lt;/strong&gt; for this project&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="https://github.com/skywinder/ActionSheetPicker-3.0/blob/develop/CHANGELOG.md"&gt;ActionSheetPicker-3.0/CHANGELOG.md&lt;/a&gt; was generated by command:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;$ github_changelog_generator -u github-changelog-generator -p ActionSheetPicker-3.0
&lt;/code&gt;&lt;/pre&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;In general, it looks like this:&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;blockquote&gt;
&lt;h2&gt;&lt;a id="user-content-125-2015-01-15" class="anchor" aria-hidden="true" href="#125-2015-01-15"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;a href="https://github.com/github-changelog-generator/Github-Changelog-Generator/tree/1.2.5"&gt;1.2.5&lt;/a&gt; (2015-01-15)&lt;/h2&gt;
&lt;p&gt;&lt;a href="https://github.com/github-changelog-generator/Github-Changelog-Generator/compare/1.2.4...1.2.5"&gt;Full Changelog&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Implemented enhancements:&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Use milestone to specify in which version bug was fixed &lt;a href="https://github.com/github-changelog-generator/Github-Changelog-Generator/issues/22"&gt;#22&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;Fixed bugs:&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Error when trying to generate log for repo without tags &lt;a href="https://github.com/github-changelog-generator/Github-Changelog-Generator/issues/32"&gt;#32&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;Merged pull requests:&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;PrettyPrint class is included using lowercase 'pp' &lt;a href="https://github.com/github-changelog-generator/Github-Changelog-Generator/pull/43"&gt;#43&lt;/a&gt; (&lt;a href="https://github.com/schwing"&gt;schwing&lt;/a&gt;)&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;support enterprise github via command line options &lt;a href="https://github.com/github-changelog-generator/Github-Changelog-Generator/pull/42"&gt;#42&lt;/a&gt; (&lt;a href="https://github.com/glenlovett"&gt;glenlovett&lt;/a&gt;)&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/blockquote&gt;
&lt;h2&gt;&lt;a id="user-content-usage" class="anchor" aria-hidden="true" href="#usage"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Usage&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Run this:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;$ github_changelog_generator -u github_username -p github_project
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;or, on the 1.14.x (current stable release)&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;$ github_changelog_generator github_username/github_project
&lt;/code&gt;&lt;/pre&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;For Github Enterprise repos, specify &lt;em&gt;both&lt;/em&gt; &lt;code&gt;--github-site&lt;/code&gt; and &lt;code&gt;--github-api&lt;/code&gt; options:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt; $ github_changelog_generator --github-site="https://github.yoursite.com" \
                            --github-api="https://github.yoursite.com/api/v3/"
&lt;/code&gt;&lt;/pre&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;This generates a &lt;code&gt;CHANGELOG.md&lt;/code&gt;, with pretty Markdown formatting.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-params" class="anchor" aria-hidden="true" href="#params"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Params&lt;/h3&gt;
&lt;p&gt;Print help for all command-line options to learn more details:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;$ github_changelog_generator --help
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;For more details about params, read the Wiki page: &lt;a href="https://github.com/github-changelog-generator/github-changelog-generator/wiki/Advanced-change-log-generation-examples"&gt;&lt;strong&gt;Advanced changelog generation examples&lt;/strong&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-params-file" class="anchor" aria-hidden="true" href="#params-file"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Params File&lt;/h3&gt;
&lt;p&gt;In your project root, you can put a params file named &lt;code&gt;.github_changelog_generator&lt;/code&gt; to override default params:&lt;/p&gt;
&lt;p&gt;Example:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;unreleased=false
future-release=5.0.0
since-tag=1.0.0
&lt;/code&gt;&lt;/pre&gt;
&lt;h3&gt;&lt;a id="user-content-github-token" class="anchor" aria-hidden="true" href="#github-token"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;GitHub token&lt;/h3&gt;
&lt;p&gt;GitHub only allows 50 unauthenticated requests per hour.&lt;/p&gt;
&lt;p&gt;Therefore, it's recommended to run this script with authentication by using a &lt;strong&gt;token&lt;/strong&gt;.&lt;/p&gt;
&lt;p&gt;Here's how:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/settings/tokens/new?description=GitHub%20Changelog%20Generator%20token"&gt;Generate a token here&lt;/a&gt; - you only need "repo" scope for private repositories&lt;/li&gt;
&lt;li&gt;Either:
&lt;ul&gt;
&lt;li&gt;Run the script with &lt;code&gt;--token &amp;lt;your-40-digit-token&amp;gt;&lt;/code&gt;; &lt;strong&gt;OR&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;Set the &lt;code&gt;CHANGELOG_GITHUB_TOKEN&lt;/code&gt; environment variable to your 40 digit token&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;You can set an environment variable by running the following command at the prompt, or by adding it to your shell profile (e.g., &lt;code&gt;~/.bash_profile&lt;/code&gt; or &lt;code&gt;~/.zshrc&lt;/code&gt;):&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;export CHANGELOG_GITHUB_TOKEN="«your-40-digit-github-token»"
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;So, if you get a message like this:&lt;/p&gt;
&lt;div class="highlight highlight-source-gfm"&gt;&lt;pre&gt;API rate limit exceeded for github_username.
See: https://developer.github.com/v3/#rate-limiting&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;It's time to create this token! (Or, wait an hour for GitHub to reset your unauthenticated request limit.)&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-migrating-from-a-manual-changelog" class="anchor" aria-hidden="true" href="#migrating-from-a-manual-changelog"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Migrating from a manual changelog&lt;/h2&gt;
&lt;p&gt;Knowing how dedicated you are to your project, you probably haven't been waiting for &lt;code&gt;github-changelog-generator&lt;/code&gt; to keep a changelog.
But you probably don't want your project's open issues and PRs for all past features listed in your historic changelog, either.&lt;/p&gt;
&lt;p&gt;That's where &lt;code&gt;--base &amp;lt;your-manual-changelog.md&amp;gt;&lt;/code&gt; comes in handy!
This option lets append your old manual changelog to the end of the generated entries.&lt;/p&gt;
&lt;p&gt;If you have a &lt;code&gt;HISTORY.md&lt;/code&gt; file in your project, it will automatically be picked as the static historical changelog and appended.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-rake-task" class="anchor" aria-hidden="true" href="#rake-task"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Rake task&lt;/h3&gt;
&lt;p&gt;You love &lt;code&gt;rake&lt;/code&gt;? We do, too! So, we've made it even easier for you:
we've provided a &lt;code&gt;rake&lt;/code&gt; task library for your changelog generation.&lt;/p&gt;
&lt;p&gt;Configure the task in your &lt;code&gt;Rakefile&lt;/code&gt;:&lt;/p&gt;
&lt;div class="highlight highlight-source-ruby"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;require&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;github_changelog_generator/task&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;

&lt;span class="pl-c1"&gt;GitHubChangelogGenerator&lt;/span&gt;::&lt;span class="pl-c1"&gt;RakeTask&lt;/span&gt;.&lt;span class="pl-k"&gt;new&lt;/span&gt; &lt;span class="pl-c1"&gt;:changelog&lt;/span&gt; &lt;span class="pl-k"&gt;do&lt;/span&gt; |&lt;span class="pl-smi"&gt;config&lt;/span&gt;|
  config.user &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;username&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;
  config.project &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;project-name&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;
  config.since_tag &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;0.1.14&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;
  config.future_release &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;0.2.0&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;
&lt;span class="pl-k"&gt;end&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;All command-line options can be passed to the &lt;code&gt;rake&lt;/code&gt; task as &lt;code&gt;config&lt;/code&gt;
parameters. And since you're naming the &lt;code&gt;rake&lt;/code&gt; task yourself, you can create
as many as you want.&lt;/p&gt;
&lt;p&gt;You can look for params names from the &lt;a href="https://github.com/github-changelog-generator/github-changelog-generator/blob/master/lib/github_changelog_generator/parser.rb"&gt;parser source code (#setup_parser)&lt;/a&gt;. For example, to translate the bugs label to Portuguese, instead of setting &lt;code&gt;config.bugs_label&lt;/code&gt;, you have to set &lt;code&gt;config.bug_prefix&lt;/code&gt;, and so on.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-features-and-advantages-of-this-project" class="anchor" aria-hidden="true" href="#features-and-advantages-of-this-project"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Features and advantages of this project&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Generate canonical, neat changelog file, with default sections that follow &lt;a href="http://keepachangelog.com" rel="nofollow"&gt;basic changelog guidelines&lt;/a&gt; &lt;g-emoji class="g-emoji" alias="gem" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f48e.png"&gt;💎&lt;/g-emoji&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Optionally generate &lt;strong&gt;Unreleased&lt;/strong&gt; changes (closed issues that have not released yet) &lt;g-emoji class="g-emoji" alias="dizzy" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f4ab.png"&gt;💫&lt;/g-emoji&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;GitHub Enterprise support&lt;/strong&gt; via command line options! &lt;g-emoji class="g-emoji" alias="factory" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f3ed.png"&gt;🏭&lt;/g-emoji&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Flexible format &lt;strong&gt;customization&lt;/strong&gt;:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Customize&lt;/strong&gt; issues that &lt;strong&gt;should be added&lt;/strong&gt; to changelog &lt;g-emoji class="g-emoji" alias="eight_spoked_asterisk" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/2733.png"&gt;✳️&lt;/g-emoji&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Custom date formats&lt;/strong&gt; supported (but keep &lt;a href="http://xkcd.com/1179/" rel="nofollow"&gt;ISO 8601&lt;/a&gt; in mind!) &lt;g-emoji class="g-emoji" alias="date" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f4c5.png"&gt;📅&lt;/g-emoji&gt;&lt;/li&gt;
&lt;li&gt;Manually specify the version that fixed an issue (for cases when the issue's Closed date doesn't match) by giving the issue's &lt;code&gt;milestone&lt;/code&gt; the same name as the tag of version &lt;g-emoji class="g-emoji" alias="pushpin" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f4cc.png"&gt;📌&lt;/g-emoji&gt;&lt;/li&gt;
&lt;li&gt;Automatically &lt;strong&gt;exclude specific issues&lt;/strong&gt; that are irrelevant to your changelog (by default, any issue labeled &lt;code&gt;question&lt;/code&gt;, &lt;code&gt;duplicate&lt;/code&gt;, &lt;code&gt;invalid&lt;/code&gt;, or &lt;code&gt;wontfix&lt;/code&gt;) &lt;g-emoji class="g-emoji" alias="scissors" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/2702.png"&gt;✂️&lt;/g-emoji&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Distinguish&lt;/strong&gt; issues &lt;strong&gt;by labels&lt;/strong&gt;. &lt;g-emoji class="g-emoji" alias="mag_right" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f50e.png"&gt;🔎&lt;/g-emoji&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Merged pull requests (all merged pull-requests) &lt;g-emoji class="g-emoji" alias="twisted_rightwards_arrows" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f500.png"&gt;🔀&lt;/g-emoji&gt;&lt;/li&gt;
&lt;li&gt;Bug fixes (issues labeled &lt;code&gt;bug&lt;/code&gt;) &lt;g-emoji class="g-emoji" alias="beetle" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f41e.png"&gt;🐞&lt;/g-emoji&gt;&lt;/li&gt;
&lt;li&gt;Enhancements (issues labeled &lt;code&gt;enhancement&lt;/code&gt;) &lt;g-emoji class="g-emoji" alias="star2" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f31f.png"&gt;🌟&lt;/g-emoji&gt;&lt;/li&gt;
&lt;li&gt;Issues (closed issues with no labels) &lt;g-emoji class="g-emoji" alias="non-potable_water" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f6b1.png"&gt;🚱&lt;/g-emoji&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Manually include or exclude issues by labels &lt;g-emoji class="g-emoji" alias="wrench" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f527.png"&gt;🔧&lt;/g-emoji&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Customize lots more! Tweak the changelog to fit your preferences &lt;g-emoji class="g-emoji" alias="tophat" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f3a9.png"&gt;🎩&lt;/g-emoji&gt;
(&lt;em&gt;See &lt;code&gt;github_changelog_generator --help&lt;/code&gt;  for details)&lt;/em&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;&lt;a id="user-content-using-the-summary-section-feature" class="anchor" aria-hidden="true" href="#using-the-summary-section-feature"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Using the summary section feature&lt;/h3&gt;
&lt;p&gt;For each version, you can add a &lt;em&gt;release summary&lt;/em&gt; with text, images, gif animations,
etc, and show new features and notes clearly to the user. This is done using GitHub metadata.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Example&lt;/strong&gt;: adding the release summary for v1.0.0:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Create a new GitHub Issue&lt;/li&gt;
&lt;li&gt;In the Issue's &lt;em&gt;Description&lt;/em&gt; field, add your release summary content&lt;/li&gt;
&lt;/ol&gt;
&lt;pre&gt;&lt;code&gt;![image](https://user-images.githubusercontent.com/12690315/45935880-006a8200-bfeb-11e8-958e-ff742ae66b96.png)

Hello, World! :tada:
&lt;/code&gt;&lt;/pre&gt;
&lt;ol start="3"&gt;
&lt;li&gt;Set the Issue Label &lt;code&gt;release-summary&lt;/code&gt; and add it to the GitHub Milestone &lt;code&gt;v1.0.0&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Close the Issue and execute &lt;code&gt;github-changelog-generator&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;The result looks like this:&lt;/li&gt;
&lt;/ol&gt;
&lt;blockquote&gt;
&lt;h2&gt;&lt;a id="user-content-v100-2014-11-07" class="anchor" aria-hidden="true" href="#v100-2014-11-07"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;a href="https://github.com/github-changelog-generator/github-changelog-generator/tree/1.0.0"&gt;v1.0.0&lt;/a&gt; (2014-11-07)&lt;/h2&gt;
&lt;p&gt;&lt;a href="https://github.com/github-changelog-generator/github-changelog-generator/compare/0.1.0...1.0.0"&gt;Full Changelog&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="https://user-images.githubusercontent.com/12690315/45935880-006a8200-bfeb-11e8-958e-ff742ae66b96.png"&gt;&lt;img src="https://user-images.githubusercontent.com/12690315/45935880-006a8200-bfeb-11e8-958e-ff742ae66b96.png" alt="image" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Hello, World! &lt;g-emoji class="g-emoji" alias="tada" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f389.png"&gt;🎉&lt;/g-emoji&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Implemented enhancements:&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Add some features&lt;/li&gt;
&lt;/ul&gt;
&lt;/blockquote&gt;
&lt;h3&gt;&lt;a id="user-content-alternatives" class="anchor" aria-hidden="true" href="#alternatives"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Alternatives&lt;/h3&gt;
&lt;p&gt;Here is a &lt;a href="https://github.com/github-changelog-generator/Github-Changelog-Generator/wiki/Alternatives"&gt;wikipage list of alternatives&lt;/a&gt; that I found. But none satisfied my requirements.&lt;/p&gt;
&lt;p&gt;&lt;em&gt;If you know other projects, feel free to edit this Wiki page!&lt;/em&gt;&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-projects-using-this-library" class="anchor" aria-hidden="true" href="#projects-using-this-library"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Projects using this library&lt;/h3&gt;
&lt;p&gt;Here's a &lt;a href="https://github.com/github-changelog-generator/Github-Changelog-Generator/wiki/Projects-using-Github-Changelog-Generator"&gt;wikipage list of projects&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;If you've used this project in a live app, please let me know! Nothing makes me happier than seeing someone else take my work and go wild with it.&lt;/p&gt;
&lt;p&gt;&lt;em&gt;If you are using &lt;code&gt;github_changelog_generator&lt;/code&gt; to generate your project's changelog, or know of other projects using it, please &lt;a href="https://github.com/github-changelog-generator/github-changelog-generator/wiki/Projects-using-Github-Changelog-Generator"&gt;add it to this list&lt;/a&gt;.&lt;/em&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-am-i-missing-some-essential-feature" class="anchor" aria-hidden="true" href="#am-i-missing-some-essential-feature"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Am I missing some essential feature?&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Nothing is impossible!&lt;/strong&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Open an &lt;a href="https://github.com/github-changelog-generator/Github-Changelog-Generator/issues/new"&gt;issue&lt;/a&gt; and let's make the generator better together!&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;em&gt;Bug reports, feature requests, patches, and well-wishes are always welcome.&lt;/em&gt; &lt;g-emoji class="g-emoji" alias="exclamation" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/2757.png"&gt;❗️&lt;/g-emoji&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-faq" class="anchor" aria-hidden="true" href="#faq"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;FAQ&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;em&gt;&lt;strong&gt;I already use GitHub Releases. Why do I need this?&lt;/strong&gt;&lt;/em&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;GitHub Releases is a very good thing. And it's very good practice to maintain it. (Not a lot of people are using it yet!) &lt;g-emoji class="g-emoji" alias="congratulations" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/3297.png"&gt;㊗️&lt;/g-emoji&gt;&lt;/p&gt;
&lt;p&gt;&lt;em&gt;BTW: I would like to support GitHub Releases in &lt;a href="https://github.com/github-changelog-generator/github-changelog-generator/issues/56"&gt;next releases&lt;/a&gt; ;)&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;I'm not trying to compare the quality of handwritten and auto-generated logs. That said....&lt;/p&gt;
&lt;p&gt;An auto-generated changelog really helps, even if you manually fill in the release notes!&lt;/p&gt;
&lt;p&gt;For example:&lt;/p&gt;
&lt;p&gt;When you find a closed bug, it is very useful to know which release fixed it.
So that you can easily find the issue by # in &lt;code&gt;CHANGELOG.md&lt;/code&gt;.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;It's not quite as easy to find this in handwritten releases notes.&lt;/li&gt;
&lt;li&gt;A generated file saves you the trouble of remembering everything;
sometimes people forget to add things to a handwritten file.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Ultimately, I think GitHub Releases are ideal for end-users.
Meanwhile, &lt;code&gt;CHANGELOG.md&lt;/code&gt; lives right in the repository, with its detailed list of changes, which is handy for developers.
Finally, there's nothing wrong with using GitHub Releases alongside &lt;code&gt;CHANGELOG.md&lt;/code&gt; in this combination.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;em&gt;&lt;strong&gt;I got an "API rate limit exceeded" error message. What does this mean?&lt;/strong&gt;&lt;/em&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;GitHub &lt;a href="https://developer.github.com/v3/#rate-limiting"&gt;limits the number of API requests&lt;/a&gt; you can make in an hour. You can make up to 5,000 requests per hour. For unauthenticated requests, the rate limit is only up to 60 requests per hour. Unauthenticated requests are associated with your IP address (not the user making requests).&lt;/p&gt;
&lt;p&gt;If you're seeing this warning, please do the following:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Make sure you're providing an OAuth token, so you're not making requests anonymously. Using an OAuth token increases your hourly request maximum from 60 to 5000.&lt;/li&gt;
&lt;li&gt;If you have a large repo with lots of issues/PRs, you can use &lt;code&gt;--max-issues NUM&lt;/code&gt; to limit the number of issues that are pulled back. For example: &lt;code&gt;--max-issues 1000&lt;/code&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;ul&gt;
&lt;li&gt;&lt;em&gt;&lt;strong&gt;My Ruby version is very old, can I use this?&lt;/strong&gt;&lt;/em&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;When your Ruby is old, and you don't want to upgrade, and you want to
control which libraries you use, you can use Bundler.&lt;/p&gt;
&lt;p&gt;In a Gemfile, perhaps in a non-deployed &lt;code&gt;:development&lt;/code&gt; group, add this
gem:&lt;/p&gt;
&lt;div class="highlight highlight-source-ruby"&gt;&lt;pre&gt;group &lt;span class="pl-c1"&gt;:development&lt;/span&gt; &lt;span class="pl-k"&gt;do&lt;/span&gt;
  gem &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;github_changelog_generator&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-c1"&gt;require:&lt;/span&gt; &lt;span class="pl-c1"&gt;false&lt;/span&gt;
&lt;span class="pl-k"&gt;end&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Then you can keep back dependencies like rack, which currently is only
compatible with Ruby &amp;gt;= 2.2.2. So, use an older version for your app by
adding a line like this to the Gemfile:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;gem 'rack', '~&amp;gt; 1.6'
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;This way, you can keep on using github_changelog_generator, even if you
can't get the latest version of Ruby installed.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;em&gt;&lt;strong&gt;Windows: 1.14.x wants to create a file on an invalid path. Why?&lt;/strong&gt;&lt;/em&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Windows: &lt;a href="https://github.com/github-changelog-generator/github-changelog-generator/issues/458"&gt;v1.14.0 introduced a bug where it attempts to create /tmp/github_changelog-logger.log... which isn't a valid path on Windows and thus fails&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Workaround: Create a &lt;code&gt;C:\tmp&lt;/code&gt;.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-contributing" class="anchor" aria-hidden="true" href="#contributing"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Contributing&lt;/h2&gt;
&lt;p&gt;We have collected notes on how to contribute to this project in &lt;a href="CONTRIBUTING.md"&gt;CONTRIBUTING.md&lt;/a&gt;.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-license" class="anchor" aria-hidden="true" href="#license"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;License&lt;/h2&gt;
&lt;p&gt;Github Changelog Generator is released under the &lt;a href="http://www.opensource.org/licenses/MIT" rel="nofollow"&gt;MIT License&lt;/a&gt;.&lt;/p&gt;
&lt;/article&gt;&lt;/div&gt;</description><author>github-changelog-generator</author><guid isPermaLink="false">https://github.com/github-changelog-generator/github-changelog-generator</guid><pubDate>Fri, 01 Nov 2019 00:00:00 GMT</pubDate></item><item><title>projectcalico/calico #21 in Ruby, This week</title><link>https://github.com/projectcalico/calico</link><description>&lt;p&gt;&lt;i&gt;Cloud native connectivity and network policy&lt;/i&gt;&lt;/p&gt;&lt;div id="readme" class="instapaper_body md" data-path="README.md"&gt;&lt;article class="markdown-body entry-content p-5" itemprop="text"&gt;&lt;p&gt;&lt;a href="https://slack.projectcalico.org" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/f29370bd4d6d90ab99450c3afb15680f0c1d1238/68747470733a2f2f736c61636b2e70726f6a65637463616c69636f2e6f72672f62616467652e737667" alt="Slack Status" data-canonical-src="https://slack.projectcalico.org/badge.svg" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://kiwiirc.com/client/irc.freenode.net/#calico" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/4449be5b8c992f0b0a529be017200ea4ed288dcf/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f6972632d25323363616c69636f2d626c75652e737667" alt="IRC Channel" data-canonical-src="https://img.shields.io/badge/irc-%23calico-blue.svg" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://hub.docker.com/r/calico/node/" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/c9ee7d03e70fbb9868260820f65e7fc3aa4846d3/68747470733a2f2f696d672e736869656c64732e696f2f646f636b65722f70756c6c732f63616c69636f2f6e6f64652e737667" alt="Docker Pulls" data-canonical-src="https://img.shields.io/docker/pulls/calico/node.svg" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://imagelayers.io/?images=calico/node:latest" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/c908b2712859372c1012c3ef32ac6d237759b5a1/68747470733a2f2f62616467652e696d6167656c61796572732e696f2f63616c69636f2f6e6f64653a6c61746573742e737667" alt="" data-canonical-src="https://badge.imagelayers.io/calico/node:latest.svg" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h1&gt;&lt;a id="user-content-calico" class="anchor" aria-hidden="true" href="#calico"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Calico&lt;/h1&gt;
&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="https://camo.githubusercontent.com/64c8b5ed6ac97553ae367348e8a59a24e2ed5bdc/687474703a2f2f646f63732e70726f6a65637463616c69636f2e6f72672f696d616765732f66656c69782e706e67"&gt;&lt;img src="https://camo.githubusercontent.com/64c8b5ed6ac97553ae367348e8a59a24e2ed5bdc/687474703a2f2f646f63732e70726f6a65637463616c69636f2e6f72672f696d616765732f66656c69782e706e67" width="100" height="100" data-canonical-src="http://docs.projectcalico.org/images/felix.png" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Calico is an open source system enabling cloud native application connectivity and policy. Calico integrates with major orchestration
systems like &lt;a href="https://kubernetes.io" rel="nofollow"&gt;Kubernetes&lt;/a&gt;, &lt;a href="http://mesos.apache.org/" rel="nofollow"&gt;Apache Mesos&lt;/a&gt;, &lt;a href="https://www.docker.com/" rel="nofollow"&gt;Docker&lt;/a&gt;, &lt;a href="https://www.openstack.org/" rel="nofollow"&gt;OpenStack&lt;/a&gt; and more to provide a seamless
experience for developers and operators.&lt;/p&gt;
&lt;p&gt;Calico is a &lt;a href="https://www.tigera.io/" rel="nofollow"&gt;Tigera&lt;/a&gt; open source project, and is primarily maintained by the Tigera team.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-get-started-using-calico" class="anchor" aria-hidden="true" href="#get-started-using-calico"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Get Started Using Calico&lt;/h2&gt;
&lt;p&gt;For users who want to learn more about the project or get started with Calico, see the documentation on &lt;a href="https://docs.projectcalico.org" rel="nofollow"&gt;docs.projectcalico.org&lt;/a&gt;.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-get-started-developing-calico" class="anchor" aria-hidden="true" href="#get-started-developing-calico"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Get Started Developing Calico&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="CONTRIBUTING_CODE.md"&gt;Contribution guidelines&lt;/a&gt;: submitting changes to Calico and contribution workflow.&lt;/li&gt;
&lt;li&gt;&lt;a href="DEVELOPER_GUIDE.md"&gt;Developer guide&lt;/a&gt;: how to set up a development environment, build the code, and run tests.&lt;/li&gt;
&lt;li&gt;&lt;a href="CONTRIBUTING_DOCS.md"&gt;Contributing to the Calico documentation&lt;/a&gt;: submitting changes to &lt;a href="https://docs.projectcalico.org" rel="nofollow"&gt;docs.projectcalico.org&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-support" class="anchor" aria-hidden="true" href="#support"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Support&lt;/h2&gt;
&lt;p&gt;You can get help through one of the &lt;a href="https://www.projectcalico.org/community" rel="nofollow"&gt;Calico community channels&lt;/a&gt;.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-license" class="anchor" aria-hidden="true" href="#license"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;License&lt;/h2&gt;
&lt;p&gt;Calico is available under the Apache 2.0 license. See the &lt;a href="LICENSE.md"&gt;LICENSE&lt;/a&gt; file for details.&lt;/p&gt;
&lt;/article&gt;&lt;/div&gt;</description><author>projectcalico</author><guid isPermaLink="false">https://github.com/projectcalico/calico</guid><pubDate>Fri, 01 Nov 2019 00:00:00 GMT</pubDate></item><item><title>solidusio/solidus #22 in Ruby, This week</title><link>https://github.com/solidusio/solidus</link><description>&lt;p&gt;&lt;i&gt;🛒Solidus, Rails eCommerce System&lt;/i&gt;&lt;/p&gt;&lt;div id="readme" class="instapaper_body md" data-path="README.md"&gt;&lt;article class="markdown-body entry-content p-5" itemprop="text"&gt;&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="./logo.svg"&gt;&lt;img width="250" src="./logo.svg" alt="Solidus logo" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h1&gt;&lt;a id="user-content-solidus" class="anchor" aria-hidden="true" href="#solidus"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Solidus&lt;/h1&gt;
&lt;p&gt;&lt;a href="https://circleci.com/gh/solidusio/solidus/tree/master" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/22abb1392a6702d05d5a3cde043f1baa6efc21f0/68747470733a2f2f636972636c6563692e636f6d2f67682f736f6c69647573696f2f736f6c696475732f747265652f6d61737465722e7376673f7374796c653d736869656c64" alt="Circle CI" data-canonical-src="https://circleci.com/gh/solidusio/solidus/tree/master.svg?style=shield" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://rubygems.org/gems/solidus" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/eea9e7af3992d4951b34baa5206c4939ea953206/68747470733a2f2f696d672e736869656c64732e696f2f67656d2f762f736f6c696475732e737667" alt="Gem" data-canonical-src="https://img.shields.io/gem/v/solidus.svg" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="LICENSE.md"&gt;&lt;img src="https://camo.githubusercontent.com/d4392761d7a6364147d2518b8f7299863668b099/687474703a2f2f696d672e736869656c64732e696f2f62616467652f6c6963656e73652d4253442d79656c6c6f77677265656e2e737667" alt="License" data-canonical-src="http://img.shields.io/badge/license-BSD-yellowgreen.svg" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://houndci.com" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/1c940d021ef775a44e0880bc3ba124a6bee5fefb/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f52657669657765645f62792d486f756e642d3845363442302e737667" alt="Reviewed by Hound" data-canonical-src="https://img.shields.io/badge/Reviewed_by-Hound-8E64B0.svg" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href="https://opencollective.com/solidus" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/7371195ed73b6e149829a8a64b4c72592f4ca062/68747470733a2f2f6f70656e636f6c6c6563746976652e636f6d2f736f6c696475732f74696572732f656e74687573696173742f62616467652e7376673f6c6162656c3d456e74687573696173747326636f6c6f723d62726967687467726565" alt="Enthusiasts on Open Collective" data-canonical-src="https://opencollective.com/solidus/tiers/enthusiast/badge.svg?label=Enthusiasts&amp;amp;color=brightgree" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://opencollective.com/solidus" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/223a7caebdbc7e5415f39ea8e718e80a16718316/68747470733a2f2f6f70656e636f6c6c6563746976652e636f6d2f736f6c696475732f74696572732f737570706f727465722f62616467652e7376673f6c6162656c3d537570706f727465727326636f6c6f723d62726967687467726565" alt="Supporters on Open Collective" data-canonical-src="https://opencollective.com/solidus/tiers/supporter/badge.svg?label=Supporters&amp;amp;color=brightgree" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://opencollective.com/solidus" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/26cb12ffaf965efa7c3b014ceb56eb0ed59f3618/68747470733a2f2f6f70656e636f6c6c6563746976652e636f6d2f736f6c696475732f74696572732f616d6261737361646f722f62616467652e7376673f6c6162656c3d416d6261737361646f7226636f6c6f723d62726967687467726565" alt="Ambassadors on Open Collective" data-canonical-src="https://opencollective.com/solidus/tiers/ambassador/badge.svg?label=Ambassador&amp;amp;color=brightgree" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://www.codetriage.com/solidusio/solidus" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/2ef0621476dcff689ad309673d0676c1cd2cf7e8/68747470733a2f2f7777772e636f64657472696167652e636f6d2f736f6c69647573696f2f736f6c696475732f6261646765732f75736572732e737667" alt="Open Source Helpers" data-canonical-src="https://www.codetriage.com/solidusio/solidus/badges/users.svg" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="http://slack.solidus.io" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/5cb0a81926354a0b71d8abd101d78655c6d6e669/687474703a2f2f736c61636b2e736f6c696475732e696f2f62616467652e737667" alt="Slack" data-canonical-src="http://slack.solidus.io/badge.svg" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;A free, open-source ecommerce platform that gives you complete control over your store.&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Visit our website&lt;/strong&gt;: &lt;a href="https://solidus.io/" rel="nofollow"&gt;https://solidus.io/&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Read our guides&lt;/strong&gt;: &lt;a href="https://guides.solidus.io/developers/" rel="nofollow"&gt;https://guides.solidus.io/developers/&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Join our Slack&lt;/strong&gt;: &lt;a href="https://solidusio.slack.com/" rel="nofollow"&gt;https://solidusio.slack.com/&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Solidus Security&lt;/strong&gt;: &lt;a href="https://groups.google.com/forum/#!forum/solidus-security" rel="nofollow"&gt;mailing list&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-table-of-contents" class="anchor" aria-hidden="true" href="#table-of-contents"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Table of Contents&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="#supporting-solidus"&gt;Supporting Solidus&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#summary"&gt;Summary&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#demo"&gt;Demo&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#getting-started"&gt;Getting Started&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#installation-options"&gt;Installation Options&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#performance"&gt;Performance&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#developing-solidus"&gt;Developing Solidus&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#contributing"&gt;Contributing&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-supporting-solidus" class="anchor" aria-hidden="true" href="#supporting-solidus"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Supporting Solidus&lt;/h2&gt;
&lt;p&gt;As a community-driven project, Solidus relies on funds and time donated by developers and stakeholders who use Solidus for their businesses. If you'd like to help Solidus keep growing, please consider:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://opencollective.com/solidus" rel="nofollow"&gt;Become a backer or sponsor on Open Collective&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/solidusio/solidus/blob/master/CONTRIBUTING.md"&gt;Contribute to the project&lt;/a&gt;.&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;&lt;a id="user-content-main-contributor--director" class="anchor" aria-hidden="true" href="#main-contributor--director"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Main Contributor &amp;amp; Director&lt;/h3&gt;
&lt;p&gt;At present, Nebulab is the main code contributor and director of Solidus, providing technical guidance and coordinating community efforts and activities.&lt;/p&gt;
&lt;p&gt;&lt;a href="https://nebulab.it/" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/67eb89061374e27e3ae5466f8c040182fe189f92/68747470733a2f2f6e6562756c61622e69742f6173736574732f696d616765732f7075626c69632f6c6f676f2e737667" alt="Nebulab" data-canonical-src="https://nebulab.it/assets/images/public/logo.svg" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-ambassadors" class="anchor" aria-hidden="true" href="#ambassadors"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Ambassadors&lt;/h3&gt;
&lt;p&gt;Support this project by becoming a Solidus Ambassador. Your logo will show up here with a link to your website. &lt;a href="https://opencollective.com/solidus" rel="nofollow"&gt;Become an Ambassador&lt;/a&gt;.&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;&lt;a href="https://www.enginecommerce.com/" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/ef1b2ef05ac54f2713b54b7d6de53d4098ab23b6/68747470733a2f2f696d616765732e6f70656e636f6c6c6563746976652e636f6d2f70726f78792f696d616765733f7372633d68747470732533412532462532466c6f676f2e636c6561726269742e636f6d253246656e67696e65636f6d6d657263652e636f6d266865696768743d313030" alt="Engine" data-canonical-src="https://images.opencollective.com/proxy/images?src=https%3A%2F%2Flogo.clearbit.com%2Fenginecommerce.com&amp;amp;height=100" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/th&gt;
&lt;th&gt;&lt;a href="https://supergood.software/" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/ecf115ef53ebd1ec6f32be27965a31287c6c0ae7/68747470733a2f2f696d616765732e6f70656e636f6c6c6563746976652e636f6d2f70726f78792f696d616765733f7372633d68747470732533412532462532466f70656e636f6c6c6563746976652d70726f64756374696f6e2e73332d75732d776573742d312e616d617a6f6e6177732e636f6d25324633626262313434302d373237662d313165392d613336362d3337363733636333386365652e706e67266865696768743d313030" alt="Super Good Software" data-canonical-src="https://images.opencollective.com/proxy/images?src=https%3A%2F%2Fopencollective-production.s3-us-west-1.amazonaws.com%2F3bbb1440-727f-11e9-a366-37673cc38cee.png&amp;amp;height=100" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/th&gt;
&lt;th&gt;&lt;a href="https://karmacreative.io/" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/34d55a9f61756f1e1897636556eb5c9b477ea98f/68747470733a2f2f696d616765732e6f70656e636f6c6c6563746976652e636f6d2f70726f78792f696d616765733f7372633d68747470732533412532462532466f70656e636f6c6c6563746976652d70726f64756374696f6e2e73332d75732d776573742d312e616d617a6f6e6177732e636f6d25324661623934643261302d373235332d313165392d613336362d3337363733636333386365652e706e67266865696768743d313030" alt="Karma Creative" data-canonical-src="https://images.opencollective.com/proxy/images?src=https%3A%2F%2Fopencollective-production.s3-us-west-1.amazonaws.com%2Fab94d2a0-7253-11e9-a366-37673cc38cee.png&amp;amp;height=100" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/th&gt;
&lt;th&gt;&lt;a href="https://www.moddedeuros.com" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/bae08d1efc041a0e47e6795f9a4c83722c4a4a58/68747470733a2f2f696d616765732e6f70656e636f6c6c6563746976652e636f6d2f70726f78792f696d616765733f7372633d6874747073253341253246253246696d616765732e6f70656e636f6c6c6563746976652e636f6d2532466d6f646465642d6575726f73253246663161383061652532466c6f676f2e706e67266865696768743d313030" alt="ModdedEuros" data-canonical-src="https://images.opencollective.com/proxy/images?src=https%3A%2F%2Fimages.opencollective.com%2Fmodded-euros%2Ff1a80ae%2Flogo.png&amp;amp;height=100" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;/table&gt;
&lt;hr&gt;
&lt;h2&gt;&lt;a id="user-content-summary" class="anchor" aria-hidden="true" href="#summary"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Summary&lt;/h2&gt;
&lt;p&gt;Solidus is a complete open source ecommerce solution built with Ruby on Rails.
It is a fork of &lt;a href="https://spreecommerce.org" rel="nofollow"&gt;Spree&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;See the &lt;a href="http://docs.solidus.io" rel="nofollow"&gt;Solidus class documentation&lt;/a&gt; and the &lt;a href="https://guides.solidus.io" rel="nofollow"&gt;Solidus
Guides&lt;/a&gt; for information about the functionality that
Solidus provides.&lt;/p&gt;
&lt;p&gt;Solidus consists of several gems. When you require the &lt;code&gt;solidus&lt;/code&gt; gem in your
&lt;code&gt;Gemfile&lt;/code&gt;, Bundler will install all of the gems maintained in this repository:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/solidusio/solidus/tree/master/api"&gt;&lt;code&gt;solidus_api&lt;/code&gt;&lt;/a&gt; (RESTful API)&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/solidusio/solidus/tree/master/frontend"&gt;&lt;code&gt;solidus_frontend&lt;/code&gt;&lt;/a&gt; (Cart and storefront)&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/solidusio/solidus/tree/master/backend"&gt;&lt;code&gt;solidus_backend&lt;/code&gt;&lt;/a&gt; (Admin area)&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/solidusio/solidus/tree/master/core"&gt;&lt;code&gt;solidus_core&lt;/code&gt;&lt;/a&gt; (Essential models, mailers, and classes)&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/solidusio/solidus/tree/master/sample"&gt;&lt;code&gt;solidus_sample&lt;/code&gt;&lt;/a&gt; (Sample data)&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;All of the gems are designed to work together to provide a fully functional
ecommerce platform. However, you may only want to use the
&lt;a href="https://github.com/solidusio/solidus/tree/master/core"&gt;&lt;code&gt;solidus_core&lt;/code&gt;&lt;/a&gt; gem
combine it with your own custom frontend, admin interface, and API.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-demo" class="anchor" aria-hidden="true" href="#demo"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Demo&lt;/h2&gt;
&lt;p&gt;Try out Solidus with one-click on Heroku:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://heroku.com/deploy?template=https://github.com/solidusio/solidus-example-app" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/83b0e95b38892b49184e07ad572c94c8038323fb/68747470733a2f2f7777772e6865726f6b7563646e2e636f6d2f6465706c6f792f627574746f6e2e737667" alt="Deploy" data-canonical-src="https://www.herokucdn.com/deploy/button.svg" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Alternatively, you can use Docker to run a demo on your local machine. Run the
following command to download the image and run it at
&lt;a href="http://localhost:3000" rel="nofollow"&gt;http://localhost:3000&lt;/a&gt;.&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;docker run --rm -it -p 3000:3000 solidusio/solidus-demo:latest
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;The admin interface can be accessed at
&lt;a href="http://localhost:3000/admin/" rel="nofollow"&gt;http://localhost:3000/admin/&lt;/a&gt;, the default
credentials are &lt;code&gt;admin@example.com&lt;/code&gt; and &lt;code&gt;test123&lt;/code&gt;.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-getting-started" class="anchor" aria-hidden="true" href="#getting-started"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Getting started&lt;/h2&gt;
&lt;p&gt;Begin by making sure you have
&lt;a href="http://imagemagick.org/script/download.php" rel="nofollow"&gt;Imagemagick&lt;/a&gt; installed, which is
required for Paperclip. (You can install it using &lt;a href="https://brew.sh" rel="nofollow"&gt;Homebrew&lt;/a&gt; if
you're on a Mac.)&lt;/p&gt;
&lt;p&gt;To add solidus, begin with a Rails 5/6 application and a database configured and
created. Add the following to your Gemfile.&lt;/p&gt;
&lt;div class="highlight highlight-source-ruby"&gt;&lt;pre&gt;gem &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;solidus&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;
gem &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;solidus_auth_devise&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Run the &lt;code&gt;bundle&lt;/code&gt; command to install.&lt;/p&gt;
&lt;p&gt;After installing gems, you'll have to run the generators to create necessary
configuration files and migrations.&lt;/p&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt;bundle &lt;span class="pl-c1"&gt;exec&lt;/span&gt; rails g spree:install
bundle &lt;span class="pl-c1"&gt;exec&lt;/span&gt; rails g solidus:auth:install
bundle &lt;span class="pl-c1"&gt;exec&lt;/span&gt; rake railties:install:migrations&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Run migrations to create the new models in the database.&lt;/p&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt;bundle &lt;span class="pl-c1"&gt;exec&lt;/span&gt; rake db:migrate&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Finally start the rails server&lt;/p&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt;bundle &lt;span class="pl-c1"&gt;exec&lt;/span&gt; rails s&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;The &lt;a href="https://github.com/solidusio/solidus/tree/master/frontend"&gt;&lt;code&gt;solidus_frontend&lt;/code&gt;&lt;/a&gt; storefront will be accessible at &lt;a href="http://localhost:3000/" rel="nofollow"&gt;http://localhost:3000/&lt;/a&gt;
and the admin can be found at &lt;a href="http://localhost:3000/admin/" rel="nofollow"&gt;http://localhost:3000/admin/&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;For information on how to customize your store, check out the &lt;a href="https://guides.solidus.io/developers/customizations/overview.html" rel="nofollow"&gt;customization guides&lt;/a&gt;.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-default-usernamepassword" class="anchor" aria-hidden="true" href="#default-usernamepassword"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Default Username/Password&lt;/h3&gt;
&lt;p&gt;As part of running the above installation steps, you will be asked to set an admin email/password combination. The default values are &lt;code&gt;admin@example.com&lt;/code&gt; and &lt;code&gt;test123&lt;/code&gt;, respectively.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-questions" class="anchor" aria-hidden="true" href="#questions"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Questions?&lt;/h3&gt;
&lt;p&gt;The best way to ask questions is via the &lt;a href="https://solidusio.slack.com/messages/support/details/" rel="nofollow"&gt;#support channel on the Solidus Slack&lt;/a&gt;.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-installation-options" class="anchor" aria-hidden="true" href="#installation-options"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Installation options&lt;/h2&gt;
&lt;p&gt;Instead of a stable build, if you want to use the bleeding edge version of
Solidus, use this line:&lt;/p&gt;
&lt;div class="highlight highlight-source-ruby"&gt;&lt;pre&gt;gem &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;solidus&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-c1"&gt;github:&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;solidusio/solidus&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;strong&gt;Note: The master branch is not guaranteed to ever be in a fully functioning
state. It is too risky to use this branch in production.&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;By default, the installation generator (&lt;code&gt;rails g spree:install&lt;/code&gt;) will run
migrations as well as adding seed and sample data. This can be disabled using&lt;/p&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt;rails g spree:install --migrate=false --sample=false --seed=false&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;You can always perform any of these steps later by using these commands.&lt;/p&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt;bundle &lt;span class="pl-c1"&gt;exec&lt;/span&gt; rake railties:install:migrations
bundle &lt;span class="pl-c1"&gt;exec&lt;/span&gt; rake db:migrate
bundle &lt;span class="pl-c1"&gt;exec&lt;/span&gt; rake db:seed
bundle &lt;span class="pl-c1"&gt;exec&lt;/span&gt; rake spree_sample:load&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;There are also options and rake tasks provided by
&lt;a href="https://github.com/solidusio/solidus_auth_devise"&gt;solidus_auth_devise&lt;/a&gt;.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-performance" class="anchor" aria-hidden="true" href="#performance"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Performance&lt;/h2&gt;
&lt;p&gt;You may notice that your Solidus store runs slowly in development mode. This
can be because in development each CSS and JavaScript is loaded as a separate
include. This can be disabled by adding the following to
&lt;code&gt;config/environments/development.rb&lt;/code&gt;.&lt;/p&gt;
&lt;div class="highlight highlight-source-ruby"&gt;&lt;pre&gt;config.assets.debug &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;false&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h3&gt;&lt;a id="user-content-turbolinks" class="anchor" aria-hidden="true" href="#turbolinks"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Turbolinks&lt;/h3&gt;
&lt;p&gt;To gain some extra speed you may enable Turbolinks inside of Solidus admin.&lt;/p&gt;
&lt;p&gt;Add &lt;code&gt;gem 'turbolinks', '~&amp;gt; 5.0.0'&lt;/code&gt; into your &lt;code&gt;Gemfile&lt;/code&gt; (if not already present) and append these lines to &lt;code&gt;vendor/assets/spree/backend/all.js&lt;/code&gt;:&lt;/p&gt;
&lt;div class="highlight highlight-source-js"&gt;&lt;pre&gt;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt;= require turbolinks&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt;= require backend/app/assets/javascripts/spree/backend/turbolinks-integration.js&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;strong&gt;CAUTION&lt;/strong&gt; Please be aware that Turbolinks can break extensions and/or customizations to the Solidus admin.
Use at own risk.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-developing-solidus" class="anchor" aria-hidden="true" href="#developing-solidus"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Developing Solidus&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Clone the Git repo&lt;/p&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt;git clone git://github.com/solidusio/solidus.git
&lt;span class="pl-c1"&gt;cd&lt;/span&gt; solidus&lt;/pre&gt;&lt;/div&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Install the gem dependencies&lt;/p&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt;bundle install&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;em&gt;Note&lt;/em&gt;: If you're using PostgreSQL or MySQL, you'll need to install those gems through the DB environment variable.&lt;/p&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; PostgreSQL&lt;/span&gt;
DB=postgresql bundle install

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; MySQL&lt;/span&gt;
DB=mysql bundle install&lt;/pre&gt;&lt;/div&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;&lt;a id="user-content-sandbox" class="anchor" aria-hidden="true" href="#sandbox"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Sandbox&lt;/h3&gt;
&lt;p&gt;Solidus is meant to be run within the context of Rails application. You can
easily create a sandbox application inside of your cloned source directory for
testing purposes.&lt;/p&gt;
&lt;p&gt;This sandbox includes solidus_auth_devise and generates with seed and sample
data already loaded.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Create the sandbox application&lt;/p&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt;bundle &lt;span class="pl-c1"&gt;exec&lt;/span&gt; rake sandbox&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;You can create a sandbox with PostgreSQL or MySQL by setting the DB environment variable.&lt;/p&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; PostgreSQL&lt;/span&gt;
DB=postgresql bundle &lt;span class="pl-c1"&gt;exec&lt;/span&gt; rake sandbox

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; MySQL&lt;/span&gt;
DB=mysql bundle &lt;span class="pl-c1"&gt;exec&lt;/span&gt; rake sandbox&lt;/pre&gt;&lt;/div&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Start the server&lt;/p&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt;&lt;span class="pl-c1"&gt;cd&lt;/span&gt; sandbox
rails server&lt;/pre&gt;&lt;/div&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;&lt;a id="user-content-tests" class="anchor" aria-hidden="true" href="#tests"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Tests&lt;/h3&gt;
&lt;p&gt;Solidus uses &lt;a href="http://rspec.info" rel="nofollow"&gt;RSpec&lt;/a&gt; for tests. Refer to its documentation for
more information about the testing library.&lt;/p&gt;
&lt;h4&gt;&lt;a id="user-content-circleci" class="anchor" aria-hidden="true" href="#circleci"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;CircleCI&lt;/h4&gt;
&lt;p&gt;We use CircleCI to run the tests for Solidus as well as all incoming pull
requests. All pull requests must pass to be merged.&lt;/p&gt;
&lt;p&gt;You can see the build statuses at
&lt;a href="https://circleci.com/gh/solidusio/solidus" rel="nofollow"&gt;https://circleci.com/gh/solidusio/solidus&lt;/a&gt;.&lt;/p&gt;
&lt;h4&gt;&lt;a id="user-content-run-all-tests" class="anchor" aria-hidden="true" href="#run-all-tests"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Run all tests&lt;/h4&gt;
&lt;p&gt;&lt;a href="https://sites.google.com/a/chromium.org/chromedriver/home" rel="nofollow"&gt;ChromeDriver&lt;/a&gt; is
required to run the frontend and backend test suites.&lt;/p&gt;
&lt;p&gt;To execute all of the test specs, run the &lt;code&gt;bin/build&lt;/code&gt; script at the root of the Solidus project:&lt;/p&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt;createuser --superuser --echo postgres &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; only the first time&lt;/span&gt;
bin/build&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;The &lt;code&gt;bin/build&lt;/code&gt; script runs using PostgreSQL by default, but it can be overridden by setting the DB environment variable to &lt;code&gt;DB=sqlite&lt;/code&gt; or &lt;code&gt;DB=mysql&lt;/code&gt;. For example:&lt;/p&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt;env DB=mysql bin/build&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;If the command fails with MySQL related errors you can try creating a user with this command:&lt;/p&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; Creates a user with the same name as the current user and no restrictions.&lt;/span&gt;
mysql --user=&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;root&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; --execute=&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;CREATE USER '&lt;span class="pl-smi"&gt;$USER&lt;/span&gt;'@'localhost'; GRANT ALL PRIVILEGES ON * . * TO '&lt;span class="pl-smi"&gt;$USER&lt;/span&gt;'@'localhost';&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h4&gt;&lt;a id="user-content-run-an-individual-test-suite" class="anchor" aria-hidden="true" href="#run-an-individual-test-suite"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Run an individual test suite&lt;/h4&gt;
&lt;p&gt;Each gem contains its own series of tests. To run the tests for the core project:&lt;/p&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt;&lt;span class="pl-c1"&gt;cd&lt;/span&gt; core
bundle &lt;span class="pl-c1"&gt;exec&lt;/span&gt; rspec&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;By default, &lt;code&gt;rspec&lt;/code&gt; runs the tests for SQLite 3. If you would like to run specs
against another database you may specify the database in the command:&lt;/p&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt;env DB=postgresql bundle &lt;span class="pl-c1"&gt;exec&lt;/span&gt; rspec&lt;/pre&gt;&lt;/div&gt;
&lt;h4&gt;&lt;a id="user-content-code-coverage-reports" class="anchor" aria-hidden="true" href="#code-coverage-reports"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Code coverage reports&lt;/h4&gt;
&lt;p&gt;If you want to run the &lt;a href="https://github.com/colszowka/simplecov"&gt;SimpleCov&lt;/a&gt; code
coverage report:&lt;/p&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt;COVERAGE=true bundle &lt;span class="pl-c1"&gt;exec&lt;/span&gt; rspec&lt;/pre&gt;&lt;/div&gt;
&lt;h3&gt;&lt;a id="user-content-extensions" class="anchor" aria-hidden="true" href="#extensions"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Extensions&lt;/h3&gt;
&lt;p&gt;In addition to core functionality provided in Solidus, there are a number of
ways to add features to your store that are not (or not yet) part of the core
project.&lt;/p&gt;
&lt;p&gt;A list can be found at &lt;a href="http://extensions.solidus.io/" rel="nofollow"&gt;extensions.solidus.io&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;If you want to write an extension for Solidus, you can use the
&lt;a href="https://www.github.com/solidusio/solidus_cmd.git"&gt;solidus_cmd&lt;/a&gt; gem.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-contributing" class="anchor" aria-hidden="true" href="#contributing"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Contributing&lt;/h2&gt;
&lt;p&gt;Solidus is an open source project and we encourage contributions. Please read
&lt;a href="CONTRIBUTING.md"&gt;CONTRIBUTING.md&lt;/a&gt; before contributing.&lt;/p&gt;
&lt;/article&gt;&lt;/div&gt;</description><author>solidusio</author><guid isPermaLink="false">https://github.com/solidusio/solidus</guid><pubDate>Fri, 01 Nov 2019 00:00:00 GMT</pubDate></item><item><title>Homebrew/homebrew-cask #23 in Ruby, This week</title><link>https://github.com/Homebrew/homebrew-cask</link><description>&lt;p&gt;&lt;i&gt;🍻 A CLI workflow for the administration of macOS applications distributed as binaries&lt;/i&gt;&lt;/p&gt;&lt;div id="readme" class="instapaper_body md" data-path="README.md"&gt;&lt;article class="markdown-body entry-content p-5" itemprop="text"&gt;&lt;h1&gt;&lt;a id="user-content-homebrew-cask" class="anchor" aria-hidden="true" href="#homebrew-cask"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Homebrew Cask&lt;/h1&gt;
&lt;p&gt;&lt;em&gt;“To install, drag this icon…” no more!&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;Homebrew Cask extends &lt;a href="https://brew.sh" rel="nofollow"&gt;Homebrew&lt;/a&gt; and brings its elegance, simplicity, and speed to the installation and management of GUI macOS applications such as Atom and Google Chrome.&lt;/p&gt;
&lt;p&gt;We do this by providing a friendly CLI workflow for the administration of macOS applications distributed as binaries.&lt;/p&gt;
&lt;p&gt;&lt;a href="https://discourse.brew.sh" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/56c3b2facb044b171d13b06b121c37ecff1a65ed/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f446973636f757273652d666f72756d2d626c75652e737667" alt="Join us on https://discourse.brew.sh" data-canonical-src="https://img.shields.io/badge/Discourse-forum-blue.svg" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-lets-try-it" class="anchor" aria-hidden="true" href="#lets-try-it"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Let’s try it!&lt;/h2&gt;
&lt;p&gt;To start using Homebrew Cask, you just need &lt;a href="https://brew.sh/" rel="nofollow"&gt;Homebrew&lt;/a&gt; installed.&lt;/p&gt;
&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="https://camo.githubusercontent.com/e0232f054269f4da8df572c3dea4f08def189df3/68747470733a2f2f692e696d6775722e636f6d2f626a723855785a2e676966"&gt;&lt;img src="https://camo.githubusercontent.com/e0232f054269f4da8df572c3dea4f08def189df3/68747470733a2f2f692e696d6775722e636f6d2f626a723855785a2e676966" width="547" alt="Installing and uninstalling Atom (animated gif)" data-canonical-src="https://i.imgur.com/bjr8UxZ.gif" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Slower, now:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;$ brew cask install atom
==&amp;gt; Satisfying dependencies
==&amp;gt; Downloading https://github.com/atom/atom/releases/download/v1.35.1/atom-mac.zip
==&amp;gt; Downloading from https://github-production-release-asset-2e65be.s3.amazonaws.co
######################################################################## 100.0%
==&amp;gt; Verifying SHA-256 checksum for Cask 'atom'.
==&amp;gt; Installing Cask atom
==&amp;gt; Moving App 'Atom.app' to '/Applications/Atom.app'.
==&amp;gt; Linking Binary 'apm' to '/usr/local/bin/apm'.
==&amp;gt; Linking Binary 'atom.sh' to '/usr/local/bin/atom'.
🍺  atom was successfully installed!
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;And there we have it. Atom installed with one quick command: no clicking, no dragging, no dropping.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-learn-more" class="anchor" aria-hidden="true" href="#learn-more"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Learn More&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Find basic documentation on using Homebrew Cask in &lt;a href="USAGE.md"&gt;USAGE.md&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Want to contribute a Cask? Awesome! See &lt;a href="CONTRIBUTING.md"&gt;CONTRIBUTING.md&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Want to hack on our code? Also awesome! See &lt;a href="doc/development/hacking.md"&gt;hacking.md&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;More project-related details and discussion are available in the &lt;a href="doc"&gt;documentation&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-reporting-bugs" class="anchor" aria-hidden="true" href="#reporting-bugs"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Reporting bugs&lt;/h2&gt;
&lt;p&gt;&lt;a href="doc/faq/closing_issues_without_review.md"&gt;&lt;strong&gt;If you ignore this guide, your issue may be closed without review&lt;/strong&gt;&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Before reporting a bug, run &lt;code&gt;brew update-reset &amp;amp;&amp;amp; brew update&lt;/code&gt; and try your command again. This is a fix-all that will reset the state of all your taps, ensuring the problem isn’t an outdated setup on your side.&lt;/p&gt;
&lt;p&gt;If your issue persists, &lt;a href="https://github.com/Homebrew/homebrew-cask/search?type=Issues"&gt;search for it&lt;/a&gt; before opening a new one. If you find an open issue and have any new information, add it in a comment. If you find a closed issue, try the solutions there.&lt;/p&gt;
&lt;p&gt;If the issue is still not solved, see the guides for common problems:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="doc/reporting_bugs/error_examples.md"&gt;Examples of common errors and their solutions&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="doc/reporting_bugs/curl_error.md"&gt;&lt;code&gt;curl&lt;/code&gt; error&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="doc/reporting_bugs/permission_denied_error.md"&gt;&lt;code&gt;Permission denied&lt;/code&gt; error&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="doc/reporting_bugs/checksum_does_not_match_error.md"&gt;&lt;code&gt;Checksum does not match&lt;/code&gt; error&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="doc/reporting_bugs/source_is_not_there_error.md"&gt;&lt;code&gt;source is not there&lt;/code&gt; error&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="doc/reporting_bugs/wrong_number_of_arguments_error.md"&gt;&lt;code&gt;wrong number of arguments&lt;/code&gt; error&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="doc/faq/the_app_cant_be_opened.md"&gt;The app can’t be opened because it is from an unidentified developer&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/Homebrew/homebrew-cask/issues/new?template=01_bug_report.md"&gt;My problem isn’t listed&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-requests" class="anchor" aria-hidden="true" href="#requests"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Requests&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Cask requests will be automatically closed. If you want a cask added, &lt;a href="https://github.com/Homebrew/homebrew-cask/blob/master/CONTRIBUTING.md#adding-a-cask"&gt;submit a pull request&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;For a feature request, &lt;a href="https://github.com/Homebrew/homebrew-cask/issues/new?template=02_feature_request.md"&gt;use this template&lt;/a&gt;.&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-questions-wanna-chat" class="anchor" aria-hidden="true" href="#questions-wanna-chat"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Questions? Wanna chat?&lt;/h2&gt;
&lt;p&gt;We’re really rather friendly! Here are the best places to talk about the project:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;If none of the templates above is appropriate, &lt;a href="https://github.com/Homebrew/homebrew-cask/issues/new"&gt;open an issue&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;Join us on &lt;a href="https://discourse.brew.sh" rel="nofollow"&gt;discourse.brew.sh (forum)&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-license" class="anchor" aria-hidden="true" href="#license"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;License&lt;/h2&gt;
&lt;p&gt;Code is under the &lt;a href="LICENSE"&gt;BSD 2 Clause (NetBSD) license&lt;/a&gt;&lt;/p&gt;
&lt;/article&gt;&lt;/div&gt;</description><author>Homebrew</author><guid isPermaLink="false">https://github.com/Homebrew/homebrew-cask</guid><pubDate>Fri, 01 Nov 2019 00:00:00 GMT</pubDate></item><item><title>discourse/discourse #24 in Ruby, This week</title><link>https://github.com/discourse/discourse</link><description>&lt;p&gt;&lt;i&gt;A platform for community discussion. Free, open, simple.&lt;/i&gt;&lt;/p&gt;&lt;div id="readme" class="instapaper_body md" data-path="README.md"&gt;&lt;article class="markdown-body entry-content p-5" itemprop="text"&gt;&lt;p&gt;&lt;a href="https://www.discourse.org/" rel="nofollow"&gt;&lt;img src="https://user-images.githubusercontent.com/1681963/52239617-e2683480-289c-11e9-922b-5da55472e5b4.png" width="300px" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Discourse is the 100% open source discussion platform built for the next decade of the Internet. Use it as a:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;mailing list&lt;/li&gt;
&lt;li&gt;discussion forum&lt;/li&gt;
&lt;li&gt;long-form chat room&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;To learn more about the philosophy and goals of the project, &lt;a href="https://www.discourse.org" rel="nofollow"&gt;visit &lt;strong&gt;discourse.org&lt;/strong&gt;&lt;/a&gt;.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-screenshots" class="anchor" aria-hidden="true" href="#screenshots"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Screenshots&lt;/h2&gt;
&lt;p&gt;&lt;a href="https://bbs.boingboing.net" rel="nofollow"&gt;&lt;img alt="Boing Boing" src="https://user-images.githubusercontent.com/1681963/52239245-04ad8280-289c-11e9-9c88-8c173d4a0422.png" width="720px" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://twittercommunity.com/" rel="nofollow"&gt;&lt;img src="https://user-images.githubusercontent.com/1681963/52239250-04ad8280-289c-11e9-9e42-574f6eaab9d7.png" width="720px" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://discuss.howtogeek.com" rel="nofollow"&gt;&lt;img src="https://user-images.githubusercontent.com/1681963/52239247-04ad8280-289c-11e9-9706-fd66bc0749dc.png" width="720px" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://talk.turtlerockstudios.com/" rel="nofollow"&gt;&lt;img src="https://user-images.githubusercontent.com/1681963/52239249-04ad8280-289c-11e9-9155-f0ccc5decc50.png" width="720px" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="https://user-images.githubusercontent.com/1681963/52239118-b304f800-289b-11e9-9904-16450680d9ec.jpg"&gt;&lt;img src="https://user-images.githubusercontent.com/1681963/52239118-b304f800-289b-11e9-9904-16450680d9ec.jpg" alt="Mobile" width="414" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Browse &lt;a href="https://www.discourse.org/customers" rel="nofollow"&gt;lots more notable Discourse instances&lt;/a&gt;.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-development" class="anchor" aria-hidden="true" href="#development"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Development&lt;/h2&gt;
&lt;p&gt;To get your environment setup, follow the community setup guide for your operating system.&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;If you're on macOS, try the &lt;a href="https://meta.discourse.org/t/beginners-guide-to-install-discourse-on-macos-for-development/15772" rel="nofollow"&gt;macOS development guide&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;If you're on Ubuntu, try the &lt;a href="https://meta.discourse.org/t/beginners-guide-to-install-discourse-on-ubuntu-for-development/14727" rel="nofollow"&gt;Ubuntu development guide&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;If you're on Windows, try the &lt;a href="https://meta.discourse.org/t/beginners-guide-to-install-discourse-on-windows-10-for-development/75149" rel="nofollow"&gt;Windows 10 development guide&lt;/a&gt;.&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;If you're familiar with how Rails works and are comfortable setting up your own environment, you can also try out the &lt;a href="docs/DEVELOPER-ADVANCED.md"&gt;&lt;strong&gt;Discourse Advanced Developer Guide&lt;/strong&gt;&lt;/a&gt;, which is aimed primarily at Ubuntu and macOS environments.&lt;/p&gt;
&lt;p&gt;Before you get started, ensure you have the following minimum versions: &lt;a href="https://www.ruby-lang.org/en/downloads/" rel="nofollow"&gt;Ruby 2.5+&lt;/a&gt;, &lt;a href="https://www.postgresql.org/download/" rel="nofollow"&gt;PostgreSQL 10+&lt;/a&gt;, &lt;a href="https://redis.io/download" rel="nofollow"&gt;Redis 2.6+&lt;/a&gt;. If you're having trouble, please see our &lt;a href="docs/TROUBLESHOOTING.md"&gt;&lt;strong&gt;TROUBLESHOOTING GUIDE&lt;/strong&gt;&lt;/a&gt; first!&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-setting-up-discourse" class="anchor" aria-hidden="true" href="#setting-up-discourse"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Setting up Discourse&lt;/h2&gt;
&lt;p&gt;If you want to set up a Discourse forum for production use, see our &lt;a href="docs/INSTALL.md"&gt;&lt;strong&gt;Discourse Install Guide&lt;/strong&gt;&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;If you're looking for business class hosting, see &lt;a href="https://www.discourse.org/buy/" rel="nofollow"&gt;discourse.org/buy&lt;/a&gt;.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-requirements" class="anchor" aria-hidden="true" href="#requirements"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Requirements&lt;/h2&gt;
&lt;p&gt;Discourse is built for the &lt;em&gt;next&lt;/em&gt; 10 years of the Internet, so our requirements are high:&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Browsers&lt;/th&gt;
&lt;th&gt;Tablets&lt;/th&gt;
&lt;th&gt;Phones&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;Safari 10+&lt;/td&gt;
&lt;td&gt;iPad 4+&lt;/td&gt;
&lt;td&gt;iOS 10+&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Google Chrome 57+&lt;/td&gt;
&lt;td&gt;Android 4.4+&lt;/td&gt;
&lt;td&gt;Android 4.4+&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Internet Explorer 11+&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Firefox 52+&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h2&gt;&lt;a id="user-content-built-with" class="anchor" aria-hidden="true" href="#built-with"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Built With&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/rails/rails"&gt;Ruby on Rails&lt;/a&gt; — Our back end API is a Rails app. It responds to requests RESTfully in JSON.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/emberjs/ember.js"&gt;Ember.js&lt;/a&gt; — Our front end is an Ember.js app that communicates with the Rails API.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.postgresql.org/" rel="nofollow"&gt;PostgreSQL&lt;/a&gt; — Our main data store is in Postgres.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://redis.io/" rel="nofollow"&gt;Redis&lt;/a&gt; — We use Redis as a cache and for transient data.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Plus &lt;em&gt;lots&lt;/em&gt; of Ruby Gems, a complete list of which is at &lt;a href="https://github.com/discourse/discourse/blob/master/Gemfile"&gt;/master/Gemfile&lt;/a&gt;.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-contributing" class="anchor" aria-hidden="true" href="#contributing"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Contributing&lt;/h2&gt;
&lt;p&gt;&lt;a href="https://travis-ci.org/discourse/discourse" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/4147ebf5cecef41dc085af01a2783a88b630da07/68747470733a2f2f6170692e7472617669732d63692e6f72672f646973636f757273652f646973636f757273652e7376673f6272616e63683d6d6173746572" alt="Build Status" data-canonical-src="https://api.travis-ci.org/discourse/discourse.svg?branch=master" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Discourse is &lt;strong&gt;100% free&lt;/strong&gt; and &lt;strong&gt;open source&lt;/strong&gt;. We encourage and support an active, healthy community that
accepts contributions from the public – including you!&lt;/p&gt;
&lt;p&gt;Before contributing to Discourse:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Please read the complete mission statements on &lt;a href="https://www.discourse.org" rel="nofollow"&gt;&lt;strong&gt;discourse.org&lt;/strong&gt;&lt;/a&gt;. Yes we actually believe this stuff; you should too.&lt;/li&gt;
&lt;li&gt;Read and sign the &lt;a href="https://www.discourse.org/cla" rel="nofollow"&gt;&lt;strong&gt;Electronic Discourse Forums Contribution License Agreement&lt;/strong&gt;&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;Dig into &lt;a href="CONTRIBUTING.md"&gt;&lt;strong&gt;CONTRIBUTING.MD&lt;/strong&gt;&lt;/a&gt;, which covers submitting bugs, requesting new features, preparing your code for a pull request, etc.&lt;/li&gt;
&lt;li&gt;Always strive to collaborate &lt;a href="https://github.com/discourse/discourse/blob/master/docs/code-of-conduct.md"&gt;with mutual respect&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;Not sure what to work on? &lt;a href="https://meta.discourse.org/t/so-you-want-to-help-out-with-discourse/3823" rel="nofollow"&gt;&lt;strong&gt;We've got some ideas.&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;We look forward to seeing your pull requests!&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-security" class="anchor" aria-hidden="true" href="#security"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Security&lt;/h2&gt;
&lt;p&gt;We take security very seriously at Discourse; all our code is 100% open source and peer reviewed. Please read &lt;a href="https://github.com/discourse/discourse/blob/master/docs/SECURITY.md"&gt;our security guide&lt;/a&gt; for an overview of security measures in Discourse, or if you wish to report a security issue.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-the-discourse-team" class="anchor" aria-hidden="true" href="#the-discourse-team"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;The Discourse Team&lt;/h2&gt;
&lt;p&gt;The original Discourse code contributors can be found in &lt;a href="docs/AUTHORS.md"&gt;&lt;strong&gt;AUTHORS.MD&lt;/strong&gt;&lt;/a&gt;. For a complete list of the many individuals that contributed to the design and implementation of Discourse, please refer to &lt;a href="https://blog.discourse.org/2013/02/the-discourse-team/" rel="nofollow"&gt;the official Discourse blog&lt;/a&gt; and &lt;a href="https://github.com/discourse/discourse/contributors"&gt;GitHub's list of contributors&lt;/a&gt;.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-copyright--license" class="anchor" aria-hidden="true" href="#copyright--license"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Copyright / License&lt;/h2&gt;
&lt;p&gt;Copyright 2014 - 2019 Civilized Discourse Construction Kit, Inc.&lt;/p&gt;
&lt;p&gt;Licensed under the GNU General Public License Version 2.0 (or later);
you may not use this work except in compliance with the License.
You may obtain a copy of the License in the LICENSE file, or at:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://www.gnu.org/licenses/old-licenses/gpl-2.0.txt" rel="nofollow"&gt;https://www.gnu.org/licenses/old-licenses/gpl-2.0.txt&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.&lt;/p&gt;
&lt;p&gt;Discourse logo and “Discourse Forum” ®, Civilized Discourse Construction Kit, Inc.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-dedication" class="anchor" aria-hidden="true" href="#dedication"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Dedication&lt;/h2&gt;
&lt;p&gt;Discourse is built with &lt;a href="https://www.youtube.com/watch?v=Xe1TZaElTAs" rel="nofollow"&gt;love, Internet style.&lt;/a&gt;&lt;/p&gt;
&lt;/article&gt;&lt;/div&gt;</description><author>discourse</author><guid isPermaLink="false">https://github.com/discourse/discourse</guid><pubDate>Fri, 01 Nov 2019 00:00:00 GMT</pubDate></item><item><title>puma/puma #25 in Ruby, This week</title><link>https://github.com/puma/puma</link><description>&lt;p&gt;&lt;i&gt;A Ruby/Rack web server built for concurrency&lt;/i&gt;&lt;/p&gt;&lt;div id="readme" class="instapaper_body md" data-path="README.md"&gt;&lt;article class="markdown-body entry-content p-5" itemprop="text"&gt;&lt;p align="center"&gt;
  &lt;a target="_blank" rel="noopener noreferrer" href="https://camo.githubusercontent.com/bc94b04f918825fa84251684ee121408da04bb85/68747470733a2f2f70756d612e696f2f696d616765732f6c6f676f732f70756d612d6c6f676f2d6c617267652e706e67"&gt;&lt;img src="https://camo.githubusercontent.com/bc94b04f918825fa84251684ee121408da04bb85/68747470733a2f2f70756d612e696f2f696d616765732f6c6f676f732f70756d612d6c6f676f2d6c617267652e706e67" data-canonical-src="https://puma.io/images/logos/puma-logo-large.png" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;/p&gt;
&lt;h1&gt;&lt;a id="user-content-puma-a-ruby-web-server-built-for-concurrency" class="anchor" aria-hidden="true" href="#puma-a-ruby-web-server-built-for-concurrency"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Puma: A Ruby Web Server Built For Concurrency&lt;/h1&gt;
&lt;p&gt;&lt;a href="https://gitter.im/puma/puma?utm_source=badge&amp;amp;utm_medium=badge&amp;amp;utm_campaign=pr-badge" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/da2edb525cde1455a622c58c0effc3a90b9a181c/68747470733a2f2f6261646765732e6769747465722e696d2f4a6f696e253230436861742e737667" alt="Gitter" data-canonical-src="https://badges.gitter.im/Join%20Chat.svg" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://github.com/puma/puma/actions"&gt;&lt;img src="https://github.com/puma/puma/workflows/Puma/badge.svg" alt="Actions Build Status" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://travis-ci.org/puma/puma" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/b3c6349d5ccbd3ef7cbbf284ef17547e1b6d1312/68747470733a2f2f7472617669732d63692e6f72672f70756d612f70756d612e7376673f6272616e63683d6d6173746572" alt="Travis Build Status" data-canonical-src="https://travis-ci.org/puma/puma.svg?branch=master" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href="https://codeclimate.com/github/puma/puma" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/1dbd721ff9142a7c6f17350c813b6d691acc0964/68747470733a2f2f636f6465636c696d6174652e636f6d2f6769746875622f70756d612f70756d612e737667" alt="Code Climate" data-canonical-src="https://codeclimate.com/github/puma/puma.svg" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://dependabot.com/compatibility-score.html?dependency-name=puma&amp;amp;package-manager=bundler&amp;amp;version-scheme=semver" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/fe1ccce9d1cdb3a06997b35e3cc5673490c1cbd9/68747470733a2f2f6170692e646570656e6461626f742e636f6d2f6261646765732f636f6d7061746962696c6974795f73636f72653f646570656e64656e63792d6e616d653d70756d61267061636b6167652d6d616e616765723d62756e646c65722676657273696f6e2d736368656d653d73656d766572" alt="SemVer" data-canonical-src="https://api.dependabot.com/badges/compatibility_score?dependency-name=puma&amp;amp;package-manager=bundler&amp;amp;version-scheme=semver" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Puma is a &lt;strong&gt;simple, fast, multi-threaded, and highly concurrent HTTP 1.1 server for Ruby/Rack applications&lt;/strong&gt;.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-built-for-speed--concurrency" class="anchor" aria-hidden="true" href="#built-for-speed--concurrency"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Built For Speed &amp;amp; Concurrency&lt;/h2&gt;
&lt;p&gt;Puma processes requests using a C-optimized Ragel extension (inherited from Mongrel) that provides fast, accurate HTTP 1.1 protocol parsing in a portable way. Puma then serves the request using a thread pool. Each request is served in a separate thread, so truly concurrent Ruby implementations (JRuby, Rubinius) will use all available CPU cores.&lt;/p&gt;
&lt;p&gt;Puma was designed to be the go-to server for &lt;a href="https://rubinius.com" rel="nofollow"&gt;Rubinius&lt;/a&gt;, but also works well with JRuby and MRI.&lt;/p&gt;
&lt;p&gt;On MRI, there is a Global VM Lock (GVL) that ensures only one thread can run Ruby code at a time. But if you're doing a lot of blocking IO (such as HTTP calls to external APIs like Twitter), Puma still improves MRI's throughput by allowing IO waiting to be done in parallel.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-quick-start" class="anchor" aria-hidden="true" href="#quick-start"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Quick Start&lt;/h2&gt;
&lt;pre&gt;&lt;code&gt;$ gem install puma
$ puma
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Without arguments, puma will look for a rackup (.ru) file in the current working directory called &lt;code&gt;config.ru&lt;/code&gt;.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-frameworks" class="anchor" aria-hidden="true" href="#frameworks"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Frameworks&lt;/h2&gt;
&lt;h3&gt;&lt;a id="user-content-rails" class="anchor" aria-hidden="true" href="#rails"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Rails&lt;/h3&gt;
&lt;p&gt;Puma is the default server for Rails, included in the generated Gemfile.&lt;/p&gt;
&lt;p&gt;Start your server with the &lt;code&gt;rails&lt;/code&gt; command:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;$ rails server
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Many configuration options and Puma features are not available when using &lt;code&gt;rails server&lt;/code&gt;. It is recommended that you use Puma's executable instead:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;$ bundle exec puma
&lt;/code&gt;&lt;/pre&gt;
&lt;h3&gt;&lt;a id="user-content-sinatra" class="anchor" aria-hidden="true" href="#sinatra"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Sinatra&lt;/h3&gt;
&lt;p&gt;You can run your Sinatra application with Puma from the command line like this:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;$ ruby app.rb -s Puma
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Or you can configure your Sinatra application to always use Puma:&lt;/p&gt;
&lt;div class="highlight highlight-source-ruby"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;require&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;sinatra&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;
configure { set &lt;span class="pl-c1"&gt;:server&lt;/span&gt;, &lt;span class="pl-c1"&gt;:puma&lt;/span&gt; }&lt;/pre&gt;&lt;/div&gt;
&lt;h2&gt;&lt;a id="user-content-configuration" class="anchor" aria-hidden="true" href="#configuration"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Configuration&lt;/h2&gt;
&lt;p&gt;Puma provides numerous options. Consult &lt;code&gt;puma -h&lt;/code&gt; (or &lt;code&gt;puma --help&lt;/code&gt;) for a full list of CLI options, or see &lt;a href="https://github.com/puma/puma/blob/master/lib/puma/dsl.rb"&gt;dsl.rb&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;You can also find several configuration examples as part of the
&lt;a href="test/config"&gt;test&lt;/a&gt; suite.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-thread-pool" class="anchor" aria-hidden="true" href="#thread-pool"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Thread Pool&lt;/h3&gt;
&lt;p&gt;Puma uses a thread pool. You can set the minimum and maximum number of threads that are available in the pool with the &lt;code&gt;-t&lt;/code&gt; (or &lt;code&gt;--threads&lt;/code&gt;) flag:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;$ puma -t 8:32
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Puma will automatically scale the number of threads, from the minimum until it caps out at the maximum, based on how much traffic is present. The current default is &lt;code&gt;0:16&lt;/code&gt;. Feel free to experiment, but be careful not to set the number of maximum threads to a large number, as you may exhaust resources on the system (or cause contention for the Global VM Lock, when using MRI).&lt;/p&gt;
&lt;p&gt;Be aware that additionally Puma creates threads on its own for internal purposes (e.g. handling slow clients). So, even if you specify -t 1:1, expect around 7 threads created in your application.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-clustered-mode" class="anchor" aria-hidden="true" href="#clustered-mode"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Clustered mode&lt;/h3&gt;
&lt;p&gt;Puma also offers "clustered mode". Clustered mode &lt;code&gt;fork&lt;/code&gt;s workers from a master process. Each child process still has its own thread pool. You can tune the number of workers with the &lt;code&gt;-w&lt;/code&gt; (or &lt;code&gt;--workers&lt;/code&gt;) flag:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;$ puma -t 8:32 -w 3
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Note that threads are still used in clustered mode, and the &lt;code&gt;-t&lt;/code&gt; thread flag setting is per worker, so &lt;code&gt;-w 2 -t 16:16&lt;/code&gt; will spawn 32 threads in total, with 16 in each worker process.&lt;/p&gt;
&lt;p&gt;In clustered mode, Puma can "preload" your application. This loads all the application code &lt;em&gt;prior&lt;/em&gt; to forking. Preloading reduces total memory usage of your application via an operating system feature called &lt;a href="https://en.wikipedia.org/wiki/Copy-on-write" rel="nofollow"&gt;copy-on-write&lt;/a&gt; (Ruby 2.0+ only). Use the &lt;code&gt;--preload&lt;/code&gt; flag from the command line:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;$ puma -w 3 --preload
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;If you're using a configuration file, use the &lt;code&gt;preload_app!&lt;/code&gt; method:&lt;/p&gt;
&lt;div class="highlight highlight-source-ruby"&gt;&lt;pre&gt;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; config/puma.rb&lt;/span&gt;
workers &lt;span class="pl-c1"&gt;3&lt;/span&gt;
preload_app!&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Additionally, you can specify a block in your configuration file that will be run on boot of each worker:&lt;/p&gt;
&lt;div class="highlight highlight-source-ruby"&gt;&lt;pre&gt;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; config/puma.rb&lt;/span&gt;
on_worker_boot &lt;span class="pl-k"&gt;do&lt;/span&gt;
  &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; configuration here&lt;/span&gt;
&lt;span class="pl-k"&gt;end&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;This code can be used to setup the process before booting the application, allowing
you to do some Puma-specific things that you don't want to embed in your application.
For instance, you could fire a log notification that a worker booted or send something to statsd. This can be called multiple times.&lt;/p&gt;
&lt;p&gt;&lt;code&gt;before_fork&lt;/code&gt; specifies a block to be run before workers are forked:&lt;/p&gt;
&lt;div class="highlight highlight-source-ruby"&gt;&lt;pre&gt;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; config/puma.rb&lt;/span&gt;
before_fork &lt;span class="pl-k"&gt;do&lt;/span&gt;
  &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; configuration here&lt;/span&gt;
&lt;span class="pl-k"&gt;end&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Preloading can’t be used with phased restart, since phased restart kills and restarts workers one-by-one, and preload_app copies the code of master into the workers.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-error-handling" class="anchor" aria-hidden="true" href="#error-handling"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Error handling&lt;/h3&gt;
&lt;p&gt;If puma encounters an error outside of the context of your application, it will respond with a 500 and a simple
textual error message (see &lt;code&gt;lowlevel_error&lt;/code&gt; in &lt;a href="https://github.com/puma/puma/blob/master/lib/puma/server.rb"&gt;this file&lt;/a&gt;).
You can specify custom behavior for this scenario. For example, you can report the error to your third-party
error-tracking service (in this example, &lt;a href="http://rollbar.com" rel="nofollow"&gt;rollbar&lt;/a&gt;):&lt;/p&gt;
&lt;div class="highlight highlight-source-ruby"&gt;&lt;pre&gt;lowlevel_error_handler &lt;span class="pl-k"&gt;do&lt;/span&gt; |&lt;span class="pl-smi"&gt;e&lt;/span&gt;|
  &lt;span class="pl-c1"&gt;Rollbar&lt;/span&gt;.critical(e)
  [&lt;span class="pl-c1"&gt;500&lt;/span&gt;, {}, [&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;An error has occurred, and engineers have been informed. Please reload the page. If you continue to have problems, contact support@example.com&lt;span class="pl-cce"&gt;\n&lt;/span&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;]]
&lt;span class="pl-k"&gt;end&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h3&gt;&lt;a id="user-content-binding-tcp--sockets" class="anchor" aria-hidden="true" href="#binding-tcp--sockets"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Binding TCP / Sockets&lt;/h3&gt;
&lt;p&gt;Bind Puma to a socket with the &lt;code&gt;-b&lt;/code&gt; (or &lt;code&gt;--bind&lt;/code&gt;) flag:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;$ puma -b tcp://127.0.0.1:9292
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;To use a UNIX Socket instead of TCP:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;$ puma -b unix:///var/run/puma.sock
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;If you need to change the permissions of the UNIX socket, just add a umask parameter:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;$ puma -b 'unix:///var/run/puma.sock?umask=0111'
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Need a bit of security? Use SSL sockets:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;$ puma -b 'ssl://127.0.0.1:9292?key=path_to_key&amp;amp;cert=path_to_cert'
&lt;/code&gt;&lt;/pre&gt;
&lt;h4&gt;&lt;a id="user-content-controlling-ssl-cipher-suites" class="anchor" aria-hidden="true" href="#controlling-ssl-cipher-suites"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Controlling SSL Cipher Suites&lt;/h4&gt;
&lt;p&gt;To use or avoid specific SSL cipher suites, use &lt;code&gt;ssl_cipher_filter&lt;/code&gt; or &lt;code&gt;ssl_cipher_list&lt;/code&gt; options.&lt;/p&gt;
&lt;h5&gt;&lt;a id="user-content-ruby" class="anchor" aria-hidden="true" href="#ruby"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Ruby:&lt;/h5&gt;
&lt;pre&gt;&lt;code&gt;$ puma -b 'ssl://127.0.0.1:9292?key=path_to_key&amp;amp;cert=path_to_cert&amp;amp;ssl_cipher_filter=!aNULL:AES+SHA'
&lt;/code&gt;&lt;/pre&gt;
&lt;h5&gt;&lt;a id="user-content-jruby" class="anchor" aria-hidden="true" href="#jruby"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;JRuby:&lt;/h5&gt;
&lt;pre&gt;&lt;code&gt;$ puma -b 'ssl://127.0.0.1:9292?keystore=path_to_keystore&amp;amp;keystore-pass=keystore_password&amp;amp;ssl_cipher_list=TLS_RSA_WITH_AES_128_CBC_SHA,TLS_RSA_WITH_AES_256_CBC_SHA'
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;See &lt;a href="https://www.openssl.org/docs/man1.0.2/apps/ciphers.html" rel="nofollow"&gt;https://www.openssl.org/docs/man1.0.2/apps/ciphers.html&lt;/a&gt; for cipher filter format and full list of cipher suites.&lt;/p&gt;
&lt;p&gt;Disable TLS v1 with the &lt;code&gt;no_tlsv1&lt;/code&gt; option:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;$ puma -b 'ssl://127.0.0.1:9292?key=path_to_key&amp;amp;cert=path_to_cert&amp;amp;no_tlsv1=true'
&lt;/code&gt;&lt;/pre&gt;
&lt;h3&gt;&lt;a id="user-content-controlstatus-server" class="anchor" aria-hidden="true" href="#controlstatus-server"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Control/Status Server&lt;/h3&gt;
&lt;p&gt;Puma has a built-in status and control app that can be used to query and control Puma.&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;$ puma --control-url tcp://127.0.0.1:9293 --control-token foo
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Puma will start the control server on localhost port 9293. All requests to the control server will need to include control token (in this case, &lt;code&gt;token=foo&lt;/code&gt;) as a query parameter. This allows for simple authentication. Check out &lt;a href="https://github.com/puma/puma/blob/master/lib/puma/app/status.rb"&gt;status.rb&lt;/a&gt; to see what the status app has available.&lt;/p&gt;
&lt;p&gt;You can also interact with the control server via &lt;code&gt;pumactl&lt;/code&gt;. This command will restart Puma:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;$ pumactl --control-url 'tcp://127.0.0.1:9293' --control-token foo restart
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;To see a list of &lt;code&gt;pumactl&lt;/code&gt; options, use &lt;code&gt;pumactl --help&lt;/code&gt;.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-configuration-file" class="anchor" aria-hidden="true" href="#configuration-file"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Configuration File&lt;/h3&gt;
&lt;p&gt;You can also provide a configuration file with the &lt;code&gt;-C&lt;/code&gt; (or &lt;code&gt;--config&lt;/code&gt;) flag:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;$ puma -C /path/to/config
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;If no configuration file is specified, Puma will look for a configuration file at &lt;code&gt;config/puma.rb&lt;/code&gt;. If an environment is specified, either via the &lt;code&gt;-e&lt;/code&gt; and &lt;code&gt;--environment&lt;/code&gt; flags, or through the &lt;code&gt;RACK_ENV&lt;/code&gt; environment variable, Puma looks for configuration at &lt;code&gt;config/puma/&amp;lt;environment_name&amp;gt;.rb&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;If you want to prevent Puma from looking for a configuration file in those locations, provide a dash as the argument to the &lt;code&gt;-C&lt;/code&gt; (or &lt;code&gt;--config&lt;/code&gt;) flag:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;$ puma -C "-"
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;The other side-effects of setting the environment are whether to show stack traces (in &lt;code&gt;development&lt;/code&gt; or &lt;code&gt;test&lt;/code&gt;), and setting RACK_ENV may potentially affect middleware looking for this value to change their behavior. The default puma RACK_ENV value is &lt;code&gt;development&lt;/code&gt;. You can see all config default values &lt;a href="https://github.com/puma/puma/blob/12d1706ddc71b89ed2ee26275e31c788e94ff541/lib/puma/configuration.rb#L170"&gt;here&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Check out &lt;a href="https://github.com/puma/puma/blob/master/lib/puma/dsl.rb"&gt;dsl.rb&lt;/a&gt; to see all available options.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-restart" class="anchor" aria-hidden="true" href="#restart"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Restart&lt;/h2&gt;
&lt;p&gt;Puma includes the ability to restart itself. When available (MRI, Rubinius, JRuby), Puma performs a "hot restart". This is the same functionality available in &lt;em&gt;Unicorn&lt;/em&gt; and &lt;em&gt;NGINX&lt;/em&gt; which keep the server sockets open between restarts. This makes sure that no pending requests are dropped while the restart is taking place.&lt;/p&gt;
&lt;p&gt;For more, see the &lt;a href="https://github.com/puma/puma/blob/master/docs/restart.md"&gt;restart documentation&lt;/a&gt;.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-signals" class="anchor" aria-hidden="true" href="#signals"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Signals&lt;/h2&gt;
&lt;p&gt;Puma responds to several signals. A detailed guide to using UNIX signals with Puma can be found in the &lt;a href="https://github.com/puma/puma/blob/master/docs/signals.md"&gt;signals documentation&lt;/a&gt;.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-platform-constraints" class="anchor" aria-hidden="true" href="#platform-constraints"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Platform Constraints&lt;/h2&gt;
&lt;p&gt;Some platforms do not support all Puma features.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;JRuby&lt;/strong&gt;, &lt;strong&gt;Windows&lt;/strong&gt;: server sockets are not seamless on restart, they must be closed and reopened. These platforms have no way to pass descriptors into a new process that is exposed to Ruby. Also, cluster mode is not supported due to a lack of fork(2).&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Windows&lt;/strong&gt;: Cluster mode is not supported due to a lack of fork(2).&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-known-bugs" class="anchor" aria-hidden="true" href="#known-bugs"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Known Bugs&lt;/h2&gt;
&lt;p&gt;For MRI versions 2.2.7, 2.2.8, 2.2.9, 2.2.10 2.3.4 and 2.4.1, you may see &lt;code&gt;stream closed in another thread (IOError)&lt;/code&gt;. It may be caused by a &lt;a href="https://bugs.ruby-lang.org/issues/13632" rel="nofollow"&gt;Ruby bug&lt;/a&gt;. It can be fixed with the gem &lt;a href="https://rubygems.org/gems/stopgap_13632" rel="nofollow"&gt;https://rubygems.org/gems/stopgap_13632&lt;/a&gt;:&lt;/p&gt;
&lt;div class="highlight highlight-source-ruby"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;if&lt;/span&gt; &lt;span class="pl-s"&gt;%w(2.2.7 2.2.8 2.2.9 2.2.10 2.3.4 2.4.1)&lt;/span&gt;.include? &lt;span class="pl-c1"&gt;RUBY_VERSION&lt;/span&gt;
  &lt;span class="pl-k"&gt;begin&lt;/span&gt;
    &lt;span class="pl-k"&gt;require&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;stopgap_13632&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;
  &lt;span class="pl-k"&gt;rescue&lt;/span&gt; &lt;span class="pl-c1"&gt;LoadError&lt;/span&gt;
  &lt;span class="pl-k"&gt;end&lt;/span&gt;
&lt;span class="pl-k"&gt;end&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h2&gt;&lt;a id="user-content-deployment" class="anchor" aria-hidden="true" href="#deployment"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Deployment&lt;/h2&gt;
&lt;p&gt;Puma has support for Capistrano with an &lt;a href="https://github.com/seuros/capistrano-puma"&gt;external gem&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;It is common to use process monitors with Puma. Modern process monitors like systemd or upstart
provide continuous monitoring and restarts for increased
reliability in production environments:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/puma/puma/tree/master/tools/jungle"&gt;tools/jungle&lt;/a&gt; for sysvinit (init.d) and upstart&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/puma/puma/blob/master/docs/systemd.md"&gt;docs/systemd&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-community-plugins" class="anchor" aria-hidden="true" href="#community-plugins"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Community Plugins&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/evanphx/puma-heroku"&gt;puma-heroku&lt;/a&gt; — default Puma configuration for running on Heroku&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/harmjanblok/puma-metrics"&gt;puma-metrics&lt;/a&gt; — export Puma metrics to Prometheus&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/yob/puma-plugin-statsd"&gt;puma-plugin-statsd&lt;/a&gt; — send Puma metrics to statsd&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/sj26/puma-plugin-systemd"&gt;puma-plugin-systemd&lt;/a&gt; — deeper integration with systemd for notify, status and watchdog&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-contributing" class="anchor" aria-hidden="true" href="#contributing"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Contributing&lt;/h2&gt;
&lt;p&gt;Find details for contributing in the &lt;a href="https://github.com/puma/puma/blob/master/CONTRIBUTING.md"&gt;contribution guide&lt;/a&gt;.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-license" class="anchor" aria-hidden="true" href="#license"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;License&lt;/h2&gt;
&lt;p&gt;Puma is copyright Evan Phoenix and contributors, licensed under the BSD 3-Clause license. See the included LICENSE file for details.&lt;/p&gt;
&lt;/article&gt;&lt;/div&gt;</description><author>puma</author><guid isPermaLink="false">https://github.com/puma/puma</guid><pubDate>Fri, 01 Nov 2019 00:00:00 GMT</pubDate></item></channel></rss>