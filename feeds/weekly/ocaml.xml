<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0"><channel><title>GitHub Trending: OCaml, This week</title><link>https://github.com/trending/ocaml?since=weekly</link><description>The top repositories on GitHub for ocaml, measured weekly</description><pubDate>Wed, 20 Nov 2019 01:08:53 GMT</pubDate><lastBuildDate>Wed, 20 Nov 2019 01:08:53 GMT</lastBuildDate><generator>PyRSS2Gen-1.1.0</generator><docs>http://blogs.law.harvard.edu/tech/rss</docs><ttl>720</ttl><item><title>coq/coq #1 in OCaml, This week</title><link>https://github.com/coq/coq</link><description>&lt;p&gt;&lt;i&gt;Coq is a formal proof management system. It provides a formal language to write mathematical definitions, executable algorithms and theorems together with an environment for semi-interactive development of machine-checked proofs. &lt;/i&gt;&lt;/p&gt;&lt;div id="readme" class="instapaper_body md" data-path="README.md"&gt;&lt;article class="markdown-body entry-content p-5" itemprop="text"&gt;&lt;h1&gt;&lt;a id="user-content-coq" class="anchor" aria-hidden="true" href="#coq"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Coq&lt;/h1&gt;
&lt;p&gt;&lt;a href="https://gitlab.com/coq/coq/commits/master" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/7abe565a0b4c3f3e75070022e27cfdfb9f1d5cfe/68747470733a2f2f6769746c61622e636f6d2f636f712f636f712f6261646765732f6d61737465722f706970656c696e652e737667" alt="GitLab" data-canonical-src="https://gitlab.com/coq/coq/badges/master/pipeline.svg" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://dev.azure.com/coq/coq/_build/latest?definitionId=1?branchName=master" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/24e36b2c8a53838f52c305f0c8b10421d1905c15/68747470733a2f2f6465762e617a7572652e636f6d2f636f712f636f712f5f617069732f6275696c642f7374617475732f636f712e636f713f6272616e63684e616d653d6d6173746572" alt="Azure Pipelines" data-canonical-src="https://dev.azure.com/coq/coq/_apis/build/status/coq.coq?branchName=master" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://gitter.im/coq/coq" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/16d6acb9c4acd4cddbe1297e7c7ff75cd207771a/68747470733a2f2f6261646765732e6769747465722e696d2f636f712f636f712e737667" alt="Gitter" data-canonical-src="https://badges.gitter.im/coq/coq.svg" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://doi.org/10.5281/zenodo.1003420" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/d241490bc2fbadf00c65211d65bfe7271b345420/68747470733a2f2f7a656e6f646f2e6f72672f62616467652f444f492f31302e353238312f7a656e6f646f2e313030333432302e737667" alt="DOI" data-canonical-src="https://zenodo.org/badge/DOI/10.5281/zenodo.1003420.svg" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Coq is a formal proof management system. It provides a formal language to write
mathematical definitions, executable algorithms and theorems together with an
environment for semi-interactive development of machine-checked proofs.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-installation" class="anchor" aria-hidden="true" href="#installation"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Installation&lt;/h2&gt;
&lt;p&gt;&lt;a href="https://repology.org/metapackage/coq/versions" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/19f56e32f3d00ef39d86253a5ce76acf21e66566/68747470733a2f2f7265706f6c6f67792e6f72672f62616467652f6c61746573742d76657273696f6e732f636f712e737667" alt="latest packaged version(s)" data-canonical-src="https://repology.org/badge/latest-versions/coq.svg" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href="https://www.archlinux.org/packages/community/x86_64/coq/" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/c7084d689b6b6e536640a5964374aa532236bb58/68747470733a2f2f7265706f6c6f67792e6f72672f62616467652f76657273696f6e2d666f722d7265706f2f617263682f636f712e737667" alt="Arch package" data-canonical-src="https://repology.org/badge/version-for-repo/arch/coq.svg" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://chocolatey.org/packages/Coq" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/d2cb327385701242f0e7bb3f526e9ff9010f3e95/68747470733a2f2f7265706f6c6f67792e6f72672f62616467652f76657273696f6e2d666f722d7265706f2f63686f636f6c617465792f636f712e737667" alt="Chocolatey package" data-canonical-src="https://repology.org/badge/version-for-repo/chocolatey/coq.svg" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://github.com/conda-forge/coq-feedstock"&gt;&lt;img src="https://camo.githubusercontent.com/465cafed578614d726cf39ddac5c8ff219745bd2/68747470733a2f2f696d672e736869656c64732e696f2f636f6e64612f766e2f636f6e64612d666f7267652f636f712e7376673f6c6162656c3d253232436f6e64612532307061636b616765253232" alt="Conda package" data-canonical-src="https://img.shields.io/conda/vn/conda-forge/coq.svg?label=%22Conda%20package%22" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://formulae.brew.sh/formula/coq" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/9179440715a0ffae2c15f2d6efdaa4049cd86877/68747470733a2f2f7265706f6c6f67792e6f72672f62616467652f76657273696f6e2d666f722d7265706f2f686f6d65627265772f636f712e737667" alt="Homebrew package" data-canonical-src="https://repology.org/badge/version-for-repo/homebrew/coq.svg" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://nixos.org/nixos/packages.html#coq" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/0f87e05bb64c243b564b34690f6ff6f831c2e66d/68747470733a2f2f7265706f6c6f67792e6f72672f62616467652f76657273696f6e2d666f722d7265706f2f6e69785f756e737461626c652f636f712e737667" alt="nixpkgs unstable package" data-canonical-src="https://repology.org/badge/version-for-repo/nix_unstable/coq.svg" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Download the pre-built packages of the &lt;a href="https://github.com/coq/coq/releases/latest"&gt;latest release&lt;/a&gt; for Windows and macOS;
read the &lt;a href="https://coq.inria.fr/opam/www/using.html" rel="nofollow"&gt;help page&lt;/a&gt; on how to install Coq with OPAM;
or refer to the &lt;a href="INSTALL"&gt;&lt;code&gt;INSTALL&lt;/code&gt;&lt;/a&gt; file for the procedure to install from source.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-documentation" class="anchor" aria-hidden="true" href="#documentation"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Documentation&lt;/h2&gt;
&lt;p&gt;The sources of the documentation can be found in directory &lt;a href="doc"&gt;&lt;code&gt;doc&lt;/code&gt;&lt;/a&gt;.
See &lt;a href="/doc/README.md"&gt;&lt;code&gt;doc/README.md&lt;/code&gt;&lt;/a&gt; to learn more about the documentation,
in particular how to build it. The
documentation of the last released version is available on the Coq
web site at &lt;a href="http://coq.inria.fr/documentation" rel="nofollow"&gt;coq.inria.fr/documentation&lt;/a&gt;.
See also &lt;a href="https://github.com/coq/coq/wiki"&gt;Cocorico&lt;/a&gt; (the Coq wiki),
and the &lt;a href="https://github.com/coq/coq/wiki/The-Coq-FAQ"&gt;Coq FAQ&lt;/a&gt;,
for additional user-contributed documentation.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-changes" class="anchor" aria-hidden="true" href="#changes"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Changes&lt;/h2&gt;
&lt;p&gt;The &lt;a href="https://coq.github.io/doc/master/refman/changes.html" rel="nofollow"&gt;Recent
changes&lt;/a&gt; chapter
of the reference manual explains the differences and the
incompatibilities of each new version of Coq. If you upgrade Coq,
please read it carefully as it contains important advice on how to
approach some problems you may encounter.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-questions-and-discussion" class="anchor" aria-hidden="true" href="#questions-and-discussion"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Questions and discussion&lt;/h2&gt;
&lt;p&gt;We have a number of channels to reach the user community and the
development team:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Our &lt;a href="https://coq.discourse.group" rel="nofollow"&gt;Discourse forum&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;Our mailing list, the &lt;a href="https://sympa.inria.fr/sympa/info/coq-club" rel="nofollow"&gt;Coq-Club&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;Our &lt;a href="https://gitter.im/coq/coq" rel="nofollow"&gt;Gitter channel&lt;/a&gt;, which is a good way to reach
developers for quick chat and development questions.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;See also &lt;a href="https://coq.inria.fr/community.html" rel="nofollow"&gt;coq.inria.fr/community&lt;/a&gt;.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-bug-reports" class="anchor" aria-hidden="true" href="#bug-reports"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Bug reports&lt;/h2&gt;
&lt;p&gt;Please report any bug / feature request in &lt;a href="https://github.com/coq/coq/issues"&gt;our issue tracker&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;To be effective, bug reports should mention the OCaml version used
to compile and run Coq, the Coq version (&lt;code&gt;coqtop -v&lt;/code&gt;), the configuration
used, and include a complete source example leading to the bug.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-contributing-to-coq" class="anchor" aria-hidden="true" href="#contributing-to-coq"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Contributing to Coq&lt;/h2&gt;
&lt;p&gt;Guidelines for contributing to Coq in various ways are listed in the &lt;a href="CONTRIBUTING.md"&gt;contributor's guide&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Information about the next release is at &lt;a href="https://github.com/coq/coq/wiki/Release-Plan"&gt;https://github.com/coq/coq/wiki/Release-Plan&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-supporting-coq" class="anchor" aria-hidden="true" href="#supporting-coq"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Supporting Coq&lt;/h2&gt;
&lt;p&gt;Help the Coq community grow and prosper by becoming a sponsor! The &lt;a href="https://coq.inria.fr/consortium" rel="nofollow"&gt;Coq
Consortium&lt;/a&gt; can establish sponsorship contracts
or receive donations. If you want to take an active role in shaping Coq's
future, you can also become a Consortium member. If you are interested, please
get in touch!&lt;/p&gt;
&lt;/article&gt;&lt;/div&gt;</description><author>coq</author><guid isPermaLink="false">https://github.com/coq/coq</guid><pubDate>Wed, 20 Nov 2019 00:01:00 GMT</pubDate></item><item><title>comby-tools/comby #2 in OCaml, This week</title><link>https://github.com/comby-tools/comby</link><description>&lt;p&gt;&lt;i&gt;A tool for structural code search and replace that supports ~every language.&lt;/i&gt;&lt;/p&gt;&lt;div id="readme" class="instapaper_body md" data-path="README.md"&gt;&lt;article class="markdown-body entry-content p-5" itemprop="text"&gt;&lt;h1&gt;&lt;a id="user-content-comby" class="anchor" aria-hidden="true" href="#comby"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;comby&lt;/h1&gt;
&lt;p&gt;&lt;a href="LICENSE"&gt;&lt;img src="https://camo.githubusercontent.com/e598ad1eb231cf59972c992c00dbb0dbb26dd8f6/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f6c6963656e73652d4170616368652d626c75652e737667" alt="Apache-2.0" data-canonical-src="https://img.shields.io/badge/license-Apache-blue.svg" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://travis-ci.com/comby-tools/comby" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/4ca8587237fea99e29f2efff85da1f5d0aebd8fb/68747470733a2f2f7472617669732d63692e636f6d2f636f6d62792d746f6f6c732f636f6d62792e7376673f6272616e63683d6d6173746572" alt="Build Status" data-canonical-src="https://travis-ci.com/comby-tools/comby.svg?branch=master" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a target="_blank" rel="noopener noreferrer" href="https://camo.githubusercontent.com/6ccfcf689673b5fa078f1d2da771a48024cfe31a/68747470733a2f2f696d672e736869656c64732e696f2f636f766572616c6c732f6769746875622f636f6d62792d746f6f6c732f636f6d6279"&gt;&lt;img src="https://camo.githubusercontent.com/6ccfcf689673b5fa078f1d2da771a48024cfe31a/68747470733a2f2f696d672e736869656c64732e696f2f636f766572616c6c732f6769746875622f636f6d62792d746f6f6c732f636f6d6279" alt="Coveralls github" data-canonical-src="https://img.shields.io/coveralls/github/comby-tools/comby" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="Downloads"&gt;&lt;img src="https://camo.githubusercontent.com/0c31c9836a8fe4a26657337412bf70a2f99dd232/68747470733a2f2f696d672e736869656c64732e696f2f6769746875622f646f776e6c6f6164732f636f6d62792d746f6f6c732f636f6d62792f746f74616c2e7376673f636f6c6f723d6f72616e6765" alt="Downloads" data-canonical-src="https://img.shields.io/github/downloads/comby-tools/comby/total.svg?color=orange" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="Commit"&gt;&lt;img src="https://camo.githubusercontent.com/dcc274f6ff6a16c6b6449481d3f202c078bb75b0/68747470733a2f2f696d672e736869656c64732e696f2f6769746875622f6c6173742d636f6d6d69742f636f6d62792d746f6f6c732f636f6d62792e737667" alt="Commit" data-canonical-src="https://img.shields.io/github/last-commit/comby-tools/comby.svg" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://gitter.im/comby-tools/community" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/e17fa291c4fcd1aee92434998f810b272fb2d7dd/68747470733a2f2f696d672e736869656c64732e696f2f6769747465722f726f6f6d2f636f6d62792d746f6f6c732f636f6d62792e7376673f636f6c6f723d7465616c" alt="Gitter" data-canonical-src="https://img.shields.io/gitter/room/comby-tools/comby.svg?color=teal" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="https://user-images.githubusercontent.com/888624/64916761-0b657780-d752-11e9-96e2-cd81a2681139.gif"&gt;&lt;img src="https://user-images.githubusercontent.com/888624/64916761-0b657780-d752-11e9-96e2-cd81a2681139.gif" alt="" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-see-the-usage-documentation" class="anchor" aria-hidden="true" href="#see-the-usage-documentation"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;See the &lt;a href="https://comby.dev" rel="nofollow"&gt;usage documentation&lt;/a&gt;.&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://github.com/comby-tools/comby#arent-regex-approaches-like-sed-good-enough"&gt;A short example below&lt;/a&gt; shows how comby simplifies matching and rewriting compared to regex approaches like &lt;code&gt;sed&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Need help writing patterns or have other problems? Consider posting in &lt;a href="https://gitter.im/comby-tools/community" rel="nofollow"&gt;Gitter&lt;/a&gt;.&lt;/strong&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-install-pre-built-binaries" class="anchor" aria-hidden="true" href="#install-pre-built-binaries"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Install (pre-built binaries)&lt;/h2&gt;
&lt;h3&gt;&lt;a id="user-content-mac-os-x" class="anchor" aria-hidden="true" href="#mac-os-x"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Mac OS X&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;brew install comby&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;&lt;a id="user-content-ubuntu-linux" class="anchor" aria-hidden="true" href="#ubuntu-linux"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Ubuntu Linux&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;bash &amp;lt;(curl -sL get.comby.dev)&lt;/code&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Arch and other Linux&lt;/strong&gt;: The PCRE library is dynamically linked in the Ubuntu binary. For other distributions, like Arch, a fixup is needed: &lt;code&gt;ln -s /usr/lib/libpcre.so /usr/lib/libpcre.so.3&lt;/code&gt;. Alternatively, consider &lt;a href="https://github.com/comby-tools/comby#build-from-source"&gt;building from source&lt;/a&gt;.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;&lt;a id="user-content-windows" class="anchor" aria-hidden="true" href="#windows"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Windows&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://docs.microsoft.com/en-us/windows/wsl/install-win10" rel="nofollow"&gt;Install the Windows Subsystem for Linux&lt;/a&gt; and install Ubuntu. Then run &lt;code&gt;bash &amp;lt;(curl -sL get.comby.dev)&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;&lt;a id="user-content-docker" class="anchor" aria-hidden="true" href="#docker"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Docker&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;docker pull comby/comby&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;details&gt;
  &lt;summary&gt;click to expand an example invocation for the docker image&lt;/summary&gt;
&lt;p&gt;Running with docker on &lt;code&gt;stdin&lt;/code&gt;:&lt;/p&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt;&lt;span class="pl-c1"&gt;echo&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;(👋 hi)&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt; &lt;span class="pl-k"&gt;|&lt;/span&gt; docker run -a stdin -a stdout -i comby/comby &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;(:[emoji] hi)&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;bye :[emoji]&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt; lisp -stdin&lt;/pre&gt;&lt;/div&gt;
&lt;a target="_blank" rel="noopener noreferrer" href="https://user-images.githubusercontent.com/888624/64924862-0edf1a00-d7b7-11e9-9c2e-cfeafde5bb4b.png"&gt;&lt;img width="500" src="https://user-images.githubusercontent.com/888624/64924862-0edf1a00-d7b7-11e9-9c2e-cfeafde5bb4b.png" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;/details&gt;
&lt;h3&gt;&lt;a id="user-content-or-try-it-live" class="anchor" aria-hidden="true" href="#or-try-it-live"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Or &lt;a href="https://bit.ly/2UXkonD" rel="nofollow"&gt;try it live&lt;/a&gt;.&lt;/h3&gt;
&lt;h2&gt;&lt;a id="user-content-isnt-a-regex-approach-like-sed-good-enough" class="anchor" aria-hidden="true" href="#isnt-a-regex-approach-like-sed-good-enough"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Isn't a regex approach like sed good enough?&lt;/h2&gt;
&lt;p&gt;Sometimes, yes. But often, small changes and refactorings are complicated by nested expressions, comments, or strings. Consider the following C-like snippet. Say the challenge is to rewrite the two &lt;code&gt;if&lt;/code&gt; conditions to the value &lt;code&gt;1&lt;/code&gt;. Can you write a regular expression that matches the contents of the two if condition expressions, and only those two? Feel free to share your pattern with &lt;a href="https://twitter.com/rvtond" rel="nofollow"&gt;@rvtond&lt;/a&gt; on Twitter.&lt;/p&gt;
&lt;div class="highlight highlight-source-c"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;if&lt;/span&gt; (fgets(line, &lt;span class="pl-c1"&gt;128&lt;/span&gt;, file_pointer) == Null) &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; 1) if (...) returns 0&lt;/span&gt;
      &lt;span class="pl-k"&gt;return&lt;/span&gt; &lt;span class="pl-c1"&gt;0&lt;/span&gt;;
...
&lt;span class="pl-k"&gt;if&lt;/span&gt; (scanf(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;span class="pl-c1"&gt;%d&lt;/span&gt;) &lt;span class="pl-c1"&gt;%d&lt;/span&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &amp;amp;x, &amp;amp;y) == &lt;span class="pl-c1"&gt;2&lt;/span&gt;) &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; 2) if (scanf("%d) %d", &amp;amp;x, &amp;amp;y) == 2) returns 0&lt;/span&gt;
      &lt;span class="pl-k"&gt;return&lt;/span&gt; &lt;span class="pl-c1"&gt;0&lt;/span&gt;; &lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;To match these with comby, all you need to write is &lt;code&gt;if (:[condition])&lt;/code&gt;, and specify one flag that this language is C-like. The replacement is &lt;code&gt;if (1)&lt;/code&gt;. See the &lt;a href="https://bit.ly/30935ou" rel="nofollow"&gt;live example&lt;/a&gt;.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-build-from-source" class="anchor" aria-hidden="true" href="#build-from-source"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Build from source&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Install &lt;a href="https://opam.ocaml.org/doc/Install.html" rel="nofollow"&gt;opam&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Create a new switch if you don't have OCaml installed:&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;pre&gt;&lt;code&gt;opam init
opam switch create 4.09.0 4.09.0
&lt;/code&gt;&lt;/pre&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="#os-dependencies"&gt;Install OS dependencies:&lt;/a&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Linux:&lt;/strong&gt; &lt;code&gt;sudo apt-get install pkg-config libpcre3-dev&lt;/code&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Mac:&lt;/strong&gt; &lt;code&gt;brew install pkg-config pcre&lt;/code&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Then install the library dependencies:&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;pre&gt;&lt;code&gt;git clone https://github.com/comby-tools/comby
cd comby &amp;amp;&amp;amp; opam install . --deps-only -y
&lt;/code&gt;&lt;/pre&gt;
&lt;ul&gt;
&lt;li&gt;Build and test&lt;/li&gt;
&lt;/ul&gt;
&lt;pre&gt;&lt;code&gt;make
make test
&lt;/code&gt;&lt;/pre&gt;
&lt;ul&gt;
&lt;li&gt;If you want to install &lt;code&gt;comby&lt;/code&gt; on your &lt;code&gt;PATH&lt;/code&gt;, run&lt;/li&gt;
&lt;/ul&gt;
&lt;pre&gt;&lt;code&gt;make install
&lt;/code&gt;&lt;/pre&gt;
&lt;/article&gt;&lt;/div&gt;</description><author>comby-tools</author><guid isPermaLink="false">https://github.com/comby-tools/comby</guid><pubDate>Wed, 20 Nov 2019 00:02:00 GMT</pubDate></item></channel></rss>