<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0"><channel><title>GitHub Trending: OCaml, This week</title><link>https://github.com/trending/ocaml?since=weekly</link><description>The top repositories on GitHub for ocaml, measured weekly</description><pubDate>Thu, 09 Jan 2020 01:08:10 GMT</pubDate><lastBuildDate>Thu, 09 Jan 2020 01:08:10 GMT</lastBuildDate><generator>PyRSS2Gen-1.1.0</generator><docs>http://blogs.law.harvard.edu/tech/rss</docs><ttl>720</ttl><item><title>astrada/google-drive-ocamlfuse #1 in OCaml, This week</title><link>https://github.com/astrada/google-drive-ocamlfuse</link><description>&lt;p&gt;&lt;i&gt;FUSE filesystem over Google Drive&lt;/i&gt;&lt;/p&gt;&lt;div id="readme" class="md" data-path="README.md"&gt;&lt;article class="markdown-body entry-content p-5" itemprop="text"&gt;&lt;h1&gt;&lt;a id="user-content-fuse-filesystem-over-google-drive" class="anchor" aria-hidden="true" href="#fuse-filesystem-over-google-drive"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;FUSE filesystem over Google Drive&lt;/h1&gt;
&lt;p&gt;&lt;a href="https://gitter.im/google-drive-ocamlfuse/Lobby" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/39e6a60e448a46b6a19c61289ff3975bd9e4d438/68747470733a2f2f6261646765732e6769747465722e696d2f676f6f676c652d64726976652d6f63616d6c667573652f4c6f6262792e737667" alt="Join the chat at https://gitter.im/google-drive-ocamlfuse/Lobby" data-canonical-src="https://badges.gitter.im/google-drive-ocamlfuse/Lobby.svg" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;google-drive-ocamlfuse&lt;/strong&gt; is a FUSE filesystem for Google Drive,
written in OCaml. It lets you mount your Google Drive on Linux.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-features-see-whats-new" class="anchor" aria-hidden="true" href="#features-see-whats-new"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Features (see &lt;a href="https://github.com/astrada/google-drive-ocamlfuse/wiki/What%27s-new"&gt;what's new&lt;/a&gt;)&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;Full read/write access to ordinary files and folders&lt;/li&gt;
&lt;li&gt;Read-only access to Google Docs, Sheets, and Slides (exported to
configurable formats)&lt;/li&gt;
&lt;li&gt;Multiple account support&lt;/li&gt;
&lt;li&gt;Duplicate file handling&lt;/li&gt;
&lt;li&gt;Access to trash (&lt;code&gt;.Trash&lt;/code&gt; directory)&lt;/li&gt;
&lt;li&gt;Unix permissions and ownership&lt;/li&gt;
&lt;li&gt;Symbolic links&lt;/li&gt;
&lt;li&gt;Read-ahead buffers when streaming&lt;/li&gt;
&lt;li&gt;Accessing content shared with you (requires &lt;a href="doc/Configuration.md"&gt;configuration&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;Team Drive &lt;a href="https://github.com/astrada/google-drive-ocamlfuse/wiki/Team-Drives"&gt;Support&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Service Account &lt;a href="https://github.com/astrada/google-drive-ocamlfuse/wiki/Service-Accounts"&gt;Support&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;OAuth2 for Devices &lt;a href="https://github.com/astrada/google-drive-ocamlfuse/wiki/OAuth2-for-Devices"&gt;Support&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;&lt;a id="user-content-resources" class="anchor" aria-hidden="true" href="#resources"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Resources&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://astrada.github.io/google-drive-ocamlfuse/" rel="nofollow"&gt;Homepage&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/astrada/google-drive-ocamlfuse/wiki"&gt;Wiki&lt;/a&gt;: includes
installation instructions, and more details about configuration, and
authorization&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;&lt;a id="user-content-authorization" class="anchor" aria-hidden="true" href="#authorization"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Authorization&lt;/h3&gt;
&lt;p&gt;Please be sure to have a look at the
&lt;a href="https://github.com/astrada/google-drive-ocamlfuse/wiki/Authorization"&gt;authorization&lt;/a&gt;
page, to understand how the authorization process works, and to discover all
the available options.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-getting-started" class="anchor" aria-hidden="true" href="#getting-started"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Getting started&lt;/h2&gt;
&lt;h3&gt;&lt;a id="user-content-installation" class="anchor" aria-hidden="true" href="#installation"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Installation&lt;/h3&gt;
&lt;p&gt;I've uploaded .deb packages for Ubuntu to my
&lt;a href="https://launchpad.net/~alessandro-strada/+archive/ppa" rel="nofollow"&gt;PPA&lt;/a&gt;. In order to to
install it, use the commands below:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;sudo add-apt-repository ppa:alessandro-strada/ppa
sudo apt-get update
sudo apt-get install google-drive-ocamlfuse
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;New beta versions are available on this
&lt;a href="https://launchpad.net/~alessandro-strada/+archive/ubuntu/google-drive-ocamlfuse-beta" rel="nofollow"&gt;PPA&lt;/a&gt;.
If you want to test them, use the commands below:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;sudo add-apt-repository ppa:alessandro-strada/google-drive-ocamlfuse-beta
sudo apt-get update
sudo apt-get install google-drive-ocamlfuse
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;For other installation options, please refer to the &lt;a href="https://github.com/astrada/google-drive-ocamlfuse/wiki/Installation"&gt;wiki&lt;/a&gt;.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-how-to-build" class="anchor" aria-hidden="true" href="#how-to-build"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;How to build&lt;/h2&gt;
&lt;h3&gt;&lt;a id="user-content-requirements" class="anchor" aria-hidden="true" href="#requirements"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Requirements&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://caml.inria.fr/ocaml/release.en.html" rel="nofollow"&gt;OCaml&lt;/a&gt; &amp;gt;= 4.02.3&lt;/li&gt;
&lt;li&gt;&lt;a href="http://projects.camlcity.org/projects/findlib.html/" rel="nofollow"&gt;Findlib&lt;/a&gt; &amp;gt;= 1.2.7&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/astrada/ocamlfuse"&gt;ocamlfuse&lt;/a&gt; &amp;gt;= 2.7.1&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/astrada/gapi-ocaml"&gt;gapi-ocaml&lt;/a&gt; &amp;gt;= 0.3.6&lt;/li&gt;
&lt;li&gt;&lt;a href="https://mmottl.github.io/sqlite3-ocaml/" rel="nofollow"&gt;sqlite3-ocaml&lt;/a&gt; &amp;gt;= 1.6.1&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;&lt;a id="user-content-configuration-and-installation" class="anchor" aria-hidden="true" href="#configuration-and-installation"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Configuration and installation&lt;/h3&gt;
&lt;p&gt;To build the executable, run&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;dune build @install
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;To install it, run (as root, if your user doesn't have enough privileges)&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;dune install
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;To uninstall anything that was previously installed, execute&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;dune uninstall
&lt;/code&gt;&lt;/pre&gt;
&lt;h2&gt;&lt;a id="user-content-usage" class="anchor" aria-hidden="true" href="#usage"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Usage&lt;/h2&gt;
&lt;p&gt;The first time, you can run &lt;code&gt;google-drive-ocamlfuse&lt;/code&gt; without parameters:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;google-drive-ocamlfuse
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;This command will create the default application directory
(&lt;code&gt;~/.gdfuse/default&lt;/code&gt;), containing the configuration file &lt;code&gt;config&lt;/code&gt; (see the
&lt;a href="https://github.com/astrada/google-drive-ocamlfuse/wiki/Configuration"&gt;wiki
page&lt;/a&gt;
for more details about configuration). And it will start a web browser to
obtain authorization to access your Google Drive. This will let you modify
default configuration before mounting the filesystem.&lt;/p&gt;
&lt;p&gt;Then you can choose a local directory to mount your Google Drive (e.g.: &lt;code&gt;~/GoogleDrive&lt;/code&gt;).&lt;/p&gt;
&lt;p&gt;Create the mount point, if it doesn't exists:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;mkdir ~/GoogleDrive
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Then you can mount the filesystem (replacing [mountpoint] with the name of your desired folder):&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;google-drive-ocamlfuse [mountpoint]
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;If you have more than one account, you can run:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;google-drive-ocamlfuse -label label [mountpoint]
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Using &lt;code&gt;label&lt;/code&gt; to distinguish different accounts. The program will use the
directory &lt;code&gt;~/.gdfuse/label&lt;/code&gt; to host configuration, application state, and file
cache. No file is shared among different accounts, so you can have a different
configuration for each one.&lt;/p&gt;
&lt;p&gt;To unmount the filesystem, issue this command:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;fusermount -u mountpoint
&lt;/code&gt;&lt;/pre&gt;
&lt;h3&gt;&lt;a id="user-content-troubleshooting" class="anchor" aria-hidden="true" href="#troubleshooting"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Troubleshooting&lt;/h3&gt;
&lt;p&gt;This application is still under testing, so there are probably bugs to
discover and fix. To be extra sure, if you want, you can mount the filesystem
in read-only mode, modifying the configuration (see the
&lt;a href="https://github.com/astrada/google-drive-ocamlfuse/wiki/Configuration"&gt;documentation&lt;/a&gt;),
to avoid any write attempt to the server. Anyway, the &lt;code&gt;rm&lt;/code&gt; command will simply
trash your file, so you should always be able to rollback any changes. If you
have problems, you can turn on debug logging:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;google-drive-ocamlfuse -debug mountpoint
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;In &lt;code&gt;~/.gdfuse/default&lt;/code&gt; you can find &lt;code&gt;curl.log&lt;/code&gt; that will track every request
to the Google Drive API, and &lt;code&gt;gdfuse.log&lt;/code&gt; that will log FUSE operations and
cache management. If something goes wrong, you can try clearing the cache,
with this command:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;google-drive-ocamlfuse -cc
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;If something still doesn't work, try starting from scratch removing everything
in &lt;code&gt;~/.gdfuse/default&lt;/code&gt;. In this case you will need to reauthorize the
application.&lt;/p&gt;
&lt;p&gt;Note that in order to reduce latency, the application will query the server
and check for changes only every 60 seconds (configurable). So, if you make a
change to your documents (server side), you won't see it immediately in the
mounted filesystem.&lt;/p&gt;
&lt;p&gt;Note also that Google Documents will be exported read-only.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-support" class="anchor" aria-hidden="true" href="#support"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Support&lt;/h3&gt;
&lt;p&gt;If you have questions, suggestions or want to report a problem, you may want
to open an &lt;a href="https://github.com/astrada/google-drive-ocamlfuse/issues"&gt;issue&lt;/a&gt;
on github.&lt;/p&gt;
&lt;/article&gt;&lt;/div&gt;</description><author>astrada</author><guid isPermaLink="false">https://github.com/astrada/google-drive-ocamlfuse</guid><pubDate>Thu, 09 Jan 2020 00:01:00 GMT</pubDate></item><item><title>yawaramin/re-web #2 in OCaml, This week</title><link>https://github.com/yawaramin/re-web</link><description>&lt;p&gt;&lt;i&gt;Experimental web framework for ReasonML &amp; OCaml&lt;/i&gt;&lt;/p&gt;&lt;div id="readme" class="md" data-path="README.md"&gt;&lt;article class="markdown-body entry-content p-5" itemprop="text"&gt;&lt;h2&gt;&lt;a id="user-content-reweb---a-type-safe-ergonomic-reasonml-and-ocaml-web-framework-wip" class="anchor" aria-hidden="true" href="#reweb---a-type-safe-ergonomic-reasonml-and-ocaml-web-framework-wip"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;ReWeb - a type-safe ergonomic ReasonML and OCaml web framework (WIP)&lt;/h2&gt;
&lt;p&gt;&lt;a href="https://dev.azure.com/yawaramin/re-web/_build/latest?definitionId=1?branchName=master" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/82fe52cc15167532ce5c73cd02e2dfd4abc36fe1/68747470733a2f2f6465762e617a7572652e636f6d2f7961776172616d696e2f72652d7765622f5f617069732f6275696c642f7374617475732f7961776172616d696e2e72652d7765623f6272616e63684e616d653d6d6173746572" alt="Build Status" data-canonical-src="https://dev.azure.com/yawaramin/re-web/_apis/build/status/yawaramin.re-web?branchName=master" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;ReWeb is a web framework based on several foundations:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;The amazing work of the people behind
&lt;a href="https://github.com/inhabitedtype/httpaf"&gt;Httpaf&lt;/a&gt;,
&lt;a href="https://github.com/anmonteiro/ocaml-h2"&gt;H2&lt;/a&gt;, &lt;a href="https://esy.sh/" rel="nofollow"&gt;Esy&lt;/a&gt;,
and others&lt;/li&gt;
&lt;li&gt;The core idea of
&lt;a href="https://monkey.org/~marius/funsrv.pdf" rel="nofollow"&gt;'Your server as a function'&lt;/a&gt;
by Marius Eriksen which was also the idea behind Twitter's Finagle web
stack&lt;/li&gt;
&lt;li&gt;Jasim Basheer's essay
&lt;a href="https://protoship.io/blog/rails-on-ocaml/" rel="nofollow"&gt;'Rails on OCaml'&lt;/a&gt; which
identifies the need for an ergonomic, Rails-like web framework that
still preserves the type safety benefits of OCaml.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;ReWeb's main concepts are:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Services: a service is a function from a request to a promise of
response (i.e. an asynchronous function).&lt;/li&gt;
&lt;li&gt;Filters: a filter is a function that takes a service as input and
returns a service as output. It can be inserted into the 'request
pipeline' and manipulate the request before the service finally
handles it.&lt;/li&gt;
&lt;li&gt;Server: a server is a function that takes a route (pair of HTTP method
and path list) as input and returns a service as output.&lt;/li&gt;
&lt;li&gt;Type-safe request pipeline: requests have a type parameter that
reveals their 'context' i.e. some data that's stored inside them.
Filters and services must change requests correctly and in the right
order, or the compiler will present type errors.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Notice that all the main concepts here are just functions. They are all
composeable using just function composition. Services can call other
services. Filters can slot together by calling each other. Servers can
delegate smaller scopes to other servers. See &lt;code&gt;bin/Main.re&lt;/code&gt; for examples
of all of these.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-documentation" class="anchor" aria-hidden="true" href="#documentation"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Documentation&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://yawaramin.github.io/re-web/re-web/ReWeb/index.html" rel="nofollow"&gt;API Reference&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://yawaramin.github.io/re-web/re-web/Manual/index.html" rel="nofollow"&gt;User's Manual&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-example" class="anchor" aria-hidden="true" href="#example"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Example&lt;/h2&gt;
&lt;p&gt;Check out the example server in the &lt;code&gt;bin/&lt;/code&gt; directory. The &lt;code&gt;Main.re&lt;/code&gt; file
there is extensively commented with explanations.&lt;/p&gt;
&lt;p&gt;Run the example server:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;$ esy bin
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Send some requests to it:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;$ curl localhost:8080/hello
$ curl localhost:8080/auth/hello
$ curl --user 'bob:secret' localhost:8080/auth/hello
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Go to &lt;a href="http://localhost:8080/login" rel="nofollow"&gt;http://localhost:8080/login&lt;/a&gt; in your browser, etc.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-try" class="anchor" aria-hidden="true" href="#try"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Try&lt;/h2&gt;
&lt;p&gt;You need Esy, you can install the beta using &lt;a href="https://npmjs.com" rel="nofollow"&gt;npm&lt;/a&gt;:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;$ npm install --global esy@latest
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Then run the &lt;code&gt;esy&lt;/code&gt; command from this project root to install and build dependencies.&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;$ esy
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Now you can run your editor within the environment (which also includes merlin):&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;$ esy $EDITOR
$ esy vim
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Alternatively you can try &lt;a href="https://github.com/jordwalke/vim-reasonml"&gt;vim-reasonml&lt;/a&gt;
which loads esy project environments automatically.&lt;/p&gt;
&lt;p&gt;After you make some changes to source code, you can re-run project's build
again with the same simple &lt;code&gt;esy&lt;/code&gt; command.&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;$ esy
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Generate documentation:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;$ esy doc
$ esy open '#{self.target_dir}/default/_doc/_html/index.html'
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Shell into environment:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;$ esy shell
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Run the test suite with:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;$ esy test
&lt;/code&gt;&lt;/pre&gt;
&lt;h2&gt;&lt;a id="user-content-warning" class="anchor" aria-hidden="true" href="#warning"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Warning&lt;/h2&gt;
&lt;p&gt;ReWeb is experimental and not for production use! I am still ironing out
the API. But (imho) it looks promising for real-world usage.&lt;/p&gt;
&lt;/article&gt;&lt;/div&gt;</description><author>yawaramin</author><guid isPermaLink="false">https://github.com/yawaramin/re-web</guid><pubDate>Thu, 09 Jan 2020 00:02:00 GMT</pubDate></item></channel></rss>