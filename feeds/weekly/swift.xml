<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0"><channel><title>GitHub Trending: Swift, This week</title><link>https://github.com/trending/swift?since=weekly</link><description>The top repositories on GitHub for swift, measured weekly</description><pubDate>Fri, 08 Nov 2019 01:07:48 GMT</pubDate><lastBuildDate>Fri, 08 Nov 2019 01:07:48 GMT</lastBuildDate><generator>PyRSS2Gen-1.1.0</generator><docs>http://blogs.law.harvard.edu/tech/rss</docs><ttl>720</ttl><item><title>Alamofire/Alamofire #1 in Swift, This week</title><link>https://github.com/Alamofire/Alamofire</link><description>&lt;p&gt;&lt;i&gt;Elegant HTTP Networking in Swift&lt;/i&gt;&lt;/p&gt;&lt;div id="readme" class="instapaper_body md" data-path="README.md"&gt;&lt;article class="markdown-body entry-content p-5" itemprop="text"&gt;&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="https://raw.githubusercontent.com/Alamofire/Alamofire/master/alamofire.png"&gt;&lt;img src="https://raw.githubusercontent.com/Alamofire/Alamofire/master/alamofire.png" alt="Alamofire: Elegant Networking in Swift" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href="https://travis-ci.org/Alamofire/Alamofire" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/077a1810116942b4f37ebd4aca3c88bad49c328d/68747470733a2f2f7472617669732d63692e6f72672f416c616d6f666972652f416c616d6f666972652e7376673f6272616e63683d6d6173746572" alt="Build Status" data-canonical-src="https://travis-ci.org/Alamofire/Alamofire.svg?branch=master" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://img.shields.io/cocoapods/v/Alamofire.svg" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/9bd6769e4a8458272a249358bec5e4e511ce6888/68747470733a2f2f696d672e736869656c64732e696f2f636f636f61706f64732f762f416c616d6f666972652e737667" alt="CocoaPods Compatible" data-canonical-src="https://img.shields.io/cocoapods/v/Alamofire.svg" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://github.com/Carthage/Carthage"&gt;&lt;img src="https://camo.githubusercontent.com/3dc8a44a2c3f7ccd5418008d1295aae48466c141/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f43617274686167652d636f6d70617469626c652d3442433531442e7376673f7374796c653d666c6174" alt="Carthage Compatible" data-canonical-src="https://img.shields.io/badge/Carthage-compatible-4BC51D.svg?style=flat" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://alamofire.github.io/Alamofire" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/7bbc7493c87f5447d92c2394201eec2f79ecbe1d/68747470733a2f2f696d672e736869656c64732e696f2f636f636f61706f64732f702f416c616d6f666972652e7376673f7374796c653d666c6174" alt="Platform" data-canonical-src="https://img.shields.io/cocoapods/p/Alamofire.svg?style=flat" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://twitter.com/AlamofireSF" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/778c845778219b6c8b8160fc1b8c2ac4b21b7aab/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f747769747465722d40416c616d6f6669726553462d626c75652e7376673f7374796c653d666c6174" alt="Twitter" data-canonical-src="https://img.shields.io/badge/twitter-@AlamofireSF-blue.svg?style=flat" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://gitter.im/Alamofire/Alamofire?utm_source=badge&amp;amp;utm_medium=badge&amp;amp;utm_campaign=pr-badge" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/3f34d662fe4592df9b54859f624c089c5386a3ab/68747470733a2f2f6261646765732e6769747465722e696d2f416c616d6f666972652f416c616d6f666972652e737667" alt="Gitter" data-canonical-src="https://badges.gitter.im/Alamofire/Alamofire.svg" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://www.codetriage.com/alamofire/alamofire" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/08b7810b0eb2f6121f6cc2417ffcfee1c7608acf/68747470733a2f2f7777772e636f64657472696167652e636f6d2f616c616d6f666972652f616c616d6f666972652f6261646765732f75736572732e737667" alt="Open Source Helpers" data-canonical-src="https://www.codetriage.com/alamofire/alamofire/badges/users.svg" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Alamofire is an HTTP networking library written in Swift.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;&lt;g-emoji class="g-emoji" alias="warning" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/26a0.png"&gt;⚠️&lt;/g-emoji&gt;&lt;g-emoji class="g-emoji" alias="warning" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/26a0.png"&gt;⚠️&lt;/g-emoji&gt;&lt;g-emoji class="g-emoji" alias="warning" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/26a0.png"&gt;⚠️&lt;/g-emoji&gt; WARNING &lt;g-emoji class="g-emoji" alias="warning" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/26a0.png"&gt;⚠️&lt;/g-emoji&gt;&lt;g-emoji class="g-emoji" alias="warning" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/26a0.png"&gt;⚠️&lt;/g-emoji&gt;&lt;g-emoji class="g-emoji" alias="warning" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/26a0.png"&gt;⚠️&lt;/g-emoji&gt;&lt;/strong&gt; This documentation is out of date during the Alamofire 5 beta process.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="#features"&gt;Features&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#component-libraries"&gt;Component Libraries&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#requirements"&gt;Requirements&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#migration-guides"&gt;Migration Guides&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#communication"&gt;Communication&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#installation"&gt;Installation&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/Alamofire/Alamofire/blob/master/Documentation/Usage.md#using-alamofire"&gt;Usage&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/Alamofire/Alamofire/blob/master/Documentation/Usage.md#introduction"&gt;&lt;strong&gt;Introduction -&lt;/strong&gt;&lt;/a&gt; &lt;a href="https://github.com/Alamofire/Alamofire/blob/master/Documentation/Usage.md#making-requests"&gt;Making Requests&lt;/a&gt;, &lt;a href="https://github.com/Alamofire/Alamofire/blob/master/Documentation/Usage.md#response-handling"&gt;Response Handling&lt;/a&gt;, &lt;a href="https://github.com/Alamofire/Alamofire/blob/master/Documentation/Usage.md#response-validation"&gt;Response Validation&lt;/a&gt;, &lt;a href="https://github.com/Alamofire/Alamofire/blob/master/Documentation/Usage.md#response-caching"&gt;Response Caching&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;HTTP -&lt;/strong&gt; &lt;a href="https://github.com/Alamofire/Alamofire/blob/master/Documentation/Usage.md#http-methods"&gt;HTTP Methods&lt;/a&gt;, &lt;a href="https://github.com/Alamofire/Alamofire/blob/master/Documentation/Usage.md##request-parameters-and-parameter-encoders"&gt;Parameters and Parameter Encoder&lt;/a&gt;, &lt;a href="https://github.com/Alamofire/Alamofire/blob/master/Documentation/Usage.md#http-headers"&gt;HTTP Headers&lt;/a&gt;, &lt;a href="https://github.com/Alamofire/Alamofire/blob/master/Documentation/Usage.md#authentication"&gt;Authentication&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Large Data -&lt;/strong&gt; &lt;a href="https://github.com/Alamofire/Alamofire/blob/master/Documentation/Usage.md#downloading-data-to-a-file"&gt;Downloading Data to a File&lt;/a&gt;, &lt;a href="https://github.com/Alamofire/Alamofire/blob/master/Documentation/Usage.md#uploading-data-to-a-server"&gt;Uploading Data to a Server&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Tools -&lt;/strong&gt; &lt;a href="https://github.com/Alamofire/Alamofire/blob/master/Documentation/Usage.md#statistical-metrics"&gt;Statistical Metrics&lt;/a&gt;, &lt;a href="https://github.com/Alamofire/Alamofire/blob/master/Documentation/Usage.md#curl-command-output"&gt;cURL Command Output&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/Alamofire/Alamofire/blob/master/Documentation/AdvancedUsage.md"&gt;Advanced Usage&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;URL Session -&lt;/strong&gt; &lt;a href="https://github.com/Alamofire/Alamofire/blob/master/Documentation/AdvancedUsage.md#session-manager"&gt;Session Manager&lt;/a&gt;, &lt;a href="https://github.com/Alamofire/Alamofire/blob/master/Documentation/AdvancedUsage.md#session-delegate"&gt;Session Delegate&lt;/a&gt;, &lt;a href="https://github.com/Alamofire/Alamofire/blob/master/Documentation/AdvancedUsage.md#request"&gt;Request&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Routing -&lt;/strong&gt; &lt;a href="https://github.com/Alamofire/Alamofire/blob/master/Documentation/AdvancedUsage.md#routing-requests"&gt;Routing Requests&lt;/a&gt;, &lt;a href="https://github.com/Alamofire/Alamofire/blob/master/Documentation/AdvancedUsage.md#adapting-and-retrying-requests"&gt;Adapting and Retrying Requests&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Model Objects -&lt;/strong&gt; &lt;a href="https://github.com/Alamofire/Alamofire/blob/master/Documentation/AdvancedUsage.md#custom-response-serialization"&gt;Custom Response Serialization&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Connection -&lt;/strong&gt; &lt;a href="https://github.com/Alamofire/Alamofire/blob/master/Documentation/AdvancedUsage.md#security"&gt;Security&lt;/a&gt;, &lt;a href="https://github.com/Alamofire/Alamofire/blob/master/Documentation/AdvancedUsage.md#network-reachability"&gt;Network Reachability&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="#open-radars"&gt;Open Radars&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#faq"&gt;FAQ&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#credits"&gt;Credits&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#donations"&gt;Donations&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#license"&gt;License&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-features" class="anchor" aria-hidden="true" href="#features"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Features&lt;/h2&gt;
&lt;ul class="contains-task-list"&gt;
&lt;li class="task-list-item"&gt;&lt;input type="checkbox" id="" disabled="" class="task-list-item-checkbox" checked=""&gt; Chainable Request / Response Methods&lt;/li&gt;
&lt;li class="task-list-item"&gt;&lt;input type="checkbox" id="" disabled="" class="task-list-item-checkbox" checked=""&gt; URL / JSON / plist Parameter Encoding&lt;/li&gt;
&lt;li class="task-list-item"&gt;&lt;input type="checkbox" id="" disabled="" class="task-list-item-checkbox" checked=""&gt; Upload File / Data / Stream / MultipartFormData&lt;/li&gt;
&lt;li class="task-list-item"&gt;&lt;input type="checkbox" id="" disabled="" class="task-list-item-checkbox" checked=""&gt; Download File using Request or Resume Data&lt;/li&gt;
&lt;li class="task-list-item"&gt;&lt;input type="checkbox" id="" disabled="" class="task-list-item-checkbox" checked=""&gt; Authentication with URLCredential&lt;/li&gt;
&lt;li class="task-list-item"&gt;&lt;input type="checkbox" id="" disabled="" class="task-list-item-checkbox" checked=""&gt; HTTP Response Validation&lt;/li&gt;
&lt;li class="task-list-item"&gt;&lt;input type="checkbox" id="" disabled="" class="task-list-item-checkbox" checked=""&gt; Upload and Download Progress Closures with Progress&lt;/li&gt;
&lt;li class="task-list-item"&gt;&lt;input type="checkbox" id="" disabled="" class="task-list-item-checkbox" checked=""&gt; cURL Command Output&lt;/li&gt;
&lt;li class="task-list-item"&gt;&lt;input type="checkbox" id="" disabled="" class="task-list-item-checkbox" checked=""&gt; Dynamically Adapt and Retry Requests&lt;/li&gt;
&lt;li class="task-list-item"&gt;&lt;input type="checkbox" id="" disabled="" class="task-list-item-checkbox" checked=""&gt; TLS Certificate and Public Key Pinning&lt;/li&gt;
&lt;li class="task-list-item"&gt;&lt;input type="checkbox" id="" disabled="" class="task-list-item-checkbox" checked=""&gt; Network Reachability&lt;/li&gt;
&lt;li class="task-list-item"&gt;&lt;input type="checkbox" id="" disabled="" class="task-list-item-checkbox" checked=""&gt; Comprehensive Unit and Integration Test Coverage&lt;/li&gt;
&lt;li class="task-list-item"&gt;&lt;input type="checkbox" id="" disabled="" class="task-list-item-checkbox" checked=""&gt; &lt;a href="https://alamofire.github.io/Alamofire" rel="nofollow"&gt;Complete Documentation&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-component-libraries" class="anchor" aria-hidden="true" href="#component-libraries"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Component Libraries&lt;/h2&gt;
&lt;p&gt;In order to keep Alamofire focused specifically on core networking implementations, additional component libraries have been created by the &lt;a href="https://github.com/Alamofire/Foundation"&gt;Alamofire Software Foundation&lt;/a&gt; to bring additional functionality to the Alamofire ecosystem.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/Alamofire/AlamofireImage"&gt;AlamofireImage&lt;/a&gt; - An image library including image response serializers, &lt;code&gt;UIImage&lt;/code&gt; and &lt;code&gt;UIImageView&lt;/code&gt; extensions, custom image filters, an auto-purging in-memory cache and a priority-based image downloading system.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/Alamofire/AlamofireNetworkActivityIndicator"&gt;AlamofireNetworkActivityIndicator&lt;/a&gt; - Controls the visibility of the network activity indicator on iOS using Alamofire. It contains configurable delay timers to help mitigate flicker and can support &lt;code&gt;URLSession&lt;/code&gt; instances not managed by Alamofire.&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-requirements" class="anchor" aria-hidden="true" href="#requirements"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Requirements&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;iOS 10.0+ / macOS 10.12+ / tvOS 10.0+ / watchOS 3.0+&lt;/li&gt;
&lt;li&gt;Xcode 10.2+&lt;/li&gt;
&lt;li&gt;Swift 5+&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-migration-guides" class="anchor" aria-hidden="true" href="#migration-guides"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Migration Guides&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Alamofire 5.0 Migration Guide: To be written!&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/Alamofire/Alamofire/blob/master/Documentation/Alamofire%204.0%20Migration%20Guide.md"&gt;Alamofire 4.0 Migration Guide&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/Alamofire/Alamofire/blob/master/Documentation/Alamofire%203.0%20Migration%20Guide.md"&gt;Alamofire 3.0 Migration Guide&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/Alamofire/Alamofire/blob/master/Documentation/Alamofire%202.0%20Migration%20Guide.md"&gt;Alamofire 2.0 Migration Guide&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-communication" class="anchor" aria-hidden="true" href="#communication"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Communication&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;If you &lt;strong&gt;need help with making network requests&lt;/strong&gt; using Alamofire, use &lt;a href="https://stackoverflow.com/questions/tagged/alamofire" rel="nofollow"&gt;Stack Overflow&lt;/a&gt; and tag &lt;code&gt;alamofire&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;If you need to &lt;strong&gt;find or understand an API&lt;/strong&gt;, check &lt;a href="http://alamofire.github.io/Alamofire/" rel="nofollow"&gt;our documentation&lt;/a&gt; or &lt;a href="https://developer.apple.com/documentation/foundation/url_loading_system" rel="nofollow"&gt;Apple's documentation for &lt;code&gt;URLSession&lt;/code&gt;&lt;/a&gt;, on top of which Alamofire is built.&lt;/li&gt;
&lt;li&gt;If you need &lt;strong&gt;help with an Alamofire feature&lt;/strong&gt;, use &lt;a href="https://forums.swift.org/c/related-projects/alamofire" rel="nofollow"&gt;our forum on swift.org&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;If you'd like to &lt;strong&gt;discuss Alamofire best practices&lt;/strong&gt;, use &lt;a href="https://forums.swift.org/c/related-projects/alamofire" rel="nofollow"&gt;our forum on swift.org&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;If you'd like to &lt;strong&gt;discuss a feature request&lt;/strong&gt;, use &lt;a href="https://forums.swift.org/c/related-projects/alamofire" rel="nofollow"&gt;our forum on swift.org&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;If you &lt;strong&gt;found a bug&lt;/strong&gt;, open an issue here on GitHub and follow the guide. The more detail the better!&lt;/li&gt;
&lt;li&gt;If you &lt;strong&gt;want to contribute&lt;/strong&gt;, submit a pull request.&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-installation" class="anchor" aria-hidden="true" href="#installation"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Installation&lt;/h2&gt;
&lt;h3&gt;&lt;a id="user-content-cocoapods" class="anchor" aria-hidden="true" href="#cocoapods"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;CocoaPods&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://cocoapods.org" rel="nofollow"&gt;CocoaPods&lt;/a&gt; is a dependency manager for Cocoa projects. For usage and installation instructions, visit their website. To integrate Alamofire into your Xcode project using CocoaPods, specify it in your &lt;code&gt;Podfile&lt;/code&gt;:&lt;/p&gt;
&lt;div class="highlight highlight-source-ruby"&gt;&lt;pre&gt;pod &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;Alamofire&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;~&amp;gt; 5.0.0-rc.3&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h3&gt;&lt;a id="user-content-carthage" class="anchor" aria-hidden="true" href="#carthage"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Carthage&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://github.com/Carthage/Carthage"&gt;Carthage&lt;/a&gt; is a decentralized dependency manager that builds your dependencies and provides you with binary frameworks. To integrate Alamofire into your Xcode project using Carthage, specify it in your &lt;code&gt;Cartfile&lt;/code&gt;:&lt;/p&gt;
&lt;pre lang="ogdl"&gt;&lt;code&gt;github "Alamofire/Alamofire" "5.0.0-rc.3"
&lt;/code&gt;&lt;/pre&gt;
&lt;h3&gt;&lt;a id="user-content-swift-package-manager" class="anchor" aria-hidden="true" href="#swift-package-manager"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Swift Package Manager&lt;/h3&gt;
&lt;p&gt;The &lt;a href="https://swift.org/package-manager/" rel="nofollow"&gt;Swift Package Manager&lt;/a&gt; is a tool for automating the distribution of Swift code and is integrated into the &lt;code&gt;swift&lt;/code&gt; compiler. It is in early development, but Alamofire does support its use on supported platforms.&lt;/p&gt;
&lt;p&gt;Once you have your Swift package set up, adding Alamofire as a dependency is as easy as adding it to the &lt;code&gt;dependencies&lt;/code&gt; value of your &lt;code&gt;Package.swift&lt;/code&gt;.&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;dependencies&lt;span class="pl-k"&gt;:&lt;/span&gt; [
    .&lt;span class="pl-c1"&gt;package&lt;/span&gt;(&lt;span class="pl-c1"&gt;url&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;https://github.com/Alamofire/Alamofire.git&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-c1"&gt;from&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;5.0.0-rc.3&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
]&lt;/pre&gt;&lt;/div&gt;
&lt;h3&gt;&lt;a id="user-content-manually" class="anchor" aria-hidden="true" href="#manually"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Manually&lt;/h3&gt;
&lt;p&gt;If you prefer not to use any of the aforementioned dependency managers, you can integrate Alamofire into your project manually.&lt;/p&gt;
&lt;h4&gt;&lt;a id="user-content-embedded-framework" class="anchor" aria-hidden="true" href="#embedded-framework"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Embedded Framework&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Open up Terminal, &lt;code&gt;cd&lt;/code&gt; into your top-level project directory, and run the following command "if" your project is not initialized as a git repository:&lt;/p&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt;$ git init&lt;/pre&gt;&lt;/div&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Add Alamofire as a git &lt;a href="https://git-scm.com/docs/git-submodule" rel="nofollow"&gt;submodule&lt;/a&gt; by running the following command:&lt;/p&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt;$ git submodule add https://github.com/Alamofire/Alamofire.git&lt;/pre&gt;&lt;/div&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Open the new &lt;code&gt;Alamofire&lt;/code&gt; folder, and drag the &lt;code&gt;Alamofire.xcodeproj&lt;/code&gt; into the Project Navigator of your application's Xcode project.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;It should appear nested underneath your application's blue project icon. Whether it is above or below all the other Xcode groups does not matter.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Select the &lt;code&gt;Alamofire.xcodeproj&lt;/code&gt; in the Project Navigator and verify the deployment target matches that of your application target.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Next, select your application project in the Project Navigator (blue project icon) to navigate to the target configuration window and select the application target under the "Targets" heading in the sidebar.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;In the tab bar at the top of that window, open the "General" panel.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Click on the &lt;code&gt;+&lt;/code&gt; button under the "Embedded Binaries" section.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;You will see two different &lt;code&gt;Alamofire.xcodeproj&lt;/code&gt; folders each with two different versions of the &lt;code&gt;Alamofire.framework&lt;/code&gt; nested inside a &lt;code&gt;Products&lt;/code&gt; folder.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;It does not matter which &lt;code&gt;Products&lt;/code&gt; folder you choose from, but it does matter whether you choose the top or bottom &lt;code&gt;Alamofire.framework&lt;/code&gt;.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Select the top &lt;code&gt;Alamofire.framework&lt;/code&gt; for iOS and the bottom one for macOS.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;You can verify which one you selected by inspecting the build log for your project. The build target for &lt;code&gt;Alamofire&lt;/code&gt; will be listed as either &lt;code&gt;Alamofire iOS&lt;/code&gt;, &lt;code&gt;Alamofire macOS&lt;/code&gt;, &lt;code&gt;Alamofire tvOS&lt;/code&gt; or &lt;code&gt;Alamofire watchOS&lt;/code&gt;.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;And that's it!&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;The &lt;code&gt;Alamofire.framework&lt;/code&gt; is automagically added as a target dependency, linked framework and embedded framework in a copy files build phase which is all you need to build on the simulator and a device.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-open-radars" class="anchor" aria-hidden="true" href="#open-radars"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Open Radars&lt;/h2&gt;
&lt;p&gt;The following radars have some effect on the current implementation of Alamofire.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://www.openradar.me/radar?id=5517037090635776" rel="nofollow"&gt;&lt;code&gt;rdar://21349340&lt;/code&gt;&lt;/a&gt; - Compiler throwing warning due to toll-free bridging issue in test case&lt;/li&gt;
&lt;li&gt;&lt;code&gt;rdar://26870455&lt;/code&gt; - Background URL Session Configurations do not work in the simulator&lt;/li&gt;
&lt;li&gt;&lt;code&gt;rdar://26849668&lt;/code&gt; - Some URLProtocol APIs do not properly handle &lt;code&gt;URLRequest&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-resolved-radars" class="anchor" aria-hidden="true" href="#resolved-radars"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Resolved Radars&lt;/h2&gt;
&lt;p&gt;The following radars have been resolved over time after being filed against the Alamofire project.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://www.openradar.me/radar?id=5010235949318144" rel="nofollow"&gt;&lt;code&gt;rdar://26761490&lt;/code&gt;&lt;/a&gt; - Swift string interpolation causing memory leak with common usage.
&lt;ul&gt;
&lt;li&gt;(Resolved): 9/1/17 in Xcode 9 beta 6.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="http://openradar.appspot.com/radar?id=4942308441063424" rel="nofollow"&gt;&lt;code&gt;rdar://36082113&lt;/code&gt;&lt;/a&gt; - &lt;code&gt;URLSessionTaskMetrics&lt;/code&gt; failing to link on watchOS 3.0+
&lt;ul&gt;
&lt;li&gt;(Resolved): Just add &lt;code&gt;CFNetwork&lt;/code&gt; to your linked frameworks.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-faq" class="anchor" aria-hidden="true" href="#faq"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;FAQ&lt;/h2&gt;
&lt;h3&gt;&lt;a id="user-content-whats-the-origin-of-the-name-alamofire" class="anchor" aria-hidden="true" href="#whats-the-origin-of-the-name-alamofire"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;What's the origin of the name Alamofire?&lt;/h3&gt;
&lt;p&gt;Alamofire is named after the &lt;a href="https://aggie-horticulture.tamu.edu/wildseed/alamofire.html" rel="nofollow"&gt;Alamo Fire flower&lt;/a&gt;, a hybrid variant of the Bluebonnet, the official state flower of Texas.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-credits" class="anchor" aria-hidden="true" href="#credits"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Credits&lt;/h2&gt;
&lt;p&gt;Alamofire is owned and maintained by the &lt;a href="http://alamofire.org" rel="nofollow"&gt;Alamofire Software Foundation&lt;/a&gt;. You can follow them on Twitter at &lt;a href="https://twitter.com/AlamofireSF" rel="nofollow"&gt;@AlamofireSF&lt;/a&gt; for project updates and releases.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-security-disclosure" class="anchor" aria-hidden="true" href="#security-disclosure"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Security Disclosure&lt;/h3&gt;
&lt;p&gt;If you believe you have identified a security vulnerability with Alamofire, you should report it as soon as possible via email to &lt;a href="mailto:security@alamofire.org"&gt;security@alamofire.org&lt;/a&gt;. Please do not post it to a public issue tracker.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-donations" class="anchor" aria-hidden="true" href="#donations"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Donations&lt;/h2&gt;
&lt;p&gt;The &lt;a href="https://github.com/Alamofire/Foundation#members"&gt;ASF&lt;/a&gt; is looking to raise money to officially stay registered as a federal non-profit organization.
Registering will allow us members to gain some legal protections and also allow us to put donations to use, tax free.
Donating to the ASF will enable us to:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Pay our yearly legal fees to keep the non-profit in good status&lt;/li&gt;
&lt;li&gt;Pay for our mail servers to help us stay on top of all questions and security issues&lt;/li&gt;
&lt;li&gt;Potentially fund test servers to make it easier for us to test the edge cases&lt;/li&gt;
&lt;li&gt;Potentially fund developers to work on one of our projects full-time&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;The community adoption of the ASF libraries has been amazing.
We are greatly humbled by your enthusiasm around the projects, and want to continue to do everything we can to move the needle forward.
With your continued support, the ASF will be able to improve its reach and also provide better legal safety for the core members.
If you use any of our libraries for work, see if your employers would be interested in donating.
Any amount you can donate today to help us reach our goal would be greatly appreciated.&lt;/p&gt;
&lt;p&gt;&lt;a href="https://www.paypal.com/cgi-bin/webscr?cmd=_s-xclick&amp;amp;hosted_button_id=W34WPEE74APJQ" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/f896f7d176663a1559376bb56aac4bdbbbe85ed1/68747470733a2f2f7777772e70617970616c6f626a656374732e636f6d2f656e5f55532f692f62746e2f62746e5f646f6e61746543435f4c472e676966" alt="paypal" data-canonical-src="https://www.paypalobjects.com/en_US/i/btn/btn_donateCC_LG.gif" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-license" class="anchor" aria-hidden="true" href="#license"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;License&lt;/h2&gt;
&lt;p&gt;Alamofire is released under the MIT license. &lt;a href="https://github.com/Alamofire/Alamofire/blob/master/LICENSE"&gt;See LICENSE&lt;/a&gt; for details.&lt;/p&gt;
&lt;/article&gt;&lt;/div&gt;</description><author>Alamofire</author><guid isPermaLink="false">https://github.com/Alamofire/Alamofire</guid><pubDate>Fri, 08 Nov 2019 00:01:00 GMT</pubDate></item><item><title>onevcat/Kingfisher #2 in Swift, This week</title><link>https://github.com/onevcat/Kingfisher</link><description>&lt;p&gt;&lt;i&gt;A lightweight, pure-Swift library for downloading and caching images from the web.&lt;/i&gt;&lt;/p&gt;&lt;div id="readme" class="instapaper_body md" data-path="README.md"&gt;&lt;article class="markdown-body entry-content p-5" itemprop="text"&gt;&lt;p align="center"&gt;
&lt;a target="_blank" rel="noopener noreferrer" href="https://raw.githubusercontent.com/onevcat/Kingfisher/master/images/logo.png"&gt;&lt;img src="https://raw.githubusercontent.com/onevcat/Kingfisher/master/images/logo.png" alt="Kingfisher" title="Kingfisher" width="557" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;/p&gt;
&lt;p align="center"&gt;
&lt;a href="https://travis-ci.org/onevcat/Kingfisher" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/94d1c7e3d23286cf6f2adae5dcedc88358743702/68747470733a2f2f696d672e736869656c64732e696f2f7472617669732f6f6e65766361742f4b696e676669736865722f6d61737465722e737667" data-canonical-src="https://img.shields.io/travis/onevcat/Kingfisher/master.svg" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="http://onevcat.github.io/Kingfisher/" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/0f5426bc074b33d5a330b98e1dce5bf3d87e5f94/68747470733a2f2f696d672e736869656c64732e696f2f636f636f61706f64732f762f4b696e676669736865722e7376673f7374796c653d666c6174" data-canonical-src="https://img.shields.io/cocoapods/v/Kingfisher.svg?style=flat" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://github.com/Carthage/Carthage/"&gt;&lt;img src="https://camo.githubusercontent.com/3dc8a44a2c3f7ccd5418008d1295aae48466c141/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f43617274686167652d636f6d70617469626c652d3442433531442e7376673f7374796c653d666c6174" data-canonical-src="https://img.shields.io/badge/Carthage-compatible-4BC51D.svg?style=flat" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://swift.org/package-manager/" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/378b1808fd201a4bb4c9a2e8f78ac6322bca15f2/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f53504d2d737570706f727465642d4445354334332e7376673f7374796c653d666c6174" data-canonical-src="https://img.shields.io/badge/SPM-supported-DE5C43.svg?style=flat" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://github.com/JamitLabs/Accio"&gt;&lt;img src="https://camo.githubusercontent.com/e502cdc2b27c1f2b2590f061d37b984ba3957c26/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f416363696f2d737570706f727465642d3041374346352e7376673f7374796c653d666c6174" data-canonical-src="https://img.shields.io/badge/Accio-supported-0A7CF5.svg?style=flat" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;br&gt;
&lt;a href="https://raw.githubusercontent.com/onevcat/Kingfisher/master/LICENSE" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/7813112d6e92298f067080fa7f1039037de6809e/68747470733a2f2f696d672e736869656c64732e696f2f636f636f61706f64732f6c2f4b696e676669736865722e7376673f7374796c653d666c6174" data-canonical-src="https://img.shields.io/cocoapods/l/Kingfisher.svg?style=flat" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="http://onevcat.github.io/Kingfisher/" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/770175f6c01d89c84a020706126a9e6399ff76c4/68747470733a2f2f696d672e736869656c64732e696f2f636f636f61706f64732f702f4b696e676669736865722e7376673f7374796c653d666c6174" data-canonical-src="https://img.shields.io/cocoapods/p/Kingfisher.svg?style=flat" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="#backers" alt="sponsors on Open Collective"&gt;&lt;img src="https://camo.githubusercontent.com/e71884fe161a4e78c2519d99a629add57501a45d/68747470733a2f2f6f70656e636f6c6c6563746976652e636f6d2f4b696e676669736865722f6261636b6572732f62616467652e737667" data-canonical-src="https://opencollective.com/Kingfisher/backers/badge.svg" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="#sponsors" alt="Sponsors on Open Collective"&gt;&lt;img src="https://camo.githubusercontent.com/3545542879b4432fd8748e3d007d642226b334ce/68747470733a2f2f6f70656e636f6c6c6563746976652e636f6d2f4b696e676669736865722f73706f6e736f72732f62616467652e737667" data-canonical-src="https://opencollective.com/Kingfisher/sponsors/badge.svg" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;Kingfisher is a powerful, pure-Swift library for downloading and caching images from the web. It provides you a chance to use a pure-Swift way to work with remote images in your next app.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-features" class="anchor" aria-hidden="true" href="#features"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Features&lt;/h2&gt;
&lt;ul class="contains-task-list"&gt;
&lt;li class="task-list-item"&gt;&lt;input type="checkbox" id="" disabled="" class="task-list-item-checkbox" checked=""&gt; Asynchronous image downloading and caching.&lt;/li&gt;
&lt;li class="task-list-item"&gt;&lt;input type="checkbox" id="" disabled="" class="task-list-item-checkbox" checked=""&gt; Loading image from either &lt;code&gt;URLSession&lt;/code&gt;-based networking or local provided data.&lt;/li&gt;
&lt;li class="task-list-item"&gt;&lt;input type="checkbox" id="" disabled="" class="task-list-item-checkbox" checked=""&gt; Useful image processors and filters provided.&lt;/li&gt;
&lt;li class="task-list-item"&gt;&lt;input type="checkbox" id="" disabled="" class="task-list-item-checkbox" checked=""&gt; Multiple-layer hybrid cache for both memory and disk.&lt;/li&gt;
&lt;li class="task-list-item"&gt;&lt;input type="checkbox" id="" disabled="" class="task-list-item-checkbox" checked=""&gt; Fine control on cache behavior. Customizable expiration date and size limit.&lt;/li&gt;
&lt;li class="task-list-item"&gt;&lt;input type="checkbox" id="" disabled="" class="task-list-item-checkbox" checked=""&gt; Cancelable downloading and auto-reusing previous downloaded content to improve performance.&lt;/li&gt;
&lt;li class="task-list-item"&gt;&lt;input type="checkbox" id="" disabled="" class="task-list-item-checkbox" checked=""&gt; Independent components. Use the downloader, caching system and image processors separately as you need.&lt;/li&gt;
&lt;li class="task-list-item"&gt;&lt;input type="checkbox" id="" disabled="" class="task-list-item-checkbox" checked=""&gt; Prefetching images and showing them from cache to boost your app.&lt;/li&gt;
&lt;li class="task-list-item"&gt;&lt;input type="checkbox" id="" disabled="" class="task-list-item-checkbox" checked=""&gt; View extensions for &lt;code&gt;UIImageView&lt;/code&gt;, &lt;code&gt;NSImageView&lt;/code&gt;, &lt;code&gt;NSButton&lt;/code&gt; and &lt;code&gt;UIButton&lt;/code&gt; to directly set an image from a URL.&lt;/li&gt;
&lt;li class="task-list-item"&gt;&lt;input type="checkbox" id="" disabled="" class="task-list-item-checkbox" checked=""&gt; Built-in transition animation when setting images.&lt;/li&gt;
&lt;li class="task-list-item"&gt;&lt;input type="checkbox" id="" disabled="" class="task-list-item-checkbox" checked=""&gt; Customizable placeholder and indicator while loading images.&lt;/li&gt;
&lt;li class="task-list-item"&gt;&lt;input type="checkbox" id="" disabled="" class="task-list-item-checkbox" checked=""&gt; Extensible image processing and image format easily.&lt;/li&gt;
&lt;li class="task-list-item"&gt;&lt;input type="checkbox" id="" disabled="" class="task-list-item-checkbox" checked=""&gt; SwiftUI support.&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;&lt;a id="user-content-kingfisher-101" class="anchor" aria-hidden="true" href="#kingfisher-101"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Kingfisher 101&lt;/h3&gt;
&lt;p&gt;The simplest use-case is setting an image to an image view with the &lt;code&gt;UIImageView&lt;/code&gt; extension:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;let&lt;/span&gt; url &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;URL&lt;/span&gt;(&lt;span class="pl-c1"&gt;string&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;https://example.com/image.png&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
imageView.&lt;span class="pl-smi"&gt;kf&lt;/span&gt;.&lt;span class="pl-c1"&gt;setImage&lt;/span&gt;(&lt;span class="pl-c1"&gt;with&lt;/span&gt;: url)&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Kingfisher will download the image from &lt;code&gt;url&lt;/code&gt;, send it to both memory cache and disk cache, and display it in &lt;code&gt;imageView&lt;/code&gt;. When you set with the same URL later, the image will be retrieved from cache and shown immediately.&lt;/p&gt;
&lt;p&gt;It also works if you use SwiftUI:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;import&lt;/span&gt; &lt;span class="pl-en"&gt;KingfisherSwiftUI&lt;/span&gt;

&lt;span class="pl-k"&gt;var&lt;/span&gt; body&lt;span class="pl-k"&gt;:&lt;/span&gt; some View {
    &lt;span class="pl-c1"&gt;KFImage&lt;/span&gt;(&lt;span class="pl-c1"&gt;URL&lt;/span&gt;(&lt;span class="pl-c1"&gt;string&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;https://example.com/image.png&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)&lt;span class="pl-k"&gt;!&lt;/span&gt;)
}&lt;/pre&gt;&lt;/div&gt;
&lt;h3&gt;&lt;a id="user-content-a-more-advanced-example" class="anchor" aria-hidden="true" href="#a-more-advanced-example"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;A More Advanced Example&lt;/h3&gt;
&lt;p&gt;With the powerful options, you can do hard tasks with Kingfisher in a simple way. For example, the code below:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Downloads a high-resolution image.&lt;/li&gt;
&lt;li&gt;Downsamples it to match the image view size.&lt;/li&gt;
&lt;li&gt;Makes it round cornered with a given radius.&lt;/li&gt;
&lt;li&gt;Shows a system indicator and a placeholder image while downloading.&lt;/li&gt;
&lt;li&gt;When prepared, it animates the small thumbnail image with a "fade in" effect.&lt;/li&gt;
&lt;li&gt;The original large image is also cached to disk for later use, to get rid of downloading it again in a detail view.&lt;/li&gt;
&lt;li&gt;A console log is printed when the task finishes, either for success or failure.&lt;/li&gt;
&lt;/ol&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;let&lt;/span&gt; url &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;URL&lt;/span&gt;(&lt;span class="pl-c1"&gt;string&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;https://example.com/high_resolution_image.png&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
&lt;span class="pl-k"&gt;let&lt;/span&gt; processor &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;DownsamplingImageProcessor&lt;/span&gt;(&lt;span class="pl-c1"&gt;size&lt;/span&gt;: imageView.&lt;span class="pl-c1"&gt;size&lt;/span&gt;)
             &lt;span class="pl-k"&gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="pl-c1"&gt;RoundCornerImageProcessor&lt;/span&gt;(&lt;span class="pl-c1"&gt;cornerRadius&lt;/span&gt;: &lt;span class="pl-c1"&gt;20&lt;/span&gt;)
imageView.&lt;span class="pl-smi"&gt;kf&lt;/span&gt;.&lt;span class="pl-smi"&gt;indicatorType&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; .&lt;span class="pl-smi"&gt;activity&lt;/span&gt;
imageView.&lt;span class="pl-smi"&gt;kf&lt;/span&gt;.&lt;span class="pl-c1"&gt;setImage&lt;/span&gt;(
    &lt;span class="pl-c1"&gt;with&lt;/span&gt;: url,
    &lt;span class="pl-c1"&gt;placeholder&lt;/span&gt;: &lt;span class="pl-c1"&gt;UIImage&lt;/span&gt;(&lt;span class="pl-c1"&gt;named&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;placeholderImage&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;),
    &lt;span class="pl-c1"&gt;options&lt;/span&gt;: [
        .&lt;span class="pl-c1"&gt;processor&lt;/span&gt;(processor),
        .&lt;span class="pl-c1"&gt;scaleFactor&lt;/span&gt;(UIScreen.&lt;span class="pl-smi"&gt;main&lt;/span&gt;.&lt;span class="pl-smi"&gt;scale&lt;/span&gt;),
        .&lt;span class="pl-c1"&gt;transition&lt;/span&gt;(.&lt;span class="pl-c1"&gt;fade&lt;/span&gt;(&lt;span class="pl-c1"&gt;1&lt;/span&gt;)),
        .&lt;span class="pl-smi"&gt;cacheOriginalImage&lt;/span&gt;
    ])
{
    result &lt;span class="pl-k"&gt;in&lt;/span&gt;
    &lt;span class="pl-k"&gt;switch&lt;/span&gt; result {
    &lt;span class="pl-k"&gt;case&lt;/span&gt; .&lt;span class="pl-c1"&gt;success&lt;/span&gt;(&lt;span class="pl-k"&gt;let&lt;/span&gt; value)&lt;span class="pl-k"&gt;:&lt;/span&gt;
        &lt;span class="pl-c1"&gt;print&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;Task done for: &lt;span class="pl-pse"&gt;\(&lt;/span&gt;&lt;span class="pl-s1"&gt;value.&lt;span class="pl-smi"&gt;source&lt;/span&gt;.&lt;span class="pl-c1"&gt;url&lt;/span&gt;&lt;span class="pl-k"&gt;?&lt;/span&gt;.&lt;span class="pl-smi"&gt;absoluteString&lt;/span&gt; &lt;span class="pl-k"&gt;??&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="pl-pse"&gt;&lt;span class="pl-s1"&gt;)&lt;/span&gt;&lt;/span&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
    &lt;span class="pl-k"&gt;case&lt;/span&gt; .&lt;span class="pl-c1"&gt;failure&lt;/span&gt;(&lt;span class="pl-k"&gt;let&lt;/span&gt; error)&lt;span class="pl-k"&gt;:&lt;/span&gt;
        &lt;span class="pl-c1"&gt;print&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;Job failed: &lt;span class="pl-pse"&gt;\(&lt;/span&gt;&lt;span class="pl-s1"&gt;error.&lt;span class="pl-smi"&gt;localizedDescription&lt;/span&gt;&lt;/span&gt;&lt;span class="pl-pse"&gt;&lt;span class="pl-s1"&gt;)&lt;/span&gt;&lt;/span&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
    }
}&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;It is really a very common situation I can meet in my daily work. Think about how many lines you need to write without Kingfisher. You will fall in love with it if you give it a try!&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-learn-more" class="anchor" aria-hidden="true" href="#learn-more"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Learn More&lt;/h3&gt;
&lt;p&gt;To learn the using of Kingfisher by more examples, take a look at the &lt;a href="https://github.com/onevcat/Kingfisher/wiki/Cheat-Sheet"&gt;Cheat Sheet&lt;/a&gt;. There we summarized most common tasks in Kingfisher, you can get a better idea on what this framework can do. There are also some tips for performance in the same page, remember to check them too.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-requirements" class="anchor" aria-hidden="true" href="#requirements"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Requirements&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;iOS 10.0+ / macOS 10.12+ / tvOS 10.0+ / watchOS 3.0+&lt;/li&gt;
&lt;li&gt;Swift 4.0+&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;a href="https://github.com/onevcat/Kingfisher/wiki/Kingfisher-5.0-Migration-Guide"&gt;Kingfisher 5.0 Migration&lt;/a&gt; - Kingfisher 5.x is NOT fully compatible with version 4.x. However, the migration is not difficult. Depending on your use cases, it may take no effect or several minutes to modify your existing code for the new version. Please follow the &lt;a href="https://github.com/onevcat/Kingfisher/wiki/Kingfisher-5.0-Migration-Guide"&gt;migration guide&lt;/a&gt; when you prepare to upgrade Kingfisher in your project.&lt;/p&gt;
&lt;p&gt;If you are using an even earlier version, see the guides below to know the steps for migrating.&lt;/p&gt;
&lt;blockquote&gt;
&lt;ul&gt;
&lt;li&gt;Kingfisher 4.0 Migration - Kingfisher 3.x should be source compatible to Kingfisher 4. The reason for a major update is that we need to specify the Swift version explicitly for Xcode. All deprecated methods in Kingfisher 3 has been removed, so please ensure you have no warning left before you migrate from Kingfisher 3 to Kingfisher 4. If you have any trouble in migrating, please open an issue to discuss.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/onevcat/Kingfisher/wiki/Kingfisher-3.0-Migration-Guide"&gt;Kingfisher 3.0 Migration&lt;/a&gt; - If you are upgrading to Kingfisher 3.x from an earlier version, please read this for more information.&lt;/li&gt;
&lt;/ul&gt;
&lt;/blockquote&gt;
&lt;h2&gt;&lt;a id="user-content-next-steps" class="anchor" aria-hidden="true" href="#next-steps"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Next Steps&lt;/h2&gt;
&lt;p&gt;We prepared a &lt;a href="https://github.com/onevcat/Kingfisher/wiki"&gt;wiki page&lt;/a&gt;. You can find tons of useful things there.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/onevcat/Kingfisher/wiki/Installation-Guide"&gt;Installation Guide&lt;/a&gt; - Follow it to integrate Kingfisher into your project.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/onevcat/Kingfisher/wiki/Cheat-Sheet"&gt;Cheat Sheet&lt;/a&gt;- Curious about what Kingfisher could do and how would it look like when used in your project? See this page for useful code snippets. If you are already familiar with Kingfisher, you could also learn new tricks to improve the way you use Kingfisher!&lt;/li&gt;
&lt;li&gt;&lt;a href="http://onevcat.github.io/Kingfisher/" rel="nofollow"&gt;API Reference&lt;/a&gt; - Lastly, please remember to read the full whenever you may need a more detailed reference.&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-other" class="anchor" aria-hidden="true" href="#other"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Other&lt;/h2&gt;
&lt;h3&gt;&lt;a id="user-content-future-of-kingfisher" class="anchor" aria-hidden="true" href="#future-of-kingfisher"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Future of Kingfisher&lt;/h3&gt;
&lt;p&gt;I want to keep Kingfisher lightweight. This framework will focus on providing a simple solution for downloading and caching images. This doesn’t mean the framework can’t be improved. Kingfisher is far from perfect, so necessary and useful updates will be made to make it better.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-developments-and-tests" class="anchor" aria-hidden="true" href="#developments-and-tests"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Developments and Tests&lt;/h3&gt;
&lt;p&gt;Any contributing and pull requests are warmly welcome. However, before you plan to implement some features or try to fix an uncertain issue, it is recommended to open a discussion first. It would be appreciated if your pull requests could build and with all tests green. :)&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-about-the-logo" class="anchor" aria-hidden="true" href="#about-the-logo"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;About the logo&lt;/h3&gt;
&lt;p&gt;The logo of Kingfisher is inspired by &lt;a href="http://en.wikipedia.org/wiki/Tangram" rel="nofollow"&gt;Tangram (七巧板)&lt;/a&gt;, a dissection puzzle consisting of seven flat shapes from China. I believe she's a kingfisher bird instead of a swift, but someone insists that she is a pigeon. I guess I should give her a name. Hi, guys, do you have any suggestions?&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-contact" class="anchor" aria-hidden="true" href="#contact"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Contact&lt;/h3&gt;
&lt;p&gt;Follow and contact me on &lt;a href="http://twitter.com/onevcat" rel="nofollow"&gt;Twitter&lt;/a&gt; or &lt;a href="http://weibo.com/onevcat" rel="nofollow"&gt;Sina Weibo&lt;/a&gt;. If you find an issue, just &lt;a href="https://github.com/onevcat/Kingfisher/issues/new"&gt;open a ticket&lt;/a&gt;. Pull requests are warmly welcome as well.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-contributors" class="anchor" aria-hidden="true" href="#contributors"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Contributors&lt;/h2&gt;
&lt;p&gt;This project exists thanks to all the people who contribute. &lt;a href="https://github.com/onevcat/Kingfisher/blob/master/CONTRIBUTING.md"&gt;[Contribute]&lt;/a&gt;.
&lt;a href="https://opencollective.com/kingfisher#backer" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/22cc36c7a90c6c32d8699076d341051dc2884508/68747470733a2f2f6f70656e636f6c6c6563746976652e636f6d2f6b696e676669736865722f636f6e7472696275746f72732e7376673f77696474683d383930" data-canonical-src="https://opencollective.com/kingfisher/contributors.svg?width=890" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-backers" class="anchor" aria-hidden="true" href="#backers"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Backers&lt;/h2&gt;
&lt;p&gt;Thank you to all our backers! Your support is really important for the project and encourages us to continue. &lt;g-emoji class="g-emoji" alias="pray" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f64f.png"&gt;🙏&lt;/g-emoji&gt; [&lt;a href="https://opencollective.com/kingfisher#backer" rel="nofollow"&gt;Become a backer&lt;/a&gt;]&lt;/p&gt;
&lt;p&gt;&lt;a href="https://opencollective.com/kingfisher#backers" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/52ce3d5e2601e5e98842aef1a393677fc5baca9a/68747470733a2f2f6f70656e636f6c6c6563746976652e636f6d2f6b696e676669736865722f6261636b6572732e7376673f77696474683d383930" data-canonical-src="https://opencollective.com/kingfisher/backers.svg?width=890" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-sponsors" class="anchor" aria-hidden="true" href="#sponsors"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Sponsors&lt;/h2&gt;
&lt;p&gt;Support this project by becoming a sponsor. Your logo will show up here with a link to your website. [&lt;a href="https://opencollective.com/kingfisher#sponsor" rel="nofollow"&gt;Become a sponsor&lt;/a&gt;]&lt;/p&gt;
&lt;p&gt;&lt;a href="https://opencollective.com/kingfisher/sponsor/0/website" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/29f631c84bf7ef3b91920939f068daf61b731dc3/68747470733a2f2f6f70656e636f6c6c6563746976652e636f6d2f6b696e676669736865722f73706f6e736f722f302f6176617461722e737667" data-canonical-src="https://opencollective.com/kingfisher/sponsor/0/avatar.svg" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://opencollective.com/kingfisher/sponsor/1/website" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/98e3049fb9dd378e709dbe634b0dd4215d16a0ed/68747470733a2f2f6f70656e636f6c6c6563746976652e636f6d2f6b696e676669736865722f73706f6e736f722f312f6176617461722e737667" data-canonical-src="https://opencollective.com/kingfisher/sponsor/1/avatar.svg" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://opencollective.com/kingfisher/sponsor/2/website" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/ab53edfb00b9619d7715f24b40cdc0afd15ad807/68747470733a2f2f6f70656e636f6c6c6563746976652e636f6d2f6b696e676669736865722f73706f6e736f722f322f6176617461722e737667" data-canonical-src="https://opencollective.com/kingfisher/sponsor/2/avatar.svg" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://opencollective.com/kingfisher/sponsor/3/website" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/4a73b9b27386238fb79b153254b3cd12880f0b06/68747470733a2f2f6f70656e636f6c6c6563746976652e636f6d2f6b696e676669736865722f73706f6e736f722f332f6176617461722e737667" data-canonical-src="https://opencollective.com/kingfisher/sponsor/3/avatar.svg" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://opencollective.com/kingfisher/sponsor/4/website" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/c8f68602f268e2e561cc0762ae3bda4a0f0eddbd/68747470733a2f2f6f70656e636f6c6c6563746976652e636f6d2f6b696e676669736865722f73706f6e736f722f342f6176617461722e737667" data-canonical-src="https://opencollective.com/kingfisher/sponsor/4/avatar.svg" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://opencollective.com/kingfisher/sponsor/5/website" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/d36be979bf4a1a52d6ada492ded2e7d2c5e870ec/68747470733a2f2f6f70656e636f6c6c6563746976652e636f6d2f6b696e676669736865722f73706f6e736f722f352f6176617461722e737667" data-canonical-src="https://opencollective.com/kingfisher/sponsor/5/avatar.svg" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://opencollective.com/kingfisher/sponsor/6/website" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/2976cc566e20343f507af2305c6c9265a6bbb876/68747470733a2f2f6f70656e636f6c6c6563746976652e636f6d2f6b696e676669736865722f73706f6e736f722f362f6176617461722e737667" data-canonical-src="https://opencollective.com/kingfisher/sponsor/6/avatar.svg" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://opencollective.com/kingfisher/sponsor/7/website" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/041d09519b90b022d698d686ab7de6233a67c6e9/68747470733a2f2f6f70656e636f6c6c6563746976652e636f6d2f6b696e676669736865722f73706f6e736f722f372f6176617461722e737667" data-canonical-src="https://opencollective.com/kingfisher/sponsor/7/avatar.svg" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://opencollective.com/kingfisher/sponsor/8/website" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/996a9cb4dc04a2c201adeaa7cef7928b0128d063/68747470733a2f2f6f70656e636f6c6c6563746976652e636f6d2f6b696e676669736865722f73706f6e736f722f382f6176617461722e737667" data-canonical-src="https://opencollective.com/kingfisher/sponsor/8/avatar.svg" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://opencollective.com/kingfisher/sponsor/9/website" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/f4dc13b033ee37727b920cb4d9e973a1de2aa17b/68747470733a2f2f6f70656e636f6c6c6563746976652e636f6d2f6b696e676669736865722f73706f6e736f722f392f6176617461722e737667" data-canonical-src="https://opencollective.com/kingfisher/sponsor/9/avatar.svg" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-license" class="anchor" aria-hidden="true" href="#license"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;License&lt;/h3&gt;
&lt;p&gt;Kingfisher is released under the MIT license. See LICENSE for details.&lt;/p&gt;
&lt;/article&gt;&lt;/div&gt;</description><author>onevcat</author><guid isPermaLink="false">https://github.com/onevcat/Kingfisher</guid><pubDate>Fri, 08 Nov 2019 00:02:00 GMT</pubDate></item><item><title>stephencelis/SQLite.swift #3 in Swift, This week</title><link>https://github.com/stephencelis/SQLite.swift</link><description>&lt;p&gt;&lt;i&gt;A type-safe, Swift-language layer over SQLite3.&lt;/i&gt;&lt;/p&gt;&lt;div id="readme" class="instapaper_body md" data-path="README.md"&gt;&lt;article class="markdown-body entry-content p-5" itemprop="text"&gt;&lt;h1&gt;&lt;a id="user-content-sqliteswift" class="anchor" aria-hidden="true" href="#sqliteswift"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;SQLite.swift&lt;/h1&gt;
&lt;p&gt;&lt;a href="https://travis-ci.org/stephencelis/SQLite.swift" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/f4298cc67f5a1d22ed1da066e9380c82b83967e6/68747470733a2f2f696d672e736869656c64732e696f2f7472617669732f7374657068656e63656c69732f53514c6974652e73776966742f6d61737465722e7376673f7374796c653d666c6174" alt="Build Status" data-canonical-src="https://img.shields.io/travis/stephencelis/SQLite.swift/master.svg?style=flat" style="max-width:100%;"&gt;&lt;/a&gt; &lt;a href="http://cocoadocs.org/docsets/SQLite.swift" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/8db5f0a449dd0ace01a4416caeee3bdbe39dda56/68747470733a2f2f636f636f61706f642d6261646765732e6865726f6b756170702e636f6d2f762f53514c6974652e73776966742f62616467652e706e67" alt="CocoaPods Version" data-canonical-src="https://cocoapod-badges.herokuapp.com/v/SQLite.swift/badge.png" style="max-width:100%;"&gt;&lt;/a&gt; &lt;a href="https://developer.apple.com/swift/" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/c71f82ee3309bc14cc904fb1a628903768e1ac39/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f73776966742d352d6f72616e67652e7376673f7374796c653d666c6174" alt="Swift5 compatible" data-canonical-src="https://img.shields.io/badge/swift-5-orange.svg?style=flat" style="max-width:100%;"&gt;&lt;/a&gt; &lt;a href="http://cocoadocs.org/docsets/SQLite.swift" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/7d02c04a141356f85360e0575b3ed52de7cb48ec/68747470733a2f2f636f636f61706f642d6261646765732e6865726f6b756170702e636f6d2f702f53514c6974652e73776966742f62616467652e706e67" alt="Platform" data-canonical-src="https://cocoapod-badges.herokuapp.com/p/SQLite.swift/badge.png" style="max-width:100%;"&gt;&lt;/a&gt; &lt;a href="https://github.com/Carthage/Carthage"&gt;&lt;img src="https://camo.githubusercontent.com/3dc8a44a2c3f7ccd5418008d1295aae48466c141/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f43617274686167652d636f6d70617469626c652d3442433531442e7376673f7374796c653d666c6174" alt="Carthage compatible" data-canonical-src="https://img.shields.io/badge/Carthage-compatible-4BC51D.svg?style=flat" style="max-width:100%;"&gt;&lt;/a&gt; &lt;a href="https://gitter.im/stephencelis/SQLite.swift" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/a042027a6ca9b7219bd8ebac4d8172d9171355e5/68747470733a2f2f6261646765732e6769747465722e696d2f7374657068656e63656c69732f53514c6974652e73776966742e737667" alt="Join the chat at https://gitter.im/stephencelis/SQLite.swift" data-canonical-src="https://badges.gitter.im/stephencelis/SQLite.swift.svg" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;A type-safe, &lt;a href="https://swift.org/" rel="nofollow"&gt;Swift&lt;/a&gt;-language layer over &lt;a href="http://www.sqlite.org" rel="nofollow"&gt;SQLite3&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;&lt;a href="https://github.com/stephencelis/SQLite.swift"&gt;SQLite.swift&lt;/a&gt; provides compile-time confidence in SQL statement
syntax &lt;em&gt;and&lt;/em&gt; intent.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-features" class="anchor" aria-hidden="true" href="#features"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Features&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;A pure-Swift interface&lt;/li&gt;
&lt;li&gt;A type-safe, optional-aware SQL expression builder&lt;/li&gt;
&lt;li&gt;A flexible, chainable, lazy-executing query layer&lt;/li&gt;
&lt;li&gt;Automatically-typed data access&lt;/li&gt;
&lt;li&gt;A lightweight, uncomplicated query and parameter binding interface&lt;/li&gt;
&lt;li&gt;Developer-friendly error handling and debugging&lt;/li&gt;
&lt;li&gt;&lt;a href="Documentation/Index.md#full-text-search"&gt;Full-text search&lt;/a&gt; support&lt;/li&gt;
&lt;li&gt;&lt;a href="Documentation/Index.md#sqliteswift-documentation"&gt;Well-documented&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Extensively tested&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.zetetic.net/sqlcipher/" rel="nofollow"&gt;SQLCipher&lt;/a&gt; support via CocoaPods&lt;/li&gt;
&lt;li&gt;Active support at
&lt;a href="http://stackoverflow.com/questions/tagged/sqlite.swift" rel="nofollow"&gt;StackOverflow&lt;/a&gt;,
and &lt;a href="https://gitter.im/stephencelis/SQLite.swift" rel="nofollow"&gt;Gitter Chat Room&lt;/a&gt;
(&lt;em&gt;experimental&lt;/em&gt;)&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-usage" class="anchor" aria-hidden="true" href="#usage"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Usage&lt;/h2&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;import&lt;/span&gt; &lt;span class="pl-en"&gt;SQLite&lt;/span&gt;

&lt;span class="pl-k"&gt;let&lt;/span&gt; db &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-k"&gt;try&lt;/span&gt; &lt;span class="pl-c1"&gt;Connection&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;path/to/db.sqlite3&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)

&lt;span class="pl-k"&gt;let&lt;/span&gt; users &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;Table&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;users&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
&lt;span class="pl-k"&gt;let&lt;/span&gt; id &lt;span class="pl-k"&gt;=&lt;/span&gt; Expression&lt;span class="pl-k"&gt;&amp;lt;&lt;/span&gt;&lt;span class="pl-c1"&gt;Int64&lt;/span&gt;&lt;span class="pl-k"&gt;&amp;gt;&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;id&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
&lt;span class="pl-k"&gt;let&lt;/span&gt; name &lt;span class="pl-k"&gt;=&lt;/span&gt; Expression&lt;span class="pl-k"&gt;&amp;lt;&lt;/span&gt;&lt;span class="pl-c1"&gt;String&lt;/span&gt;&lt;span class="pl-k"&gt;?&amp;gt;&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;name&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
&lt;span class="pl-k"&gt;let&lt;/span&gt; email &lt;span class="pl-k"&gt;=&lt;/span&gt; Expression&lt;span class="pl-k"&gt;&amp;lt;&lt;/span&gt;&lt;span class="pl-c1"&gt;String&lt;/span&gt;&lt;span class="pl-k"&gt;&amp;gt;&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;email&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)

&lt;span class="pl-k"&gt;try&lt;/span&gt; db.&lt;span class="pl-c1"&gt;run&lt;/span&gt;(users.&lt;span class="pl-smi"&gt;create&lt;/span&gt; { t &lt;span class="pl-k"&gt;in&lt;/span&gt;
    t.&lt;span class="pl-c1"&gt;column&lt;/span&gt;(id, &lt;span class="pl-c1"&gt;primaryKey&lt;/span&gt;: &lt;span class="pl-c1"&gt;true&lt;/span&gt;)
    t.&lt;span class="pl-c1"&gt;column&lt;/span&gt;(name)
    t.&lt;span class="pl-c1"&gt;column&lt;/span&gt;(email, &lt;span class="pl-c1"&gt;unique&lt;/span&gt;: &lt;span class="pl-c1"&gt;true&lt;/span&gt;)
})
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; CREATE TABLE "users" (&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt;     "id" INTEGER PRIMARY KEY NOT NULL,&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt;     "name" TEXT,&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt;     "email" TEXT NOT NULL UNIQUE&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; )&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;
&lt;span class="pl-k"&gt;let&lt;/span&gt; insert &lt;span class="pl-k"&gt;=&lt;/span&gt; users.&lt;span class="pl-c1"&gt;insert&lt;/span&gt;(name &lt;span class="pl-k"&gt;&amp;lt;-&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;Alice&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, email &lt;span class="pl-k"&gt;&amp;lt;-&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;alice@mac.com&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
&lt;span class="pl-k"&gt;let&lt;/span&gt; rowid &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-k"&gt;try&lt;/span&gt; db.&lt;span class="pl-c1"&gt;run&lt;/span&gt;(insert)
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; INSERT INTO "users" ("name", "email") VALUES ('Alice', 'alice@mac.com')&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;
&lt;span class="pl-k"&gt;for&lt;/span&gt; user &lt;span class="pl-k"&gt;in&lt;/span&gt; &lt;span class="pl-k"&gt;try&lt;/span&gt; db.&lt;span class="pl-c1"&gt;prepare&lt;/span&gt;(users) {
    &lt;span class="pl-c1"&gt;print&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;id: &lt;span class="pl-pse"&gt;\(&lt;/span&gt;&lt;span class="pl-s1"&gt;user[id]&lt;/span&gt;&lt;span class="pl-pse"&gt;&lt;span class="pl-s1"&gt;)&lt;/span&gt;&lt;/span&gt;, name: &lt;span class="pl-pse"&gt;\(&lt;/span&gt;&lt;span class="pl-s1"&gt;user[name]&lt;/span&gt;&lt;span class="pl-pse"&gt;&lt;span class="pl-s1"&gt;)&lt;/span&gt;&lt;/span&gt;, email: &lt;span class="pl-pse"&gt;\(&lt;/span&gt;&lt;span class="pl-s1"&gt;user[email]&lt;/span&gt;&lt;span class="pl-pse"&gt;&lt;span class="pl-s1"&gt;)&lt;/span&gt;&lt;/span&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
    &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; id: 1, name: Optional("Alice"), email: alice@mac.com&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;}
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; SELECT * FROM "users"&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;
&lt;span class="pl-k"&gt;let&lt;/span&gt; alice &lt;span class="pl-k"&gt;=&lt;/span&gt; users.&lt;span class="pl-c1"&gt;filter&lt;/span&gt;(id &lt;span class="pl-k"&gt;==&lt;/span&gt; rowid)

&lt;span class="pl-k"&gt;try&lt;/span&gt; db.&lt;span class="pl-c1"&gt;run&lt;/span&gt;(alice.&lt;span class="pl-c1"&gt;update&lt;/span&gt;(email &lt;span class="pl-k"&gt;&amp;lt;-&lt;/span&gt; email.&lt;span class="pl-c1"&gt;replace&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;mac.com&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-c1"&gt;with&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;me.com&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)))
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; UPDATE "users" SET "email" = replace("email", 'mac.com', 'me.com')&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; WHERE ("id" = 1)&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;
&lt;span class="pl-k"&gt;try&lt;/span&gt; db.&lt;span class="pl-c1"&gt;run&lt;/span&gt;(alice.&lt;span class="pl-c1"&gt;delete&lt;/span&gt;())
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; DELETE FROM "users" WHERE ("id" = 1)&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;
&lt;span class="pl-k"&gt;try&lt;/span&gt; db.&lt;span class="pl-c1"&gt;scalar&lt;/span&gt;(users.&lt;span class="pl-c1"&gt;count&lt;/span&gt;) &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; 0&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; SELECT count(*) FROM "users"&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;SQLite.swift also works as a lightweight, Swift-friendly wrapper over the C
API.&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;let&lt;/span&gt; stmt &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-k"&gt;try&lt;/span&gt; db.&lt;span class="pl-c1"&gt;prepare&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;INSERT INTO users (email) VALUES (?)&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
&lt;span class="pl-k"&gt;for&lt;/span&gt; email &lt;span class="pl-k"&gt;in&lt;/span&gt; [&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;betty@icloud.com&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;cathy@icloud.com&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;] {
    &lt;span class="pl-k"&gt;try&lt;/span&gt; stmt.&lt;span class="pl-c1"&gt;run&lt;/span&gt;(email)
}

db.&lt;span class="pl-smi"&gt;totalChanges&lt;/span&gt;    &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; 3&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;db.&lt;span class="pl-smi"&gt;changes&lt;/span&gt;         &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; 1&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;db.&lt;span class="pl-smi"&gt;lastInsertRowid&lt;/span&gt; &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; 3&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;
&lt;span class="pl-k"&gt;for&lt;/span&gt; row &lt;span class="pl-k"&gt;in&lt;/span&gt; &lt;span class="pl-k"&gt;try&lt;/span&gt; db.&lt;span class="pl-c1"&gt;prepare&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;SELECT id, email FROM users&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;) {
    &lt;span class="pl-c1"&gt;print&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;id: &lt;span class="pl-pse"&gt;\(&lt;/span&gt;&lt;span class="pl-s1"&gt;row[&lt;span class="pl-c1"&gt;0&lt;/span&gt;]&lt;/span&gt;&lt;span class="pl-pse"&gt;&lt;span class="pl-s1"&gt;)&lt;/span&gt;&lt;/span&gt;, email: &lt;span class="pl-pse"&gt;\(&lt;/span&gt;&lt;span class="pl-s1"&gt;row[&lt;span class="pl-c1"&gt;1&lt;/span&gt;]&lt;/span&gt;&lt;span class="pl-pse"&gt;&lt;span class="pl-s1"&gt;)&lt;/span&gt;&lt;/span&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
    &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; id: Optional(2), email: Optional("betty@icloud.com")&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;    &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; id: Optional(3), email: Optional("cathy@icloud.com")&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;}

&lt;span class="pl-k"&gt;try&lt;/span&gt; db.&lt;span class="pl-c1"&gt;scalar&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;SELECT count(*) FROM users&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;) &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; 2&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;a href="Documentation/Index.md#sqliteswift-documentation"&gt;Read the documentation&lt;/a&gt; or explore more,
interactively, from the Xcode project’s playground.&lt;/p&gt;
&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="Documentation/Resources/playground@2x.png"&gt;&lt;img src="Documentation/Resources/playground@2x.png" alt="SQLite.playground Screen Shot" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;For a more comprehensive example, see
&lt;a href="http://masteringswift.blogspot.com/2015/09/create-data-access-layer-with.html" rel="nofollow"&gt;this article&lt;/a&gt;
and the &lt;a href="https://github.com/hoffmanjon/SQLiteDataAccessLayer2/tree/master"&gt;companion repository&lt;/a&gt;.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-installation" class="anchor" aria-hidden="true" href="#installation"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Installation&lt;/h2&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;em&gt;Note:&lt;/em&gt; Version 0.12 requires Swift 5 (and &lt;a href="https://developer.apple.com/xcode/downloads/" rel="nofollow"&gt;Xcode&lt;/a&gt; 10.2) or greater. Version 0.11.6 requires Swift 4.2 (and &lt;a href="https://developer.apple.com/xcode/downloads/" rel="nofollow"&gt;Xcode&lt;/a&gt; 10.1) or greater.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3&gt;&lt;a id="user-content-carthage" class="anchor" aria-hidden="true" href="#carthage"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Carthage&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://github.com/Carthage/Carthage"&gt;Carthage&lt;/a&gt; is a simple, decentralized dependency manager for Cocoa. To
install SQLite.swift with Carthage:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;Make sure Carthage is &lt;a href="https://github.com/Carthage/Carthage#installing-carthage"&gt;installed&lt;/a&gt;.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Update your Cartfile to include the following:&lt;/p&gt;
&lt;div class="highlight highlight-source-ruby"&gt;&lt;pre&gt;github &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;stephencelis/SQLite.swift&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; &lt;span class="pl-k"&gt;~&lt;/span&gt;&lt;span class="pl-k"&gt;&amp;gt;&lt;/span&gt; &lt;span class="pl-c1"&gt;0.12&lt;/span&gt;.&lt;span class="pl-c1"&gt;0&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Run &lt;code&gt;carthage update&lt;/code&gt; and
&lt;a href="https://github.com/Carthage/Carthage#adding-frameworks-to-an-application"&gt;add the appropriate framework&lt;/a&gt;.&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h3&gt;&lt;a id="user-content-cocoapods" class="anchor" aria-hidden="true" href="#cocoapods"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;CocoaPods&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://cocoapods.org" rel="nofollow"&gt;CocoaPods&lt;/a&gt; is a dependency manager for Cocoa projects. To install
SQLite.swift with CocoaPods:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;Make sure CocoaPods is &lt;a href="https://guides.cocoapods.org/using/getting-started.html#getting-started" rel="nofollow"&gt;installed&lt;/a&gt;. (SQLite.swift
requires version 1.6.1 or greater.)&lt;/p&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; Using the default Ruby install will require you to use sudo when&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; installing and updating gems.&lt;/span&gt;
[sudo] gem install cocoapods&lt;/pre&gt;&lt;/div&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Update your Podfile to include the following:&lt;/p&gt;
&lt;div class="highlight highlight-source-ruby"&gt;&lt;pre&gt;use_frameworks!

target &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;YourAppTargetName&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt; &lt;span class="pl-k"&gt;do&lt;/span&gt;
    pod &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;SQLite.swift&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;~&amp;gt; 0.12.0&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;
&lt;span class="pl-k"&gt;end&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Run &lt;code&gt;pod install --repo-update&lt;/code&gt;.&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h3&gt;&lt;a id="user-content-swift-package-manager" class="anchor" aria-hidden="true" href="#swift-package-manager"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Swift Package Manager&lt;/h3&gt;
&lt;p&gt;The &lt;a href="https://swift.org/package-manager" rel="nofollow"&gt;Swift Package Manager&lt;/a&gt; is a tool for managing the distribution of
Swift code.&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Add the following to your &lt;code&gt;Package.swift&lt;/code&gt; file:&lt;/li&gt;
&lt;/ol&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;dependencies&lt;span class="pl-k"&gt;:&lt;/span&gt; [
    .&lt;span class="pl-c1"&gt;package&lt;/span&gt;(&lt;span class="pl-c1"&gt;url&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;https://github.com/stephencelis/SQLite.swift.git&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-c1"&gt;from&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;0.12.0&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
]&lt;/pre&gt;&lt;/div&gt;
&lt;ol start="2"&gt;
&lt;li&gt;Build your project:&lt;/li&gt;
&lt;/ol&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt;$ swift build&lt;/pre&gt;&lt;/div&gt;
&lt;h3&gt;&lt;a id="user-content-manual" class="anchor" aria-hidden="true" href="#manual"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Manual&lt;/h3&gt;
&lt;p&gt;To install SQLite.swift as an Xcode sub-project:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;Drag the &lt;strong&gt;SQLite.xcodeproj&lt;/strong&gt; file into your own project.
(&lt;a href="http://git-scm.com/book/en/Git-Tools-Submodules" rel="nofollow"&gt;Submodule&lt;/a&gt;, clone, or &lt;a href="https://github.com/stephencelis/SQLite.swift/archive/master.zip"&gt;download&lt;/a&gt; the project first.)&lt;/p&gt;
&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="Documentation/Resources/installation@2x.png"&gt;&lt;img src="Documentation/Resources/installation@2x.png" alt="Installation Screen Shot" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;In your target’s &lt;strong&gt;General&lt;/strong&gt; tab, click the &lt;strong&gt;+&lt;/strong&gt; button under &lt;strong&gt;Linked
Frameworks and Libraries&lt;/strong&gt;.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Select the appropriate &lt;strong&gt;SQLite.framework&lt;/strong&gt; for your platform.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Add&lt;/strong&gt;.&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;Some additional steps are required to install the application on an actual
device:&lt;/p&gt;
&lt;ol start="5"&gt;
&lt;li&gt;
&lt;p&gt;In the &lt;strong&gt;General&lt;/strong&gt; tab, click the &lt;strong&gt;+&lt;/strong&gt; button under &lt;strong&gt;Embedded
Binaries&lt;/strong&gt;.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Select the appropriate &lt;strong&gt;SQLite.framework&lt;/strong&gt; for your platform.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Add&lt;/strong&gt;.&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h2&gt;&lt;a id="user-content-communication" class="anchor" aria-hidden="true" href="#communication"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Communication&lt;/h2&gt;
&lt;p&gt;&lt;a href="/Documentation/Planning.md"&gt;See the planning document&lt;/a&gt; for a roadmap and existing feature requests.&lt;/p&gt;
&lt;p&gt;&lt;a href="./CONTRIBUTING.md#contributing"&gt;Read the contributing guidelines&lt;/a&gt;. The &lt;em&gt;TL;DR&lt;/em&gt; (but please; &lt;em&gt;R&lt;/em&gt;):&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Need &lt;strong&gt;help&lt;/strong&gt; or have a &lt;strong&gt;general question&lt;/strong&gt;? &lt;a href="http://stackoverflow.com/questions/tagged/sqlite.swift" rel="nofollow"&gt;Ask on Stack
Overflow&lt;/a&gt; (tag &lt;code&gt;sqlite.swift&lt;/code&gt;).&lt;/li&gt;
&lt;li&gt;Found a &lt;strong&gt;bug&lt;/strong&gt; or have a &lt;strong&gt;feature request&lt;/strong&gt;? &lt;a href="https://github.com/stephencelis/SQLite.swift/issues/new"&gt;Open an issue&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;Want to &lt;strong&gt;contribute&lt;/strong&gt;? &lt;a href="https://github.com/stephencelis/SQLite.swift/fork"&gt;Submit a pull request&lt;/a&gt;.&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-author" class="anchor" aria-hidden="true" href="#author"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Author&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="mailto:stephen@stephencelis.com"&gt;Stephen Celis&lt;/a&gt;
(&lt;a href="https://twitter.com/stephencelis" rel="nofollow"&gt;@stephencelis&lt;/a&gt;)&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-license" class="anchor" aria-hidden="true" href="#license"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;License&lt;/h2&gt;
&lt;p&gt;SQLite.swift is available under the MIT license. See &lt;a href="./LICENSE.txt"&gt;the LICENSE
file&lt;/a&gt; for more information.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-related" class="anchor" aria-hidden="true" href="#related"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Related&lt;/h2&gt;
&lt;p&gt;These projects enhance or use SQLite.swift:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/garriguv/SQLiteMigrationManager.swift"&gt;SQLiteMigrationManager.swift&lt;/a&gt; (inspired by
&lt;a href="https://github.com/layerhq/FMDBMigrationManager"&gt;FMDBMigrationManager&lt;/a&gt;)&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-alternatives" class="anchor" aria-hidden="true" href="#alternatives"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Alternatives&lt;/h2&gt;
&lt;p&gt;Looking for something else? Try another Swift wrapper (or &lt;a href="https://github.com/ccgus/fmdb"&gt;FMDB&lt;/a&gt;):&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/remirobert/Camembert"&gt;Camembert&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/groue/GRDB.swift"&gt;GRDB&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/FahimF/SQLiteDB"&gt;SQLiteDB&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/nerdyc/Squeal"&gt;Squeal&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/ryanfowler/SwiftData"&gt;SwiftData&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/chrismsimpson/SwiftSQLite"&gt;SwiftSQLite&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/article&gt;&lt;/div&gt;</description><author>stephencelis</author><guid isPermaLink="false">https://github.com/stephencelis/SQLite.swift</guid><pubDate>Fri, 08 Nov 2019 00:03:00 GMT</pubDate></item><item><title>twostraws/HackingWithSwift #4 in Swift, This week</title><link>https://github.com/twostraws/HackingWithSwift</link><description>&lt;p&gt;&lt;i&gt;The project source code for hackingwithswift.com&lt;/i&gt;&lt;/p&gt;&lt;div id="readme" class="instapaper_body md" data-path="README.md"&gt;&lt;article class="markdown-body entry-content p-5" itemprop="text"&gt;&lt;h1&gt;&lt;a id="user-content-hacking-with-swift" class="anchor" aria-hidden="true" href="#hacking-with-swift"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Hacking with Swift&lt;/h1&gt;
&lt;p&gt;This is the source code to accompany Hacking with Swift, &lt;a href="https://www.hackingwithswift.com" rel="nofollow"&gt;a free tutorial series that teaches Swift coding for iOS&lt;/a&gt;. There is one folder for the classic Hacking with Swift course, which teaches UIKit and SpriteKit, and another folder for the SwiftUI edition.&lt;/p&gt;
&lt;p&gt;All projects should be compatible with Xcode 11 and iOS 13. Where appropriate, separate project files have been provided so that you can follow the tutorial from scratch without having to dig around in the completed project folder.&lt;/p&gt;
&lt;p&gt;If you have questions, you can find me on Twitter &lt;a href="https://www.twitter.com/twostraws" rel="nofollow"&gt;@twostraws&lt;/a&gt;.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-recommended-links" class="anchor" aria-hidden="true" href="#recommended-links"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Recommended links&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://gumroad.com/l/hws-book-pack" rel="nofollow"&gt;Buy the Hacking with Swift book and support my work&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;The Hacking with Swift book contains over 1300 pages of tutorials and example code, and makes a great addition to any developer's collection. Thank you to everyone who bought the book – your purchase helps me create more great Swift content in the future!&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://gumroad.com/l/proswift" rel="nofollow"&gt;Buy the Pro Swift book and video course&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Pro Swift is the sequel to Hacking with Swift, and includes a 250-page guide to helping you write faster, more efficient Swift, accompanied by over 70 videos demonstrating each technique. If you want to dive into functional programming, learn more about MVVM, get to grips with @autoclosure and @escaping, or try your hand at protocol-oriented development, Pro Swift is for you.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://gumroad.com/l/swiftcc" rel="nofollow"&gt;Buy Swift Coding Challenges&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Swift Coding Challenges is an all-new book written from the ground up to put your Swift skills to the test. I've written a variety of coding challenges that start off simple but slowly get harder, and it's down to you to solve them. I outline each problem, provide you with sample input and output, add in some hints in case you hit problems, then provide a sample solution and explain how it works.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.hackingwithswift.com/articles/77/whats-new-in-swift-4-2" rel="nofollow"&gt;What's new in Swift 4.2?&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.hackingwithswift.com/articles/50/whats-new-in-swift-4-1" rel="nofollow"&gt;What's new in Swift 4.1?&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.hackingwithswift.com/swift4" rel="nofollow"&gt;What's new in Swift 4?&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.hackingwithswift.com/swift3" rel="nofollow"&gt;What's new in Swift 3?&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.hackingwithswift.com/whats-new-in-ios-11" rel="nofollow"&gt;What's new in iOS 11?&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.hackingwithswift.com/ios10" rel="nofollow"&gt;What's new in iOS 10?&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.hackingwithswift.com/example-code" rel="nofollow"&gt;Free Swift example code&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/article&gt;&lt;/div&gt;</description><author>twostraws</author><guid isPermaLink="false">https://github.com/twostraws/HackingWithSwift</guid><pubDate>Fri, 08 Nov 2019 00:04:00 GMT</pubDate></item><item><title>apple/swift-nio #5 in Swift, This week</title><link>https://github.com/apple/swift-nio</link><description>&lt;p&gt;&lt;i&gt;Event-driven network application framework for high performance protocol servers &amp; clients, non-blocking.&lt;/i&gt;&lt;/p&gt;&lt;div id="readme" class="instapaper_body md" data-path="README.md"&gt;&lt;article class="markdown-body entry-content p-5" itemprop="text"&gt;&lt;h1&gt;&lt;a id="user-content-swiftnio" class="anchor" aria-hidden="true" href="#swiftnio"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;SwiftNIO&lt;/h1&gt;
&lt;p&gt;SwiftNIO is a cross-platform asynchronous event-driven network application framework
for rapid development of maintainable high performance protocol servers &amp;amp; clients.&lt;/p&gt;
&lt;p&gt;It's like &lt;a href="https://netty.io" rel="nofollow"&gt;Netty&lt;/a&gt;, but written for Swift.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-repository-organization" class="anchor" aria-hidden="true" href="#repository-organization"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Repository organization&lt;/h3&gt;
&lt;p&gt;The SwiftNIO project is split across multiple repositories:&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Repository&lt;/th&gt;
&lt;th&gt;NIO 2 (Swift 5+)&lt;/th&gt;
&lt;th&gt;NIO 1 (Swift 4+)&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href="https://github.com/apple/swift-nio"&gt;https://github.com/apple/swift-nio&lt;/a&gt; &lt;br&gt; SwiftNIO core&lt;/td&gt;
&lt;td&gt;&lt;code&gt;from: "2.0.0"&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;from: "1.0.0"&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href="https://github.com/apple/swift-nio-ssl"&gt;https://github.com/apple/swift-nio-ssl&lt;/a&gt; &lt;br&gt; TLS (SSL) support&lt;/td&gt;
&lt;td&gt;&lt;code&gt;from: "2.0.0"&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;from: "1.0.0"&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href="https://github.com/apple/swift-nio-http2"&gt;https://github.com/apple/swift-nio-http2&lt;/a&gt;&lt;br&gt; HTTP/2 support&lt;/td&gt;
&lt;td&gt;&lt;code&gt;from: "1.0.0"&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;from: "0.1.0"&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href="https://github.com/apple/swift-nio-extras"&gt;https://github.com/apple/swift-nio-extras&lt;/a&gt; &lt;br&gt;useful additions around SwiftNIO&lt;/td&gt;
&lt;td&gt;&lt;code&gt;from: "1.0.0"&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;from: "0.1.0"&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href="https://github.com/apple/swift-nio-transport-services"&gt;https://github.com/apple/swift-nio-transport-services&lt;/a&gt; &lt;br&gt; first-class support for macOS, iOS, and tvOS&lt;/td&gt;
&lt;td&gt;&lt;code&gt;from: "1.0.0"&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;from: "0.1.0"&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h3&gt;&lt;a id="user-content-supported-platforms" class="anchor" aria-hidden="true" href="#supported-platforms"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Supported Platforms&lt;/h3&gt;
&lt;p&gt;SwiftNIO aims to support all of the platforms where Swift is supported. Currently, it is developed and tested on macOS and Linux, and is known to support the following operating system versions:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Ubuntu 14.04+&lt;/li&gt;
&lt;li&gt;macOS 10.12+; (macOS 10.14+, iOS 12+, or tvOS 12+ with &lt;a href="https://github.com/apple/swift-nio-transport-services"&gt;swift-nio-transport-services&lt;/a&gt;)&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;&lt;a id="user-content-swift-versions" class="anchor" aria-hidden="true" href="#swift-versions"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Swift versions&lt;/h3&gt;
&lt;h4&gt;&lt;a id="user-content-swiftnio-1" class="anchor" aria-hidden="true" href="#swiftnio-1"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;SwiftNIO 1&lt;/h4&gt;
&lt;p&gt;The latest released SwiftNIO 1 version supports Swift 4.0, 4.1, 4.2, and 5.0.&lt;/p&gt;
&lt;h4&gt;&lt;a id="user-content-swiftnio-2" class="anchor" aria-hidden="true" href="#swiftnio-2"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;SwiftNIO 2&lt;/h4&gt;
&lt;p&gt;The latest released SwiftNIO 2 version supports only Swift 5.0 &amp;amp; 5.1. If you have a SwiftNIO 1 application or library that you would like to migrate to SwiftNIO 2, please check out the &lt;a href="docs/migration-guide-NIO1-to-NIO2.md"&gt;migration guide&lt;/a&gt; we prepared for you.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-compatibility" class="anchor" aria-hidden="true" href="#compatibility"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Compatibility&lt;/h3&gt;
&lt;p&gt;SwiftNIO follows &lt;a href="https://semver.org/#semantic-versioning-200" rel="nofollow"&gt;SemVer 2.0.0&lt;/a&gt; with a separate document declaring &lt;a href="docs/public-api.md"&gt;SwiftNIO's Public API&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;What this means for you is that you should depend on SwiftNIO with a version range that covers everything from the minimum SwiftNIO version you require up to the next major version.
In SwiftPM that can be easily done specifying for example &lt;code&gt;from: "2.0.0"&lt;/code&gt; meaning that you support SwiftNIO in every version starting from 2.0.0 up to (excluding) 3.0.0.
SemVer and SwiftNIO's Public API guarantees should result in a working program without having to worry about testing every single version for compatibility.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-conceptual-overview" class="anchor" aria-hidden="true" href="#conceptual-overview"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Conceptual Overview&lt;/h2&gt;
&lt;p&gt;SwiftNIO is fundamentally a low-level tool for building high-performance networking applications in Swift. It particularly targets those use-cases where using a "thread-per-connection" model of concurrency is inefficient or untenable. This is a common limitation when building servers that use a large number of relatively low-utilization connections, such as HTTP servers.&lt;/p&gt;
&lt;p&gt;To achieve its goals SwiftNIO extensively uses "non-blocking I/O": hence the name! Non-blocking I/O differs from the more common blocking I/O model because the application does not wait for data to be sent to or received from the network: instead, SwiftNIO asks for the kernel to notify it when I/O operations can be performed without waiting.&lt;/p&gt;
&lt;p&gt;SwiftNIO does not aim to provide high-level solutions like, for example, web frameworks do. Instead, SwiftNIO is focused on providing the low-level building blocks for these higher-level applications. When it comes to building a web application, most users will not want to use SwiftNIO directly: instead, they'll want to use one of the many great web frameworks available in the Swift ecosystem. Those web frameworks, however, may choose to use SwiftNIO under the covers to provide their networking support.&lt;/p&gt;
&lt;p&gt;The following sections will describe the low-level tools that SwiftNIO provides, and provide a quick overview of how to work with them. If you feel comfortable with these concepts, then you can skip right ahead to the other sections of this README.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-basic-architecture" class="anchor" aria-hidden="true" href="#basic-architecture"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Basic Architecture&lt;/h3&gt;
&lt;p&gt;The basic building blocks of SwiftNIO are the following 8 types of objects:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://apple.github.io/swift-nio/docs/current/NIO/Protocols/EventLoopGroup.html" rel="nofollow"&gt;&lt;code&gt;EventLoopGroup&lt;/code&gt;&lt;/a&gt;, a protocol&lt;/li&gt;
&lt;li&gt;&lt;a href="https://apple.github.io/swift-nio/docs/current/NIO/Protocols/EventLoop.html" rel="nofollow"&gt;&lt;code&gt;EventLoop&lt;/code&gt;&lt;/a&gt;, a protocol&lt;/li&gt;
&lt;li&gt;&lt;a href="https://apple.github.io/swift-nio/docs/current/NIO/Protocols/Channel.html" rel="nofollow"&gt;&lt;code&gt;Channel&lt;/code&gt;&lt;/a&gt;, a protocol&lt;/li&gt;
&lt;li&gt;&lt;a href="https://apple.github.io/swift-nio/docs/current/NIO/Protocols/ChannelHandler.html" rel="nofollow"&gt;&lt;code&gt;ChannelHandler&lt;/code&gt;&lt;/a&gt;, a protocol&lt;/li&gt;
&lt;li&gt;&lt;code&gt;Bootstrap&lt;/code&gt;, several related structures&lt;/li&gt;
&lt;li&gt;&lt;a href="https://apple.github.io/swift-nio/docs/current/NIO/Structs/ByteBuffer.html" rel="nofollow"&gt;&lt;code&gt;ByteBuffer&lt;/code&gt;&lt;/a&gt;, a struct&lt;/li&gt;
&lt;li&gt;&lt;a href="https://apple.github.io/swift-nio/docs/current/NIO/Classes/EventLoopFuture.html" rel="nofollow"&gt;&lt;code&gt;EventLoopFuture&lt;/code&gt;&lt;/a&gt;, a generic class&lt;/li&gt;
&lt;li&gt;&lt;a href="https://apple.github.io/swift-nio/docs/current/NIO/Structs/EventLoopPromise.html" rel="nofollow"&gt;&lt;code&gt;EventLoopPromise&lt;/code&gt;&lt;/a&gt;, a generic struct.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;All SwiftNIO applications are ultimately constructed of these various components.&lt;/p&gt;
&lt;h4&gt;&lt;a id="user-content-eventloops-and-eventloopgroups" class="anchor" aria-hidden="true" href="#eventloops-and-eventloopgroups"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;EventLoops and EventLoopGroups&lt;/h4&gt;
&lt;p&gt;The basic I/O primitive of SwiftNIO is the event loop. The event loop is an object that waits for events (usually I/O related events, such as "data received") to happen and then fires some kind of callback when they do. In almost all SwiftNIO applications there will be relatively few event loops: usually only one or two per CPU core the application wants to use. Generally speaking event loops run for the entire lifetime of your application, spinning in an endless loop dispatching events.&lt;/p&gt;
&lt;p&gt;Event loops are gathered together into event loop &lt;em&gt;groups&lt;/em&gt;. These groups provide a mechanism to distribute work around the event loops. For example, when listening for inbound connections the listening socket will be registered on one event loop. However, we don't want all connections that are accepted on that listening socket to be registered with the same event loop, as that would potentially overload one event loop while leaving the others empty. For that reason, the event loop group provides the ability to spread load across multiple event loops.&lt;/p&gt;
&lt;p&gt;In SwiftNIO today there is one &lt;a href="https://apple.github.io/swift-nio/docs/current/NIO/Protocols/EventLoopGroup.html" rel="nofollow"&gt;&lt;code&gt;EventLoopGroup&lt;/code&gt;&lt;/a&gt; implementation, and two &lt;a href="https://apple.github.io/swift-nio/docs/current/NIO/Protocols/EventLoop.html" rel="nofollow"&gt;&lt;code&gt;EventLoop&lt;/code&gt;&lt;/a&gt; implementations. For production applications there is the &lt;a href="https://apple.github.io/swift-nio/docs/current/NIO/Classes/MultiThreadedEventLoopGroup.html" rel="nofollow"&gt;&lt;code&gt;MultiThreadedEventLoopGroup&lt;/code&gt;&lt;/a&gt;, an &lt;a href="https://apple.github.io/swift-nio/docs/current/NIO/Protocols/EventLoopGroup.html" rel="nofollow"&gt;&lt;code&gt;EventLoopGroup&lt;/code&gt;&lt;/a&gt; that creates a number of threads (using the POSIX &lt;a href="https://en.wikipedia.org/wiki/POSIX_Threads" rel="nofollow"&gt;&lt;code&gt;pthreads&lt;/code&gt;&lt;/a&gt; library) and places one &lt;code&gt;SelectableEventLoop&lt;/code&gt; on each one. The &lt;code&gt;SelectableEventLoop&lt;/code&gt; is an event loop that uses a selector (either &lt;a href="https://en.wikipedia.org/wiki/Kqueue" rel="nofollow"&gt;&lt;code&gt;kqueue&lt;/code&gt;&lt;/a&gt; or &lt;a href="https://en.wikipedia.org/wiki/Epoll" rel="nofollow"&gt;&lt;code&gt;epoll&lt;/code&gt;&lt;/a&gt; depending on the target system) to manage I/O events from file descriptors and to dispatch work. Additionally, there is the &lt;a href="https://apple.github.io/swift-nio/docs/current/NIO/Classes/EmbeddedEventLoop.html" rel="nofollow"&gt;&lt;code&gt;EmbeddedEventLoop&lt;/code&gt;&lt;/a&gt;, which is a dummy event loop that is used primarily for testing purposes.&lt;/p&gt;
&lt;p&gt;&lt;a href="https://apple.github.io/swift-nio/docs/current/NIO/Protocols/EventLoop.html" rel="nofollow"&gt;&lt;code&gt;EventLoop&lt;/code&gt;&lt;/a&gt;s have a number of important properties. Most vitally, they are the way all work gets done in SwiftNIO applications. In order to ensure thread-safety, any work that wants to be done on almost any of the other objects in SwiftNIO must be dispatched via an &lt;a href="https://apple.github.io/swift-nio/docs/current/NIO/Protocols/EventLoop.html" rel="nofollow"&gt;&lt;code&gt;EventLoop&lt;/code&gt;&lt;/a&gt;. &lt;a href="https://apple.github.io/swift-nio/docs/current/NIO/Protocols/EventLoop.html" rel="nofollow"&gt;&lt;code&gt;EventLoop&lt;/code&gt;&lt;/a&gt; objects own almost all the other objects in a SwiftNIO application, and understanding their execution model is critical for building high-performance SwiftNIO applications.&lt;/p&gt;
&lt;h4&gt;&lt;a id="user-content-channels-channel-handlers-channel-pipelines-and-channel-contexts" class="anchor" aria-hidden="true" href="#channels-channel-handlers-channel-pipelines-and-channel-contexts"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Channels, Channel Handlers, Channel Pipelines, and Channel Contexts&lt;/h4&gt;
&lt;p&gt;While &lt;a href="https://apple.github.io/swift-nio/docs/current/NIO/Protocols/EventLoop.html" rel="nofollow"&gt;&lt;code&gt;EventLoop&lt;/code&gt;&lt;/a&gt;s are critical to the way SwiftNIO works, most users will not interact with them substantially beyond asking them to create &lt;a href="https://apple.github.io/swift-nio/docs/current/NIO/Structs/EventLoopPromise.html" rel="nofollow"&gt;&lt;code&gt;EventLoopPromise&lt;/code&gt;&lt;/a&gt;s and to schedule work. The parts of a SwiftNIO application most users will spend the most time interacting with are &lt;a href="https://apple.github.io/swift-nio/docs/current/NIO/Protocols/Channel.html" rel="nofollow"&gt;&lt;code&gt;Channel&lt;/code&gt;&lt;/a&gt;s and &lt;a href="https://apple.github.io/swift-nio/docs/current/NIO/Protocols/ChannelHandler.html" rel="nofollow"&gt;&lt;code&gt;ChannelHandler&lt;/code&gt;&lt;/a&gt;s.&lt;/p&gt;
&lt;p&gt;Almost every file descriptor that a user interacts with in a SwiftNIO program is associated with a single &lt;a href="https://apple.github.io/swift-nio/docs/current/NIO/Protocols/Channel.html" rel="nofollow"&gt;&lt;code&gt;Channel&lt;/code&gt;&lt;/a&gt;. The &lt;a href="https://apple.github.io/swift-nio/docs/current/NIO/Protocols/Channel.html" rel="nofollow"&gt;&lt;code&gt;Channel&lt;/code&gt;&lt;/a&gt; owns this file descriptor, and is responsible for managing its lifetime. It is also responsible for processing inbound and outbound events on that file descriptor: whenever the event loop has an event that corresponds to a file descriptor, it will notify the &lt;a href="https://apple.github.io/swift-nio/docs/current/NIO/Protocols/Channel.html" rel="nofollow"&gt;&lt;code&gt;Channel&lt;/code&gt;&lt;/a&gt; that owns that file descriptor.&lt;/p&gt;
&lt;p&gt;&lt;a href="https://apple.github.io/swift-nio/docs/current/NIO/Protocols/Channel.html" rel="nofollow"&gt;&lt;code&gt;Channel&lt;/code&gt;&lt;/a&gt;s by themselves, however, are not useful. After all, it is a rare application that doesn't want to do anything with the data it sends or receives on a socket! So the other important part of the &lt;a href="https://apple.github.io/swift-nio/docs/current/NIO/Protocols/Channel.html" rel="nofollow"&gt;&lt;code&gt;Channel&lt;/code&gt;&lt;/a&gt; is the &lt;a href="https://apple.github.io/swift-nio/docs/current/NIO/Classes/ChannelPipeline.html" rel="nofollow"&gt;&lt;code&gt;ChannelPipeline&lt;/code&gt;&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;A &lt;a href="https://apple.github.io/swift-nio/docs/current/NIO/Classes/ChannelPipeline.html" rel="nofollow"&gt;&lt;code&gt;ChannelPipeline&lt;/code&gt;&lt;/a&gt; is a sequence of objects, called &lt;a href="https://apple.github.io/swift-nio/docs/current/NIO/Protocols/ChannelHandler.html" rel="nofollow"&gt;&lt;code&gt;ChannelHandler&lt;/code&gt;&lt;/a&gt;s, that process events on a &lt;a href="https://apple.github.io/swift-nio/docs/current/NIO/Protocols/Channel.html" rel="nofollow"&gt;&lt;code&gt;Channel&lt;/code&gt;&lt;/a&gt;. The &lt;a href="https://apple.github.io/swift-nio/docs/current/NIO/Protocols/ChannelHandler.html" rel="nofollow"&gt;&lt;code&gt;ChannelHandler&lt;/code&gt;&lt;/a&gt;s process these events one after another, in order, mutating and transforming events as they go. This can be thought of as a data processing pipeline; hence the name &lt;a href="https://apple.github.io/swift-nio/docs/current/NIO/Classes/ChannelPipeline.html" rel="nofollow"&gt;&lt;code&gt;ChannelPipeline&lt;/code&gt;&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;All &lt;a href="https://apple.github.io/swift-nio/docs/current/NIO/Protocols/ChannelHandler.html" rel="nofollow"&gt;&lt;code&gt;ChannelHandler&lt;/code&gt;&lt;/a&gt;s are either Inbound or Outbound handlers, or both. Inbound handlers process "inbound" events: events like reading data from a socket, reading socket close, or other kinds of events initiated by remote peers. Outbound handlers process "outbound" events, such as writes, connection attempts, and local socket closes.&lt;/p&gt;
&lt;p&gt;Each handler processes the events in order. For example, read events are passed from the front of the pipeline to the back, one handler at a time, while write events are passed from the back of the pipeline to the front. Each handler may, at any time, generate either inbound or outbound events that will be sent to the next handler in whichever direction is appropriate. This allows handlers to split up reads, coalesce writes, delay connection attempts, and generally perform arbitrary transformations of events.&lt;/p&gt;
&lt;p&gt;In general, &lt;a href="https://apple.github.io/swift-nio/docs/current/NIO/Protocols/ChannelHandler.html" rel="nofollow"&gt;&lt;code&gt;ChannelHandler&lt;/code&gt;&lt;/a&gt;s are designed to be highly re-usable components. This means they tend to be designed to be as small as possible, performing one specific data transformation. This allows handlers to be composed together in novel and flexible ways, which helps with code reuse and encapsulation.&lt;/p&gt;
&lt;p&gt;&lt;a href="https://apple.github.io/swift-nio/docs/current/NIO/Protocols/ChannelHandler.html" rel="nofollow"&gt;&lt;code&gt;ChannelHandler&lt;/code&gt;&lt;/a&gt;s are able to keep track of where they are in a &lt;a href="https://apple.github.io/swift-nio/docs/current/NIO/Classes/ChannelPipeline.html" rel="nofollow"&gt;&lt;code&gt;ChannelPipeline&lt;/code&gt;&lt;/a&gt; by using a &lt;a href="https://apple.github.io/swift-nio/docs/current/NIO/Classes/ChannelHandlerContext.html" rel="nofollow"&gt;&lt;code&gt;ChannelHandlerContext&lt;/code&gt;&lt;/a&gt;. These objects contain references to the previous and next channel handler in the pipeline, ensuring that it is always possible for a &lt;a href="https://apple.github.io/swift-nio/docs/current/NIO/Protocols/ChannelHandler.html" rel="nofollow"&gt;&lt;code&gt;ChannelHandler&lt;/code&gt;&lt;/a&gt; to emit events while it remains in a pipeline.&lt;/p&gt;
&lt;p&gt;SwiftNIO ships with many &lt;a href="https://apple.github.io/swift-nio/docs/current/NIO/Protocols/ChannelHandler.html" rel="nofollow"&gt;&lt;code&gt;ChannelHandler&lt;/code&gt;&lt;/a&gt;s built in that provide useful functionality, such as HTTP parsing. In addition, high-performance applications will want to provide as much of their logic as possible in &lt;a href="https://apple.github.io/swift-nio/docs/current/NIO/Protocols/ChannelHandler.html" rel="nofollow"&gt;&lt;code&gt;ChannelHandler&lt;/code&gt;&lt;/a&gt;s, as it helps avoid problems with context switching.&lt;/p&gt;
&lt;p&gt;Additionally, SwiftNIO ships with a few &lt;a href="https://apple.github.io/swift-nio/docs/current/NIO/Protocols/Channel.html" rel="nofollow"&gt;&lt;code&gt;Channel&lt;/code&gt;&lt;/a&gt; implementations. In particular, it ships with &lt;code&gt;ServerSocketChannel&lt;/code&gt;, a &lt;a href="https://apple.github.io/swift-nio/docs/current/NIO/Protocols/Channel.html" rel="nofollow"&gt;&lt;code&gt;Channel&lt;/code&gt;&lt;/a&gt; for sockets that accept inbound connections; &lt;code&gt;SocketChannel&lt;/code&gt;, a &lt;a href="https://apple.github.io/swift-nio/docs/current/NIO/Protocols/Channel.html" rel="nofollow"&gt;&lt;code&gt;Channel&lt;/code&gt;&lt;/a&gt; for TCP connections; &lt;code&gt;DatagramChannel&lt;/code&gt;, a &lt;a href="https://apple.github.io/swift-nio/docs/current/NIO/Protocols/Channel.html" rel="nofollow"&gt;&lt;code&gt;Channel&lt;/code&gt;&lt;/a&gt; for UDP sockets; and &lt;a href="https://apple.github.io/swift-nio/docs/current/NIO/Classes/EmbeddedChannel.html" rel="nofollow"&gt;&lt;code&gt;EmbeddedChannel&lt;/code&gt;&lt;/a&gt;, a &lt;a href="https://apple.github.io/swift-nio/docs/current/NIO/Protocols/Channel.html" rel="nofollow"&gt;&lt;code&gt;Channel&lt;/code&gt;&lt;/a&gt; primarily used for testing.&lt;/p&gt;
&lt;h5&gt;&lt;a id="user-content-a-note-on-blocking" class="anchor" aria-hidden="true" href="#a-note-on-blocking"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;A Note on Blocking&lt;/h5&gt;
&lt;p&gt;One of the important notes about &lt;a href="https://apple.github.io/swift-nio/docs/current/NIO/Classes/ChannelPipeline.html" rel="nofollow"&gt;&lt;code&gt;ChannelPipeline&lt;/code&gt;&lt;/a&gt;s is that they are thread-safe. This is very important for writing SwiftNIO applications, as it allows you to write much simpler &lt;a href="https://apple.github.io/swift-nio/docs/current/NIO/Protocols/ChannelHandler.html" rel="nofollow"&gt;&lt;code&gt;ChannelHandler&lt;/code&gt;&lt;/a&gt;s in the knowledge that they will not require synchronization.&lt;/p&gt;
&lt;p&gt;However, this is achieved by dispatching all code on the &lt;a href="https://apple.github.io/swift-nio/docs/current/NIO/Classes/ChannelPipeline.html" rel="nofollow"&gt;&lt;code&gt;ChannelPipeline&lt;/code&gt;&lt;/a&gt; on the same thread as the &lt;a href="https://apple.github.io/swift-nio/docs/current/NIO/Protocols/EventLoop.html" rel="nofollow"&gt;&lt;code&gt;EventLoop&lt;/code&gt;&lt;/a&gt;. This means that, as a general rule, &lt;a href="https://apple.github.io/swift-nio/docs/current/NIO/Protocols/ChannelHandler.html" rel="nofollow"&gt;&lt;code&gt;ChannelHandler&lt;/code&gt;&lt;/a&gt;s &lt;strong&gt;must not&lt;/strong&gt; call blocking code without dispatching it to a background thread. If a &lt;a href="https://apple.github.io/swift-nio/docs/current/NIO/Protocols/ChannelHandler.html" rel="nofollow"&gt;&lt;code&gt;ChannelHandler&lt;/code&gt;&lt;/a&gt; blocks for any reason, all &lt;a href="https://apple.github.io/swift-nio/docs/current/NIO/Protocols/Channel.html" rel="nofollow"&gt;&lt;code&gt;Channel&lt;/code&gt;&lt;/a&gt;s attached to the parent &lt;a href="https://apple.github.io/swift-nio/docs/current/NIO/Protocols/EventLoop.html" rel="nofollow"&gt;&lt;code&gt;EventLoop&lt;/code&gt;&lt;/a&gt; will be unable to progress until the blocking call completes.&lt;/p&gt;
&lt;p&gt;This is a common concern while writing SwiftNIO applications. If it is useful to write code in a blocking style, it is highly recommended that you dispatch work to a different thread when you're done with it in your pipeline.&lt;/p&gt;
&lt;h4&gt;&lt;a id="user-content-bootstrap" class="anchor" aria-hidden="true" href="#bootstrap"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Bootstrap&lt;/h4&gt;
&lt;p&gt;While it is possible to configure and register &lt;a href="https://apple.github.io/swift-nio/docs/current/NIO/Protocols/Channel.html" rel="nofollow"&gt;&lt;code&gt;Channel&lt;/code&gt;&lt;/a&gt;s with &lt;a href="https://apple.github.io/swift-nio/docs/current/NIO/Protocols/EventLoop.html" rel="nofollow"&gt;&lt;code&gt;EventLoop&lt;/code&gt;&lt;/a&gt;s directly, it is generally more useful to have a higher-level abstraction to handle this work.&lt;/p&gt;
&lt;p&gt;For this reason, SwiftNIO ships a number of &lt;code&gt;Bootstrap&lt;/code&gt; objects whose purpose is to streamline the creation of channels. Some &lt;code&gt;Bootstrap&lt;/code&gt; objects also provide other functionality, such as support for Happy Eyeballs for making TCP connection attempts.&lt;/p&gt;
&lt;p&gt;Currently SwiftNIO ships with three &lt;code&gt;Bootstrap&lt;/code&gt; objects: &lt;a href="https://apple.github.io/swift-nio/docs/current/NIO/Classes/ServerBootstrap.html" rel="nofollow"&gt;&lt;code&gt;ServerBootstrap&lt;/code&gt;&lt;/a&gt;, for bootstrapping listening channels; &lt;a href="https://apple.github.io/swift-nio/docs/current/NIO/Classes/ClientBootstrap.html" rel="nofollow"&gt;&lt;code&gt;ClientBootstrap&lt;/code&gt;&lt;/a&gt;, for bootstrapping client TCP channels; and &lt;a href="https://apple.github.io/swift-nio/docs/current/NIO/Classes/DatagramBootstrap.html" rel="nofollow"&gt;&lt;code&gt;DatagramBootstrap&lt;/code&gt;&lt;/a&gt; for bootstrapping UDP channels.&lt;/p&gt;
&lt;h4&gt;&lt;a id="user-content-bytebuffer" class="anchor" aria-hidden="true" href="#bytebuffer"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;ByteBuffer&lt;/h4&gt;
&lt;p&gt;The majority of the work in a SwiftNIO application involves shuffling buffers of bytes around. At the very least, data is sent and received to and from the network in the form of buffers of bytes. For this reason it's very important to have a high-performance data structure that is optimized for the kind of work SwiftNIO applications perform.&lt;/p&gt;
&lt;p&gt;For this reason, SwiftNIO provides &lt;a href="https://apple.github.io/swift-nio/docs/current/NIO/Structs/ByteBuffer.html" rel="nofollow"&gt;&lt;code&gt;ByteBuffer&lt;/code&gt;&lt;/a&gt;, a fast copy-on-write byte buffer that forms a key building block of most SwiftNIO applications.&lt;/p&gt;
&lt;p&gt;&lt;a href="https://apple.github.io/swift-nio/docs/current/NIO/Structs/ByteBuffer.html" rel="nofollow"&gt;&lt;code&gt;ByteBuffer&lt;/code&gt;&lt;/a&gt; provides a number of useful features, and in addition provides a number of hooks to use it in an "unsafe" mode. This turns off bounds checking for improved performance, at the cost of potentially opening your application up to memory correctness problems.&lt;/p&gt;
&lt;p&gt;In general, it is highly recommended that you use the &lt;a href="https://apple.github.io/swift-nio/docs/current/NIO/Structs/ByteBuffer.html" rel="nofollow"&gt;&lt;code&gt;ByteBuffer&lt;/code&gt;&lt;/a&gt; in its safe mode at all times.&lt;/p&gt;
&lt;p&gt;For more details on the API of &lt;a href="https://apple.github.io/swift-nio/docs/current/NIO/Structs/ByteBuffer.html" rel="nofollow"&gt;&lt;code&gt;ByteBuffer&lt;/code&gt;&lt;/a&gt;, please see our API documentation, linked below.&lt;/p&gt;
&lt;h4&gt;&lt;a id="user-content-promises-and-futures" class="anchor" aria-hidden="true" href="#promises-and-futures"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Promises and Futures&lt;/h4&gt;
&lt;p&gt;One major difference between writing concurrent code and writing synchronous code is that not all actions will complete immediately. For example, when you write data on a channel, it is possible that the event loop will not be able to immediately flush that write out to the network. For this reason, SwiftNIO provides &lt;a href="https://apple.github.io/swift-nio/docs/current/NIO/Structs/EventLoopPromise.html" rel="nofollow"&gt;&lt;code&gt;EventLoopPromise&amp;lt;T&amp;gt;&lt;/code&gt;&lt;/a&gt; and &lt;a href="https://apple.github.io/swift-nio/docs/current/NIO/Classes/EventLoopFuture.html" rel="nofollow"&gt;&lt;code&gt;EventLoopFuture&amp;lt;T&amp;gt;&lt;/code&gt;&lt;/a&gt; to manage operations that complete &lt;em&gt;asynchronously&lt;/em&gt;.&lt;/p&gt;
&lt;p&gt;An &lt;a href="https://apple.github.io/swift-nio/docs/current/NIO/Classes/EventLoopFuture.html" rel="nofollow"&gt;&lt;code&gt;EventLoopFuture&amp;lt;T&amp;gt;&lt;/code&gt;&lt;/a&gt; is essentially a container for the return value of a function that will be populated &lt;em&gt;at some time in the future&lt;/em&gt;. Each &lt;a href="https://apple.github.io/swift-nio/docs/current/NIO/Classes/EventLoopFuture.html" rel="nofollow"&gt;&lt;code&gt;EventLoopFuture&amp;lt;T&amp;gt;&lt;/code&gt;&lt;/a&gt; has a corresponding &lt;a href="https://apple.github.io/swift-nio/docs/current/NIO/Structs/EventLoopPromise.html" rel="nofollow"&gt;&lt;code&gt;EventLoopPromise&amp;lt;T&amp;gt;&lt;/code&gt;&lt;/a&gt;, which is the object that the result will be put into. When the promise is succeeded, the future will be fulfilled.&lt;/p&gt;
&lt;p&gt;If you had to poll the future to detect when it completed that would be quite inefficient, so &lt;a href="https://apple.github.io/swift-nio/docs/current/NIO/Classes/EventLoopFuture.html" rel="nofollow"&gt;&lt;code&gt;EventLoopFuture&amp;lt;T&amp;gt;&lt;/code&gt;&lt;/a&gt; is designed to have managed callbacks. Essentially, you can hang callbacks off the future that will be executed when a result is available. The &lt;a href="https://apple.github.io/swift-nio/docs/current/NIO/Classes/EventLoopFuture.html" rel="nofollow"&gt;&lt;code&gt;EventLoopFuture&amp;lt;T&amp;gt;&lt;/code&gt;&lt;/a&gt; will even carefully arrange the scheduling to ensure that these callbacks always execute on the event loop that initially created the promise, which helps ensure that you don't need too much synchronization around &lt;a href="https://apple.github.io/swift-nio/docs/current/NIO/Classes/EventLoopFuture.html" rel="nofollow"&gt;&lt;code&gt;EventLoopFuture&amp;lt;T&amp;gt;&lt;/code&gt;&lt;/a&gt; callbacks.&lt;/p&gt;
&lt;p&gt;Another important topic for consideration is the difference between how the promise passed to &lt;code&gt;close&lt;/code&gt; works as opposed to &lt;code&gt;closeFuture&lt;/code&gt; on a &lt;a href="https://apple.github.io/swift-nio/docs/current/NIO/Protocols/Channel.html" rel="nofollow"&gt;&lt;code&gt;Channel&lt;/code&gt;&lt;/a&gt;. For example, the promise passed into &lt;code&gt;close&lt;/code&gt; will succeed after the &lt;a href="https://apple.github.io/swift-nio/docs/current/NIO/Protocols/Channel.html" rel="nofollow"&gt;&lt;code&gt;Channel&lt;/code&gt;&lt;/a&gt; is closed down but before the &lt;a href="https://apple.github.io/swift-nio/docs/current/NIO/Classes/ChannelPipeline.html" rel="nofollow"&gt;&lt;code&gt;ChannelPipeline&lt;/code&gt;&lt;/a&gt; is completely cleared out. This will allow you to take action on the &lt;a href="https://apple.github.io/swift-nio/docs/current/NIO/Classes/ChannelPipeline.html" rel="nofollow"&gt;&lt;code&gt;ChannelPipeline&lt;/code&gt;&lt;/a&gt; before it is completely cleared out, if needed. If it is desired to wait for the &lt;a href="https://apple.github.io/swift-nio/docs/current/NIO/Protocols/Channel.html" rel="nofollow"&gt;&lt;code&gt;Channel&lt;/code&gt;&lt;/a&gt; to close down and the &lt;a href="https://apple.github.io/swift-nio/docs/current/NIO/Classes/ChannelPipeline.html" rel="nofollow"&gt;&lt;code&gt;ChannelPipeline&lt;/code&gt;&lt;/a&gt; to be cleared out without any further action, then the better option would be to wait for the &lt;code&gt;closeFuture&lt;/code&gt; to succeed.&lt;/p&gt;
&lt;p&gt;There are several functions for applying callbacks to &lt;a href="https://apple.github.io/swift-nio/docs/current/NIO/Classes/EventLoopFuture.html" rel="nofollow"&gt;&lt;code&gt;EventLoopFuture&amp;lt;T&amp;gt;&lt;/code&gt;&lt;/a&gt;, depending on how and when you want them to execute. Details of these functions is left to the API documentation.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-design-philosophy" class="anchor" aria-hidden="true" href="#design-philosophy"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Design Philosophy&lt;/h3&gt;
&lt;p&gt;SwiftNIO is designed to be a powerful tool for building networked applications and frameworks, but it is not intended to be the perfect solution for all levels of abstraction. SwiftNIO is tightly focused on providing the basic I/O primitives and protocol implementations at low levels of abstraction, leaving more expressive but slower abstractions to the wider community to build. The intention is that SwiftNIO will be a building block for server-side applications, not necessarily the framework those applications will use directly.&lt;/p&gt;
&lt;p&gt;Applications that need extremely high performance from their networking stack may choose to use SwiftNIO directly in order to reduce the overhead of their abstractions. These applications should be able to maintain extremely high performance with relatively little maintenance cost. SwiftNIO also focuses on providing useful abstractions for this use-case, such that extremely high performance network servers can be built directly.&lt;/p&gt;
&lt;p&gt;The core SwiftNIO repository will contain a few extremely important protocol implementations, such as HTTP, directly in tree. However, we believe that most protocol implementations should be decoupled from the release cycle of the underlying networking stack, as the release cadence is likely to be very different (either much faster or much slower). For this reason, we actively encourage the community to develop and maintain their protocol implementations out-of-tree. Indeed, some first-party SwiftNIO protocol implementations, including our TLS and HTTP/2 bindings, are developed out-of-tree!&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-documentation" class="anchor" aria-hidden="true" href="#documentation"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Documentation&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://apple.github.io/swift-nio/docs/current/NIO/index.html" rel="nofollow"&gt;API documentation&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-example-usage" class="anchor" aria-hidden="true" href="#example-usage"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Example Usage&lt;/h2&gt;
&lt;p&gt;There are currently several example projects that demonstrate how to use SwiftNIO.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;chat client&lt;/strong&gt; &lt;a href="https://github.com/apple/swift-nio/tree/master/Sources/NIOChatClient"&gt;https://github.com/apple/swift-nio/tree/master/Sources/NIOChatClient&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;chat server&lt;/strong&gt; &lt;a href="https://github.com/apple/swift-nio/tree/master/Sources/NIOChatServer"&gt;https://github.com/apple/swift-nio/tree/master/Sources/NIOChatServer&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;echo client&lt;/strong&gt; &lt;a href="https://github.com/apple/swift-nio/tree/master/Sources/NIOEchoClient"&gt;https://github.com/apple/swift-nio/tree/master/Sources/NIOEchoClient&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;echo server&lt;/strong&gt; &lt;a href="https://github.com/apple/swift-nio/tree/master/Sources/NIOEchoServer"&gt;https://github.com/apple/swift-nio/tree/master/Sources/NIOEchoServer&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;UDP echo client&lt;/strong&gt; &lt;a href="https://github.com/apple/swift-nio/tree/master/Sources/NIOUDPEchoClient"&gt;https://github.com/apple/swift-nio/tree/master/Sources/NIOUDPEchoClient&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;UDP echo server&lt;/strong&gt; &lt;a href="https://github.com/apple/swift-nio/tree/master/Sources/NIOUDPEchoServer"&gt;https://github.com/apple/swift-nio/tree/master/Sources/NIOUDPEchoServer&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;HTTP client&lt;/strong&gt; &lt;a href="https://github.com/apple/swift-nio/tree/master/Sources/NIOHTTP1Client"&gt;https://github.com/apple/swift-nio/tree/master/Sources/NIOHTTP1Client&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;HTTP server&lt;/strong&gt; &lt;a href="https://github.com/apple/swift-nio/tree/master/Sources/NIOHTTP1Server"&gt;https://github.com/apple/swift-nio/tree/master/Sources/NIOHTTP1Server&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;WebSocket client&lt;/strong&gt; &lt;a href="https://github.com/apple/swift-nio/tree/master/Sources/NIOWebSocketClient"&gt;https://github.com/apple/swift-nio/tree/master/Sources/NIOWebSocketClient&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;WebSocket server&lt;/strong&gt; &lt;a href="https://github.com/apple/swift-nio/tree/master/Sources/NIOWebSocketServer"&gt;https://github.com/apple/swift-nio/tree/master/Sources/NIOWebSocketServer&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-getting-started" class="anchor" aria-hidden="true" href="#getting-started"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Getting Started&lt;/h2&gt;
&lt;p&gt;SwiftNIO primarily uses &lt;a href="https://swift.org/package-manager/" rel="nofollow"&gt;SwiftPM&lt;/a&gt; as its build tool, so we recommend using that as well. If you want to depend on SwiftNIO in your own project, it's as simple as adding a &lt;code&gt;dependencies&lt;/code&gt; clause to your &lt;code&gt;Package.swift&lt;/code&gt;:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;dependencies&lt;span class="pl-k"&gt;:&lt;/span&gt; [
    .&lt;span class="pl-c1"&gt;package&lt;/span&gt;(&lt;span class="pl-c1"&gt;url&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;https://github.com/apple/swift-nio.git&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-c1"&gt;from&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;2.0.0&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
]&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;and then adding the appropriate SwiftNIO module(s) to your target dependencies.&lt;/p&gt;
&lt;p&gt;If your project is set up as an Xcode project and you're using Xcode 11+, you can add SwiftNIO as a dependency to your
Xcode project by clicking File -&amp;gt; Swift Packages -&amp;gt; Add Package Dependency. In the upcoming dialog, please enter
&lt;code&gt;https://github.com/apple/swift-nio.git&lt;/code&gt; and click Next twice. Finally, select the targets you are planning to use (for
example &lt;code&gt;NIO&lt;/code&gt;, &lt;code&gt;NIOHTTP1&lt;/code&gt;, and &lt;code&gt;NIOFoundationCompat&lt;/code&gt;) and click finish. Now will be able to &lt;code&gt;import NIO&lt;/code&gt; (as well as all
the other targets you have selected) in your project.&lt;/p&gt;
&lt;p&gt;To work on SwiftNIO itself, or to investigate some of the demonstration applications, you can clone the repository directly and use SwiftPM to help build it. For example, you can run the following commands to compile and run the example echo server:&lt;/p&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt;swift build
swift &lt;span class="pl-c1"&gt;test&lt;/span&gt;
swift run NIOEchoServer&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;To verify that it is working, you can use another shell to attempt to connect to it:&lt;/p&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt;&lt;span class="pl-c1"&gt;echo&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;Hello SwiftNIO&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; &lt;span class="pl-k"&gt;|&lt;/span&gt; nc localhost 9999&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;If all goes well, you'll see the message echoed back to you.&lt;/p&gt;
&lt;p&gt;To work on SwiftNIO in Xcode 11+, you can just open the &lt;code&gt;Package.swift&lt;/code&gt;
file in Xcode and use Xcode's support for SwiftPM Packages.&lt;/p&gt;
&lt;p&gt;If you want to develop SwiftNIO with Xcode 10, you have to generate an Xcode project:&lt;/p&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt;swift package generate-xcodeproj&lt;/pre&gt;&lt;/div&gt;
&lt;h3&gt;&lt;a id="user-content-an-alternative-using-docker-compose" class="anchor" aria-hidden="true" href="#an-alternative-using-docker-compose"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;An alternative: using &lt;code&gt;docker-compose&lt;/code&gt;&lt;/h3&gt;
&lt;p&gt;Alternatively, you may want to develop or test with &lt;code&gt;docker-compose&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;First make sure you have &lt;a href="https://www.docker.com/community-edition" rel="nofollow"&gt;Docker&lt;/a&gt; installed, next run the following commands:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;docker-compose -f docker/docker-compose.yaml run test&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Will create a base image with Swift runtime and other build and test dependencies, compile SwiftNIO and run the unit and integration tests&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;docker-compose -f docker/docker-compose.yaml up echo&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Will create a base image, compile SwiftNIO, and run a sample &lt;code&gt;NIOEchoServer&lt;/code&gt; on
&lt;code&gt;localhost:9999&lt;/code&gt;. Test it by &lt;code&gt;echo Hello SwiftNIO | nc localhost 9999&lt;/code&gt;.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;docker-compose -f docker/docker-compose.yaml up http&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Will create a base image, compile SwiftNIO, and run a sample &lt;code&gt;NIOHTTP1Server&lt;/code&gt; on
&lt;code&gt;localhost:8888&lt;/code&gt;. Test it by &lt;code&gt;curl http://localhost:8888&lt;/code&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-developing-swiftnio" class="anchor" aria-hidden="true" href="#developing-swiftnio"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Developing SwiftNIO&lt;/h2&gt;
&lt;p&gt;&lt;em&gt;Note&lt;/em&gt;: This section is only relevant if you would like to develop SwiftNIO yourself. You can ignore the information here if you just want to use SwiftNIO as a SwiftPM package.&lt;/p&gt;
&lt;p&gt;For the most part, SwiftNIO development is as straightforward as any other SwiftPM project. With that said, we do have a few processes that are worth understanding before you contribute. For details, please see &lt;code&gt;CONTRIBUTING.md&lt;/code&gt; in this repository.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-prerequisites" class="anchor" aria-hidden="true" href="#prerequisites"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Prerequisites&lt;/h3&gt;
&lt;p&gt;SwiftNIO's &lt;code&gt;master&lt;/code&gt; branch is the development branch for the next releases of SwiftNIO 2, it's Swift 5-only.&lt;/p&gt;
&lt;p&gt;To be able to compile and run SwiftNIO and the integration tests, you need to
have a few prerequisites installed on your system.&lt;/p&gt;
&lt;h4&gt;&lt;a id="user-content-macos" class="anchor" aria-hidden="true" href="#macos"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;macOS&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;Xcode 10.2 or newer, Xcode 11 recommended.&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;&lt;a id="user-content-linux" class="anchor" aria-hidden="true" href="#linux"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Linux&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;Swift 5.0 or 5.1 (recommended) from &lt;a href="https://swift.org/download/#releases" rel="nofollow"&gt;swift.org/download&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;netcat (for integration tests only)&lt;/li&gt;
&lt;li&gt;lsof (for integration tests only)&lt;/li&gt;
&lt;li&gt;shasum (for integration tests only)&lt;/li&gt;
&lt;/ul&gt;
&lt;h4&gt;&lt;a id="user-content-ubuntu-1804" class="anchor" aria-hidden="true" href="#ubuntu-1804"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Ubuntu 18.04&lt;/h4&gt;
&lt;pre&gt;&lt;code&gt;# install swift tarball from https://swift.org/downloads
apt-get install -y git curl libatomic1 libxml2 netcat-openbsd lsof perl
&lt;/code&gt;&lt;/pre&gt;
&lt;h3&gt;&lt;a id="user-content-fedora-28" class="anchor" aria-hidden="true" href="#fedora-28"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Fedora 28+&lt;/h3&gt;
&lt;pre&gt;&lt;code&gt;dnf install swift-lang /usr/bin/nc /usr/bin/lsof /usr/bin/shasum
&lt;/code&gt;&lt;/pre&gt;
&lt;/article&gt;&lt;/div&gt;</description><author>apple</author><guid isPermaLink="false">https://github.com/apple/swift-nio</guid><pubDate>Fri, 08 Nov 2019 00:05:00 GMT</pubDate></item><item><title>danielgindi/Charts #6 in Swift, This week</title><link>https://github.com/danielgindi/Charts</link><description>&lt;p&gt;&lt;i&gt;Beautiful charts for iOS/tvOS/OSX! The Apple side of the crossplatform MPAndroidChart.&lt;/i&gt;&lt;/p&gt;&lt;div id="readme" class="instapaper_body md" data-path="README.md"&gt;&lt;article class="markdown-body entry-content p-5" itemprop="text"&gt;&lt;p&gt;&lt;strong&gt;Version 3.4.0&lt;/strong&gt;, synced to &lt;a href="https://github.com/PhilJay/MPAndroidChart/commit/f6a398b"&gt;MPAndroidChart #f6a398b&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="https://camo.githubusercontent.com/c6f7ce37a23ae05e72a70bf7e2978b0cd2ebdd6e/68747470733a2f2f7261772e6769746875622e636f6d2f64616e69656c67696e64692f4368617274732f6d61737465722f4173736574732f666561747572655f677261706869632e706e67"&gt;&lt;img src="https://camo.githubusercontent.com/c6f7ce37a23ae05e72a70bf7e2978b0cd2ebdd6e/68747470733a2f2f7261772e6769746875622e636f6d2f64616e69656c67696e64692f4368617274732f6d61737465722f4173736574732f666561747572655f677261706869632e706e67" alt="alt tag" data-canonical-src="https://raw.github.com/danielgindi/Charts/master/Assets/feature_graphic.png" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a target="_blank" rel="noopener noreferrer" href="https://camo.githubusercontent.com/3ec53f843d26d0d0f8fc1c8b0c2d6ba12e9b527e/68747470733a2f2f696d672e736869656c64732e696f2f636f636f61706f64732f702f4368617274732e737667"&gt;&lt;img src="https://camo.githubusercontent.com/3ec53f843d26d0d0f8fc1c8b0c2d6ba12e9b527e/68747470733a2f2f696d672e736869656c64732e696f2f636f636f61706f64732f702f4368617274732e737667" alt="Supported Platforms" data-canonical-src="https://img.shields.io/cocoapods/p/Charts.svg" style="max-width:100%;"&gt;&lt;/a&gt; &lt;a href="https://github.com/danielgindi/Charts/releases"&gt;&lt;img src="https://camo.githubusercontent.com/a337dd2eacabc7ca4739ae7a62711390a16910b1/68747470733a2f2f696d672e736869656c64732e696f2f6769746875622f72656c656173652f64616e69656c67696e64692f4368617274732e737667" alt="Releases" data-canonical-src="https://img.shields.io/github/release/danielgindi/Charts.svg" style="max-width:100%;"&gt;&lt;/a&gt; &lt;a href="http://cocoapods.org/pods/charts" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/e7e5ddbe9672eed6ec4505b7f71ec5be7b5cfa27/68747470733a2f2f696d672e736869656c64732e696f2f636f636f61706f64732f762f4368617274732e737667" alt="Latest pod release" data-canonical-src="https://img.shields.io/cocoapods/v/Charts.svg" style="max-width:100%;"&gt;&lt;/a&gt; &lt;a href="https://github.com/Carthage/Carthage"&gt;&lt;img src="https://camo.githubusercontent.com/3dc8a44a2c3f7ccd5418008d1295aae48466c141/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f43617274686167652d636f6d70617469626c652d3442433531442e7376673f7374796c653d666c6174" alt="Carthage compatible" data-canonical-src="https://img.shields.io/badge/Carthage-compatible-4BC51D.svg?style=flat" style="max-width:100%;"&gt;&lt;/a&gt; &lt;a href="https://travis-ci.org/danielgindi/Charts" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/b3868a63b91220618d8ff25b3bebe838c8213178/68747470733a2f2f7472617669732d63692e6f72672f64616e69656c67696e64692f4368617274732e7376673f6272616e63683d6d6173746572" alt="Build Status" data-canonical-src="https://travis-ci.org/danielgindi/Charts.svg?branch=master" style="max-width:100%;"&gt;&lt;/a&gt; &lt;a href="https://codecov.io/gh/danielgindi/Charts" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/5f55978bcf0a11ed1fbd5eca65b826d871e0d382/68747470733a2f2f636f6465636f762e696f2f67682f64616e69656c67696e64692f4368617274732f6272616e63682f6d61737465722f67726170682f62616467652e737667" alt="codecov" data-canonical-src="https://codecov.io/gh/danielgindi/Charts/branch/master/graph/badge.svg" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://gitter.im/danielgindi/Charts?utm_source=badge&amp;amp;utm_medium=badge&amp;amp;utm_campaign=pr-badge&amp;amp;utm_content=badge" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/734e5f07cb46b57180113a9faf97701418edf8e3/68747470733a2f2f6261646765732e6769747465722e696d2f64616e69656c67696e64692f4368617274732e737667" alt="Join the chat at https://gitter.im/danielgindi/Charts" data-canonical-src="https://badges.gitter.im/danielgindi/Charts.svg" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-just-a-heads-up-charts-30-has-some-breaking-changes-please-read-the-releasemigration-notes" class="anchor" aria-hidden="true" href="#just-a-heads-up-charts-30-has-some-breaking-changes-please-read-the-releasemigration-notes"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Just a heads up: Charts 3.0 has some breaking changes. Please read &lt;a href="https://github.com/danielgindi/Charts/releases/tag/v3.0.0"&gt;the release/migration notes&lt;/a&gt;.&lt;/h3&gt;
&lt;h3&gt;&lt;a id="user-content-another-heads-up-chartsrealm-is-now-in-a-separate-repo-pods-is-also-now-charts-and-chartsrealm-instead-of-chartscore-and-chartsrealm" class="anchor" aria-hidden="true" href="#another-heads-up-chartsrealm-is-now-in-a-separate-repo-pods-is-also-now-charts-and-chartsrealm-instead-of-chartscore-and-chartsrealm"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Another heads up: ChartsRealm is now in a &lt;a href="https://github.com/danielgindi/ChartsRealm"&gt;separate repo&lt;/a&gt;. Pods is also now &lt;code&gt;Charts&lt;/code&gt; and &lt;code&gt;ChartsRealm&lt;/code&gt;, instead of &lt;del&gt;&lt;code&gt;Charts/Core&lt;/code&gt;&lt;/del&gt; and &lt;del&gt;&lt;code&gt;Charts/Realm&lt;/code&gt;&lt;/del&gt;&lt;/h3&gt;
&lt;h3&gt;&lt;a id="user-content-one-more-heads-up-as-swift-evolves-if-you-are-not-using-the-latest-swift-compiler-you-shouldnt-check-out-the-master-branch-instead-you-should-go-to-the-release-page-and-pick-up-whatever-suits-you" class="anchor" aria-hidden="true" href="#one-more-heads-up-as-swift-evolves-if-you-are-not-using-the-latest-swift-compiler-you-shouldnt-check-out-the-master-branch-instead-you-should-go-to-the-release-page-and-pick-up-whatever-suits-you"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;One more heads up: As Swift evolves, if you are not using the latest Swift compiler, you shouldn't check out the master branch. Instead, you should go to the release page and pick up whatever suits you.&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;Xcode 11 / Swift 5 (master branch)&lt;/li&gt;
&lt;li&gt;iOS &amp;gt;= 8.0 (Use as an &lt;strong&gt;Embedded&lt;/strong&gt; Framework)&lt;/li&gt;
&lt;li&gt;tvOS &amp;gt;= 9.0&lt;/li&gt;
&lt;li&gt;macOS &amp;gt;= 10.11&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Okay so there's this beautiful library called &lt;a href="https://github.com/PhilJay/MPAndroidChart"&gt;MPAndroidChart&lt;/a&gt; by &lt;a href="https://www.linkedin.com/in/philippjahoda" rel="nofollow"&gt;Philipp Jahoda&lt;/a&gt; which has become very popular amongst Android developers, but there was no decent solution to create charts for iOS.&lt;/p&gt;
&lt;p&gt;I've chosen to write it in &lt;code&gt;Swift&lt;/code&gt; as it can be highly optimized by the compiler, and can be used in both &lt;code&gt;Swift&lt;/code&gt; and &lt;code&gt;ObjC&lt;/code&gt; project. The demo project is written in &lt;code&gt;ObjC&lt;/code&gt; to demonstrate how it works.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;An amazing feature&lt;/strong&gt; of this library now, for Android, iOS, tvOS and macOS, is the time it saves you when developing for both platforms, as the learning curve is singleton- it happens only once, and the code stays very similar so developers don't have to go around and re-invent the app to produce the same output with a different library. (And that's not even considering the fact that there's not really another good choice out there currently...)&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-having-trouble-running-the-demo" class="anchor" aria-hidden="true" href="#having-trouble-running-the-demo"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Having trouble running the demo?&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;ChartsDemo/ChartsDemo.xcodeproj&lt;/code&gt; is the demo project for iOS/tvOS&lt;/li&gt;
&lt;li&gt;&lt;code&gt;ChartsDemo-OSX/ChartsDemo-OSX.xcodeproj&lt;/code&gt; is the demo project for macOS&lt;/li&gt;
&lt;li&gt;Make sure you are running a supported version of Xcode.
&lt;ul&gt;
&lt;li&gt;Usually it is specified here a few lines above.&lt;/li&gt;
&lt;li&gt;In most cases it will be the latest Xcode version.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Make sure that your project supports Swift 5.0&lt;/li&gt;
&lt;li&gt;Optional: Run &lt;code&gt;carthage checkout&lt;/code&gt; in the project folder, to fetch dependencies (i.e testing dependencies).
&lt;ul&gt;
&lt;li&gt;If you don't have Carthage - you can get it &lt;a href="https://github.com/Carthage/Carthage/releases"&gt;here&lt;/a&gt;.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-usage" class="anchor" aria-hidden="true" href="#usage"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Usage&lt;/h2&gt;
&lt;p&gt;In order to correctly compile:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Drag the &lt;code&gt;Charts.xcodeproj&lt;/code&gt; to your project&lt;/li&gt;
&lt;li&gt;Go to your target's settings, hit the "+" under the "Embedded Binaries" section, and select the Charts.framework&lt;/li&gt;
&lt;li&gt;&lt;code&gt;@import Charts&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;When using Swift in an ObjC project:&lt;/li&gt;
&lt;/ol&gt;
&lt;ul&gt;
&lt;li&gt;You need to import your Bridging Header. Usually it is "&lt;em&gt;YourProject-Swift.h&lt;/em&gt;", so in ChartsDemo it's "&lt;em&gt;ChartsDemo-Swift.h&lt;/em&gt;". Do not try to actually include "&lt;em&gt;ChartsDemo-Swift.h&lt;/em&gt;" in your project :-)&lt;/li&gt;
&lt;li&gt;(Xcode 8.1 and earlier) Under "Build Options", mark "Embedded Content Contains Swift Code"&lt;/li&gt;
&lt;li&gt;(Xcode 8.2+) Under "Build Options", mark "Always Embed Swift Standard Libraries"&lt;/li&gt;
&lt;/ul&gt;
&lt;ol start="5"&gt;
&lt;li&gt;When using &lt;a href="https://realm.io/" rel="nofollow"&gt;Realm.io&lt;/a&gt;:
&lt;ul&gt;
&lt;li&gt;Note that the Realm framework is not linked with Charts - it is only there for &lt;em&gt;optional&lt;/em&gt; bindings. Which means that you need to have the framework in your project, and in a compatible version to whatever is compiled with Charts. We will do our best to always compile against the latest version.&lt;/li&gt;
&lt;li&gt;You'll need to add &lt;code&gt;ChartsRealm&lt;/code&gt; as a dependency too.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h2&gt;&lt;a id="user-content-3rd-party-tutorials" class="anchor" aria-hidden="true" href="#3rd-party-tutorials"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;3rd party tutorials&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://medium.com/@skoli/using-realm-and-charts-with-swift-3-in-ios-10-40c42e3838c0#.2gyymwfh8" rel="nofollow"&gt;Using Realm and Charts with Swift 3 in iOS 10 (Sami Korpela)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://medium.com/@OsianSmith/creating-a-line-chart-in-swift-3-and-ios-10-2f647c95392e" rel="nofollow"&gt;Creating a Line Chart in Swift 3 and iOS 10 (Osian Smith)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/annalizhaz/ChartsForSwiftBasic"&gt;Beginning Set-up and Example Using Charts with Swift 3&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Want your tutorial to show here? Create a PR!&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-troubleshooting" class="anchor" aria-hidden="true" href="#troubleshooting"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Troubleshooting&lt;/h2&gt;
&lt;h4&gt;&lt;a id="user-content-cant-compile" class="anchor" aria-hidden="true" href="#cant-compile"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Can't compile?&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;Please note the difference between installing a compiled framework from CocoaPods or Carthage, and copying the source code.&lt;/li&gt;
&lt;li&gt;Please read the &lt;strong&gt;Usage&lt;/strong&gt; section again.&lt;/li&gt;
&lt;li&gt;Search in the issues&lt;/li&gt;
&lt;li&gt;Try to politely ask in the issues section&lt;/li&gt;
&lt;/ul&gt;
&lt;h4&gt;&lt;a id="user-content-other-problems--feature-requests" class="anchor" aria-hidden="true" href="#other-problems--feature-requests"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Other problems / feature requests&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;Search in the issues&lt;/li&gt;
&lt;li&gt;Try to politely ask in the issues section&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-cocoapods-install" class="anchor" aria-hidden="true" href="#cocoapods-install"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;CocoaPods Install&lt;/h2&gt;
&lt;p&gt;Add &lt;code&gt;pod 'Charts'&lt;/code&gt; to your Podfile. "Charts" is the name of the library.&lt;br&gt;
For &lt;a href="https://realm.io/" rel="nofollow"&gt;Realm&lt;/a&gt; support, please add &lt;code&gt;pod 'ChartsRealm'&lt;/code&gt; too.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Note:&lt;/strong&gt; &lt;del&gt;&lt;code&gt;pod 'ios-charts'&lt;/code&gt;&lt;/del&gt; is not the correct library, and refers to a different project by someone else.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-carthage-install" class="anchor" aria-hidden="true" href="#carthage-install"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Carthage Install&lt;/h2&gt;
&lt;p&gt;Charts now include Carthage prebuilt binaries.&lt;/p&gt;
&lt;pre lang="carthage"&gt;&lt;code&gt;github "danielgindi/Charts" == 3.4.0
github "danielgindi/Charts" ~&amp;gt; 3.4.0
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;In order to build the binaries for a new release, use &lt;code&gt;carthage build --no-skip-current &amp;amp;&amp;amp; carthage archive Charts&lt;/code&gt;.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-3rd-party-bindings" class="anchor" aria-hidden="true" href="#3rd-party-bindings"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;3rd party bindings&lt;/h2&gt;
&lt;p&gt;Xamarin (by @Flash3001): &lt;em&gt;iOS&lt;/em&gt; - &lt;a href="https://github.com/Flash3001/iOSCharts.Xamarin"&gt;GitHub&lt;/a&gt;/&lt;a href="https://www.nuget.org/packages/iOSCharts/" rel="nofollow"&gt;NuGet&lt;/a&gt;. &lt;em&gt;Android&lt;/em&gt; - &lt;a href="https://github.com/Flash3001/MPAndroidChart.Xamarin"&gt;GitHub&lt;/a&gt;/&lt;a href="https://www.nuget.org/packages/MPAndroidChart/" rel="nofollow"&gt;NuGet&lt;/a&gt;.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-help" class="anchor" aria-hidden="true" href="#help"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Help&lt;/h2&gt;
&lt;p&gt;If you like what you see here, and want to support the work being done in this repository, you could:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Contribute code, issues and pull requests&lt;/li&gt;
&lt;li&gt;Let people know this library exists (&lt;g-emoji class="g-emoji" alias="fire" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f525.png"&gt;🔥&lt;/g-emoji&gt; spread the word &lt;g-emoji class="g-emoji" alias="fire" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f525.png"&gt;🔥&lt;/g-emoji&gt;)&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.paypal.com/cgi-bin/webscr?cmd=_s-xclick&amp;amp;hosted_button_id=68UL6Y8KUPS96" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/bce14c8e2e39ba0464551b34602b4c60c182526b/68747470733a2f2f7777772e70617970616c6f626a656374732e636f6d2f656e5f55532f692f62746e2f62746e5f646f6e6174655f4c472e676966" alt="Donate" data-canonical-src="https://www.paypalobjects.com/en_US/i/btn/btn_donate_LG.gif" style="max-width:100%;"&gt;&lt;/a&gt; (You can buy me a beer, or you can buy me dinner :-)&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;Note:&lt;/strong&gt; The author of &lt;a href="https://github.com/PhilJay/MPAndroidChart"&gt;MPAndroidChart&lt;/a&gt; is the reason that this library exists, and is accepting &lt;a href="https://github.com/PhilJay/MPAndroidChart#donations"&gt;donations&lt;/a&gt; on his page. He deserves them!&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-questions--issues" class="anchor" aria-hidden="true" href="#questions--issues"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Questions &amp;amp; Issues&lt;/h2&gt;
&lt;p&gt;If you are having questions or problems, you should:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Make sure you are using the latest version of the library. Check the &lt;a href="https://github.com/danielgindi/Charts/releases"&gt;&lt;strong&gt;release-section&lt;/strong&gt;&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;Study the Android version's &lt;a href="https://github.com/PhilJay/MPAndroidChart/wiki"&gt;&lt;strong&gt;Documentation-Wiki&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Study the (Still incomplete &lt;a href="http://cocoadocs.org/docsets/Charts/" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/c2cfb861972d8cf1f4a5ba62f1e4b8f3ad2a702d/68747470733a2f2f696d672e736869656c64732e696f2f636f636f61706f64732f6d6574726963732f646f632d70657263656e742f4368617274732e737667" alt="Doc-Percent" data-canonical-src="https://img.shields.io/cocoapods/metrics/doc-percent/Charts.svg" style="max-width:100%;"&gt;&lt;/a&gt;) &lt;a href="http://cocoadocs.org/docsets/Charts/" rel="nofollow"&gt;&lt;strong&gt;Pod-Documentation&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Search or open questions on &lt;a href="http://stackoverflow.com/questions/tagged/ios-charts" rel="nofollow"&gt;&lt;strong&gt;stackoverflow&lt;/strong&gt;&lt;/a&gt; with the &lt;code&gt;ios-charts&lt;/code&gt; tag&lt;/li&gt;
&lt;li&gt;Search &lt;a href="https://github.com/danielgindi/Charts/issues"&gt;&lt;strong&gt;known issues&lt;/strong&gt;&lt;/a&gt; for your problem (open and closed)&lt;/li&gt;
&lt;li&gt;Create new issues (please &lt;g-emoji class="g-emoji" alias="fire" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f525.png"&gt;🔥&lt;/g-emoji&gt; &lt;strong&gt;search known issues before&lt;/strong&gt; &lt;g-emoji class="g-emoji" alias="fire" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f525.png"&gt;🔥&lt;/g-emoji&gt;, do not create duplicate issues)&lt;/li&gt;
&lt;/ul&gt;
&lt;h1&gt;&lt;a id="user-content-features" class="anchor" aria-hidden="true" href="#features"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Features&lt;/h1&gt;
&lt;p&gt;&lt;strong&gt;Core features:&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;8 different chart types&lt;/li&gt;
&lt;li&gt;Scaling on both axes (with touch-gesture, axes separately or pinch-zoom)&lt;/li&gt;
&lt;li&gt;Dragging / Panning (with touch-gesture)&lt;/li&gt;
&lt;li&gt;Combined-Charts (line-, bar-, scatter-, candle-stick-, bubble-)&lt;/li&gt;
&lt;li&gt;Dual (separate) Axes&lt;/li&gt;
&lt;li&gt;Customizable Axes (both x- and y-axis)&lt;/li&gt;
&lt;li&gt;Highlighting values (with customizable popup-views)&lt;/li&gt;
&lt;li&gt;Save chart to camera-roll / export to PNG/JPEG&lt;/li&gt;
&lt;li&gt;Predefined color templates&lt;/li&gt;
&lt;li&gt;Legends (generated automatically, customizable)&lt;/li&gt;
&lt;li&gt;Animations (build up animations, on both x- and y-axis)&lt;/li&gt;
&lt;li&gt;Limit lines (providing additional information, maximums, ...)&lt;/li&gt;
&lt;li&gt;Fully customizable (paints, typefaces, legends, colors, background, gestures, dashed lines, ...)&lt;/li&gt;
&lt;li&gt;Plotting data directly from &lt;a href="https://realm.io" rel="nofollow"&gt;&lt;strong&gt;Realm.io&lt;/strong&gt;&lt;/a&gt; mobile database (&lt;a href="https://github.com/danielgindi/ChartsRealm"&gt;here&lt;/a&gt;)&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;Chart types:&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;em&gt;Screenshots are currently taken from the original repository, as they render exactly the same :-)&lt;/em&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;LineChart (with legend, simple design)&lt;/strong&gt;
&lt;a target="_blank" rel="noopener noreferrer" href="https://camo.githubusercontent.com/a9eaa5fc7fb6c1e70b22acd09385055e0f5c4fe7/68747470733a2f2f7261772e6769746875622e636f6d2f5068696c4a61792f4d5043686172742f6d61737465722f73637265656e73686f74732f73696d706c6564657369676e5f6c696e656368617274342e706e67"&gt;&lt;img src="https://camo.githubusercontent.com/a9eaa5fc7fb6c1e70b22acd09385055e0f5c4fe7/68747470733a2f2f7261772e6769746875622e636f6d2f5068696c4a61792f4d5043686172742f6d61737465722f73637265656e73686f74732f73696d706c6564657369676e5f6c696e656368617274342e706e67" alt="alt tag" data-canonical-src="https://raw.github.com/PhilJay/MPChart/master/screenshots/simpledesign_linechart4.png" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;LineChart (with legend, simple design)&lt;/strong&gt;
&lt;a target="_blank" rel="noopener noreferrer" href="https://camo.githubusercontent.com/8c1c9cf68af994a1e17690834603c450638cc62c/68747470733a2f2f7261772e6769746875622e636f6d2f5068696c4a61792f4d5043686172742f6d61737465722f73637265656e73686f74732f73696d706c6564657369676e5f6c696e656368617274332e706e67"&gt;&lt;img src="https://camo.githubusercontent.com/8c1c9cf68af994a1e17690834603c450638cc62c/68747470733a2f2f7261772e6769746875622e636f6d2f5068696c4a61792f4d5043686172742f6d61737465722f73637265656e73686f74732f73696d706c6564657369676e5f6c696e656368617274332e706e67" alt="alt tag" data-canonical-src="https://raw.github.com/PhilJay/MPChart/master/screenshots/simpledesign_linechart3.png" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;LineChart (cubic lines)&lt;/strong&gt;
&lt;a target="_blank" rel="noopener noreferrer" href="https://camo.githubusercontent.com/4e85ee91169c2ad5dc500b3b415a0c974766615d/68747470733a2f2f7261772e6769746875622e636f6d2f5068696c4a61792f4d5043686172742f6d61737465722f73637265656e73686f74732f63756269636c696e6563686172742e706e67"&gt;&lt;img src="https://camo.githubusercontent.com/4e85ee91169c2ad5dc500b3b415a0c974766615d/68747470733a2f2f7261772e6769746875622e636f6d2f5068696c4a61792f4d5043686172742f6d61737465722f73637265656e73686f74732f63756269636c696e6563686172742e706e67" alt="alt tag" data-canonical-src="https://raw.github.com/PhilJay/MPChart/master/screenshots/cubiclinechart.png" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;LineChart (gradient fill)&lt;/strong&gt;
&lt;a target="_blank" rel="noopener noreferrer" href="https://camo.githubusercontent.com/e9f3408cc22c2896a897e9ed92a2fd2cbcf40493/68747470733a2f2f7261772e6769746875622e636f6d2f5068696c4a61792f4d50416e64726f696443686172742f6d61737465722f73637265656e73686f74732f6c696e655f63686172745f6772616469656e742e706e67"&gt;&lt;img src="https://camo.githubusercontent.com/e9f3408cc22c2896a897e9ed92a2fd2cbcf40493/68747470733a2f2f7261772e6769746875622e636f6d2f5068696c4a61792f4d50416e64726f696443686172742f6d61737465722f73637265656e73686f74732f6c696e655f63686172745f6772616469656e742e706e67" alt="alt tag" data-canonical-src="https://raw.github.com/PhilJay/MPAndroidChart/master/screenshots/line_chart_gradient.png" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Combined-Chart (bar- and linechart in this case)&lt;/strong&gt;
&lt;a target="_blank" rel="noopener noreferrer" href="https://camo.githubusercontent.com/e29d8d3316203700965cc6cc56e67b779f2845bb/68747470733a2f2f7261772e6769746875622e636f6d2f5068696c4a61792f4d5043686172742f6d61737465722f73637265656e73686f74732f636f6d62696e65645f63686172742e706e67"&gt;&lt;img src="https://camo.githubusercontent.com/e29d8d3316203700965cc6cc56e67b779f2845bb/68747470733a2f2f7261772e6769746875622e636f6d2f5068696c4a61792f4d5043686172742f6d61737465722f73637265656e73686f74732f636f6d62696e65645f63686172742e706e67" alt="alt tag" data-canonical-src="https://raw.github.com/PhilJay/MPChart/master/screenshots/combined_chart.png" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;BarChart (with legend, simple design)&lt;/strong&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="https://camo.githubusercontent.com/78b4bc4e50e151970961daf56e81c4c0db72d27c/68747470733a2f2f7261772e6769746875622e636f6d2f5068696c4a61792f4d5043686172742f6d61737465722f73637265656e73686f74732f73696d706c6564657369676e5f6261726368617274332e706e67"&gt;&lt;img src="https://camo.githubusercontent.com/78b4bc4e50e151970961daf56e81c4c0db72d27c/68747470733a2f2f7261772e6769746875622e636f6d2f5068696c4a61792f4d5043686172742f6d61737465722f73637265656e73686f74732f73696d706c6564657369676e5f6261726368617274332e706e67" alt="alt tag" data-canonical-src="https://raw.github.com/PhilJay/MPChart/master/screenshots/simpledesign_barchart3.png" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;BarChart (grouped DataSets)&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="https://camo.githubusercontent.com/4bf136c2fd25bcbeac0bcf363bc8f48dae0651fc/68747470733a2f2f7261772e6769746875622e636f6d2f5068696c4a61792f4d5043686172742f6d61737465722f73637265656e73686f74732f67726f7570656462617263686172742e706e67"&gt;&lt;img src="https://camo.githubusercontent.com/4bf136c2fd25bcbeac0bcf363bc8f48dae0651fc/68747470733a2f2f7261772e6769746875622e636f6d2f5068696c4a61792f4d5043686172742f6d61737465722f73637265656e73686f74732f67726f7570656462617263686172742e706e67" alt="alt tag" data-canonical-src="https://raw.github.com/PhilJay/MPChart/master/screenshots/groupedbarchart.png" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Horizontal-BarChart&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="https://camo.githubusercontent.com/2ec281e0ac3013076bff1c3ac00d8d6de372d7a4/68747470733a2f2f7261772e6769746875622e636f6d2f5068696c4a61792f4d5043686172742f6d61737465722f73637265656e73686f74732f686f72697a6f6e74616c5f62617263686172742e706e67"&gt;&lt;img src="https://camo.githubusercontent.com/2ec281e0ac3013076bff1c3ac00d8d6de372d7a4/68747470733a2f2f7261772e6769746875622e636f6d2f5068696c4a61792f4d5043686172742f6d61737465722f73637265656e73686f74732f686f72697a6f6e74616c5f62617263686172742e706e67" alt="alt tag" data-canonical-src="https://raw.github.com/PhilJay/MPChart/master/screenshots/horizontal_barchart.png" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;PieChart (with selection, ...)&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="https://camo.githubusercontent.com/7e8a4a3c938c21d032d44d999edd781b6e146f2a/68747470733a2f2f7261772e6769746875622e636f6d2f5068696c4a61792f4d50416e64726f696443686172742f6d61737465722f73637265656e73686f74732f73696d706c6564657369676e5f7069656368617274312e706e67"&gt;&lt;img src="https://camo.githubusercontent.com/7e8a4a3c938c21d032d44d999edd781b6e146f2a/68747470733a2f2f7261772e6769746875622e636f6d2f5068696c4a61792f4d50416e64726f696443686172742f6d61737465722f73637265656e73686f74732f73696d706c6564657369676e5f7069656368617274312e706e67" alt="alt tag" data-canonical-src="https://raw.github.com/PhilJay/MPAndroidChart/master/screenshots/simpledesign_piechart1.png" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;ScatterChart&lt;/strong&gt; (with squares, triangles, circles, ... and more)&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="https://camo.githubusercontent.com/6b254aa699df7f9464967009129c3017de721b77/68747470733a2f2f7261772e6769746875622e636f6d2f5068696c4a61792f4d50416e64726f696443686172742f6d61737465722f73637265656e73686f74732f7363617474657263686172742e706e67"&gt;&lt;img src="https://camo.githubusercontent.com/6b254aa699df7f9464967009129c3017de721b77/68747470733a2f2f7261772e6769746875622e636f6d2f5068696c4a61792f4d50416e64726f696443686172742f6d61737465722f73637265656e73686f74732f7363617474657263686172742e706e67" alt="alt tag" data-canonical-src="https://raw.github.com/PhilJay/MPAndroidChart/master/screenshots/scatterchart.png" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;CandleStickChart&lt;/strong&gt; (for financial data)&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="https://camo.githubusercontent.com/6dbee4e35fde8691e5ac29417583dc8e16608895/68747470733a2f2f7261772e6769746875622e636f6d2f5068696c4a61792f4d50416e64726f696443686172742f6d61737465722f73637265656e73686f74732f63616e646c65737469636b63686172742e706e67"&gt;&lt;img src="https://camo.githubusercontent.com/6dbee4e35fde8691e5ac29417583dc8e16608895/68747470733a2f2f7261772e6769746875622e636f6d2f5068696c4a61792f4d50416e64726f696443686172742f6d61737465722f73637265656e73686f74732f63616e646c65737469636b63686172742e706e67" alt="alt tag" data-canonical-src="https://raw.github.com/PhilJay/MPAndroidChart/master/screenshots/candlestickchart.png" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;BubbleChart&lt;/strong&gt; (area covered by bubbles indicates the value)&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="https://camo.githubusercontent.com/6704c21e680e831c3c07d0bebf2676f5e99a3d41/68747470733a2f2f7261772e6769746875622e636f6d2f5068696c4a61792f4d50416e64726f696443686172742f6d61737465722f73637265656e73686f74732f627562626c6563686172742e706e67"&gt;&lt;img src="https://camo.githubusercontent.com/6704c21e680e831c3c07d0bebf2676f5e99a3d41/68747470733a2f2f7261772e6769746875622e636f6d2f5068696c4a61792f4d50416e64726f696443686172742f6d61737465722f73637265656e73686f74732f627562626c6563686172742e706e67" alt="alt tag" data-canonical-src="https://raw.github.com/PhilJay/MPAndroidChart/master/screenshots/bubblechart.png" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;RadarChart&lt;/strong&gt; (spider web chart)&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="https://camo.githubusercontent.com/782ded242133f98db56004fc94401570b8749620/68747470733a2f2f7261772e6769746875622e636f6d2f5068696c4a61792f4d50416e64726f696443686172742f6d61737465722f73637265656e73686f74732f726164617263686172742e706e67"&gt;&lt;img src="https://camo.githubusercontent.com/782ded242133f98db56004fc94401570b8749620/68747470733a2f2f7261772e6769746875622e636f6d2f5068696c4a61792f4d50416e64726f696443686172742f6d61737465722f73637265656e73686f74732f726164617263686172742e706e67" alt="alt tag" data-canonical-src="https://raw.github.com/PhilJay/MPAndroidChart/master/screenshots/radarchart.png" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h1&gt;&lt;a id="user-content-documentation" class="anchor" aria-hidden="true" href="#documentation"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Documentation&lt;/h1&gt;
&lt;p&gt;Currently there's no need for documentation for the iOS/tvOS/macOS version, as the API is &lt;strong&gt;95% the same&lt;/strong&gt; as on Android.&lt;br&gt;
You can read the official &lt;a href="https://github.com/PhilJay/MPAndroidChart"&gt;MPAndroidChart&lt;/a&gt; documentation here: &lt;a href="https://github.com/PhilJay/MPAndroidChart/wiki"&gt;&lt;strong&gt;Wiki&lt;/strong&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Or you can see the Charts Demo project in both Objective-C and Swift (&lt;a href="https://github.com/danielgindi/Charts/tree/master/ChartsDemo-iOS"&gt;&lt;strong&gt;ChartsDemo-iOS&lt;/strong&gt;&lt;/a&gt;, as well as macOS &lt;a href="https://github.com/danielgindi/Charts/tree/master/ChartsDemo-macOS"&gt;&lt;strong&gt;ChartsDemo-macOS&lt;/strong&gt;&lt;/a&gt;) and learn the how-tos from it.&lt;/p&gt;
&lt;h1&gt;&lt;a id="user-content-special-thanks" class="anchor" aria-hidden="true" href="#special-thanks"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Special Thanks&lt;/h1&gt;
&lt;p&gt;Goes to &lt;a href="https://github.com/liuxuan30"&gt;@liuxuan30&lt;/a&gt;, &lt;a href="https://github.com/petester42"&gt;@petester42&lt;/a&gt; and  &lt;a href="https://github.com/AlBirdie"&gt;@AlBirdie&lt;/a&gt; for new features, bugfixes, and lots and lots of involvement in our open-sourced community! You guys are a huge help to all of those coming here with questions and issues, and I couldn't respond to all of those without you.&lt;/p&gt;
&lt;h1&gt;&lt;a id="user-content-license" class="anchor" aria-hidden="true" href="#license"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;License&lt;/h1&gt;
&lt;p&gt;Copyright 2016 Daniel Cohen Gindi &amp;amp; Philipp Jahoda&lt;/p&gt;
&lt;p&gt;Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;http://www.apache.org/licenses/LICENSE-2.0
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.&lt;/p&gt;
&lt;/article&gt;&lt;/div&gt;</description><author>danielgindi</author><guid isPermaLink="false">https://github.com/danielgindi/Charts</guid><pubDate>Fri, 08 Nov 2019 00:06:00 GMT</pubDate></item><item><title>mxcl/PromiseKit #7 in Swift, This week</title><link>https://github.com/mxcl/PromiseKit</link><description>&lt;p&gt;&lt;i&gt;Promises for Swift &amp; ObjC.&lt;/i&gt;&lt;/p&gt;&lt;div id="readme" class="instapaper_body md" data-path="README.md"&gt;&lt;article class="markdown-body entry-content p-5" itemprop="text"&gt;&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="../gh-pages/public/img/logo-tight.png"&gt;&lt;img src="../gh-pages/public/img/logo-tight.png" alt="PromiseKit" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href="https://cocoapods.org/pods/PromiseKit" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/c15ee18886b7426341e502b764d0a76d81970b57/68747470733a2f2f696d672e736869656c64732e696f2f636f636f61706f64732f762f50726f6d6973654b69742e7376673f6c6162656c3d76657273696f6e" alt="badge-pod" data-canonical-src="https://img.shields.io/cocoapods/v/PromiseKit.svg?label=version" style="max-width:100%;"&gt;&lt;/a&gt; &lt;a target="_blank" rel="noopener noreferrer" href="https://camo.githubusercontent.com/98c220d03f8bf6b21af781b82d06fbf5e755d0be/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f6c616e6775616765732d53776966742532302537432532304f626a432d6f72616e67652e737667"&gt;&lt;img src="https://camo.githubusercontent.com/98c220d03f8bf6b21af781b82d06fbf5e755d0be/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f6c616e6775616765732d53776966742532302537432532304f626a432d6f72616e67652e737667" alt="badge-languages" data-canonical-src="https://img.shields.io/badge/languages-Swift%20%7C%20ObjC-orange.svg" style="max-width:100%;"&gt;&lt;/a&gt; &lt;a target="_blank" rel="noopener noreferrer" href="https://camo.githubusercontent.com/3dd4a24e33f01ed9376e333f35ddd306208eda86/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f737570706f7274732d436f636f61506f64732532302537432532304361727468616765253230253743253230416363696f2532302537432532305377696674504d2d677265656e2e737667"&gt;&lt;img src="https://camo.githubusercontent.com/3dd4a24e33f01ed9376e333f35ddd306208eda86/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f737570706f7274732d436f636f61506f64732532302537432532304361727468616765253230253743253230416363696f2532302537432532305377696674504d2d677265656e2e737667" alt="badge-pms" data-canonical-src="https://img.shields.io/badge/supports-CocoaPods%20%7C%20Carthage%20%7C%20Accio%20%7C%20SwiftPM-green.svg" style="max-width:100%;"&gt;&lt;/a&gt; &lt;a target="_blank" rel="noopener noreferrer" href="https://camo.githubusercontent.com/efcda9fe2c564128d079066be8138688f3f0465f/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f706c6174666f726d732d6d61634f53253230253743253230694f5325323025374325323077617463684f5325323025374325323074764f532532302537432532304c696e75782d6c69676874677265792e737667"&gt;&lt;img src="https://camo.githubusercontent.com/efcda9fe2c564128d079066be8138688f3f0465f/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f706c6174666f726d732d6d61634f53253230253743253230694f5325323025374325323077617463684f5325323025374325323074764f532532302537432532304c696e75782d6c69676874677265792e737667" alt="badge-platforms" data-canonical-src="https://img.shields.io/badge/platforms-macOS%20%7C%20iOS%20%7C%20watchOS%20%7C%20tvOS%20%7C%20Linux-lightgrey.svg" style="max-width:100%;"&gt;&lt;/a&gt; &lt;a href="https://travis-ci.org/mxcl/PromiseKit" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/b9838a922b5c46736da485cc0ff2c06eaf350995/68747470733a2f2f7472617669732d63692e6f72672f6d78636c2f50726f6d6973654b69742e7376673f6272616e63683d6d6173746572" alt="badge-travis" data-canonical-src="https://travis-ci.org/mxcl/PromiseKit.svg?branch=master" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;Promises simplify asynchronous programming, freeing you up to focus on the more
important things. They are easy to learn, easy to master and result in clearer,
more readable code. Your co-workers will thank you.&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;UIApplication.&lt;span class="pl-smi"&gt;shared&lt;/span&gt;.&lt;span class="pl-smi"&gt;isNetworkActivityIndicatorVisible&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;true&lt;/span&gt;

&lt;span class="pl-k"&gt;let&lt;/span&gt; fetchImage &lt;span class="pl-k"&gt;=&lt;/span&gt; URLSession.&lt;span class="pl-smi"&gt;shared&lt;/span&gt;.&lt;span class="pl-c1"&gt;dataTask&lt;/span&gt;(.&lt;span class="pl-smi"&gt;promise&lt;/span&gt;, &lt;span class="pl-c1"&gt;with&lt;/span&gt;: url).&lt;span class="pl-smi"&gt;compactMap&lt;/span&gt;{ &lt;span class="pl-c1"&gt;UIImage&lt;/span&gt;(&lt;span class="pl-c1"&gt;data&lt;/span&gt;: &lt;span class="pl-c1"&gt;$0&lt;/span&gt;.&lt;span class="pl-smi"&gt;data&lt;/span&gt;) }
&lt;span class="pl-k"&gt;let&lt;/span&gt; fetchLocation &lt;span class="pl-k"&gt;=&lt;/span&gt; CLLocationManager.&lt;span class="pl-c1"&gt;requestLocation&lt;/span&gt;().&lt;span class="pl-smi"&gt;lastValue&lt;/span&gt;

firstly {
    &lt;span class="pl-c1"&gt;when&lt;/span&gt;(&lt;span class="pl-c1"&gt;fulfilled&lt;/span&gt;: fetchImage, fetchLocation)
}.&lt;span class="pl-smi"&gt;done&lt;/span&gt; { image, location &lt;span class="pl-k"&gt;in&lt;/span&gt;
    &lt;span class="pl-c1"&gt;self&lt;/span&gt;.&lt;span class="pl-smi"&gt;imageView&lt;/span&gt;.&lt;span class="pl-c1"&gt;image&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; image
    &lt;span class="pl-c1"&gt;self&lt;/span&gt;.&lt;span class="pl-smi"&gt;label&lt;/span&gt;.&lt;span class="pl-c1"&gt;text&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;span class="pl-pse"&gt;\(&lt;/span&gt;&lt;span class="pl-s1"&gt;location&lt;/span&gt;&lt;span class="pl-pse"&gt;&lt;span class="pl-s1"&gt;)&lt;/span&gt;&lt;/span&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;
}.&lt;span class="pl-smi"&gt;ensure&lt;/span&gt; {
    UIApplication.&lt;span class="pl-smi"&gt;shared&lt;/span&gt;.&lt;span class="pl-smi"&gt;isNetworkActivityIndicatorVisible&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;false&lt;/span&gt;
}.&lt;span class="pl-smi"&gt;catch&lt;/span&gt; { error &lt;span class="pl-k"&gt;in&lt;/span&gt;
    &lt;span class="pl-c1"&gt;self&lt;/span&gt;.&lt;span class="pl-c1"&gt;show&lt;/span&gt;(&lt;span class="pl-c1"&gt;UIAlertController&lt;/span&gt;(&lt;span class="pl-c1"&gt;for&lt;/span&gt;: error), &lt;span class="pl-c1"&gt;sender&lt;/span&gt;: &lt;span class="pl-c1"&gt;self&lt;/span&gt;)
}&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;PromiseKit is a thoughtful and complete implementation of promises for any
platform that has a &lt;code&gt;swiftc&lt;/code&gt;. It has &lt;em&gt;excellent&lt;/em&gt; Objective-C bridging and
&lt;em&gt;delightful&lt;/em&gt; specializations for iOS, macOS, tvOS and watchOS. It is a top-100
pod used in many of the most popular apps in the world.&lt;/p&gt;
&lt;p&gt;&lt;a href="https://codecov.io/gh/mxcl/PromiseKit" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/c6e5c784c54f92152d6984a9f5e5b3b5e10549bf/68747470733a2f2f636f6465636f762e696f2f67682f6d78636c2f50726f6d6973654b69742f6272616e63682f6d61737465722f67726170682f62616467652e737667" alt="codecov" data-canonical-src="https://codecov.io/gh/mxcl/PromiseKit/branch/master/graph/badge.svg" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h1&gt;&lt;a id="user-content-promisekit-7-alpha" class="anchor" aria-hidden="true" href="#promisekit-7-alpha"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;PromiseKit 7 Alpha&lt;/h1&gt;
&lt;p&gt;We are testing PromiseKit 7 alpha, it is Swift 5 only. It is tagged and thus
importable in all package managers.&lt;/p&gt;
&lt;h1&gt;&lt;a id="user-content-promisekit-6" class="anchor" aria-hidden="true" href="#promisekit-6"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;PromiseKit 6&lt;/h1&gt;
&lt;p&gt;&lt;a href="http://mxcl.dev/PromiseKit/news/2018/02/PromiseKit-6.0-Released/" rel="nofollow"&gt;Release notes and migration guide&lt;/a&gt;.&lt;/p&gt;
&lt;h1&gt;&lt;a id="user-content-quick-start" class="anchor" aria-hidden="true" href="#quick-start"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Quick Start&lt;/h1&gt;
&lt;p&gt;In your &lt;a href="https://guides.cocoapods.org/syntax/podfile.html" rel="nofollow"&gt;Podfile&lt;/a&gt;:&lt;/p&gt;
&lt;div class="highlight highlight-source-ruby"&gt;&lt;pre&gt;use_frameworks!

target &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;Change Me!&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; &lt;span class="pl-k"&gt;do&lt;/span&gt;
  pod &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;PromiseKit&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;~&amp;gt; 6.8&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;
&lt;span class="pl-k"&gt;end&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;blockquote&gt;
&lt;p&gt;The above gives an Xcode warning? See our &lt;a href="Documentation/Installation.md"&gt;Installation Guide&lt;/a&gt;.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;PromiseKit 6, 5 and 4 support Xcode 8.3, 9.x and 10.0; Swift 3.1,
3.2, 3.3, 3.4, 4.0, 4.1, 4.2, 4.3 and 5.0 (development snapshots); iOS, macOS,
tvOS, watchOS, Linux and Android; CocoaPods, Carthage and SwiftPM;
(&lt;a href="https://travis-ci.org/mxcl/PromiseKit" rel="nofollow"&gt;CI Matrix&lt;/a&gt;).&lt;/p&gt;
&lt;p&gt;For Carthage, SwiftPM, Accio, etc., or for instructions when using older Swifts or Xcodes, see our &lt;a href="Documentation/Installation.md"&gt;Installation Guide&lt;/a&gt;. We recommend
&lt;a href="https://github.com/Carthage/Carthage"&gt;Carthage&lt;/a&gt; or
&lt;a href="https://github.com/JamitLabs/Accio"&gt;Accio&lt;/a&gt;.&lt;/p&gt;
&lt;h1&gt;&lt;a id="user-content-professionally-supported-promisekit-is-now-available" class="anchor" aria-hidden="true" href="#professionally-supported-promisekit-is-now-available"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Professionally Supported PromiseKit is Now Available&lt;/h1&gt;
&lt;p&gt;TideLift gives software development teams a single source for purchasing
and maintaining their software, with professional grade assurances from
the experts who know it best, while seamlessly integrating with existing
tools.&lt;/p&gt;
&lt;p&gt;&lt;a href="https://tidelift.com/subscription/pkg/cocoapods-promisekit?utm_source=cocoapods-promisekit&amp;amp;utm_medium=referral&amp;amp;utm_campaign=readme" rel="nofollow"&gt;Get Professional Support for PromiseKit with TideLift&lt;/a&gt;.&lt;/p&gt;
&lt;h1&gt;&lt;a id="user-content-promisekit-is-thousands-of-hours-of-work" class="anchor" aria-hidden="true" href="#promisekit-is-thousands-of-hours-of-work"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;PromiseKit is Thousands of Hours of Work&lt;/h1&gt;
&lt;p&gt;Hey there, I’m Max Howell. I’m a prolific producer of open source software and
probably you already use some of it (I created &lt;a href="https://brew.sh" rel="nofollow"&gt;&lt;code&gt;brew&lt;/code&gt;&lt;/a&gt;). I work full-time on
open source and it’s hard; currently &lt;em&gt;I earn less than minimum wage&lt;/em&gt;. Please
help me continue my work, I appreciate it 🙏🏻&lt;/p&gt;
&lt;a href="https://www.patreon.com/mxcl" rel="nofollow"&gt;
	&lt;img src="https://camo.githubusercontent.com/c11c9bdf1f6c2a1d80afb11859984a61f0fadfa6/68747470733a2f2f63352e70617472656f6e2e636f6d2f65787465726e616c2f6c6f676f2f6265636f6d655f615f706174726f6e5f627574746f6e4032782e706e67" width="160" data-canonical-src="https://c5.patreon.com/external/logo/become_a_patron_button@2x.png" style="max-width:100%;"&gt;
&lt;/a&gt;
&lt;p&gt;&lt;a href="http://mxcl.dev/#donate" rel="nofollow"&gt;Other ways to say thanks&lt;/a&gt;.&lt;/p&gt;
&lt;h1&gt;&lt;a id="user-content-documentation" class="anchor" aria-hidden="true" href="#documentation"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Documentation&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;Handbook
&lt;ul&gt;
&lt;li&gt;&lt;a href="Documentation/GettingStarted.md"&gt;Getting Started&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="Documentation/CommonPatterns.md"&gt;Promises: Common Patterns&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="Documentation/FAQ.md"&gt;Frequently Asked Questions&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Manual
&lt;ul&gt;
&lt;li&gt;&lt;a href="Documentation/Installation.md"&gt;Installation Guide&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="Documentation/ObjectiveC.md"&gt;Objective-C Guide&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="Documentation/Troubleshooting.md"&gt;Troubleshooting&lt;/a&gt; (e.g., solutions to common compile errors)&lt;/li&gt;
&lt;li&gt;&lt;a href="Documentation/Appendix.md"&gt;Appendix&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="https://mxcl.dev/PromiseKit/reference/v6/Classes/Promise.html" rel="nofollow"&gt;API Reference&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h1&gt;&lt;a id="user-content-extensions" class="anchor" aria-hidden="true" href="#extensions"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Extensions&lt;/h1&gt;
&lt;p&gt;Promises are only as useful as the asynchronous tasks they represent. Thus, we
have converted (almost) all of Apple’s APIs to promises. The default CocoaPod
provides Promises and the extensions for Foundation and UIKit. The other
extensions are available by specifying additional subspecs in your &lt;code&gt;Podfile&lt;/code&gt;,
e.g.:&lt;/p&gt;
&lt;div class="highlight highlight-source-ruby"&gt;&lt;pre&gt;pod &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;PromiseKit/MapKit&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;          &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; MKDirections().calculate().then { /*…*/ }&lt;/span&gt;
pod &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;PromiseKit/CoreLocation&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;    &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; CLLocationManager.requestLocation().then { /*…*/ }&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;All our extensions are separate repositories at the &lt;a href="https://github.com/PromiseKit"&gt;PromiseKit organization&lt;/a&gt;.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-i-dont-want-the-extensions" class="anchor" aria-hidden="true" href="#i-dont-want-the-extensions"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;I don't want the extensions!&lt;/h2&gt;
&lt;p&gt;Then don’t have them:&lt;/p&gt;
&lt;div class="highlight highlight-source-ruby"&gt;&lt;pre&gt;pod &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;PromiseKit/CorePromise&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;~&amp;gt; 6.8&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;em&gt;Note:&lt;/em&gt; Carthage installations come with no extensions by default.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2&gt;&lt;a id="user-content-choose-your-networking-library" class="anchor" aria-hidden="true" href="#choose-your-networking-library"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Choose Your Networking Library&lt;/h2&gt;
&lt;p&gt;Promise chains commonly start with a network operation. Thus, we offer
extensions for &lt;code&gt;URLSession&lt;/code&gt;:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; pod 'PromiseKit/Foundation'  # https://github.com/PromiseKit/Foundation&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;
firstly {
    URLSession.&lt;span class="pl-smi"&gt;shared&lt;/span&gt;.&lt;span class="pl-c1"&gt;dataTask&lt;/span&gt;(.&lt;span class="pl-smi"&gt;promise&lt;/span&gt;, &lt;span class="pl-c1"&gt;with&lt;/span&gt;: &lt;span class="pl-k"&gt;try&lt;/span&gt; &lt;span class="pl-c1"&gt;makeUrlRequest&lt;/span&gt;()).&lt;span class="pl-c1"&gt;validate&lt;/span&gt;()
    &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; ^^ we provide `.validate()` so that eg. 404s get converted to errors&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;}.&lt;span class="pl-c1"&gt;map&lt;/span&gt; {
    &lt;span class="pl-k"&gt;try&lt;/span&gt; &lt;span class="pl-c1"&gt;JSONDecoder&lt;/span&gt;().&lt;span class="pl-c1"&gt;decode&lt;/span&gt;(Foo.&lt;span class="pl-k"&gt;self&lt;/span&gt;, &lt;span class="pl-c1"&gt;with&lt;/span&gt;: &lt;span class="pl-c1"&gt;$0&lt;/span&gt;.&lt;span class="pl-smi"&gt;data&lt;/span&gt;)
}.&lt;span class="pl-smi"&gt;done&lt;/span&gt; { foo &lt;span class="pl-k"&gt;in&lt;/span&gt;
    &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt;…&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;}.&lt;span class="pl-smi"&gt;catch&lt;/span&gt; { error &lt;span class="pl-k"&gt;in&lt;/span&gt;
    &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt;…&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;}

&lt;span class="pl-k"&gt;func&lt;/span&gt; &lt;span class="pl-en"&gt;makeUrlRequest&lt;/span&gt;() &lt;span class="pl-k"&gt;throws&lt;/span&gt; &lt;span class="pl-k"&gt;-&amp;gt;&lt;/span&gt; URLRequest {
    &lt;span class="pl-k"&gt;var&lt;/span&gt; rq &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;URLRequest&lt;/span&gt;(&lt;span class="pl-c1"&gt;url&lt;/span&gt;: url)
    rq.&lt;span class="pl-smi"&gt;httpMethod&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;POST&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;
    rq.&lt;span class="pl-c1"&gt;addValue&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;application/json&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-c1"&gt;forHTTPHeaderField&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;Content-Type&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
    rq.&lt;span class="pl-c1"&gt;addValue&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;application/json&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-c1"&gt;forHTTPHeaderField&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;Accept&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
    rq.&lt;span class="pl-smi"&gt;httpBody&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-k"&gt;try&lt;/span&gt; &lt;span class="pl-c1"&gt;JSONEncoder&lt;/span&gt;().&lt;span class="pl-c1"&gt;encode&lt;/span&gt;(obj)
    &lt;span class="pl-k"&gt;return&lt;/span&gt; rq
}&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;And &lt;a href="http://github.com/PromiseKit/Alamofire-"&gt;Alamofire&lt;/a&gt;:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; pod 'PromiseKit/Alamofire'  # https://github.com/PromiseKit/Alamofire-&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;
firstly {
    Alamofire
        .&lt;span class="pl-c1"&gt;request&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;http://example.com&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-c1"&gt;method&lt;/span&gt;: .&lt;span class="pl-smi"&gt;post&lt;/span&gt;, &lt;span class="pl-c1"&gt;parameters&lt;/span&gt;: params)
        .&lt;span class="pl-c1"&gt;responseDecodable&lt;/span&gt;(Foo.&lt;span class="pl-k"&gt;self&lt;/span&gt;)
}.&lt;span class="pl-smi"&gt;done&lt;/span&gt; { foo &lt;span class="pl-k"&gt;in&lt;/span&gt;
    &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt;…&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;}.&lt;span class="pl-smi"&gt;catch&lt;/span&gt; { error &lt;span class="pl-k"&gt;in&lt;/span&gt;
    &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt;…&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;}&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Nowadays, considering that:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;We almost always POST JSON&lt;/li&gt;
&lt;li&gt;We now have &lt;code&gt;JSONDecoder&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;PromiseKit now has &lt;code&gt;map&lt;/code&gt; and other functional primitives&lt;/li&gt;
&lt;li&gt;PromiseKit (like Alamofire, but not raw-&lt;code&gt;URLSession&lt;/code&gt;) also defaults to having
callbacks go to the main thread&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;We recommend vanilla &lt;code&gt;URLSession&lt;/code&gt;. It uses fewer black boxes and sticks closer to the metal. Alamofire was essential until the three bullet points above
became true, but nowadays it isn’t really necessary.&lt;/p&gt;
&lt;h1&gt;&lt;a id="user-content-support" class="anchor" aria-hidden="true" href="#support"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Support&lt;/h1&gt;
&lt;p&gt;Please check our &lt;a href="Documentation/Troubleshooting.md"&gt;Troubleshooting Guide&lt;/a&gt;, and
if after that you still have a question, ask at our &lt;a href="https://gitter.im/mxcl/PromiseKit" rel="nofollow"&gt;Gitter chat channel&lt;/a&gt; or on &lt;a href="https://github.com/mxcl/PromiseKit/issues/new"&gt;our bug tracker&lt;/a&gt;.&lt;/p&gt;
&lt;/article&gt;&lt;/div&gt;</description><author>mxcl</author><guid isPermaLink="false">https://github.com/mxcl/PromiseKit</guid><pubDate>Fri, 08 Nov 2019 00:07:00 GMT</pubDate></item><item><title>ReactiveX/RxSwift #8 in Swift, This week</title><link>https://github.com/ReactiveX/RxSwift</link><description>&lt;p&gt;&lt;i&gt;Reactive Programming in Swift&lt;/i&gt;&lt;/p&gt;&lt;div id="readme" class="instapaper_body md" data-path="README.md"&gt;&lt;article class="markdown-body entry-content p-5" itemprop="text"&gt;&lt;h1&gt;&lt;a id="user-content--rxswift-reactivex-for-swift" class="anchor" aria-hidden="true" href="#-rxswift-reactivex-for-swift"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;a target="_blank" rel="noopener noreferrer" href="https://raw.githubusercontent.com/ReactiveX/RxSwift/master/assets/Rx_Logo_M.png"&gt;&lt;img src="https://raw.githubusercontent.com/ReactiveX/RxSwift/master/assets/Rx_Logo_M.png" alt="Miss Electric Eel 2016" width="36" height="36" style="max-width:100%;"&gt;&lt;/a&gt; RxSwift: ReactiveX for Swift&lt;/h1&gt;
&lt;p&gt;&lt;a href="https://travis-ci.org/ReactiveX/RxSwift" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/d6899870ec82f2a13bcbdc55834ee9718be7678a/68747470733a2f2f7472617669732d63692e6f72672f5265616374697665582f527853776966742e7376673f6272616e63683d6d6173746572" alt="Travis CI" data-canonical-src="https://travis-ci.org/ReactiveX/RxSwift.svg?branch=master" style="max-width:100%;"&gt;&lt;/a&gt; &lt;a target="_blank" rel="noopener noreferrer" href="https://camo.githubusercontent.com/cad98e8f98045360e4b82f574b86b45952b3feb1/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f706c6174666f726d732d694f532532302537432532306d61634f5325323025374325323074764f5325323025374325323077617463684f532532302537432532304c696e75782d3333333333332e737667"&gt;&lt;img src="https://camo.githubusercontent.com/cad98e8f98045360e4b82f574b86b45952b3feb1/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f706c6174666f726d732d694f532532302537432532306d61634f5325323025374325323074764f5325323025374325323077617463684f532532302537432532304c696e75782d3333333333332e737667" alt="platforms" data-canonical-src="https://img.shields.io/badge/platforms-iOS%20%7C%20macOS%20%7C%20tvOS%20%7C%20watchOS%20%7C%20Linux-333333.svg" style="max-width:100%;"&gt;&lt;/a&gt; &lt;a href="https://cocoapods.org/pods/RxSwift" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/91ac251cd8e6775af6ec6807fc0c354827c6878f/68747470733a2f2f696d672e736869656c64732e696f2f636f636f61706f64732f762f527853776966742e737667" alt="pod" data-canonical-src="https://img.shields.io/cocoapods/v/RxSwift.svg" style="max-width:100%;"&gt;&lt;/a&gt; &lt;a href="https://github.com/Carthage/Carthage"&gt;&lt;img src="https://camo.githubusercontent.com/3dc8a44a2c3f7ccd5418008d1295aae48466c141/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f43617274686167652d636f6d70617469626c652d3442433531442e7376673f7374796c653d666c6174" alt="Carthage compatible" data-canonical-src="https://img.shields.io/badge/Carthage-compatible-4BC51D.svg?style=flat" style="max-width:100%;"&gt;&lt;/a&gt; &lt;a href="https://github.com/apple/swift-package-manager"&gt;&lt;img src="https://camo.githubusercontent.com/ad744674ba25cccb6e683eb78b7c485e1b63b2d2/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f53776966742532305061636b6167652532304d616e616765722d636f6d70617469626c652d627269676874677265656e2e737667" alt="Swift Package Manager compatible" data-canonical-src="https://img.shields.io/badge/Swift%20Package%20Manager-compatible-brightgreen.svg" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Rx is a &lt;a href="https://youtu.be/looJcaeboBY" rel="nofollow"&gt;generic abstraction of computation&lt;/a&gt; expressed through &lt;code&gt;Observable&amp;lt;Element&amp;gt;&lt;/code&gt; interface.&lt;/p&gt;
&lt;p&gt;This is a Swift version of &lt;a href="https://github.com/Reactive-Extensions/Rx.NET"&gt;Rx&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;It tries to port as many concepts from the original version as possible, but some concepts were adapted for more pleasant and performant integration with iOS/macOS environment.&lt;/p&gt;
&lt;p&gt;Cross platform documentation can be found on &lt;a href="http://reactivex.io/" rel="nofollow"&gt;ReactiveX.io&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Like the original Rx, its intention is to enable easy composition of asynchronous operations and event/data streams.&lt;/p&gt;
&lt;p&gt;KVO observing, async operations and streams are all unified under &lt;a href="Documentation/GettingStarted.md#observables-aka-sequences"&gt;abstraction of sequence&lt;/a&gt;. This is the reason why Rx is so simple, elegant and powerful.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-i-came-here-because-i-want-to-" class="anchor" aria-hidden="true" href="#i-came-here-because-i-want-to-"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;I came here because I want to ...&lt;/h2&gt;
&lt;h6&gt;&lt;a id="user-content--understand" class="anchor" aria-hidden="true" href="#-understand"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;... understand&lt;/h6&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="Documentation/Why.md"&gt;why use rx?&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="Documentation/GettingStarted.md"&gt;the basics, getting started with RxSwift&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="Documentation/Traits.md"&gt;traits&lt;/a&gt; - what are &lt;code&gt;Single&lt;/code&gt;, &lt;code&gt;Completable&lt;/code&gt;, &lt;code&gt;Maybe&lt;/code&gt;, &lt;code&gt;Driver&lt;/code&gt;, and &lt;code&gt;ControlProperty&lt;/code&gt; ... and why do they exist?&lt;/li&gt;
&lt;li&gt;&lt;a href="Documentation/UnitTests.md"&gt;testing&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="Documentation/Tips.md"&gt;tips and common errors&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="Documentation/GettingStarted.md#debugging"&gt;debugging&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="Documentation/MathBehindRx.md"&gt;the math behind Rx&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="Documentation/HotAndColdObservables.md"&gt;what are hot and cold observable sequences?&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h6&gt;&lt;a id="user-content--install" class="anchor" aria-hidden="true" href="#-install"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;... install&lt;/h6&gt;
&lt;ul&gt;
&lt;li&gt;Integrate RxSwift/RxCocoa with my app. &lt;a href="#installation"&gt;Installation Guide&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h6&gt;&lt;a id="user-content--hack-around" class="anchor" aria-hidden="true" href="#-hack-around"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;... hack around&lt;/h6&gt;
&lt;ul&gt;
&lt;li&gt;with the example app. &lt;a href="Documentation/ExampleApp.md"&gt;Running Example App&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;with operators in playgrounds. &lt;a href="Documentation/Playgrounds.md"&gt;Playgrounds&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h6&gt;&lt;a id="user-content--interact" class="anchor" aria-hidden="true" href="#-interact"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;... interact&lt;/h6&gt;
&lt;ul&gt;
&lt;li&gt;All of this is great, but it would be nice to talk with other people using RxSwift and exchange experiences. &lt;br&gt;&lt;a href="http://slack.rxswift.org" rel="nofollow"&gt;Join Slack Channel&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Report a problem using the library. &lt;a href=".github/ISSUE_TEMPLATE.md"&gt;Open an Issue With Bug Template&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Request a new feature. &lt;a href="Documentation/NewFeatureRequestTemplate.md"&gt;Open an Issue With Feature Request Template&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Help out &lt;a href="CONTRIBUTING.md"&gt;Check out contribution guide&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h6&gt;&lt;a id="user-content--compare" class="anchor" aria-hidden="true" href="#-compare"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;... compare&lt;/h6&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="Documentation/ComparisonWithOtherLibraries.md"&gt;with other libraries&lt;/a&gt;.&lt;/li&gt;
&lt;/ul&gt;
&lt;h6&gt;&lt;a id="user-content--understand-the-structure" class="anchor" aria-hidden="true" href="#-understand-the-structure"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;... understand the structure&lt;/h6&gt;
&lt;p&gt;RxSwift comprises five separate components depending on eachother in the following way:&lt;/p&gt;
&lt;pre lang="none"&gt;&lt;code&gt;┌──────────────┐    ┌──────────────┐
│   RxCocoa    ├────▶   RxRelay    │
└───────┬──────┘    └──────┬───────┘
        │                  │        
┌───────▼──────────────────▼───────┐
│             RxSwift              │
└───────▲──────────────────▲───────┘
        │                  │        
┌───────┴──────┐    ┌──────┴───────┐
│    RxTest    │    │  RxBlocking  │
└──────────────┘    └──────────────┘
&lt;/code&gt;&lt;/pre&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;RxSwift&lt;/strong&gt;: The core of RxSwift, providing the Rx standard as (mostly) defined by &lt;a href="https://reactivex.io" rel="nofollow"&gt;ReactiveX&lt;/a&gt;. It has no other dependencies.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;RxCocoa&lt;/strong&gt;: Provides Cocoa-specific capabilities for general iOS/macOS/watchOS &amp;amp; tvOS app development, such as Binders, Traits, and much more. It depends on both &lt;code&gt;RxSwift&lt;/code&gt; and &lt;code&gt;RxRelay&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;RxRelay&lt;/strong&gt;: Provides &lt;code&gt;PublishRelay&lt;/code&gt; and &lt;code&gt;BehaviorRelay&lt;/code&gt;, two &lt;a href="https://github.com/ReactiveX/RxSwift/blob/master/Documentation/Subjects.md#relays"&gt;simple wrappers around Subjects&lt;/a&gt;. It depends on &lt;code&gt;RxSwift&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;RxTest&lt;/strong&gt; and &lt;strong&gt;RxBlocking&lt;/strong&gt;: Provides testing capabilities for Rx-based systems. It depends on &lt;code&gt;RxSwift&lt;/code&gt;.&lt;/li&gt;
&lt;/ul&gt;
&lt;h6&gt;&lt;a id="user-content--find-compatible" class="anchor" aria-hidden="true" href="#-find-compatible"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;... find compatible&lt;/h6&gt;
&lt;ul&gt;
&lt;li&gt;libraries from &lt;a href="https://github.com/RxSwiftCommunity"&gt;RxSwiftCommunity&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://cocoapods.org/?q=uses%3Arxswift" rel="nofollow"&gt;Pods using RxSwift&lt;/a&gt;.&lt;/li&gt;
&lt;/ul&gt;
&lt;h6&gt;&lt;a id="user-content--see-the-broader-vision" class="anchor" aria-hidden="true" href="#-see-the-broader-vision"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;... see the broader vision&lt;/h6&gt;
&lt;ul&gt;
&lt;li&gt;Does this exist for Android? &lt;a href="https://github.com/ReactiveX/RxJava"&gt;RxJava&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Where is all of this going, what is the future, what about reactive architectures, how do you design entire apps this way? &lt;a href="https://github.com/cyclejs/cycle-core"&gt;Cycle.js&lt;/a&gt; - this is javascript, but &lt;a href="https://github.com/Reactive-Extensions/RxJS"&gt;RxJS&lt;/a&gt; is javascript version of Rx.&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-usage" class="anchor" aria-hidden="true" href="#usage"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Usage&lt;/h2&gt;
&lt;table&gt;
  &lt;tbody&gt;&lt;tr&gt;
    &lt;th width="30%"&gt;Here's an example&lt;/th&gt;
    &lt;th width="30%"&gt;In Action&lt;/th&gt;
  &lt;/tr&gt;
  &lt;tr&gt;
    &lt;td&gt;Define search for GitHub repositories ...&lt;/td&gt;
    &lt;th rowspan="9"&gt;&lt;a target="_blank" rel="noopener noreferrer" href="https://raw.githubusercontent.com/kzaher/rxswiftcontent/master/GithubSearch.gif"&gt;&lt;img src="https://raw.githubusercontent.com/kzaher/rxswiftcontent/master/GithubSearch.gif" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/th&gt;
  &lt;/tr&gt;
  &lt;tr&gt;
    &lt;td&gt;&lt;div&gt;&lt;pre&gt;let searchResults = searchBar.rx.text.orEmpty
    .throttle(.milliseconds(300), scheduler: MainScheduler.instance)
    .distinctUntilChanged()
    .flatMapLatest { query -&amp;gt; Observable&amp;lt;[Repository]&amp;gt; in
        if query.isEmpty {
            return .just([])
        }
        return searchGitHub(query)
            .catchErrorJustReturn([])
    }
    .observeOn(MainScheduler.instance)&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;
  &lt;/tr&gt;
  &lt;tr&gt;
    &lt;td&gt;... then bind the results to your tableview&lt;/td&gt;
  &lt;/tr&gt;
  &lt;tr&gt;
    &lt;td width="30%"&gt;&lt;div&gt;&lt;pre&gt;searchResults
    .bind(to: tableView.rx.items(cellIdentifier: "Cell")) {
        (index, repository: Repository, cell) in
        cell.textLabel?.text = repository.name
        cell.detailTextLabel?.text = repository.url
    }
    .disposed(by: disposeBag)&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;
  &lt;/tr&gt;
&lt;/tbody&gt;&lt;/table&gt;
&lt;h2&gt;&lt;a id="user-content-requirements" class="anchor" aria-hidden="true" href="#requirements"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Requirements&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Xcode 10.2&lt;/li&gt;
&lt;li&gt;Swift 5.0&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;For Xcode 10.1 and below, &lt;a href="https://github.com/ReactiveX/RxSwift/releases/tag/4.5.0"&gt;use RxSwift 4.5&lt;/a&gt;.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-installation" class="anchor" aria-hidden="true" href="#installation"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Installation&lt;/h2&gt;
&lt;p&gt;Rx doesn't contain any external dependencies.&lt;/p&gt;
&lt;p&gt;These are currently the supported options:&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-manual" class="anchor" aria-hidden="true" href="#manual"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Manual&lt;/h3&gt;
&lt;p&gt;Open Rx.xcworkspace, choose &lt;code&gt;RxExample&lt;/code&gt; and hit run. This method will build everything and run the sample app&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-cocoapods" class="anchor" aria-hidden="true" href="#cocoapods"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;a href="https://guides.cocoapods.org/using/using-cocoapods.html" rel="nofollow"&gt;CocoaPods&lt;/a&gt;&lt;/h3&gt;
&lt;div class="highlight highlight-source-ruby"&gt;&lt;pre&gt;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; Podfile&lt;/span&gt;
use_frameworks!

target &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;YOUR_TARGET_NAME&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt; &lt;span class="pl-k"&gt;do&lt;/span&gt;
    pod &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;RxSwift&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;~&amp;gt; 5&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;
    pod &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;RxCocoa&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;~&amp;gt; 5&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;
&lt;span class="pl-k"&gt;end&lt;/span&gt;

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; RxTest and RxBlocking make the most sense in the context of unit/integration tests&lt;/span&gt;
target &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;YOUR_TESTING_TARGET&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt; &lt;span class="pl-k"&gt;do&lt;/span&gt;
    pod &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;RxBlocking&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;~&amp;gt; 5&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;
    pod &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;RxTest&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;~&amp;gt; 5&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;
&lt;span class="pl-k"&gt;end&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Replace &lt;code&gt;YOUR_TARGET_NAME&lt;/code&gt; and then, in the &lt;code&gt;Podfile&lt;/code&gt; directory, type:&lt;/p&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt;$ pod install&lt;/pre&gt;&lt;/div&gt;
&lt;h3&gt;&lt;a id="user-content-carthage" class="anchor" aria-hidden="true" href="#carthage"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;a href="https://github.com/Carthage/Carthage"&gt;Carthage&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;Officially supported: Carthage 0.33 and up.&lt;/p&gt;
&lt;p&gt;Add this to &lt;code&gt;Cartfile&lt;/code&gt;&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;github "ReactiveX/RxSwift" ~&amp;gt; 5.0
&lt;/code&gt;&lt;/pre&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt;$ carthage update&lt;/pre&gt;&lt;/div&gt;
&lt;h4&gt;&lt;a id="user-content-carthage-as-a-static-library" class="anchor" aria-hidden="true" href="#carthage-as-a-static-library"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Carthage as a Static Library&lt;/h4&gt;
&lt;p&gt;Carthage defaults to building RxSwift as a Dynamic Library.&lt;/p&gt;
&lt;p&gt;If you wish to build RxSwift as a Static Library using Carthage you may use the script below to manually modify the framework type before building with Carthage:&lt;/p&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt;carthage update RxSwift --platform iOS --no-build
sed -i -e &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;s/MACH_O_TYPE = mh_dylib/MACH_O_TYPE = staticlib/g&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt; Carthage/Checkouts/RxSwift/Rx.xcodeproj/project.pbxproj
carthage build RxSwift --platform iOS&lt;/pre&gt;&lt;/div&gt;
&lt;h3&gt;&lt;a id="user-content-swift-package-manager" class="anchor" aria-hidden="true" href="#swift-package-manager"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;a href="https://github.com/apple/swift-package-manager"&gt;Swift Package Manager&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;Create a &lt;code&gt;Package.swift&lt;/code&gt; file.&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; swift-tools-version:5.0&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;
&lt;span class="pl-k"&gt;import&lt;/span&gt; &lt;span class="pl-en"&gt;PackageDescription&lt;/span&gt;

&lt;span class="pl-k"&gt;let&lt;/span&gt; package &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;Package&lt;/span&gt;(
  &lt;span class="pl-c1"&gt;name&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;RxTestProject&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;,
  &lt;span class="pl-c1"&gt;dependencies&lt;/span&gt;: [
    .&lt;span class="pl-c1"&gt;package&lt;/span&gt;(&lt;span class="pl-c1"&gt;url&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;https://github.com/ReactiveX/RxSwift.git&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-c1"&gt;from&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;5.0.0&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
  ],
  &lt;span class="pl-c1"&gt;targets&lt;/span&gt;: [
    .&lt;span class="pl-c1"&gt;target&lt;/span&gt;(&lt;span class="pl-c1"&gt;name&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;RxTestProject&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-c1"&gt;dependencies&lt;/span&gt;: [&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;RxSwift&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;RxCocoa&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;])
  ]
)&lt;/pre&gt;&lt;/div&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt;$ swift build&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;To build or test a module with RxTest dependency, set &lt;code&gt;TEST=1&lt;/code&gt;.&lt;/p&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt;$ TEST=1 swift &lt;span class="pl-c1"&gt;test&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h3&gt;&lt;a id="user-content-manually-using-git-submodules" class="anchor" aria-hidden="true" href="#manually-using-git-submodules"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Manually using git submodules&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;Add RxSwift as a submodule&lt;/li&gt;
&lt;/ul&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt;$ git submodule add git@github.com:ReactiveX/RxSwift.git&lt;/pre&gt;&lt;/div&gt;
&lt;ul&gt;
&lt;li&gt;Drag &lt;code&gt;Rx.xcodeproj&lt;/code&gt; into Project Navigator&lt;/li&gt;
&lt;li&gt;Go to &lt;code&gt;Project &amp;gt; Targets &amp;gt; Build Phases &amp;gt; Link Binary With Libraries&lt;/code&gt;, click &lt;code&gt;+&lt;/code&gt; and select &lt;code&gt;RxSwift-[Platform]&lt;/code&gt; and &lt;code&gt;RxCocoa-[Platform]&lt;/code&gt; targets&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-references" class="anchor" aria-hidden="true" href="#references"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;References&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://reactivex.io/" rel="nofollow"&gt;http://reactivex.io/&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/Reactive-Extensions"&gt;Reactive Extensions GitHub (GitHub)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://store.raywenderlich.com/products/rxswift-reactive-programming-with-swift" rel="nofollow"&gt;RxSwift RayWenderlich.com Book&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://boxueio.com/series/rxswift-101" rel="nofollow"&gt;Boxue.io RxSwift Online Course&lt;/a&gt; (Chinese &lt;g-emoji class="g-emoji" alias="cn" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f1e8-1f1f3.png"&gt;🇨🇳&lt;/g-emoji&gt;)&lt;/li&gt;
&lt;li&gt;&lt;a href="http://en.wikipedia.org/wiki/Erik_Meijer_%28computer_scientist%29" rel="nofollow"&gt;Erik Meijer (Wikipedia)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://youtu.be/looJcaeboBY" rel="nofollow"&gt;Expert to Expert: Brian Beckman and Erik Meijer - Inside the .NET Reactive Framework (Rx) (video)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=dwP1TNXE6fc" rel="nofollow"&gt;Reactive Programming Overview (Jafar Husain from Netflix)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://csl.stanford.edu/~christos/pldi2010.fit/meijer.duality.pdf" rel="nofollow"&gt;Subject/Observer is Dual to Iterator (paper)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://rxmarbles.com/" rel="nofollow"&gt;Rx standard sequence operators visualized (visualization tool)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.haskell.org/" rel="nofollow"&gt;Haskell&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/article&gt;&lt;/div&gt;</description><author>ReactiveX</author><guid isPermaLink="false">https://github.com/ReactiveX/RxSwift</guid><pubDate>Fri, 08 Nov 2019 00:08:00 GMT</pubDate></item><item><title>Daltron/NotificationBanner #9 in Swift, This week</title><link>https://github.com/Daltron/NotificationBanner</link><description>&lt;p&gt;&lt;i&gt;The easiest way to display highly customizable in app notification banners in iOS&lt;/i&gt;&lt;/p&gt;&lt;div id="readme" class="instapaper_body md" data-path="README.md"&gt;&lt;article class="markdown-body entry-content p-5" itemprop="text"&gt;&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="NotificationBanner/Assets/header.png"&gt;&lt;img src="NotificationBanner/Assets/header.png" alt="Notification Banner" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href="http://cocoapods.org/pods/NotificationBannerSwift" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/87787e911cc8b008476e5a2cc238a52b9e7aaae9/68747470733a2f2f696d672e736869656c64732e696f2f636f636f61706f64732f762f4e6f74696669636174696f6e42616e6e657253776966742e7376673f7374796c653d666c6174" alt="Version" data-canonical-src="https://img.shields.io/cocoapods/v/NotificationBannerSwift.svg?style=flat" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://github.com/Carthage/Carthage/"&gt;&lt;img src="https://camo.githubusercontent.com/3dc8a44a2c3f7ccd5418008d1295aae48466c141/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f43617274686167652d636f6d70617469626c652d3442433531442e7376673f7374796c653d666c6174" data-canonical-src="https://img.shields.io/badge/Carthage-compatible-4BC51D.svg?style=flat" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="http://cocoapods.org/pods/NotificationBannerSwift" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/e68799708a83f3eb8e1bb225a1aab5f07a82f4b3/68747470733a2f2f696d672e736869656c64732e696f2f636f636f61706f64732f702f4e6f74696669636174696f6e42616e6e657253776966742e7376673f7374796c653d666c6174" alt="Platform" data-canonical-src="https://img.shields.io/cocoapods/p/NotificationBannerSwift.svg?style=flat" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://developer.apple.com/swift" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/a0a3f0b100bf044e2888828571ccfe24cbb6119d/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f73776966742d352d3442433531442e7376673f7374796c653d666c6174" alt="Language: Swift" data-canonical-src="https://img.shields.io/badge/swift-5-4BC51D.svg?style=flat" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="http://cocoapods.org/pods/NotificationBannerSwift" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/142e61ca6258de9349c87f9ccae7fb982cd320ed/68747470733a2f2f696d672e736869656c64732e696f2f636f636f61706f64732f6c2f4e6f74696669636174696f6e42616e6e657253776966742e7376673f7374796c653d666c6174" alt="License" data-canonical-src="https://img.shields.io/cocoapods/l/NotificationBannerSwift.svg?style=flat" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-written-in-swift-5" class="anchor" aria-hidden="true" href="#written-in-swift-5"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Written in Swift 5&lt;/h2&gt;
&lt;p&gt;NotificationBanner is an extremely customizable and lightweight library that makes the task of displaying in app notification banners and drop down alerts an absolute breeze in iOS.&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Basic Banners&lt;/th&gt;
&lt;th&gt;Banners with Side Views&lt;/th&gt;
&lt;th&gt;Status Bar Banners&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a target="_blank" rel="noopener noreferrer" href="NotificationBanner/Assets/basic.gif"&gt;&lt;img src="NotificationBanner/Assets/basic.gif" alt="Basic Banners" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;a target="_blank" rel="noopener noreferrer" href="NotificationBanner/Assets/side_views.gif"&gt;&lt;img src="NotificationBanner/Assets/side_views.gif" alt="Banners with Side Views" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;a target="_blank" rel="noopener noreferrer" href="NotificationBanner/Assets/status_bar.gif"&gt;&lt;img src="NotificationBanner/Assets/status_bar.gif" alt="Status Bar Banners" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Growing Banners&lt;/th&gt;
&lt;th&gt;Floating Banners&lt;/th&gt;
&lt;th&gt;Stacked Banners&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a target="_blank" rel="noopener noreferrer" href="NotificationBanner/Assets/growing.gif"&gt;&lt;img src="NotificationBanner/Assets/growing.gif" alt="Growing Banners" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;a target="_blank" rel="noopener noreferrer" href="NotificationBanner/Assets/floating.gif"&gt;&lt;img src="NotificationBanner/Assets/floating.gif" alt="Floating Banners" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;a target="_blank" rel="noopener noreferrer" href="NotificationBanner/Assets/stacked.gif"&gt;&lt;img src="NotificationBanner/Assets/stacked.gif" alt="Floating Banners" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h2&gt;&lt;a id="user-content-features" class="anchor" aria-hidden="true" href="#features"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Features&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Highly customizable &lt;g-emoji class="g-emoji" alias="white_check_mark" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/2705.png"&gt;✅&lt;/g-emoji&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;NSAttributedString&lt;/code&gt; support &lt;g-emoji class="g-emoji" alias="white_check_mark" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/2705.png"&gt;✅&lt;/g-emoji&gt;&lt;/li&gt;
&lt;li&gt;iPhone, iPhoneX, &amp;amp; iPad Support &lt;g-emoji class="g-emoji" alias="white_check_mark" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/2705.png"&gt;✅&lt;/g-emoji&gt;&lt;/li&gt;
&lt;li&gt;Orientation change support &lt;g-emoji class="g-emoji" alias="white_check_mark" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/2705.png"&gt;✅&lt;/g-emoji&gt;&lt;/li&gt;
&lt;li&gt;Custom &lt;code&gt;UIView&lt;/code&gt; support &lt;g-emoji class="g-emoji" alias="white_check_mark" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/2705.png"&gt;✅&lt;/g-emoji&gt;&lt;/li&gt;
&lt;li&gt;Custom colors support &lt;g-emoji class="g-emoji" alias="white_check_mark" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/2705.png"&gt;✅&lt;/g-emoji&gt;&lt;/li&gt;
&lt;li&gt;Support for long titles/ subtitles &lt;g-emoji class="g-emoji" alias="white_check_mark" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/2705.png"&gt;✅&lt;/g-emoji&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;NotificationBanner&lt;/code&gt; uses horizontal scrolling labels&lt;/li&gt;
&lt;li&gt;&lt;code&gt;GrowingNotificationBanner&lt;/code&gt; grows in height as needed&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Presenting from top or bottom support &lt;g-emoji class="g-emoji" alias="white_check_mark" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/2705.png"&gt;✅&lt;/g-emoji&gt;&lt;/li&gt;
&lt;li&gt;Haptic feeback support &lt;g-emoji class="g-emoji" alias="white_check_mark" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/2705.png"&gt;✅&lt;/g-emoji&gt;&lt;/li&gt;
&lt;li&gt;Built in banner queue &lt;g-emoji class="g-emoji" alias="white_check_mark" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/2705.png"&gt;✅&lt;/g-emoji&gt;&lt;/li&gt;
&lt;li&gt;Allow to display several banners simultaneously, configurable in banners queue&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-requirements" class="anchor" aria-hidden="true" href="#requirements"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Requirements&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;iOS 10.0+&lt;/li&gt;
&lt;li&gt;Xcode 10.0+&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-installation" class="anchor" aria-hidden="true" href="#installation"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Installation&lt;/h2&gt;
&lt;h3&gt;&lt;a id="user-content-cocoapods" class="anchor" aria-hidden="true" href="#cocoapods"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;CocoaPods&lt;/h3&gt;
&lt;p&gt;NotificationBanner is available through &lt;a href="http://cocoapods.org" rel="nofollow"&gt;CocoaPods&lt;/a&gt;. To install
it, simply add the following line to your Podfile:&lt;/p&gt;
&lt;h4&gt;&lt;a id="user-content-swift-5--xcode-11--ios-13-support" class="anchor" aria-hidden="true" href="#swift-5--xcode-11--ios-13-support"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Swift 5 + xCode 11 + iOS 13 Support&lt;/h4&gt;
&lt;div class="highlight highlight-source-ruby"&gt;&lt;pre&gt;pod &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;NotificationBannerSwift&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;~&amp;gt; 3.0.0&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h4&gt;&lt;a id="user-content-swift-5--xcode-10x" class="anchor" aria-hidden="true" href="#swift-5--xcode-10x"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Swift 5 + xCode 10.x&lt;/h4&gt;
&lt;div class="highlight highlight-source-ruby"&gt;&lt;pre&gt;pod &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;NotificationBannerSwift&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;2.5.0&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h4&gt;&lt;a id="user-content-swift-42" class="anchor" aria-hidden="true" href="#swift-42"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Swift 4.2&lt;/h4&gt;
&lt;div class="highlight highlight-source-ruby"&gt;&lt;pre&gt;pod &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;NotificationBannerSwift&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;2.0.1&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h4&gt;&lt;a id="user-content-swift-40" class="anchor" aria-hidden="true" href="#swift-40"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Swift 4.0&lt;/h4&gt;
&lt;div class="highlight highlight-source-ruby"&gt;&lt;pre&gt;pod &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;NotificationBannerSwift&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;1.6.3&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;
pod &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;MarqueeLabel/Swift&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;3.1.6&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Then add &lt;code&gt;import NotificationBannerSwift&lt;/code&gt; at the top of each file you use NotificationBanner in your project.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-carthage" class="anchor" aria-hidden="true" href="#carthage"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Carthage&lt;/h3&gt;
&lt;p&gt;To use NotificationBanner via Carthage simply add this line to your &lt;code&gt;Cartfile&lt;/code&gt;:&lt;/p&gt;
&lt;h4&gt;&lt;a id="user-content-swift-5" class="anchor" aria-hidden="true" href="#swift-5"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Swift 5&lt;/h4&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;github &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;Daltron/NotificationBanner&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;master&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Then add &lt;code&gt;NotificationBanner.framework&lt;/code&gt; and the dependencies &lt;code&gt;SnapKit.framework&lt;/code&gt; and &lt;code&gt;MarqueeLabel.framework&lt;/code&gt; in your project.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-usage" class="anchor" aria-hidden="true" href="#usage"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Usage&lt;/h2&gt;
&lt;p&gt;Creating drop down alerts with NotificationBanner is easy. To create a regular banner (with scrolling labels) and show it, simply:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;let&lt;/span&gt; banner &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;NotificationBanner&lt;/span&gt;(&lt;span class="pl-c1"&gt;title&lt;/span&gt;: title, &lt;span class="pl-c1"&gt;subtitle&lt;/span&gt;: subtitle, &lt;span class="pl-c1"&gt;style&lt;/span&gt;: .&lt;span class="pl-smi"&gt;success&lt;/span&gt;)
banner.&lt;span class="pl-c1"&gt;show&lt;/span&gt;()&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;If you want to create a banner which grows in height as needed and show it accordingly just use &lt;code&gt;GrowingNotificationBanner&lt;/code&gt; instead of &lt;code&gt;NotificationBanner&lt;/code&gt;:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;let&lt;/span&gt; banner &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;GrowingNotificationBanner&lt;/span&gt;(&lt;span class="pl-c1"&gt;title&lt;/span&gt;: title, &lt;span class="pl-c1"&gt;subtitle&lt;/span&gt;: subtitle, &lt;span class="pl-c1"&gt;style&lt;/span&gt;: .&lt;span class="pl-smi"&gt;success&lt;/span&gt;)
banner.&lt;span class="pl-c1"&gt;show&lt;/span&gt;()&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;To create a status bar alert, simply:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;let&lt;/span&gt; banner &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;StatusBarNotificationBanner&lt;/span&gt;(&lt;span class="pl-c1"&gt;title&lt;/span&gt;: title, &lt;span class="pl-c1"&gt;style&lt;/span&gt;: .&lt;span class="pl-smi"&gt;success&lt;/span&gt;)
banner.&lt;span class="pl-c1"&gt;show&lt;/span&gt;()&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;By default, each banner will be displayed on the main application window. If you are wanting to show a banner below a navigation bar, simply show on the view controller that is within the navigation system:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;banner.&lt;span class="pl-c1"&gt;show&lt;/span&gt;(&lt;span class="pl-c1"&gt;on&lt;/span&gt;: viewController)&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;By default, each banner will present from the top. If you are wanting to display from the bottom, simply:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;banner.&lt;span class="pl-c1"&gt;show&lt;/span&gt;(&lt;span class="pl-c1"&gt;bannerPosition&lt;/span&gt;: .&lt;span class="pl-smi"&gt;bottom&lt;/span&gt;)&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Each of the show properties defined above can be mixed and matched to work flawlessly with eachother.&lt;/p&gt;
&lt;p&gt;By default, each banner will automatically dismiss after 5 seconds. To dismiss programatically, simply:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;banner.&lt;span class="pl-c1"&gt;dismiss&lt;/span&gt;()&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;To show a banner infinitely until it is manually dismissed, simply:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;banner.&lt;span class="pl-smi"&gt;autoDismiss&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;false&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;NotificationBanner has five prebuilt styles that you can choose from:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;public&lt;/span&gt; &lt;span class="pl-k"&gt;enum&lt;/span&gt; &lt;span class="pl-en"&gt;BannerStyle&lt;/span&gt; {
    &lt;span class="pl-k"&gt;case&lt;/span&gt; &lt;span class="pl-c1"&gt;danger&lt;/span&gt;
    &lt;span class="pl-k"&gt;case&lt;/span&gt; &lt;span class="pl-c1"&gt;info&lt;/span&gt;
    &lt;span class="pl-k"&gt;case&lt;/span&gt; &lt;span class="pl-c1"&gt;customView&lt;/span&gt;
    &lt;span class="pl-k"&gt;case&lt;/span&gt; &lt;span class="pl-c1"&gt;success&lt;/span&gt;
    &lt;span class="pl-k"&gt;case&lt;/span&gt; &lt;span class="pl-c1"&gt;warning&lt;/span&gt;
}&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;You can override the predefined colors that NotificationBanner uses for any style by conforming to the &lt;code&gt;BannerColorsProtocol&lt;/code&gt;:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;public&lt;/span&gt; &lt;span class="pl-k"&gt;protocol&lt;/span&gt; &lt;span class="pl-en"&gt;BannerColorsProtocol&lt;/span&gt; {
    &lt;span class="pl-k"&gt;func&lt;/span&gt; &lt;span class="pl-en"&gt;color&lt;/span&gt;(&lt;span class="pl-en"&gt;for&lt;/span&gt; &lt;span class="pl-smi"&gt;style&lt;/span&gt;: BannerStyle) &lt;span class="pl-k"&gt;-&amp;gt;&lt;/span&gt; UIColor
}&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Its as easy as creating a custom banner colors class:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;class&lt;/span&gt; &lt;span class="pl-en"&gt;CustomBannerColors&lt;/span&gt;: &lt;span class="pl-e"&gt;BannerColorsProtocol &lt;/span&gt;{

    &lt;span class="pl-k"&gt;internal&lt;/span&gt; &lt;span class="pl-k"&gt;func&lt;/span&gt; &lt;span class="pl-en"&gt;color&lt;/span&gt;(&lt;span class="pl-en"&gt;for&lt;/span&gt; &lt;span class="pl-smi"&gt;style&lt;/span&gt;: BannerStyle) &lt;span class="pl-k"&gt;-&amp;gt;&lt;/span&gt; UIColor {
        &lt;span class="pl-k"&gt;switch&lt;/span&gt; style {
            &lt;span class="pl-k"&gt;case&lt;/span&gt; .&lt;span class="pl-smi"&gt;danger&lt;/span&gt;&lt;span class="pl-k"&gt;:&lt;/span&gt;	&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Your custom .danger color&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;            &lt;span class="pl-k"&gt;case&lt;/span&gt; .&lt;span class="pl-smi"&gt;info&lt;/span&gt;&lt;span class="pl-k"&gt;:&lt;/span&gt;		&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Your custom .info color&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;            &lt;span class="pl-k"&gt;case&lt;/span&gt; .&lt;span class="pl-smi"&gt;customView&lt;/span&gt;&lt;span class="pl-k"&gt;:&lt;/span&gt;	&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Your custom .customView color&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;            &lt;span class="pl-k"&gt;case&lt;/span&gt; .&lt;span class="pl-smi"&gt;success&lt;/span&gt;&lt;span class="pl-k"&gt;:&lt;/span&gt;	&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Your custom .success color&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;            &lt;span class="pl-k"&gt;case&lt;/span&gt; .&lt;span class="pl-smi"&gt;warning&lt;/span&gt;&lt;span class="pl-k"&gt;:&lt;/span&gt;	&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Your custom .warning color&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;        }
    }

}&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;And then passing in that class to any notification banner you create:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;let&lt;/span&gt; banner &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;NotificationBanner&lt;/span&gt;(&lt;span class="pl-c1"&gt;title&lt;/span&gt;: title, &lt;span class="pl-c1"&gt;style&lt;/span&gt;: .&lt;span class="pl-smi"&gt;success&lt;/span&gt;, &lt;span class="pl-c1"&gt;colors&lt;/span&gt;: &lt;span class="pl-c1"&gt;CustomBannerColors&lt;/span&gt;())
banner.&lt;span class="pl-c1"&gt;show&lt;/span&gt;()&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;By default, the &lt;code&gt;.info&lt;/code&gt; style will be applied to the banner if no style is provided in the init method. You can set the background color of a banner at any time by simply setting the &lt;code&gt;backgroundColor&lt;/code&gt;.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-banners-with-side-views" class="anchor" aria-hidden="true" href="#banners-with-side-views"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Banners with Side Views&lt;/h3&gt;
&lt;p&gt;A notification banner can have a left accessory view, a right accessory view, or both:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Success Style Notification with Left View&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;&lt;span class="pl-k"&gt;let&lt;/span&gt; leftView &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;UIImageView&lt;/span&gt;(&lt;span class="pl-c1"&gt;image&lt;/span&gt;: &lt;span class="pl-c1"&gt;#imageLiteral&lt;/span&gt;(&lt;span class="pl-c1"&gt;resourceName&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;success&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;))
&lt;span class="pl-k"&gt;let&lt;/span&gt; banner &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;NotificationBanner&lt;/span&gt;(&lt;span class="pl-c1"&gt;title&lt;/span&gt;: title, &lt;span class="pl-c1"&gt;subtitle&lt;/span&gt;: subtitle, &lt;span class="pl-c1"&gt;leftView&lt;/span&gt;: leftView, &lt;span class="pl-c1"&gt;style&lt;/span&gt;: .&lt;span class="pl-smi"&gt;success&lt;/span&gt;)
banner.&lt;span class="pl-c1"&gt;show&lt;/span&gt;()

 &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Danger Style Notification with Right View&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;&lt;span class="pl-k"&gt;let&lt;/span&gt; rightView &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;UIImageView&lt;/span&gt;(&lt;span class="pl-c1"&gt;image&lt;/span&gt;: &lt;span class="pl-c1"&gt;#imageLiteral&lt;/span&gt;(&lt;span class="pl-c1"&gt;resourceName&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;danger&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;))
&lt;span class="pl-k"&gt;let&lt;/span&gt; banner &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;NotificationBanner&lt;/span&gt;(&lt;span class="pl-c1"&gt;title&lt;/span&gt;: title, &lt;span class="pl-c1"&gt;subtitle&lt;/span&gt;: subtitle, &lt;span class="pl-c1"&gt;rightView&lt;/span&gt;: rightView, &lt;span class="pl-c1"&gt;style&lt;/span&gt;: .&lt;span class="pl-smi"&gt;danger&lt;/span&gt;)
banner.&lt;span class="pl-c1"&gt;show&lt;/span&gt;()    

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Info Style Notification with Left and Right Views&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;&lt;span class="pl-k"&gt;let&lt;/span&gt; leftView &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;UIImageView&lt;/span&gt;(&lt;span class="pl-c1"&gt;image&lt;/span&gt;: &lt;span class="pl-c1"&gt;#imageLiteral&lt;/span&gt;(&lt;span class="pl-c1"&gt;resourceName&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;info&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;))
&lt;span class="pl-k"&gt;let&lt;/span&gt; rightView &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;UIImageView&lt;/span&gt;(&lt;span class="pl-c1"&gt;image&lt;/span&gt;: &lt;span class="pl-c1"&gt;#imageLiteral&lt;/span&gt;(&lt;span class="pl-c1"&gt;resourceName&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;right_chevron&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;))
&lt;span class="pl-k"&gt;let&lt;/span&gt; banner &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;NotificationBanner&lt;/span&gt;(&lt;span class="pl-c1"&gt;title&lt;/span&gt;: title, &lt;span class="pl-c1"&gt;subtitle&lt;/span&gt;: subtitle, &lt;span class="pl-c1"&gt;leftView&lt;/span&gt;: leftView, &lt;span class="pl-c1"&gt;rightView&lt;/span&gt;: rightView, &lt;span class="pl-c1"&gt;style&lt;/span&gt;: .&lt;span class="pl-smi"&gt;info&lt;/span&gt;)
banner.&lt;span class="pl-c1"&gt;show&lt;/span&gt;()&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="NotificationBanner/Assets/side_views.gif"&gt;&lt;img src="NotificationBanner/Assets/side_views.gif" alt="Banners with Side Views" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Each side view will be automically reisized to fit perfectly&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-banners-with-a-custom-view" class="anchor" aria-hidden="true" href="#banners-with-a-custom-view"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Banners with a Custom View&lt;/h3&gt;
&lt;p&gt;A notification banner can also be initalized with a custom view:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;let&lt;/span&gt; banner &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;NotificationBanner&lt;/span&gt;(&lt;span class="pl-c1"&gt;customView&lt;/span&gt;: &lt;span class="pl-c1"&gt;NorthCarolinaBannerView&lt;/span&gt;())
banner.&lt;span class="pl-c1"&gt;show&lt;/span&gt;()&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="NotificationBanner/Assets/custom.gif"&gt;&lt;img src="NotificationBanner/Assets/custom.gif" alt="Custom Banner" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-handling-user-interaction" class="anchor" aria-hidden="true" href="#handling-user-interaction"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Handling User Interaction&lt;/h3&gt;
&lt;p&gt;By default, when a banner is tapped or swiped up by a user, it will be dismissed. If you want to detect when the user taps or swipes up on a banner, simply:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;banner.&lt;span class="pl-smi"&gt;onTap&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; {
	&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Do something regarding the banner&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;}&lt;/pre&gt;&lt;/div&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;banner.&lt;span class="pl-smi"&gt;onSwipeUp&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; {
	&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Do something regarding the banner&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;}&lt;/pre&gt;&lt;/div&gt;
&lt;h3&gt;&lt;a id="user-content-banner-events" class="anchor" aria-hidden="true" href="#banner-events"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Banner Events&lt;/h3&gt;
&lt;p&gt;You can choose to opt into a notification banner's events by registering as its delegate:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;banner.&lt;span class="pl-smi"&gt;delegate&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;self&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Then just make sure to implement the following methods:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;internal&lt;/span&gt; &lt;span class="pl-k"&gt;func&lt;/span&gt; &lt;span class="pl-en"&gt;notificationBannerWillAppear&lt;/span&gt;(&lt;span class="pl-en"&gt;_&lt;/span&gt; &lt;span class="pl-smi"&gt;banner&lt;/span&gt;: BaseNotificationBanner)
&lt;span class="pl-k"&gt;internal&lt;/span&gt; &lt;span class="pl-k"&gt;func&lt;/span&gt; &lt;span class="pl-en"&gt;notificationBannerDidAppear&lt;/span&gt;(&lt;span class="pl-en"&gt;_&lt;/span&gt; &lt;span class="pl-smi"&gt;banner&lt;/span&gt;: BaseNotificationBanner)
&lt;span class="pl-k"&gt;internal&lt;/span&gt; &lt;span class="pl-k"&gt;func&lt;/span&gt; &lt;span class="pl-en"&gt;notificationBannerWillDisappear&lt;/span&gt;(&lt;span class="pl-en"&gt;_&lt;/span&gt; &lt;span class="pl-smi"&gt;banner&lt;/span&gt;: BaseNotificationBanner)
&lt;span class="pl-k"&gt;internal&lt;/span&gt; &lt;span class="pl-k"&gt;func&lt;/span&gt; &lt;span class="pl-en"&gt;notificationBannerDidDisappear&lt;/span&gt;(&lt;span class="pl-en"&gt;_&lt;/span&gt; &lt;span class="pl-smi"&gt;banner&lt;/span&gt;: BaseNotificationBanner)&lt;/pre&gt;&lt;/div&gt;
&lt;h2&gt;&lt;a id="user-content-haptic-feedback-support" class="anchor" aria-hidden="true" href="#haptic-feedback-support"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Haptic Feedback Support&lt;/h2&gt;
&lt;p&gt;By default, when a banner is displayed, a haptic feedback will be generated on devices that support it. The types of haptic feedback are as follows:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;public&lt;/span&gt; &lt;span class="pl-k"&gt;enum&lt;/span&gt; &lt;span class="pl-en"&gt;BannerHaptic&lt;/span&gt; {
    &lt;span class="pl-k"&gt;case&lt;/span&gt; &lt;span class="pl-c1"&gt;light&lt;/span&gt;
    &lt;span class="pl-k"&gt;case&lt;/span&gt; &lt;span class="pl-c1"&gt;medium&lt;/span&gt;
    &lt;span class="pl-k"&gt;case&lt;/span&gt; &lt;span class="pl-c1"&gt;heavy&lt;/span&gt;
    &lt;span class="pl-k"&gt;case&lt;/span&gt; &lt;span class="pl-c1"&gt;none&lt;/span&gt;
}&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;To change the type of haptic feedback to generate when a banner is shown, simply:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;banner.&lt;span class="pl-smi"&gt;haptic&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; .&lt;span class="pl-smi"&gt;heavy&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h2&gt;&lt;a id="user-content-banner-queue" class="anchor" aria-hidden="true" href="#banner-queue"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Banner Queue&lt;/h2&gt;
&lt;p&gt;By default, each notification banner is placed onto a singleton of an auto-managed &lt;code&gt;NotificationBannerQueue&lt;/code&gt;. This allows an infinite amount of banners to be displayed without one hiding the other. If you have multiple controllers within your navigation stack that need to be managed by a seperate queue (like a tab bar controller), simply create an instance of a &lt;code&gt;NotificationBannerQueue&lt;/code&gt; and pass it in to the show function:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;banner.&lt;span class="pl-c1"&gt;show&lt;/span&gt;(&lt;span class="pl-c1"&gt;queue&lt;/span&gt;: customQueue)&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;By default, each notification banner is placed on the back of the queue. If you would rather place the banner in the front and show it immediately no matter how many banners are in the queue, simply state it in the &lt;code&gt;show()&lt;/code&gt; method:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;banner.&lt;span class="pl-c1"&gt;show&lt;/span&gt;(&lt;span class="pl-c1"&gt;queuePosition&lt;/span&gt;: .&lt;span class="pl-smi"&gt;front&lt;/span&gt;)&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Adding a banner to the front of the queue will temporarily suspend the currently displayed banner (if there is one) and will resume it after the banner in front of it dismisses.&lt;/p&gt;
&lt;p&gt;To get the number of banners currently on the queue, simply:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;let&lt;/span&gt; numberOfBanners &lt;span class="pl-k"&gt;=&lt;/span&gt; NotificationBannerQueue.&lt;span class="pl-smi"&gt;default&lt;/span&gt;.&lt;span class="pl-smi"&gt;numberOfBanners&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;b&gt;This is all automatically managed!&lt;/b&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-banner-queue-and-display-banners-simultaneously-stacked" class="anchor" aria-hidden="true" href="#banner-queue-and-display-banners-simultaneously-stacked"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Banner Queue and display banners simultaneously (stacked)&lt;/h2&gt;
&lt;p&gt;You can also create the queue to display several banners at once with controlling of maximum number of banners to be displayed simultaneously. You can "show" more banners than allowed by queue settings - banners what exceed this value will be displayed some time later, after some banners already displayed on screen will be closed. In example below we create queue with maximum simultaneous banners allowed - 3:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;let&lt;/span&gt; bannerQueueToDisplaySeveralBanners &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;NotificationBannerQueue&lt;/span&gt;(&lt;span class="pl-c1"&gt;maxBannersOnScreenSimultaneously&lt;/span&gt;: &lt;span class="pl-c1"&gt;3&lt;/span&gt;)&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Create five different banners:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;let&lt;/span&gt; banner1 &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;FloatingNotificationBanner&lt;/span&gt;(&lt;span class="pl-c1"&gt;title&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;Success Notification - 1&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;,
                                         &lt;span class="pl-c1"&gt;subtitle&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;First Notification from 5 in current queue with 3 banners allowed simultaneously&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;,
                                         &lt;span class="pl-c1"&gt;style&lt;/span&gt;: .&lt;span class="pl-smi"&gt;success&lt;/span&gt;)
banner1.&lt;span class="pl-smi"&gt;delegate&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;self&lt;/span&gt;

&lt;span class="pl-k"&gt;let&lt;/span&gt; banner2 &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;FloatingNotificationBanner&lt;/span&gt;(&lt;span class="pl-c1"&gt;title&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;Danger Notification - 2&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;,
                                         &lt;span class="pl-c1"&gt;subtitle&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;Second Notification from 5 in current queue with 3 banners allowed simultaneously&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;,
                                         &lt;span class="pl-c1"&gt;style&lt;/span&gt;: .&lt;span class="pl-smi"&gt;danger&lt;/span&gt;)
banner2.&lt;span class="pl-smi"&gt;delegate&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;self&lt;/span&gt;

&lt;span class="pl-k"&gt;let&lt;/span&gt; banner3 &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;FloatingNotificationBanner&lt;/span&gt;(&lt;span class="pl-c1"&gt;title&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;Info Notification - 3&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;,
                                         &lt;span class="pl-c1"&gt;subtitle&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;Third Notification from 5 in current queue with 3 banners allowed simultaneously&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;,
                                         &lt;span class="pl-c1"&gt;style&lt;/span&gt;: .&lt;span class="pl-smi"&gt;info&lt;/span&gt;)
banner3.&lt;span class="pl-smi"&gt;delegate&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;self&lt;/span&gt;

&lt;span class="pl-k"&gt;let&lt;/span&gt; banner4 &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;FloatingNotificationBanner&lt;/span&gt;(&lt;span class="pl-c1"&gt;title&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;Success Notification - 4&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;,
                                         &lt;span class="pl-c1"&gt;subtitle&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;Fourth Notification from 5 in current queue with 3 banners allowed simultaneously&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;,
                                         &lt;span class="pl-c1"&gt;style&lt;/span&gt;: .&lt;span class="pl-smi"&gt;success&lt;/span&gt;)
banner4.&lt;span class="pl-smi"&gt;delegate&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;self&lt;/span&gt;

&lt;span class="pl-k"&gt;let&lt;/span&gt; banner5 &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;FloatingNotificationBanner&lt;/span&gt;(&lt;span class="pl-c1"&gt;title&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;Info Notification - 5&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;,
                                         &lt;span class="pl-c1"&gt;subtitle&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;Fifth Notification from 5 in current queue with 3 banners allowed simultaneously&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;,
                                         &lt;span class="pl-c1"&gt;style&lt;/span&gt;: .&lt;span class="pl-smi"&gt;info&lt;/span&gt;)
banner5.&lt;span class="pl-smi"&gt;delegate&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;self&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;and show all five banners at once:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-c1"&gt;showBanners&lt;/span&gt;([banner1, banner2, banner3, banner4, banner5],
            &lt;span class="pl-c1"&gt;in&lt;/span&gt;: bannerQueue5AllowedMixed)&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;using this supporting method&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;func&lt;/span&gt; &lt;span class="pl-en"&gt;showBanners&lt;/span&gt;(&lt;span class="pl-en"&gt;_&lt;/span&gt; &lt;span class="pl-smi"&gt;banners&lt;/span&gt;: [FloatingNotificationBanner],
                 &lt;span class="pl-en"&gt;in&lt;/span&gt; &lt;span class="pl-smi"&gt;notificationBannerQueue&lt;/span&gt;: NotificationBannerQueue) {
    banners.&lt;span class="pl-c1"&gt;forEach&lt;/span&gt; { banner &lt;span class="pl-k"&gt;in&lt;/span&gt;
        banner.&lt;span class="pl-c1"&gt;show&lt;/span&gt;(&lt;span class="pl-c1"&gt;bannerPosition&lt;/span&gt;: &lt;span class="pl-c1"&gt;selectedBannerPosition&lt;/span&gt;(),
                    &lt;span class="pl-c1"&gt;queue&lt;/span&gt;: notificationBannerQueue,
                    &lt;span class="pl-c1"&gt;cornerRadius&lt;/span&gt;: &lt;span class="pl-c1"&gt;8&lt;/span&gt;,
                    &lt;span class="pl-c1"&gt;shadowColor&lt;/span&gt;: &lt;span class="pl-c1"&gt;UIColor&lt;/span&gt;(&lt;span class="pl-c1"&gt;red&lt;/span&gt;: &lt;span class="pl-c1"&gt;0.431&lt;/span&gt;, &lt;span class="pl-c1"&gt;green&lt;/span&gt;: &lt;span class="pl-c1"&gt;0.459&lt;/span&gt;, &lt;span class="pl-c1"&gt;blue&lt;/span&gt;: &lt;span class="pl-c1"&gt;0.494&lt;/span&gt;, &lt;span class="pl-c1"&gt;alpha&lt;/span&gt;: &lt;span class="pl-c1"&gt;1&lt;/span&gt;),
                    &lt;span class="pl-c1"&gt;shadowBlurRadius&lt;/span&gt;: &lt;span class="pl-c1"&gt;16&lt;/span&gt;,
                    &lt;span class="pl-c1"&gt;shadowEdgeInsets&lt;/span&gt;: &lt;span class="pl-c1"&gt;UIEdgeInsets&lt;/span&gt;(&lt;span class="pl-c1"&gt;top&lt;/span&gt;: &lt;span class="pl-c1"&gt;8&lt;/span&gt;, &lt;span class="pl-c1"&gt;left&lt;/span&gt;: &lt;span class="pl-c1"&gt;8&lt;/span&gt;, &lt;span class="pl-c1"&gt;bottom&lt;/span&gt;: &lt;span class="pl-c1"&gt;0&lt;/span&gt;, &lt;span class="pl-c1"&gt;right&lt;/span&gt;: &lt;span class="pl-c1"&gt;8&lt;/span&gt;))
    }
}&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;It will display first three banners at once, and after some time (or by user tap) it will be hidden and 4 and 5 banner will be displayed when. All it with fancy animation.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-feature-requests" class="anchor" aria-hidden="true" href="#feature-requests"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Feature Requests&lt;/h2&gt;
&lt;p&gt;I'd love to know anything that you think NotificationBanner is missing. Open an issue and I'll add the &lt;code&gt;feature request&lt;/code&gt; label to it and I'll do everything I can to accomodate that request if it is in the library's best interest. &lt;g-emoji class="g-emoji" alias="smile" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f604.png"&gt;😄&lt;/g-emoji&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-apps-that-use-notificationbanner" class="anchor" aria-hidden="true" href="#apps-that-use-notificationbanner"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Apps that Use NotificationBanner&lt;/h2&gt;
&lt;p&gt;&lt;a href="https://itunes.apple.com/us/app/q-talk-about-music/id1071551321?mt=8" rel="nofollow"&gt;&lt;img src="AppIcons/q_talk_about_music.jpg" alt="Q - Talk About Music" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://apps.apple.com/app/vh-dispatch/id1249569084" rel="nofollow"&gt;&lt;img src="AppIcons/vh_dispatch.png" alt="VH Dispatch" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://apps.apple.com/app/stikkr/id851375015" rel="nofollow"&gt;&lt;img src="AppIcons/stikkr.png" alt="Stikkr" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://apps.apple.com/app/cardcast-business-cards/id1269278947" rel="nofollow"&gt;&lt;img src="AppIcons/cardcast.png" alt="CardCast" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://apps.apple.com/app/happy-scale/id532430574" rel="nofollow"&gt;&lt;img src="AppIcons/happy_scale.png" alt="Happy Scale" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://apps.apple.com/app/wanderings-travel-tracking/id1292503352" rel="nofollow"&gt;&lt;img src="AppIcons/wanderings.png" alt="Wanderings" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://apps.apple.com/app/modern-magic-8-ball/id1381145384" rel="nofollow"&gt;&lt;img src="AppIcons/modernmagic8ball.png" alt="Modern Magic 8 Ball" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://apps.apple.com/app/envision-habits-tracker/id1423771095" rel="nofollow"&gt;&lt;img src="AppIcons/envision.png" alt="Envision: Habits Tracker" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://apps.apple.com/ru/app/%D1%86%D1%83%D0%BC-%D0%B8%D0%BD%D1%82%D0%B5%D1%80%D0%BD%D0%B5%D1%82-%D0%BC%D0%B0%D0%B3%D0%B0%D0%B7%D0%B8%D0%BD-%D0%BE%D0%B4%D0%B5%D0%B6%D0%B4%D1%8B/id1089560311" rel="nofollow"&gt;&lt;img src="AppIcons/tsum.png" alt="TSUM" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://apps.apple.com/ru/app/%D1%80%D0%B5%D1%81%D1%82%D0%BE%D1%80%D0%B0%D0%BD%D1%8B-%D1%80%D0%B8%D1%81-%D0%B7%D0%B0%D0%BA%D0%B0%D0%B7-%D0%B4%D0%BE%D1%81%D1%82%D0%B0%D0%B2%D0%BA%D0%B0/id932844115" rel="nofollow"&gt;&lt;img src="AppIcons/ris.png" alt="RIS" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://apps.apple.com/ru/app/luka-pizza-%D0%B7%D0%B0%D0%BA%D0%B0%D0%B7-%D0%B8-%D0%B4%D0%BE%D1%81%D1%82%D0%B0%D0%B2%D0%BA%D0%B0/id1202155629" rel="nofollow"&gt;&lt;img src="AppIcons/lukapizza.png" alt="LukaPizza" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h4&gt;&lt;a id="user-content-feel-free-to-add-yours" class="anchor" aria-hidden="true" href="#feel-free-to-add-yours"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Feel free to add yours!&lt;/h4&gt;
&lt;h2&gt;&lt;a id="user-content-author" class="anchor" aria-hidden="true" href="#author"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Author&lt;/h2&gt;
&lt;p&gt;Dalton Hinterscher, &lt;a href="mailto:daltonhint4@gmail.com"&gt;daltonhint4@gmail.com&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-license" class="anchor" aria-hidden="true" href="#license"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;License&lt;/h2&gt;
&lt;p&gt;NotificationBanner is available under the MIT license. See the LICENSE file for more info.&lt;/p&gt;
&lt;/article&gt;&lt;/div&gt;</description><author>Daltron</author><guid isPermaLink="false">https://github.com/Daltron/NotificationBanner</guid><pubDate>Fri, 08 Nov 2019 00:09:00 GMT</pubDate></item><item><title>RxSwiftCommunity/RxDataSources #10 in Swift, This week</title><link>https://github.com/RxSwiftCommunity/RxDataSources</link><description>&lt;p&gt;&lt;i&gt;UITableView and UICollectionView Data Sources for RxSwift (sections, animated updates, editing ...)&lt;/i&gt;&lt;/p&gt;&lt;div id="readme" class="instapaper_body md" data-path="README.md"&gt;&lt;article class="markdown-body entry-content p-5" itemprop="text"&gt;&lt;p&gt;&lt;a href="https://travis-ci.org/RxSwiftCommunity/RxDataSources" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/a429cbc2966f3bdacdf4b729207539869488220f/68747470733a2f2f7472617669732d63692e6f72672f52785377696674436f6d6d756e6974792f527844617461536f75726365732e7376673f6272616e63683d6d6173746572" alt="Travis CI" data-canonical-src="https://travis-ci.org/RxSwiftCommunity/RxDataSources.svg?branch=master" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h1&gt;&lt;a id="user-content-table-and-collection-view-data-sources" class="anchor" aria-hidden="true" href="#table-and-collection-view-data-sources"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Table and Collection view data sources&lt;/h1&gt;
&lt;h2&gt;&lt;a id="user-content-features" class="anchor" aria-hidden="true" href="#features"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Features&lt;/h2&gt;
&lt;ul class="contains-task-list"&gt;
&lt;li class="task-list-item"&gt;&lt;input type="checkbox" id="" disabled="" class="task-list-item-checkbox" checked=""&gt; &lt;strong&gt;O(N)&lt;/strong&gt; algorithm for calculating differences
&lt;ul&gt;
&lt;li&gt;the algorithm has the assumption that all sections and items are unique so there is no ambiguity&lt;/li&gt;
&lt;li&gt;in case there is ambiguity, fallbacks automagically on non animated refresh&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li class="task-list-item"&gt;&lt;input type="checkbox" id="" disabled="" class="task-list-item-checkbox" checked=""&gt; it applies additional heuristics to send the least number of commands to sectioned view
&lt;ul&gt;
&lt;li&gt;even though the running time is linear, preferred number of sent commands is usually a lot less than linear&lt;/li&gt;
&lt;li&gt;it is preferred (and possible) to cap the number of changes to some small number, and in case the number of changes grows towards linear, just do normal reload&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li class="task-list-item"&gt;&lt;input type="checkbox" id="" disabled="" class="task-list-item-checkbox" checked=""&gt; Supports &lt;strong&gt;extending your item and section structures&lt;/strong&gt;
&lt;ul&gt;
&lt;li&gt;just extend your item with &lt;code&gt;IdentifiableType&lt;/code&gt; and &lt;code&gt;Equatable&lt;/code&gt;, and your section with &lt;code&gt;AnimatableSectionModelType&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li class="task-list-item"&gt;&lt;input type="checkbox" id="" disabled="" class="task-list-item-checkbox" checked=""&gt; Supports all combinations of two level hierarchical animations for &lt;strong&gt;both sections and items&lt;/strong&gt;
&lt;ul&gt;
&lt;li&gt;Section animations: Insert, Delete, Move&lt;/li&gt;
&lt;li&gt;Item animations: Insert, Delete, Move, Reload (if old value is not equal to new value)&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li class="task-list-item"&gt;&lt;input type="checkbox" id="" disabled="" class="task-list-item-checkbox" checked=""&gt; Configurable animation types for &lt;code&gt;Insert&lt;/code&gt;, &lt;code&gt;Reload&lt;/code&gt; and &lt;code&gt;Delete&lt;/code&gt; (Automatic, Fade, ...)&lt;/li&gt;
&lt;li class="task-list-item"&gt;&lt;input type="checkbox" id="" disabled="" class="task-list-item-checkbox" checked=""&gt; Example app&lt;/li&gt;
&lt;li class="task-list-item"&gt;&lt;input type="checkbox" id="" disabled="" class="task-list-item-checkbox" checked=""&gt; Randomized stress tests (example app)&lt;/li&gt;
&lt;li class="task-list-item"&gt;&lt;input type="checkbox" id="" disabled="" class="task-list-item-checkbox" checked=""&gt; Supports editing out of the box (example app)&lt;/li&gt;
&lt;li class="task-list-item"&gt;&lt;input type="checkbox" id="" disabled="" class="task-list-item-checkbox" checked=""&gt; Works with &lt;code&gt;UITableView&lt;/code&gt; and &lt;code&gt;UICollectionView&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-why" class="anchor" aria-hidden="true" href="#why"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Why&lt;/h2&gt;
&lt;p&gt;Writing table and collection view data sources is tedious. There is a large number of delegate methods that need to be implemented for the simplest case possible.&lt;/p&gt;
&lt;p&gt;RxSwift helps alleviate some of the burden with a simple data binding mechanism:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Turn your data into an Observable sequence&lt;/li&gt;
&lt;li&gt;Bind the data to the tableView/collectionView using one of:&lt;/li&gt;
&lt;/ol&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;rx.items(dataSource:protocol&amp;lt;RxTableViewDataSourceType, UITableViewDataSource&amp;gt;)&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;rx.items(cellIdentifier:String)&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;rx.items(cellIdentifier:String:Cell.Type:_:)&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;rx.items(_:_:)&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;let&lt;/span&gt; data &lt;span class="pl-k"&gt;=&lt;/span&gt; Observable&lt;span class="pl-k"&gt;&amp;lt;&lt;/span&gt;[&lt;span class="pl-c1"&gt;String&lt;/span&gt;]&lt;span class="pl-k"&gt;&amp;gt;&lt;/span&gt;.&lt;span class="pl-c1"&gt;just&lt;/span&gt;([&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;first element&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;second element&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;third element&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;])

data.&lt;span class="pl-c1"&gt;bind&lt;/span&gt;(&lt;span class="pl-c1"&gt;to&lt;/span&gt;: tableView.&lt;span class="pl-smi"&gt;rx&lt;/span&gt;.&lt;span class="pl-c1"&gt;items&lt;/span&gt;(&lt;span class="pl-c1"&gt;cellIdentifier&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;Cell&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)) { index, model, cell &lt;span class="pl-k"&gt;in&lt;/span&gt;
  cell.&lt;span class="pl-smi"&gt;textLabel&lt;/span&gt;&lt;span class="pl-k"&gt;?&lt;/span&gt;.&lt;span class="pl-c1"&gt;text&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; model
}
.&lt;span class="pl-c1"&gt;disposed&lt;/span&gt;(&lt;span class="pl-c1"&gt;by&lt;/span&gt;: disposeBag)&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;This works well with simple data sets but does not handle cases where you need to bind complex data sets with multiples sections, or when you need to perform animations when adding/modifying/deleting items.&lt;/p&gt;
&lt;p&gt;These are precisely the use cases that RxDataSources helps solve.&lt;/p&gt;
&lt;p&gt;With RxDataSources, it is super easy to just write&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;let&lt;/span&gt; dataSource &lt;span class="pl-k"&gt;=&lt;/span&gt; RxTableViewSectionedReloadDataSource&lt;span class="pl-k"&gt;&amp;lt;&lt;/span&gt;SectionModel&lt;span class="pl-k"&gt;&amp;lt;&lt;/span&gt;&lt;span class="pl-c1"&gt;String&lt;/span&gt;, &lt;span class="pl-c1"&gt;Int&lt;/span&gt;&lt;span class="pl-k"&gt;&amp;gt;&amp;gt;&lt;/span&gt;(&lt;span class="pl-c1"&gt;configureCell&lt;/span&gt;: configureCell)
Observable.&lt;span class="pl-c1"&gt;just&lt;/span&gt;([&lt;span class="pl-c1"&gt;SectionModel&lt;/span&gt;(&lt;span class="pl-c1"&gt;model&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;title&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-c1"&gt;items&lt;/span&gt;: [&lt;span class="pl-c1"&gt;1&lt;/span&gt;, &lt;span class="pl-c1"&gt;2&lt;/span&gt;, &lt;span class="pl-c1"&gt;3&lt;/span&gt;])])
    .&lt;span class="pl-c1"&gt;bind&lt;/span&gt;(&lt;span class="pl-c1"&gt;to&lt;/span&gt;: tableView.&lt;span class="pl-smi"&gt;rx&lt;/span&gt;.&lt;span class="pl-c1"&gt;items&lt;/span&gt;(&lt;span class="pl-c1"&gt;dataSource&lt;/span&gt;: dataSource))
    .&lt;span class="pl-c1"&gt;disposed&lt;/span&gt;(&lt;span class="pl-c1"&gt;by&lt;/span&gt;: disposeBag)&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="https://raw.githubusercontent.com/kzaher/rxswiftcontent/rxdatasources/RxDataSources.gif"&gt;&lt;img src="https://raw.githubusercontent.com/kzaher/rxswiftcontent/rxdatasources/RxDataSources.gif" alt="RxDataSources example app" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-how" class="anchor" aria-hidden="true" href="#how"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;How&lt;/h2&gt;
&lt;p&gt;Given the following custom data structure:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;struct&lt;/span&gt; &lt;span class="pl-en"&gt;CustomData&lt;/span&gt; {
  &lt;span class="pl-k"&gt;var&lt;/span&gt; anInt&lt;span class="pl-k"&gt;:&lt;/span&gt; &lt;span class="pl-c1"&gt;Int&lt;/span&gt;
  &lt;span class="pl-k"&gt;var&lt;/span&gt; aString&lt;span class="pl-k"&gt;:&lt;/span&gt; &lt;span class="pl-c1"&gt;String&lt;/span&gt;
  &lt;span class="pl-k"&gt;var&lt;/span&gt; aCGPoint&lt;span class="pl-k"&gt;:&lt;/span&gt; CGPoint
}&lt;/pre&gt;&lt;/div&gt;
&lt;ol&gt;
&lt;li&gt;Start by defining your sections with a struct that conforms to the &lt;code&gt;SectionModelType&lt;/code&gt; protocol:&lt;/li&gt;
&lt;/ol&gt;
&lt;ul&gt;
&lt;li&gt;define the &lt;code&gt;Item&lt;/code&gt; typealias: equal to the type of items that the section will contain&lt;/li&gt;
&lt;li&gt;declare an &lt;code&gt;items&lt;/code&gt; property: of type array of &lt;code&gt;Item&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;struct&lt;/span&gt; &lt;span class="pl-en"&gt;SectionOfCustomData&lt;/span&gt; {
  &lt;span class="pl-k"&gt;var&lt;/span&gt; header&lt;span class="pl-k"&gt;:&lt;/span&gt; &lt;span class="pl-c1"&gt;String&lt;/span&gt;    
  &lt;span class="pl-k"&gt;var&lt;/span&gt; items&lt;span class="pl-k"&gt;:&lt;/span&gt; [Item]
}
&lt;span class="pl-k"&gt;extension&lt;/span&gt; &lt;span class="pl-en"&gt;SectionOfCustomData&lt;/span&gt;: &lt;span class="pl-e"&gt;SectionModelType &lt;/span&gt;{
  &lt;span class="pl-k"&gt;typealias&lt;/span&gt; &lt;span class="pl-en"&gt;Item&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; CustomData

   &lt;span class="pl-k"&gt;init&lt;/span&gt;(&lt;span class="pl-smi"&gt;&lt;span class="pl-en"&gt;original&lt;/span&gt;&lt;/span&gt;: SectionOfCustomData, &lt;span class="pl-smi"&gt;&lt;span class="pl-en"&gt;items&lt;/span&gt;&lt;/span&gt;: [Item]) {
    &lt;span class="pl-c1"&gt;self&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; original
    &lt;span class="pl-c1"&gt;self&lt;/span&gt;.&lt;span class="pl-smi"&gt;items&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; items
  }
}&lt;/pre&gt;&lt;/div&gt;
&lt;ol start="2"&gt;
&lt;li&gt;Create a dataSource object and pass it your &lt;code&gt;SectionOfCustomData&lt;/code&gt; type:&lt;/li&gt;
&lt;/ol&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;let&lt;/span&gt; dataSource &lt;span class="pl-k"&gt;=&lt;/span&gt; RxTableViewSectionedReloadDataSource&lt;span class="pl-k"&gt;&amp;lt;&lt;/span&gt;SectionOfCustomData&lt;span class="pl-k"&gt;&amp;gt;&lt;/span&gt;(
  &lt;span class="pl-c1"&gt;configureCell&lt;/span&gt;: { dataSource, tableView, indexPath, item &lt;span class="pl-k"&gt;in&lt;/span&gt;
    &lt;span class="pl-k"&gt;let&lt;/span&gt; cell &lt;span class="pl-k"&gt;=&lt;/span&gt; tableView.&lt;span class="pl-c1"&gt;dequeueReusableCell&lt;/span&gt;(&lt;span class="pl-c1"&gt;withIdentifier&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;Cell&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-c1"&gt;for&lt;/span&gt;: indexPath)
    cell.&lt;span class="pl-smi"&gt;textLabel&lt;/span&gt;&lt;span class="pl-k"&gt;?&lt;/span&gt;.&lt;span class="pl-c1"&gt;text&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;Item &lt;span class="pl-pse"&gt;\(&lt;/span&gt;&lt;span class="pl-s1"&gt;item.&lt;span class="pl-smi"&gt;anInt&lt;/span&gt;&lt;/span&gt;&lt;span class="pl-pse"&gt;&lt;span class="pl-s1"&gt;)&lt;/span&gt;&lt;/span&gt;: &lt;span class="pl-pse"&gt;\(&lt;/span&gt;&lt;span class="pl-s1"&gt;item.&lt;span class="pl-smi"&gt;aString&lt;/span&gt;&lt;/span&gt;&lt;span class="pl-pse"&gt;&lt;span class="pl-s1"&gt;)&lt;/span&gt;&lt;/span&gt; - &lt;span class="pl-pse"&gt;\(&lt;/span&gt;&lt;span class="pl-s1"&gt;item.&lt;span class="pl-smi"&gt;aCGPoint&lt;/span&gt;.&lt;span class="pl-smi"&gt;x&lt;/span&gt;&lt;/span&gt;&lt;span class="pl-pse"&gt;&lt;span class="pl-s1"&gt;)&lt;/span&gt;&lt;/span&gt;:&lt;span class="pl-pse"&gt;\(&lt;/span&gt;&lt;span class="pl-s1"&gt;item.&lt;span class="pl-smi"&gt;aCGPoint&lt;/span&gt;.&lt;span class="pl-smi"&gt;y&lt;/span&gt;&lt;/span&gt;&lt;span class="pl-pse"&gt;&lt;span class="pl-s1"&gt;)&lt;/span&gt;&lt;/span&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;
    &lt;span class="pl-k"&gt;return&lt;/span&gt; cell
})&lt;/pre&gt;&lt;/div&gt;
&lt;ol start="3"&gt;
&lt;li&gt;Customize closures on the dataSource as needed:&lt;/li&gt;
&lt;/ol&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;titleForHeaderInSection&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;titleForFooterInSection&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;etc&lt;/li&gt;
&lt;/ul&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;dataSource.&lt;span class="pl-smi"&gt;titleForHeaderInSection&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; { dataSource, index &lt;span class="pl-k"&gt;in&lt;/span&gt;
  &lt;span class="pl-k"&gt;return&lt;/span&gt; dataSource.&lt;span class="pl-smi"&gt;sectionModels&lt;/span&gt;[index].&lt;span class="pl-c1"&gt;header&lt;/span&gt;
}

dataSource.&lt;span class="pl-smi"&gt;titleForFooterInSection&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; { dataSource, indexPath &lt;span class="pl-k"&gt;in&lt;/span&gt;
  &lt;span class="pl-k"&gt;return&lt;/span&gt; dataSource.&lt;span class="pl-smi"&gt;sectionModels&lt;/span&gt;[index].&lt;span class="pl-smi"&gt;footer&lt;/span&gt;
}

dataSource.&lt;span class="pl-smi"&gt;canEditRowAtIndexPath&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; { dataSource, indexPath &lt;span class="pl-k"&gt;in&lt;/span&gt;
  &lt;span class="pl-k"&gt;return&lt;/span&gt; &lt;span class="pl-c1"&gt;true&lt;/span&gt;
}

dataSource.&lt;span class="pl-smi"&gt;canMoveRowAtIndexPath&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; { dataSource, indexPath &lt;span class="pl-k"&gt;in&lt;/span&gt;
  &lt;span class="pl-k"&gt;return&lt;/span&gt; &lt;span class="pl-c1"&gt;true&lt;/span&gt;
}&lt;/pre&gt;&lt;/div&gt;
&lt;ol start="4"&gt;
&lt;li&gt;Define the actual data as an Observable sequence of CustomData objects and bind it to the tableView&lt;/li&gt;
&lt;/ol&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;let&lt;/span&gt; sections &lt;span class="pl-k"&gt;=&lt;/span&gt; [
  &lt;span class="pl-c1"&gt;SectionOfCustomData&lt;/span&gt;(&lt;span class="pl-c1"&gt;header&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;First section&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-c1"&gt;items&lt;/span&gt;: [&lt;span class="pl-c1"&gt;CustomData&lt;/span&gt;(&lt;span class="pl-c1"&gt;anInt&lt;/span&gt;: &lt;span class="pl-c1"&gt;0&lt;/span&gt;, &lt;span class="pl-c1"&gt;aString&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;zero&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-c1"&gt;aCGPoint&lt;/span&gt;: CGPoint.&lt;span class="pl-smi"&gt;zero&lt;/span&gt;), &lt;span class="pl-c1"&gt;CustomData&lt;/span&gt;(&lt;span class="pl-c1"&gt;anInt&lt;/span&gt;: &lt;span class="pl-c1"&gt;1&lt;/span&gt;, &lt;span class="pl-c1"&gt;aString&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;one&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-c1"&gt;aCGPoint&lt;/span&gt;: &lt;span class="pl-c1"&gt;CGPoint&lt;/span&gt;(&lt;span class="pl-c1"&gt;x&lt;/span&gt;: &lt;span class="pl-c1"&gt;1&lt;/span&gt;, &lt;span class="pl-c1"&gt;y&lt;/span&gt;: &lt;span class="pl-c1"&gt;1&lt;/span&gt;)) ]),
  &lt;span class="pl-c1"&gt;SectionOfCustomData&lt;/span&gt;(&lt;span class="pl-c1"&gt;header&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;Second section&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-c1"&gt;items&lt;/span&gt;: [&lt;span class="pl-c1"&gt;CustomData&lt;/span&gt;(&lt;span class="pl-c1"&gt;anInt&lt;/span&gt;: &lt;span class="pl-c1"&gt;2&lt;/span&gt;, &lt;span class="pl-c1"&gt;aString&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;two&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-c1"&gt;aCGPoint&lt;/span&gt;: &lt;span class="pl-c1"&gt;CGPoint&lt;/span&gt;(&lt;span class="pl-c1"&gt;x&lt;/span&gt;: &lt;span class="pl-c1"&gt;2&lt;/span&gt;, &lt;span class="pl-c1"&gt;y&lt;/span&gt;: &lt;span class="pl-c1"&gt;2&lt;/span&gt;)), &lt;span class="pl-c1"&gt;CustomData&lt;/span&gt;(&lt;span class="pl-c1"&gt;anInt&lt;/span&gt;: &lt;span class="pl-c1"&gt;3&lt;/span&gt;, &lt;span class="pl-c1"&gt;aString&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;three&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-c1"&gt;aCGPoint&lt;/span&gt;: &lt;span class="pl-c1"&gt;CGPoint&lt;/span&gt;(&lt;span class="pl-c1"&gt;x&lt;/span&gt;: &lt;span class="pl-c1"&gt;3&lt;/span&gt;, &lt;span class="pl-c1"&gt;y&lt;/span&gt;: &lt;span class="pl-c1"&gt;3&lt;/span&gt;)) ])
]

Observable.&lt;span class="pl-c1"&gt;just&lt;/span&gt;(sections)
  .&lt;span class="pl-c1"&gt;bind&lt;/span&gt;(&lt;span class="pl-c1"&gt;to&lt;/span&gt;: tableView.&lt;span class="pl-smi"&gt;rx&lt;/span&gt;.&lt;span class="pl-c1"&gt;items&lt;/span&gt;(&lt;span class="pl-c1"&gt;dataSource&lt;/span&gt;: dataSource))
  .&lt;span class="pl-c1"&gt;disposed&lt;/span&gt;(&lt;span class="pl-c1"&gt;by&lt;/span&gt;: disposeBag)&lt;/pre&gt;&lt;/div&gt;
&lt;h3&gt;&lt;a id="user-content-animated-data-sources" class="anchor" aria-hidden="true" href="#animated-data-sources"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Animated Data Sources&lt;/h3&gt;
&lt;p&gt;RxDataSources provides two special data source types that automatically take care of animating changes in the bound data source: &lt;code&gt;RxTableViewSectionedAnimatedDataSource&lt;/code&gt; and &lt;code&gt;RxCollectionViewSectionedAnimatedDataSource&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;To use one of the two animated data sources, you must take a few extra steps on top of those outlined above:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;SectionOfCustomData needs to conform to &lt;code&gt;AnimatableSectionModelType&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Your data model must conform to
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;IdentifiableType&lt;/code&gt;: The &lt;code&gt;identity&lt;/code&gt; provided by the &lt;code&gt;IdentifiableType&lt;/code&gt; protocol must be an &lt;strong&gt;immutable identifier representing an instance of the model&lt;/strong&gt;. For example, in case of a &lt;code&gt;Car&lt;/code&gt; model, you might want to use the car's &lt;code&gt;plateNumber&lt;/code&gt; as its identity.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;Equatable&lt;/code&gt;: Conforming to &lt;code&gt;Equatable&lt;/code&gt; helps &lt;code&gt;RxDataSources&lt;/code&gt; determine which cells have changed so it can animate only these specific cells. Meaning, changing &lt;strong&gt;any&lt;/strong&gt; of the &lt;code&gt;Car&lt;/code&gt; model's properties will trigger an animated reload of that cell.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-requirements" class="anchor" aria-hidden="true" href="#requirements"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Requirements&lt;/h2&gt;
&lt;p&gt;Xcode 10.2&lt;/p&gt;
&lt;p&gt;Swift 5.0&lt;/p&gt;
&lt;p&gt;For Swift 4.x version please use versions &lt;code&gt;3.0.0 ... 3.1.0&lt;/code&gt;
For Swift 3.x version please use versions &lt;code&gt;1.0 ... 2.0.2&lt;/code&gt;
For Swift 2.3 version please use versions &lt;code&gt;0.1 ... 0.9&lt;/code&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-installation" class="anchor" aria-hidden="true" href="#installation"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Installation&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;We'll try to keep the API as stable as possible, but breaking API changes can occur.&lt;/strong&gt;&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-cocoapods" class="anchor" aria-hidden="true" href="#cocoapods"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;CocoaPods&lt;/h3&gt;
&lt;p&gt;Podfile&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;pod 'RxDataSources', '~&amp;gt; 4.0'
&lt;/code&gt;&lt;/pre&gt;
&lt;h3&gt;&lt;a id="user-content-carthage" class="anchor" aria-hidden="true" href="#carthage"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Carthage&lt;/h3&gt;
&lt;p&gt;Cartfile&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;github "RxSwiftCommunity/RxDataSources" ~&amp;gt; 4.0
&lt;/code&gt;&lt;/pre&gt;
&lt;/article&gt;&lt;/div&gt;</description><author>RxSwiftCommunity</author><guid isPermaLink="false">https://github.com/RxSwiftCommunity/RxDataSources</guid><pubDate>Fri, 08 Nov 2019 00:10:00 GMT</pubDate></item><item><title>huri000/SwiftEntryKit #11 in Swift, This week</title><link>https://github.com/huri000/SwiftEntryKit</link><description>&lt;p&gt;&lt;i&gt;SwiftEntryKit is a presentation library for iOS. It can be used to easily display overlays within your iOS apps.&lt;/i&gt;&lt;/p&gt;&lt;div id="readme" class="instapaper_body md" data-path="README.md"&gt;&lt;article class="markdown-body entry-content p-5" itemprop="text"&gt;&lt;h1&gt;&lt;a id="user-content-swiftentrykit-" class="anchor" aria-hidden="true" href="#swiftentrykit-"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;SwiftEntryKit &lt;a target="_blank" rel="noopener noreferrer" href="https://github.com/huri000/assets/blob/master/swift-entrykit/project-icon.png"&gt;&lt;img align="left" height="42" src="https://github.com/huri000/assets/raw/master/swift-entrykit/project-icon.png" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/h1&gt;
&lt;p&gt;&lt;a href="https://developer.apple.com/iphone/index.action" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/dda885ad388bbe010b11a251d2c913ee71e22f6f/687474703a2f2f696d672e736869656c64732e696f2f62616467652f706c6174666f726d2d694f532d626c75652e7376673f7374796c653d666c6174" alt="Platform" data-canonical-src="http://img.shields.io/badge/platform-iOS-blue.svg?style=flat" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://developer.apple.com/swift" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/b29741037368ab7b041fef837fca011fa230be0e/687474703a2f2f696d672e736869656c64732e696f2f62616467652f6c616e67756167652d53776966742d627269676874677265656e2e7376673f7374796c653d666c6174" alt="Language" data-canonical-src="http://img.shields.io/badge/language-Swift-brightgreen.svg?style=flat" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="http://cocoapods.org/pods/SwiftEntryKit" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/ca6c8448c3ea6e39fac4d3165e2514a5397e92e2/68747470733a2f2f696d672e736869656c64732e696f2f636f636f61706f64732f762f5377696674456e7472794b69742e7376673f7374796c653d666c61742d737175617265" alt="Version" data-canonical-src="https://img.shields.io/cocoapods/v/SwiftEntryKit.svg?style=flat-square" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://github.com/Carthage/Carthage"&gt;&lt;img src="https://camo.githubusercontent.com/3dc8a44a2c3f7ccd5418008d1295aae48466c141/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f43617274686167652d636f6d70617469626c652d3442433531442e7376673f7374796c653d666c6174" alt="Carthage compatible" data-canonical-src="https://img.shields.io/badge/Carthage-compatible-4BC51D.svg?style=flat" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://github.com/JamitLabs/Accio"&gt;&lt;img src="https://camo.githubusercontent.com/e502cdc2b27c1f2b2590f061d37b984ba3957c26/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f416363696f2d737570706f727465642d3041374346352e7376673f7374796c653d666c6174" alt="Accio: Supported" data-canonical-src="https://img.shields.io/badge/Accio-supported-0A7CF5.svg?style=flat" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="http://mit-license.org" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/68bd6ae864303283e8ce78ecc2a2544e1fb1d2ae/687474703a2f2f696d672e736869656c64732e696f2f62616467652f6c6963656e73652d4d49542d6c69676874677265792e7376673f7374796c653d666c6174" alt="License" data-canonical-src="http://img.shields.io/badge/license-MIT-lightgrey.svg?style=flat" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a target="_blank" rel="noopener noreferrer" href="https://camo.githubusercontent.com/acbcc3cda693167e06e3560ce4d60175d28445e0/68747470733a2f2f7472617669732d63692e636f6d2f687572693030302f5377696674456e7472794b69742e7376673f6272616e63683d6d6173746572"&gt;&lt;img src="https://camo.githubusercontent.com/acbcc3cda693167e06e3560ce4d60175d28445e0/68747470733a2f2f7472617669732d63692e636f6d2f687572693030302f5377696674456e7472794b69742e7376673f6272616e63683d6d6173746572" alt="" data-canonical-src="https://travis-ci.com/huri000/SwiftEntryKit.svg?branch=master" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-whats-new" class="anchor" aria-hidden="true" href="#whats-new"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;What's New?&lt;/h2&gt;
&lt;h3&gt;&lt;a id="user-content--114---let-there-be-dark" class="anchor" aria-hidden="true" href="#-114---let-there-be-dark"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;g-emoji class="g-emoji" alias="new_moon" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f311.png"&gt;🌑&lt;/g-emoji&gt; &lt;code&gt;1.1.4&lt;/code&gt; - let there be dark&lt;/h3&gt;
&lt;p&gt;&lt;code&gt;SwiftEntryKit&lt;/code&gt; is now dark mode ready, and user interface styles are supported pre iOS 13 / Xcode 11!&lt;/p&gt;
&lt;p&gt;To know more about it, visit &lt;a href="https://github.com/huri000/SwiftEntryKit/blob/master/CHANGELOG.md#110"&gt;Change Log&lt;/a&gt;, and install the &lt;a href="#example-project-installation"&gt;example project&lt;/a&gt;.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content--104---automata" class="anchor" aria-hidden="true" href="#-104---automata"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;g-emoji class="g-emoji" alias="robot" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f916.png"&gt;🤖&lt;/g-emoji&gt; &lt;code&gt;1.0.4&lt;/code&gt; - automata&lt;/h3&gt;
&lt;p&gt;Accessibility in presets is now supported, enabling all kinds of robotic activity for host projects.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="#overview"&gt;Overview&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="#features"&gt;Features&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="#example-project"&gt;Example Project&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="#example-project-installation"&gt;Example Project Installation&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#presets"&gt;Presets&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#playground"&gt;Playground&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="#requirements"&gt;Requirements&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#installation"&gt;Installation&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#usage"&gt;Usage&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="#quick-usage"&gt;Quick Usage&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#entry-attributes"&gt;Entry Attributes&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="#entry-name"&gt;Entry Name&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#window-level"&gt;Window Level&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#display-position"&gt;Display Position&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#precedence"&gt;Precedence&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="#override"&gt;Override&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#enqueue"&gt;Enqueue&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="#heuristics"&gt;Heuristics&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="#display-priority"&gt;Display Priority&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="#display-duration"&gt;Display Duration&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#position-constraints"&gt;Position Constraints&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#user-interaction"&gt;User Interaction&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#scroll-behavior"&gt;Scroll Behavior&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#haptic-feedback"&gt;Haptic Feedback&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#lifecycle-events"&gt;Lifecycle Events&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#display-mode"&gt;Display Mode&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#background-style"&gt;Background Style&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#shadow"&gt;Shadow&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#round-corners"&gt;Round Corners&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#border"&gt;Border&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#animations"&gt;Animations&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#pop-behavior"&gt;Pop Behavior&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#status-bar"&gt;Status Bar&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="#presets-usage-example"&gt;Presets Usage Example&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#custom-view-usage-example"&gt;Custom View Usage Example&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#displaying-a-view-controller"&gt;Displaying a View Controller&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#alternative-rollback-window"&gt;Alternative Rollback Window&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#dismissing-an-entry"&gt;Dismissing an Entry&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#swiping-and-rubber-banding"&gt;Swiping and Rubber Banding&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#dealing-with-safe-area"&gt;Dealing With Safe Area&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#dealing-with-orientation-change"&gt;Dealing With Orientation Change&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#swift-and-objective-c-interoperability"&gt;Swift and Objective-C Interoperability&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="#author"&gt;Author&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#license"&gt;License&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-overview" class="anchor" aria-hidden="true" href="#overview"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Overview&lt;/h2&gt;
&lt;p&gt;SwiftEntryKit is a simple yet versatile content presenter written in Swift.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-features" class="anchor" aria-hidden="true" href="#features"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Features&lt;/h3&gt;
&lt;p&gt;Banners or pop-ups are called &lt;em&gt;Entries&lt;/em&gt;.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Entries are displayed inside a separate UIWindow (of type EKWindow), so users are able to navigate the app freely while entries are being displayed in a non intrusive manner.&lt;/li&gt;
&lt;li&gt;The kit offers beautiful &lt;a href="#presets"&gt;presets&lt;/a&gt; that can be themed with your own colors and fonts.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Customization&lt;/strong&gt;: Entries are highly customizable
&lt;ul class="contains-task-list"&gt;
&lt;li class="task-list-item"&gt;&lt;input type="checkbox" id="" disabled="" class="task-list-item-checkbox" checked=""&gt; Can be &lt;a href="#display-position"&gt;positioned&lt;/a&gt; either at the top, center, or the bottom of the screen.&lt;/li&gt;
&lt;li class="task-list-item"&gt;&lt;input type="checkbox" id="" disabled="" class="task-list-item-checkbox" checked=""&gt; Can be displayed within or outside the screen safe area.&lt;/li&gt;
&lt;li class="task-list-item"&gt;&lt;input type="checkbox" id="" disabled="" class="task-list-item-checkbox" checked=""&gt; Can be stylized: have a &lt;a href="#border"&gt;border&lt;/a&gt;, &lt;a href="#shadow"&gt;drop-shadow&lt;/a&gt; and &lt;a href="#round-corners"&gt;round corners&lt;/a&gt;.&lt;/li&gt;
&lt;li class="task-list-item"&gt;&lt;input type="checkbox" id="" disabled="" class="task-list-item-checkbox" checked=""&gt; Their content and the surrounding background can be blurred, dimmed, colored or have a gradient &lt;a href="#background-style"&gt;style&lt;/a&gt;.&lt;/li&gt;
&lt;li class="task-list-item"&gt;&lt;input type="checkbox" id="" disabled="" class="task-list-item-checkbox" checked=""&gt; Transition &lt;a href="#animations"&gt;animations&lt;/a&gt; are customizable - entrance, exit and pop (by another entry).&lt;/li&gt;
&lt;li class="task-list-item"&gt;&lt;input type="checkbox" id="" disabled="" class="task-list-item-checkbox" checked=""&gt; The &lt;a href="#user-interaction"&gt;user interaction&lt;/a&gt; with the entry or the screen can be intercepted.&lt;/li&gt;
&lt;li class="task-list-item"&gt;&lt;input type="checkbox" id="" disabled="" class="task-list-item-checkbox" checked=""&gt; Entries can be enqueued or override previous entries using the &lt;a href="#precedence"&gt;precedence&lt;/a&gt; attribute.&lt;/li&gt;
&lt;li class="task-list-item"&gt;&lt;input type="checkbox" id="" disabled="" class="task-list-item-checkbox" checked=""&gt; Each entry has a &lt;a href="#display-priority"&gt;display priority&lt;/a&gt; attribute. That means that it can be dismissed only by other entry with an equal or higher priority.&lt;/li&gt;
&lt;li class="task-list-item"&gt;&lt;input type="checkbox" id="" disabled="" class="task-list-item-checkbox" checked=""&gt; Presets support accessibility.&lt;/li&gt;
&lt;li class="task-list-item"&gt;&lt;input type="checkbox" id="" disabled="" class="task-list-item-checkbox" checked=""&gt; Entries have an optional rubber banding effect while panning.&lt;/li&gt;
&lt;li class="task-list-item"&gt;&lt;input type="checkbox" id="" disabled="" class="task-list-item-checkbox" checked=""&gt; Entries can be optionally dismissed using a simple &lt;a href="#swiping-and-rubber-banding"&gt;swipe gesture&lt;/a&gt;.&lt;/li&gt;
&lt;li class="task-list-item"&gt;&lt;input type="checkbox" id="" disabled="" class="task-list-item-checkbox" checked=""&gt; Entries can be optionally injected with &lt;a href="#lifecycle-events"&gt;lifecycle events&lt;/a&gt;: &lt;em&gt;will&lt;/em&gt; and &lt;em&gt;did&lt;/em&gt; appear/disappear.&lt;/li&gt;
&lt;li class="task-list-item"&gt;&lt;input type="checkbox" id="" disabled="" class="task-list-item-checkbox" checked=""&gt; The &lt;a href="#status-bar"&gt;status bar style&lt;/a&gt; is settable for the display duration of the entry.&lt;/li&gt;
&lt;li class="task-list-item"&gt;&lt;input type="checkbox" id="" disabled="" class="task-list-item-checkbox" checked=""&gt; Supports &lt;a href="#presets"&gt;navigation controllers&lt;/a&gt; &amp;amp; &lt;a href="#custom-view-usage-example"&gt;custom views&lt;/a&gt; as well!&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-example-project" class="anchor" aria-hidden="true" href="#example-project"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Example Project&lt;/h2&gt;
&lt;p&gt;The example project contains various presets and examples you can use and modify as your like.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-example-project-installation" class="anchor" aria-hidden="true" href="#example-project-installation"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Example Project Installation&lt;/h3&gt;
&lt;p&gt;You can either use the terminal or git client such as Source Tree.
&lt;em&gt;The zip file doesn't contain a necessary dependency (&lt;a href="https://github.com/huri000/QuickLayout"&gt;QuickLayout&lt;/a&gt;).&lt;/em&gt;&lt;/p&gt;
&lt;h4&gt;&lt;a id="user-content-terminal-users" class="anchor" aria-hidden="true" href="#terminal-users"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Terminal Users&lt;/h4&gt;
&lt;p&gt;Run &lt;code&gt;git clone&lt;/code&gt; with &lt;code&gt;--recurse-submodules&lt;/code&gt;, to include QuickLayout as submodule, likewise:&lt;/p&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt;$ git clone --recurse-submodules https://github.com/huri000/SwiftEntryKit.git&lt;/pre&gt;&lt;/div&gt;
&lt;h4&gt;&lt;a id="user-content-git-client-source-tree" class="anchor" aria-hidden="true" href="#git-client-source-tree"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Git Client (Source Tree)&lt;/h4&gt;
&lt;p&gt;Cloning from &lt;a href="https://github.com/huri000/SwiftEntryKit.git"&gt;https://github.com/huri000/SwiftEntryKit.git&lt;/a&gt; also setups QuickLayout as submodule.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-presets" class="anchor" aria-hidden="true" href="#presets"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Presets&lt;/h3&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Toasts&lt;/th&gt;
&lt;th&gt;Notes&lt;/th&gt;
&lt;th&gt;Floats&lt;/th&gt;
&lt;th&gt;Popups&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a target="_blank" rel="noopener noreferrer" href="https://github.com/huri000/assets/blob/master/swift-entrykit/toasts.gif"&gt;&lt;img src="https://github.com/huri000/assets/raw/master/swift-entrykit/toasts.gif" alt="toasts_example" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;a target="_blank" rel="noopener noreferrer" href="https://github.com/huri000/assets/blob/master/swift-entrykit/notes.gif"&gt;&lt;img src="https://github.com/huri000/assets/raw/master/swift-entrykit/notes.gif" alt="notes_example" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;a target="_blank" rel="noopener noreferrer" href="https://github.com/huri000/assets/blob/master/swift-entrykit/floats.gif"&gt;&lt;img src="https://github.com/huri000/assets/raw/master/swift-entrykit/floats.gif" alt="floats_example" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;a target="_blank" rel="noopener noreferrer" href="https://github.com/huri000/assets/blob/master/swift-entrykit/popups.gif"&gt;&lt;img src="https://github.com/huri000/assets/raw/master/swift-entrykit/popups.gif" alt="popup_example" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Alerts&lt;/th&gt;
&lt;th&gt;Forms&lt;/th&gt;
&lt;th&gt;Rating&lt;/th&gt;
&lt;th&gt;More...&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a target="_blank" rel="noopener noreferrer" href="https://github.com/huri000/assets/blob/master/swift-entrykit/alerts.gif"&gt;&lt;img src="https://github.com/huri000/assets/raw/master/swift-entrykit/alerts.gif" alt="alert_example" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;a target="_blank" rel="noopener noreferrer" href="https://github.com/huri000/assets/blob/master/swift-entrykit/forms.gif"&gt;&lt;img src="https://github.com/huri000/assets/raw/master/swift-entrykit/forms.gif" alt="form_example" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;a target="_blank" rel="noopener noreferrer" href="https://github.com/huri000/assets/blob/master/swift-entrykit/rating.gif"&gt;&lt;img src="https://github.com/huri000/assets/raw/master/swift-entrykit/rating.gif" alt="rating_example" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;a target="_blank" rel="noopener noreferrer" href="https://github.com/huri000/assets/blob/master/swift-entrykit/custom.gif"&gt;&lt;img src="https://github.com/huri000/assets/raw/master/swift-entrykit/custom.gif" alt="custom_example" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h3&gt;&lt;a id="user-content-playground" class="anchor" aria-hidden="true" href="#playground"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Playground&lt;/h3&gt;
&lt;p&gt;&lt;strong&gt;noun: a place where people can play &lt;g-emoji class="g-emoji" alias="football" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f3c8.png"&gt;🏈&lt;/g-emoji&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;The example app contains a playground screen, an interface that allows you to customize your preferable entries.
The playground screen has some limitations (allows to select constant values) but you can easily modify the code to suit your needs. Check it out!&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;The Playground Screen&lt;/th&gt;
&lt;th&gt;Top Toast Sample&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a target="_blank" rel="noopener noreferrer" href="https://github.com/huri000/assets/blob/master/swift-entrykit/playground.gif"&gt;&lt;img src="https://github.com/huri000/assets/raw/master/swift-entrykit/playground.gif" alt="playground_example" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;a target="_blank" rel="noopener noreferrer" href="https://github.com/huri000/assets/blob/master/swift-entrykit/playground-sample-1.jpeg"&gt;&lt;img src="https://github.com/huri000/assets/raw/master/swift-entrykit/playground-sample-1.jpeg" alt="playground-sample-1" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h2&gt;&lt;a id="user-content-requirements" class="anchor" aria-hidden="true" href="#requirements"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Requirements&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;iOS 9 or any higher version.&lt;/li&gt;
&lt;li&gt;Xcode 9 or any higher version.&lt;/li&gt;
&lt;li&gt;Swift 4.0 or any higher version.&lt;/li&gt;
&lt;li&gt;The library has not been tested with iOS 8.x.y or a lower version.&lt;/li&gt;
&lt;li&gt;SwiftEntryKit leans heavily on &lt;a href="https://github.com/huri000/QuickLayout"&gt;QuickLayout&lt;/a&gt; - A lightweight library written in Swift that is used to easily layout views programmatically.&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-installation" class="anchor" aria-hidden="true" href="#installation"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Installation&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;SwiftEntryKit is compatible with Swift 5 as of release &lt;em&gt;1.0.0&lt;/em&gt;.&lt;/li&gt;
&lt;li&gt;SwiftEntryKit is compatible with Swift 4.2 as of release &lt;em&gt;0.8.1&lt;/em&gt;.&lt;/li&gt;
&lt;li&gt;Developers who use lower Swift version should install release &lt;em&gt;0.7.2&lt;/em&gt;.&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;&lt;a id="user-content-cocoapods" class="anchor" aria-hidden="true" href="#cocoapods"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;CocoaPods&lt;/h3&gt;
&lt;p&gt;&lt;a href="http://cocoapods.org" rel="nofollow"&gt;CocoaPods&lt;/a&gt; is a dependency manager for Cocoa projects. You can install it with the following command:&lt;/p&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt;$ gem install cocoapods&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;To integrate SwiftEntryKit into your Xcode project using CocoaPods, specify it in your &lt;code&gt;Podfile&lt;/code&gt;:&lt;/p&gt;
&lt;div class="highlight highlight-source-ruby"&gt;&lt;pre&gt;source &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;https://github.com/cocoapods/specs.git&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;
platform &lt;span class="pl-c1"&gt;:ios&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;9.0&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;
use_frameworks!

pod &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;SwiftEntryKit&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;1.2.3&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Then, run the following command:&lt;/p&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt;$ pod install&lt;/pre&gt;&lt;/div&gt;
&lt;h3&gt;&lt;a id="user-content-carthage" class="anchor" aria-hidden="true" href="#carthage"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Carthage&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://github.com/Carthage/Carthage"&gt;Carthage&lt;/a&gt; is a decentralized dependency manager that builds your dependencies and provides you with binary frameworks.&lt;/p&gt;
&lt;p&gt;You can install Carthage with &lt;a href="http://brew.sh/" rel="nofollow"&gt;Homebrew&lt;/a&gt; using the following command:&lt;/p&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt;$ brew update
$ brew install carthage&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;To integrate SwiftEntryKit into your Xcode project using Carthage, specify the following in your &lt;code&gt;Cartfile&lt;/code&gt;:&lt;/p&gt;
&lt;pre lang="ogdl"&gt;&lt;code&gt;github "huri000/SwiftEntryKit" == 1.2.3
&lt;/code&gt;&lt;/pre&gt;
&lt;h3&gt;&lt;a id="user-content-accio" class="anchor" aria-hidden="true" href="#accio"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Accio&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://github.com/JamitLabs/Accio"&gt;Accio&lt;/a&gt; is a decentralized dependency manager driven by SwiftPM that works for iOS/tvOS/watchOS/macOS projects.&lt;/p&gt;
&lt;p&gt;You can install Accio with &lt;a href="http://brew.sh/" rel="nofollow"&gt;Homebrew&lt;/a&gt; using the following command:&lt;/p&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt;$ brew tap JamitLabs/Accio https://github.com/JamitLabs/Accio.git
$ brew install accio&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;To integrate SwiftEntryKit into your Xcode project using Accio, specify the following in your &lt;code&gt;Package.swift&lt;/code&gt; manifest:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;.&lt;span class="pl-c1"&gt;package&lt;/span&gt;(&lt;span class="pl-c1"&gt;url&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;https://github.com/huri000/SwiftEntryKit&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, .&lt;span class="pl-c1"&gt;exact&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;1.2.3&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;))&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;After specifying &lt;code&gt;"SwiftEntryKit"&lt;/code&gt; as a dependency of the target in which you want to use it, run &lt;code&gt;accio install&lt;/code&gt;.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-usage" class="anchor" aria-hidden="true" href="#usage"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Usage&lt;/h2&gt;
&lt;h3&gt;&lt;a id="user-content-quick-usage" class="anchor" aria-hidden="true" href="#quick-usage"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Quick Usage&lt;/h3&gt;
&lt;p&gt;No setup is needed! Each time you wish to display an entry, just create your view and initialize an EKAttributes struct.
See also the &lt;a href="#presets-usage-example"&gt;preset usage example&lt;/a&gt;, and the example project.
likewise:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Customized view&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;&lt;span class="pl-k"&gt;let&lt;/span&gt; customView &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;SomeCustomView&lt;/span&gt;()
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;/*&lt;/span&gt;&lt;/span&gt;
&lt;span class="pl-c"&gt;Do some customization on customView&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;*/&lt;/span&gt;&lt;/span&gt;

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Attributes struct that describes the display, style, user interaction and animations of customView.&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;&lt;span class="pl-k"&gt;var&lt;/span&gt; attributes &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;EKAttributes&lt;/span&gt;()
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;/*&lt;/span&gt;&lt;/span&gt;
&lt;span class="pl-c"&gt;Adjust preferable attributes&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;*/&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;And then, just call:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;SwiftEntryKit.&lt;span class="pl-c1"&gt;display&lt;/span&gt;(&lt;span class="pl-c1"&gt;entry&lt;/span&gt;: customView, &lt;span class="pl-c1"&gt;using&lt;/span&gt;: attributes)&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;The kit will replace the application main window with the EKWindow instance and display the entry.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-entry-attributes" class="anchor" aria-hidden="true" href="#entry-attributes"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Entry Attributes&lt;/h3&gt;
&lt;p&gt;&lt;em&gt;EKAttributes&lt;/em&gt; is the entry's descriptor. Each time an entry is displayed, an EKAttributes struct is necessary to describe the entry's presentation, position inside the screen, the display duration, its frame constraints (if needed), its styling (corners, border and shadow), the user interaction events, the animations (in / out) and more.&lt;/p&gt;
&lt;p&gt;Create a mutable EKAttributes structure likewise:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;var&lt;/span&gt; attributes &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;EKAttributes&lt;/span&gt;()&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Below are the properties that can be modified in the &lt;em&gt;EKAttributes&lt;/em&gt;:&lt;/p&gt;
&lt;h4&gt;&lt;a id="user-content-entry-name" class="anchor" aria-hidden="true" href="#entry-name"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Entry Name&lt;/h4&gt;
&lt;p&gt;Entries can have names.
When an EKAttributes struct is instantiated, it is nameless, meaning, the &lt;code&gt;name&lt;/code&gt; property is &lt;code&gt;nil&lt;/code&gt;.
It is recommended to set a meaningful name for an entry.&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;attributes.&lt;span class="pl-smi"&gt;name&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;Top Note&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Entries with names can be specifically referred to later, for example, you can inquire whether a &lt;strong&gt;specific&lt;/strong&gt; entry is currently displayed:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;if&lt;/span&gt; SwiftEntryKit.&lt;span class="pl-c1"&gt;isCurrentlyDisplaying&lt;/span&gt;(&lt;span class="pl-c1"&gt;entryNamed&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;Top Note&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;) {
    &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;/*&lt;/span&gt; Do your things &lt;span class="pl-c"&gt;*/&lt;/span&gt;&lt;/span&gt;
}&lt;/pre&gt;&lt;/div&gt;
&lt;h4&gt;&lt;a id="user-content-window-level" class="anchor" aria-hidden="true" href="#window-level"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Window Level&lt;/h4&gt;
&lt;p&gt;Entries can be displayed above the application main window, above the status bar, above the alerts window or even have a custom level (UIWindowLevel).&lt;/p&gt;
&lt;p&gt;For example, set the window level to &lt;em&gt;normal&lt;/em&gt;, likewise:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;attributes.&lt;span class="pl-smi"&gt;windowLevel&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; .&lt;span class="pl-smi"&gt;normal&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;This causes the entry to appear above the application key window and below the status bar.&lt;/p&gt;
&lt;p&gt;The default value of &lt;code&gt;windowLevel&lt;/code&gt; is &lt;code&gt;.statusBar&lt;/code&gt;.&lt;/p&gt;
&lt;h4&gt;&lt;a id="user-content-display-position" class="anchor" aria-hidden="true" href="#display-position"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Display Position&lt;/h4&gt;
&lt;p&gt;The entry can be displayed either at the &lt;em&gt;top&lt;/em&gt;, &lt;em&gt;center&lt;/em&gt;, or the &lt;em&gt;bottom&lt;/em&gt; of the screen.&lt;/p&gt;
&lt;p&gt;For example, set the display position to &lt;em&gt;bottom&lt;/em&gt;, likewise:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;attributes.&lt;span class="pl-smi"&gt;position&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; .&lt;span class="pl-smi"&gt;bottom&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;The default value of &lt;code&gt;position&lt;/code&gt; is &lt;code&gt;.top&lt;/code&gt;.&lt;/p&gt;
&lt;h4&gt;&lt;a id="user-content-precedence" class="anchor" aria-hidden="true" href="#precedence"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Precedence&lt;/h4&gt;
&lt;p&gt;The precedence attribute of an entry describes the manner in which entries are pushed in. It offers 2 approaches for managing the presentation priority of multiple simultaneous entries.&lt;/p&gt;
&lt;h5&gt;&lt;a id="user-content-override" class="anchor" aria-hidden="true" href="#override"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Override&lt;/h5&gt;
&lt;p&gt;If the &lt;a href="#display-priority"&gt;display priority&lt;/a&gt; is equal or higher than the currently displayed entry, override it.&lt;/p&gt;
&lt;p&gt;Example for setting &lt;code&gt;.override&lt;/code&gt; precedence with &lt;code&gt;.max&lt;/code&gt; display priority while ignoring entries that are already enqueued (leaving them to display after the new entry is dismissed).&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;attributes.&lt;span class="pl-smi"&gt;precedence&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; .&lt;span class="pl-c1"&gt;override&lt;/span&gt;(&lt;span class="pl-c1"&gt;priority&lt;/span&gt;: .&lt;span class="pl-c1"&gt;max&lt;/span&gt;, &lt;span class="pl-c1"&gt;dropEnqueuedEntries&lt;/span&gt;: &lt;span class="pl-c1"&gt;false&lt;/span&gt;)&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;You can optionally flush the entries that are inside the queue.&lt;/p&gt;
&lt;p&gt;In case  &lt;code&gt;dropEnqueuedEntries&lt;/code&gt; is &lt;code&gt;false&lt;/code&gt;, enqueued entries remain in the queue. The first enqueued entry will show right after the new entry pops out.
In case  &lt;code&gt;dropEnqueuedEntries&lt;/code&gt; is &lt;code&gt;true&lt;/code&gt;, the entry-queue is flushed as the new entry is being displayed.&lt;/p&gt;
&lt;h5&gt;&lt;a id="user-content-enqueue" class="anchor" aria-hidden="true" href="#enqueue"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Enqueue&lt;/h5&gt;
&lt;p&gt;If the queue is empty, display the entry immediately, otherwise, insert the entry into the queue until its turn to show arrives.&lt;/p&gt;
&lt;p&gt;Example for setting &lt;code&gt;.enqueue&lt;/code&gt; precedence with &lt;code&gt;.normal&lt;/code&gt; display priority:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;attributes.&lt;span class="pl-smi"&gt;precedence&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; .&lt;span class="pl-c1"&gt;enqueue&lt;/span&gt;(&lt;span class="pl-c1"&gt;priority&lt;/span&gt;: .&lt;span class="pl-smi"&gt;normal&lt;/span&gt;)&lt;/pre&gt;&lt;/div&gt;
&lt;h6&gt;&lt;a id="user-content-heuristics" class="anchor" aria-hidden="true" href="#heuristics"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Heuristics&lt;/h6&gt;
&lt;p&gt;There are 2 possible heuristics for entries prioritization in the queue:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Display Priority Queue: The entries are sorted by their &lt;a href="#display-priority"&gt;display priority&lt;/a&gt;, then by chronological order.&lt;/li&gt;
&lt;li&gt;Chronological Queue: The entries are sorted only by their chronological order (standard queue).&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Select the heuristic that suits you best by doing the following, only once, before using &lt;code&gt;SwiftEntryKit&lt;/code&gt; to display entries.&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;EKAttributes.&lt;span class="pl-smi"&gt;Precedence&lt;/span&gt;.&lt;span class="pl-smi"&gt;QueueingHeuristic&lt;/span&gt;.&lt;span class="pl-c1"&gt;value&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; .&lt;span class="pl-smi"&gt;priority&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Or:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;EKAttributes.&lt;span class="pl-smi"&gt;Precedence&lt;/span&gt;.&lt;span class="pl-smi"&gt;QueueingHeuristic&lt;/span&gt;.&lt;span class="pl-c1"&gt;value&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; .&lt;span class="pl-smi"&gt;chronological&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;The default value of &lt;code&gt;EKAttributes.Precedence.QueueingHeuristic.value&lt;/code&gt; is &lt;code&gt;.priority&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;The default value of precedence is &lt;code&gt;.override(priority: .normal, dropEnqueuedEntries: false)&lt;/code&gt;.&lt;/p&gt;
&lt;h5&gt;&lt;a id="user-content-display-priority" class="anchor" aria-hidden="true" href="#display-priority"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Display Priority&lt;/h5&gt;
&lt;p&gt;The display priority of the entry determines whether it dismisses other entries or is dismissed by them.
An entry can be dismissed only by an entry with an equal or a higher display priority.&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;let&lt;/span&gt; highPriorityAttributes &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;EKAttributes&lt;/span&gt;()
highPriorityAttributes.&lt;span class="pl-smi"&gt;precedence&lt;/span&gt;.&lt;span class="pl-smi"&gt;priority&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; .&lt;span class="pl-smi"&gt;high&lt;/span&gt;

&lt;span class="pl-k"&gt;let&lt;/span&gt; normalPriorityAttributes &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;EKAttributes&lt;/span&gt;()
normalPriorityAttributes.&lt;span class="pl-smi"&gt;precedence&lt;/span&gt;.&lt;span class="pl-smi"&gt;priority&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; .&lt;span class="pl-smi"&gt;normal&lt;/span&gt;

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Display high priority entry&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;SwiftEntryKit.&lt;span class="pl-c1"&gt;display&lt;/span&gt;(&lt;span class="pl-c1"&gt;entry&lt;/span&gt;: view1, &lt;span class="pl-c1"&gt;using&lt;/span&gt;: highPriorityAttributes)

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Display normal priority entry (ignored!)&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;SwiftEntryKit.&lt;span class="pl-c1"&gt;display&lt;/span&gt;(&lt;span class="pl-c1"&gt;entry&lt;/span&gt;: view2, &lt;span class="pl-c1"&gt;using&lt;/span&gt;: normalPriorityAttributes)&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;em&gt;view2&lt;/em&gt; won't be displayed!&lt;/p&gt;
&lt;h4&gt;&lt;a id="user-content-display-duration" class="anchor" aria-hidden="true" href="#display-duration"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Display Duration&lt;/h4&gt;
&lt;p&gt;The display duration of the entry (Counted from the moment the entry has finished its entrance animation and until the exit animation begins).&lt;/p&gt;
&lt;p&gt;Display for 4 seconds:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;attributes.&lt;span class="pl-smi"&gt;displayDuration&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;4&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Display for an infinite duration&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;attributes.&lt;span class="pl-smi"&gt;displayDuration&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; .&lt;span class="pl-c1"&gt;infinity&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;The default value of &lt;code&gt;displayDuration&lt;/code&gt; is &lt;code&gt;2&lt;/code&gt;.&lt;/p&gt;
&lt;h4&gt;&lt;a id="user-content-position-constraints" class="anchor" aria-hidden="true" href="#position-constraints"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Position Constraints&lt;/h4&gt;
&lt;p&gt;Constraints that tie the entry tightly to the screen context, for example: Height, Width, Max Width, Max Height, Additional Vertical Offset &amp;amp; Safe Area related info.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Entries that support Auto Layout - Their height is inferred from the constraints that applied to them.&lt;/li&gt;
&lt;li&gt;Entries that don't support Auto Layout - Their exact size must be explicitly set using &lt;code&gt;positionConstraints&lt;/code&gt;'s &lt;code&gt;size&lt;/code&gt; property.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;For example:&lt;/p&gt;
&lt;p&gt;Ratio edge - signifies that the ratio of the width edge has a ratio of 0.9 of the screen's width.&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;let&lt;/span&gt; widthConstraint &lt;span class="pl-k"&gt;=&lt;/span&gt; EKAttributes.&lt;span class="pl-smi"&gt;PositionConstraints&lt;/span&gt;.&lt;span class="pl-smi"&gt;Edge&lt;/span&gt;.&lt;span class="pl-c1"&gt;ratio&lt;/span&gt;(&lt;span class="pl-c1"&gt;value&lt;/span&gt;: &lt;span class="pl-c1"&gt;0.9&lt;/span&gt;)&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Intrinsic edge - signifies that the wanted height value is the content height - Decided by the entries vertical constraints&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;let&lt;/span&gt; heightConstraint &lt;span class="pl-k"&gt;=&lt;/span&gt; EKAttributes.&lt;span class="pl-smi"&gt;PositionConstraints&lt;/span&gt;.&lt;span class="pl-smi"&gt;Edge&lt;/span&gt;.&lt;span class="pl-smi"&gt;intrinsic&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Create the entry size constraints likewise:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;attributes.&lt;span class="pl-smi"&gt;positionConstraints&lt;/span&gt;.&lt;span class="pl-c1"&gt;size&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; .&lt;span class="pl-k"&gt;init&lt;/span&gt;(&lt;span class="pl-c1"&gt;width&lt;/span&gt;: widthConstraint, &lt;span class="pl-c1"&gt;height&lt;/span&gt;: heightConstraint)&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;You can also set &lt;em&gt;attributes.positionConstraints.maxSize&lt;/em&gt; in order to make sure the entry does not exceeds predefined limitations. This is useful on &lt;a href="#how-to-deal-with-orientation-change"&gt;device orientation change&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Safe Area - can be used to override the safe area or to color it (More examples are in the example project)
That snippet implies that the safe area insets should be kept and not be a part of the entry.&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;attributes.&lt;span class="pl-smi"&gt;positionConstraints&lt;/span&gt;.&lt;span class="pl-smi"&gt;safeArea&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; .&lt;span class="pl-c1"&gt;empty&lt;/span&gt;(&lt;span class="pl-c1"&gt;fillSafeArea&lt;/span&gt;: &lt;span class="pl-c1"&gt;false&lt;/span&gt;)&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Vertical Offset - an additional offset that can be applied to the entry (Other than the safe area).&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;attributes.&lt;span class="pl-smi"&gt;positionConstraints&lt;/span&gt;.&lt;span class="pl-smi"&gt;verticalOffset&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;10&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Autorotation - whether the entry autorotates along with the orientation of the device. Defaults to &lt;code&gt;true&lt;/code&gt;.&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;attributes.&lt;span class="pl-smi"&gt;positionConstraints&lt;/span&gt;.&lt;span class="pl-smi"&gt;rotation&lt;/span&gt;.&lt;span class="pl-smi"&gt;isEnabled&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;false&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Keyboard Releation - used to bind an entry to the keyboard once the keyboard is displayed.&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;let&lt;/span&gt; offset &lt;span class="pl-k"&gt;=&lt;/span&gt; EKAttributes.&lt;span class="pl-smi"&gt;PositionConstraints&lt;/span&gt;.&lt;span class="pl-smi"&gt;KeyboardRelation&lt;/span&gt;.&lt;span class="pl-c1"&gt;Offset&lt;/span&gt;(&lt;span class="pl-c1"&gt;bottom&lt;/span&gt;: &lt;span class="pl-c1"&gt;10&lt;/span&gt;, &lt;span class="pl-c1"&gt;screenEdgeResistance&lt;/span&gt;: &lt;span class="pl-c1"&gt;20&lt;/span&gt;)
&lt;span class="pl-k"&gt;let&lt;/span&gt; keyboardRelation &lt;span class="pl-k"&gt;=&lt;/span&gt; EKAttributes.&lt;span class="pl-smi"&gt;PositionConstraints&lt;/span&gt;.&lt;span class="pl-smi"&gt;KeyboardRelation&lt;/span&gt;.&lt;span class="pl-c1"&gt;bind&lt;/span&gt;(&lt;span class="pl-c1"&gt;offset&lt;/span&gt;: offset)
attributes.&lt;span class="pl-smi"&gt;positionConstraints&lt;/span&gt;.&lt;span class="pl-smi"&gt;keyboardRelation&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; keyboardRelation&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;In the example above the entry's bottom is tuned to have a 10pts offset from the top of the keyboard (while it shows)
Because the entry's frame might exceed the screen bounds, the user might not see all the entry - we wouldn't want that. Therefore, an additional associated value has been added - &lt;code&gt;screenEdgeResistance&lt;/code&gt; with value of 20pts. That is, to make sure that the entry remains within the bounds of the screen, and always visible to the user.
The extreme situation might occur as the device orientation is landscape and the keyboard shows up (See example project form presets for more information).&lt;/p&gt;
&lt;h4&gt;&lt;a id="user-content-user-interaction" class="anchor" aria-hidden="true" href="#user-interaction"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;User Interaction&lt;/h4&gt;
&lt;p&gt;The entry and the screen can be interacted by the user. User interaction be can intercepted in various ways:&lt;/p&gt;
&lt;p&gt;An interaction (Any touch whatsoever) with the entry delays its exit by 3s:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;attributes.&lt;span class="pl-smi"&gt;entryInteraction&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; .&lt;span class="pl-c1"&gt;delayExit&lt;/span&gt;(&lt;span class="pl-c1"&gt;by&lt;/span&gt;: &lt;span class="pl-c1"&gt;3&lt;/span&gt;)&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;A tap on the entry / screen dismisses it immediately:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;attributes.&lt;span class="pl-smi"&gt;entryInteraction&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; .&lt;span class="pl-smi"&gt;dismiss&lt;/span&gt;
attributes.&lt;span class="pl-smi"&gt;screenInteraction&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; .&lt;span class="pl-smi"&gt;dismiss&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;A tap on the entry is swallowed (ignored):&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;attributes.&lt;span class="pl-smi"&gt;entryInteraction&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; .&lt;span class="pl-smi"&gt;absorbTouches&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;A tap on the screen is forwarded to the lower level window, in most cases the receiver will be the application window.
This is very useful when you want to display an unintrusive content like banners and push notification entries.&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;attributes.&lt;span class="pl-smi"&gt;screenInteraction&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; .&lt;span class="pl-smi"&gt;forward&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Pass additional actions that are invoked when the user taps the entry:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;let&lt;/span&gt; action &lt;span class="pl-k"&gt;=&lt;/span&gt; {
    &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Do something useful&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;}
attributes.&lt;span class="pl-smi"&gt;entryInteraction&lt;/span&gt;.&lt;span class="pl-smi"&gt;customTapActions&lt;/span&gt;.&lt;span class="pl-c1"&gt;append&lt;/span&gt;(action)&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;The default value of &lt;code&gt;screenInteraction&lt;/code&gt; is &lt;code&gt;.forward&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;The default value of &lt;code&gt;entryInteraction&lt;/code&gt; is &lt;code&gt;.dismiss&lt;/code&gt;.&lt;/p&gt;
&lt;h4&gt;&lt;a id="user-content-scroll-behavior" class="anchor" aria-hidden="true" href="#scroll-behavior"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Scroll Behavior&lt;/h4&gt;
&lt;p&gt;Describes the entry behavior when it's being scrolled, that is, dismissal by a swipe gesture and a rubber band effect much similar to a UIScrollView.&lt;/p&gt;
&lt;p&gt;Disable the pan and swipe gestures on the entry:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;attributes.&lt;span class="pl-smi"&gt;scroll&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; .&lt;span class="pl-smi"&gt;disabled&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Enable swipe and stretch and pullback with jolt effect:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;attributes.&lt;span class="pl-smi"&gt;scroll&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; .&lt;span class="pl-c1"&gt;enabled&lt;/span&gt;(&lt;span class="pl-c1"&gt;swipeable&lt;/span&gt;: &lt;span class="pl-c1"&gt;true&lt;/span&gt;, &lt;span class="pl-c1"&gt;pullbackAnimation&lt;/span&gt;: .&lt;span class="pl-smi"&gt;jolt&lt;/span&gt;)&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Enable swipe and stretch and pullback with an ease-out effect:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;attributes.&lt;span class="pl-smi"&gt;scroll&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; .&lt;span class="pl-c1"&gt;enabled&lt;/span&gt;(&lt;span class="pl-c1"&gt;swipeable&lt;/span&gt;: &lt;span class="pl-c1"&gt;true&lt;/span&gt;, &lt;span class="pl-c1"&gt;pullbackAnimation&lt;/span&gt;: .&lt;span class="pl-smi"&gt;easeOut&lt;/span&gt;)&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Enable swipe but disable stretch:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;attributes.&lt;span class="pl-smi"&gt;scroll&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; .&lt;span class="pl-c1"&gt;edgeCrossingDisabled&lt;/span&gt;(&lt;span class="pl-c1"&gt;swipeable&lt;/span&gt;: &lt;span class="pl-c1"&gt;true&lt;/span&gt;)&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;The default value of &lt;code&gt;scroll&lt;/code&gt; is &lt;code&gt;.enabled(swipeable: true, pullbackAnimation: .jolt)&lt;/code&gt;.&lt;/p&gt;
&lt;h4&gt;&lt;a id="user-content-haptic-feedback" class="anchor" aria-hidden="true" href="#haptic-feedback"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;a href="https://developer.apple.com/ios/human-interface-guidelines/user-interaction/feedback/" rel="nofollow"&gt;Haptic Feedback&lt;/a&gt;&lt;/h4&gt;
&lt;p&gt;The device can produce a haptic feedback, thus adding an additional sensory depth to each entry.&lt;/p&gt;
&lt;p&gt;The default value of &lt;code&gt;hapticFeedbackType&lt;/code&gt; is &lt;code&gt;.none&lt;/code&gt;.&lt;/p&gt;
&lt;h4&gt;&lt;a id="user-content-lifecycle-events" class="anchor" aria-hidden="true" href="#lifecycle-events"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Lifecycle Events&lt;/h4&gt;
&lt;p&gt;Events can be injected to the entry so that they are to be called during its lifecycle.&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;attributes.&lt;span class="pl-smi"&gt;lifecycleEvents&lt;/span&gt;.&lt;span class="pl-smi"&gt;willAppear&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; {
    &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Executed before the entry animates inside &lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;}

attributes.&lt;span class="pl-smi"&gt;lifecycleEvents&lt;/span&gt;.&lt;span class="pl-smi"&gt;didAppear&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; {
    &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Executed after the entry animates inside&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;}

attributes.&lt;span class="pl-smi"&gt;lifecycleEvents&lt;/span&gt;.&lt;span class="pl-smi"&gt;willDisappear&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; {
    &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Executed before the entry animates outside&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;}

attributes.&lt;span class="pl-smi"&gt;lifecycleEvents&lt;/span&gt;.&lt;span class="pl-smi"&gt;didDisappear&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; {
    &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Executed after the entry animates outside&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;}&lt;/pre&gt;&lt;/div&gt;
&lt;h4&gt;&lt;a id="user-content-display-mode" class="anchor" aria-hidden="true" href="#display-mode"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Display Mode&lt;/h4&gt;
&lt;p&gt;To allow you to fully support any user interface style, &lt;code&gt;SwiftEntryKit&lt;/code&gt; introduces two specialized types:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;EKColor&lt;/code&gt; describes a color under light and dark modes.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;EKAttributes.BackgroundStyle.BlurStyle&lt;/code&gt; describes a blur effect under light and dark modes.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;The following forces &lt;code&gt;SwiftEntryKit&lt;/code&gt; to display the entry on dark mode.&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;attributes.&lt;span class="pl-smi"&gt;displayMode&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; .&lt;span class="pl-smi"&gt;dark&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;The possible values are: &lt;code&gt;.light&lt;/code&gt;, &lt;code&gt;.dark&lt;/code&gt;, &lt;code&gt;.inferred&lt;/code&gt;.
The default value is &lt;code&gt;.inferred&lt;/code&gt;, which means that the entry will be displayed with the current user interface style.&lt;/p&gt;
&lt;h4&gt;&lt;a id="user-content-background-style" class="anchor" aria-hidden="true" href="#background-style"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Background Style&lt;/h4&gt;
&lt;p&gt;The entry and the screen can have various background styles, such as blur, color, gradient and even an image.&lt;/p&gt;
&lt;p&gt;The following example implies clear background for both the entry and the screen:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;attributes.&lt;span class="pl-smi"&gt;entryBackground&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; .&lt;span class="pl-smi"&gt;clear&lt;/span&gt;
attributes.&lt;span class="pl-smi"&gt;screenBackground&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; .&lt;span class="pl-smi"&gt;clear&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Colored entry background and dimmed screen background:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;attributes.&lt;span class="pl-smi"&gt;entryBackground&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; .&lt;span class="pl-c1"&gt;color&lt;/span&gt;(&lt;span class="pl-c1"&gt;color&lt;/span&gt;: .&lt;span class="pl-smi"&gt;standardContent&lt;/span&gt;)
attributes.&lt;span class="pl-smi"&gt;screenBackground&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; .&lt;span class="pl-c1"&gt;color&lt;/span&gt;(&lt;span class="pl-c1"&gt;color&lt;/span&gt;: &lt;span class="pl-c1"&gt;EKColor&lt;/span&gt;(&lt;span class="pl-c1"&gt;UIColor&lt;/span&gt;(&lt;span class="pl-c1"&gt;white&lt;/span&gt;: &lt;span class="pl-c1"&gt;0.5&lt;/span&gt;, &lt;span class="pl-c1"&gt;alpha&lt;/span&gt;: &lt;span class="pl-c1"&gt;0.5&lt;/span&gt;)))&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Gradient entry background (diagonal vector):&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;let&lt;/span&gt; colors&lt;span class="pl-k"&gt;:&lt;/span&gt; [EKColor] &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-k"&gt;...&lt;/span&gt;
attributes.&lt;span class="pl-smi"&gt;entryBackground&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; .&lt;span class="pl-c1"&gt;gradient&lt;/span&gt;(&lt;span class="pl-c1"&gt;gradient&lt;/span&gt;: .&lt;span class="pl-k"&gt;init&lt;/span&gt;(&lt;span class="pl-c1"&gt;colors&lt;/span&gt;: colors, &lt;span class="pl-c1"&gt;startPoint&lt;/span&gt;: .&lt;span class="pl-smi"&gt;zero&lt;/span&gt;, &lt;span class="pl-c1"&gt;endPoint&lt;/span&gt;: &lt;span class="pl-c1"&gt;CGPoint&lt;/span&gt;(&lt;span class="pl-c1"&gt;x&lt;/span&gt;: &lt;span class="pl-c1"&gt;1&lt;/span&gt;, &lt;span class="pl-c1"&gt;y&lt;/span&gt;: &lt;span class="pl-c1"&gt;1&lt;/span&gt;)))&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Visual Effect entry background:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;attributes.&lt;span class="pl-smi"&gt;entryBackground&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; .&lt;span class="pl-c1"&gt;visualEffect&lt;/span&gt;(&lt;span class="pl-c1"&gt;style&lt;/span&gt;: .&lt;span class="pl-smi"&gt;light&lt;/span&gt;)&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;The default value of &lt;code&gt;entryBackground&lt;/code&gt; and &lt;code&gt;screenBackground&lt;/code&gt; is &lt;code&gt;.clear&lt;/code&gt;.&lt;/p&gt;
&lt;h4&gt;&lt;a id="user-content-shadow" class="anchor" aria-hidden="true" href="#shadow"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Shadow&lt;/h4&gt;
&lt;p&gt;The shadow that surrounds the entry.&lt;/p&gt;
&lt;p&gt;Enable shadow around the entry:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;attributes.&lt;span class="pl-smi"&gt;shadow&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; .&lt;span class="pl-c1"&gt;active&lt;/span&gt;(&lt;span class="pl-c1"&gt;with&lt;/span&gt;: .&lt;span class="pl-k"&gt;init&lt;/span&gt;(&lt;span class="pl-c1"&gt;color&lt;/span&gt;: .&lt;span class="pl-smi"&gt;black&lt;/span&gt;, &lt;span class="pl-c1"&gt;opacity&lt;/span&gt;: &lt;span class="pl-c1"&gt;0.3&lt;/span&gt;, &lt;span class="pl-c1"&gt;radius&lt;/span&gt;: &lt;span class="pl-c1"&gt;10&lt;/span&gt;, &lt;span class="pl-c1"&gt;offset&lt;/span&gt;: .&lt;span class="pl-smi"&gt;zero&lt;/span&gt;))&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Disable shadow around the entry:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;attributes.&lt;span class="pl-smi"&gt;shadow&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; .&lt;span class="pl-c1"&gt;none&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;The default value of &lt;code&gt;shadow&lt;/code&gt; is &lt;code&gt;.none&lt;/code&gt;.&lt;/p&gt;
&lt;h4&gt;&lt;a id="user-content-round-corners" class="anchor" aria-hidden="true" href="#round-corners"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Round Corners&lt;/h4&gt;
&lt;p&gt;Round corners around the entry.&lt;/p&gt;
&lt;p&gt;Only top left and right corners with radius of 10:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;attributes.&lt;span class="pl-smi"&gt;roundCorners&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; .&lt;span class="pl-c1"&gt;top&lt;/span&gt;(&lt;span class="pl-c1"&gt;radius&lt;/span&gt;: &lt;span class="pl-c1"&gt;10&lt;/span&gt;)&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Only bottom left and right corners with radius of 10:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;attributes.&lt;span class="pl-smi"&gt;roundCorners&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; .&lt;span class="pl-c1"&gt;bottom&lt;/span&gt;(&lt;span class="pl-c1"&gt;radius&lt;/span&gt;: &lt;span class="pl-c1"&gt;10&lt;/span&gt;)&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;All corners with radius of 10:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;attributes.&lt;span class="pl-smi"&gt;roundCorners&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; .&lt;span class="pl-c1"&gt;all&lt;/span&gt;(&lt;span class="pl-c1"&gt;radius&lt;/span&gt;: &lt;span class="pl-c1"&gt;10&lt;/span&gt;)&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;No round corners:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;attributes.&lt;span class="pl-smi"&gt;roundCorners&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; .&lt;span class="pl-c1"&gt;none&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;The default value of &lt;code&gt;roundCorners&lt;/code&gt; is &lt;code&gt;.none&lt;/code&gt;.&lt;/p&gt;
&lt;h4&gt;&lt;a id="user-content-border" class="anchor" aria-hidden="true" href="#border"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Border&lt;/h4&gt;
&lt;p&gt;The border around the entry.&lt;/p&gt;
&lt;p&gt;Add a black border with thickness of 0.5pts:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;attributes.&lt;span class="pl-smi"&gt;border&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; .&lt;span class="pl-c1"&gt;value&lt;/span&gt;(&lt;span class="pl-c1"&gt;color&lt;/span&gt;: .&lt;span class="pl-smi"&gt;black&lt;/span&gt;, &lt;span class="pl-c1"&gt;width&lt;/span&gt;: &lt;span class="pl-c1"&gt;0.5&lt;/span&gt;)&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;No border:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;attributes.&lt;span class="pl-smi"&gt;border&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; .&lt;span class="pl-c1"&gt;none&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;The default value of &lt;code&gt;border&lt;/code&gt; is &lt;code&gt;.none&lt;/code&gt;.&lt;/p&gt;
&lt;h4&gt;&lt;a id="user-content-animations" class="anchor" aria-hidden="true" href="#animations"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Animations&lt;/h4&gt;
&lt;p&gt;Describes how the entry animates into and out of the screen.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Each animation descriptor can have up to 3 types of animations at the same time. Those can be combined to a single complex one!&lt;/li&gt;
&lt;li&gt;Translation animation anchor can be explicitly set but it receives a default value according to position of the entry.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Example for &lt;em&gt;translation&lt;/em&gt; from top with spring, &lt;em&gt;scale&lt;/em&gt; in and even &lt;em&gt;fade in&lt;/em&gt; as a single entrance animation:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;attributes.&lt;span class="pl-smi"&gt;entranceAnimation&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; .&lt;span class="pl-k"&gt;init&lt;/span&gt;(
                 &lt;span class="pl-c1"&gt;translate&lt;/span&gt;: .&lt;span class="pl-k"&gt;init&lt;/span&gt;(&lt;span class="pl-c1"&gt;duration&lt;/span&gt;: &lt;span class="pl-c1"&gt;0.7&lt;/span&gt;, &lt;span class="pl-c1"&gt;anchorPosition&lt;/span&gt;: .&lt;span class="pl-smi"&gt;top&lt;/span&gt;, &lt;span class="pl-c1"&gt;spring&lt;/span&gt;: .&lt;span class="pl-k"&gt;init&lt;/span&gt;(&lt;span class="pl-c1"&gt;damping&lt;/span&gt;: &lt;span class="pl-c1"&gt;1&lt;/span&gt;, &lt;span class="pl-c1"&gt;initialVelocity&lt;/span&gt;: &lt;span class="pl-c1"&gt;0&lt;/span&gt;)), 
                 &lt;span class="pl-c1"&gt;scale&lt;/span&gt;: .&lt;span class="pl-k"&gt;init&lt;/span&gt;(&lt;span class="pl-c1"&gt;from&lt;/span&gt;: &lt;span class="pl-c1"&gt;0.6&lt;/span&gt;, &lt;span class="pl-c1"&gt;to&lt;/span&gt;: &lt;span class="pl-c1"&gt;1&lt;/span&gt;, &lt;span class="pl-c1"&gt;duration&lt;/span&gt;: &lt;span class="pl-c1"&gt;0.7&lt;/span&gt;), 
                 &lt;span class="pl-c1"&gt;fade&lt;/span&gt;: .&lt;span class="pl-k"&gt;init&lt;/span&gt;(&lt;span class="pl-c1"&gt;from&lt;/span&gt;: &lt;span class="pl-c1"&gt;0.8&lt;/span&gt;, &lt;span class="pl-c1"&gt;to&lt;/span&gt;: &lt;span class="pl-c1"&gt;1&lt;/span&gt;, &lt;span class="pl-c1"&gt;duration&lt;/span&gt;: &lt;span class="pl-c1"&gt;0.3&lt;/span&gt;))&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;The default value of &lt;code&gt;entranceAnimation&lt;/code&gt; and &lt;code&gt;exitAnimation&lt;/code&gt; is &lt;code&gt;.translation&lt;/code&gt; - The entry translates in or out, respectively, with duration of 0.3 seconds.&lt;/p&gt;
&lt;h4&gt;&lt;a id="user-content-pop-behavior" class="anchor" aria-hidden="true" href="#pop-behavior"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Pop Behavior&lt;/h4&gt;
&lt;p&gt;Describes the entry behavior when it's being popped (dismissed by an entry with equal / higher display-priority.&lt;/p&gt;
&lt;p&gt;The entry is being popped animatedly:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;attributes.&lt;span class="pl-smi"&gt;popBehavior&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; .&lt;span class="pl-c1"&gt;animated&lt;/span&gt;(&lt;span class="pl-c1"&gt;animation&lt;/span&gt;: .&lt;span class="pl-k"&gt;init&lt;/span&gt;(&lt;span class="pl-c1"&gt;translate&lt;/span&gt;: .&lt;span class="pl-k"&gt;init&lt;/span&gt;(&lt;span class="pl-c1"&gt;duration&lt;/span&gt;: &lt;span class="pl-c1"&gt;0.2&lt;/span&gt;)))&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;The entry is being overridden (Disappears promptly):&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;attributes.&lt;span class="pl-smi"&gt;popBehavior&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; .&lt;span class="pl-smi"&gt;overridden&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;The default value of &lt;code&gt;popBehavior&lt;/code&gt; is &lt;code&gt;.animated(animation: .translation)&lt;/code&gt; - It translates out with duration of 0.3 seconds.&lt;/p&gt;
&lt;h4&gt;&lt;a id="user-content-status-bar" class="anchor" aria-hidden="true" href="#status-bar"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Status Bar&lt;/h4&gt;
&lt;p&gt;The status bar appearance can be modified during the display of the entry.
SwiftEntryKit supports both &lt;em&gt;View controller-based status bar appearance&lt;/em&gt; and manual setting.&lt;/p&gt;
&lt;p&gt;Setting the status bar style is fairly simple -&lt;/p&gt;
&lt;p&gt;Status bar becomes visible and gets a light style:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;attributes.&lt;span class="pl-smi"&gt;statusBar&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; .&lt;span class="pl-smi"&gt;light&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;The status bar becomes hidden:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;attributes.&lt;span class="pl-smi"&gt;statusBar&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; .&lt;span class="pl-smi"&gt;hidden&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;The status bar appearance is inferred from the previous context (won't be changed):&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;attributes.&lt;span class="pl-smi"&gt;statusBar&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; .&lt;span class="pl-smi"&gt;inferred&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;In case there is an already presenting entry with lower/equal display priority, the status bar will change its style.
When the entry is removed, the status bar gets its initial style back.&lt;/p&gt;
&lt;p&gt;The default value of &lt;code&gt;statusBar&lt;/code&gt; is &lt;code&gt;.inferred&lt;/code&gt;.&lt;/p&gt;
&lt;h4&gt;&lt;a id="user-content-ekattributes-interface-is-as-follows" class="anchor" aria-hidden="true" href="#ekattributes-interface-is-as-follows"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;EKAttributes' interface is as follows:&lt;/h4&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;public&lt;/span&gt; &lt;span class="pl-k"&gt;struct&lt;/span&gt; &lt;span class="pl-en"&gt;EKAttributes&lt;/span&gt;

    &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Identification&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;    public var name: &lt;span class="pl-e"&gt;&lt;span class="pl-c1"&gt;String&lt;/span&gt;&lt;/span&gt;?

    &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Display&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;    public var windowLevel: &lt;span class="pl-e"&gt;WindowLevel&lt;/span&gt;
    public var position: &lt;span class="pl-e"&gt;Position&lt;/span&gt;
    public var precedence: &lt;span class="pl-e"&gt;Precedence&lt;/span&gt;
    public var displayDuration: &lt;span class="pl-e"&gt;DisplayDuration&lt;/span&gt;
    public var positionConstraints: &lt;span class="pl-e"&gt;PositionConstraints&lt;/span&gt;

    &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; User Interaction&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;    public var screenInteraction: &lt;span class="pl-e"&gt;UserInteraction&lt;/span&gt;
    public var entryInteraction: &lt;span class="pl-e"&gt;UserInteraction&lt;/span&gt;
    public var scroll: &lt;span class="pl-e"&gt;Scroll&lt;/span&gt;
    public var hapticFeedbackType: &lt;span class="pl-e"&gt;NotificationHapticFeedback&lt;/span&gt;
    public var lifecycleEvents: &lt;span class="pl-e"&gt;LifecycleEvents&lt;/span&gt;

    &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Theme &amp;amp; Style&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;    public var displayMode = DisplayMode.inferred
    public var entryBackground: &lt;span class="pl-e"&gt;BackgroundStyle&lt;/span&gt;
    public var screenBackground: &lt;span class="pl-e"&gt;BackgroundStyle&lt;/span&gt;
    public var shadow: &lt;span class="pl-e"&gt;Shadow&lt;/span&gt;
    public var roundCorners: &lt;span class="pl-e"&gt;RoundCorners&lt;/span&gt;
    public var border: &lt;span class="pl-e"&gt;Border&lt;/span&gt;
    public var statusBar: &lt;span class="pl-e"&gt;StatusBar&lt;/span&gt;
    
    &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Animations&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;    public var entranceAnimation: &lt;span class="pl-e"&gt;Animation&lt;/span&gt;
    public var exitAnimation: &lt;span class="pl-e"&gt;Animation&lt;/span&gt;
    public var popBehavior: &lt;span class="pl-e"&gt;PopBehavior&lt;/span&gt;
}&lt;/pre&gt;&lt;/div&gt;
&lt;h3&gt;&lt;a id="user-content-presets-usage-example" class="anchor" aria-hidden="true" href="#presets-usage-example"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Presets Usage Example:&lt;/h3&gt;
&lt;p&gt;You can use one of the presets that come with SwiftEntryKit, doing these 4 simple steps:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Create your &lt;em&gt;EKAttributes&lt;/em&gt; struct and set your preferable properties.&lt;/li&gt;
&lt;li&gt;Create &lt;em&gt;EKNotificationMessage&lt;/em&gt; struct (The Content) and set the content.&lt;/li&gt;
&lt;li&gt;Create &lt;em&gt;EKNotificationMessageView&lt;/em&gt; (The View) and inject &lt;em&gt;EKNotificationMessage&lt;/em&gt; struct to it.&lt;/li&gt;
&lt;li&gt;Display the entry using &lt;em&gt;SwiftEntryKit&lt;/em&gt; class method.&lt;/li&gt;
&lt;/ol&gt;
&lt;h4&gt;&lt;a id="user-content-eknotificationmessageview-preset-example" class="anchor" aria-hidden="true" href="#eknotificationmessageview-preset-example"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;EKNotificationMessageView preset example:&lt;/h4&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Generate top floating entry and set some properties&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;&lt;span class="pl-k"&gt;var&lt;/span&gt; attributes &lt;span class="pl-k"&gt;=&lt;/span&gt; EKAttributes.&lt;span class="pl-smi"&gt;topFloat&lt;/span&gt;
attributes.&lt;span class="pl-smi"&gt;entryBackground&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; .&lt;span class="pl-c1"&gt;gradient&lt;/span&gt;(&lt;span class="pl-c1"&gt;gradient&lt;/span&gt;: .&lt;span class="pl-k"&gt;init&lt;/span&gt;(&lt;span class="pl-c1"&gt;colors&lt;/span&gt;: [&lt;span class="pl-c1"&gt;EKColor&lt;/span&gt;(.&lt;span class="pl-smi"&gt;red&lt;/span&gt;), &lt;span class="pl-c1"&gt;EKColor&lt;/span&gt;(.&lt;span class="pl-smi"&gt;green&lt;/span&gt;)], &lt;span class="pl-c1"&gt;startPoint&lt;/span&gt;: .&lt;span class="pl-smi"&gt;zero&lt;/span&gt;, &lt;span class="pl-c1"&gt;endPoint&lt;/span&gt;: &lt;span class="pl-c1"&gt;CGPoint&lt;/span&gt;(&lt;span class="pl-c1"&gt;x&lt;/span&gt;: &lt;span class="pl-c1"&gt;1&lt;/span&gt;, &lt;span class="pl-c1"&gt;y&lt;/span&gt;: &lt;span class="pl-c1"&gt;1&lt;/span&gt;)))
attributes.&lt;span class="pl-smi"&gt;popBehavior&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; .&lt;span class="pl-c1"&gt;animated&lt;/span&gt;(&lt;span class="pl-c1"&gt;animation&lt;/span&gt;: .&lt;span class="pl-k"&gt;init&lt;/span&gt;(&lt;span class="pl-c1"&gt;translate&lt;/span&gt;: .&lt;span class="pl-k"&gt;init&lt;/span&gt;(&lt;span class="pl-c1"&gt;duration&lt;/span&gt;: &lt;span class="pl-c1"&gt;0.3&lt;/span&gt;), &lt;span class="pl-c1"&gt;scale&lt;/span&gt;: .&lt;span class="pl-k"&gt;init&lt;/span&gt;(&lt;span class="pl-c1"&gt;from&lt;/span&gt;: &lt;span class="pl-c1"&gt;1&lt;/span&gt;, &lt;span class="pl-c1"&gt;to&lt;/span&gt;: &lt;span class="pl-c1"&gt;0.7&lt;/span&gt;, &lt;span class="pl-c1"&gt;duration&lt;/span&gt;: &lt;span class="pl-c1"&gt;0.7&lt;/span&gt;)))
attributes.&lt;span class="pl-smi"&gt;shadow&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; .&lt;span class="pl-c1"&gt;active&lt;/span&gt;(&lt;span class="pl-c1"&gt;with&lt;/span&gt;: .&lt;span class="pl-k"&gt;init&lt;/span&gt;(&lt;span class="pl-c1"&gt;color&lt;/span&gt;: .&lt;span class="pl-smi"&gt;black&lt;/span&gt;, &lt;span class="pl-c1"&gt;opacity&lt;/span&gt;: &lt;span class="pl-c1"&gt;0.5&lt;/span&gt;, &lt;span class="pl-c1"&gt;radius&lt;/span&gt;: &lt;span class="pl-c1"&gt;10&lt;/span&gt;, &lt;span class="pl-c1"&gt;offset&lt;/span&gt;: .&lt;span class="pl-smi"&gt;zero&lt;/span&gt;))
attributes.&lt;span class="pl-smi"&gt;statusBar&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; .&lt;span class="pl-smi"&gt;dark&lt;/span&gt;
attributes.&lt;span class="pl-smi"&gt;scroll&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; .&lt;span class="pl-c1"&gt;enabled&lt;/span&gt;(&lt;span class="pl-c1"&gt;swipeable&lt;/span&gt;: &lt;span class="pl-c1"&gt;true&lt;/span&gt;, &lt;span class="pl-c1"&gt;pullbackAnimation&lt;/span&gt;: .&lt;span class="pl-smi"&gt;jolt&lt;/span&gt;)
attributes.&lt;span class="pl-smi"&gt;positionConstraints&lt;/span&gt;.&lt;span class="pl-smi"&gt;maxSize&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; .&lt;span class="pl-k"&gt;init&lt;/span&gt;(&lt;span class="pl-c1"&gt;width&lt;/span&gt;: .&lt;span class="pl-c1"&gt;constant&lt;/span&gt;(&lt;span class="pl-c1"&gt;value&lt;/span&gt;: UIScreen.&lt;span class="pl-smi"&gt;main&lt;/span&gt;.&lt;span class="pl-smi"&gt;minEdge&lt;/span&gt;), &lt;span class="pl-c1"&gt;height&lt;/span&gt;: .&lt;span class="pl-smi"&gt;intrinsic&lt;/span&gt;)

&lt;span class="pl-k"&gt;let&lt;/span&gt; title &lt;span class="pl-k"&gt;=&lt;/span&gt; EKProperty.&lt;span class="pl-c1"&gt;LabelContent&lt;/span&gt;(&lt;span class="pl-c1"&gt;text&lt;/span&gt;: titleText, &lt;span class="pl-c1"&gt;style&lt;/span&gt;: .&lt;span class="pl-k"&gt;init&lt;/span&gt;(&lt;span class="pl-c1"&gt;font&lt;/span&gt;: titleFont, &lt;span class="pl-c1"&gt;color&lt;/span&gt;: textColor))
&lt;span class="pl-k"&gt;let&lt;/span&gt; description &lt;span class="pl-k"&gt;=&lt;/span&gt; EKProperty.&lt;span class="pl-c1"&gt;LabelContent&lt;/span&gt;(&lt;span class="pl-c1"&gt;text&lt;/span&gt;: descText, &lt;span class="pl-c1"&gt;style&lt;/span&gt;: .&lt;span class="pl-k"&gt;init&lt;/span&gt;(&lt;span class="pl-c1"&gt;font&lt;/span&gt;: descFont, &lt;span class="pl-c1"&gt;color&lt;/span&gt;: textColor))
&lt;span class="pl-k"&gt;let&lt;/span&gt; image &lt;span class="pl-k"&gt;=&lt;/span&gt; EKProperty.&lt;span class="pl-c1"&gt;ImageContent&lt;/span&gt;(&lt;span class="pl-c1"&gt;image&lt;/span&gt;: &lt;span class="pl-c1"&gt;UIImage&lt;/span&gt;(&lt;span class="pl-c1"&gt;named&lt;/span&gt;: imageName)&lt;span class="pl-k"&gt;!&lt;/span&gt;, &lt;span class="pl-c1"&gt;size&lt;/span&gt;: &lt;span class="pl-c1"&gt;CGSize&lt;/span&gt;(&lt;span class="pl-c1"&gt;width&lt;/span&gt;: &lt;span class="pl-c1"&gt;35&lt;/span&gt;, &lt;span class="pl-c1"&gt;height&lt;/span&gt;: &lt;span class="pl-c1"&gt;35&lt;/span&gt;))
&lt;span class="pl-k"&gt;let&lt;/span&gt; simpleMessage &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;EKSimpleMessage&lt;/span&gt;(&lt;span class="pl-c1"&gt;image&lt;/span&gt;: image, &lt;span class="pl-c1"&gt;title&lt;/span&gt;: title, &lt;span class="pl-c1"&gt;description&lt;/span&gt;: description)
&lt;span class="pl-k"&gt;let&lt;/span&gt; notificationMessage &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;EKNotificationMessage&lt;/span&gt;(&lt;span class="pl-c1"&gt;simpleMessage&lt;/span&gt;: simpleMessage)

&lt;span class="pl-k"&gt;let&lt;/span&gt; contentView &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;EKNotificationMessageView&lt;/span&gt;(&lt;span class="pl-c1"&gt;with&lt;/span&gt;: notificationMessage)
SwiftEntryKit.&lt;span class="pl-c1"&gt;display&lt;/span&gt;(&lt;span class="pl-c1"&gt;entry&lt;/span&gt;: contentView, &lt;span class="pl-c1"&gt;using&lt;/span&gt;: attributes)&lt;/pre&gt;&lt;/div&gt;
&lt;h3&gt;&lt;a id="user-content-custom-view-usage-example" class="anchor" aria-hidden="true" href="#custom-view-usage-example"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Custom View Usage Example:&lt;/h3&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Create a basic toast that appears at the top&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;&lt;span class="pl-k"&gt;var&lt;/span&gt; attributes &lt;span class="pl-k"&gt;=&lt;/span&gt; EKAttributes.&lt;span class="pl-smi"&gt;topToast&lt;/span&gt;

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Set its background to white&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;attributes.&lt;span class="pl-smi"&gt;entryBackground&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; .&lt;span class="pl-c1"&gt;color&lt;/span&gt;(&lt;span class="pl-c1"&gt;color&lt;/span&gt;: .&lt;span class="pl-smi"&gt;white&lt;/span&gt;)

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Animate in and out using default translation&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;attributes.&lt;span class="pl-smi"&gt;entranceAnimation&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; .&lt;span class="pl-smi"&gt;translation&lt;/span&gt;
attributes.&lt;span class="pl-smi"&gt;exitAnimation&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; .&lt;span class="pl-smi"&gt;translation&lt;/span&gt;

&lt;span class="pl-k"&gt;let&lt;/span&gt; customView &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;UIView&lt;/span&gt;()
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;/*&lt;/span&gt;&lt;/span&gt;
&lt;span class="pl-c"&gt;... Customize the view as you like ...&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;*/&lt;/span&gt;&lt;/span&gt;

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Display the view with the configuration&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;SwiftEntryKit.&lt;span class="pl-c1"&gt;display&lt;/span&gt;(&lt;span class="pl-c1"&gt;entry&lt;/span&gt;: customView, &lt;span class="pl-c1"&gt;using&lt;/span&gt;: attributes)&lt;/pre&gt;&lt;/div&gt;
&lt;h3&gt;&lt;a id="user-content-displaying-a-view-controller" class="anchor" aria-hidden="true" href="#displaying-a-view-controller"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Displaying a View Controller&lt;/h3&gt;
&lt;p&gt;As from version 0.4.0, view controllers are supported as well.&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;SwiftEntryKit.&lt;span class="pl-c1"&gt;display&lt;/span&gt;(&lt;span class="pl-c1"&gt;entry&lt;/span&gt;: customViewController, &lt;span class="pl-c1"&gt;using&lt;/span&gt;: attributes)&lt;/pre&gt;&lt;/div&gt;
&lt;h3&gt;&lt;a id="user-content-alternative-rollback-window" class="anchor" aria-hidden="true" href="#alternative-rollback-window"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Alternative Rollback Window&lt;/h3&gt;
&lt;p&gt;By default, the window held by the application delegate becomes the key again right after SwiftEntryKit has finished displaying the entry.
This behavior can be changed using &lt;code&gt;rollbackWindow&lt;/code&gt; parameter.&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;SwiftEntryKit.&lt;span class="pl-c1"&gt;display&lt;/span&gt;(&lt;span class="pl-c1"&gt;entry&lt;/span&gt;: view, &lt;span class="pl-c1"&gt;using&lt;/span&gt;: attributes, &lt;span class="pl-c1"&gt;rollbackWindow&lt;/span&gt;: .&lt;span class="pl-c1"&gt;custom&lt;/span&gt;(&lt;span class="pl-c1"&gt;window&lt;/span&gt;: alternativeWindow))&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;After the entry has been dismissed, the given window &lt;code&gt;alternativeWindow&lt;/code&gt; would become the key instead of the window that is held by the application delegate.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-dismissing-an-entry" class="anchor" aria-hidden="true" href="#dismissing-an-entry"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Dismissing an Entry&lt;/h3&gt;
&lt;p&gt;You can dismiss the currently displayed entry by simply invoke &lt;em&gt;dismiss&lt;/em&gt; in the SwiftEntryKit class, likewise:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;SwiftEntryKit.&lt;span class="pl-c1"&gt;dismiss&lt;/span&gt;()&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Or:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;SwiftEntryKit.&lt;span class="pl-c1"&gt;dismiss&lt;/span&gt;(.&lt;span class="pl-smi"&gt;displayed&lt;/span&gt;)&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;This dismisses the entry animatedly using its &lt;em&gt;exitAnimation&lt;/em&gt; attribute and on completion, the window would be removed as well.&lt;/p&gt;
&lt;p&gt;You can dismiss the currently displayed entry and flush the queue as well, likewise:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;SwiftEntryKit.&lt;span class="pl-c1"&gt;dismiss&lt;/span&gt;(.&lt;span class="pl-smi"&gt;all&lt;/span&gt;)&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Only flush the queue, leaving any currently displayed entry to its natural lifecycle:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;SwiftEntryKit.&lt;span class="pl-c1"&gt;dismiss&lt;/span&gt;(.&lt;span class="pl-smi"&gt;queue&lt;/span&gt;)&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Dismiss a specific entry by name - either currently displayed or enqueued. All the entries with the given name are dismissed.&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;SwiftEntryKit.&lt;span class="pl-c1"&gt;dismiss&lt;/span&gt;(.&lt;span class="pl-c1"&gt;specific&lt;/span&gt;(&lt;span class="pl-c1"&gt;entryName&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;Entry Name&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;))&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Dismiss any entry with a lower or equal display priority of &lt;code&gt;.normal&lt;/code&gt;.&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;SwiftEntryKit.&lt;span class="pl-c1"&gt;dismiss&lt;/span&gt;(.&lt;span class="pl-c1"&gt;prioritizedLowerOrEqualTo&lt;/span&gt;(&lt;span class="pl-c1"&gt;priority&lt;/span&gt;: .&lt;span class="pl-smi"&gt;normal&lt;/span&gt;))&lt;/pre&gt;&lt;/div&gt;
&lt;h4&gt;&lt;a id="user-content-using-a-completion-handler" class="anchor" aria-hidden="true" href="#using-a-completion-handler"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Using a completion handler&lt;/h4&gt;
&lt;p&gt;Inject a trailing closure to be executed after the entry dismissal.&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;SwiftEntryKit.&lt;span class="pl-smi"&gt;dismiss&lt;/span&gt; {
    &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Executed right after the entry has been dismissed&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;}&lt;/pre&gt;&lt;/div&gt;
&lt;h3&gt;&lt;a id="user-content-is-currently-displaying" class="anchor" aria-hidden="true" href="#is-currently-displaying"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Is Currently Displaying&lt;/h3&gt;
&lt;p&gt;Inquire whether an entry is currently displayed:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;if&lt;/span&gt; SwiftEntryKit.&lt;span class="pl-smi"&gt;isCurrentlyDisplaying&lt;/span&gt; {
    &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;/*&lt;/span&gt; Do your things &lt;span class="pl-c"&gt;*/&lt;/span&gt;&lt;/span&gt;
}&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Inquire whether a &lt;strong&gt;specific&lt;/strong&gt; entry is currently displayed using the &lt;code&gt;name&lt;/code&gt; property inside &lt;code&gt;EKAttributes&lt;/code&gt;.&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;if&lt;/span&gt; SwiftEntryKit.&lt;span class="pl-c1"&gt;isCurrentlyDisplaying&lt;/span&gt;(&lt;span class="pl-c1"&gt;entryNamed&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;Top Note&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;) {
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;/*&lt;/span&gt; Do your things &lt;span class="pl-c"&gt;*/&lt;/span&gt;&lt;/span&gt;
}&lt;/pre&gt;&lt;/div&gt;
&lt;h3&gt;&lt;a id="user-content-queue-contains" class="anchor" aria-hidden="true" href="#queue-contains"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Queue Contains&lt;/h3&gt;
&lt;p&gt;Inquire whether the queue of entries is not empty:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;if&lt;/span&gt; SwiftEntryKit.&lt;span class="pl-smi"&gt;isQueueEmpty&lt;/span&gt; {
    &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;/*&lt;/span&gt; Do your things &lt;span class="pl-c"&gt;*/&lt;/span&gt;&lt;/span&gt;
}&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Inquire whether the queue of entries contains an entry with name:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;if&lt;/span&gt; SwiftEntryKit.&lt;span class="pl-c1"&gt;queueContains&lt;/span&gt;(&lt;span class="pl-c1"&gt;entryNamed&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;Custom-Name&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;) {
    &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;/*&lt;/span&gt; Do your things &lt;span class="pl-c"&gt;*/&lt;/span&gt;&lt;/span&gt;
}&lt;/pre&gt;&lt;/div&gt;
&lt;h3&gt;&lt;a id="user-content-swiping-and-rubber-banding" class="anchor" aria-hidden="true" href="#swiping-and-rubber-banding"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Swiping and Rubber Banding&lt;/h3&gt;
&lt;p&gt;Entries can be panned vertically (This ability can be enabled using the &lt;em&gt;scroll&lt;/em&gt; attributes).
Thefore it's only natural that an entry can be dismissed using a swipe-like gesture.&lt;/p&gt;
&lt;p&gt;Enable swipe gesture. When the swipe gesture fails (doesn't pass the velocity threshold) ease it back.&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;attributes.&lt;span class="pl-smi"&gt;scroll&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; .&lt;span class="pl-c1"&gt;enabled&lt;/span&gt;(&lt;span class="pl-c1"&gt;swipeable&lt;/span&gt;: &lt;span class="pl-c1"&gt;true&lt;/span&gt;, &lt;span class="pl-c1"&gt;pullbackAnimation&lt;/span&gt;: .&lt;span class="pl-smi"&gt;easeOut&lt;/span&gt;)&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Enable swipe gesture. When the swipe gesture fails throw it back out with a jolt.&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;attributes.&lt;span class="pl-smi"&gt;scroll&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; .&lt;span class="pl-c1"&gt;enabled&lt;/span&gt;(&lt;span class="pl-c1"&gt;swipeable&lt;/span&gt;: &lt;span class="pl-c1"&gt;true&lt;/span&gt;, &lt;span class="pl-c1"&gt;pullbackAnimation&lt;/span&gt;: .&lt;span class="pl-smi"&gt;jolt&lt;/span&gt;)&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;The &lt;em&gt;PullbackAnimation&lt;/em&gt; values (duration, damping &amp;amp; initialSpringVelocity) can be customized as well.&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Swipe&lt;/th&gt;
&lt;th&gt;Jolt&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a target="_blank" rel="noopener noreferrer" href="https://github.com/huri000/assets/blob/master/swift-entrykit/swipe.gif"&gt;&lt;img src="https://github.com/huri000/assets/raw/master/swift-entrykit/swipe.gif" alt="swipe_example" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;a target="_blank" rel="noopener noreferrer" href="https://github.com/huri000/assets/blob/master/swift-entrykit/rubber_band.gif"&gt;&lt;img src="https://github.com/huri000/assets/raw/master/swift-entrykit/rubber_band.gif" alt="band_example" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h3&gt;&lt;a id="user-content-dealing-with-safe-area" class="anchor" aria-hidden="true" href="#dealing-with-safe-area"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Dealing with safe area:&lt;/h3&gt;
&lt;p&gt;&lt;em&gt;EKAttributes.PositionConstraints.SafeArea&lt;/em&gt; may be used to override the safe area with the entry's content, or to fill the safe area with a background color (like &lt;a href="https://github.com/huri000/assets/blob/master/swift-entrykit/toasts.gif"&gt;Toasts&lt;/a&gt; do), or even leave the safe area empty (Like &lt;a href="https://github.com/huri000/assets/blob/master/swift-entrykit/floats.gif"&gt;Floats&lt;/a&gt; do).&lt;/p&gt;
&lt;p&gt;SwiftEntryKit supports iOS 11.x.y and is backward compatible to iOS 9.x.y, so the status bar area is treated as same as the safe area in earlier iOS versions.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-dealing-with-orientation-change" class="anchor" aria-hidden="true" href="#dealing-with-orientation-change"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Dealing with orientation change:&lt;/h3&gt;
&lt;p&gt;SwiftEntryKit identifies orientation changes and adjust the entry's layout to those changes.
Therefore, if you wish to limit the entries's width, you are able to do so by giving it a maximum value, likewise:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;var&lt;/span&gt; attributes &lt;span class="pl-k"&gt;=&lt;/span&gt; EKAttributes.&lt;span class="pl-smi"&gt;topFloat&lt;/span&gt;

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Give the entry the width of the screen minus 20pts from each side, the height is decided by the content's contraint's&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;attributes.&lt;span class="pl-smi"&gt;positionConstraints&lt;/span&gt;.&lt;span class="pl-c1"&gt;size&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; .&lt;span class="pl-k"&gt;init&lt;/span&gt;(&lt;span class="pl-c1"&gt;width&lt;/span&gt;: .&lt;span class="pl-c1"&gt;offset&lt;/span&gt;(&lt;span class="pl-c1"&gt;value&lt;/span&gt;: &lt;span class="pl-c1"&gt;20&lt;/span&gt;), &lt;span class="pl-c1"&gt;height&lt;/span&gt;: .&lt;span class="pl-smi"&gt;intrinsic&lt;/span&gt;)

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Give the entry maximum width of the screen minimum edge - thus the entry won't grow much when the device orientation changes from portrait to landscape mode.&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;&lt;span class="pl-k"&gt;let&lt;/span&gt; edgeWidth &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;min&lt;/span&gt;(UIScreen.&lt;span class="pl-smi"&gt;main&lt;/span&gt;.&lt;span class="pl-smi"&gt;bounds&lt;/span&gt;.&lt;span class="pl-smi"&gt;width&lt;/span&gt;, UIScreen.&lt;span class="pl-smi"&gt;main&lt;/span&gt;.&lt;span class="pl-smi"&gt;bounds&lt;/span&gt;.&lt;span class="pl-smi"&gt;height&lt;/span&gt;)
attributes.&lt;span class="pl-smi"&gt;positionConstraints&lt;/span&gt;.&lt;span class="pl-smi"&gt;maxSize&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; .&lt;span class="pl-k"&gt;init&lt;/span&gt;(&lt;span class="pl-c1"&gt;width&lt;/span&gt;: .&lt;span class="pl-c1"&gt;constant&lt;/span&gt;(&lt;span class="pl-c1"&gt;value&lt;/span&gt;: edgeWidth), &lt;span class="pl-c1"&gt;height&lt;/span&gt;: .&lt;span class="pl-smi"&gt;intrinsic&lt;/span&gt;)

&lt;span class="pl-k"&gt;let&lt;/span&gt; customView &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;UIView&lt;/span&gt;()
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;/*&lt;/span&gt;&lt;/span&gt;
&lt;span class="pl-c"&gt;... Customize the view as you like ...&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;*/&lt;/span&gt;&lt;/span&gt;

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Use class method of SwiftEntryKit to display the view using the desired attributes&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;SwiftEntryKit.&lt;span class="pl-c1"&gt;display&lt;/span&gt;(&lt;span class="pl-c1"&gt;entry&lt;/span&gt;: customView, &lt;span class="pl-c1"&gt;using&lt;/span&gt;: attributes)&lt;/pre&gt;&lt;/div&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Orientation Change Demonstration&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a target="_blank" rel="noopener noreferrer" href="https://github.com/huri000/assets/blob/master/swift-entrykit/orientation.gif"&gt;&lt;img src="https://github.com/huri000/assets/raw/master/swift-entrykit/orientation.gif" alt="orientation_change" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h3&gt;&lt;a id="user-content-dark-mode-in-the-example-project" class="anchor" aria-hidden="true" href="#dark-mode-in-the-example-project"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Dark Mode in the Example Project&lt;/h3&gt;
&lt;p&gt;You can tinker with the display mode using a segmented control on presets screen, forcing light and dark modes.
All the presets are dark mode ready, but only some in the example project demonstrate dark mode capabilities.
&lt;a target="_blank" rel="noopener noreferrer" href="https://github.com/huri000/assets/blob/master/swift-entrykit/dark-light.gif"&gt;&lt;img src="https://github.com/huri000/assets/raw/master/swift-entrykit/dark-light.gif" alt="light_dark" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-swift-and-objective-c-interoperability" class="anchor" aria-hidden="true" href="#swift-and-objective-c-interoperability"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Swift and Objective-C Interoperability&lt;/h3&gt;
&lt;p&gt;SwiftEntryKit's APIs use the Swift language exclusive syntax (enums, associated values, and more).
Therefore, &lt;code&gt;SwiftEntryKit&lt;/code&gt; cannot be referenced directly from an Objective-C file (&lt;em&gt;.m&lt;/em&gt;, &lt;em&gt;.h&lt;/em&gt; or &lt;em&gt;.mm&lt;/em&gt;).&lt;/p&gt;
&lt;p&gt;Yet, it is pretty easy to integrate SwiftEntryKit into an Objective-C project using a simple &lt;em&gt;.swift&lt;/em&gt; class that is a sort of adapter between &lt;code&gt;SwiftEntryKit&lt;/code&gt; and your Objective-C code.&lt;/p&gt;
&lt;p&gt;&lt;a href="https://github.com/huri000/ObjcEntryKitExample"&gt;This project&lt;/a&gt; demonstrates that using Carthage and CocoaPods.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-author" class="anchor" aria-hidden="true" href="#author"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Author&lt;/h2&gt;
&lt;p&gt;Daniel Huri, &lt;a href="mailto:huri000@gmail.com"&gt;huri000@gmail.com&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-thank-you" class="anchor" aria-hidden="true" href="#thank-you"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Thank You&lt;/h2&gt;
&lt;p&gt;Thanks Lily Azar, &lt;a href="mailto:lilushkaa@gmail.com"&gt;lilushkaa@gmail.com&lt;/a&gt; for those awesome preset icons.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-credits" class="anchor" aria-hidden="true" href="#credits"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Credits&lt;/h2&gt;
&lt;p&gt;&lt;a href="/CREDITS.md"&gt;&lt;strong&gt;Icons Credits&lt;/strong&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-license" class="anchor" aria-hidden="true" href="#license"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;License&lt;/h2&gt;
&lt;p&gt;SwiftEntryKit is available under the MIT license. See the &lt;a href="/LICENSE"&gt;LICENSE&lt;/a&gt; file for more info.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-exceptions" class="anchor" aria-hidden="true" href="#exceptions"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Exceptions&lt;/h3&gt;
&lt;p&gt;Please be aware that any use of the icons inside the project requires attribution to the creator. See &lt;a href="/CREDITS.md"&gt;credits&lt;/a&gt; for the creators list.&lt;/p&gt;
&lt;/article&gt;&lt;/div&gt;</description><author>huri000</author><guid isPermaLink="false">https://github.com/huri000/SwiftEntryKit</guid><pubDate>Fri, 08 Nov 2019 00:11:00 GMT</pubDate></item><item><title>raywenderlich/swift-algorithm-club #12 in Swift, This week</title><link>https://github.com/raywenderlich/swift-algorithm-club</link><description>&lt;p&gt;&lt;i&gt;Algorithms and data structures in Swift, with explanations!&lt;/i&gt;&lt;/p&gt;&lt;div id="readme" class="instapaper_body markdown" data-path="README.markdown"&gt;&lt;article class="markdown-body entry-content p-5" itemprop="text"&gt;&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="Images/SwiftAlgorithm-410-transp.png"&gt;&lt;img src="Images/SwiftAlgorithm-410-transp.png" alt="Swift Algorithm Club" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h1&gt;&lt;a id="user-content-welcome-to-the-swift-algorithm-club" class="anchor" aria-hidden="true" href="#welcome-to-the-swift-algorithm-club"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Welcome to the Swift Algorithm Club!&lt;/h1&gt;
&lt;p&gt;Here you'll find implementations of popular algorithms and data structures in everyone's favorite new language Swift, with detailed explanations of how they work.&lt;/p&gt;
&lt;p&gt;If you're a computer science student who needs to learn this stuff for exams -- or if you're a self-taught programmer who wants to brush up on the theory behind your craft -- you've come to the right place!&lt;/p&gt;
&lt;p&gt;The goal of this project is to &lt;strong&gt;explain how algorithms work&lt;/strong&gt;. The focus is on clarity and readability of the code, not on making a reusable library that you can drop into your own projects. That said, most of the code should be ready for production use but you may need to tweak it to fit into your own codebase.&lt;/p&gt;
&lt;p&gt;Code is compatible with &lt;strong&gt;Xcode 10&lt;/strong&gt; and &lt;strong&gt;Swift 4.2&lt;/strong&gt;. We'll keep this updated with the latest version of Swift. If you're interested in a GitHub pages version of the repo, check out &lt;a href="https://aquarchitect.github.io/swift-algorithm-club/" rel="nofollow"&gt;this&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;&lt;g-emoji class="g-emoji" alias="heart_eyes" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f60d.png"&gt;😍&lt;/g-emoji&gt; &lt;strong&gt;Suggestions and contributions are welcome!&lt;/strong&gt; &lt;g-emoji class="g-emoji" alias="heart_eyes" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f60d.png"&gt;😍&lt;/g-emoji&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-important-links" class="anchor" aria-hidden="true" href="#important-links"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Important links&lt;/h2&gt;
&lt;p&gt;&lt;a href="What%20are%20Algorithms.markdown"&gt;What are algorithms and data structures?&lt;/a&gt; Pancakes!&lt;/p&gt;
&lt;p&gt;&lt;a href="Why%20Algorithms.markdown"&gt;Why learn algorithms?&lt;/a&gt; Worried this isn't your cup of tea? Then read this.&lt;/p&gt;
&lt;p&gt;&lt;a href="Big-O%20Notation.markdown"&gt;Big-O notation&lt;/a&gt;. We often say things like, "This algorithm is &lt;strong&gt;O(n)&lt;/strong&gt;." If you don't know what that means, read this first.&lt;/p&gt;
&lt;p&gt;&lt;a href="Algorithm%20Design.markdown"&gt;Algorithm design techniques&lt;/a&gt;. How do you create your own algorithms?&lt;/p&gt;
&lt;p&gt;&lt;a href="https://github.com/raywenderlich/swift-algorithm-club/blob/master/.github/CONTRIBUTING.md"&gt;How to contribute&lt;/a&gt;. Report an issue to leave feedback, or submit a pull request.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-where-to-start" class="anchor" aria-hidden="true" href="#where-to-start"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Where to start?&lt;/h2&gt;
&lt;p&gt;If you're new to algorithms and data structures, here are a few good ones to start out with:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="Stack/"&gt;Stack&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="Queue/"&gt;Queue&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="Insertion%20Sort/"&gt;Insertion Sort&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="Binary%20Search/"&gt;Binary Search&lt;/a&gt; and &lt;a href="Binary%20Search%20Tree/"&gt;Binary Search Tree&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="Merge%20Sort/"&gt;Merge Sort&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="Boyer-Moore-Horspool/"&gt;Boyer-Moore string search&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-the-algorithms" class="anchor" aria-hidden="true" href="#the-algorithms"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;The algorithms&lt;/h2&gt;
&lt;h3&gt;&lt;a id="user-content-searching" class="anchor" aria-hidden="true" href="#searching"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Searching&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="Linear%20Search/"&gt;Linear Search&lt;/a&gt;. Find an element in an array.&lt;/li&gt;
&lt;li&gt;&lt;a href="Binary%20Search/"&gt;Binary Search&lt;/a&gt;. Quickly find elements in a sorted array.&lt;/li&gt;
&lt;li&gt;&lt;a href="Count%20Occurrences/"&gt;Count Occurrences&lt;/a&gt;. Count how often a value appears in an array.&lt;/li&gt;
&lt;li&gt;&lt;a href="Select%20Minimum%20Maximum"&gt;Select Minimum / Maximum&lt;/a&gt;. Find the minimum/maximum value in an array.&lt;/li&gt;
&lt;li&gt;&lt;a href="Kth%20Largest%20Element/"&gt;k-th Largest Element&lt;/a&gt;. Find the &lt;em&gt;k&lt;/em&gt;-th largest element in an array, such as the median.&lt;/li&gt;
&lt;li&gt;&lt;a href="Selection%20Sampling/"&gt;Selection Sampling&lt;/a&gt;. Randomly choose a bunch of items from a collection.&lt;/li&gt;
&lt;li&gt;&lt;a href="Union-Find/"&gt;Union-Find&lt;/a&gt;. Keeps track of disjoint sets and lets you quickly merge them.&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;&lt;a id="user-content-string-search" class="anchor" aria-hidden="true" href="#string-search"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;String Search&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="Brute-Force%20String%20Search/"&gt;Brute-Force String Search&lt;/a&gt;. A naive method.&lt;/li&gt;
&lt;li&gt;&lt;a href="Boyer-Moore-Horspool/"&gt;Boyer-Moore&lt;/a&gt;. A fast method to search for substrings. It skips ahead based on a look-up table, to avoid looking at every character in the text.&lt;/li&gt;
&lt;li&gt;&lt;a href="Knuth-Morris-Pratt/"&gt;Knuth-Morris-Pratt&lt;/a&gt;. A linear-time string algorithm that returns indexes of all occurrencies of a given pattern.&lt;/li&gt;
&lt;li&gt;&lt;a href="Rabin-Karp/"&gt;Rabin-Karp&lt;/a&gt;  Faster search by using hashing.&lt;/li&gt;
&lt;li&gt;&lt;a href="Longest%20Common%20Subsequence/"&gt;Longest Common Subsequence&lt;/a&gt;. Find the longest sequence of characters that appear in the same order in both strings.&lt;/li&gt;
&lt;li&gt;&lt;a href="Z-Algorithm/"&gt;Z-Algorithm&lt;/a&gt;. Finds all instances of a pattern in a String, and returns the indexes of where the pattern starts within the String.&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;&lt;a id="user-content-sorting" class="anchor" aria-hidden="true" href="#sorting"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Sorting&lt;/h3&gt;
&lt;p&gt;It's fun to see how sorting algorithms work, but in practice you'll almost never have to provide your own sorting routines. Swift's own &lt;code&gt;sort()&lt;/code&gt; is more than up to the job. But if you're curious, read on...&lt;/p&gt;
&lt;p&gt;Basic sorts:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="Insertion%20Sort/"&gt;Insertion Sort&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="Selection%20Sort/"&gt;Selection Sort&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="Shell%20Sort/"&gt;Shell Sort&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Fast sorts:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="Quicksort/"&gt;Quicksort&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="Merge%20Sort/"&gt;Merge Sort&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="Heap%20Sort/"&gt;Heap Sort&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Hybrid sorts:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="Introsort/"&gt;Introsort&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Special-purpose sorts:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="Counting%20Sort/"&gt;Counting Sort&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="Radix%20Sort/"&gt;Radix Sort&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="Topological%20Sort/"&gt;Topological Sort&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Bad sorting algorithms (don't use these!):&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="Bubble%20Sort/"&gt;Bubble Sort&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="Slow%20Sort/"&gt;Slow Sort&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;&lt;a id="user-content-compression" class="anchor" aria-hidden="true" href="#compression"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Compression&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="Run-Length%20Encoding/"&gt;Run-Length Encoding (RLE)&lt;/a&gt;. Store repeated values as a single byte and a count.&lt;/li&gt;
&lt;li&gt;&lt;a href="Huffman%20Coding/"&gt;Huffman Coding&lt;/a&gt;. Store more common elements using a smaller number of bits.&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;&lt;a id="user-content-miscellaneous" class="anchor" aria-hidden="true" href="#miscellaneous"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Miscellaneous&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="Shuffle/"&gt;Shuffle&lt;/a&gt;. Randomly rearranges the contents of an array.&lt;/li&gt;
&lt;li&gt;&lt;a href="Comb%20Sort/"&gt;Comb Sort&lt;/a&gt;. An improve upon the Bubble Sort algorithm.&lt;/li&gt;
&lt;li&gt;&lt;a href="Convex%20Hull/"&gt;Convex Hull&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;&lt;a href="Miller-Rabin%20Primality%20Test/"&gt;Miller-Rabin Primality Test&lt;/a&gt;. Is the number a prime number?&lt;/li&gt;
&lt;li&gt;&lt;a href="MinimumCoinChange/"&gt;MinimumCoinChange&lt;/a&gt;. A showcase for dynamic programming.&lt;/li&gt;
&lt;li&gt;&lt;a href="Genetic/"&gt;Genetic&lt;/a&gt;. A simple example on how to slowly mutate a value to its ideal form, in the context of biological evolution.&lt;/li&gt;
&lt;li&gt;&lt;a href="Myers%20Difference%20Algorithm/"&gt;Myers Difference Algorithm&lt;/a&gt;. Finding the longest common subsequence of two sequences.&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;&lt;a id="user-content-mathematics" class="anchor" aria-hidden="true" href="#mathematics"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Mathematics&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="GCD/"&gt;Greatest Common Divisor (GCD)&lt;/a&gt;. Special bonus: the least common multiple.&lt;/li&gt;
&lt;li&gt;&lt;a href="Combinatorics/"&gt;Permutations and Combinations&lt;/a&gt;. Get your combinatorics on!&lt;/li&gt;
&lt;li&gt;&lt;a href="Shunting%20Yard/"&gt;Shunting Yard Algorithm&lt;/a&gt;. Convert infix expressions to postfix.&lt;/li&gt;
&lt;li&gt;&lt;a href="Karatsuba%20Multiplication/"&gt;Karatsuba Multiplication&lt;/a&gt;. Another take on elementary multiplication.&lt;/li&gt;
&lt;li&gt;&lt;a href="HaversineDistance/"&gt;Haversine Distance&lt;/a&gt;. Calculating the distance between 2 points from a sphere.&lt;/li&gt;
&lt;li&gt;&lt;a href="Strassen%20Matrix%20Multiplication/"&gt;Strassen's Multiplication Matrix&lt;/a&gt;. Efficient way to handle matrix multiplication.&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;&lt;a id="user-content-machine-learning" class="anchor" aria-hidden="true" href="#machine-learning"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Machine learning&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="K-Means/"&gt;k-Means Clustering&lt;/a&gt;. Unsupervised classifier that partitions data into &lt;em&gt;k&lt;/em&gt; clusters.&lt;/li&gt;
&lt;li&gt;k-Nearest Neighbors&lt;/li&gt;
&lt;li&gt;&lt;a href="Linear%20Regression/"&gt;Linear Regression&lt;/a&gt;. A technique for creating a model of the relationship between two (or more) variable quantities.&lt;/li&gt;
&lt;li&gt;Logistic Regression&lt;/li&gt;
&lt;li&gt;Neural Networks&lt;/li&gt;
&lt;li&gt;PageRank&lt;/li&gt;
&lt;li&gt;&lt;a href="Naive%20Bayes%20Classifier/"&gt;Naive Bayes Classifier&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="Simulated%20annealing/"&gt;Simulated annealing&lt;/a&gt;. Probabilistic technique for approximating the global maxima in a (often discrete) large search space.&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-data-structures" class="anchor" aria-hidden="true" href="#data-structures"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Data structures&lt;/h2&gt;
&lt;p&gt;The choice of data structure for a particular task depends on a few things.&lt;/p&gt;
&lt;p&gt;First, there is the shape of your data and the kinds of operations that you'll need to perform on it. If you want to look up objects by a key you need some kind of dictionary; if your data is hierarchical in nature you want a tree structure of some sort; if your data is sequential you want a stack or queue.&lt;/p&gt;
&lt;p&gt;Second, it matters what particular operations you'll be performing most, as certain data structures are optimized for certain actions. For example, if you often need to find the most important object in a collection, then a heap or priority queue is more optimal than a plain array.&lt;/p&gt;
&lt;p&gt;Most of the time using just the built-in &lt;code&gt;Array&lt;/code&gt;, &lt;code&gt;Dictionary&lt;/code&gt;, and &lt;code&gt;Set&lt;/code&gt; types is sufficient, but sometimes you may want something more fancy...&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-variations-on-arrays" class="anchor" aria-hidden="true" href="#variations-on-arrays"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Variations on arrays&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="Array2D/"&gt;Array2D&lt;/a&gt;. A two-dimensional array with fixed dimensions. Useful for board games.&lt;/li&gt;
&lt;li&gt;&lt;a href="Bit%20Set/"&gt;Bit Set&lt;/a&gt;. A fixed-size sequence of &lt;em&gt;n&lt;/em&gt; bits.&lt;/li&gt;
&lt;li&gt;&lt;a href="Fixed%20Size%20Array/"&gt;Fixed Size Array&lt;/a&gt;. When you know beforehand how large your data will be, it might be more efficient to use an old-fashioned array with a fixed size.&lt;/li&gt;
&lt;li&gt;&lt;a href="Ordered%20Array/"&gt;Ordered Array&lt;/a&gt;. An array that is always sorted.&lt;/li&gt;
&lt;li&gt;&lt;a href="Rootish%20Array%20Stack/"&gt;Rootish Array Stack&lt;/a&gt;. A space and time efficient variation on Swift arrays.&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;&lt;a id="user-content-queues" class="anchor" aria-hidden="true" href="#queues"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Queues&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="Stack/"&gt;Stack&lt;/a&gt;. Last-in, first-out!&lt;/li&gt;
&lt;li&gt;&lt;a href="Queue/"&gt;Queue&lt;/a&gt;. First-in, first-out!&lt;/li&gt;
&lt;li&gt;&lt;a href="Deque/"&gt;Deque&lt;/a&gt;. A double-ended queue.&lt;/li&gt;
&lt;li&gt;&lt;a href="Priority%20Queue"&gt;Priority Queue&lt;/a&gt;. A queue where the most important element is always at the front.&lt;/li&gt;
&lt;li&gt;&lt;a href="Ring%20Buffer/"&gt;Ring Buffer&lt;/a&gt;. Also known as a circular buffer. An array of a certain size that conceptually wraps around back to the beginning.&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;&lt;a id="user-content-lists" class="anchor" aria-hidden="true" href="#lists"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Lists&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="Linked%20List/"&gt;Linked List&lt;/a&gt;. A sequence of data items connected through links. Covers both singly and doubly linked lists.&lt;/li&gt;
&lt;li&gt;&lt;a href="Skip-List/"&gt;Skip-List&lt;/a&gt;. Skip List is a probabilistic data-structure with same logarithmic time bound and efficiency as AVL/ or Red-Black tree and provides a clever compromise to efficiently support search and update operations.&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;&lt;a id="user-content-trees" class="anchor" aria-hidden="true" href="#trees"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Trees&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="Tree/"&gt;Tree&lt;/a&gt;. A general-purpose tree structure.&lt;/li&gt;
&lt;li&gt;&lt;a href="Binary%20Tree/"&gt;Binary Tree&lt;/a&gt;. A tree where each node has at most two children.&lt;/li&gt;
&lt;li&gt;&lt;a href="Binary%20Search%20Tree/"&gt;Binary Search Tree (BST)&lt;/a&gt;. A binary tree that orders its nodes in a way that allows for fast queries.&lt;/li&gt;
&lt;li&gt;&lt;a href="Red-Black%20Tree/"&gt;Red-Black Tree&lt;/a&gt;. A self balancing binary search tree.&lt;/li&gt;
&lt;li&gt;&lt;a href="Splay%20Tree/"&gt;Splay Tree&lt;/a&gt;. A self balancing binary search tree that enables fast retrieval of recently updated elements.&lt;/li&gt;
&lt;li&gt;&lt;a href="Threaded%20Binary%20Tree/"&gt;Threaded Binary Tree&lt;/a&gt;. A binary tree that maintains a few extra variables for cheap and fast in-order traversals.&lt;/li&gt;
&lt;li&gt;&lt;a href="Segment%20Tree/"&gt;Segment Tree&lt;/a&gt;. Can quickly compute a function over a portion of an array.
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/raywenderlich/swift-algorithm-club/tree/master/Segment%20Tree/LazyPropagation"&gt;Lazy Propagation&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;kd-Tree&lt;/li&gt;
&lt;li&gt;&lt;a href="Sparse%20Table/"&gt;Sparse Table&lt;/a&gt;. Another take on quickly computing a function over a portion of an array, but this time we'll make it even quicker!.&lt;/li&gt;
&lt;li&gt;&lt;a href="Heap/"&gt;Heap&lt;/a&gt;. A binary tree stored in an array, so it doesn't use pointers. Makes a great priority queue.&lt;/li&gt;
&lt;li&gt;Fibonacci Heap&lt;/li&gt;
&lt;li&gt;&lt;a href="Trie/"&gt;Trie&lt;/a&gt;. A special type of tree used to store associative data structures.&lt;/li&gt;
&lt;li&gt;&lt;a href="B-Tree/"&gt;B-Tree&lt;/a&gt;. A self-balancing search tree, in which nodes can have more than two children.&lt;/li&gt;
&lt;li&gt;&lt;a href="QuadTree/"&gt;QuadTree&lt;/a&gt;. A tree with 4 children.&lt;/li&gt;
&lt;li&gt;&lt;a href="Octree/"&gt;Octree&lt;/a&gt;. A tree with 8 children.&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;&lt;a id="user-content-hashing" class="anchor" aria-hidden="true" href="#hashing"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Hashing&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="Hash%20Table/"&gt;Hash Table&lt;/a&gt;. Allows you to store and retrieve objects by a key. This is how the dictionary type is usually implemented.&lt;/li&gt;
&lt;li&gt;Hash Functions&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;&lt;a id="user-content-sets" class="anchor" aria-hidden="true" href="#sets"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Sets&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="Bloom%20Filter/"&gt;Bloom Filter&lt;/a&gt;. A constant-memory data structure that probabilistically tests whether an element is in a set.&lt;/li&gt;
&lt;li&gt;&lt;a href="Hash%20Set/"&gt;Hash Set&lt;/a&gt;. A set implemented using a hash table.&lt;/li&gt;
&lt;li&gt;&lt;a href="Multiset/"&gt;Multiset&lt;/a&gt;. A set where the number of times an element is added matters. (Also known as a bag.)&lt;/li&gt;
&lt;li&gt;&lt;a href="Ordered%20Set/"&gt;Ordered Set&lt;/a&gt;. A set where the order of items matters.&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;&lt;a id="user-content-graphs" class="anchor" aria-hidden="true" href="#graphs"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Graphs&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="Graph/"&gt;Graph&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="Breadth-First%20Search/"&gt;Breadth-First Search (BFS)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="Depth-First%20Search/"&gt;Depth-First Search (DFS)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="Shortest%20Path%20%28Unweighted%29/"&gt;Shortest Path&lt;/a&gt; on an unweighted tree&lt;/li&gt;
&lt;li&gt;&lt;a href="Single-Source%20Shortest%20Paths%20(Weighted)/"&gt;Single-Source Shortest Paths&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="Minimum%20Spanning%20Tree%20%28Unweighted%29/"&gt;Minimum Spanning Tree&lt;/a&gt; on an unweighted tree&lt;/li&gt;
&lt;li&gt;&lt;a href="Minimum%20Spanning%20Tree/"&gt;Minimum Spanning Tree&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="All-Pairs%20Shortest%20Paths/"&gt;All-Pairs Shortest Paths&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="Dijkstra%20Algorithm/"&gt;Dijkstra's shortest path algorithm&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-puzzles" class="anchor" aria-hidden="true" href="#puzzles"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Puzzles&lt;/h2&gt;
&lt;p&gt;A lot of software developer interview questions consist of algorithmic puzzles. Here is a small selection of fun ones. For more puzzles (with answers), see &lt;a href="http://elementsofprogramminginterviews.com/" rel="nofollow"&gt;here&lt;/a&gt; and &lt;a href="http://www.crackingthecodinginterview.com" rel="nofollow"&gt;here&lt;/a&gt;.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="Two-Sum%20Problem/"&gt;Two-Sum Problem&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="3Sum%20and%204Sum/"&gt;Three-Sum/Four-Sum Problem&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="Fizz%20Buzz/"&gt;Fizz Buzz&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="Monty%20Hall%20Problem/"&gt;Monty Hall Problem&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="Palindromes/"&gt;Finding Palindromes&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="DiningPhilosophers/"&gt;Dining Philosophers&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="Egg%20Drop%20Problem/"&gt;Egg Drop Problem&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="Encode%20and%20Decode%20Tree/"&gt;Encoding and Decoding Binary Tree&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="Closest%20Pair/"&gt;Closest Pair&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-learn-more" class="anchor" aria-hidden="true" href="#learn-more"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Learn more!&lt;/h2&gt;
&lt;p&gt;Like what you see? Check out &lt;a href="https://store.raywenderlich.com/products/data-structures-and-algorithms-in-swift" rel="nofollow"&gt;Data Structures &amp;amp; Algorithms in Swift&lt;/a&gt;, the official book by the Swift Algorithm Club team!&lt;/p&gt;
&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="Images/DataStructuresAndAlgorithmsInSwiftBook.png"&gt;&lt;img src="Images/DataStructuresAndAlgorithmsInSwiftBook.png" alt="Data Structures &amp;amp; Algorithms in Swift Book" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;You’ll start with the fundamental structures of linked lists, queues and stacks, and see how to implement them in a highly Swift-like way. Move on to working with various types of trees, including general purpose trees, binary trees, AVL trees, binary search trees, and tries.&lt;/p&gt;
&lt;p&gt;Go beyond bubble and insertion sort with better-performing algorithms, including mergesort, radix sort, heap sort, and quicksort. Learn how to construct directed, non-directed and weighted graphs to represent many real-world models, and traverse graphs and trees efficiently with breadth-first, depth-first, Dijkstra’s and Prim’s algorithms to solve problems such as finding the shortest path or lowest cost in a network.&lt;/p&gt;
&lt;p&gt;By the end of this book, you’ll have hands-on experience solving common issues with data structures and algorithms — and you’ll be well on your way to developing your own efficient and useful implementations!&lt;/p&gt;
&lt;p&gt;You can find the book on the &lt;a href="https://store.raywenderlich.com/products/data-structures-and-algorithms-in-swift" rel="nofollow"&gt;raywenderlich.com store&lt;/a&gt;.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-credits" class="anchor" aria-hidden="true" href="#credits"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Credits&lt;/h2&gt;
&lt;p&gt;The Swift Algorithm Club was originally created by &lt;a href="https://github.com/hollance"&gt;Matthijs Hollemans&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;It is now maintained by &lt;a href="https://www.raywenderlich.com/u/jomoka" rel="nofollow"&gt;Vincent Ngo&lt;/a&gt;, &lt;a href="https://github.com/kelvinlauKL"&gt;Kelvin Lau&lt;/a&gt;, and &lt;a href="https://github.com/richard-ash"&gt;Richard Ash&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;The Swift Algorithm Club is a collaborative effort from the &lt;a href="https://github.com/raywenderlich/swift-algorithm-club/graphs/contributors"&gt;most algorithmic members&lt;/a&gt; of the &lt;a href="https://www.raywenderlich.com" rel="nofollow"&gt;raywenderlich.com&lt;/a&gt; community. We're always looking for help - why not &lt;a href=".github/CONTRIBUTING.md"&gt;join the club&lt;/a&gt;? :]&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-license" class="anchor" aria-hidden="true" href="#license"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;License&lt;/h2&gt;
&lt;p&gt;All content is licensed under the terms of the MIT open source license.&lt;/p&gt;
&lt;p&gt;By posting here, or by submitting any pull request through this forum, you agree that all content you submit or create, both code and text, is subject to this license.  Razeware, LLC, and others will have all the rights described in the license regarding this content.  The precise terms of this license may be found &lt;a href="https://github.com/raywenderlich/swift-algorithm-club/blob/master/LICENSE.txt"&gt;here&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;&lt;a href="https://travis-ci.org/raywenderlich/swift-algorithm-club" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/d686248464ea87440457e93704b5f54191acc804/68747470733a2f2f7472617669732d63692e6f72672f72617977656e6465726c6963682f73776966742d616c676f726974686d2d636c75622e7376673f6272616e63683d6d6173746572" alt="Build Status" data-canonical-src="https://travis-ci.org/raywenderlich/swift-algorithm-club.svg?branch=master" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;/article&gt;&lt;/div&gt;</description><author>raywenderlich</author><guid isPermaLink="false">https://github.com/raywenderlich/swift-algorithm-club</guid><pubDate>Fri, 08 Nov 2019 00:12:00 GMT</pubDate></item><item><title>mozilla-mobile/firefox-ios #13 in Swift, This week</title><link>https://github.com/mozilla-mobile/firefox-ios</link><description>&lt;p&gt;&lt;i&gt;Firefox for iOS&lt;/i&gt;&lt;/p&gt;&lt;div id="readme" class="instapaper_body md" data-path="README.md"&gt;&lt;article class="markdown-body entry-content p-5" itemprop="text"&gt;&lt;h1&gt;&lt;a id="user-content-firefox-for-ios---" class="anchor" aria-hidden="true" href="#firefox-for-ios---"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Firefox for iOS &lt;a href="https://codebeat.co/projects/github-com-mozilla-firefox-ios" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/20b5b52f8d698b6663ae70eefc16b0946571e009/68747470733a2f2f636f6465626561742e636f2f6261646765732f36376535386236642d626338392d346632322d626138662d373636386139633135633561" alt="codebeat badge" data-canonical-src="https://codebeat.co/badges/67e58b6d-bc89-4f22-ba8f-7668a9c15c5a" style="max-width:100%;"&gt;&lt;/a&gt; &lt;a href="https://dashboard.buddybuild.com/apps/57bf25c0f096bc01001e21e0/build/latest" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/fa67952a021d36ddae3ef0471b6c020db91a40fa/68747470733a2f2f64617368626f6172642e62756464796275696c642e636f6d2f6170692f737461747573496d6167653f61707049443d353762663235633066303936626330313030316532316530266272616e63683d6d6173746572266275696c643d6c6174657374" alt="BuddyBuild" data-canonical-src="https://dashboard.buddybuild.com/api/statusImage?appID=57bf25c0f096bc01001e21e0&amp;amp;branch=master&amp;amp;build=latest" style="max-width:100%;"&gt;&lt;/a&gt; &lt;a href="https://codecov.io/gh/mozilla-mobile/firefox-ios/branch/master" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/9528dbfe07462ac8ebe1b38a983ea97be198f375/68747470733a2f2f636f6465636f762e696f2f67682f6d6f7a696c6c612d6d6f62696c652f66697265666f782d696f732f6272616e63682f6d61737465722f67726170682f62616467652e737667" alt="codecov" data-canonical-src="https://codecov.io/gh/mozilla-mobile/firefox-ios/branch/master/graph/badge.svg" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/h1&gt;
&lt;p&gt;Download on the &lt;a href="https://itunes.apple.com/app/firefox-web-browser/id989804926" rel="nofollow"&gt;App Store&lt;/a&gt;.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-this-branch-master" class="anchor" aria-hidden="true" href="#this-branch-master"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;This branch (master)&lt;/h2&gt;
&lt;p&gt;This branch only works with Xcode 11 and supports iOS 11.0 and above&lt;/p&gt;
&lt;p&gt;Please make sure you aim your pull requests in the right direction.&lt;/p&gt;
&lt;p&gt;For bug fixes and features for a specific release use the version branch.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-getting-involved" class="anchor" aria-hidden="true" href="#getting-involved"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Getting involved&lt;/h2&gt;
&lt;p&gt;Want to contribute but don't know where to start? Here is a list of &lt;a href="https://github.com/mozilla-mobile/firefox-ios/issues?q=is%3Aissue+is%3Aopen+label%3A%22Contributor+OK+%F0%9F%A4%9D%22"&gt;issues that are contributor friendly&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-building-the-code" class="anchor" aria-hidden="true" href="#building-the-code"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Building the code&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;Install the latest &lt;a href="https://developer.apple.com/xcode/downloads/" rel="nofollow"&gt;Xcode developer tools&lt;/a&gt; from Apple.&lt;/li&gt;
&lt;li&gt;Install Carthage
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt;brew update
brew install carthage&lt;/pre&gt;&lt;/div&gt;
&lt;/li&gt;
&lt;li&gt;Clone the repository:
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt;git clone https://github.com/mozilla-mobile/firefox-ios&lt;/pre&gt;&lt;/div&gt;
&lt;/li&gt;
&lt;li&gt;Pull in the project dependencies:
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt;&lt;span class="pl-c1"&gt;cd&lt;/span&gt; firefox-ios
sh ./bootstrap.sh&lt;/pre&gt;&lt;/div&gt;
&lt;/li&gt;
&lt;li&gt;Open &lt;code&gt;Client.xcodeproj&lt;/code&gt; in Xcode.&lt;/li&gt;
&lt;li&gt;Build the &lt;code&gt;Fennec&lt;/code&gt; scheme in Xcode.&lt;/li&gt;
&lt;/ol&gt;
&lt;h2&gt;&lt;a id="user-content-building-user-scripts" class="anchor" aria-hidden="true" href="#building-user-scripts"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Building User Scripts&lt;/h2&gt;
&lt;p&gt;User Scripts (JavaScript injected into the &lt;code&gt;WKWebView&lt;/code&gt;) are compiled, concatenated and minified using &lt;a href="https://webpack.js.org/" rel="nofollow"&gt;webpack&lt;/a&gt;. User Scripts to be aggregated are placed in the following directories:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;/Client
|-- /Frontend
    |-- /UserContent
        |-- /UserScripts
            |-- /AllFrames
            |   |-- /AtDocumentEnd
            |   |-- /AtDocumentStart
            |-- /MainFrame
                |-- /AtDocumentEnd
                |-- /AtDocumentStart
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;This reduces the total possible number of User Scripts down to four. The compiled output from concatenating and minifying the User Scripts placed in these folders resides in &lt;code&gt;/Client/Assets&lt;/code&gt; and are named accordingly:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;AllFramesAtDocumentEnd.js&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;AllFramesAtDocumentStart.js&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;MainFrameAtDocumentEnd.js&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;MainFrameAtDocumentStart.js&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;To simplify the build process, these compiled files are checked-in to this repository. When adding or editing User Scripts, these files can be re-compiled with &lt;code&gt;webpack&lt;/code&gt; manually. This requires Node.js to be installed and all required &lt;code&gt;npm&lt;/code&gt; packages can be installed by running &lt;code&gt;npm install&lt;/code&gt; in the root directory of the project. User Scripts can be compiled by running the following &lt;code&gt;npm&lt;/code&gt; command in the root directory of the project:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;npm run build
&lt;/code&gt;&lt;/pre&gt;
&lt;h2&gt;&lt;a id="user-content-contributor-guidelines" class="anchor" aria-hidden="true" href="#contributor-guidelines"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Contributor guidelines&lt;/h2&gt;
&lt;h3&gt;&lt;a id="user-content-creating-a-pull-request" class="anchor" aria-hidden="true" href="#creating-a-pull-request"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Creating a pull request&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;All pull requests must be associated with a specific Issue. If an issue doesn't exist please first create it.&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;&lt;a id="user-content-swift-style" class="anchor" aria-hidden="true" href="#swift-style"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Swift style&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;Swift code should generally follow the conventions listed at &lt;a href="https://github.com/raywenderlich/swift-style-guide"&gt;https://github.com/raywenderlich/swift-style-guide&lt;/a&gt;.
&lt;ul&gt;
&lt;li&gt;Exception: we use 4-space indentation instead of 2.&lt;/li&gt;
&lt;li&gt;This is a loose standard. We do our best to follow this style&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;&lt;a id="user-content-whitespace" class="anchor" aria-hidden="true" href="#whitespace"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Whitespace&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;New code should not contain any trailing whitespace.&lt;/li&gt;
&lt;li&gt;We recommend enabling both the "Automatically trim trailing whitespace" and "Including whitespace-only lines" preferences in Xcode (under Text Editing).&lt;/li&gt;
&lt;li&gt;&lt;code&gt;git rebase --whitespace=fix&lt;/code&gt; can also be used to remove whitespace from your commits before issuing a pull request.&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;&lt;a id="user-content-commits" class="anchor" aria-hidden="true" href="#commits"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Commits&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;Each commit should have a single clear purpose. If a commit contains multiple unrelated changes, those changes should be split into separate commits.&lt;/li&gt;
&lt;li&gt;If a commit requires another commit to build properly, those commits should be squashed.&lt;/li&gt;
&lt;li&gt;Follow-up commits for any review comments should be squashed. Do not include "Fixed PR comments", merge commits, or other "temporary" commits in pull requests.&lt;/li&gt;
&lt;/ul&gt;
&lt;/article&gt;&lt;/div&gt;</description><author>mozilla-mobile</author><guid isPermaLink="false">https://github.com/mozilla-mobile/firefox-ios</guid><pubDate>Fri, 08 Nov 2019 00:13:00 GMT</pubDate></item><item><title>rechsteiner/Parchment #14 in Swift, This week</title><link>https://github.com/rechsteiner/Parchment</link><description>&lt;p&gt;&lt;i&gt;A paging view controller with a highly customizable menu ✨&lt;/i&gt;&lt;/p&gt;&lt;div id="readme" class="instapaper_body md" data-path="README.md"&gt;&lt;article class="markdown-body entry-content p-5" itemprop="text"&gt;&lt;p align="center"&gt;
  &lt;a target="_blank" rel="noopener noreferrer" href="https://camo.githubusercontent.com/c55877d6b1729ab11eb1f711423d0b36d5c25d16/68747470733a2f2f72656368737465696e65722d70617263686d656e742e73332e65752d63656e7472616c2d312e616d617a6f6e6177732e636f6d2f70617263686d656e742d7469746c652d332e706e67"&gt;&lt;img src="https://camo.githubusercontent.com/c55877d6b1729ab11eb1f711423d0b36d5c25d16/68747470733a2f2f72656368737465696e65722d70617263686d656e742e73332e65752d63656e7472616c2d312e616d617a6f6e6177732e636f6d2f70617263686d656e742d7469746c652d332e706e67" width="240" height="70" data-canonical-src="https://rechsteiner-parchment.s3.eu-central-1.amazonaws.com/parchment-title-3.png" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;/p&gt;
&lt;p align="center"&gt;
    &lt;strong&gt;&lt;a href="#getting-started"&gt;Getting Started&lt;/a&gt;&lt;/strong&gt; |
    &lt;strong&gt;&lt;a href="#customization"&gt;Customization&lt;/a&gt;&lt;/strong&gt; |
    &lt;strong&gt;&lt;a href="#installation"&gt;Installation&lt;/a&gt;&lt;/strong&gt;
&lt;/p&gt;
&lt;p align="center"&gt;
  &lt;a href="https://circleci.com/gh/rechsteiner/Parchment" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/06efd04ca58a1e9bac2153332a440b057d0b2829/68747470733a2f2f636972636c6563692e636f6d2f67682f72656368737465696e65722f50617263686d656e742f747265652f6d61737465722e7376673f7374796c653d736869656c6426636972636c652d746f6b656e3d38653464613663386266303932373166373266333262663363376137633964373433666635306662" data-canonical-src="https://circleci.com/gh/rechsteiner/Parchment/tree/master.svg?style=shield&amp;amp;circle-token=8e4da6c8bf09271f72f32bf3c7a7c9d743ff50fb" style="max-width:100%;"&gt;&lt;/a&gt;
  &lt;a href="https://cocoapods.org/pods/Parchment" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/6fa9d318e7e48826e74c3f9445181eda6cbb8dee/68747470733a2f2f696d672e736869656c64732e696f2f636f636f61706f64732f762f50617263686d656e742e737667" data-canonical-src="https://img.shields.io/cocoapods/v/Parchment.svg" style="max-width:100%;"&gt;&lt;/a&gt;
  &lt;a href="https://github.com/Carthage/Carthage"&gt;&lt;img src="https://camo.githubusercontent.com/813e8345d5ca6f5cc9bea569be60d3899e712268/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f43617274686167652d636f6d70617469626c652d3442433531442e737667" data-canonical-src="https://img.shields.io/badge/Carthage-compatible-4BC51D.svg" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;/p&gt;
&lt;br&gt;
&lt;p align="center"&gt;
  &lt;a target="_blank" rel="noopener noreferrer" href="https://camo.githubusercontent.com/f5cf1643841bdbde0e7b83147089856725e8e0ce/68747470733a2f2f72656368737465696e65722d70617263686d656e742e73332e65752d63656e7472616c2d312e616d617a6f6e6177732e636f6d2f70617263686d656e742d64656c65676174652e676966"&gt;&lt;img src="https://camo.githubusercontent.com/f5cf1643841bdbde0e7b83147089856725e8e0ce/68747470733a2f2f72656368737465696e65722d70617263686d656e742e73332e65752d63656e7472616c2d312e616d617a6f6e6177732e636f6d2f70617263686d656e742d64656c65676174652e676966" alt="Cities Example" data-canonical-src="https://rechsteiner-parchment.s3.eu-central-1.amazonaws.com/parchment-delegate.gif" style="max-width:100%;"&gt;&lt;/a&gt;
  &lt;a target="_blank" rel="noopener noreferrer" href="https://camo.githubusercontent.com/22b75f81989e7d3d2ae9385e852ba941e9b3a6d5/68747470733a2f2f72656368737465696e65722d70617263686d656e742e73332e65752d63656e7472616c2d312e616d617a6f6e6177732e636f6d2f70617263686d656e742d756e706c6173682e676966"&gt;&lt;img src="https://camo.githubusercontent.com/22b75f81989e7d3d2ae9385e852ba941e9b3a6d5/68747470733a2f2f72656368737465696e65722d70617263686d656e742e73332e65752d63656e7472616c2d312e616d617a6f6e6177732e636f6d2f70617263686d656e742d756e706c6173682e676966" alt="Unsplash Example" data-canonical-src="https://rechsteiner-parchment.s3.eu-central-1.amazonaws.com/parchment-unplash.gif" style="max-width:100%;"&gt;&lt;/a&gt;
  &lt;a target="_blank" rel="noopener noreferrer" href="https://camo.githubusercontent.com/8419a34bf656fa5fa2bcf2d4fbe2f15c2e06f419/68747470733a2f2f72656368737465696e65722d70617263686d656e742e73332e65752d63656e7472616c2d312e616d617a6f6e6177732e636f6d2f70617263686d656e742d63616c656e6461722e676966"&gt;&lt;img src="https://camo.githubusercontent.com/8419a34bf656fa5fa2bcf2d4fbe2f15c2e06f419/68747470733a2f2f72656368737465696e65722d70617263686d656e742e73332e65752d63656e7472616c2d312e616d617a6f6e6177732e636f6d2f70617263686d656e742d63616c656e6461722e676966" alt="Calendar Example" data-canonical-src="https://rechsteiner-parchment.s3.eu-central-1.amazonaws.com/parchment-calendar.gif" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-features" class="anchor" aria-hidden="true" href="#features"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Features&lt;/h2&gt;
&lt;p&gt;Parchment is a very flexible paging view controller. It let’s you page between view controllers while showing any type of generic indicator that scrolls along with the content. Here are some benefits of using Parchment:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Memory-efficient&lt;/strong&gt;: &lt;br&gt; Parchment only allocates view controllers when they’re needed, meaning if you have a lot of view controllers you don’t have to initialize them all up-front.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Infinite scrolling&lt;/strong&gt;: &lt;br&gt; Because view controllers are only allocated as you are scrolling, you can create data sources that are infinitely large. This is perfect for things like &lt;a href="Documentation/infinite-data-source.md"&gt;calendars&lt;/a&gt;.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Highly customizable&lt;/strong&gt; &lt;br&gt; The menu items are built using
&lt;code&gt;UICollectionView&lt;/code&gt;, which means you can display pretty much whatever you want. You can even subclass the layout to create completely custom behaviours.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-getting-started" class="anchor" aria-hidden="true" href="#getting-started"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Getting Started&lt;/h2&gt;
&lt;h3&gt;&lt;a id="user-content-basic-usage" class="anchor" aria-hidden="true" href="#basic-usage"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Basic usage&lt;/h3&gt;
&lt;p&gt;The easiest way to use Parchment is to use the &lt;code&gt;FixedPagingViewController&lt;/code&gt; subclass. Just
pass in an array of view controllers and Parchment will generate menu items for each view controller using their
&lt;code&gt;title&lt;/code&gt; property:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;let&lt;/span&gt; firstViewController &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;UIViewController&lt;/span&gt;()
&lt;span class="pl-k"&gt;let&lt;/span&gt; secondViewController &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;UIViewController&lt;/span&gt;()

&lt;span class="pl-k"&gt;let&lt;/span&gt; pagingViewController &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;FixedPagingViewController&lt;/span&gt;(&lt;span class="pl-c1"&gt;viewControllers&lt;/span&gt;: [
  firstViewController,
  secondViewController
])&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;See: &lt;a href="Documentation/fixed-view-controller.md"&gt;Using FixedPagingViewController&lt;/a&gt;&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-data-source" class="anchor" aria-hidden="true" href="#data-source"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Data source&lt;/h3&gt;
&lt;p&gt;Using &lt;code&gt;FixedPagingViewController&lt;/code&gt; is fine in most cases, but if you have more than a few view controllers you probably don't want to allocate them all up-front. If you're going to display a fixed number of view controllers, you can setup your own data source by implementing &lt;code&gt;PagingViewControllerDataSource&lt;/code&gt;:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;extension&lt;/span&gt; &lt;span class="pl-en"&gt;ViewController&lt;/span&gt;: &lt;span class="pl-e"&gt;PagingViewControllerDataSource &lt;/span&gt;{

    &lt;span class="pl-k"&gt;func&lt;/span&gt; &lt;span class="pl-en"&gt;numberOfViewControllers&lt;/span&gt;&amp;lt;&lt;span class="pl-c1"&gt;T&lt;/span&gt;&amp;gt;(&lt;span class="pl-en"&gt;in&lt;/span&gt; &lt;span class="pl-smi"&gt;pagingViewController&lt;/span&gt;: PagingViewController&amp;lt;T&amp;gt;) &lt;span class="pl-k"&gt;-&amp;gt;&lt;/span&gt; &lt;span class="pl-c1"&gt;Int&lt;/span&gt; {
        &lt;span class="pl-k"&gt;return&lt;/span&gt; &lt;span class="pl-c1"&gt;10&lt;/span&gt;
    }

    &lt;span class="pl-k"&gt;func&lt;/span&gt; &lt;span class="pl-en"&gt;pagingViewController&lt;/span&gt;&amp;lt;&lt;span class="pl-c1"&gt;T&lt;/span&gt;&amp;gt;(&lt;span class="pl-en"&gt;_&lt;/span&gt; &lt;span class="pl-smi"&gt;pagingViewController&lt;/span&gt;: PagingViewController&amp;lt;T&amp;gt;, &lt;span class="pl-en"&gt;viewControllerForIndex&lt;/span&gt; &lt;span class="pl-smi"&gt;index&lt;/span&gt;: &lt;span class="pl-c1"&gt;Int&lt;/span&gt;) &lt;span class="pl-k"&gt;-&amp;gt;&lt;/span&gt; UIViewController {
        &lt;span class="pl-k"&gt;return&lt;/span&gt; &lt;span class="pl-c1"&gt;ItemViewController&lt;/span&gt;(&lt;span class="pl-c1"&gt;index&lt;/span&gt;: index)
    }

    &lt;span class="pl-k"&gt;func&lt;/span&gt; &lt;span class="pl-en"&gt;pagingViewController&lt;/span&gt;&amp;lt;&lt;span class="pl-c1"&gt;T&lt;/span&gt;&amp;gt;(&lt;span class="pl-en"&gt;_&lt;/span&gt; &lt;span class="pl-smi"&gt;pagingViewController&lt;/span&gt;: PagingViewController&amp;lt;T&amp;gt;, &lt;span class="pl-en"&gt;pagingItemForIndex&lt;/span&gt; &lt;span class="pl-smi"&gt;index&lt;/span&gt;: &lt;span class="pl-c1"&gt;Int&lt;/span&gt;) &lt;span class="pl-k"&gt;-&amp;gt;&lt;/span&gt; PagingItem {
        &lt;span class="pl-k"&gt;return&lt;/span&gt; &lt;span class="pl-c1"&gt;PagingIndexItem&lt;/span&gt;(&lt;span class="pl-c1"&gt;index&lt;/span&gt;: index, &lt;span class="pl-c1"&gt;title&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;View &lt;span class="pl-pse"&gt;\(&lt;/span&gt;&lt;span class="pl-s1"&gt;index&lt;/span&gt;&lt;span class="pl-pse"&gt;&lt;span class="pl-s1"&gt;)&lt;/span&gt;&lt;/span&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
    }
}&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Then you need to set the &lt;code&gt;dataSource&lt;/code&gt; property and select the initial item:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;let&lt;/span&gt; pagingViewController &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;PagingViewController&lt;/span&gt;()
pagingViewController.&lt;span class="pl-smi"&gt;dataSource&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;self&lt;/span&gt;
pagingViewController.&lt;span class="pl-c1"&gt;select&lt;/span&gt;(&lt;span class="pl-c1"&gt;index&lt;/span&gt;: &lt;span class="pl-c1"&gt;0&lt;/span&gt;)&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Using the data source means Parchment will only allocate view controllers for the currently selected item and any of its siblings. This is a lot more memory efficient than using &lt;code&gt;FixedPagingViewController&lt;/code&gt; if you have many view controllers.&lt;/p&gt;
&lt;p&gt;See: &lt;a href="Documentation/data-source.md"&gt;Using custom data source&lt;/a&gt;&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-infinite-data-source" class="anchor" aria-hidden="true" href="#infinite-data-source"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Infinite data source&lt;/h3&gt;
&lt;p&gt;Using the &lt;code&gt;PagingViewControllerDataSource&lt;/code&gt; protocol means you need to know how many view controllers to display. If you’re creating something like a calendar, the number of view controllers can be infinitely large. In that case you can use the &lt;code&gt;PagingViewControllerInfiniteDataSource&lt;/code&gt; protocol:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;extension&lt;/span&gt; &lt;span class="pl-en"&gt;ViewController&lt;/span&gt;: &lt;span class="pl-e"&gt;PagingViewControllerInfiniteDataSource &lt;/span&gt;{

  &lt;span class="pl-k"&gt;func&lt;/span&gt; &lt;span class="pl-en"&gt;pagingViewController&lt;/span&gt;&amp;lt;&lt;span class="pl-c1"&gt;T&lt;/span&gt;&amp;gt;(&lt;span class="pl-en"&gt;_&lt;/span&gt; &lt;span class="pl-smi"&gt;pagingViewController&lt;/span&gt;: PagingViewController&amp;lt;T&amp;gt;, &lt;span class="pl-en"&gt;viewControllerForPagingItem&lt;/span&gt; &lt;span class="pl-smi"&gt;pagingItem&lt;/span&gt;: T) &lt;span class="pl-k"&gt;-&amp;gt;&lt;/span&gt; UIViewController {
    &lt;span class="pl-k"&gt;return&lt;/span&gt; &lt;span class="pl-c1"&gt;ItemViewController&lt;/span&gt;(&lt;span class="pl-c1"&gt;item&lt;/span&gt;: pagingItem)
  }

  &lt;span class="pl-k"&gt;func&lt;/span&gt; &lt;span class="pl-en"&gt;pagingViewController&lt;/span&gt;&amp;lt;&lt;span class="pl-c1"&gt;T&lt;/span&gt;&amp;gt;(&lt;span class="pl-en"&gt;_&lt;/span&gt; &lt;span class="pl-smi"&gt;pagingViewController&lt;/span&gt;: PagingViewController&amp;lt;T&amp;gt;, &lt;span class="pl-en"&gt;pagingItemBeforePagingItem&lt;/span&gt; &lt;span class="pl-smi"&gt;pagingItem&lt;/span&gt;: T) &lt;span class="pl-k"&gt;-&amp;gt;&lt;/span&gt; T&lt;span class="pl-k"&gt;?&lt;/span&gt; {
    &lt;span class="pl-k"&gt;guard&lt;/span&gt; &lt;span class="pl-k"&gt;let&lt;/span&gt; item &lt;span class="pl-k"&gt;=&lt;/span&gt; pagingItem &lt;span class="pl-k"&gt;as?&lt;/span&gt; IndexedPagingItem &lt;span class="pl-k"&gt;else&lt;/span&gt; { &lt;span class="pl-k"&gt;return&lt;/span&gt; &lt;span class="pl-c1"&gt;nil&lt;/span&gt; }
    &lt;span class="pl-k"&gt;return&lt;/span&gt; &lt;span class="pl-c1"&gt;Item&lt;/span&gt;(&lt;span class="pl-c1"&gt;index&lt;/span&gt;: item.&lt;span class="pl-smi"&gt;index&lt;/span&gt; &lt;span class="pl-k"&gt;-&lt;/span&gt; &lt;span class="pl-c1"&gt;1&lt;/span&gt;)
  }

  &lt;span class="pl-k"&gt;func&lt;/span&gt; &lt;span class="pl-en"&gt;pagingViewController&lt;/span&gt;&amp;lt;&lt;span class="pl-c1"&gt;T&lt;/span&gt;&amp;gt;(&lt;span class="pl-en"&gt;_&lt;/span&gt; &lt;span class="pl-smi"&gt;pagingViewController&lt;/span&gt;: PagingViewController&amp;lt;T&amp;gt;, &lt;span class="pl-en"&gt;pagingItemAfterPagingItem&lt;/span&gt; &lt;span class="pl-smi"&gt;pagingItem&lt;/span&gt;: T) &lt;span class="pl-k"&gt;-&amp;gt;&lt;/span&gt; T&lt;span class="pl-k"&gt;?&lt;/span&gt; {
    &lt;span class="pl-k"&gt;guard&lt;/span&gt; &lt;span class="pl-k"&gt;let&lt;/span&gt; item &lt;span class="pl-k"&gt;=&lt;/span&gt; pagingItem &lt;span class="pl-k"&gt;as?&lt;/span&gt; IndexedPagingItem &lt;span class="pl-k"&gt;else&lt;/span&gt; { &lt;span class="pl-k"&gt;return&lt;/span&gt; &lt;span class="pl-c1"&gt;nil&lt;/span&gt; }
    &lt;span class="pl-k"&gt;return&lt;/span&gt; &lt;span class="pl-c1"&gt;Item&lt;/span&gt;(&lt;span class="pl-c1"&gt;index&lt;/span&gt;: item.&lt;span class="pl-smi"&gt;index&lt;/span&gt; &lt;span class="pl-k"&gt;+&lt;/span&gt; &lt;span class="pl-c1"&gt;1&lt;/span&gt;)
  }
}&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Then set the &lt;code&gt;infiniteDataSource&lt;/code&gt; property and select the initial item:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;let&lt;/span&gt; pagingViewController &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;PagingViewController&lt;/span&gt;()
pagingViewController.&lt;span class="pl-smi"&gt;infiniteDataSource&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;self&lt;/span&gt;
pagingViewController.&lt;span class="pl-c1"&gt;select&lt;/span&gt;(&lt;span class="pl-c1"&gt;pagingItem&lt;/span&gt;: &lt;span class="pl-c1"&gt;Item&lt;/span&gt;(&lt;span class="pl-c1"&gt;index&lt;/span&gt;: &lt;span class="pl-c1"&gt;0&lt;/span&gt;))&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;This pattern is very similar to the
&lt;a href="https://developer.apple.com/library/ios/documentation/UIKit/Reference/UIPageViewControllerClassReferenceClassRef/" rel="nofollow"&gt;UIPageViewControllerDataSource&lt;/a&gt;
protocol. The main difference is that instead of returning view controllers directly, you have to return an instance conforming to the &lt;code&gt;PagingItem&lt;/code&gt; protocol. Parchment will recursively call these methods for the selected &lt;code&gt;PagingItem&lt;/code&gt; until the available space is filled up.&lt;/p&gt;
&lt;p&gt;See: &lt;a href="Documentation/infinite-data-source.md"&gt;Using infinite data source&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-selecting-items" class="anchor" aria-hidden="true" href="#selecting-items"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Selecting items&lt;/h2&gt;
&lt;p&gt;You can select items programatically using:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;func&lt;/span&gt; &lt;span class="pl-en"&gt;select&lt;/span&gt;(&lt;span class="pl-smi"&gt;&lt;span class="pl-en"&gt;pagingItem&lt;/span&gt;&lt;/span&gt;: PagingItem, &lt;span class="pl-smi"&gt;&lt;span class="pl-en"&gt;animated&lt;/span&gt;&lt;/span&gt;: &lt;span class="pl-c1"&gt;Bool&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;false&lt;/span&gt;)&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Or if you have set the &lt;code&gt;dateSource&lt;/code&gt; property, you can select items based on their index:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;func&lt;/span&gt; &lt;span class="pl-en"&gt;select&lt;/span&gt;(&lt;span class="pl-smi"&gt;&lt;span class="pl-en"&gt;index&lt;/span&gt;&lt;/span&gt;: &lt;span class="pl-c1"&gt;Int&lt;/span&gt;, &lt;span class="pl-smi"&gt;&lt;span class="pl-en"&gt;animated&lt;/span&gt;&lt;/span&gt;: &lt;span class="pl-c1"&gt;Bool&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;false&lt;/span&gt;)&lt;/pre&gt;&lt;/div&gt;
&lt;h2&gt;&lt;a id="user-content-reload-data" class="anchor" aria-hidden="true" href="#reload-data"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Reload data&lt;/h2&gt;
&lt;p&gt;You can reload data using this method:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;func&lt;/span&gt; &lt;span class="pl-en"&gt;reloadData&lt;/span&gt;()&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;This will keep the previously selected item if it's still part of the
updated data. If not, it will select the first item in the list. It
will also reload the view controllers displayed in the page view
controller. If you only want to reload the menu items, you can use
this method:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;func&lt;/span&gt; &lt;span class="pl-en"&gt;reloadMenu&lt;/span&gt;()&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Calling &lt;code&gt;reloadData()&lt;/code&gt; will not work when using
&lt;code&gt;PagingViewControllerInfiniteDataSource&lt;/code&gt;, as we then need to know what
the initial item should be. In that case you should use this method:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;func&lt;/span&gt; &lt;span class="pl-en"&gt;reloadData&lt;/span&gt;(&lt;span class="pl-smi"&gt;&lt;span class="pl-en"&gt;around&lt;/span&gt;&lt;/span&gt;: PagingItem)&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;This will mark the given paging item as selected and generate new items around it.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-delegate" class="anchor" aria-hidden="true" href="#delegate"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Delegate&lt;/h2&gt;
&lt;p&gt;Parchment provides delegate methods for every step of the transition process through the &lt;code&gt;PagingViewControllerDelegate&lt;/code&gt; protocol. You can also use this to manually control the width of your menu items.&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;protocol&lt;/span&gt; &lt;span class="pl-en"&gt;PagingViewControllerDelegate&lt;/span&gt;: &lt;span class="pl-k"&gt;class&lt;/span&gt; {

  &lt;span class="pl-k"&gt;func&lt;/span&gt; &lt;span class="pl-en"&gt;pagingViewController&lt;/span&gt;&amp;lt;&lt;span class="pl-c1"&gt;T&lt;/span&gt;&amp;gt;(
    &lt;span class="pl-en"&gt;_&lt;/span&gt; &lt;span class="pl-smi"&gt;pagingViewController&lt;/span&gt;: PagingViewController&amp;lt;T&amp;gt;,
    &lt;span class="pl-en"&gt;isScrollingFromItem&lt;/span&gt; &lt;span class="pl-smi"&gt;currentPagingItem&lt;/span&gt;: T,
    &lt;span class="pl-en"&gt;toItem&lt;/span&gt; &lt;span class="pl-smi"&gt;upcomingPagingItem&lt;/span&gt;: T&lt;span class="pl-k"&gt;?&lt;/span&gt;,
    &lt;span class="pl-smi"&gt;&lt;span class="pl-en"&gt;startingViewController&lt;/span&gt;&lt;/span&gt;: UIViewController,
    &lt;span class="pl-smi"&gt;&lt;span class="pl-en"&gt;destinationViewController&lt;/span&gt;&lt;/span&gt;: UIViewController&lt;span class="pl-k"&gt;?&lt;/span&gt;,
    &lt;span class="pl-smi"&gt;&lt;span class="pl-en"&gt;progress&lt;/span&gt;&lt;/span&gt;: CGFloat)

  &lt;span class="pl-k"&gt;func&lt;/span&gt; &lt;span class="pl-en"&gt;pagingViewController&lt;/span&gt;&amp;lt;&lt;span class="pl-c1"&gt;T&lt;/span&gt;&amp;gt;(
    &lt;span class="pl-en"&gt;_&lt;/span&gt; &lt;span class="pl-smi"&gt;pagingViewController&lt;/span&gt;: PagingViewController&amp;lt;T&amp;gt;,
    &lt;span class="pl-en"&gt;willScrollToItem&lt;/span&gt; &lt;span class="pl-smi"&gt;pagingItem&lt;/span&gt;: T,
    &lt;span class="pl-smi"&gt;&lt;span class="pl-en"&gt;startingViewController&lt;/span&gt;&lt;/span&gt;: UIViewController,
    &lt;span class="pl-smi"&gt;&lt;span class="pl-en"&gt;destinationViewController&lt;/span&gt;&lt;/span&gt;: UIViewController)

  &lt;span class="pl-k"&gt;func&lt;/span&gt; &lt;span class="pl-en"&gt;pagingViewController&lt;/span&gt;&amp;lt;&lt;span class="pl-c1"&gt;T&lt;/span&gt;&amp;gt;(
    &lt;span class="pl-en"&gt;_&lt;/span&gt; &lt;span class="pl-smi"&gt;pagingViewController&lt;/span&gt;: PagingViewController&amp;lt;T&amp;gt;,
    &lt;span class="pl-en"&gt;didScrollToItem&lt;/span&gt; &lt;span class="pl-smi"&gt;pagingItem&lt;/span&gt;: T,
    &lt;span class="pl-smi"&gt;&lt;span class="pl-en"&gt;startingViewController&lt;/span&gt;&lt;/span&gt;: UIViewController&lt;span class="pl-k"&gt;?&lt;/span&gt;,
    &lt;span class="pl-smi"&gt;&lt;span class="pl-en"&gt;destinationViewController&lt;/span&gt;&lt;/span&gt;: UIViewController,
    &lt;span class="pl-smi"&gt;&lt;span class="pl-en"&gt;transitionSuccessful&lt;/span&gt;&lt;/span&gt;: &lt;span class="pl-c1"&gt;Bool&lt;/span&gt;)

  &lt;span class="pl-k"&gt;func&lt;/span&gt; &lt;span class="pl-en"&gt;pagingViewController&lt;/span&gt;&amp;lt;&lt;span class="pl-c1"&gt;T&lt;/span&gt;&amp;gt;(
    &lt;span class="pl-en"&gt;_&lt;/span&gt; &lt;span class="pl-smi"&gt;pagingViewController&lt;/span&gt;: PagingViewController&amp;lt;T&amp;gt;,
    &lt;span class="pl-en"&gt;widthForPagingItem&lt;/span&gt; &lt;span class="pl-smi"&gt;pagingItem&lt;/span&gt;: T,
    &lt;span class="pl-smi"&gt;&lt;span class="pl-en"&gt;isSelected&lt;/span&gt;&lt;/span&gt;: &lt;span class="pl-c1"&gt;Bool&lt;/span&gt;) &lt;span class="pl-k"&gt;-&amp;gt;&lt;/span&gt; CGFloat&lt;span class="pl-k"&gt;?&lt;/span&gt;
}&lt;/pre&gt;&lt;/div&gt;
&lt;h2&gt;&lt;a id="user-content-customization" class="anchor" aria-hidden="true" href="#customization"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Customization&lt;/h2&gt;
&lt;p&gt;Parchment is built to be very flexible. All customization is handled by the properties listed below. The menu items are displayed using &lt;code&gt;UICollectionView&lt;/code&gt;, so they can display pretty much whatever you want (see: &lt;a href="#%60menuItemClass%60"&gt;&lt;code&gt;menuItemClass&lt;/code&gt;&lt;/a&gt;). If you need any further customization you can even subclass the collection view layout.&lt;/p&gt;
&lt;h4&gt;&lt;a id="user-content-menuitemsize" class="anchor" aria-hidden="true" href="#menuitemsize"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;code&gt;menuItemSize&lt;/code&gt;&lt;/h4&gt;
&lt;p&gt;The size for each of the menu items.&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;enum&lt;/span&gt; &lt;span class="pl-en"&gt;PagingMenuItemSize&lt;/span&gt; {
  &lt;span class="pl-k"&gt;case&lt;/span&gt; &lt;span class="pl-c1"&gt;fixed&lt;/span&gt;(&lt;span class="pl-en"&gt;&lt;span class="pl-smi"&gt;width&lt;/span&gt;&lt;/span&gt;: CGFloat, &lt;span class="pl-en"&gt;&lt;span class="pl-smi"&gt;height&lt;/span&gt;&lt;/span&gt;: CGFloat)

  &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Tries to fit all menu items inside the bounds of the screen.&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;  &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; If the items can't fit, the items will scroll as normal and&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;  &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; set the menu items width to `minWidth`.&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;  &lt;span class="pl-k"&gt;case&lt;/span&gt; &lt;span class="pl-c1"&gt;sizeToFit&lt;/span&gt;(&lt;span class="pl-en"&gt;&lt;span class="pl-smi"&gt;minWidth&lt;/span&gt;&lt;/span&gt;: CGFloat, &lt;span class="pl-en"&gt;&lt;span class="pl-smi"&gt;height&lt;/span&gt;&lt;/span&gt;: CGFloat)
}&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;em&gt;Default: &lt;code&gt;.sizeToFit(minWidth: 150, height: 40)&lt;/code&gt;&lt;/em&gt;&lt;/p&gt;
&lt;h4&gt;&lt;a id="user-content-menuhorizontalalignment" class="anchor" aria-hidden="true" href="#menuhorizontalalignment"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;code&gt;menuHorizontalAlignment&lt;/code&gt;&lt;/h4&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;enum&lt;/span&gt; &lt;span class="pl-en"&gt;PagingMenuHorizontalAlignment&lt;/span&gt; {
  &lt;span class="pl-k"&gt;case&lt;/span&gt; &lt;span class="pl-c1"&gt;`default`&lt;/span&gt;

  &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Allows all paging items to be centered within the paging menu&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;  &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; when PagingMenuItemSize is .fixed and the sum of the widths&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;  &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; of all the paging items are less than the paging menu&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;  &lt;span class="pl-k"&gt;case&lt;/span&gt; &lt;span class="pl-c1"&gt;center&lt;/span&gt;
}&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;em&gt;Default: &lt;code&gt;.default&lt;/code&gt;&lt;/em&gt;&lt;/p&gt;
&lt;h4&gt;&lt;a id="user-content-menutransition" class="anchor" aria-hidden="true" href="#menutransition"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;code&gt;menuTransition&lt;/code&gt;&lt;/h4&gt;
&lt;p&gt;Determine the transition behaviour of menu items while scrolling the content.&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;enum&lt;/span&gt; &lt;span class="pl-en"&gt;PagingMenuTransition&lt;/span&gt; {
  &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Update scroll offset based on how much the content has&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;  &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; scrolled. Makes the menu items transition smoothly as you scroll.&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;  &lt;span class="pl-k"&gt;case&lt;/span&gt; &lt;span class="pl-c1"&gt;scrollAlongside&lt;/span&gt;

  &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Animate the menu item position after a transition has completed.&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;  &lt;span class="pl-k"&gt;case&lt;/span&gt; &lt;span class="pl-c1"&gt;animateAfter&lt;/span&gt;
}&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;em&gt;Default: &lt;code&gt;.scrollAlongside&lt;/code&gt;&lt;/em&gt;&lt;/p&gt;
&lt;h4&gt;&lt;a id="user-content-menuinteraction" class="anchor" aria-hidden="true" href="#menuinteraction"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;code&gt;menuInteraction&lt;/code&gt;&lt;/h4&gt;
&lt;p&gt;Determine how users can interact with the menu items.&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;enum&lt;/span&gt; &lt;span class="pl-en"&gt;PagingMenuInteraction&lt;/span&gt; {
  &lt;span class="pl-k"&gt;case&lt;/span&gt; &lt;span class="pl-c1"&gt;scrolling&lt;/span&gt;
  &lt;span class="pl-k"&gt;case&lt;/span&gt; &lt;span class="pl-c1"&gt;swipe&lt;/span&gt;
  &lt;span class="pl-k"&gt;case&lt;/span&gt; &lt;span class="pl-c1"&gt;none&lt;/span&gt;
}&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;em&gt;Default: &lt;code&gt;.scrolling&lt;/code&gt;&lt;/em&gt;&lt;/p&gt;
&lt;h4&gt;&lt;a id="user-content-menuitemclass" class="anchor" aria-hidden="true" href="#menuitemclass"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;code&gt;menuItemClass&lt;/code&gt;&lt;/h4&gt;
&lt;p&gt;The class type for the menu item. Override this if you want your own custom menu items.&lt;/p&gt;
&lt;p&gt;&lt;em&gt;Default: &lt;code&gt;PagingTitleCell.self&lt;/code&gt;&lt;/em&gt;&lt;/p&gt;
&lt;h4&gt;&lt;a id="user-content-menuitemspacing" class="anchor" aria-hidden="true" href="#menuitemspacing"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;code&gt;menuItemSpacing&lt;/code&gt;&lt;/h4&gt;
&lt;p&gt;The spacing between the menu items.&lt;/p&gt;
&lt;p&gt;&lt;em&gt;Default: &lt;code&gt;0&lt;/code&gt;&lt;/em&gt;&lt;/p&gt;
&lt;h4&gt;&lt;a id="user-content-menuinsets" class="anchor" aria-hidden="true" href="#menuinsets"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;code&gt;menuInsets&lt;/code&gt;&lt;/h4&gt;
&lt;p&gt;The insets around all of the menu items.&lt;/p&gt;
&lt;p&gt;&lt;em&gt;Default: &lt;code&gt;UIEdgeInsets()&lt;/code&gt;&lt;/em&gt;&lt;/p&gt;
&lt;h4&gt;&lt;a id="user-content-selectedscrollposition" class="anchor" aria-hidden="true" href="#selectedscrollposition"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;code&gt;selectedScrollPosition&lt;/code&gt;&lt;/h4&gt;
&lt;p&gt;The scroll position of the selected menu item:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;enum&lt;/span&gt; &lt;span class="pl-en"&gt;PagingSelectedScrollPosition&lt;/span&gt; {
  &lt;span class="pl-k"&gt;case&lt;/span&gt; &lt;span class="pl-c1"&gt;left&lt;/span&gt;
  &lt;span class="pl-k"&gt;case&lt;/span&gt; &lt;span class="pl-c1"&gt;right&lt;/span&gt;

  &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Centers the selected menu item where possible. If the item is&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;  &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; to the far left or right, it will not update the scroll position.&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;  &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Effectivly the same as .centeredHorizontally on UIScrollView.&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;  &lt;span class="pl-k"&gt;case&lt;/span&gt; &lt;span class="pl-c1"&gt;preferCentered&lt;/span&gt;
}&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;em&gt;Default: &lt;code&gt;.preferCentered&lt;/code&gt;&lt;/em&gt;&lt;/p&gt;
&lt;h4&gt;&lt;a id="user-content-indicatoroptions" class="anchor" aria-hidden="true" href="#indicatoroptions"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;code&gt;indicatorOptions&lt;/code&gt;&lt;/h4&gt;
&lt;p&gt;Add a indicator view to the selected menu item. The indicator width will be equal to the selected menu items width. Insets only apply horizontally.&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;enum&lt;/span&gt; &lt;span class="pl-en"&gt;PagingIndicatorOptions&lt;/span&gt; {
  &lt;span class="pl-k"&gt;case&lt;/span&gt; &lt;span class="pl-c1"&gt;hidden&lt;/span&gt;
  &lt;span class="pl-k"&gt;case&lt;/span&gt; &lt;span class="pl-c1"&gt;visible&lt;/span&gt;(
    &lt;span class="pl-en"&gt;&lt;span class="pl-smi"&gt;height&lt;/span&gt;&lt;/span&gt;: CGFloat,
    &lt;span class="pl-en"&gt;&lt;span class="pl-smi"&gt;zIndex&lt;/span&gt;&lt;/span&gt;: &lt;span class="pl-c1"&gt;Int&lt;/span&gt;,
    &lt;span class="pl-en"&gt;&lt;span class="pl-smi"&gt;spacing&lt;/span&gt;&lt;/span&gt;: UIEdgeInsets,
    &lt;span class="pl-en"&gt;&lt;span class="pl-smi"&gt;insets&lt;/span&gt;&lt;/span&gt;: UIEdgeInsets)
}&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;em&gt;Default:&lt;/em&gt;&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;.&lt;span class="pl-c1"&gt;visible&lt;/span&gt;(
  &lt;span class="pl-c1"&gt;height&lt;/span&gt;: &lt;span class="pl-c1"&gt;4&lt;/span&gt;,
  &lt;span class="pl-c1"&gt;zIndex&lt;/span&gt;: &lt;span class="pl-c1"&gt;Int&lt;/span&gt;.&lt;span class="pl-c1"&gt;max&lt;/span&gt;,
  &lt;span class="pl-c1"&gt;spacing&lt;/span&gt;: UIEdgeInsets.&lt;span class="pl-smi"&gt;zero&lt;/span&gt;,
  &lt;span class="pl-c1"&gt;insets&lt;/span&gt;: &lt;span class="pl-c1"&gt;UIEdgeInsets&lt;/span&gt;(&lt;span class="pl-c1"&gt;top&lt;/span&gt;: &lt;span class="pl-c1"&gt;0&lt;/span&gt;, &lt;span class="pl-c1"&gt;left&lt;/span&gt;: &lt;span class="pl-c1"&gt;8&lt;/span&gt;, &lt;span class="pl-c1"&gt;bottom&lt;/span&gt;: &lt;span class="pl-c1"&gt;0&lt;/span&gt;, &lt;span class="pl-c1"&gt;right&lt;/span&gt;: &lt;span class="pl-c1"&gt;8&lt;/span&gt;))&lt;/pre&gt;&lt;/div&gt;
&lt;h4&gt;&lt;a id="user-content-indicatorclass" class="anchor" aria-hidden="true" href="#indicatorclass"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;code&gt;indicatorClass&lt;/code&gt;&lt;/h4&gt;
&lt;p&gt;The class type for the indicator view. Override this if you want your use your own subclass of &lt;code&gt;PagingIndicatorView&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;&lt;em&gt;Default: &lt;code&gt;PagingIndicatorView.self&lt;/code&gt;&lt;/em&gt;&lt;/p&gt;
&lt;h4&gt;&lt;a id="user-content-indicatorcolor" class="anchor" aria-hidden="true" href="#indicatorcolor"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;code&gt;indicatorColor&lt;/code&gt;&lt;/h4&gt;
&lt;p&gt;The background color for the indicator view.&lt;/p&gt;
&lt;p&gt;&lt;em&gt;Default: &lt;code&gt;UIColor(red: 3/255, green: 125/255, blue: 233/255, alpha: 1)&lt;/code&gt;&lt;/em&gt;&lt;/p&gt;
&lt;h4&gt;&lt;a id="user-content-borderoptions" class="anchor" aria-hidden="true" href="#borderoptions"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;code&gt;borderOptions&lt;/code&gt;&lt;/h4&gt;
&lt;p&gt;Add a border at the bottom of the menu items. The border will be as wide as all the menu items. Insets only apply horizontally.&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;enum&lt;/span&gt; &lt;span class="pl-en"&gt;PagingBorderOptions&lt;/span&gt; {
  &lt;span class="pl-k"&gt;case&lt;/span&gt; &lt;span class="pl-c1"&gt;hidden&lt;/span&gt;
  &lt;span class="pl-k"&gt;case&lt;/span&gt; &lt;span class="pl-c1"&gt;visible&lt;/span&gt;(
    &lt;span class="pl-en"&gt;&lt;span class="pl-smi"&gt;height&lt;/span&gt;&lt;/span&gt;: CGFloat,
    &lt;span class="pl-en"&gt;&lt;span class="pl-smi"&gt;zIndex&lt;/span&gt;&lt;/span&gt;: &lt;span class="pl-c1"&gt;Int&lt;/span&gt;,
    &lt;span class="pl-en"&gt;&lt;span class="pl-smi"&gt;insets&lt;/span&gt;&lt;/span&gt;: UIEdgeInsets)
}&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;em&gt;Default:&lt;/em&gt;&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;.&lt;span class="pl-c1"&gt;visible&lt;/span&gt;(
  &lt;span class="pl-c1"&gt;height&lt;/span&gt;: &lt;span class="pl-c1"&gt;1&lt;/span&gt;,
  &lt;span class="pl-c1"&gt;zIndex&lt;/span&gt;: &lt;span class="pl-c1"&gt;Int&lt;/span&gt;.&lt;span class="pl-c1"&gt;max&lt;/span&gt; &lt;span class="pl-k"&gt;-&lt;/span&gt; &lt;span class="pl-c1"&gt;1&lt;/span&gt;,
  &lt;span class="pl-c1"&gt;insets&lt;/span&gt;: &lt;span class="pl-c1"&gt;UIEdgeInsets&lt;/span&gt;(&lt;span class="pl-c1"&gt;top&lt;/span&gt;: &lt;span class="pl-c1"&gt;0&lt;/span&gt;, &lt;span class="pl-c1"&gt;left&lt;/span&gt;: &lt;span class="pl-c1"&gt;8&lt;/span&gt;, &lt;span class="pl-c1"&gt;bottom&lt;/span&gt;: &lt;span class="pl-c1"&gt;0&lt;/span&gt;, &lt;span class="pl-c1"&gt;right&lt;/span&gt;: &lt;span class="pl-c1"&gt;8&lt;/span&gt;))&lt;/pre&gt;&lt;/div&gt;
&lt;h4&gt;&lt;a id="user-content-borderclass" class="anchor" aria-hidden="true" href="#borderclass"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;code&gt;borderClass&lt;/code&gt;&lt;/h4&gt;
&lt;p&gt;The class type for the border view. Override this if you want your use your own subclass of &lt;code&gt;PagingBorderView&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;&lt;em&gt;Default: &lt;code&gt;PagingBorderView.self&lt;/code&gt;&lt;/em&gt;&lt;/p&gt;
&lt;h4&gt;&lt;a id="user-content-bordercolor" class="anchor" aria-hidden="true" href="#bordercolor"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;code&gt;borderColor&lt;/code&gt;&lt;/h4&gt;
&lt;p&gt;The background color for the border view.&lt;/p&gt;
&lt;p&gt;&lt;em&gt;Default: &lt;code&gt;UIColor(white: 0.9, alpha: 1)&lt;/code&gt;&lt;/em&gt;&lt;/p&gt;
&lt;h4&gt;&lt;a id="user-content-includesafeareainsets" class="anchor" aria-hidden="true" href="#includesafeareainsets"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;code&gt;includeSafeAreaInsets&lt;/code&gt;&lt;/h4&gt;
&lt;p&gt;Updates the content inset for the menu items based on the &lt;code&gt;.safeAreaInsets&lt;/code&gt; property.&lt;/p&gt;
&lt;p&gt;&lt;em&gt;Default: &lt;code&gt;true&lt;/code&gt;&lt;/em&gt;&lt;/p&gt;
&lt;h4&gt;&lt;a id="user-content-font" class="anchor" aria-hidden="true" href="#font"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;code&gt;font&lt;/code&gt;&lt;/h4&gt;
&lt;p&gt;The font used for title label on the menu items.&lt;/p&gt;
&lt;p&gt;&lt;em&gt;Default: &lt;code&gt;UIFont.systemFont(ofSize: 15, weight: UIFont.Weight.medium)&lt;/code&gt;&lt;/em&gt;&lt;/p&gt;
&lt;h4&gt;&lt;a id="user-content-selectedfont" class="anchor" aria-hidden="true" href="#selectedfont"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;code&gt;selectedFont&lt;/code&gt;&lt;/h4&gt;
&lt;p&gt;The font used for title label on the currently selected menu item.&lt;/p&gt;
&lt;p&gt;&lt;em&gt;Default: &lt;code&gt;UIFont.systemFont(ofSize: 15, weight: UIFont.Weight.medium)&lt;/code&gt;&lt;/em&gt;&lt;/p&gt;
&lt;h4&gt;&lt;a id="user-content-textcolor" class="anchor" aria-hidden="true" href="#textcolor"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;code&gt;textColor&lt;/code&gt;&lt;/h4&gt;
&lt;p&gt;The color of the title label on the menu items.&lt;/p&gt;
&lt;p&gt;&lt;em&gt;Default: &lt;code&gt;UIColor.black&lt;/code&gt;&lt;/em&gt;&lt;/p&gt;
&lt;h4&gt;&lt;a id="user-content-selectedtextcolor" class="anchor" aria-hidden="true" href="#selectedtextcolor"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;code&gt;selectedTextColor&lt;/code&gt;&lt;/h4&gt;
&lt;p&gt;The text color for the currently selected menu item.&lt;/p&gt;
&lt;p&gt;&lt;em&gt;Default: &lt;code&gt;UIColor(red: 3/255, green: 125/255, blue: 233/255, alpha: 1)&lt;/code&gt;&lt;/em&gt;&lt;/p&gt;
&lt;h4&gt;&lt;a id="user-content-backgroundcolor" class="anchor" aria-hidden="true" href="#backgroundcolor"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;code&gt;backgroundColor&lt;/code&gt;&lt;/h4&gt;
&lt;p&gt;The background color for the menu items.&lt;/p&gt;
&lt;p&gt;&lt;em&gt;Default: &lt;code&gt;UIColor.white&lt;/code&gt;&lt;/em&gt;&lt;/p&gt;
&lt;h4&gt;&lt;a id="user-content-menubackgroundcolor" class="anchor" aria-hidden="true" href="#menubackgroundcolor"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;code&gt;menuBackgroundColor&lt;/code&gt;&lt;/h4&gt;
&lt;p&gt;The background color for the view behind the menu items.&lt;/p&gt;
&lt;p&gt;&lt;em&gt;Default: &lt;code&gt;UIColor.white&lt;/code&gt;&lt;/em&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-installation" class="anchor" aria-hidden="true" href="#installation"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Installation&lt;/h2&gt;
&lt;p&gt;Parchment will be compatible with the lastest public release of Swift.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-cocoapods" class="anchor" aria-hidden="true" href="#cocoapods"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;CocoaPods&lt;/h3&gt;
&lt;p&gt;Parchment is available through &lt;a href="https://cocoapods.org" rel="nofollow"&gt;CocoaPods&lt;/a&gt;. To install it, add the following to your &lt;code&gt;Podfile&lt;/code&gt;:&lt;/p&gt;
&lt;p&gt;&lt;code&gt;pod 'Parchment'&lt;/code&gt;&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-carthage" class="anchor" aria-hidden="true" href="#carthage"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Carthage&lt;/h3&gt;
&lt;p&gt;Parchment also supports &lt;a href="https://github.com/Carthage/Carthage"&gt;Carthage&lt;/a&gt;. To install it, you need to do the following steps:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Add &lt;code&gt;github "rechsteiner/Parchment"&lt;/code&gt; to your &lt;code&gt;Cartfile&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Run &lt;code&gt;carthage update&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Link &lt;code&gt;Parchment.framework&lt;/code&gt; with you target&lt;/li&gt;
&lt;li&gt;Add &lt;code&gt;$(SRCROOT)/Carthage/Build/iOS/Parchment.framework&lt;/code&gt; to your
&lt;code&gt;copy-frameworks&lt;/code&gt; script phase&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;See &lt;a href="https://github.com/Carthage/Carthage#adding-frameworks-to-an-application"&gt;this guide&lt;/a&gt; for more details on using Carthage.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-requirements" class="anchor" aria-hidden="true" href="#requirements"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Requirements&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;iOS 8.2+&lt;/li&gt;
&lt;li&gt;Xcode 8.0+&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-acknowledgements" class="anchor" aria-hidden="true" href="#acknowledgements"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Acknowledgements&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Parchment uses &lt;a href="https://github.com/emalyak/EMPageViewController"&gt;&lt;code&gt;EMPageViewController&lt;/code&gt;&lt;/a&gt; as a replacement for &lt;code&gt;UIPageViewController&lt;/code&gt;.&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-changelog" class="anchor" aria-hidden="true" href="#changelog"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Changelog&lt;/h2&gt;
&lt;p&gt;This can be found in the CHANGELOG file.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-licence" class="anchor" aria-hidden="true" href="#licence"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Licence&lt;/h2&gt;
&lt;p&gt;Parchment is released under the MIT license. See LICENSE for details.&lt;/p&gt;
&lt;/article&gt;&lt;/div&gt;</description><author>rechsteiner</author><guid isPermaLink="false">https://github.com/rechsteiner/Parchment</guid><pubDate>Fri, 08 Nov 2019 00:14:00 GMT</pubDate></item><item><title>SnapKit/SnapKit #15 in Swift, This week</title><link>https://github.com/SnapKit/SnapKit</link><description>&lt;p&gt;&lt;i&gt;A Swift Autolayout DSL for iOS &amp; OS X&lt;/i&gt;&lt;/p&gt;&lt;div id="readme" class="instapaper_body md" data-path="README.md"&gt;&lt;article class="markdown-body entry-content p-5" itemprop="text"&gt;&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="https://camo.githubusercontent.com/31e716ea5f9dcf84442b4a908c4751e39f45aa47/687474703a2f2f736e61706b69742e696f2f696d616765732f62616e6e65722e6a7067"&gt;&lt;img src="https://camo.githubusercontent.com/31e716ea5f9dcf84442b4a908c4751e39f45aa47/687474703a2f2f736e61706b69742e696f2f696d616765732f62616e6e65722e6a7067" alt="" data-canonical-src="http://snapkit.io/images/banner.jpg" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;SnapKit is a DSL to make Auto Layout easy on both iOS and OS X.&lt;/p&gt;
&lt;p&gt;&lt;a href="https://travis-ci.org/SnapKit/SnapKit" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/2ab439a59e5a46f229e91ecec434927671b7e9c6/68747470733a2f2f7472617669732d63692e6f72672f536e61704b69742f536e61704b69742e737667" alt="Build Status" data-canonical-src="https://travis-ci.org/SnapKit/SnapKit.svg" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://github.com/SnapKit/SnapKit"&gt;&lt;img src="https://camo.githubusercontent.com/bcf63f24b0dc5f44dfb8989d77e9cdda34d50e67/68747470733a2f2f696d672e736869656c64732e696f2f636f636f61706f64732f702f536e61704b69742e7376673f7374796c653d666c6174" alt="Platform" data-canonical-src="https://img.shields.io/cocoapods/p/SnapKit.svg?style=flat" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://cocoapods.org/pods/SnapKit" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/ee88940947e541dc532a92308f37e980f60d776d/68747470733a2f2f696d672e736869656c64732e696f2f636f636f61706f64732f762f536e61704b69742e737667" alt="Cocoapods Compatible" data-canonical-src="https://img.shields.io/cocoapods/v/SnapKit.svg" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://github.com/Carthage/Carthage"&gt;&lt;img src="https://camo.githubusercontent.com/3dc8a44a2c3f7ccd5418008d1295aae48466c141/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f43617274686167652d636f6d70617469626c652d3442433531442e7376673f7374796c653d666c6174" alt="Carthage compatible" data-canonical-src="https://img.shields.io/badge/Carthage-compatible-4BC51D.svg?style=flat" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h4&gt;&lt;a id="user-content-️-to-use-with-swift-4x-please-ensure-you-are-using--400-️" class="anchor" aria-hidden="true" href="#️-to-use-with-swift-4x-please-ensure-you-are-using--400-️"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;g-emoji class="g-emoji" alias="warning" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/26a0.png"&gt;⚠️&lt;/g-emoji&gt; &lt;strong&gt;To use with Swift 4.x please ensure you are using &amp;gt;= 4.0.0&lt;/strong&gt; &lt;g-emoji class="g-emoji" alias="warning" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/26a0.png"&gt;⚠️&lt;/g-emoji&gt;&lt;/h4&gt;
&lt;h4&gt;&lt;a id="user-content-️-to-use-with-swift-5x-please-ensure-you-are-using--500-️" class="anchor" aria-hidden="true" href="#️-to-use-with-swift-5x-please-ensure-you-are-using--500-️"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;g-emoji class="g-emoji" alias="warning" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/26a0.png"&gt;⚠️&lt;/g-emoji&gt; &lt;strong&gt;To use with Swift 5.x please ensure you are using &amp;gt;= 5.0.0&lt;/strong&gt; &lt;g-emoji class="g-emoji" alias="warning" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/26a0.png"&gt;⚠️&lt;/g-emoji&gt;&lt;/h4&gt;
&lt;h2&gt;&lt;a id="user-content-contents" class="anchor" aria-hidden="true" href="#contents"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Contents&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="#requirements"&gt;Requirements&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#migration-guides"&gt;Migration Guides&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#communication"&gt;Communication&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#installation"&gt;Installation&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#usage"&gt;Usage&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#credits"&gt;Credits&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#license"&gt;License&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-requirements" class="anchor" aria-hidden="true" href="#requirements"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Requirements&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;iOS 10.0+ / Mac OS X 10.12+ / tvOS 10.0+&lt;/li&gt;
&lt;li&gt;Xcode 10.0+&lt;/li&gt;
&lt;li&gt;Swift 4.0+&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-communication" class="anchor" aria-hidden="true" href="#communication"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Communication&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;If you &lt;strong&gt;need help&lt;/strong&gt;, use &lt;a href="http://stackoverflow.com/questions/tagged/snapkit" rel="nofollow"&gt;Stack Overflow&lt;/a&gt;. (Tag 'snapkit')&lt;/li&gt;
&lt;li&gt;If you'd like to &lt;strong&gt;ask a general question&lt;/strong&gt;, use &lt;a href="http://stackoverflow.com/questions/tagged/snapkit" rel="nofollow"&gt;Stack Overflow&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;If you &lt;strong&gt;found a bug&lt;/strong&gt;, open an issue.&lt;/li&gt;
&lt;li&gt;If you &lt;strong&gt;have a feature request&lt;/strong&gt;, open an issue.&lt;/li&gt;
&lt;li&gt;If you &lt;strong&gt;want to contribute&lt;/strong&gt;, submit a pull request.&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-installation" class="anchor" aria-hidden="true" href="#installation"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Installation&lt;/h2&gt;
&lt;h3&gt;&lt;a id="user-content-cocoapods" class="anchor" aria-hidden="true" href="#cocoapods"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;CocoaPods&lt;/h3&gt;
&lt;p&gt;&lt;a href="http://cocoapods.org" rel="nofollow"&gt;CocoaPods&lt;/a&gt; is a dependency manager for Cocoa projects. You can install it with the following command:&lt;/p&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt;$ gem install cocoapods&lt;/pre&gt;&lt;/div&gt;
&lt;blockquote&gt;
&lt;p&gt;CocoaPods 1.1.0+ is required to build SnapKit 4.0.0+.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;To integrate SnapKit into your Xcode project using CocoaPods, specify it in your &lt;code&gt;Podfile&lt;/code&gt;:&lt;/p&gt;
&lt;div class="highlight highlight-source-ruby"&gt;&lt;pre&gt;source &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;https://github.com/CocoaPods/Specs.git&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;
platform &lt;span class="pl-c1"&gt;:ios&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;10.0&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;
use_frameworks!

target &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;&amp;lt;Your Target Name&amp;gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt; &lt;span class="pl-k"&gt;do&lt;/span&gt;
    pod &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;SnapKit&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;~&amp;gt; 5.0.0&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;
&lt;span class="pl-k"&gt;end&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Then, run the following command:&lt;/p&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt;$ pod install&lt;/pre&gt;&lt;/div&gt;
&lt;h3&gt;&lt;a id="user-content-carthage" class="anchor" aria-hidden="true" href="#carthage"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Carthage&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://github.com/Carthage/Carthage"&gt;Carthage&lt;/a&gt; is a decentralized dependency manager that builds your dependencies and provides you with binary frameworks.&lt;/p&gt;
&lt;p&gt;You can install Carthage with &lt;a href="http://brew.sh/" rel="nofollow"&gt;Homebrew&lt;/a&gt; using the following command:&lt;/p&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt;$ brew update
$ brew install carthage&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;To integrate SnapKit into your Xcode project using Carthage, specify it in your &lt;code&gt;Cartfile&lt;/code&gt;:&lt;/p&gt;
&lt;pre lang="ogdl"&gt;&lt;code&gt;github "SnapKit/SnapKit" ~&amp;gt; 5.0.0
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Run &lt;code&gt;carthage update&lt;/code&gt; to build the framework and drag the built &lt;code&gt;SnapKit.framework&lt;/code&gt; into your Xcode project.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-manually" class="anchor" aria-hidden="true" href="#manually"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Manually&lt;/h3&gt;
&lt;p&gt;If you prefer not to use either of the aforementioned dependency managers, you can integrate SnapKit into your project manually.&lt;/p&gt;
&lt;hr&gt;
&lt;h2&gt;&lt;a id="user-content-usage" class="anchor" aria-hidden="true" href="#usage"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Usage&lt;/h2&gt;
&lt;h3&gt;&lt;a id="user-content-quick-start" class="anchor" aria-hidden="true" href="#quick-start"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Quick Start&lt;/h3&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;import&lt;/span&gt; &lt;span class="pl-en"&gt;SnapKit&lt;/span&gt;

&lt;span class="pl-k"&gt;class&lt;/span&gt; &lt;span class="pl-en"&gt;MyViewController&lt;/span&gt;: &lt;span class="pl-e"&gt;UIViewController &lt;/span&gt;{

    &lt;span class="pl-k"&gt;lazy&lt;/span&gt; &lt;span class="pl-k"&gt;var&lt;/span&gt; box &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;UIView&lt;/span&gt;()

    &lt;span class="pl-k"&gt;override&lt;/span&gt; &lt;span class="pl-k"&gt;func&lt;/span&gt; &lt;span class="pl-en"&gt;viewDidLoad&lt;/span&gt;() {
        &lt;span class="pl-c1"&gt;super&lt;/span&gt;.&lt;span class="pl-c1"&gt;viewDidLoad&lt;/span&gt;()

        &lt;span class="pl-c1"&gt;self&lt;/span&gt;.&lt;span class="pl-c1"&gt;view&lt;/span&gt;.&lt;span class="pl-c1"&gt;addSubview&lt;/span&gt;(box)
        box.&lt;span class="pl-smi"&gt;backgroundColor&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; .&lt;span class="pl-smi"&gt;green&lt;/span&gt;
        box.&lt;span class="pl-smi"&gt;snp&lt;/span&gt;.&lt;span class="pl-smi"&gt;makeConstraints&lt;/span&gt; { (make) &lt;span class="pl-k"&gt;-&amp;gt;&lt;/span&gt; &lt;span class="pl-c1"&gt;Void&lt;/span&gt; &lt;span class="pl-k"&gt;in&lt;/span&gt;
           make.&lt;span class="pl-smi"&gt;width&lt;/span&gt;.&lt;span class="pl-smi"&gt;height&lt;/span&gt;.&lt;span class="pl-c1"&gt;equalTo&lt;/span&gt;(&lt;span class="pl-c1"&gt;50&lt;/span&gt;)
           make.&lt;span class="pl-smi"&gt;center&lt;/span&gt;.&lt;span class="pl-c1"&gt;equalTo&lt;/span&gt;(&lt;span class="pl-c1"&gt;self&lt;/span&gt;.&lt;span class="pl-c1"&gt;view&lt;/span&gt;)
        }
    }

}&lt;/pre&gt;&lt;/div&gt;
&lt;h3&gt;&lt;a id="user-content-playground" class="anchor" aria-hidden="true" href="#playground"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Playground&lt;/h3&gt;
&lt;p&gt;You can try SnapKit in Playground.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Note:&lt;/strong&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;To try SnapKit in playground, open &lt;code&gt;SnapKit.xcworkspace&lt;/code&gt; and build SnapKit.framework for any simulator first.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3&gt;&lt;a id="user-content-resources" class="anchor" aria-hidden="true" href="#resources"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Resources&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://snapkit.io/docs/" rel="nofollow"&gt;Documentation&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://snapkit.io/faq/" rel="nofollow"&gt;F.A.Q.&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-credits" class="anchor" aria-hidden="true" href="#credits"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Credits&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Robert Payne (&lt;a href="https://twitter.com/robertjpayne" rel="nofollow"&gt;@robertjpayne&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;Many other contributors&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-license" class="anchor" aria-hidden="true" href="#license"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;License&lt;/h2&gt;
&lt;p&gt;SnapKit is released under the MIT license. See LICENSE for details.&lt;/p&gt;
&lt;/article&gt;&lt;/div&gt;</description><author>SnapKit</author><guid isPermaLink="false">https://github.com/SnapKit/SnapKit</guid><pubDate>Fri, 08 Nov 2019 00:15:00 GMT</pubDate></item><item><title>daltoniam/Starscream #16 in Swift, This week</title><link>https://github.com/daltoniam/Starscream</link><description>&lt;p&gt;&lt;i&gt;Websockets in swift for iOS and OSX&lt;/i&gt;&lt;/p&gt;&lt;div id="readme" class="instapaper_body md" data-path="README.md"&gt;&lt;article class="markdown-body entry-content p-5" itemprop="text"&gt;&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="https://raw.githubusercontent.com/daltoniam/starscream/assets/starscream.jpg"&gt;&lt;img src="https://raw.githubusercontent.com/daltoniam/starscream/assets/starscream.jpg" alt="starscream" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Starscream is a conforming WebSocket (&lt;a href="http://tools.ietf.org/html/rfc6455" rel="nofollow"&gt;RFC 6455&lt;/a&gt;) client library in Swift.&lt;/p&gt;
&lt;p&gt;Its Objective-C counterpart can be found here: &lt;a href="https://github.com/acmacalister/jetfire"&gt;Jetfire&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-features" class="anchor" aria-hidden="true" href="#features"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Features&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Conforms to all of the base &lt;a href="http://autobahn.ws/testsuite/" rel="nofollow"&gt;Autobahn test suite&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;Nonblocking. Everything happens in the background, thanks to GCD.&lt;/li&gt;
&lt;li&gt;TLS/WSS support.&lt;/li&gt;
&lt;li&gt;Compression Extensions support (&lt;a href="https://tools.ietf.org/html/rfc7692" rel="nofollow"&gt;RFC 7692&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;Simple concise codebase at just a few hundred LOC.&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-example" class="anchor" aria-hidden="true" href="#example"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Example&lt;/h2&gt;
&lt;p&gt;First thing is to import the framework. See the Installation instructions on how to add the framework to your project.&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;import&lt;/span&gt; &lt;span class="pl-en"&gt;Starscream&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Once imported, you can open a connection to your WebSocket server. Note that &lt;code&gt;socket&lt;/code&gt; is probably best as a property, so it doesn't get deallocated right after being setup.&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;socket &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;WebSocket&lt;/span&gt;(&lt;span class="pl-c1"&gt;url&lt;/span&gt;: &lt;span class="pl-c1"&gt;URL&lt;/span&gt;(&lt;span class="pl-c1"&gt;string&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;ws://localhost:8080/&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)&lt;span class="pl-k"&gt;!&lt;/span&gt;)
socket.&lt;span class="pl-smi"&gt;delegate&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;self&lt;/span&gt;
socket.&lt;span class="pl-c1"&gt;connect&lt;/span&gt;()&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;After you are connected, there are some delegate methods that we need to implement.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-websocketdidconnect" class="anchor" aria-hidden="true" href="#websocketdidconnect"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;websocketDidConnect&lt;/h3&gt;
&lt;p&gt;websocketDidConnect is called as soon as the client connects to the server.&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;func&lt;/span&gt; &lt;span class="pl-en"&gt;websocketDidConnect&lt;/span&gt;(&lt;span class="pl-smi"&gt;&lt;span class="pl-en"&gt;socket&lt;/span&gt;&lt;/span&gt;: WebSocketClient) {
    &lt;span class="pl-c1"&gt;print&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;websocket is connected&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
}&lt;/pre&gt;&lt;/div&gt;
&lt;h3&gt;&lt;a id="user-content-websocketdiddisconnect" class="anchor" aria-hidden="true" href="#websocketdiddisconnect"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;websocketDidDisconnect&lt;/h3&gt;
&lt;p&gt;websocketDidDisconnect is called as soon as the client is disconnected from the server.&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;func&lt;/span&gt; &lt;span class="pl-en"&gt;websocketDidDisconnect&lt;/span&gt;(&lt;span class="pl-smi"&gt;&lt;span class="pl-en"&gt;socket&lt;/span&gt;&lt;/span&gt;: WebSocketClient, &lt;span class="pl-smi"&gt;&lt;span class="pl-en"&gt;error&lt;/span&gt;&lt;/span&gt;: &lt;span class="pl-c1"&gt;Error&lt;/span&gt;&lt;span class="pl-k"&gt;?&lt;/span&gt;) {
	&lt;span class="pl-c1"&gt;print&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;websocket is disconnected: &lt;span class="pl-pse"&gt;\(&lt;/span&gt;&lt;span class="pl-s1"&gt;error&lt;span class="pl-k"&gt;?&lt;/span&gt;.&lt;span class="pl-smi"&gt;localizedDescription&lt;/span&gt;&lt;/span&gt;&lt;span class="pl-pse"&gt;&lt;span class="pl-s1"&gt;)&lt;/span&gt;&lt;/span&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
}&lt;/pre&gt;&lt;/div&gt;
&lt;h3&gt;&lt;a id="user-content-websocketdidreceivemessage" class="anchor" aria-hidden="true" href="#websocketdidreceivemessage"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;websocketDidReceiveMessage&lt;/h3&gt;
&lt;p&gt;websocketDidReceiveMessage is called when the client gets a text frame from the connection.&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;func&lt;/span&gt; &lt;span class="pl-en"&gt;websocketDidReceiveMessage&lt;/span&gt;(&lt;span class="pl-smi"&gt;&lt;span class="pl-en"&gt;socket&lt;/span&gt;&lt;/span&gt;: WebSocketClient, &lt;span class="pl-smi"&gt;&lt;span class="pl-en"&gt;text&lt;/span&gt;&lt;/span&gt;: &lt;span class="pl-c1"&gt;String&lt;/span&gt;) {
	&lt;span class="pl-c1"&gt;print&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;got some text: &lt;span class="pl-pse"&gt;\(&lt;/span&gt;&lt;span class="pl-s1"&gt;text&lt;/span&gt;&lt;span class="pl-pse"&gt;&lt;span class="pl-s1"&gt;)&lt;/span&gt;&lt;/span&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
}&lt;/pre&gt;&lt;/div&gt;
&lt;h3&gt;&lt;a id="user-content-websocketdidreceivedata" class="anchor" aria-hidden="true" href="#websocketdidreceivedata"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;websocketDidReceiveData&lt;/h3&gt;
&lt;p&gt;websocketDidReceiveData is called when the client gets a binary frame from the connection.&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;func&lt;/span&gt; &lt;span class="pl-en"&gt;websocketDidReceiveData&lt;/span&gt;(&lt;span class="pl-smi"&gt;&lt;span class="pl-en"&gt;socket&lt;/span&gt;&lt;/span&gt;: WebSocketClient, &lt;span class="pl-smi"&gt;&lt;span class="pl-en"&gt;data&lt;/span&gt;&lt;/span&gt;: Data) {
	&lt;span class="pl-c1"&gt;print&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;got some data: &lt;span class="pl-pse"&gt;\(&lt;/span&gt;&lt;span class="pl-s1"&gt;data.&lt;span class="pl-c1"&gt;count&lt;/span&gt;&lt;/span&gt;&lt;span class="pl-pse"&gt;&lt;span class="pl-s1"&gt;)&lt;/span&gt;&lt;/span&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
}&lt;/pre&gt;&lt;/div&gt;
&lt;h3&gt;&lt;a id="user-content-optional-websocketdidreceivepong-required-protocol-websocketpongdelegate" class="anchor" aria-hidden="true" href="#optional-websocketdidreceivepong-required-protocol-websocketpongdelegate"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Optional: websocketDidReceivePong &lt;em&gt;(required protocol: WebSocketPongDelegate)&lt;/em&gt;&lt;/h3&gt;
&lt;p&gt;websocketDidReceivePong is called when the client gets a pong response from the connection. You need to implement the WebSocketPongDelegate protocol and set an additional delegate, eg: &lt;code&gt; socket.pongDelegate = self&lt;/code&gt;&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;func&lt;/span&gt; &lt;span class="pl-en"&gt;websocketDidReceivePong&lt;/span&gt;(&lt;span class="pl-smi"&gt;&lt;span class="pl-en"&gt;socket&lt;/span&gt;&lt;/span&gt;: WebSocketClient, &lt;span class="pl-smi"&gt;&lt;span class="pl-en"&gt;data&lt;/span&gt;&lt;/span&gt;: Data&lt;span class="pl-k"&gt;?&lt;/span&gt;) {
	&lt;span class="pl-c1"&gt;print&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;Got pong! Maybe some data: &lt;span class="pl-pse"&gt;\(&lt;/span&gt;&lt;span class="pl-s1"&gt;data&lt;span class="pl-k"&gt;?&lt;/span&gt;.&lt;span class="pl-c1"&gt;count&lt;/span&gt;&lt;/span&gt;&lt;span class="pl-pse"&gt;&lt;span class="pl-s1"&gt;)&lt;/span&gt;&lt;/span&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
}&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Or you can use closures.&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;socket &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;WebSocket&lt;/span&gt;(&lt;span class="pl-c1"&gt;url&lt;/span&gt;: &lt;span class="pl-c1"&gt;URL&lt;/span&gt;(&lt;span class="pl-c1"&gt;string&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;ws://localhost:8080/&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)&lt;span class="pl-k"&gt;!&lt;/span&gt;)
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt;websocketDidConnect&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;socket.&lt;span class="pl-smi"&gt;onConnect&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; {
    &lt;span class="pl-c1"&gt;print&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;websocket is connected&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
}
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt;websocketDidDisconnect&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;socket.&lt;span class="pl-smi"&gt;onDisconnect&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; { (&lt;span class="pl-c1"&gt;error&lt;/span&gt;: &lt;span class="pl-c1"&gt;Error&lt;/span&gt;&lt;span class="pl-k"&gt;?&lt;/span&gt;) &lt;span class="pl-k"&gt;in&lt;/span&gt;
    &lt;span class="pl-c1"&gt;print&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;websocket is disconnected: &lt;span class="pl-pse"&gt;\(&lt;/span&gt;&lt;span class="pl-s1"&gt;error&lt;span class="pl-k"&gt;?&lt;/span&gt;.&lt;span class="pl-smi"&gt;localizedDescription&lt;/span&gt;&lt;/span&gt;&lt;span class="pl-pse"&gt;&lt;span class="pl-s1"&gt;)&lt;/span&gt;&lt;/span&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
}
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt;websocketDidReceiveMessage&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;socket.&lt;span class="pl-smi"&gt;onText&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; { (&lt;span class="pl-c1"&gt;text&lt;/span&gt;: &lt;span class="pl-c1"&gt;String&lt;/span&gt;) &lt;span class="pl-k"&gt;in&lt;/span&gt;
    &lt;span class="pl-c1"&gt;print&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;got some text: &lt;span class="pl-pse"&gt;\(&lt;/span&gt;&lt;span class="pl-s1"&gt;text&lt;/span&gt;&lt;span class="pl-pse"&gt;&lt;span class="pl-s1"&gt;)&lt;/span&gt;&lt;/span&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
}
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt;websocketDidReceiveData&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;socket.&lt;span class="pl-smi"&gt;onData&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; { (&lt;span class="pl-c1"&gt;data&lt;/span&gt;: Data) &lt;span class="pl-k"&gt;in&lt;/span&gt;
    &lt;span class="pl-c1"&gt;print&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;got some data: &lt;span class="pl-pse"&gt;\(&lt;/span&gt;&lt;span class="pl-s1"&gt;data.&lt;span class="pl-c1"&gt;count&lt;/span&gt;&lt;/span&gt;&lt;span class="pl-pse"&gt;&lt;span class="pl-s1"&gt;)&lt;/span&gt;&lt;/span&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
}
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt;you could do onPong as well.&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;socket.&lt;span class="pl-c1"&gt;connect&lt;/span&gt;()&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;One more: you can listen to socket connection and disconnection via notifications. Starscream posts &lt;code&gt;WebsocketDidConnectNotification&lt;/code&gt; and &lt;code&gt;WebsocketDidDisconnectNotification&lt;/code&gt;. You can find an &lt;code&gt;Error&lt;/code&gt; that caused the disconection by accessing &lt;code&gt;WebsocketDisconnectionErrorKeyName&lt;/code&gt; on notification &lt;code&gt;userInfo&lt;/code&gt;.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-the-delegate-methods-give-you-a-simple-way-to-handle-data-from-the-server-but-how-do-you-send-data" class="anchor" aria-hidden="true" href="#the-delegate-methods-give-you-a-simple-way-to-handle-data-from-the-server-but-how-do-you-send-data"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;The delegate methods give you a simple way to handle data from the server, but how do you send data?&lt;/h2&gt;
&lt;h3&gt;&lt;a id="user-content-write-a-binary-frame" class="anchor" aria-hidden="true" href="#write-a-binary-frame"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;write a binary frame&lt;/h3&gt;
&lt;p&gt;The writeData method gives you a simple way to send &lt;code&gt;Data&lt;/code&gt; (binary) data to the server.&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;socket.&lt;span class="pl-c1"&gt;write&lt;/span&gt;(&lt;span class="pl-c1"&gt;data&lt;/span&gt;: data) &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt;write some Data over the socket!&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h3&gt;&lt;a id="user-content-write-a-string-frame" class="anchor" aria-hidden="true" href="#write-a-string-frame"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;write a string frame&lt;/h3&gt;
&lt;p&gt;The writeString method is the same as writeData, but sends text/string.&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;socket.&lt;span class="pl-c1"&gt;write&lt;/span&gt;(&lt;span class="pl-c1"&gt;string&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;Hi Server!&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;) &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt;example on how to write text over the socket!&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h3&gt;&lt;a id="user-content-write-a-ping-frame" class="anchor" aria-hidden="true" href="#write-a-ping-frame"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;write a ping frame&lt;/h3&gt;
&lt;p&gt;The writePing method is the same as write, but sends a ping control frame.&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;socket.&lt;span class="pl-c1"&gt;write&lt;/span&gt;(&lt;span class="pl-c1"&gt;ping&lt;/span&gt;: &lt;span class="pl-c1"&gt;Data&lt;/span&gt;()) &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt;example on how to write a ping control frame over the socket!&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h3&gt;&lt;a id="user-content-write-a-pong-frame" class="anchor" aria-hidden="true" href="#write-a-pong-frame"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;write a pong frame&lt;/h3&gt;
&lt;p&gt;the writePong method is the same as writePing, but sends a pong control frame.&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;socket.&lt;span class="pl-c1"&gt;write&lt;/span&gt;(&lt;span class="pl-c1"&gt;pong&lt;/span&gt;: &lt;span class="pl-c1"&gt;Data&lt;/span&gt;()) &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt;example on how to write a pong control frame over the socket!&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Starscream will automatically respond to incoming &lt;code&gt;ping&lt;/code&gt; control frames so you do not need to manually send &lt;code&gt;pong&lt;/code&gt;s.&lt;/p&gt;
&lt;p&gt;However if for some reason you need to control this process you can turn off the automatic &lt;code&gt;ping&lt;/code&gt; response by disabling &lt;code&gt;respondToPingWithPong&lt;/code&gt;.&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;socket.&lt;span class="pl-smi"&gt;respondToPingWithPong&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;false&lt;/span&gt; &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt;Do not automaticaly respond to incoming pings with pongs.&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;In most cases you will not need to do this.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-disconnect" class="anchor" aria-hidden="true" href="#disconnect"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;disconnect&lt;/h3&gt;
&lt;p&gt;The disconnect method does what you would expect and closes the socket.&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;socket.&lt;span class="pl-c1"&gt;disconnect&lt;/span&gt;()&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;The socket can be forcefully closed, by specifying a timeout (in milliseconds). A timeout of zero will also close the socket immediately without waiting on the server.&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;socket.&lt;span class="pl-c1"&gt;disconnect&lt;/span&gt;(&lt;span class="pl-c1"&gt;forceTimeout&lt;/span&gt;: &lt;span class="pl-c1"&gt;10&lt;/span&gt;, &lt;span class="pl-c1"&gt;closeCode&lt;/span&gt;: CloseCode.&lt;span class="pl-smi"&gt;normal&lt;/span&gt;.&lt;span class="pl-c1"&gt;rawValue&lt;/span&gt;)&lt;/pre&gt;&lt;/div&gt;
&lt;h3&gt;&lt;a id="user-content-isconnected" class="anchor" aria-hidden="true" href="#isconnected"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;isConnected&lt;/h3&gt;
&lt;p&gt;Returns if the socket is connected or not.&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;if&lt;/span&gt; socket.&lt;span class="pl-smi"&gt;isConnected&lt;/span&gt; {
  &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; do cool stuff.&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;}&lt;/pre&gt;&lt;/div&gt;
&lt;h3&gt;&lt;a id="user-content-custom-headers" class="anchor" aria-hidden="true" href="#custom-headers"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Custom Headers&lt;/h3&gt;
&lt;p&gt;You can also override the default websocket headers with your own custom ones like so:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;var&lt;/span&gt; request &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;URLRequest&lt;/span&gt;(&lt;span class="pl-c1"&gt;url&lt;/span&gt;: &lt;span class="pl-c1"&gt;URL&lt;/span&gt;(&lt;span class="pl-c1"&gt;string&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;ws://localhost:8080/&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)&lt;span class="pl-k"&gt;!&lt;/span&gt;)
request.&lt;span class="pl-smi"&gt;timeoutInterval&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;5&lt;/span&gt;
request.&lt;span class="pl-c1"&gt;setValue&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;someother protocols&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-c1"&gt;forHTTPHeaderField&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;Sec-WebSocket-Protocol&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
request.&lt;span class="pl-c1"&gt;setValue&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;14&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-c1"&gt;forHTTPHeaderField&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;Sec-WebSocket-Version&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
request.&lt;span class="pl-c1"&gt;setValue&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;Everything is Awesome!&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-c1"&gt;forHTTPHeaderField&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;My-Awesome-Header&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
&lt;span class="pl-k"&gt;let&lt;/span&gt; socket &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;WebSocket&lt;/span&gt;(&lt;span class="pl-c1"&gt;request&lt;/span&gt;: request)&lt;/pre&gt;&lt;/div&gt;
&lt;h3&gt;&lt;a id="user-content-custom-http-method" class="anchor" aria-hidden="true" href="#custom-http-method"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Custom HTTP Method&lt;/h3&gt;
&lt;p&gt;Your server may use a different HTTP method when connecting to the websocket:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;var&lt;/span&gt; request &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;URLRequest&lt;/span&gt;(&lt;span class="pl-c1"&gt;url&lt;/span&gt;: &lt;span class="pl-c1"&gt;URL&lt;/span&gt;(&lt;span class="pl-c1"&gt;string&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;ws://localhost:8080/&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)&lt;span class="pl-k"&gt;!&lt;/span&gt;)
request.&lt;span class="pl-smi"&gt;httpMethod&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;POST&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;
request.&lt;span class="pl-smi"&gt;timeoutInterval&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;5&lt;/span&gt;
&lt;span class="pl-k"&gt;let&lt;/span&gt; socket &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;WebSocket&lt;/span&gt;(&lt;span class="pl-c1"&gt;request&lt;/span&gt;: request)&lt;/pre&gt;&lt;/div&gt;
&lt;h3&gt;&lt;a id="user-content-protocols" class="anchor" aria-hidden="true" href="#protocols"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Protocols&lt;/h3&gt;
&lt;p&gt;If you need to specify a protocol, simple add it to the init:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt;chat and superchat are the example protocols here&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;socket &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;WebSocket&lt;/span&gt;(&lt;span class="pl-c1"&gt;url&lt;/span&gt;: &lt;span class="pl-c1"&gt;URL&lt;/span&gt;(&lt;span class="pl-c1"&gt;string&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;ws://localhost:8080/&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)&lt;span class="pl-k"&gt;!&lt;/span&gt;, &lt;span class="pl-c1"&gt;protocols&lt;/span&gt;: [&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;chat&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;,&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;superchat&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;])
socket.&lt;span class="pl-smi"&gt;delegate&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;self&lt;/span&gt;
socket.&lt;span class="pl-c1"&gt;connect&lt;/span&gt;()&lt;/pre&gt;&lt;/div&gt;
&lt;h3&gt;&lt;a id="user-content-self-signed-ssl" class="anchor" aria-hidden="true" href="#self-signed-ssl"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Self Signed SSL&lt;/h3&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;socket &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;WebSocket&lt;/span&gt;(&lt;span class="pl-c1"&gt;url&lt;/span&gt;: &lt;span class="pl-c1"&gt;URL&lt;/span&gt;(&lt;span class="pl-c1"&gt;string&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;ws://localhost:8080/&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)&lt;span class="pl-k"&gt;!&lt;/span&gt;, &lt;span class="pl-c1"&gt;protocols&lt;/span&gt;: [&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;chat&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;,&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;superchat&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;])

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt;set this if you want to ignore SSL cert validation, so a self signed SSL certificate can be used.&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;socket.&lt;span class="pl-smi"&gt;disableSSLCertValidation&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;true&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h3&gt;&lt;a id="user-content-ssl-pinning" class="anchor" aria-hidden="true" href="#ssl-pinning"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;SSL Pinning&lt;/h3&gt;
&lt;p&gt;SSL Pinning is also supported in Starscream.&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;socket &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;WebSocket&lt;/span&gt;(&lt;span class="pl-c1"&gt;url&lt;/span&gt;: &lt;span class="pl-c1"&gt;URL&lt;/span&gt;(&lt;span class="pl-c1"&gt;string&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;ws://localhost:8080/&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)&lt;span class="pl-k"&gt;!&lt;/span&gt;, &lt;span class="pl-c1"&gt;protocols&lt;/span&gt;: [&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;chat&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;,&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;superchat&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;])
&lt;span class="pl-k"&gt;let&lt;/span&gt; data &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-k"&gt;...&lt;/span&gt; &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt;load your certificate from disk&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;socket.&lt;span class="pl-smi"&gt;security&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;SSLSecurity&lt;/span&gt;(&lt;span class="pl-c1"&gt;certs&lt;/span&gt;: [&lt;span class="pl-c1"&gt;SSLCert&lt;/span&gt;(&lt;span class="pl-c1"&gt;data&lt;/span&gt;: data)], &lt;span class="pl-c1"&gt;usePublicKeys&lt;/span&gt;: &lt;span class="pl-c1"&gt;true&lt;/span&gt;)
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt;socket.security = SSLSecurity() //uses the .cer files in your app's bundle&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;You load either a &lt;code&gt;Data&lt;/code&gt; blob of your certificate or you can use a &lt;code&gt;SecKeyRef&lt;/code&gt; if you have a public key you want to use. The &lt;code&gt;usePublicKeys&lt;/code&gt; bool is whether to use the certificates for validation or the public keys. The public keys will be extracted from the certificates automatically if &lt;code&gt;usePublicKeys&lt;/code&gt; is choosen.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-ssl-cipher-suites" class="anchor" aria-hidden="true" href="#ssl-cipher-suites"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;SSL Cipher Suites&lt;/h3&gt;
&lt;p&gt;To use an SSL encrypted connection, you need to tell Starscream about the cipher suites your server supports.&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;socket &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;WebSocket&lt;/span&gt;(&lt;span class="pl-c1"&gt;url&lt;/span&gt;: &lt;span class="pl-c1"&gt;URL&lt;/span&gt;(&lt;span class="pl-c1"&gt;string&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;wss://localhost:8080/&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)&lt;span class="pl-k"&gt;!&lt;/span&gt;, &lt;span class="pl-c1"&gt;protocols&lt;/span&gt;: [&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;chat&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;,&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;superchat&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;])

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Set enabled cipher suites to AES 256 and AES 128&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;socket.&lt;span class="pl-smi"&gt;enabledSSLCipherSuites&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; [TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384, TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256] &lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;If you don't know which cipher suites are supported by your server, you can try pointing &lt;a href="https://www.ssllabs.com/ssltest/" rel="nofollow"&gt;SSL Labs&lt;/a&gt; at it and checking the results.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-compression-extensions" class="anchor" aria-hidden="true" href="#compression-extensions"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Compression Extensions&lt;/h3&gt;
&lt;p&gt;Compression Extensions (&lt;a href="https://tools.ietf.org/html/rfc7692" rel="nofollow"&gt;RFC 7692&lt;/a&gt;) is supported in Starscream.  Compression is enabled by default, however compression will only be used if it is supported by the server as well.  You may enable or disable compression via the &lt;code&gt;.enableCompression&lt;/code&gt; property:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;socket &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;WebSocket&lt;/span&gt;(&lt;span class="pl-c1"&gt;url&lt;/span&gt;: &lt;span class="pl-c1"&gt;URL&lt;/span&gt;(&lt;span class="pl-c1"&gt;string&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;ws://localhost:8080/&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)&lt;span class="pl-k"&gt;!&lt;/span&gt;)
socket.&lt;span class="pl-smi"&gt;enableCompression&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;false&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Compression should be disabled if your application is transmitting already-compressed, random, or other uncompressable data.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-custom-queue" class="anchor" aria-hidden="true" href="#custom-queue"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Custom Queue&lt;/h3&gt;
&lt;p&gt;A custom queue can be specified when delegate methods are called. By default &lt;code&gt;DispatchQueue.main&lt;/code&gt; is used, thus making all delegate methods calls run on the main thread. It is important to note that all WebSocket processing is done on a background thread, only the delegate method calls are changed when modifying the queue. The actual processing is always on a background thread and will not pause your app.&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;socket &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;WebSocket&lt;/span&gt;(&lt;span class="pl-c1"&gt;url&lt;/span&gt;: &lt;span class="pl-c1"&gt;URL&lt;/span&gt;(&lt;span class="pl-c1"&gt;string&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;ws://localhost:8080/&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)&lt;span class="pl-k"&gt;!&lt;/span&gt;, &lt;span class="pl-c1"&gt;protocols&lt;/span&gt;: [&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;chat&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;,&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;superchat&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;])
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt;create a custom queue&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;socket.&lt;span class="pl-smi"&gt;callbackQueue&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;DispatchQueue&lt;/span&gt;(&lt;span class="pl-c1"&gt;label&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;com.vluxe.starscream.myapp&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)&lt;/pre&gt;&lt;/div&gt;
&lt;h2&gt;&lt;a id="user-content-example-project" class="anchor" aria-hidden="true" href="#example-project"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Example Project&lt;/h2&gt;
&lt;p&gt;Check out the SimpleTest project in the examples directory to see how to setup a simple connection to a WebSocket server.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-requirements" class="anchor" aria-hidden="true" href="#requirements"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Requirements&lt;/h2&gt;
&lt;p&gt;Starscream works with iOS 7/OSX 10.9 or above. It is recommended to use iOS 8/10.10 or above for CocoaPods/framework support. To use Starscream with a project targeting iOS 7, you must include all Swift files directly in your project.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-installation" class="anchor" aria-hidden="true" href="#installation"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Installation&lt;/h2&gt;
&lt;h3&gt;&lt;a id="user-content-cocoapods" class="anchor" aria-hidden="true" href="#cocoapods"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;CocoaPods&lt;/h3&gt;
&lt;p&gt;Check out &lt;a href="http://cocoapods.org/" rel="nofollow"&gt;Get Started&lt;/a&gt; tab on &lt;a href="http://cocoapods.org/" rel="nofollow"&gt;cocoapods.org&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;To use Starscream in your project add the following 'Podfile' to your project&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;source 'https://github.com/CocoaPods/Specs.git'
platform :ios, '9.0'
use_frameworks!

pod 'Starscream', '~&amp;gt; 3.0.2'
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Then run:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;pod install
&lt;/code&gt;&lt;/pre&gt;
&lt;h3&gt;&lt;a id="user-content-carthage" class="anchor" aria-hidden="true" href="#carthage"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Carthage&lt;/h3&gt;
&lt;p&gt;Check out the &lt;a href="https://github.com/Carthage/Carthage"&gt;Carthage&lt;/a&gt; docs on how to add a install. The &lt;code&gt;Starscream&lt;/code&gt; framework is already setup with shared schemes.&lt;/p&gt;
&lt;p&gt;&lt;a href="https://github.com/Carthage/Carthage#adding-frameworks-to-an-application"&gt;Carthage Install&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;You can install Carthage with &lt;a href="http://brew.sh/" rel="nofollow"&gt;Homebrew&lt;/a&gt; using the following command:&lt;/p&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt;$ brew update
$ brew install carthage&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;To integrate Starscream into your Xcode project using Carthage, specify it in your &lt;code&gt;Cartfile&lt;/code&gt;:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;github "daltoniam/Starscream" &amp;gt;= 3.0.2
&lt;/code&gt;&lt;/pre&gt;
&lt;h3&gt;&lt;a id="user-content-accio" class="anchor" aria-hidden="true" href="#accio"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Accio&lt;/h3&gt;
&lt;p&gt;Check out the &lt;a href="https://github.com/JamitLabs/Accio"&gt;Accio&lt;/a&gt; docs on how to add a install.&lt;/p&gt;
&lt;p&gt;Add the following to your Package.swift:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;.&lt;span class="pl-c1"&gt;package&lt;/span&gt;(&lt;span class="pl-c1"&gt;url&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;https://github.com/daltoniam/Starscream.git&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, .&lt;span class="pl-c1"&gt;upToNextMajor&lt;/span&gt;(&lt;span class="pl-c1"&gt;from&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;3.1.0&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)),&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Next, add &lt;code&gt;Starscream&lt;/code&gt; to your App targets dependencies like so:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;.&lt;span class="pl-c1"&gt;target&lt;/span&gt;(
    &lt;span class="pl-c1"&gt;name&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;App&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;,
    &lt;span class="pl-c1"&gt;dependencies&lt;/span&gt;: [
        &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;Starscream&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;,
    ]
),&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Then run &lt;code&gt;accio update&lt;/code&gt;.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-rogue" class="anchor" aria-hidden="true" href="#rogue"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Rogue&lt;/h3&gt;
&lt;p&gt;First see the &lt;a href="https://github.com/acmacalister/Rogue"&gt;installation docs&lt;/a&gt; for how to install Rogue.&lt;/p&gt;
&lt;p&gt;To install Starscream run the command below in the directory you created the rogue file.&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;rogue add https://github.com/daltoniam/Starscream
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Next open the &lt;code&gt;libs&lt;/code&gt; folder and add the &lt;code&gt;Starscream.xcodeproj&lt;/code&gt; to your Xcode project. Once that is complete, in your "Build Phases" add the &lt;code&gt;Starscream.framework&lt;/code&gt; to your "Link Binary with Libraries" phase. Make sure to add the &lt;code&gt;libs&lt;/code&gt; folder to your &lt;code&gt;.gitignore&lt;/code&gt; file.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-swift-package-manager" class="anchor" aria-hidden="true" href="#swift-package-manager"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Swift Package Manager&lt;/h3&gt;
&lt;p&gt;The &lt;a href="https://swift.org/package-manager/" rel="nofollow"&gt;Swift Package Manager&lt;/a&gt; is a tool for automating the distribution of Swift code and is integrated into the &lt;code&gt;swift&lt;/code&gt; compiler.&lt;/p&gt;
&lt;p&gt;Once you have your Swift package set up, adding Starscream as a dependency is as easy as adding it to the &lt;code&gt;dependencies&lt;/code&gt; value of your &lt;code&gt;Package.swift&lt;/code&gt;.&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;dependencies&lt;span class="pl-k"&gt;:&lt;/span&gt; [
    .&lt;span class="pl-c1"&gt;Package&lt;/span&gt;(&lt;span class="pl-c1"&gt;url&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;https://github.com/daltoniam/Starscream.git&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-c1"&gt;majorVersion&lt;/span&gt;: &lt;span class="pl-c1"&gt;3&lt;/span&gt;)
]&lt;/pre&gt;&lt;/div&gt;
&lt;h3&gt;&lt;a id="user-content-other" class="anchor" aria-hidden="true" href="#other"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Other&lt;/h3&gt;
&lt;p&gt;Simply grab the framework (either via git submodule or another package manager).&lt;/p&gt;
&lt;p&gt;Add the &lt;code&gt;Starscream.xcodeproj&lt;/code&gt; to your Xcode project. Once that is complete, in your "Build Phases" add the &lt;code&gt;Starscream.framework&lt;/code&gt; to your "Link Binary with Libraries" phase.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-add-copy-frameworks-phase" class="anchor" aria-hidden="true" href="#add-copy-frameworks-phase"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Add Copy Frameworks Phase&lt;/h3&gt;
&lt;p&gt;If you are running this in an OSX app or on a physical iOS device you will need to make sure you add the &lt;code&gt;Starscream.framework&lt;/code&gt; to be included in your app bundle. To do this, in Xcode, navigate to the target configuration window by clicking on the blue project icon, and selecting the application target under the "Targets" heading in the sidebar. In the tab bar at the top of that window, open the "Build Phases" panel. Expand the "Link Binary with Libraries" group, and add &lt;code&gt;Starscream.framework&lt;/code&gt;. Click on the + button at the top left of the panel and select "New Copy Files Phase". Rename this new phase to "Copy Frameworks", set the "Destination" to "Frameworks", and add &lt;code&gt;Starscream.framework&lt;/code&gt; respectively.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-websocketadvanceddelegate" class="anchor" aria-hidden="true" href="#websocketadvanceddelegate"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;WebSocketAdvancedDelegate&lt;/h2&gt;
&lt;p&gt;The advanced delegate acts just like the simpler delegate but provides some additional information on the connection and incoming frames.&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;socket.&lt;span class="pl-smi"&gt;advancedDelegate&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;self&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;In most cases you do not need the extra info and should use the normal delegate.&lt;/p&gt;
&lt;h4&gt;&lt;a id="user-content-websocketdidreceivemessage-1" class="anchor" aria-hidden="true" href="#websocketdidreceivemessage-1"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;websocketDidReceiveMessage&lt;/h4&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;func&lt;/span&gt; &lt;span class="pl-en"&gt;websocketDidReceiveMessage&lt;/span&gt;(&lt;span class="pl-smi"&gt;&lt;span class="pl-en"&gt;socket&lt;/span&gt;&lt;/span&gt;: WebSocketClient, &lt;span class="pl-smi"&gt;&lt;span class="pl-en"&gt;text&lt;/span&gt;&lt;/span&gt;: &lt;span class="pl-c1"&gt;String&lt;/span&gt;, &lt;span class="pl-smi"&gt;&lt;span class="pl-en"&gt;response&lt;/span&gt;&lt;/span&gt;: WebSocket.WSResponse) {
	&lt;span class="pl-c1"&gt;print&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;got some text: &lt;span class="pl-pse"&gt;\(&lt;/span&gt;&lt;span class="pl-s1"&gt;text&lt;/span&gt;&lt;span class="pl-pse"&gt;&lt;span class="pl-s1"&gt;)&lt;/span&gt;&lt;/span&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
	&lt;span class="pl-c1"&gt;print&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;First frame for this message arrived on &lt;span class="pl-pse"&gt;\(&lt;/span&gt;&lt;span class="pl-s1"&gt;response.&lt;span class="pl-smi"&gt;firstFrame&lt;/span&gt;&lt;/span&gt;&lt;span class="pl-pse"&gt;&lt;span class="pl-s1"&gt;)&lt;/span&gt;&lt;/span&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
}&lt;/pre&gt;&lt;/div&gt;
&lt;h4&gt;&lt;a id="user-content-websocketdidreceivedata-1" class="anchor" aria-hidden="true" href="#websocketdidreceivedata-1"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;websocketDidReceiveData&lt;/h4&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;func&lt;/span&gt; &lt;span class="pl-en"&gt;websocketDidReceiveData&lt;/span&gt;(&lt;span class="pl-smi"&gt;&lt;span class="pl-en"&gt;socket&lt;/span&gt;&lt;/span&gt;: WebSocketClient, &lt;span class="pl-smi"&gt;&lt;span class="pl-en"&gt;data&lt;/span&gt;&lt;/span&gt;: Date, &lt;span class="pl-smi"&gt;&lt;span class="pl-en"&gt;response&lt;/span&gt;&lt;/span&gt;: WebSocket.WSResponse) {
	&lt;span class="pl-c1"&gt;print&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;got some data it long: &lt;span class="pl-pse"&gt;\(&lt;/span&gt;&lt;span class="pl-s1"&gt;data.&lt;span class="pl-c1"&gt;count&lt;/span&gt;&lt;/span&gt;&lt;span class="pl-pse"&gt;&lt;span class="pl-s1"&gt;)&lt;/span&gt;&lt;/span&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
	&lt;span class="pl-c1"&gt;print&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;A total of &lt;span class="pl-pse"&gt;\(&lt;/span&gt;&lt;span class="pl-s1"&gt;response.&lt;span class="pl-smi"&gt;frameCount&lt;/span&gt;&lt;/span&gt;&lt;span class="pl-pse"&gt;&lt;span class="pl-s1"&gt;)&lt;/span&gt;&lt;/span&gt; frames were used to send this data&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
}&lt;/pre&gt;&lt;/div&gt;
&lt;h4&gt;&lt;a id="user-content-websockethttpupgrade" class="anchor" aria-hidden="true" href="#websockethttpupgrade"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;websocketHttpUpgrade&lt;/h4&gt;
&lt;p&gt;These methods are called when the HTTP upgrade request is sent and when the response returns.&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;func&lt;/span&gt;  &lt;span class="pl-en"&gt;websocketHttpUpgrade&lt;/span&gt;(&lt;span class="pl-smi"&gt;&lt;span class="pl-en"&gt;socket&lt;/span&gt;&lt;/span&gt;: WebSocketClient, &lt;span class="pl-smi"&gt;&lt;span class="pl-en"&gt;request&lt;/span&gt;&lt;/span&gt;: CFHTTPMessage) {
	&lt;span class="pl-c1"&gt;print&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;the http request was sent we can check the raw http if we need to&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
}&lt;/pre&gt;&lt;/div&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;func&lt;/span&gt;  &lt;span class="pl-en"&gt;websocketHttpUpgrade&lt;/span&gt;(&lt;span class="pl-smi"&gt;&lt;span class="pl-en"&gt;socket&lt;/span&gt;&lt;/span&gt;: WebSocketClient, &lt;span class="pl-smi"&gt;&lt;span class="pl-en"&gt;response&lt;/span&gt;&lt;/span&gt;: CFHTTPMessage) {
	&lt;span class="pl-c1"&gt;print&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;the http response has returned.&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
}&lt;/pre&gt;&lt;/div&gt;
&lt;h2&gt;&lt;a id="user-content-swift-versions" class="anchor" aria-hidden="true" href="#swift-versions"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Swift versions&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Swift 4.2 - 3.0.6&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-known-issues" class="anchor" aria-hidden="true" href="#known-issues"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;KNOWN ISSUES&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;WatchOS does not have the the CFNetwork String constants to modify the stream's SSL behavior. It will be the default Foundation SSL behavior. This means watchOS CANNOT use &lt;code&gt;SSLCiphers&lt;/code&gt;,  &lt;code&gt;disableSSLCertValidation&lt;/code&gt;, or SSL pinning. All these values set on watchOS will do nothing.&lt;/li&gt;
&lt;li&gt;Linux does not have the security framework, so it CANNOT use SSL pinning or &lt;code&gt;SSLCiphers&lt;/code&gt; either.&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-todos" class="anchor" aria-hidden="true" href="#todos"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;TODOs&lt;/h2&gt;
&lt;ul class="contains-task-list"&gt;
&lt;li class="task-list-item"&gt;&lt;input type="checkbox" id="" disabled="" class="task-list-item-checkbox"&gt; Add Unit Tests - Local WebSocket server that runs against Autobahn&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-license" class="anchor" aria-hidden="true" href="#license"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;License&lt;/h2&gt;
&lt;p&gt;Starscream is licensed under the Apache v2 License.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-contact" class="anchor" aria-hidden="true" href="#contact"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Contact&lt;/h2&gt;
&lt;h3&gt;&lt;a id="user-content-dalton-cherry" class="anchor" aria-hidden="true" href="#dalton-cherry"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Dalton Cherry&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/daltoniam"&gt;https://github.com/daltoniam&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://twitter.com/daltoniam" rel="nofollow"&gt;http://twitter.com/daltoniam&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://daltoniam.com" rel="nofollow"&gt;http://daltoniam.com&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;&lt;a id="user-content-austin-cherry" class="anchor" aria-hidden="true" href="#austin-cherry"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Austin Cherry&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/acmacalister"&gt;https://github.com/acmacalister&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://twitter.com/acmacalister" rel="nofollow"&gt;http://twitter.com/acmacalister&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://austincherry.me" rel="nofollow"&gt;http://austincherry.me&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/article&gt;&lt;/div&gt;</description><author>daltoniam</author><guid isPermaLink="false">https://github.com/daltoniam/Starscream</guid><pubDate>Fri, 08 Nov 2019 00:16:00 GMT</pubDate></item><item><title>bizz84/SwiftyStoreKit #17 in Swift, This week</title><link>https://github.com/bizz84/SwiftyStoreKit</link><description>&lt;p&gt;&lt;i&gt;Lightweight In App Purchases Swift framework for iOS 8.0+, tvOS 9.0+ and macOS 10.10+ ⛺&lt;/i&gt;&lt;/p&gt;&lt;div id="readme" class="instapaper_body md" data-path="README.md"&gt;&lt;article class="markdown-body entry-content p-5" itemprop="text"&gt;&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="https://github.com/bizz84/SwiftyStoreKit/raw/master/SwiftyStoreKit-logo.png"&gt;&lt;img src="https://github.com/bizz84/SwiftyStoreKit/raw/master/SwiftyStoreKit-logo.png" alt="" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href="http://mit-license.org" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/d0e25b09a82bc4bfde9f1e048a092752eebbb4f3/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f6c6963656e73652d4d49542d626c75652e7376673f7374796c653d666c6174" alt="License" data-canonical-src="https://img.shields.io/badge/license-MIT-blue.svg?style=flat" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://developer.apple.com/resources/" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/87502612c38173fbb802c8972702aa563672eff6/687474703a2f2f696d672e736869656c64732e696f2f62616467652f706c6174666f726d2d696f732532302537432532306d61636f7325323025374325323074766f732d6c69676874677265792e7376673f7374796c653d666c6174" alt="Platform" data-canonical-src="http://img.shields.io/badge/platform-ios%20%7C%20macos%20%7C%20tvos-lightgrey.svg?style=flat" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://developer.apple.com/swift" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/440edeeeb3b2c1b118c6184fd929167587dea9a2/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f73776966742d352e302d6f72616e67652e737667" alt="Language" data-canonical-src="https://img.shields.io/badge/swift-5.0-orange.svg" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://travis-ci.org/bizz84/SwiftyStoreKit" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/11af336c76b68ba40d48196ad0b21c835e894e7e/68747470733a2f2f696d672e736869656c64732e696f2f7472617669732f62697a7a38342f53776966747953746f72654b69742e7376673f7374796c653d666c6174" alt="Build" data-canonical-src="https://img.shields.io/travis/bizz84/SwiftyStoreKit.svg?style=flat" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://github.com/bizz84/SwiftyStoreKit/issues"&gt;&lt;img src="https://camo.githubusercontent.com/79006b70c2f71dd73c470757cf23acdf4e022b0f/68747470733a2f2f696d672e736869656c64732e696f2f6769746875622f6973737565732f62697a7a38342f53776966747953746f72654b69742e7376673f7374796c653d666c6174" alt="Issues" data-canonical-src="https://img.shields.io/github/issues/bizz84/SwiftyStoreKit.svg?style=flat" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://join.slack.com/t/swiftystorekit/shared_invite/enQtNjkzNTg5NTMyMTgwLTcyZGIzMTg0MWFmMTQyMDYxNDcyYWNhOTlmNjUyM2E0OTllNjE2ZDJiNDI0ZDAzMWU2Mzc3Nzk1YzJmMTE2NjI" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/855c26c0525b36c5f372603ba02714923a03bcc6/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f536c61636b2d4a6f696e2d677265656e2e7376673f7374796c653d666c6174" alt="Slack" data-canonical-src="https://img.shields.io/badge/Slack-Join-green.svg?style=flat" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="http://cocoadocs.org/docsets/SwiftyStoreKit/" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/8884a81f121edea92ce9cf66305be896dca38b62/687474703a2f2f696d672e736869656c64732e696f2f636f636f61706f64732f762f53776966747953746f72654b69742e7376673f7374796c653d666c6174" alt="Cocoapod" data-canonical-src="http://img.shields.io/cocoapods/v/SwiftyStoreKit.svg?style=flat" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://github.com/Carthage/Carthage"&gt;&lt;img src="https://camo.githubusercontent.com/3dc8a44a2c3f7ccd5418008d1295aae48466c141/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f43617274686167652d636f6d70617469626c652d3442433531442e7376673f7374796c653d666c6174" alt="Carthage compatible" data-canonical-src="https://img.shields.io/badge/Carthage-compatible-4BC51D.svg?style=flat" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://github.com/JamitLabs/Accio"&gt;&lt;img src="https://camo.githubusercontent.com/e502cdc2b27c1f2b2590f061d37b984ba3957c26/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f416363696f2d737570706f727465642d3041374346352e7376673f7374796c653d666c6174" alt="Accio supported" data-canonical-src="https://img.shields.io/badge/Accio-supported-0A7CF5.svg?style=flat" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="http://twitter.com/biz84" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/e8a92c20aa32e95b5213d670aab53180829342c1/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f747769747465722d4062697a38342d626c75652e7376673f6d61784167653d32353932303030" alt="Twitter" data-canonical-src="https://img.shields.io/badge/twitter-@biz84-blue.svg?maxAge=2592000" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;SwiftyStoreKit is a lightweight In App Purchases framework for iOS 8.0+, tvOS 9.0+ and macOS 10.10+.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-preview" class="anchor" aria-hidden="true" href="#preview"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Preview&lt;/h3&gt;
&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="https://github.com/bizz84/SwiftyStoreKit/raw/master/Screenshots/Preview.jpg"&gt;&lt;img src="https://github.com/bizz84/SwiftyStoreKit/raw/master/Screenshots/Preview.jpg" width="320" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-join-on-slack" class="anchor" aria-hidden="true" href="#join-on-slack"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Join on Slack&lt;/h3&gt;
&lt;p&gt;SwiftyStoreKit is on Slack. &lt;a href="https://join.slack.com/t/swiftystorekit/shared_invite/enQtNjkzNTg5NTMyMTgwLTcyZGIzMTg0MWFmMTQyMDYxNDcyYWNhOTlmNjUyM2E0OTllNjE2ZDJiNDI0ZDAzMWU2Mzc3Nzk1YzJmMTE2NjI" rel="nofollow"&gt;Join here&lt;/a&gt;.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-maintainers-wanted" class="anchor" aria-hidden="true" href="#maintainers-wanted"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Maintainers Wanted&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;The author no longer maintaining this project actively. If you'd like to become a maintainer, &lt;a href="https://join.slack.com/t/swiftystorekit/shared_invite/enQtNjkzNTg5NTMyMTgwLTcyZGIzMTg0MWFmMTQyMDYxNDcyYWNhOTlmNjUyM2E0OTllNjE2ZDJiNDI0ZDAzMWU2Mzc3Nzk1YzJmMTE2NjI" rel="nofollow"&gt;join the Slack workspace&lt;/a&gt; and enter the &lt;a href="https://app.slack.com/client/TL2JYQ458/CLG62K26A/details/" rel="nofollow"&gt;#maintainers&lt;/a&gt; channel.&lt;/li&gt;
&lt;li&gt;Going forward, SwiftyStoreKit should be made for the community, by the community.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;More info here:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://medium.com/@biz84/the-future-of-swiftystorekit-maintainers-needed-f60d01572c91" rel="nofollow"&gt;The Future of SwiftyStoreKit: Maintainers Wanted&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-content" class="anchor" aria-hidden="true" href="#content"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Content&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="#installation"&gt;Installation&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="#cocoapods"&gt;CocoaPods&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#carthage"&gt;Carthage&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="#features"&gt;Features&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#contributing"&gt;Contributing&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#app-startup"&gt;App startup&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="#complete-transactions"&gt;Complete Transactions&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="#purchases"&gt;Purchases&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="#retrieve-products-info"&gt;Retrieve products info&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#purchase-a-product-given-a-product-id"&gt;Purchase a product (given a product id)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#purchase-a-product-given-a-skproduct"&gt;Purchase a product (given a SKProduct)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#handle-purchases-started-on-the-app-store-ios-11"&gt;Handle purchases started on the App Store (iOS 11)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#restore-previous-purchases"&gt;Restore previous purchases&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#downloading-content-hosted-with-apple"&gt;Downloading content hosted with Apple&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="#receipt-verification"&gt;Receipt verification&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="#retrieve-local-receipt-encrypted"&gt;Retrieve local receipt (encrypted)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#fetch-receipt-encrypted"&gt;Fetch receipt (encrypted)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#verify-receipt"&gt;Verify Receipt&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="#verifying-purchases-and-subscriptions"&gt;Verifying purchases and subscriptions&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="#verify-purchase"&gt;Verify Purchase&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#verify-subscription"&gt;Verify Subscription&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#subscription-groups"&gt;Subscription Groups&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="#notes"&gt;Notes&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#change-log"&gt;Change Log&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#sample-code"&gt;Sample Code&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#essential-reading"&gt;Essential Reading&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="#troubleshooting"&gt;Troubleshooting&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="#video-tutorials"&gt;Video Tutorials&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#payment-flows-implementation-details"&gt;Payment flows: implementation details&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#credits"&gt;Credits&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#apps-using-swiftystorekit"&gt;Apps using SwiftyStoreKit&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#license"&gt;License&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-installation" class="anchor" aria-hidden="true" href="#installation"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Installation&lt;/h2&gt;
&lt;h3&gt;&lt;a id="user-content-cocoapods" class="anchor" aria-hidden="true" href="#cocoapods"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;CocoaPods&lt;/h3&gt;
&lt;p&gt;SwiftyStoreKit can be installed as a &lt;a href="https://cocoapods.org/" rel="nofollow"&gt;CocoaPod&lt;/a&gt; and builds as a Swift framework. To install, include this in your Podfile.&lt;/p&gt;
&lt;div class="highlight highlight-source-ruby"&gt;&lt;pre&gt;use_frameworks!

pod &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;SwiftyStoreKit&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Once installed, just &lt;code&gt;import SwiftyStoreKit&lt;/code&gt; in your classes and you're good to go.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-carthage" class="anchor" aria-hidden="true" href="#carthage"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Carthage&lt;/h3&gt;
&lt;p&gt;To integrate SwiftyStoreKit into your Xcode project using &lt;a href="https://github.com/Carthage/Carthage"&gt;Carthage&lt;/a&gt;, specify it in your Cartfile:&lt;/p&gt;
&lt;pre lang="ogdl"&gt;&lt;code&gt;github "bizz84/SwiftyStoreKit"
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;strong&gt;NOTE&lt;/strong&gt;: Please ensure that you have the &lt;a href="https://github.com/Carthage/Carthage/releases"&gt;latest&lt;/a&gt; Carthage installed.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-swift-package-manager" class="anchor" aria-hidden="true" href="#swift-package-manager"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Swift Package Manager&lt;/h3&gt;
&lt;p&gt;You can add SwiftyStoreKit as an SPM dependency using this URL: &lt;code&gt;https://github.com/bizz84/SwiftyStoreKit.git&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;If you are using Xcode 11 or later, click &lt;code&gt;File&lt;/code&gt;, &lt;code&gt;Swift Packages&lt;/code&gt;, &lt;code&gt;Add Package Dependency...&lt;/code&gt; and specify the URL there.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-features" class="anchor" aria-hidden="true" href="#features"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Features&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Super easy to use block based API&lt;/li&gt;
&lt;li&gt;Support for consumable, non-consumable in-app purchases&lt;/li&gt;
&lt;li&gt;Support for free, auto-renewable and non-renewing subscriptions&lt;/li&gt;
&lt;li&gt;Support for in-app purchases started in the App Store (iOS 11)&lt;/li&gt;
&lt;li&gt;Remote receipt verification&lt;/li&gt;
&lt;li&gt;Verify purchases, subscriptions, subscription groups&lt;/li&gt;
&lt;li&gt;Downloading content hosted with Apple&lt;/li&gt;
&lt;li&gt;iOS, tvOS and macOS compatible&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-contributing" class="anchor" aria-hidden="true" href="#contributing"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Contributing&lt;/h2&gt;
&lt;h4&gt;&lt;a id="user-content-got-issues--pull-requests--want-to-contribute-read-here" class="anchor" aria-hidden="true" href="#got-issues--pull-requests--want-to-contribute-read-here"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Got issues / pull requests / want to contribute? &lt;a href="CONTRIBUTING.md"&gt;Read here&lt;/a&gt;.&lt;/h4&gt;
&lt;h2&gt;&lt;a id="user-content-app-startup" class="anchor" aria-hidden="true" href="#app-startup"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;App startup&lt;/h2&gt;
&lt;h3&gt;&lt;a id="user-content-complete-transactions" class="anchor" aria-hidden="true" href="#complete-transactions"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Complete Transactions&lt;/h3&gt;
&lt;p&gt;Apple recommends to register a transaction observer &lt;a href="https://developer.apple.com/library/ios/technotes/tn2387/_index.html" rel="nofollow"&gt;as soon as the app starts&lt;/a&gt;:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Adding your app's observer at launch ensures that it will persist during all launches of your app, thus allowing your app to receive all the payment queue notifications.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;SwiftyStoreKit supports this by calling &lt;code&gt;completeTransactions()&lt;/code&gt; when the app starts:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;func&lt;/span&gt; &lt;span class="pl-en"&gt;application&lt;/span&gt;(&lt;span class="pl-smi"&gt;&lt;span class="pl-en"&gt;application&lt;/span&gt;&lt;/span&gt;: UIApplication, &lt;span class="pl-en"&gt;didFinishLaunchingWithOptions&lt;/span&gt; &lt;span class="pl-smi"&gt;launchOptions&lt;/span&gt;: [NSObject: &lt;span class="pl-c1"&gt;AnyObject&lt;/span&gt;]&lt;span class="pl-k"&gt;?&lt;/span&gt;) &lt;span class="pl-k"&gt;-&amp;gt;&lt;/span&gt; &lt;span class="pl-c1"&gt;Bool&lt;/span&gt; {
	&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; see notes below for the meaning of Atomic / Non-Atomic&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;	SwiftyStoreKit.&lt;span class="pl-c1"&gt;completeTransactions&lt;/span&gt;(&lt;span class="pl-c1"&gt;atomically&lt;/span&gt;: &lt;span class="pl-c1"&gt;true&lt;/span&gt;) { purchases &lt;span class="pl-k"&gt;in&lt;/span&gt;
	    &lt;span class="pl-k"&gt;for&lt;/span&gt; purchase &lt;span class="pl-k"&gt;in&lt;/span&gt; purchases {
	        &lt;span class="pl-k"&gt;switch&lt;/span&gt; purchase.&lt;span class="pl-smi"&gt;transaction&lt;/span&gt;.&lt;span class="pl-smi"&gt;transactionState&lt;/span&gt; {
	        &lt;span class="pl-k"&gt;case&lt;/span&gt; .&lt;span class="pl-smi"&gt;purchased&lt;/span&gt;, .&lt;span class="pl-smi"&gt;restored&lt;/span&gt;&lt;span class="pl-k"&gt;:&lt;/span&gt;
	            &lt;span class="pl-k"&gt;if&lt;/span&gt; purchase.&lt;span class="pl-smi"&gt;needsFinishTransaction&lt;/span&gt; {
	                &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Deliver content from server, then:&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;	                SwiftyStoreKit.&lt;span class="pl-c1"&gt;finishTransaction&lt;/span&gt;(purchase.&lt;span class="pl-smi"&gt;transaction&lt;/span&gt;)
	            }
	            &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Unlock content&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;	        &lt;span class="pl-k"&gt;case&lt;/span&gt; .&lt;span class="pl-smi"&gt;failed&lt;/span&gt;, .&lt;span class="pl-smi"&gt;purchasing&lt;/span&gt;, .&lt;span class="pl-smi"&gt;deferred&lt;/span&gt;&lt;span class="pl-k"&gt;:&lt;/span&gt;
	            &lt;span class="pl-k"&gt;break&lt;/span&gt; &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; do nothing&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;	        }
	    }
	}
    &lt;span class="pl-k"&gt;return&lt;/span&gt; &lt;span class="pl-c1"&gt;true&lt;/span&gt;
}&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;If there are any pending transactions at this point, these will be reported by the completion block so that the app state and UI can be updated.&lt;/p&gt;
&lt;p&gt;If there are no pending transactions, the completion block will &lt;strong&gt;not&lt;/strong&gt; be called.&lt;/p&gt;
&lt;p&gt;Note that &lt;code&gt;completeTransactions()&lt;/code&gt; &lt;strong&gt;should only be called once&lt;/strong&gt; in your code, in &lt;code&gt;application(:didFinishLaunchingWithOptions:)&lt;/code&gt;.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-purchases" class="anchor" aria-hidden="true" href="#purchases"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Purchases&lt;/h2&gt;
&lt;h3&gt;&lt;a id="user-content-retrieve-products-info" class="anchor" aria-hidden="true" href="#retrieve-products-info"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Retrieve products info&lt;/h3&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;SwiftyStoreKit.&lt;span class="pl-c1"&gt;retrieveProductsInfo&lt;/span&gt;([&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;com.musevisions.SwiftyStoreKit.Purchase1&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;]) { result &lt;span class="pl-k"&gt;in&lt;/span&gt;
    &lt;span class="pl-k"&gt;if&lt;/span&gt; &lt;span class="pl-k"&gt;let&lt;/span&gt; product &lt;span class="pl-k"&gt;=&lt;/span&gt; result.&lt;span class="pl-smi"&gt;retrievedProducts&lt;/span&gt;.&lt;span class="pl-c1"&gt;first&lt;/span&gt; {
        &lt;span class="pl-k"&gt;let&lt;/span&gt; priceString &lt;span class="pl-k"&gt;=&lt;/span&gt; product.&lt;span class="pl-smi"&gt;localizedPrice&lt;/span&gt;&lt;span class="pl-k"&gt;!&lt;/span&gt;
        &lt;span class="pl-c1"&gt;print&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;Product: &lt;span class="pl-pse"&gt;\(&lt;/span&gt;&lt;span class="pl-s1"&gt;product.&lt;span class="pl-smi"&gt;localizedDescription&lt;/span&gt;&lt;/span&gt;&lt;span class="pl-pse"&gt;&lt;span class="pl-s1"&gt;)&lt;/span&gt;&lt;/span&gt;, price: &lt;span class="pl-pse"&gt;\(&lt;/span&gt;&lt;span class="pl-s1"&gt;priceString&lt;/span&gt;&lt;span class="pl-pse"&gt;&lt;span class="pl-s1"&gt;)&lt;/span&gt;&lt;/span&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
    }
    &lt;span class="pl-k"&gt;else&lt;/span&gt; &lt;span class="pl-k"&gt;if&lt;/span&gt; &lt;span class="pl-k"&gt;let&lt;/span&gt; invalidProductId &lt;span class="pl-k"&gt;=&lt;/span&gt; result.&lt;span class="pl-smi"&gt;invalidProductIDs&lt;/span&gt;.&lt;span class="pl-c1"&gt;first&lt;/span&gt; {
        &lt;span class="pl-c1"&gt;print&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;Invalid product identifier: &lt;span class="pl-pse"&gt;\(&lt;/span&gt;&lt;span class="pl-s1"&gt;invalidProductId&lt;/span&gt;&lt;span class="pl-pse"&gt;&lt;span class="pl-s1"&gt;)&lt;/span&gt;&lt;/span&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
    }
    &lt;span class="pl-k"&gt;else&lt;/span&gt; {
        &lt;span class="pl-c1"&gt;print&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;Error: &lt;span class="pl-pse"&gt;\(&lt;/span&gt;&lt;span class="pl-s1"&gt;result.&lt;span class="pl-c1"&gt;error&lt;/span&gt;&lt;/span&gt;&lt;span class="pl-pse"&gt;&lt;span class="pl-s1"&gt;)&lt;/span&gt;&lt;/span&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
    }
}&lt;/pre&gt;&lt;/div&gt;
&lt;h3&gt;&lt;a id="user-content-purchase-a-product-given-a-product-id" class="anchor" aria-hidden="true" href="#purchase-a-product-given-a-product-id"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Purchase a product (given a product id)&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Atomic&lt;/strong&gt;: to be used when the content is delivered immediately.&lt;/li&gt;
&lt;/ul&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;SwiftyStoreKit.&lt;span class="pl-c1"&gt;purchaseProduct&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;com.musevisions.SwiftyStoreKit.Purchase1&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-c1"&gt;quantity&lt;/span&gt;: &lt;span class="pl-c1"&gt;1&lt;/span&gt;, &lt;span class="pl-c1"&gt;atomically&lt;/span&gt;: &lt;span class="pl-c1"&gt;true&lt;/span&gt;) { result &lt;span class="pl-k"&gt;in&lt;/span&gt;
    &lt;span class="pl-k"&gt;switch&lt;/span&gt; result {
    &lt;span class="pl-k"&gt;case&lt;/span&gt; .&lt;span class="pl-c1"&gt;success&lt;/span&gt;(&lt;span class="pl-k"&gt;let&lt;/span&gt; purchase)&lt;span class="pl-k"&gt;:&lt;/span&gt;
        &lt;span class="pl-c1"&gt;print&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;Purchase Success: &lt;span class="pl-pse"&gt;\(&lt;/span&gt;&lt;span class="pl-s1"&gt;purchase.&lt;span class="pl-smi"&gt;productId&lt;/span&gt;&lt;/span&gt;&lt;span class="pl-pse"&gt;&lt;span class="pl-s1"&gt;)&lt;/span&gt;&lt;/span&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
    &lt;span class="pl-k"&gt;case&lt;/span&gt; .&lt;span class="pl-c1"&gt;error&lt;/span&gt;(&lt;span class="pl-k"&gt;let&lt;/span&gt; error)&lt;span class="pl-k"&gt;:&lt;/span&gt;
        &lt;span class="pl-k"&gt;switch&lt;/span&gt; error.&lt;span class="pl-smi"&gt;code&lt;/span&gt; {
        &lt;span class="pl-k"&gt;case&lt;/span&gt; .&lt;span class="pl-smi"&gt;unknown&lt;/span&gt;&lt;span class="pl-k"&gt;:&lt;/span&gt; &lt;span class="pl-c1"&gt;print&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;Unknown error. Please contact support&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
        &lt;span class="pl-k"&gt;case&lt;/span&gt; .&lt;span class="pl-smi"&gt;clientInvalid&lt;/span&gt;&lt;span class="pl-k"&gt;:&lt;/span&gt; &lt;span class="pl-c1"&gt;print&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;Not allowed to make the payment&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
        &lt;span class="pl-k"&gt;case&lt;/span&gt; .&lt;span class="pl-smi"&gt;paymentCancelled&lt;/span&gt;&lt;span class="pl-k"&gt;:&lt;/span&gt; &lt;span class="pl-k"&gt;break&lt;/span&gt;
        &lt;span class="pl-k"&gt;case&lt;/span&gt; .&lt;span class="pl-smi"&gt;paymentInvalid&lt;/span&gt;&lt;span class="pl-k"&gt;:&lt;/span&gt; &lt;span class="pl-c1"&gt;print&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;The purchase identifier was invalid&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
        &lt;span class="pl-k"&gt;case&lt;/span&gt; .&lt;span class="pl-smi"&gt;paymentNotAllowed&lt;/span&gt;&lt;span class="pl-k"&gt;:&lt;/span&gt; &lt;span class="pl-c1"&gt;print&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;The device is not allowed to make the payment&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
        &lt;span class="pl-k"&gt;case&lt;/span&gt; .&lt;span class="pl-smi"&gt;storeProductNotAvailable&lt;/span&gt;&lt;span class="pl-k"&gt;:&lt;/span&gt; &lt;span class="pl-c1"&gt;print&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;The product is not available in the current storefront&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
        &lt;span class="pl-k"&gt;case&lt;/span&gt; .&lt;span class="pl-smi"&gt;cloudServicePermissionDenied&lt;/span&gt;&lt;span class="pl-k"&gt;:&lt;/span&gt; &lt;span class="pl-c1"&gt;print&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;Access to cloud service information is not allowed&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
        &lt;span class="pl-k"&gt;case&lt;/span&gt; .&lt;span class="pl-smi"&gt;cloudServiceNetworkConnectionFailed&lt;/span&gt;&lt;span class="pl-k"&gt;:&lt;/span&gt; &lt;span class="pl-c1"&gt;print&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;Could not connect to the network&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
        &lt;span class="pl-k"&gt;case&lt;/span&gt; .&lt;span class="pl-smi"&gt;cloudServiceRevoked&lt;/span&gt;&lt;span class="pl-k"&gt;:&lt;/span&gt; &lt;span class="pl-c1"&gt;print&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;User has revoked permission to use this cloud service&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
        &lt;span class="pl-k"&gt;default&lt;/span&gt;&lt;span class="pl-k"&gt;:&lt;/span&gt; &lt;span class="pl-c1"&gt;print&lt;/span&gt;((error &lt;span class="pl-k"&gt;as&lt;/span&gt; NSError).&lt;span class="pl-smi"&gt;localizedDescription&lt;/span&gt;)
        }
    }
}&lt;/pre&gt;&lt;/div&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Non-Atomic&lt;/strong&gt;: to be used when the content is delivered by the server.&lt;/li&gt;
&lt;/ul&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;SwiftyStoreKit.&lt;span class="pl-c1"&gt;purchaseProduct&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;com.musevisions.SwiftyStoreKit.Purchase1&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-c1"&gt;quantity&lt;/span&gt;: &lt;span class="pl-c1"&gt;1&lt;/span&gt;, &lt;span class="pl-c1"&gt;atomically&lt;/span&gt;: &lt;span class="pl-c1"&gt;false&lt;/span&gt;) { result &lt;span class="pl-k"&gt;in&lt;/span&gt;
    &lt;span class="pl-k"&gt;switch&lt;/span&gt; result {
    &lt;span class="pl-k"&gt;case&lt;/span&gt; .&lt;span class="pl-c1"&gt;success&lt;/span&gt;(&lt;span class="pl-k"&gt;let&lt;/span&gt; product)&lt;span class="pl-k"&gt;:&lt;/span&gt;
        &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; fetch content from your server, then:&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;        &lt;span class="pl-k"&gt;if&lt;/span&gt; product.&lt;span class="pl-smi"&gt;needsFinishTransaction&lt;/span&gt; {
            SwiftyStoreKit.&lt;span class="pl-c1"&gt;finishTransaction&lt;/span&gt;(product.&lt;span class="pl-smi"&gt;transaction&lt;/span&gt;)
        }
        &lt;span class="pl-c1"&gt;print&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;Purchase Success: &lt;span class="pl-pse"&gt;\(&lt;/span&gt;&lt;span class="pl-s1"&gt;product.&lt;span class="pl-smi"&gt;productId&lt;/span&gt;&lt;/span&gt;&lt;span class="pl-pse"&gt;&lt;span class="pl-s1"&gt;)&lt;/span&gt;&lt;/span&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
    &lt;span class="pl-k"&gt;case&lt;/span&gt; .&lt;span class="pl-c1"&gt;error&lt;/span&gt;(&lt;span class="pl-k"&gt;let&lt;/span&gt; error)&lt;span class="pl-k"&gt;:&lt;/span&gt;
        &lt;span class="pl-k"&gt;switch&lt;/span&gt; error.&lt;span class="pl-smi"&gt;code&lt;/span&gt; {
        &lt;span class="pl-k"&gt;case&lt;/span&gt; .&lt;span class="pl-smi"&gt;unknown&lt;/span&gt;&lt;span class="pl-k"&gt;:&lt;/span&gt; &lt;span class="pl-c1"&gt;print&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;Unknown error. Please contact support&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
        &lt;span class="pl-k"&gt;case&lt;/span&gt; .&lt;span class="pl-smi"&gt;clientInvalid&lt;/span&gt;&lt;span class="pl-k"&gt;:&lt;/span&gt; &lt;span class="pl-c1"&gt;print&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;Not allowed to make the payment&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
        &lt;span class="pl-k"&gt;case&lt;/span&gt; .&lt;span class="pl-smi"&gt;paymentCancelled&lt;/span&gt;&lt;span class="pl-k"&gt;:&lt;/span&gt; &lt;span class="pl-k"&gt;break&lt;/span&gt;
        &lt;span class="pl-k"&gt;case&lt;/span&gt; .&lt;span class="pl-smi"&gt;paymentInvalid&lt;/span&gt;&lt;span class="pl-k"&gt;:&lt;/span&gt; &lt;span class="pl-c1"&gt;print&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;The purchase identifier was invalid&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
        &lt;span class="pl-k"&gt;case&lt;/span&gt; .&lt;span class="pl-smi"&gt;paymentNotAllowed&lt;/span&gt;&lt;span class="pl-k"&gt;:&lt;/span&gt; &lt;span class="pl-c1"&gt;print&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;The device is not allowed to make the payment&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
        &lt;span class="pl-k"&gt;case&lt;/span&gt; .&lt;span class="pl-smi"&gt;storeProductNotAvailable&lt;/span&gt;&lt;span class="pl-k"&gt;:&lt;/span&gt; &lt;span class="pl-c1"&gt;print&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;The product is not available in the current storefront&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
        &lt;span class="pl-k"&gt;case&lt;/span&gt; .&lt;span class="pl-smi"&gt;cloudServicePermissionDenied&lt;/span&gt;&lt;span class="pl-k"&gt;:&lt;/span&gt; &lt;span class="pl-c1"&gt;print&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;Access to cloud service information is not allowed&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
        &lt;span class="pl-k"&gt;case&lt;/span&gt; .&lt;span class="pl-smi"&gt;cloudServiceNetworkConnectionFailed&lt;/span&gt;&lt;span class="pl-k"&gt;:&lt;/span&gt; &lt;span class="pl-c1"&gt;print&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;Could not connect to the network&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
        &lt;span class="pl-k"&gt;case&lt;/span&gt; .&lt;span class="pl-smi"&gt;cloudServiceRevoked&lt;/span&gt;&lt;span class="pl-k"&gt;:&lt;/span&gt; &lt;span class="pl-c1"&gt;print&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;User has revoked permission to use this cloud service&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
        &lt;span class="pl-k"&gt;default&lt;/span&gt;&lt;span class="pl-k"&gt;:&lt;/span&gt; &lt;span class="pl-c1"&gt;print&lt;/span&gt;((error &lt;span class="pl-k"&gt;as&lt;/span&gt; NSError).&lt;span class="pl-smi"&gt;localizedDescription&lt;/span&gt;)
        }
    }
}&lt;/pre&gt;&lt;/div&gt;
&lt;h3&gt;&lt;a id="user-content-purchase-a-product-given-a-skproduct" class="anchor" aria-hidden="true" href="#purchase-a-product-given-a-skproduct"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Purchase a product (given a SKProduct)&lt;/h3&gt;
&lt;p&gt;This is a variant of the method above that can be used to purchase a product when the corresponding &lt;code&gt;SKProduct&lt;/code&gt; has already been retrieved with &lt;code&gt;retrieveProductsInfo&lt;/code&gt;:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;SwiftyStoreKit.&lt;span class="pl-c1"&gt;retrieveProductsInfo&lt;/span&gt;([&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;com.musevisions.SwiftyStoreKit.Purchase1&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;]) { result &lt;span class="pl-k"&gt;in&lt;/span&gt;
    &lt;span class="pl-k"&gt;if&lt;/span&gt; &lt;span class="pl-k"&gt;let&lt;/span&gt; product &lt;span class="pl-k"&gt;=&lt;/span&gt; result.&lt;span class="pl-smi"&gt;retrievedProducts&lt;/span&gt;.&lt;span class="pl-c1"&gt;first&lt;/span&gt; {
        SwiftyStoreKit.&lt;span class="pl-c1"&gt;purchaseProduct&lt;/span&gt;(product, &lt;span class="pl-c1"&gt;quantity&lt;/span&gt;: &lt;span class="pl-c1"&gt;1&lt;/span&gt;, &lt;span class="pl-c1"&gt;atomically&lt;/span&gt;: &lt;span class="pl-c1"&gt;true&lt;/span&gt;) { result &lt;span class="pl-k"&gt;in&lt;/span&gt;
            &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; handle result (same as above)&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;        }
    }
}&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Using this &lt;code&gt;purchaseProduct&lt;/code&gt; method guarantees that only one network call is made to StoreKit to perform the purchase, as opposed to one call to get the product and another to perform the purchase.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-handle-purchases-started-on-the-app-store-ios-11" class="anchor" aria-hidden="true" href="#handle-purchases-started-on-the-app-store-ios-11"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Handle purchases started on the App Store (iOS 11)&lt;/h3&gt;
&lt;p&gt;iOS 11 adds a new delegate method on &lt;code&gt;SKPaymentTransactionObserver&lt;/code&gt;:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;@available&lt;/span&gt;(&lt;span class="pl-k"&gt;iOS&lt;/span&gt; &lt;span class="pl-c1"&gt;11.0&lt;/span&gt;, &lt;span class="pl-k"&gt;*&lt;/span&gt;)
&lt;span class="pl-k"&gt;optional&lt;/span&gt; &lt;span class="pl-k"&gt;public&lt;/span&gt; &lt;span class="pl-k"&gt;func&lt;/span&gt; &lt;span class="pl-en"&gt;paymentQueue&lt;/span&gt;(&lt;span class="pl-en"&gt;_&lt;/span&gt; &lt;span class="pl-smi"&gt;queue&lt;/span&gt;: SKPaymentQueue, &lt;span class="pl-en"&gt;shouldAddStorePayment&lt;/span&gt; &lt;span class="pl-smi"&gt;payment&lt;/span&gt;: SKPayment, &lt;span class="pl-en"&gt;for&lt;/span&gt; &lt;span class="pl-smi"&gt;product&lt;/span&gt;: SKProduct) &lt;span class="pl-k"&gt;-&amp;gt;&lt;/span&gt; &lt;span class="pl-c1"&gt;Bool&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;From &lt;a href="https://developer.apple.com/documentation/storekit/skpaymenttransactionobserver/2877502-paymentqueue" rel="nofollow"&gt;Apple Docs&lt;/a&gt;:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;This delegate method is called when the user has started an in-app purchase in the App Store, and is continuing the transaction in your app. Specifically, if your app is already installed, the method is called automatically.
If your app is not yet installed when the user starts the in-app purchase in the App Store, the user gets a notification when the app installation is complete. This method is called when the user taps the notification. Otherwise, if the user opens the app manually, this method is called only if the app is opened soon after the purchase was started.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;SwiftyStoreKit supports this with a new handler, called like this:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;SwiftyStoreKit.&lt;span class="pl-smi"&gt;shouldAddStorePaymentHandler&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; { payment, product &lt;span class="pl-k"&gt;in&lt;/span&gt;
    &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; return true if the content can be delivered by your app&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;    &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; return false otherwise&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;}&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;To test this in sandbox mode, open this URL in Safari:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;itms-services://?action=purchaseIntent&amp;amp;bundleId=com.example.app&amp;amp;productIdentifier=product_name
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;More information on the &lt;a href="https://developer.apple.com/videos/play/wwdc2017/303" rel="nofollow"&gt;WWDC17 session What's New in StoreKit&lt;/a&gt;
(&lt;a href="https://devstreaming-cdn.apple.com/videos/wwdc/2017/303f0u5froddl13/303/303_whats_new_in_storekit.pdf" rel="nofollow"&gt;slide number 165&lt;/a&gt; shows the link above).&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-restore-previous-purchases" class="anchor" aria-hidden="true" href="#restore-previous-purchases"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Restore previous purchases&lt;/h3&gt;
&lt;p&gt;According to &lt;a href="https://developer.apple.com/library/content/documentation/NetworkingInternet/Conceptual/StoreKitGuide/Chapters/Restoring.html#//apple_ref/doc/uid/TP40008267-CH8-SW9" rel="nofollow"&gt;Apple - Restoring Purchased Products&lt;/a&gt;:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;In most cases, all your app needs to do is refresh its receipt and deliver the products in its receipt. The refreshed receipt contains a record of the user’s purchases in this app, on this device or any other device.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;Restoring completed transactions creates a new transaction for every completed transaction the user made, essentially replaying history for your transaction queue observer.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;See the &lt;strong&gt;Receipt Verification&lt;/strong&gt; section below for how to restore previous purchases using the receipt.&lt;/p&gt;
&lt;p&gt;This section shows how to restore completed transactions with the &lt;code&gt;restorePurchases&lt;/code&gt; method instead. When successful, the method returns all non-consumable purchases, as well as all auto-renewable subscription purchases, &lt;strong&gt;regardless of whether they are expired or not&lt;/strong&gt;.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Atomic&lt;/strong&gt;: to be used when the content is delivered immediately.&lt;/li&gt;
&lt;/ul&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;SwiftyStoreKit.&lt;span class="pl-c1"&gt;restorePurchases&lt;/span&gt;(&lt;span class="pl-c1"&gt;atomically&lt;/span&gt;: &lt;span class="pl-c1"&gt;true&lt;/span&gt;) { results &lt;span class="pl-k"&gt;in&lt;/span&gt;
    &lt;span class="pl-k"&gt;if&lt;/span&gt; results.&lt;span class="pl-smi"&gt;restoreFailedPurchases&lt;/span&gt;.&lt;span class="pl-c1"&gt;count&lt;/span&gt; &lt;span class="pl-k"&gt;&amp;gt;&lt;/span&gt; &lt;span class="pl-c1"&gt;0&lt;/span&gt; {
        &lt;span class="pl-c1"&gt;print&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;Restore Failed: &lt;span class="pl-pse"&gt;\(&lt;/span&gt;&lt;span class="pl-s1"&gt;results.&lt;span class="pl-smi"&gt;restoreFailedPurchases&lt;/span&gt;&lt;/span&gt;&lt;span class="pl-pse"&gt;&lt;span class="pl-s1"&gt;)&lt;/span&gt;&lt;/span&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
    }
    &lt;span class="pl-k"&gt;else&lt;/span&gt; &lt;span class="pl-k"&gt;if&lt;/span&gt; results.&lt;span class="pl-smi"&gt;restoredPurchases&lt;/span&gt;.&lt;span class="pl-c1"&gt;count&lt;/span&gt; &lt;span class="pl-k"&gt;&amp;gt;&lt;/span&gt; &lt;span class="pl-c1"&gt;0&lt;/span&gt; {
        &lt;span class="pl-c1"&gt;print&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;Restore Success: &lt;span class="pl-pse"&gt;\(&lt;/span&gt;&lt;span class="pl-s1"&gt;results.&lt;span class="pl-smi"&gt;restoredPurchases&lt;/span&gt;&lt;/span&gt;&lt;span class="pl-pse"&gt;&lt;span class="pl-s1"&gt;)&lt;/span&gt;&lt;/span&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
    }
    &lt;span class="pl-k"&gt;else&lt;/span&gt; {
        &lt;span class="pl-c1"&gt;print&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;Nothing to Restore&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
    }
}&lt;/pre&gt;&lt;/div&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Non-Atomic&lt;/strong&gt;: to be used when the content is delivered by the server.&lt;/li&gt;
&lt;/ul&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;SwiftyStoreKit.&lt;span class="pl-c1"&gt;restorePurchases&lt;/span&gt;(&lt;span class="pl-c1"&gt;atomically&lt;/span&gt;: &lt;span class="pl-c1"&gt;false&lt;/span&gt;) { results &lt;span class="pl-k"&gt;in&lt;/span&gt;
    &lt;span class="pl-k"&gt;if&lt;/span&gt; results.&lt;span class="pl-smi"&gt;restoreFailedPurchases&lt;/span&gt;.&lt;span class="pl-c1"&gt;count&lt;/span&gt; &lt;span class="pl-k"&gt;&amp;gt;&lt;/span&gt; &lt;span class="pl-c1"&gt;0&lt;/span&gt; {
        &lt;span class="pl-c1"&gt;print&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;Restore Failed: &lt;span class="pl-pse"&gt;\(&lt;/span&gt;&lt;span class="pl-s1"&gt;results.&lt;span class="pl-smi"&gt;restoreFailedPurchases&lt;/span&gt;&lt;/span&gt;&lt;span class="pl-pse"&gt;&lt;span class="pl-s1"&gt;)&lt;/span&gt;&lt;/span&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
    }
    &lt;span class="pl-k"&gt;else&lt;/span&gt; &lt;span class="pl-k"&gt;if&lt;/span&gt; results.&lt;span class="pl-smi"&gt;restoredPurchases&lt;/span&gt;.&lt;span class="pl-c1"&gt;count&lt;/span&gt; &lt;span class="pl-k"&gt;&amp;gt;&lt;/span&gt; &lt;span class="pl-c1"&gt;0&lt;/span&gt; {
        &lt;span class="pl-k"&gt;for&lt;/span&gt; purchase &lt;span class="pl-k"&gt;in&lt;/span&gt; results.&lt;span class="pl-smi"&gt;restoredPurchases&lt;/span&gt; {
            &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; fetch content from your server, then:&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;            &lt;span class="pl-k"&gt;if&lt;/span&gt; purchase.&lt;span class="pl-smi"&gt;needsFinishTransaction&lt;/span&gt; {
                SwiftyStoreKit.&lt;span class="pl-c1"&gt;finishTransaction&lt;/span&gt;(purchase.&lt;span class="pl-smi"&gt;transaction&lt;/span&gt;)
            }
        }
        &lt;span class="pl-c1"&gt;print&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;Restore Success: &lt;span class="pl-pse"&gt;\(&lt;/span&gt;&lt;span class="pl-s1"&gt;results.&lt;span class="pl-smi"&gt;restoredPurchases&lt;/span&gt;&lt;/span&gt;&lt;span class="pl-pse"&gt;&lt;span class="pl-s1"&gt;)&lt;/span&gt;&lt;/span&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
    }
    &lt;span class="pl-k"&gt;else&lt;/span&gt; {
        &lt;span class="pl-c1"&gt;print&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;Nothing to Restore&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
    }
}&lt;/pre&gt;&lt;/div&gt;
&lt;h4&gt;&lt;a id="user-content-what-does-atomic--non-atomic-mean" class="anchor" aria-hidden="true" href="#what-does-atomic--non-atomic-mean"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;What does atomic / non-atomic mean?&lt;/h4&gt;
&lt;p&gt;When you purchase a product the following things happen:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;A payment is added to the payment queue for your IAP.&lt;/li&gt;
&lt;li&gt;When the payment has been processed with Apple, the payment queue is updated so that the appropriate transaction can be handled.&lt;/li&gt;
&lt;li&gt;If the transaction state is &lt;strong&gt;purchased&lt;/strong&gt; or &lt;strong&gt;restored&lt;/strong&gt;, the app can unlock the functionality purchased by the user.&lt;/li&gt;
&lt;li&gt;The app should call &lt;code&gt;finishTransaction(_:)&lt;/code&gt; to complete the purchase.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;This is what is &lt;a href="https://developer.apple.com/reference/storekit/skpaymentqueue/1506003-finishtransaction" rel="nofollow"&gt;recommended by Apple&lt;/a&gt;:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Your application should call &lt;code&gt;finishTransaction(_:)&lt;/code&gt; only after it has successfully processed the transaction and unlocked the functionality purchased by the user.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;A purchase is &lt;strong&gt;atomic&lt;/strong&gt; when the app unlocks the functionality purchased by the user immediately and call &lt;code&gt;finishTransaction(_:)&lt;/code&gt; at the same time. This is desirable if you're unlocking functionality that is already inside the app.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;In cases when you need to make a request to your own server in order to unlock the functionality, you can use a &lt;strong&gt;non-atomic&lt;/strong&gt; purchase instead.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Note&lt;/strong&gt;: SwiftyStoreKit doesn't yet support downloading content hosted by Apple for non-consumable products. See &lt;a href="https://github.com/bizz84/SwiftyStoreKit/issues/128"&gt;this feature request&lt;/a&gt;.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;SwiftyStoreKit provides three operations that can be performed &lt;strong&gt;atomically&lt;/strong&gt; or &lt;strong&gt;non-atomically&lt;/strong&gt;:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Making a purchase&lt;/li&gt;
&lt;li&gt;Restoring purchases&lt;/li&gt;
&lt;li&gt;Completing transactions on app launch&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;&lt;a id="user-content-downloading-content-hosted-with-apple" class="anchor" aria-hidden="true" href="#downloading-content-hosted-with-apple"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Downloading content hosted with Apple&lt;/h3&gt;
&lt;p&gt;Quoting Apple Docs:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;When you create a product in iTunes Connect, you can associate one or more pieces of downloadable content with it. At runtime, when a product is purchased by a user, your app uses SKDownload objects to download the content from the App Store.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;Your app never directly creates a SKDownload object. Instead, after a payment is processed, your app reads the transaction object’s downloads property to retrieve an array of SKDownload objects associated with the transaction.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;To download the content, you queue a download object on the payment queue and wait for the content to be downloaded. After a download completes, read the download object’s contentURL property to get a URL to the downloaded content. Your app must process the downloaded file before completing the transaction. For example, it might copy the file into a directory whose contents are persistent. When all downloads are complete, you finish the transaction. After the transaction is finished, the download objects cannot be queued to the payment queue and any URLs to the downloaded content are invalid.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;To start the downloads (this can be done in &lt;code&gt;purchaseProduct()&lt;/code&gt;, &lt;code&gt;completeTransactions()&lt;/code&gt; or &lt;code&gt;restorePurchases()&lt;/code&gt;):&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;SwiftyStoreKit.&lt;span class="pl-c1"&gt;purchaseProduct&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;com.musevisions.SwiftyStoreKit.Purchase1&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-c1"&gt;quantity&lt;/span&gt;: &lt;span class="pl-c1"&gt;1&lt;/span&gt;, &lt;span class="pl-c1"&gt;atomically&lt;/span&gt;: &lt;span class="pl-c1"&gt;false&lt;/span&gt;) { result &lt;span class="pl-k"&gt;in&lt;/span&gt;
    &lt;span class="pl-k"&gt;switch&lt;/span&gt; result {
    &lt;span class="pl-k"&gt;case&lt;/span&gt; .&lt;span class="pl-c1"&gt;success&lt;/span&gt;(&lt;span class="pl-k"&gt;let&lt;/span&gt; product)&lt;span class="pl-k"&gt;:&lt;/span&gt;
        &lt;span class="pl-k"&gt;let&lt;/span&gt; downloads &lt;span class="pl-k"&gt;=&lt;/span&gt; purchase.&lt;span class="pl-smi"&gt;transaction&lt;/span&gt;.&lt;span class="pl-smi"&gt;downloads&lt;/span&gt;
        &lt;span class="pl-k"&gt;if&lt;/span&gt; &lt;span class="pl-k"&gt;!&lt;/span&gt;downloads.&lt;span class="pl-c1"&gt;isEmpty&lt;/span&gt; {
            SwiftyStoreKit.&lt;span class="pl-c1"&gt;start&lt;/span&gt;(downloads)
        }
    &lt;span class="pl-k"&gt;case&lt;/span&gt; .&lt;span class="pl-c1"&gt;error&lt;/span&gt;(&lt;span class="pl-k"&gt;let&lt;/span&gt; error)&lt;span class="pl-k"&gt;:&lt;/span&gt;
        &lt;span class="pl-c1"&gt;print&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;span class="pl-pse"&gt;\(&lt;/span&gt;&lt;span class="pl-s1"&gt;error&lt;/span&gt;&lt;span class="pl-pse"&gt;&lt;span class="pl-s1"&gt;)&lt;/span&gt;&lt;/span&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
    }
}&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;To check the updated downloads, setup a &lt;code&gt;updatedDownloadsHandler&lt;/code&gt; block in your AppDelegate:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;SwiftyStoreKit.&lt;span class="pl-smi"&gt;updatedDownloadsHandler&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; { downloads &lt;span class="pl-k"&gt;in&lt;/span&gt;

    &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; contentURL is not nil if downloadState == .finished&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;    &lt;span class="pl-k"&gt;let&lt;/span&gt; contentURLs &lt;span class="pl-k"&gt;=&lt;/span&gt; downloads.&lt;span class="pl-c1"&gt;flatMap&lt;/span&gt; { &lt;span class="pl-c1"&gt;$0&lt;/span&gt;.&lt;span class="pl-smi"&gt;contentURL&lt;/span&gt; }
    &lt;span class="pl-k"&gt;if&lt;/span&gt; contentURLs.&lt;span class="pl-c1"&gt;count&lt;/span&gt; &lt;span class="pl-k"&gt;==&lt;/span&gt; downloads.&lt;span class="pl-c1"&gt;count&lt;/span&gt; {
        &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; process all downloaded files, then finish the transaction&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;        SwiftyStoreKit.&lt;span class="pl-c1"&gt;finishTransaction&lt;/span&gt;(downloads[&lt;span class="pl-c1"&gt;0&lt;/span&gt;].&lt;span class="pl-smi"&gt;transaction&lt;/span&gt;)
    }
}&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;To control the state of the downloads, SwiftyStoreKit offers &lt;code&gt;start()&lt;/code&gt;, &lt;code&gt;pause()&lt;/code&gt;, &lt;code&gt;resume()&lt;/code&gt;, &lt;code&gt;cancel()&lt;/code&gt; methods.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-receipt-verification" class="anchor" aria-hidden="true" href="#receipt-verification"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Receipt verification&lt;/h2&gt;
&lt;p&gt;According to &lt;a href="https://developer.apple.com/library/content/documentation/NetworkingInternet/Conceptual/StoreKitGuide/Chapters/DeliverProduct.html#//apple_ref/doc/uid/TP40008267-CH5-SW4" rel="nofollow"&gt;Apple - Delivering Products&lt;/a&gt;:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;The app receipt contains a record of the user’s purchases, cryptographically signed by Apple. For more information, see &lt;a href="https://developer.apple.com/library/content/releasenotes/General/ValidateAppStoreReceipt/Introduction.html#//apple_ref/doc/uid/TP40010573" rel="nofollow"&gt;Receipt Validation Programming Guide&lt;/a&gt;.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;Information about consumable products is added to the receipt when they’re paid for and remains in the receipt until you finish the transaction. After you finish the transaction, this information is removed the next time the receipt is updated—for example, the next time the user makes a purchase.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;Information about all other kinds of purchases is added to the receipt when they’re paid for and remains in the receipt indefinitely.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;When an app is first installed, the app receipt is missing.&lt;/p&gt;
&lt;p&gt;As soon as a user completes a purchase or restores purchases, StoreKit creates and stores the receipt locally as a file, located by &lt;code&gt;Bundle.main.appStoreReceiptURL&lt;/code&gt;.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-retrieve-local-receipt-encrypted" class="anchor" aria-hidden="true" href="#retrieve-local-receipt-encrypted"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Retrieve local receipt (encrypted)&lt;/h3&gt;
&lt;p&gt;This helper can be used to retrieve the (encrypted) local receipt data:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;let&lt;/span&gt; receiptData &lt;span class="pl-k"&gt;=&lt;/span&gt; SwiftyStoreKit.&lt;span class="pl-smi"&gt;localReceiptData&lt;/span&gt;
&lt;span class="pl-k"&gt;let&lt;/span&gt; receiptString &lt;span class="pl-k"&gt;=&lt;/span&gt; receiptData.&lt;span class="pl-c1"&gt;base64EncodedString&lt;/span&gt;(&lt;span class="pl-c1"&gt;options&lt;/span&gt;: [])
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; do your receipt validation here&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;However, the receipt file may be missing or outdated.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-fetch-receipt-encrypted" class="anchor" aria-hidden="true" href="#fetch-receipt-encrypted"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Fetch receipt (encrypted)&lt;/h3&gt;
&lt;p&gt;Use this method to get the updated receipt:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;SwiftyStoreKit.&lt;span class="pl-c1"&gt;fetchReceipt&lt;/span&gt;(&lt;span class="pl-c1"&gt;forceRefresh&lt;/span&gt;: &lt;span class="pl-c1"&gt;true&lt;/span&gt;) { result &lt;span class="pl-k"&gt;in&lt;/span&gt;
    &lt;span class="pl-k"&gt;switch&lt;/span&gt; result {
    &lt;span class="pl-k"&gt;case&lt;/span&gt; .&lt;span class="pl-c1"&gt;success&lt;/span&gt;(&lt;span class="pl-k"&gt;let&lt;/span&gt; receiptData)&lt;span class="pl-k"&gt;:&lt;/span&gt;
        &lt;span class="pl-k"&gt;let&lt;/span&gt; encryptedReceipt &lt;span class="pl-k"&gt;=&lt;/span&gt; receiptData.&lt;span class="pl-c1"&gt;base64EncodedString&lt;/span&gt;(&lt;span class="pl-c1"&gt;options&lt;/span&gt;: [])
        &lt;span class="pl-c1"&gt;print&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;Fetch receipt success:&lt;span class="pl-cce"&gt;\n&lt;/span&gt;&lt;span class="pl-pse"&gt;\(&lt;/span&gt;&lt;span class="pl-s1"&gt;encryptedReceipt&lt;/span&gt;&lt;span class="pl-pse"&gt;&lt;span class="pl-s1"&gt;)&lt;/span&gt;&lt;/span&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
    &lt;span class="pl-k"&gt;case&lt;/span&gt; .&lt;span class="pl-c1"&gt;error&lt;/span&gt;(&lt;span class="pl-k"&gt;let&lt;/span&gt; error)&lt;span class="pl-k"&gt;:&lt;/span&gt;
        &lt;span class="pl-c1"&gt;print&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;Fetch receipt failed: &lt;span class="pl-pse"&gt;\(&lt;/span&gt;&lt;span class="pl-s1"&gt;error&lt;/span&gt;&lt;span class="pl-pse"&gt;&lt;span class="pl-s1"&gt;)&lt;/span&gt;&lt;/span&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
    }
}&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;This method works as follows:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;If &lt;code&gt;forceRefresh = false&lt;/code&gt;, it returns the local receipt from file, or refreshes it if missing.&lt;/li&gt;
&lt;li&gt;If &lt;code&gt;forceRefresh = true&lt;/code&gt;, it always refreshes the receipt regardless.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;Notes&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;If the local receipt is missing or &lt;code&gt;forceRefresh = true&lt;/code&gt; when calling &lt;code&gt;fetchReceipt&lt;/code&gt;, a network call is made to refresh it.&lt;/li&gt;
&lt;li&gt;If the user is not logged to the App Store, StoreKit will present a popup asking to &lt;strong&gt;Sign In to the iTunes Store&lt;/strong&gt;.&lt;/li&gt;
&lt;li&gt;If the user enters valid credentials, the receipt will be refreshed.&lt;/li&gt;
&lt;li&gt;If the user cancels, receipt refresh will fail with a &lt;strong&gt;Cannot connect to iTunes Store&lt;/strong&gt; error.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;If &lt;code&gt;fetchReceipt&lt;/code&gt; is successful, it will return the &lt;strong&gt;encrypted&lt;/strong&gt; receipt as a string. For this reason, a &lt;strong&gt;validation&lt;/strong&gt; step is needed to get all the receipt fields in readable form. This can be done in various ways:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Validate with Apple via the &lt;code&gt;AppleReceiptValidator&lt;/code&gt; (see &lt;a href="#verify-receipt"&gt;&lt;code&gt;verifyReceipt&lt;/code&gt;&lt;/a&gt; below).&lt;/li&gt;
&lt;li&gt;Perform local receipt validation (see &lt;a href="https://github.com/bizz84/SwiftyStoreKit/issues/101"&gt;#101&lt;/a&gt;).&lt;/li&gt;
&lt;li&gt;Post the receipt data and validate on server.&lt;/li&gt;
&lt;/ol&gt;
&lt;h3&gt;&lt;a id="user-content-verify-receipt" class="anchor" aria-hidden="true" href="#verify-receipt"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Verify Receipt&lt;/h3&gt;
&lt;p&gt;Use this method to (optionally) refresh the receipt and perform validation in one step.&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;let&lt;/span&gt; appleValidator &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;AppleReceiptValidator&lt;/span&gt;(&lt;span class="pl-c1"&gt;service&lt;/span&gt;: .&lt;span class="pl-smi"&gt;production&lt;/span&gt;, &lt;span class="pl-c1"&gt;sharedSecret&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;your-shared-secret&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
SwiftyStoreKit.&lt;span class="pl-c1"&gt;verifyReceipt&lt;/span&gt;(&lt;span class="pl-c1"&gt;using&lt;/span&gt;: appleValidator, &lt;span class="pl-c1"&gt;forceRefresh&lt;/span&gt;: &lt;span class="pl-c1"&gt;false&lt;/span&gt;) { result &lt;span class="pl-k"&gt;in&lt;/span&gt;
    &lt;span class="pl-k"&gt;switch&lt;/span&gt; result {
    &lt;span class="pl-k"&gt;case&lt;/span&gt; .&lt;span class="pl-c1"&gt;success&lt;/span&gt;(&lt;span class="pl-k"&gt;let&lt;/span&gt; receipt)&lt;span class="pl-k"&gt;:&lt;/span&gt;
        &lt;span class="pl-c1"&gt;print&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;Verify receipt success: &lt;span class="pl-pse"&gt;\(&lt;/span&gt;&lt;span class="pl-s1"&gt;receipt&lt;/span&gt;&lt;span class="pl-pse"&gt;&lt;span class="pl-s1"&gt;)&lt;/span&gt;&lt;/span&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
    &lt;span class="pl-k"&gt;case&lt;/span&gt; .&lt;span class="pl-c1"&gt;error&lt;/span&gt;(&lt;span class="pl-k"&gt;let&lt;/span&gt; error)&lt;span class="pl-k"&gt;:&lt;/span&gt;
        &lt;span class="pl-c1"&gt;print&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;Verify receipt failed: &lt;span class="pl-pse"&gt;\(&lt;/span&gt;&lt;span class="pl-s1"&gt;error&lt;/span&gt;&lt;span class="pl-pse"&gt;&lt;span class="pl-s1"&gt;)&lt;/span&gt;&lt;/span&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
    }
}&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;strong&gt;Notes&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;This method is based on &lt;code&gt;fetchReceipt&lt;/code&gt;, and the same refresh logic discussed above applies.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;AppleReceiptValidator&lt;/code&gt; is a &lt;strong&gt;reference implementation&lt;/strong&gt; that validates the receipt with Apple and results in a network call. &lt;em&gt;This is prone to man-in-the-middle attacks.&lt;/em&gt;&lt;/li&gt;
&lt;li&gt;You should implement your secure logic by validating your receipt locally, or sending the encrypted receipt data and validating it in your server.&lt;/li&gt;
&lt;li&gt;Local receipt validation is not implemented (see &lt;a href="https://github.com/bizz84/SwiftyStoreKit/issues/101"&gt;issue #101&lt;/a&gt; for details).&lt;/li&gt;
&lt;li&gt;You can implement your own receipt validator by conforming to the &lt;code&gt;ReceiptValidator&lt;/code&gt; protocol and passing it to &lt;code&gt;verifyReceipt&lt;/code&gt;.&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-verifying-purchases-and-subscriptions" class="anchor" aria-hidden="true" href="#verifying-purchases-and-subscriptions"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Verifying purchases and subscriptions&lt;/h2&gt;
&lt;p&gt;Once you have retrieved the receipt using the &lt;code&gt;verifyReceipt&lt;/code&gt; method, you can verify your purchases and subscriptions by product identifier.&lt;/p&gt;
&lt;p&gt;Verifying multiple purchases and subscriptions in one call is not yet supported (see &lt;a href="https://github.com/bizz84/SwiftyStoreKit/issues/194"&gt;issue #194&lt;/a&gt; for more details).&lt;/p&gt;
&lt;p&gt;If you need to verify multiple purchases / subscriptions, you can either:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;manually parse the receipt dictionary returned by &lt;code&gt;verifyReceipt&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;call &lt;code&gt;verifyPurchase&lt;/code&gt; or &lt;code&gt;verifySubscription&lt;/code&gt; multiple times with different product identifiers&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;&lt;a id="user-content-verify-purchase" class="anchor" aria-hidden="true" href="#verify-purchase"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Verify Purchase&lt;/h3&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;let&lt;/span&gt; appleValidator &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;AppleReceiptValidator&lt;/span&gt;(&lt;span class="pl-c1"&gt;service&lt;/span&gt;: .&lt;span class="pl-smi"&gt;production&lt;/span&gt;, &lt;span class="pl-c1"&gt;sharedSecret&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;your-shared-secret&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
SwiftyStoreKit.&lt;span class="pl-c1"&gt;verifyReceipt&lt;/span&gt;(&lt;span class="pl-c1"&gt;using&lt;/span&gt;: appleValidator) { result &lt;span class="pl-k"&gt;in&lt;/span&gt;
    &lt;span class="pl-k"&gt;switch&lt;/span&gt; result {
    &lt;span class="pl-k"&gt;case&lt;/span&gt; .&lt;span class="pl-c1"&gt;success&lt;/span&gt;(&lt;span class="pl-k"&gt;let&lt;/span&gt; receipt)&lt;span class="pl-k"&gt;:&lt;/span&gt;
        &lt;span class="pl-k"&gt;let&lt;/span&gt; productId &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;com.musevisions.SwiftyStoreKit.Purchase1&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;
        &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Verify the purchase of Consumable or NonConsumable&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;        &lt;span class="pl-k"&gt;let&lt;/span&gt; purchaseResult &lt;span class="pl-k"&gt;=&lt;/span&gt; SwiftyStoreKit.&lt;span class="pl-c1"&gt;verifyPurchase&lt;/span&gt;(
            &lt;span class="pl-c1"&gt;productId&lt;/span&gt;: productId,
            &lt;span class="pl-c1"&gt;inReceipt&lt;/span&gt;: receipt)
            
        &lt;span class="pl-k"&gt;switch&lt;/span&gt; purchaseResult {
        &lt;span class="pl-k"&gt;case&lt;/span&gt; .&lt;span class="pl-c1"&gt;purchased&lt;/span&gt;(&lt;span class="pl-k"&gt;let&lt;/span&gt; receiptItem)&lt;span class="pl-k"&gt;:&lt;/span&gt;
            &lt;span class="pl-c1"&gt;print&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;span class="pl-pse"&gt;\(&lt;/span&gt;&lt;span class="pl-s1"&gt;productId&lt;/span&gt;&lt;span class="pl-pse"&gt;&lt;span class="pl-s1"&gt;)&lt;/span&gt;&lt;/span&gt; is purchased: &lt;span class="pl-pse"&gt;\(&lt;/span&gt;&lt;span class="pl-s1"&gt;receiptItem&lt;/span&gt;&lt;span class="pl-pse"&gt;&lt;span class="pl-s1"&gt;)&lt;/span&gt;&lt;/span&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
        &lt;span class="pl-k"&gt;case&lt;/span&gt; .&lt;span class="pl-smi"&gt;notPurchased&lt;/span&gt;&lt;span class="pl-k"&gt;:&lt;/span&gt;
            &lt;span class="pl-c1"&gt;print&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;The user has never purchased &lt;span class="pl-pse"&gt;\(&lt;/span&gt;&lt;span class="pl-s1"&gt;productId&lt;/span&gt;&lt;span class="pl-pse"&gt;&lt;span class="pl-s1"&gt;)&lt;/span&gt;&lt;/span&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
        }
    &lt;span class="pl-k"&gt;case&lt;/span&gt; .&lt;span class="pl-c1"&gt;error&lt;/span&gt;(&lt;span class="pl-k"&gt;let&lt;/span&gt; error)&lt;span class="pl-k"&gt;:&lt;/span&gt;
        &lt;span class="pl-c1"&gt;print&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;Receipt verification failed: &lt;span class="pl-pse"&gt;\(&lt;/span&gt;&lt;span class="pl-s1"&gt;error&lt;/span&gt;&lt;span class="pl-pse"&gt;&lt;span class="pl-s1"&gt;)&lt;/span&gt;&lt;/span&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
    }
}&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Note that for consumable products, the receipt will only include the information for a couple of minutes after the purchase.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-verify-subscription" class="anchor" aria-hidden="true" href="#verify-subscription"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Verify Subscription&lt;/h3&gt;
&lt;p&gt;This can be used to check if a subscription was previously purchased, and whether it is still active or if it's expired.&lt;/p&gt;
&lt;p&gt;From &lt;a href="https://developer.apple.com/library/content/documentation/NetworkingInternet/Conceptual/StoreKitGuide/Chapters/Subscriptions.html#//apple_ref/doc/uid/TP40008267-CH7-SW6" rel="nofollow"&gt;Apple - Working with Subscriptions&lt;/a&gt;:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;keep a record of the date that each piece of content is published. Read the Original Purchase Date and Subscription Expiration Date field from each receipt entry to determine the start and end dates of the subscription.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;When one or more subscriptions are found for a given product id, they are returned as a &lt;code&gt;ReceiptItem&lt;/code&gt; array ordered by &lt;code&gt;expiryDate&lt;/code&gt;, with the first one being the newest.&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;let&lt;/span&gt; appleValidator &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;AppleReceiptValidator&lt;/span&gt;(&lt;span class="pl-c1"&gt;service&lt;/span&gt;: .&lt;span class="pl-smi"&gt;production&lt;/span&gt;, &lt;span class="pl-c1"&gt;sharedSecret&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;your-shared-secret&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
SwiftyStoreKit.&lt;span class="pl-c1"&gt;verifyReceipt&lt;/span&gt;(&lt;span class="pl-c1"&gt;using&lt;/span&gt;: appleValidator) { result &lt;span class="pl-k"&gt;in&lt;/span&gt;
    &lt;span class="pl-k"&gt;switch&lt;/span&gt; result {
    &lt;span class="pl-k"&gt;case&lt;/span&gt; .&lt;span class="pl-c1"&gt;success&lt;/span&gt;(&lt;span class="pl-k"&gt;let&lt;/span&gt; receipt)&lt;span class="pl-k"&gt;:&lt;/span&gt;
        &lt;span class="pl-k"&gt;let&lt;/span&gt; productId &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;com.musevisions.SwiftyStoreKit.Subscription&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;
        &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Verify the purchase of a Subscription&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;        &lt;span class="pl-k"&gt;let&lt;/span&gt; purchaseResult &lt;span class="pl-k"&gt;=&lt;/span&gt; SwiftyStoreKit.&lt;span class="pl-c1"&gt;verifySubscription&lt;/span&gt;(
            &lt;span class="pl-c1"&gt;ofType&lt;/span&gt;: .&lt;span class="pl-smi"&gt;autoRenewable&lt;/span&gt;, &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; or .nonRenewing (see below)&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;            &lt;span class="pl-c1"&gt;productId&lt;/span&gt;: productId,
            &lt;span class="pl-c1"&gt;inReceipt&lt;/span&gt;: receipt)
            
        &lt;span class="pl-k"&gt;switch&lt;/span&gt; purchaseResult {
        &lt;span class="pl-k"&gt;case&lt;/span&gt; .&lt;span class="pl-c1"&gt;purchased&lt;/span&gt;(&lt;span class="pl-k"&gt;let&lt;/span&gt; expiryDate, &lt;span class="pl-k"&gt;let&lt;/span&gt; items)&lt;span class="pl-k"&gt;:&lt;/span&gt;
            &lt;span class="pl-c1"&gt;print&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;span class="pl-pse"&gt;\(&lt;/span&gt;&lt;span class="pl-s1"&gt;productId&lt;/span&gt;&lt;span class="pl-pse"&gt;&lt;span class="pl-s1"&gt;)&lt;/span&gt;&lt;/span&gt; is valid until &lt;span class="pl-pse"&gt;\(&lt;/span&gt;&lt;span class="pl-s1"&gt;expiryDate&lt;/span&gt;&lt;span class="pl-pse"&gt;&lt;span class="pl-s1"&gt;)&lt;/span&gt;&lt;/span&gt;&lt;span class="pl-cce"&gt;\n&lt;/span&gt;&lt;span class="pl-pse"&gt;\(&lt;/span&gt;&lt;span class="pl-s1"&gt;items&lt;/span&gt;&lt;span class="pl-pse"&gt;&lt;span class="pl-s1"&gt;)&lt;/span&gt;&lt;/span&gt;&lt;span class="pl-cce"&gt;\n&lt;/span&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
        &lt;span class="pl-k"&gt;case&lt;/span&gt; .&lt;span class="pl-c1"&gt;expired&lt;/span&gt;(&lt;span class="pl-k"&gt;let&lt;/span&gt; expiryDate, &lt;span class="pl-k"&gt;let&lt;/span&gt; items)&lt;span class="pl-k"&gt;:&lt;/span&gt;
            &lt;span class="pl-c1"&gt;print&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;span class="pl-pse"&gt;\(&lt;/span&gt;&lt;span class="pl-s1"&gt;productId&lt;/span&gt;&lt;span class="pl-pse"&gt;&lt;span class="pl-s1"&gt;)&lt;/span&gt;&lt;/span&gt; is expired since &lt;span class="pl-pse"&gt;\(&lt;/span&gt;&lt;span class="pl-s1"&gt;expiryDate&lt;/span&gt;&lt;span class="pl-pse"&gt;&lt;span class="pl-s1"&gt;)&lt;/span&gt;&lt;/span&gt;&lt;span class="pl-cce"&gt;\n&lt;/span&gt;&lt;span class="pl-pse"&gt;\(&lt;/span&gt;&lt;span class="pl-s1"&gt;items&lt;/span&gt;&lt;span class="pl-pse"&gt;&lt;span class="pl-s1"&gt;)&lt;/span&gt;&lt;/span&gt;&lt;span class="pl-cce"&gt;\n&lt;/span&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
        &lt;span class="pl-k"&gt;case&lt;/span&gt; .&lt;span class="pl-smi"&gt;notPurchased&lt;/span&gt;&lt;span class="pl-k"&gt;:&lt;/span&gt;
            &lt;span class="pl-c1"&gt;print&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;The user has never purchased &lt;span class="pl-pse"&gt;\(&lt;/span&gt;&lt;span class="pl-s1"&gt;productId&lt;/span&gt;&lt;span class="pl-pse"&gt;&lt;span class="pl-s1"&gt;)&lt;/span&gt;&lt;/span&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
        }

    &lt;span class="pl-k"&gt;case&lt;/span&gt; .&lt;span class="pl-c1"&gt;error&lt;/span&gt;(&lt;span class="pl-k"&gt;let&lt;/span&gt; error)&lt;span class="pl-k"&gt;:&lt;/span&gt;
        &lt;span class="pl-c1"&gt;print&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;Receipt verification failed: &lt;span class="pl-pse"&gt;\(&lt;/span&gt;&lt;span class="pl-s1"&gt;error&lt;/span&gt;&lt;span class="pl-pse"&gt;&lt;span class="pl-s1"&gt;)&lt;/span&gt;&lt;/span&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
    }
}&lt;/pre&gt;&lt;/div&gt;
&lt;h4&gt;&lt;a id="user-content-auto-renewable" class="anchor" aria-hidden="true" href="#auto-renewable"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Auto-Renewable&lt;/h4&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;let&lt;/span&gt; purchaseResult &lt;span class="pl-k"&gt;=&lt;/span&gt; SwiftyStoreKit.&lt;span class="pl-c1"&gt;verifySubscription&lt;/span&gt;(
            &lt;span class="pl-c1"&gt;ofType&lt;/span&gt;: .&lt;span class="pl-smi"&gt;autoRenewable&lt;/span&gt;,
            &lt;span class="pl-c1"&gt;productId&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;com.musevisions.SwiftyStoreKit.Subscription&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;,
            &lt;span class="pl-c1"&gt;inReceipt&lt;/span&gt;: receipt)&lt;/pre&gt;&lt;/div&gt;
&lt;h4&gt;&lt;a id="user-content-non-renewing" class="anchor" aria-hidden="true" href="#non-renewing"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Non-Renewing&lt;/h4&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; validDuration: time interval in seconds&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;&lt;span class="pl-k"&gt;let&lt;/span&gt; purchaseResult &lt;span class="pl-k"&gt;=&lt;/span&gt; SwiftyStoreKit.&lt;span class="pl-c1"&gt;verifySubscription&lt;/span&gt;(
            &lt;span class="pl-c1"&gt;ofType&lt;/span&gt;: .&lt;span class="pl-c1"&gt;nonRenewing&lt;/span&gt;(&lt;span class="pl-c1"&gt;validDuration&lt;/span&gt;: &lt;span class="pl-c1"&gt;3600&lt;/span&gt; &lt;span class="pl-k"&gt;*&lt;/span&gt; &lt;span class="pl-c1"&gt;24&lt;/span&gt; &lt;span class="pl-k"&gt;*&lt;/span&gt; &lt;span class="pl-c1"&gt;30&lt;/span&gt;),
            &lt;span class="pl-c1"&gt;productId&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;com.musevisions.SwiftyStoreKit.Subscription&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;,
            &lt;span class="pl-c1"&gt;inReceipt&lt;/span&gt;: receipt)&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;strong&gt;Notes&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;The expiration dates are calculated against the receipt date. This is the date of the last successful call to &lt;code&gt;verifyReceipt&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;When purchasing subscriptions in sandbox mode, the expiry dates are set just minutes after the purchase date for testing purposes.&lt;/li&gt;
&lt;/ul&gt;
&lt;h4&gt;&lt;a id="user-content-purchasing-and-verifying-a-subscription" class="anchor" aria-hidden="true" href="#purchasing-and-verifying-a-subscription"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Purchasing and verifying a subscription&lt;/h4&gt;
&lt;p&gt;The &lt;code&gt;verifySubscription&lt;/code&gt; method can be used together with the &lt;code&gt;purchaseProduct&lt;/code&gt; method to purchase a subscription and check its expiration date, like so:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;let&lt;/span&gt; productId &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;your-product-id&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;
SwiftyStoreKit.&lt;span class="pl-c1"&gt;purchaseProduct&lt;/span&gt;(productId, &lt;span class="pl-c1"&gt;atomically&lt;/span&gt;: &lt;span class="pl-c1"&gt;true&lt;/span&gt;) { result &lt;span class="pl-k"&gt;in&lt;/span&gt;
    
    &lt;span class="pl-k"&gt;if&lt;/span&gt; &lt;span class="pl-k"&gt;case&lt;/span&gt; .&lt;span class="pl-c1"&gt;success&lt;/span&gt;(&lt;span class="pl-k"&gt;let&lt;/span&gt; purchase) &lt;span class="pl-k"&gt;=&lt;/span&gt; result {
        &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Deliver content from server, then:&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;        &lt;span class="pl-k"&gt;if&lt;/span&gt; purchase.&lt;span class="pl-smi"&gt;needsFinishTransaction&lt;/span&gt; {
            SwiftyStoreKit.&lt;span class="pl-c1"&gt;finishTransaction&lt;/span&gt;(purchase.&lt;span class="pl-smi"&gt;transaction&lt;/span&gt;)
        }
        
        &lt;span class="pl-k"&gt;let&lt;/span&gt; appleValidator &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;AppleReceiptValidator&lt;/span&gt;(&lt;span class="pl-c1"&gt;service&lt;/span&gt;: .&lt;span class="pl-smi"&gt;production&lt;/span&gt;, &lt;span class="pl-c1"&gt;sharedSecret&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;your-shared-secret&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
        SwiftyStoreKit.&lt;span class="pl-c1"&gt;verifyReceipt&lt;/span&gt;(&lt;span class="pl-c1"&gt;using&lt;/span&gt;: appleValidator) { result &lt;span class="pl-k"&gt;in&lt;/span&gt;
            
            &lt;span class="pl-k"&gt;if&lt;/span&gt; &lt;span class="pl-k"&gt;case&lt;/span&gt; .&lt;span class="pl-c1"&gt;success&lt;/span&gt;(&lt;span class="pl-k"&gt;let&lt;/span&gt; receipt) &lt;span class="pl-k"&gt;=&lt;/span&gt; result {
                &lt;span class="pl-k"&gt;let&lt;/span&gt; purchaseResult &lt;span class="pl-k"&gt;=&lt;/span&gt; SwiftyStoreKit.&lt;span class="pl-c1"&gt;verifySubscription&lt;/span&gt;(
                    &lt;span class="pl-c1"&gt;ofType&lt;/span&gt;: .&lt;span class="pl-smi"&gt;autoRenewable&lt;/span&gt;,
                    &lt;span class="pl-c1"&gt;productId&lt;/span&gt;: productId,
                    &lt;span class="pl-c1"&gt;inReceipt&lt;/span&gt;: receipt)
                
                &lt;span class="pl-k"&gt;switch&lt;/span&gt; purchaseResult {
                &lt;span class="pl-k"&gt;case&lt;/span&gt; .&lt;span class="pl-c1"&gt;purchased&lt;/span&gt;(&lt;span class="pl-k"&gt;let&lt;/span&gt; expiryDate, &lt;span class="pl-k"&gt;let&lt;/span&gt; receiptItems)&lt;span class="pl-k"&gt;:&lt;/span&gt;
                    &lt;span class="pl-c1"&gt;print&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;Product is valid until &lt;span class="pl-pse"&gt;\(&lt;/span&gt;&lt;span class="pl-s1"&gt;expiryDate&lt;/span&gt;&lt;span class="pl-pse"&gt;&lt;span class="pl-s1"&gt;)&lt;/span&gt;&lt;/span&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
                &lt;span class="pl-k"&gt;case&lt;/span&gt; .&lt;span class="pl-c1"&gt;expired&lt;/span&gt;(&lt;span class="pl-k"&gt;let&lt;/span&gt; expiryDate, &lt;span class="pl-k"&gt;let&lt;/span&gt; receiptItems)&lt;span class="pl-k"&gt;:&lt;/span&gt;
                    &lt;span class="pl-c1"&gt;print&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;Product is expired since &lt;span class="pl-pse"&gt;\(&lt;/span&gt;&lt;span class="pl-s1"&gt;expiryDate&lt;/span&gt;&lt;span class="pl-pse"&gt;&lt;span class="pl-s1"&gt;)&lt;/span&gt;&lt;/span&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
                &lt;span class="pl-k"&gt;case&lt;/span&gt; .&lt;span class="pl-smi"&gt;notPurchased&lt;/span&gt;&lt;span class="pl-k"&gt;:&lt;/span&gt;
                    &lt;span class="pl-c1"&gt;print&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;This product has never been purchased&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
                }

            } &lt;span class="pl-k"&gt;else&lt;/span&gt; {
                &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; receipt verification error&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;            }
        }
    } &lt;span class="pl-k"&gt;else&lt;/span&gt; {
        &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; purchase error&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;    }
}&lt;/pre&gt;&lt;/div&gt;
&lt;h3&gt;&lt;a id="user-content-subscription-groups" class="anchor" aria-hidden="true" href="#subscription-groups"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Subscription Groups&lt;/h3&gt;
&lt;p&gt;From &lt;a href="https://developer.apple.com/app-store/subscriptions/" rel="nofollow"&gt;Apple Docs - Offering Subscriptions&lt;/a&gt;:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;A subscription group is a set of in-app purchases that you can create to provide users with a range of content offerings, service levels, or durations to best meet their needs. Users can only buy one subscription within a subscription group at a time. If users would want to buy more that one type of subscription — for example, to subscribe to more than one channel in a streaming app — you can put these in-app purchases in different subscription groups.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;You can verify all subscriptions within the same group with the &lt;code&gt;verifySubscriptions&lt;/code&gt; method:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;let&lt;/span&gt; appleValidator &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;AppleReceiptValidator&lt;/span&gt;(&lt;span class="pl-c1"&gt;service&lt;/span&gt;: .&lt;span class="pl-smi"&gt;production&lt;/span&gt;, &lt;span class="pl-c1"&gt;sharedSecret&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;your-shared-secret&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
SwiftyStoreKit.&lt;span class="pl-c1"&gt;verifyReceipt&lt;/span&gt;(&lt;span class="pl-c1"&gt;using&lt;/span&gt;: appleValidator) { result &lt;span class="pl-k"&gt;in&lt;/span&gt;
    &lt;span class="pl-k"&gt;switch&lt;/span&gt; result {
    &lt;span class="pl-k"&gt;case&lt;/span&gt; .&lt;span class="pl-c1"&gt;success&lt;/span&gt;(&lt;span class="pl-k"&gt;let&lt;/span&gt; receipt)&lt;span class="pl-k"&gt;:&lt;/span&gt;
        &lt;span class="pl-k"&gt;let&lt;/span&gt; productIds &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;Set&lt;/span&gt;([ &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;com.musevisions.SwiftyStoreKit.Weekly&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;,
                               &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;com.musevisions.SwiftyStoreKit.Monthly&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;,
                               &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;com.musevisions.SwiftyStoreKit.Yearly&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; ])
        &lt;span class="pl-k"&gt;let&lt;/span&gt; purchaseResult &lt;span class="pl-k"&gt;=&lt;/span&gt; SwiftyStoreKit.&lt;span class="pl-c1"&gt;verifySubscriptions&lt;/span&gt;(&lt;span class="pl-c1"&gt;productIds&lt;/span&gt;: productIds, &lt;span class="pl-c1"&gt;inReceipt&lt;/span&gt;: receipt)
        &lt;span class="pl-k"&gt;switch&lt;/span&gt; purchaseResult {
        &lt;span class="pl-k"&gt;case&lt;/span&gt; .&lt;span class="pl-c1"&gt;purchased&lt;/span&gt;(&lt;span class="pl-k"&gt;let&lt;/span&gt; expiryDate, &lt;span class="pl-k"&gt;let&lt;/span&gt; items)&lt;span class="pl-k"&gt;:&lt;/span&gt;
            &lt;span class="pl-c1"&gt;print&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;span class="pl-pse"&gt;\(&lt;/span&gt;&lt;span class="pl-s1"&gt;productIds&lt;/span&gt;&lt;span class="pl-pse"&gt;&lt;span class="pl-s1"&gt;)&lt;/span&gt;&lt;/span&gt; are valid until &lt;span class="pl-pse"&gt;\(&lt;/span&gt;&lt;span class="pl-s1"&gt;expiryDate&lt;/span&gt;&lt;span class="pl-pse"&gt;&lt;span class="pl-s1"&gt;)&lt;/span&gt;&lt;/span&gt;&lt;span class="pl-cce"&gt;\n&lt;/span&gt;&lt;span class="pl-pse"&gt;\(&lt;/span&gt;&lt;span class="pl-s1"&gt;items&lt;/span&gt;&lt;span class="pl-pse"&gt;&lt;span class="pl-s1"&gt;)&lt;/span&gt;&lt;/span&gt;&lt;span class="pl-cce"&gt;\n&lt;/span&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
        &lt;span class="pl-k"&gt;case&lt;/span&gt; .&lt;span class="pl-c1"&gt;expired&lt;/span&gt;(&lt;span class="pl-k"&gt;let&lt;/span&gt; expiryDate, &lt;span class="pl-k"&gt;let&lt;/span&gt; items)&lt;span class="pl-k"&gt;:&lt;/span&gt;
            &lt;span class="pl-c1"&gt;print&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;span class="pl-pse"&gt;\(&lt;/span&gt;&lt;span class="pl-s1"&gt;productIds&lt;/span&gt;&lt;span class="pl-pse"&gt;&lt;span class="pl-s1"&gt;)&lt;/span&gt;&lt;/span&gt; are expired since &lt;span class="pl-pse"&gt;\(&lt;/span&gt;&lt;span class="pl-s1"&gt;expiryDate&lt;/span&gt;&lt;span class="pl-pse"&gt;&lt;span class="pl-s1"&gt;)&lt;/span&gt;&lt;/span&gt;&lt;span class="pl-cce"&gt;\n&lt;/span&gt;&lt;span class="pl-pse"&gt;\(&lt;/span&gt;&lt;span class="pl-s1"&gt;items&lt;/span&gt;&lt;span class="pl-pse"&gt;&lt;span class="pl-s1"&gt;)&lt;/span&gt;&lt;/span&gt;&lt;span class="pl-cce"&gt;\n&lt;/span&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
        &lt;span class="pl-k"&gt;case&lt;/span&gt; .&lt;span class="pl-smi"&gt;notPurchased&lt;/span&gt;&lt;span class="pl-k"&gt;:&lt;/span&gt;
            &lt;span class="pl-c1"&gt;print&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;The user has never purchased &lt;span class="pl-pse"&gt;\(&lt;/span&gt;&lt;span class="pl-s1"&gt;productIds&lt;/span&gt;&lt;span class="pl-pse"&gt;&lt;span class="pl-s1"&gt;)&lt;/span&gt;&lt;/span&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
        }
    &lt;span class="pl-k"&gt;case&lt;/span&gt; .&lt;span class="pl-c1"&gt;error&lt;/span&gt;(&lt;span class="pl-k"&gt;let&lt;/span&gt; error)&lt;span class="pl-k"&gt;:&lt;/span&gt;
        &lt;span class="pl-c1"&gt;print&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;Receipt verification failed: &lt;span class="pl-pse"&gt;\(&lt;/span&gt;&lt;span class="pl-s1"&gt;error&lt;/span&gt;&lt;span class="pl-pse"&gt;&lt;span class="pl-s1"&gt;)&lt;/span&gt;&lt;/span&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
    }
}&lt;/pre&gt;&lt;/div&gt;
&lt;h2&gt;&lt;a id="user-content-notes" class="anchor" aria-hidden="true" href="#notes"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Notes&lt;/h2&gt;
&lt;p&gt;The framework provides a simple block based API with robust error handling on top of the existing StoreKit framework. It does &lt;strong&gt;NOT&lt;/strong&gt; persist in app purchases data locally. It is up to clients to do this with a storage solution of choice (i.e. NSUserDefaults, CoreData, Keychain).&lt;/p&gt;
&lt;h4&gt;&lt;a id="user-content-swift-2x--3x--4x--5x" class="anchor" aria-hidden="true" href="#swift-2x--3x--4x--5x"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Swift 2.x / 3.x / 4.x / 5.x&lt;/h4&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Language&lt;/th&gt;
&lt;th&gt;Branch&lt;/th&gt;
&lt;th&gt;Pod version&lt;/th&gt;
&lt;th&gt;Xcode version&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;Swift 5.x&lt;/td&gt;
&lt;td&gt;&lt;a href="https://github.com/bizz84/SwiftyStoreKit/tree/master"&gt;master&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&amp;gt;= 0.15.0&lt;/td&gt;
&lt;td&gt;Xcode 10.2 or greater&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Swift 4.x&lt;/td&gt;
&lt;td&gt;&lt;a href="https://github.com/bizz84/SwiftyStoreKit/tree/master"&gt;master&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&amp;gt;= 0.10.4&lt;/td&gt;
&lt;td&gt;Xcode 9 or greater&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Swift 3.x&lt;/td&gt;
&lt;td&gt;&lt;a href="https://github.com/bizz84/SwiftyStoreKit/tree/master"&gt;master&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&amp;gt;= 0.5.x&lt;/td&gt;
&lt;td&gt;Xcode 8.x&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Swift 2.3&lt;/td&gt;
&lt;td&gt;&lt;a href="https://github.com/bizz84/SwiftyStoreKit/tree/swift-2.3"&gt;swift-2.3&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;0.4.x&lt;/td&gt;
&lt;td&gt;Xcode 8, Xcode 7.3.x&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Swift 2.2&lt;/td&gt;
&lt;td&gt;&lt;a href="https://github.com/bizz84/SwiftyStoreKit/tree/swift-2.2"&gt;swift-2.2&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;0.3.x&lt;/td&gt;
&lt;td&gt;Xcode 7.3.x&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h2&gt;&lt;a id="user-content-change-log" class="anchor" aria-hidden="true" href="#change-log"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Change Log&lt;/h2&gt;
&lt;p&gt;See the &lt;a href="https://github.com/bizz84/SwiftyStoreKit/releases"&gt;Releases Page&lt;/a&gt;.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-sample-code" class="anchor" aria-hidden="true" href="#sample-code"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Sample Code&lt;/h2&gt;
&lt;p&gt;The project includes demo apps &lt;a href="https://github.com/bizz84/SwiftyStoreKit/blob/master/SwiftyStoreKit-iOS-Demo/ViewController.swift"&gt;for iOS&lt;/a&gt; &lt;a href="https://github.com/bizz84/SwiftyStoreKit/blob/master/SwiftyStoreKit-macOS-Demo/ViewController.swift"&gt;and macOS&lt;/a&gt; showing how to use SwiftyStoreKit.
Note that the pre-registered in app purchases in the demo apps are for illustration purposes only and may not work as iTunes Connect may invalidate them.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-essential-reading" class="anchor" aria-hidden="true" href="#essential-reading"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Essential Reading&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://developer.apple.com/videos/play/wwdc2016/702/" rel="nofollow"&gt;Apple - WWDC16, Session 702: Using Store Kit for In-app Purchases with Swift 3&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://developer.apple.com/library/content/technotes/tn2387/_index.html" rel="nofollow"&gt;Apple - TN2387: In-App Purchase Best Practices&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://developer.apple.com/library/content/technotes/tn2413/_index.html" rel="nofollow"&gt;Apple - TN2413: In-App Purchase FAQ&lt;/a&gt; (also see &lt;a href="https://developer.apple.com/library/content/technotes/tn2413/_index.html#//apple_ref/doc/uid/DTS40016228-CH1-ERROR_MESSAGES-CANNOT_CONNECT_TO_ITUNES_STORE" rel="nofollow"&gt;Cannot connect to iTunes Store&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;a href="https://developer.apple.com/library/content/technotes/tn2259/_index.html" rel="nofollow"&gt;Apple - TN2259: Adding In-App Purchase to Your Applications&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://help.apple.com/itunes-connect/developer/#/devb57be10e7" rel="nofollow"&gt;iTunes Connect Developer Help - Workflow for configuring in-app purchases&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://developer.apple.com/library/content/releasenotes/General/ValidateAppStoreReceipt/Introduction.html" rel="nofollow"&gt;Apple - About Receipt Validation&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://developer.apple.com/library/content/releasenotes/General/ValidateAppStoreReceipt/Chapters/ReceiptFields.html#//apple_ref/doc/uid/TP40010573-CH106-SW1" rel="nofollow"&gt;Apple - Receipt Validation Programming Guide&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://developer.apple.com/library/content/releasenotes/General/ValidateAppStoreReceipt/Chapters/ValidateLocally.html" rel="nofollow"&gt;Apple - Validating Receipts Locally&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://developer.apple.com/library/content/documentation/NetworkingInternet/Conceptual/StoreKitGuide/Chapters/Subscriptions.html#//apple_ref/doc/uid/TP40008267-CH7-SW6" rel="nofollow"&gt;Apple - Working with Subscriptions&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://developer.apple.com/app-store/subscriptions/" rel="nofollow"&gt;Apple - Offering Subscriptions&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://developer.apple.com/library/content/documentation/NetworkingInternet/Conceptual/StoreKitGuide/Chapters/Restoring.html#//apple_ref/doc/uid/TP40008267-CH8-SW9" rel="nofollow"&gt;Apple - Restoring Purchased Products&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://developer.apple.com/library/content/documentation/LanguagesUtilities/Conceptual/iTunesConnectInAppPurchase_Guide/Chapters/TestingInAppPurchases.html" rel="nofollow"&gt;Apple - Testing In-App Purchase Products&lt;/a&gt;: includes info on duration of subscriptions in sandbox mode&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.objc.io/issues/17-security/receipt-validation/" rel="nofollow"&gt;objc.io - Receipt Validation&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;I have also written about building SwiftyStoreKit on Medium:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://medium.com/ios-os-x-development/how-i-got-1000-%EF%B8%8F-on-my-github-project-654d3d394ca6#.1idp27olf" rel="nofollow"&gt;How I got 1000 &lt;g-emoji class="g-emoji" alias="star" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/2b50.png"&gt;⭐️&lt;/g-emoji&gt; on my GitHub Project&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://medium.com/@biz84/maintaining-a-growing-open-source-project-1d385ca84c5#.4cv2g7tdc" rel="nofollow"&gt;Maintaining a Growing Open Source Project&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;&lt;a id="user-content-troubleshooting" class="anchor" aria-hidden="true" href="#troubleshooting"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Troubleshooting&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://developer.apple.com/library/content/technotes/tn2413/_index.html#//apple_ref/doc/uid/DTS40016228-CH1-TROUBLESHOOTING-WHY_ARE_MY_PRODUCT_IDENTIFIERS_BEING_RETURNED_IN_THE_INVALIDPRODUCTIDENTIFIERS_ARRAY_" rel="nofollow"&gt;Apple TN 2413 - Why are my product identifiers being returned in the invalidProductIdentifiers array?&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://troybrant.net/blog/2010/01/invalid-product-ids/" rel="nofollow"&gt;Invalid Product IDs&lt;/a&gt;: Checklist of common mistakes&lt;/li&gt;
&lt;li&gt;&lt;a href="http://davidbarnard.com/post/164337147440/testing-auto-renewable-subscriptions-on-ios" rel="nofollow"&gt;Testing Auto-Renewable Subscriptions on iOS&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://forums.developer.apple.com/message/261428#261428" rel="nofollow"&gt;Apple forums - iOS 11 beta sandbox - cannot connect to App Store&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-video-tutorials" class="anchor" aria-hidden="true" href="#video-tutorials"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Video Tutorials&lt;/h2&gt;
&lt;h4&gt;&lt;a id="user-content-jared-davidson-in-app-purchases-swift-3-in-xcode--swifty-store-kit" class="anchor" aria-hidden="true" href="#jared-davidson-in-app-purchases-swift-3-in-xcode--swifty-store-kit"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Jared Davidson: In App Purchases! (Swift 3 in Xcode : Swifty Store Kit)&lt;/h4&gt;
&lt;p&gt;&lt;a href="https://www.youtube.com/watch?v=dwPFtwDJ7tcb" rel="nofollow"&gt;&lt;img src="https://raw.githubusercontent.com/bizz84/SwiftyStoreKit/master/Screenshots/VideoTutorial-JaredDavidson.jpg" width="854" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h4&gt;&lt;a id="user-content-rebeloper-ultimate-in-app-purchases-guide" class="anchor" aria-hidden="true" href="#rebeloper-ultimate-in-app-purchases-guide"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;a href="https://github.com/rebeloper"&gt;@rebeloper&lt;/a&gt;: Ultimate In-app Purchases Guide&lt;/h4&gt;
&lt;p&gt;&lt;a href="https://www.youtube.com/watch?v=bIyj6BZ1-Qw&amp;amp;list=PL_csAAO9PQ8b9kqrltk2_SpYslTwyrwjb" rel="nofollow"&gt;&lt;img src="https://raw.githubusercontent.com/bizz84/SwiftyStoreKit/master/Screenshots/VideoTutorial-Rebeloper.jpg" width="854" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-payment-flows-implementation-details" class="anchor" aria-hidden="true" href="#payment-flows-implementation-details"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Payment flows: implementation details&lt;/h2&gt;
&lt;p&gt;In order to make a purchase, two operations are needed:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Perform a &lt;code&gt;SKProductRequest&lt;/code&gt; to obtain the &lt;code&gt;SKProduct&lt;/code&gt; corresponding to the product identifier.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Submit the payment and listen for updated transactions on the &lt;code&gt;SKPaymentQueue&lt;/code&gt;.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;The framework takes care of caching SKProducts so that future requests for the same &lt;code&gt;SKProduct&lt;/code&gt; don't need to perform a new &lt;code&gt;SKProductRequest&lt;/code&gt;.&lt;/p&gt;
&lt;h4&gt;&lt;a id="user-content-payment-queue" class="anchor" aria-hidden="true" href="#payment-queue"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Payment queue&lt;/h4&gt;
&lt;p&gt;The following list outlines how requests are processed by SwiftyStoreKit.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;SKPaymentQueue&lt;/code&gt; is used to queue payments or restore purchases requests.&lt;/li&gt;
&lt;li&gt;Payments are processed serially and in-order and require user interaction.&lt;/li&gt;
&lt;li&gt;Restore purchases requests don't require user interaction and can jump ahead of the queue.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;SKPaymentQueue&lt;/code&gt; rejects multiple restore purchases calls.&lt;/li&gt;
&lt;li&gt;Failed transactions only ever belong to queued payment requests.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;restoreCompletedTransactionsFailedWithError&lt;/code&gt; is always called when a restore purchases request fails.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;paymentQueueRestoreCompletedTransactionsFinished&lt;/code&gt; is always called following 0 or more update transactions when a restore purchases request succeeds.&lt;/li&gt;
&lt;li&gt;A complete transactions handler is require to catch any transactions that are updated when the app is not running.&lt;/li&gt;
&lt;li&gt;Registering a complete transactions handler when the app launches ensures that any pending transactions can be cleared.&lt;/li&gt;
&lt;li&gt;If a complete transactions handler is missing, pending transactions can be mis-attributed to any new incoming payments or restore purchases.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;The order in which transaction updates are processed is:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;payments (transactionState: &lt;code&gt;.purchased&lt;/code&gt; and &lt;code&gt;.failed&lt;/code&gt; for matching product identifiers)&lt;/li&gt;
&lt;li&gt;restore purchases (transactionState: &lt;code&gt;.restored&lt;/code&gt;, or &lt;code&gt;restoreCompletedTransactionsFailedWithError&lt;/code&gt;, or &lt;code&gt;paymentQueueRestoreCompletedTransactionsFinished&lt;/code&gt;)&lt;/li&gt;
&lt;li&gt;complete transactions (transactionState: &lt;code&gt;.purchased&lt;/code&gt;, &lt;code&gt;.failed&lt;/code&gt;, &lt;code&gt;.restored&lt;/code&gt;, &lt;code&gt;.deferred&lt;/code&gt;)&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;Any transactions where state is &lt;code&gt;.purchasing&lt;/code&gt; are ignored.&lt;/p&gt;
&lt;p&gt;See &lt;a href="https://github.com/bizz84/SwiftyStoreKit/pull/131"&gt;this pull request&lt;/a&gt; for full details about how the payment flows have been implemented.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-credits" class="anchor" aria-hidden="true" href="#credits"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Credits&lt;/h2&gt;
&lt;p&gt;Many thanks to &lt;a href="https://github.com/phimage"&gt;phimage&lt;/a&gt; for adding macOS support and receipt verification.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-apps-using-swiftystorekit" class="anchor" aria-hidden="true" href="#apps-using-swiftystorekit"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Apps using SwiftyStoreKit&lt;/h2&gt;
&lt;p&gt;It would be great to showcase apps using SwiftyStoreKit here. Pull requests welcome :)&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://itunes.apple.com/us/app/every-plant-ever/id1433967019" rel="nofollow"&gt;Every Plant, Ever&lt;/a&gt; - The sticker pack of every plant, ever.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://countdowns.download/ssk" rel="nofollow"&gt;Countdown&lt;/a&gt; - Countdown the days until your next vacation, deadline, or event&lt;/li&gt;
&lt;li&gt;&lt;a href="https://itunes.apple.com/app/id1044050208" rel="nofollow"&gt;MDacne&lt;/a&gt; - Acne analysis and treatment&lt;/li&gt;
&lt;li&gt;&lt;a href="https://itunes.apple.com/app/id930804327" rel="nofollow"&gt;Pixel Picker&lt;/a&gt; - Image Color Picker&lt;/li&gt;
&lt;li&gt;&lt;a href="https://itunes.apple.com/app/id1037000234" rel="nofollow"&gt;KType&lt;/a&gt; - Space shooter game&lt;/li&gt;
&lt;li&gt;&lt;a href="https://itunes.apple.com/app/id1101244278" rel="nofollow"&gt;iPic&lt;/a&gt; - Automatically upload images and save Markdown links&lt;/li&gt;
&lt;li&gt;&lt;a href="https://itunes.apple.com/app/id1102004240" rel="nofollow"&gt;iHosts&lt;/a&gt; - Perfect for editing /etc/hosts&lt;/li&gt;
&lt;li&gt;&lt;a href="http://www.abnehm-app.de/" rel="nofollow"&gt;Arise&lt;/a&gt; - Calorie counter&lt;/li&gt;
&lt;li&gt;&lt;a href="https://itunes.apple.com/app/id1130832864" rel="nofollow"&gt;Truth Truth Lie&lt;/a&gt; - iMessage game, featured by Apple&lt;/li&gt;
&lt;li&gt;&lt;a href="https://itunes.apple.com/app/id557446352" rel="nofollow"&gt;Tactus Music Player&lt;/a&gt; - Alternative music player app&lt;/li&gt;
&lt;li&gt;&lt;a href="https://itunes.apple.com/app/id939540371" rel="nofollow"&gt;Drops&lt;/a&gt; - Language learning app&lt;/li&gt;
&lt;li&gt;&lt;a href="https://itunes.apple.com/app/id1063000470" rel="nofollow"&gt;Fresh Snow&lt;/a&gt; - Colorado Ski Report&lt;/li&gt;
&lt;li&gt;&lt;a href="http://grandcanyon.zmeu.guide/" rel="nofollow"&gt;Zmeu Grand Canyon&lt;/a&gt; - Interactive hiking map &amp;amp; planner&lt;/li&gt;
&lt;li&gt;&lt;a href="https://itunes.apple.com/app/id1073398446" rel="nofollow"&gt;OB Monitor&lt;/a&gt; - The app for Texas Longhorns athletics fans&lt;/li&gt;
&lt;li&gt;&lt;a href="https://itunes.apple.com/us/app/talk-dim-sum/id953929066" rel="nofollow"&gt;Talk Dim Sum&lt;/a&gt; - Your dim sum companion&lt;/li&gt;
&lt;li&gt;&lt;a href="https://itunes.apple.com/app/id1160131071" rel="nofollow"&gt;Sluggard&lt;/a&gt; - Perform simple exercises to reduce the risks of sedentary lifestyle&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;A full list of apps is published &lt;a href="https://www.appsight.io/sdk/574154" rel="nofollow"&gt;on AppSight&lt;/a&gt;.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-license" class="anchor" aria-hidden="true" href="#license"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;License&lt;/h2&gt;
&lt;p&gt;Copyright (c) 2015-2018 Andrea Bizzotto &lt;a href="mailto:bizz84@gmail.com"&gt;bizz84@gmail.com&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the "Software"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions:&lt;/p&gt;
&lt;p&gt;The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.&lt;/p&gt;
&lt;p&gt;THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.&lt;/p&gt;
&lt;/article&gt;&lt;/div&gt;</description><author>bizz84</author><guid isPermaLink="false">https://github.com/bizz84/SwiftyStoreKit</guid><pubDate>Fri, 08 Nov 2019 00:17:00 GMT</pubDate></item><item><title>SwipeCellKit/SwipeCellKit #18 in Swift, This week</title><link>https://github.com/SwipeCellKit/SwipeCellKit</link><description>&lt;p&gt;&lt;i&gt;Swipeable UITableViewCell/UICollectionViewCell based on the stock Mail.app, implemented in Swift.&lt;/i&gt;&lt;/p&gt;&lt;div id="readme" class="instapaper_body md" data-path="README.md"&gt;&lt;article class="markdown-body entry-content p-5" itemprop="text"&gt;&lt;h1&gt;&lt;a id="user-content-swipecellkit" class="anchor" aria-hidden="true" href="#swipecellkit"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;SwipeCellKit&lt;/h1&gt;
&lt;p&gt;&lt;a href="https://travis-ci.org/jerkoch/SwipeCellKit" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/4fcd720196659aedbbf0a6558bb2cac056b37c0c/68747470733a2f2f7472617669732d63692e6f72672f6a65726b6f63682f537769706543656c6c4b69742e737667" alt="Build Status" data-canonical-src="https://travis-ci.org/jerkoch/SwipeCellKit.svg" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://cocoapods.org/pods/SwipeCellKit" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/e673f9bebc91d5bcd7c911152e9ff36ac458b453/68747470733a2f2f696d672e736869656c64732e696f2f636f636f61706f64732f762f537769706543656c6c4b69742e737667" alt="Version Status" data-canonical-src="https://img.shields.io/cocoapods/v/SwipeCellKit.svg" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://developer.apple.com/swift/" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/c44447970d8ab760d39e09c8b3837dff55f74fd1/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f53776966742d352e302d6f72616e67652e7376673f7374796c653d666c6174" alt="Swift 5.0" data-canonical-src="https://img.shields.io/badge/Swift-5.0-orange.svg?style=flat" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="http://opensource.org/licenses/MIT" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/3db2b440dbec3c7d07ab312602b33dea4f6563d0/68747470733a2f2f696d672e736869656c64732e696f2f636f636f61706f64732f6c2f537769706543656c6c4b69742e737667" alt="license MIT" data-canonical-src="https://img.shields.io/cocoapods/l/SwipeCellKit.svg" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://swipecellkit.github.io/SwipeCellKit/" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/8d0e941fa1d123e66a3f4a67494f2fbdef92ef1c/68747470733a2f2f696d672e736869656c64732e696f2f636f636f61706f64732f702f537769706543656c6c4b69742e737667" alt="Platform" data-canonical-src="https://img.shields.io/cocoapods/p/SwipeCellKit.svg" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://github.com/Carthage/Carthage"&gt;&lt;img src="https://camo.githubusercontent.com/3dc8a44a2c3f7ccd5418008d1295aae48466c141/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f43617274686167652d636f6d70617469626c652d3442433531442e7376673f7374796c653d666c6174" alt="Carthage compatible" data-canonical-src="https://img.shields.io/badge/Carthage-compatible-4BC51D.svg?style=flat" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://twitter.com/mkurabi" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/1d27cac1c85325cf0abeb23a51e853aa3aae60d7/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f747769747465722d406d6b75726162692d626c75652e7376673f7374796c653d666c6174" alt="Twitter" data-canonical-src="https://img.shields.io/badge/twitter-@mkurabi-blue.svg?style=flat" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;em&gt;Swipeable UITableViewCell/UICollectionViewCell based on the stock Mail.app, implemented in Swift.&lt;/em&gt;&lt;/p&gt;
&lt;p align="center"&gt;&lt;a target="_blank" rel="noopener noreferrer" href="https://raw.githubusercontent.com/jerkoch/SwipeCellKit/develop/Screenshots/Hero.gif"&gt;&lt;img src="https://raw.githubusercontent.com/jerkoch/SwipeCellKit/develop/Screenshots/Hero.gif" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-about" class="anchor" aria-hidden="true" href="#about"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;About&lt;/h2&gt;
&lt;p&gt;A swipeable &lt;code&gt;UITableViewCell&lt;/code&gt; or &lt;code&gt;UICollectionViewCell&lt;/code&gt; with support for:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Left and right swipe actions&lt;/li&gt;
&lt;li&gt;Action buttons with: &lt;em&gt;text only, text + image, image only&lt;/em&gt;&lt;/li&gt;
&lt;li&gt;Haptic Feedback&lt;/li&gt;
&lt;li&gt;Customizable transitions: &lt;em&gt;Border, Drag, and Reveal&lt;/em&gt;&lt;/li&gt;
&lt;li&gt;Customizable action button behavior during swipe&lt;/li&gt;
&lt;li&gt;Animated expansion when dragging past threshold&lt;/li&gt;
&lt;li&gt;Customizable expansion animations&lt;/li&gt;
&lt;li&gt;Support for both &lt;code&gt;UITableView&lt;/code&gt; and &lt;code&gt;UICollectionView&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Accessibility&lt;/li&gt;
&lt;li&gt;Dark Mode&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-background" class="anchor" aria-hidden="true" href="#background"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Background&lt;/h2&gt;
&lt;p&gt;Check out my &lt;a href="https://jerkoch.com/2017/02/07/swiper-no-swiping.html" rel="nofollow"&gt;blog post&lt;/a&gt; on how &lt;em&gt;SwipeCellKit&lt;/em&gt; came to be.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-demo" class="anchor" aria-hidden="true" href="#demo"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Demo&lt;/h2&gt;
&lt;h3&gt;&lt;a id="user-content-transition-styles" class="anchor" aria-hidden="true" href="#transition-styles"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Transition Styles&lt;/h3&gt;
&lt;p&gt;The transition style describes how the action buttons are exposed during the swipe.&lt;/p&gt;
&lt;h4&gt;&lt;a id="user-content-border" class="anchor" aria-hidden="true" href="#border"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Border&lt;/h4&gt;
&lt;p align="center"&gt;&lt;a target="_blank" rel="noopener noreferrer" href="https://raw.githubusercontent.com/jerkoch/SwipeCellKit/develop/Screenshots/Transition-Border.gif"&gt;&lt;img src="https://raw.githubusercontent.com/jerkoch/SwipeCellKit/develop/Screenshots/Transition-Border.gif" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h4&gt;&lt;a id="user-content-drag" class="anchor" aria-hidden="true" href="#drag"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Drag&lt;/h4&gt;
&lt;p align="center"&gt;&lt;a target="_blank" rel="noopener noreferrer" href="https://raw.githubusercontent.com/jerkoch/SwipeCellKit/develop/Screenshots/Transition-Drag.gif"&gt;&lt;img src="https://raw.githubusercontent.com/jerkoch/SwipeCellKit/develop/Screenshots/Transition-Drag.gif" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h4&gt;&lt;a id="user-content-reveal" class="anchor" aria-hidden="true" href="#reveal"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Reveal&lt;/h4&gt;
&lt;p align="center"&gt;&lt;a target="_blank" rel="noopener noreferrer" href="https://raw.githubusercontent.com/jerkoch/SwipeCellKit/develop/Screenshots/Transition-Reveal.gif"&gt;&lt;img src="https://raw.githubusercontent.com/jerkoch/SwipeCellKit/develop/Screenshots/Transition-Reveal.gif" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h4&gt;&lt;a id="user-content-customized" class="anchor" aria-hidden="true" href="#customized"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Customized&lt;/h4&gt;
&lt;p align="center"&gt;&lt;a target="_blank" rel="noopener noreferrer" href="https://raw.githubusercontent.com/jerkoch/SwipeCellKit/develop/Screenshots/Transition-Delegate.gif"&gt;&lt;img src="https://raw.githubusercontent.com/jerkoch/SwipeCellKit/develop/Screenshots/Transition-Delegate.gif" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-expansion-styles" class="anchor" aria-hidden="true" href="#expansion-styles"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Expansion Styles&lt;/h3&gt;
&lt;p&gt;The expansion style describes the behavior when the cell is swiped past a defined threshold.&lt;/p&gt;
&lt;h4&gt;&lt;a id="user-content-none" class="anchor" aria-hidden="true" href="#none"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;None&lt;/h4&gt;
&lt;p align="center"&gt;&lt;a target="_blank" rel="noopener noreferrer" href="https://raw.githubusercontent.com/jerkoch/SwipeCellKit/develop/Screenshots/Expansion-None.gif"&gt;&lt;img src="https://raw.githubusercontent.com/jerkoch/SwipeCellKit/develop/Screenshots/Expansion-None.gif" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h4&gt;&lt;a id="user-content-selection" class="anchor" aria-hidden="true" href="#selection"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Selection&lt;/h4&gt;
&lt;p align="center"&gt;&lt;a target="_blank" rel="noopener noreferrer" href="https://raw.githubusercontent.com/jerkoch/SwipeCellKit/develop/Screenshots/Expansion-Selection.gif"&gt;&lt;img src="https://raw.githubusercontent.com/jerkoch/SwipeCellKit/develop/Screenshots/Expansion-Selection.gif" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h4&gt;&lt;a id="user-content-destructive" class="anchor" aria-hidden="true" href="#destructive"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Destructive&lt;/h4&gt;
&lt;p align="center"&gt;&lt;a target="_blank" rel="noopener noreferrer" href="https://raw.githubusercontent.com/jerkoch/SwipeCellKit/develop/Screenshots/Expansion-Destructive.gif"&gt;&lt;img src="https://raw.githubusercontent.com/jerkoch/SwipeCellKit/develop/Screenshots/Expansion-Destructive.gif" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h4&gt;&lt;a id="user-content-customized-1" class="anchor" aria-hidden="true" href="#customized-1"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Customized&lt;/h4&gt;
&lt;p align="center"&gt;&lt;a target="_blank" rel="noopener noreferrer" href="https://raw.githubusercontent.com/jerkoch/SwipeCellKit/develop/Screenshots/Expansion-Delegate.gif"&gt;&lt;img src="https://raw.githubusercontent.com/jerkoch/SwipeCellKit/develop/Screenshots/Expansion-Delegate.gif" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-requirements" class="anchor" aria-hidden="true" href="#requirements"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Requirements&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Swift 5.0&lt;/li&gt;
&lt;li&gt;Xcode 10.3+&lt;/li&gt;
&lt;li&gt;iOS 9.0+&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-installation" class="anchor" aria-hidden="true" href="#installation"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Installation&lt;/h2&gt;
&lt;h4&gt;&lt;a id="user-content-cocoapods-recommended" class="anchor" aria-hidden="true" href="#cocoapods-recommended"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;a href="http://cocoapods.org" rel="nofollow"&gt;CocoaPods&lt;/a&gt; (recommended)&lt;/h4&gt;
&lt;div class="highlight highlight-source-ruby"&gt;&lt;pre&gt;use_frameworks!

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; Latest release in CocoaPods&lt;/span&gt;
pod &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;SwipeCellKit&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; Get the latest on develop&lt;/span&gt;
pod &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;SwipeCellKit&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-c1"&gt;:git&lt;/span&gt; =&amp;gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;https://github.com/SwipeCellKit/SwipeCellKit.git&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-c1"&gt;:branch&lt;/span&gt; =&amp;gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;develop&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; If you have NOT upgraded to Xcode 11, use the last Swift Xcode 10.X compatible release&lt;/span&gt;
pod &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;SwipeCellKit&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;2.6.0&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; If you have NOT upgraded to Swift 5.0, use the last Swift 4.2/Xcode 10.2 compatible release&lt;/span&gt;
pod &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;SwipeCellKit&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;2.5.4&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; If you have NOT upgraded to Swift 4.2, use the last non-swift 4.2 compatible release&lt;/span&gt;
pod &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;SwipeCellKit&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;2.4.3&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h4&gt;&lt;a id="user-content-carthage" class="anchor" aria-hidden="true" href="#carthage"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;a href="https://github.com/Carthage/Carthage"&gt;Carthage&lt;/a&gt;&lt;/h4&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt;github &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;SwipeCellKit/SwipeCellKit&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h4&gt;&lt;a id="user-content-swift-package-manager" class="anchor" aria-hidden="true" href="#swift-package-manager"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;a href="https://swift.org/package-manager/" rel="nofollow"&gt;Swift Package Manager&lt;/a&gt;&lt;/h4&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;dependencies&lt;span class="pl-k"&gt;:&lt;/span&gt; [
    .&lt;span class="pl-c1"&gt;package&lt;/span&gt;(&lt;span class="pl-c1"&gt;url&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;git@github.com:SwipeCellKit/SwipeCellKit.git&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-c1"&gt;from&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;2.7.1&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
]&lt;/pre&gt;&lt;/div&gt;
&lt;h2&gt;&lt;a id="user-content-documentation" class="anchor" aria-hidden="true" href="#documentation"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Documentation&lt;/h2&gt;
&lt;p&gt;Read the &lt;a href="https://swipecellkit.github.io/SwipeCellKit/" rel="nofollow"&gt;docs&lt;/a&gt;. Generated with &lt;a href="https://github.com/realm/jazzy"&gt;jazzy&lt;/a&gt;. Hosted by &lt;a href="https://pages.github.com"&gt;GitHub Pages&lt;/a&gt;.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-usage-for-uitableview" class="anchor" aria-hidden="true" href="#usage-for-uitableview"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Usage for UITableView&lt;/h2&gt;
&lt;p&gt;Set the &lt;code&gt;delegate&lt;/code&gt; property on &lt;code&gt;SwipeTableViewCell&lt;/code&gt;:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;override&lt;/span&gt; &lt;span class="pl-k"&gt;func&lt;/span&gt; &lt;span class="pl-en"&gt;tableView&lt;/span&gt;(&lt;span class="pl-en"&gt;_&lt;/span&gt; &lt;span class="pl-smi"&gt;tableView&lt;/span&gt;: UITableView, &lt;span class="pl-en"&gt;cellForRowAt&lt;/span&gt; &lt;span class="pl-smi"&gt;indexPath&lt;/span&gt;: IndexPath) &lt;span class="pl-k"&gt;-&amp;gt;&lt;/span&gt; UITableViewCell {
    &lt;span class="pl-k"&gt;let&lt;/span&gt; cell &lt;span class="pl-k"&gt;=&lt;/span&gt; tableView.&lt;span class="pl-c1"&gt;dequeueReusableCell&lt;/span&gt;(&lt;span class="pl-c1"&gt;withIdentifier&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;Cell&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;) &lt;span class="pl-k"&gt;as!&lt;/span&gt; SwipeTableViewCell
    cell.&lt;span class="pl-smi"&gt;delegate&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;self&lt;/span&gt;
    &lt;span class="pl-k"&gt;return&lt;/span&gt; cell
}&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Adopt the &lt;code&gt;SwipeTableViewCellDelegate&lt;/code&gt; protocol:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;func&lt;/span&gt; &lt;span class="pl-en"&gt;tableView&lt;/span&gt;(&lt;span class="pl-en"&gt;_&lt;/span&gt; &lt;span class="pl-smi"&gt;tableView&lt;/span&gt;: UITableView, &lt;span class="pl-en"&gt;editActionsForRowAt&lt;/span&gt; &lt;span class="pl-smi"&gt;indexPath&lt;/span&gt;: IndexPath, &lt;span class="pl-en"&gt;for&lt;/span&gt; &lt;span class="pl-smi"&gt;orientation&lt;/span&gt;: SwipeActionsOrientation) &lt;span class="pl-k"&gt;-&amp;gt;&lt;/span&gt; [SwipeAction]&lt;span class="pl-k"&gt;?&lt;/span&gt; {
    &lt;span class="pl-k"&gt;guard&lt;/span&gt; orientation &lt;span class="pl-k"&gt;==&lt;/span&gt; .&lt;span class="pl-smi"&gt;right&lt;/span&gt; &lt;span class="pl-k"&gt;else&lt;/span&gt; { &lt;span class="pl-k"&gt;return&lt;/span&gt; &lt;span class="pl-c1"&gt;nil&lt;/span&gt; }

    &lt;span class="pl-k"&gt;let&lt;/span&gt; deleteAction &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;SwipeAction&lt;/span&gt;(&lt;span class="pl-c1"&gt;style&lt;/span&gt;: .&lt;span class="pl-smi"&gt;destructive&lt;/span&gt;, &lt;span class="pl-c1"&gt;title&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;Delete&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;) { action, indexPath &lt;span class="pl-k"&gt;in&lt;/span&gt;
        &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; handle action by updating model with deletion&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;    }

    &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; customize the action appearance&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;    deleteAction.&lt;span class="pl-c1"&gt;image&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;UIImage&lt;/span&gt;(&lt;span class="pl-c1"&gt;named&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;delete&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)

    &lt;span class="pl-k"&gt;return&lt;/span&gt; [deleteAction]
}&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Optionally, you can implement the &lt;code&gt;editActionsOptionsForRowAt&lt;/code&gt; method to customize the behavior of the swipe actions:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;func&lt;/span&gt; &lt;span class="pl-en"&gt;tableView&lt;/span&gt;(&lt;span class="pl-en"&gt;_&lt;/span&gt; &lt;span class="pl-smi"&gt;tableView&lt;/span&gt;: UITableView, &lt;span class="pl-en"&gt;editActionsOptionsForRowAt&lt;/span&gt; &lt;span class="pl-smi"&gt;indexPath&lt;/span&gt;: IndexPath, &lt;span class="pl-en"&gt;for&lt;/span&gt; &lt;span class="pl-smi"&gt;orientation&lt;/span&gt;: SwipeActionsOrientation) &lt;span class="pl-k"&gt;-&amp;gt;&lt;/span&gt; SwipeOptions {
    &lt;span class="pl-k"&gt;var&lt;/span&gt; options &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;SwipeOptions&lt;/span&gt;()
    options.&lt;span class="pl-smi"&gt;expansionStyle&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; .&lt;span class="pl-smi"&gt;destructive&lt;/span&gt;
    options.&lt;span class="pl-smi"&gt;transitionStyle&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; .&lt;span class="pl-smi"&gt;border&lt;/span&gt;
    &lt;span class="pl-k"&gt;return&lt;/span&gt; options
}&lt;/pre&gt;&lt;/div&gt;
&lt;h2&gt;&lt;a id="user-content-usage-for-uicollectionview" class="anchor" aria-hidden="true" href="#usage-for-uicollectionview"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Usage for UICollectionView&lt;/h2&gt;
&lt;p&gt;Set the &lt;code&gt;delegate&lt;/code&gt; property on &lt;code&gt;SwipeCollectionViewCell&lt;/code&gt;:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;override&lt;/span&gt; &lt;span class="pl-k"&gt;func&lt;/span&gt; &lt;span class="pl-en"&gt;collectionView&lt;/span&gt;(&lt;span class="pl-en"&gt;_&lt;/span&gt; &lt;span class="pl-smi"&gt;collectionView&lt;/span&gt;: UICollectionView, &lt;span class="pl-en"&gt;cellForItemAt&lt;/span&gt; &lt;span class="pl-smi"&gt;indexPath&lt;/span&gt;: IndexPath) &lt;span class="pl-k"&gt;-&amp;gt;&lt;/span&gt; UICollectionViewCell {
    &lt;span class="pl-k"&gt;let&lt;/span&gt; cell &lt;span class="pl-k"&gt;=&lt;/span&gt; collectionView.&lt;span class="pl-c1"&gt;dequeueReusableCell&lt;/span&gt;(&lt;span class="pl-c1"&gt;withReuseIdentifier&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;Cell&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-c1"&gt;for&lt;/span&gt;: indexPath) &lt;span class="pl-k"&gt;as!&lt;/span&gt; SwipeCollectionViewCell
    cell.&lt;span class="pl-smi"&gt;delegate&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;self&lt;/span&gt;
    &lt;span class="pl-k"&gt;return&lt;/span&gt; cell
}&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Adopt the &lt;code&gt;SwipeCollectionViewCellDelegate&lt;/code&gt; protocol:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;func&lt;/span&gt; &lt;span class="pl-en"&gt;collectionView&lt;/span&gt;(&lt;span class="pl-en"&gt;_&lt;/span&gt; &lt;span class="pl-smi"&gt;collectionView&lt;/span&gt;: UICollectionView, &lt;span class="pl-en"&gt;editActionsForItemAt&lt;/span&gt; &lt;span class="pl-smi"&gt;indexPath&lt;/span&gt;: IndexPath, &lt;span class="pl-en"&gt;for&lt;/span&gt; &lt;span class="pl-smi"&gt;orientation&lt;/span&gt;: SwipeActionsOrientation) &lt;span class="pl-k"&gt;-&amp;gt;&lt;/span&gt; [SwipeAction]&lt;span class="pl-k"&gt;?&lt;/span&gt; {
    &lt;span class="pl-k"&gt;guard&lt;/span&gt; orientation &lt;span class="pl-k"&gt;==&lt;/span&gt; .&lt;span class="pl-smi"&gt;right&lt;/span&gt; &lt;span class="pl-k"&gt;else&lt;/span&gt; { &lt;span class="pl-k"&gt;return&lt;/span&gt; &lt;span class="pl-c1"&gt;nil&lt;/span&gt; }

    &lt;span class="pl-k"&gt;let&lt;/span&gt; deleteAction &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;SwipeAction&lt;/span&gt;(&lt;span class="pl-c1"&gt;style&lt;/span&gt;: .&lt;span class="pl-smi"&gt;destructive&lt;/span&gt;, &lt;span class="pl-c1"&gt;title&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;Delete&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;) { action, indexPath &lt;span class="pl-k"&gt;in&lt;/span&gt;
        &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; handle action by updating model with deletion&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;    }

    &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; customize the action appearance&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;    deleteAction.&lt;span class="pl-c1"&gt;image&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;UIImage&lt;/span&gt;(&lt;span class="pl-c1"&gt;named&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;delete&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)

    &lt;span class="pl-k"&gt;return&lt;/span&gt; [deleteAction]
}&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Optionally, you can implement the &lt;code&gt;editActionsOptionsForItemAt&lt;/code&gt; method to customize the behavior of the swipe actions:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;func&lt;/span&gt; &lt;span class="pl-en"&gt;collectionView&lt;/span&gt;(&lt;span class="pl-en"&gt;_&lt;/span&gt; &lt;span class="pl-smi"&gt;collectionView&lt;/span&gt;: UICollectionView, &lt;span class="pl-en"&gt;editActionsOptionsForItemAt&lt;/span&gt; &lt;span class="pl-smi"&gt;indexPath&lt;/span&gt;: IndexPath, &lt;span class="pl-en"&gt;for&lt;/span&gt; &lt;span class="pl-smi"&gt;orientation&lt;/span&gt;: SwipeActionsOrientation) &lt;span class="pl-k"&gt;-&amp;gt;&lt;/span&gt; SwipeOptions {
    &lt;span class="pl-k"&gt;var&lt;/span&gt; options &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;SwipeOptions&lt;/span&gt;()
    options.&lt;span class="pl-smi"&gt;expansionStyle&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; .&lt;span class="pl-smi"&gt;destructive&lt;/span&gt;
    options.&lt;span class="pl-smi"&gt;transitionStyle&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; .&lt;span class="pl-smi"&gt;border&lt;/span&gt;
    &lt;span class="pl-k"&gt;return&lt;/span&gt; options
}&lt;/pre&gt;&lt;/div&gt;
&lt;h3&gt;&lt;a id="user-content-transitions" class="anchor" aria-hidden="true" href="#transitions"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Transitions&lt;/h3&gt;
&lt;p&gt;Three built-in transition styles are provided by &lt;code&gt;SwipeTransitionStyle&lt;/code&gt;:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;.border: The visible action area is equally divide between all action buttons.&lt;/li&gt;
&lt;li&gt;.drag: The visible action area is dragged, pinned to the cell, with each action button fully sized as it is exposed.&lt;/li&gt;
&lt;li&gt;.reveal: The visible action area sits behind the cell, pinned to the edge of the table view, and is revealed as the cell is dragged aside.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;See &lt;a href="https://github.com/SwipeCellKit/SwipeCellKit/blob/develop/Guides/Advanced.md"&gt;Customizing Transitions&lt;/a&gt; for more details on customizing button appearance as the swipe is performed.&lt;/p&gt;
&lt;h4&gt;&lt;a id="user-content-transition-delegate" class="anchor" aria-hidden="true" href="#transition-delegate"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Transition Delegate&lt;/h4&gt;
&lt;p&gt;Transition for a &lt;code&gt;SwipeAction&lt;/code&gt; can be observered by setting a &lt;code&gt;SwipeActionTransitioning&lt;/code&gt; on the &lt;code&gt;transitionDelegate&lt;/code&gt; property. This allows you to observe what percentage is visible and access to the underlying &lt;code&gt;UIButton&lt;/code&gt; for that &lt;code&gt;SwipeAction&lt;/code&gt;.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-expansion" class="anchor" aria-hidden="true" href="#expansion"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Expansion&lt;/h3&gt;
&lt;p&gt;Four built-in expansion styles are provided by &lt;code&gt;SwipeExpansionStyle&lt;/code&gt;:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;.selection&lt;/li&gt;
&lt;li&gt;.destructive (like Mail.app)&lt;/li&gt;
&lt;li&gt;.destructiveAfterFill (like Mailbox/Tweetbot)&lt;/li&gt;
&lt;li&gt;.fill&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Much effort has gone into making &lt;code&gt;SwipeExpansionStyle&lt;/code&gt; extremely customizable. If these built-in styles do not meet your needs, see &lt;a href="https://github.com/SwipeCellKit/SwipeCellKit/blob/develop/Guides/Advanced.md"&gt;Customizing Expansion&lt;/a&gt; for more details on creating custom styles.&lt;/p&gt;
&lt;p&gt;The built-in &lt;code&gt;.fill&lt;/code&gt; expansion style requires manual action fulfillment. This means your action handler must call &lt;code&gt;SwipeAction.fulfill(style:)&lt;/code&gt; at some point during or after invocation to resolve the fill expansion. The supplied &lt;code&gt;ExpansionFulfillmentStyle&lt;/code&gt; allows you to delete or reset the cell at some later point (possibly after further user interaction).&lt;/p&gt;
&lt;p&gt;The built-in &lt;code&gt;.destructive&lt;/code&gt;, and &lt;code&gt;.destructiveAfterFill&lt;/code&gt; expansion styles are configured to automatically perform row deletion when the action handler is invoked (automatic fulfillment).  Your deletion behavior may require coordination with other row animations (eg. inside &lt;code&gt;beginUpdates&lt;/code&gt; and &lt;code&gt;endUpdates&lt;/code&gt;). In this case, you can easily create a custom &lt;code&gt;SwipeExpansionStyle&lt;/code&gt; which requires manual fulfillment to trigger deletion:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;var&lt;/span&gt; options &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;SwipeTableOptions&lt;/span&gt;()
options.&lt;span class="pl-smi"&gt;expansionStyle&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; .&lt;span class="pl-c1"&gt;destructive&lt;/span&gt;(&lt;span class="pl-c1"&gt;automaticallyDelete&lt;/span&gt;: &lt;span class="pl-c1"&gt;false&lt;/span&gt;)&lt;/pre&gt;&lt;/div&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;NOTE&lt;/strong&gt;: You must call &lt;code&gt;SwipeAction.fulfill(with style:)&lt;/code&gt; at some point while/after your action handler is invoked to trigger deletion. Do not call &lt;code&gt;deleteRows&lt;/code&gt; directly.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;let&lt;/span&gt; delete &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;SwipeAction&lt;/span&gt;(&lt;span class="pl-c1"&gt;style&lt;/span&gt;: .&lt;span class="pl-smi"&gt;destructive&lt;/span&gt;, &lt;span class="pl-c1"&gt;title&lt;/span&gt;: &lt;span class="pl-c1"&gt;nil&lt;/span&gt;) { action, indexPath &lt;span class="pl-k"&gt;in&lt;/span&gt;
    &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Update model&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;    &lt;span class="pl-c1"&gt;self&lt;/span&gt;.&lt;span class="pl-smi"&gt;emails&lt;/span&gt;.&lt;span class="pl-c1"&gt;remove&lt;/span&gt;(&lt;span class="pl-c1"&gt;at&lt;/span&gt;: indexPath.&lt;span class="pl-smi"&gt;row&lt;/span&gt;)
    action.&lt;span class="pl-c1"&gt;fulfill&lt;/span&gt;(&lt;span class="pl-c1"&gt;with&lt;/span&gt;: .&lt;span class="pl-smi"&gt;delete&lt;/span&gt;)
}&lt;/pre&gt;&lt;/div&gt;
&lt;h2&gt;&lt;a id="user-content-advanced" class="anchor" aria-hidden="true" href="#advanced"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Advanced&lt;/h2&gt;
&lt;p&gt;See the &lt;a href="https://github.com/SwipeCellKit/SwipeCellKit/blob/develop/Guides/Advanced.md"&gt;Advanced Guide&lt;/a&gt; for more details on customization.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-credits" class="anchor" aria-hidden="true" href="#credits"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Credits&lt;/h2&gt;
&lt;p&gt;Maintained by &lt;a href="https://twitter.com/mkurabi" rel="nofollow"&gt;&lt;strong&gt;@mkurabi&lt;/strong&gt;&lt;/a&gt;.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-showcase" class="anchor" aria-hidden="true" href="#showcase"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Showcase&lt;/h2&gt;
&lt;p&gt;We're interested in knowing &lt;a href="https://github.com/SwipeCellKit/SwipeCellKit/blob/develop/SHOWCASE.md"&gt;who's using &lt;em&gt;SwipeCellKit&lt;/em&gt;&lt;/a&gt; in their app. Please submit a pull request to add your app!&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-license" class="anchor" aria-hidden="true" href="#license"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;License&lt;/h2&gt;
&lt;p&gt;&lt;code&gt;SwipeCellKit&lt;/code&gt; is released under an &lt;a href="http://opensource.org/licenses/MIT" rel="nofollow"&gt;MIT License&lt;/a&gt;. See &lt;code&gt;LICENSE&lt;/code&gt; for details.&lt;/p&gt;
&lt;p&gt;&lt;em&gt;Please provide attribution, it is greatly appreciated.&lt;/em&gt;&lt;/p&gt;
&lt;/article&gt;&lt;/div&gt;</description><author>SwipeCellKit</author><guid isPermaLink="false">https://github.com/SwipeCellKit/SwipeCellKit</guid><pubDate>Fri, 08 Nov 2019 00:18:00 GMT</pubDate></item><item><title>cormiertyshawn895/Retroactive #19 in Swift, This week</title><link>https://github.com/cormiertyshawn895/Retroactive</link><description>&lt;p&gt;&lt;i&gt;Run Aperture, iPhoto, or iTunes on macOS Catalina.&lt;/i&gt;&lt;/p&gt;&lt;div id="readme" class="instapaper_body md" data-path="README.md"&gt;&lt;article class="markdown-body entry-content p-5" itemprop="text"&gt;&lt;h2&gt;&lt;a id="user-content-retroactive-is-an-app-that-lets-you-run-aperture-iphoto-and-itunes-on-macos-catalina-click-to-download-the-retroactive-app-or-view-the-release-page" class="anchor" aria-hidden="true" href="#retroactive-is-an-app-that-lets-you-run-aperture-iphoto-and-itunes-on-macos-catalina-click-to-download-the-retroactive-app-or-view-the-release-page"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Retroactive is an app that lets you run Aperture, iPhoto, and iTunes on macOS Catalina. &lt;a href="https://github.com/cormiertyshawn895/Retroactive/releases/download/1.1/Retroactive.1.1.zip"&gt;Click to download the Retroactive app&lt;/a&gt;, or &lt;a href="https://github.com/cormiertyshawn895/Retroactive/releases"&gt;view the release page&lt;/a&gt;.&lt;/h2&gt;
&lt;hr&gt;
&lt;h3&gt;&lt;a id="user-content-opening-retroactive" class="anchor" aria-hidden="true" href="#opening-retroactive"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Opening Retroactive&lt;/h3&gt;
&lt;p&gt;After downloading Retroactive, double click to open it. macOS may prompt you “Retroactive cannot be opened because it is from an unidentified developer.” This is completely normal and expected.&lt;/p&gt;
&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="screenshots/2.jpg"&gt;&lt;img src="screenshots/2.jpg" alt="" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;To open Retroactive, &lt;a href="https://support.apple.com/HT207700" rel="nofollow"&gt;right-click&lt;/a&gt; on the Retroactive app in Finder, and click “Open” as shown below.&lt;/p&gt;
&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="screenshots/3.jpg"&gt;&lt;img src="screenshots/3.jpg" alt="" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;If you right-clicked when opening Retroactive for the first time, you need to &lt;a href="https://support.apple.com/HT207700" rel="nofollow"&gt;right-click&lt;/a&gt; for a second time. If Retroactive still can’t be opened, &lt;a href="https://support.apple.com/en-us/HT202491" rel="nofollow"&gt;check your GateKeeper settings&lt;/a&gt; under the General tab in System Preferences &amp;gt; Security &amp;amp; Privacy. Click “Open Anyway” to open Retroactive.&lt;/p&gt;
&lt;p&gt;Retroactive will not harm your Mac. This alert only shows up because Retroactive is not notarized. Retroactive is open source, so you can always examine its source code to make sure it’s safe.&lt;/p&gt;
&lt;hr&gt;
&lt;h3&gt;&lt;a id="user-content-picking-an-app" class="anchor" aria-hidden="true" href="#picking-an-app"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Picking an app&lt;/h3&gt;
&lt;p&gt;Pick the app you want to run on macOS Catalina. If you want to run multiple apps from here, pick any one of them. You will always be able to get back to this screen later.&lt;/p&gt;
&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="screenshots/4.jpg"&gt;&lt;img src="screenshots/4.jpg" alt="" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;I’ll use Aperture as the example, but the same process also works for iPhoto and iTunes.&lt;/p&gt;
&lt;hr&gt;
&lt;h3&gt;&lt;a id="user-content-locating-the-app-or-choosing-a-version" class="anchor" aria-hidden="true" href="#locating-the-app-or-choosing-a-version"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Locating the app or choosing a version&lt;/h3&gt;
&lt;p&gt;Retroactive will automatically scan your Mac to locate an existing Aperture, iPhoto, or iTunes install. If Retroactive has already located the app you would like to run, skip to the next section.&lt;/p&gt;
&lt;p&gt;If Retroactive can’t locate an existing install, you’ll be asked to download it from the Purchased list in App Store. You can also find the app on another Mac you own, then AirDrop it to this Mac, or restore the app from a Time Machine backup.&lt;/p&gt;
&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="screenshots/5.jpg"&gt;&lt;img src="screenshots/5.jpg" alt="" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;If you chose iTunes, Retroactive will ask you which version to install, then automatically download and install it for you.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;iTunes 12.9.5 supports Dark Mode and most DJ apps.&lt;/li&gt;
&lt;li&gt;iTunes 12.6.5 supports downloading and archiving iOS apps.&lt;/li&gt;
&lt;li&gt;iTunes 10.7 (not recommended) supports CoverFlow.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;If you don’t know which version to install, keep the default setting and click “Continue”.&lt;/p&gt;
&lt;hr&gt;
&lt;h3&gt;&lt;a id="user-content-authenticating-retroactive" class="anchor" aria-hidden="true" href="#authenticating-retroactive"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Authenticating Retroactive&lt;/h3&gt;
&lt;p&gt;To install or modify the app you chose, you need to authenticate with your login password first. Click “Authenticate”, and enter your login password.&lt;/p&gt;
&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="screenshots/6.jpg"&gt;&lt;img src="screenshots/6.jpg" alt="" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Your password is never stored or sent anywhere. To verify this, you can view Retroactive’s source code.&lt;/p&gt;
&lt;hr&gt;
&lt;h3&gt;&lt;a id="user-content-modifying-the-app" class="anchor" aria-hidden="true" href="#modifying-the-app"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Modifying the app&lt;/h3&gt;
&lt;p&gt;Retroactive will install or modify the app you chose. Modifying Aperture and iPhoto to run on macOS Catalina should only take about 2 minutes.&lt;/p&gt;
&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="screenshots/7.jpg"&gt;&lt;img src="screenshots/7.jpg" alt="" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;If you chose to install iTunes, this process takes longer. Depending on the version you chose, it can take between 10 minutes to an hour. It is completely normal for the fans to spin up during the process.&lt;/p&gt;
&lt;p&gt;If Retroactive asks for your login password again, enter it again. Otherwise, the iTunes installation may be damaged or incomplete. If iTunes 12.9.5 can’t be installed, try to install iTunes 12.6.5.&lt;/p&gt;
&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="screenshots/8.jpg"&gt;&lt;img src="screenshots/8.jpg" alt="" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;h3&gt;&lt;a id="user-content-using-the-app" class="anchor" aria-hidden="true" href="#using-the-app"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Using the app&lt;/h3&gt;
&lt;p&gt;After successfully modifying or installing the app, you can play with it to your heart's content.&lt;/p&gt;
&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="screenshots/9.jpg"&gt;&lt;img src="screenshots/9.jpg" alt="" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;All Aperture features should be available except for playing videos, exporting slideshows, printing, Photo Stream, and iCloud Photo Sharing.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;All iPhoto features should be available except for playing videos, exporting slideshows, printing, Photo Stream, and iCloud Photo Sharing.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;All features should work for iTunes 12.9.5.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;All features should work for iTunes 12.6.5 except for backing up an iOS device. Use iTunes 12.9.5 or Finder to back up instead. Thumbnails of download apps may appear distorted.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;iTunes 10.7 may prompt “A required iTunes component is not installed. Please reinstall iTunes (-42401).” There is no need to reinstall iTunes.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
&lt;h3&gt;&lt;a id="user-content-last-words" class="anchor" aria-hidden="true" href="#last-words"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Last Words&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;If GateKeeper prevents you from running modified versions of Aperture, iPhoto or iTunes, &lt;a href="http://osxdaily.com/2015/05/04/disable-gatekeeper-command-line-mac-osx/" rel="nofollow"&gt;temporarily disable GateKeeper in Terminal with &lt;code&gt;sudo spctl --master-disable&lt;/code&gt;&lt;/a&gt;.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;To learn more about how Retroactive works, &lt;a href="https://medium.com/@cormiertyshawn895/deep-dive-how-does-retroactive-work-95fe0e5ea49e" rel="nofollow"&gt;take a technical deep dive&lt;/a&gt;.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/article&gt;&lt;/div&gt;</description><author>cormiertyshawn895</author><guid isPermaLink="false">https://github.com/cormiertyshawn895/Retroactive</guid><pubDate>Fri, 08 Nov 2019 00:19:00 GMT</pubDate></item><item><title>patchthecode/JTAppleCalendar #20 in Swift, This week</title><link>https://github.com/patchthecode/JTAppleCalendar</link><description>&lt;p&gt;&lt;i&gt;The Unofficial Apple iOS Swift Calendar View. Swift calendar Library. iOS calendar Control. 100% Customizable&lt;/i&gt;&lt;/p&gt;&lt;div id="readme" class="instapaper_body md" data-path="README.md"&gt;&lt;article class="markdown-body entry-content p-5" itemprop="text"&gt;&lt;p&gt;&lt;a href="https://github.com/patchthecode/JTAppleCalendar"&gt;&lt;img src="https://cloud.githubusercontent.com/assets/2439146/20656424/a1c98c8e-b4e1-11e6-9833-5fa6430f5a8c.png" alt="jtapplecalendarnewlogo" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href="https://patchthecode.com/" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/5b18a4bc6c4b50f7f7bfe445892adb8ad5bd7399/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f5475746f7269616c732d7061746368746865636f64652e636f6d2d626c75652e737667" alt="Tutorial" data-canonical-src="https://img.shields.io/badge/Tutorials-patchthecode.com-blue.svg" style="max-width:100%;"&gt;&lt;/a&gt; &lt;a href="http://cocoapods.org/pods/JTAppleCalendar" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/42f9cce501c1ccd6ec6a46054cd14a301fcd6d18/68747470733a2f2f696d672e736869656c64732e696f2f636f636f61706f64732f762f4a544170706c6543616c656e6461722e7376673f7374796c653d666c6174" alt="Version" data-canonical-src="https://img.shields.io/cocoapods/v/JTAppleCalendar.svg?style=flat" style="max-width:100%;"&gt;&lt;/a&gt; &lt;a href="https://github.com/Carthage/Carthage"&gt;&lt;img src="https://camo.githubusercontent.com/3dc8a44a2c3f7ccd5418008d1295aae48466c141/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f43617274686167652d636f6d70617469626c652d3442433531442e7376673f7374796c653d666c6174" alt="Carthage Compatible" data-canonical-src="https://img.shields.io/badge/Carthage-compatible-4BC51D.svg?style=flat" style="max-width:100%;"&gt;&lt;/a&gt; &lt;a href="http://cocoapods.org/pods/JTAppleCalendar" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/1567810733542ef646fad7e3292b28f6ba59a09f/68747470733a2f2f696d672e736869656c64732e696f2f636f636f61706f64732f702f4a544170706c6543616c656e6461722e7376673f7374796c653d666c6174" alt="Platform" data-canonical-src="https://img.shields.io/cocoapods/p/JTAppleCalendar.svg?style=flat" style="max-width:100%;"&gt;&lt;/a&gt; &lt;a href="http://cocoapods.org/pods/JTAppleCalendar" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/d89a1e1d87461e800113fdef07187e56b82541f8/68747470733a2f2f696d672e736869656c64732e696f2f636f636f61706f64732f6c2f4a544170706c6543616c656e6461722e7376673f7374796c653d666c6174" alt="License" data-canonical-src="https://img.shields.io/cocoapods/l/JTAppleCalendar.svg?style=flat" style="max-width:100%;"&gt;&lt;/a&gt; &lt;a href="https://github.com/patchthecode/JTAppleCalendar/wiki/Support"&gt;&lt;img src="https://camo.githubusercontent.com/6820e87f3e52c5051748ed1acccf5c5380e224e5/68747470733a2f2f7777772e70617970616c6f626a656374732e636f6d2f7765627374617469632f656e5f55532f62746e2f62746e5f646f6e6174655f37347832312e706e67" alt="" data-canonical-src="https://www.paypalobjects.com/webstatic/en_US/btn/btn_donate_74x21.png" style="max-width:100%;"&gt;&lt;/a&gt; &lt;a href="#backers"&gt;&lt;img src="https://camo.githubusercontent.com/104865d4273479d8469383b591daf596afa957b3/68747470733a2f2f6f70656e636f6c6c6563746976652e636f6d2f4a544170706c6543616c656e6461722f6261636b6572732f62616467652e737667" alt="Backers on Open Collective" data-canonical-src="https://opencollective.com/JTAppleCalendar/backers/badge.svg" style="max-width:100%;"&gt;&lt;/a&gt; &lt;a href="#sponsors"&gt;&lt;img src="https://camo.githubusercontent.com/0cce449839101903ecf7d796408e16aedde4beff/68747470733a2f2f6f70656e636f6c6c6563746976652e636f6d2f4a544170706c6543616c656e6461722f73706f6e736f72732f62616467652e737667" alt="Sponsors on Open Collective" data-canonical-src="https://opencollective.com/JTAppleCalendar/sponsors/badge.svg" style="max-width:100%;"&gt;&lt;/a&gt; &lt;a href="https://www.codetriage.com/patchthecode/jtapplecalendar" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/8b4a6a66acc370d6e1303a184cd76801f8b1b574/68747470733a2f2f7777772e636f64657472696167652e636f6d2f7061746368746865636f64652f6a746170706c6563616c656e6461722f6261646765732f75736572732e737667" alt="Open Source Helpers" data-canonical-src="https://www.codetriage.com/patchthecode/jtapplecalendar/badges/users.svg" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h4&gt;&lt;a id="user-content-q-how-will-my-calendar-datecells-look-with-this-library" class="anchor" aria-hidden="true" href="#q-how-will-my-calendar-datecells-look-with-this-library"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Q: How will my calendar dateCells look with this library?&lt;/h4&gt;
&lt;p&gt;&lt;strong&gt;A&lt;/strong&gt;: However you want them to look.&lt;/p&gt;
&lt;p align="center"&gt;
   &lt;a href="https://github.com/patchthecode/JTAppleCalendar/issues/2"&gt;
      &lt;img src="https://cloud.githubusercontent.com/assets/2439146/20638185/d708d542-b353-11e6-8119-fa36c11b66cb.gif" height="450" style="max-width:100%;"&gt;
   &lt;/a&gt;
&lt;/p&gt;
&lt;p align="center"&gt;  
   &lt;a href="https://github.com/patchthecode/JTAppleCalendar/issues/2"&gt;More Images&lt;/a&gt;
&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-features" class="anchor" aria-hidden="true" href="#features"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Features&lt;/h2&gt;
&lt;hr&gt;
&lt;ul class="contains-task-list"&gt;
&lt;li class="task-list-item"&gt;&lt;input type="checkbox" id="" disabled="" class="task-list-item-checkbox" checked=""&gt; Range selection - select dates in a range. The design is entirely up to you.&lt;/li&gt;
&lt;li class="task-list-item"&gt;&lt;input type="checkbox" id="" disabled="" class="task-list-item-checkbox" checked=""&gt; Boundary dates - limit the calendar date range&lt;/li&gt;
&lt;li class="task-list-item"&gt;&lt;input type="checkbox" id="" disabled="" class="task-list-item-checkbox" checked=""&gt; &lt;a href="https://patchthecode.com/jtapplecalendar-home/week-view-month-view/" rel="nofollow"&gt;Week/month mode&lt;/a&gt; - show 1 row of weekdays. Or 2, 3 or 6&lt;/li&gt;
&lt;li class="task-list-item"&gt;&lt;input type="checkbox" id="" disabled="" class="task-list-item-checkbox" checked=""&gt; Custom cells - make your day-cells look however you want, with any functionality you want&lt;/li&gt;
&lt;li class="task-list-item"&gt;&lt;input type="checkbox" id="" disabled="" class="task-list-item-checkbox" checked=""&gt; Custom calendar view - make your calendar look however you want, with what ever functionality you want&lt;/li&gt;
&lt;li class="task-list-item"&gt;&lt;input type="checkbox" id="" disabled="" class="task-list-item-checkbox" checked=""&gt; First Day of week - pick anyday to be first day of the week&lt;/li&gt;
&lt;li class="task-list-item"&gt;&lt;input type="checkbox" id="" disabled="" class="task-list-item-checkbox" checked=""&gt; Horizontal or vertical mode&lt;/li&gt;
&lt;li class="task-list-item"&gt;&lt;input type="checkbox" id="" disabled="" class="task-list-item-checkbox" checked=""&gt; Ability to add &lt;a href="https://patchthecode.com/jtapplecalendar-home/headers/" rel="nofollow"&gt;month headers&lt;/a&gt; in varying sizes/styles of your liking&lt;/li&gt;
&lt;li class="task-list-item"&gt;&lt;input type="checkbox" id="" disabled="" class="task-list-item-checkbox" checked=""&gt; Ability to scroll to any month by simply using the date&lt;/li&gt;
&lt;li class="task-list-item"&gt;&lt;input type="checkbox" id="" disabled="" class="task-list-item-checkbox" checked=""&gt; Ability to design your calendar &lt;a href="https://github.com/patchthecode/JTAppleCalendar/issues/2"&gt;however you want.&lt;/a&gt; You want it, you build it&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
&lt;h2&gt;&lt;a id="user-content-how-do-i-use-this-library" class="anchor" aria-hidden="true" href="#how-do-i-use-this-library"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;How do I use this library?&lt;/h2&gt;
&lt;h3&gt;&lt;a id="user-content--read-the-wiki-for-tutorials-and-example-code-to-download-or-visit-patchthecodecom" class="anchor" aria-hidden="true" href="#-read-the-wiki-for-tutorials-and-example-code-to-download-or-visit-patchthecodecom"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&amp;gt;&amp;gt; &lt;a href="https://github.com/patchthecode/JTAppleCalendar/wiki/Tutorials"&gt;Read the wiki&lt;/a&gt; for Tutorials and example code to download. Or visit &lt;a href="https://patchthecode.com" rel="nofollow"&gt;PatchTheCode.com&lt;/a&gt;.&lt;/h3&gt;
&lt;hr&gt;
&lt;h2&gt;&lt;a id="user-content-contributors" class="anchor" aria-hidden="true" href="#contributors"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Contributors&lt;/h2&gt;
&lt;p&gt;This project exists thanks to all the people who contribute. [&lt;a href="CONTRIBUTING.md"&gt;Contribute&lt;/a&gt;].
&lt;a href="graphs/contributors"&gt;&lt;img src="https://camo.githubusercontent.com/79c2926aceed829d8ac7da6d79224090a7289a0d/68747470733a2f2f6f70656e636f6c6c6563746976652e636f6d2f4a544170706c6543616c656e6461722f636f6e7472696275746f72732e7376673f77696474683d38393026627574746f6e3d66616c7365" data-canonical-src="https://opencollective.com/JTAppleCalendar/contributors.svg?width=890&amp;amp;button=false" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-backers" class="anchor" aria-hidden="true" href="#backers"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Backers&lt;/h2&gt;
&lt;p&gt;Thank you to all our backers! &lt;g-emoji class="g-emoji" alias="pray" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f64f.png"&gt;🙏&lt;/g-emoji&gt; [&lt;a href="https://opencollective.com/JTAppleCalendar#backer" rel="nofollow"&gt;Become a backer&lt;/a&gt;]&lt;/p&gt;
&lt;p&gt;&lt;a href="https://opencollective.com/JTAppleCalendar#backers" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/57361d599bb4cf4693cbf367c34ba15811712739/68747470733a2f2f6f70656e636f6c6c6563746976652e636f6d2f4a544170706c6543616c656e6461722f6261636b6572732e7376673f77696474683d383930" data-canonical-src="https://opencollective.com/JTAppleCalendar/backers.svg?width=890" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-sponsors" class="anchor" aria-hidden="true" href="#sponsors"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Sponsors&lt;/h2&gt;
&lt;p&gt;Support this project by becoming a sponsor. Your logo will show up here with a link to your website. [&lt;a href="https://opencollective.com/JTAppleCalendar#sponsor" rel="nofollow"&gt;Become a sponsor&lt;/a&gt;]&lt;/p&gt;
&lt;p&gt;&lt;a href="https://opencollective.com/JTAppleCalendar/sponsor/0/website" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/9e67273e1b343cf9abc0e3ad69ba342e4ceb0905/68747470733a2f2f6f70656e636f6c6c6563746976652e636f6d2f4a544170706c6543616c656e6461722f73706f6e736f722f302f6176617461722e737667" data-canonical-src="https://opencollective.com/JTAppleCalendar/sponsor/0/avatar.svg" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://opencollective.com/JTAppleCalendar/sponsor/1/website" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/736ac398a3450a518ac88751f23c6a1ab8af32bb/68747470733a2f2f6f70656e636f6c6c6563746976652e636f6d2f4a544170706c6543616c656e6461722f73706f6e736f722f312f6176617461722e737667" data-canonical-src="https://opencollective.com/JTAppleCalendar/sponsor/1/avatar.svg" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://opencollective.com/JTAppleCalendar/sponsor/2/website" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/c01edb9f09263b2cea225254c8e8aa37e42b85c8/68747470733a2f2f6f70656e636f6c6c6563746976652e636f6d2f4a544170706c6543616c656e6461722f73706f6e736f722f322f6176617461722e737667" data-canonical-src="https://opencollective.com/JTAppleCalendar/sponsor/2/avatar.svg" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://opencollective.com/JTAppleCalendar/sponsor/3/website" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/6ff994042a4f4ad69d06b781b2e251fbe8bfa26d/68747470733a2f2f6f70656e636f6c6c6563746976652e636f6d2f4a544170706c6543616c656e6461722f73706f6e736f722f332f6176617461722e737667" data-canonical-src="https://opencollective.com/JTAppleCalendar/sponsor/3/avatar.svg" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://opencollective.com/JTAppleCalendar/sponsor/4/website" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/d1414499a943d73a075589bbb102da9cdb2331a5/68747470733a2f2f6f70656e636f6c6c6563746976652e636f6d2f4a544170706c6543616c656e6461722f73706f6e736f722f342f6176617461722e737667" data-canonical-src="https://opencollective.com/JTAppleCalendar/sponsor/4/avatar.svg" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://opencollective.com/JTAppleCalendar/sponsor/5/website" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/ef517be6424b8e9b59e1aaf568dd9c9ed64dd02c/68747470733a2f2f6f70656e636f6c6c6563746976652e636f6d2f4a544170706c6543616c656e6461722f73706f6e736f722f352f6176617461722e737667" data-canonical-src="https://opencollective.com/JTAppleCalendar/sponsor/5/avatar.svg" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://opencollective.com/JTAppleCalendar/sponsor/6/website" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/f22caab59c23a9c1b8809ef6bb7969a230a59b23/68747470733a2f2f6f70656e636f6c6c6563746976652e636f6d2f4a544170706c6543616c656e6461722f73706f6e736f722f362f6176617461722e737667" data-canonical-src="https://opencollective.com/JTAppleCalendar/sponsor/6/avatar.svg" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://opencollective.com/JTAppleCalendar/sponsor/7/website" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/72437a2b64a2d267253b267f3fa564d417b6da24/68747470733a2f2f6f70656e636f6c6c6563746976652e636f6d2f4a544170706c6543616c656e6461722f73706f6e736f722f372f6176617461722e737667" data-canonical-src="https://opencollective.com/JTAppleCalendar/sponsor/7/avatar.svg" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://opencollective.com/JTAppleCalendar/sponsor/8/website" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/4ce4aa863fa433577cfa31fc261ac3b1573fe9d1/68747470733a2f2f6f70656e636f6c6c6563746976652e636f6d2f4a544170706c6543616c656e6461722f73706f6e736f722f382f6176617461722e737667" data-canonical-src="https://opencollective.com/JTAppleCalendar/sponsor/8/avatar.svg" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://opencollective.com/JTAppleCalendar/sponsor/9/website" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/7986f740b1a643db1b130e3a11bfdee2abee48e1/68747470733a2f2f6f70656e636f6c6c6563746976652e636f6d2f4a544170706c6543616c656e6461722f73706f6e736f722f392f6176617461722e737667" data-canonical-src="https://opencollective.com/JTAppleCalendar/sponsor/9/avatar.svg" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-license" class="anchor" aria-hidden="true" href="#license"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;License&lt;/h2&gt;
&lt;p&gt;JTAppleCalendar is available under the MIT license. See the LICENSE file for more info.&lt;/p&gt;
&lt;/article&gt;&lt;/div&gt;</description><author>patchthecode</author><guid isPermaLink="false">https://github.com/patchthecode/JTAppleCalendar</guid><pubDate>Fri, 08 Nov 2019 00:20:00 GMT</pubDate></item><item><title>airbnb/lottie-ios #21 in Swift, This week</title><link>https://github.com/airbnb/lottie-ios</link><description>&lt;p&gt;&lt;i&gt;An iOS library to natively render After Effects vector animations&lt;/i&gt;&lt;/p&gt;&lt;div id="readme" class="instapaper_body md" data-path="README.md"&gt;&lt;article class="markdown-body entry-content p-5" itemprop="text"&gt;&lt;h1&gt;&lt;a id="user-content-lottie-for-ios-macos-and-android-and-react-native" class="anchor" aria-hidden="true" href="#lottie-for-ios-macos-and-android-and-react-native"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Lottie for iOS, macOS (and &lt;a href="https://github.com/airbnb/lottie-android"&gt;Android&lt;/a&gt; and &lt;a href="https://github.com/airbnb/lottie-react-native"&gt;React Native&lt;/a&gt;)&lt;/h1&gt;
&lt;p&gt;&lt;a href="https://cocoapods.org/pods/lottie-ios" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/ec93af3b58853a5ba768cc785ad54a4aca961645/68747470733a2f2f696d672e736869656c64732e696f2f636f636f61706f64732f762f6c6f747469652d696f732e7376673f7374796c653d666c6174" alt="Version" data-canonical-src="https://img.shields.io/cocoapods/v/lottie-ios.svg?style=flat" style="max-width:100%;"&gt;&lt;/a&gt;&lt;a href="https://cocoapods.org/pods/lottie-ios" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/ff1d88230b9d245f16df6036e058518d051df573/68747470733a2f2f696d672e736869656c64732e696f2f636f636f61706f64732f6c2f6c6f747469652d696f732e7376673f7374796c653d666c6174" alt="License" data-canonical-src="https://img.shields.io/cocoapods/l/lottie-ios.svg?style=flat" style="max-width:100%;"&gt;&lt;/a&gt;&lt;a href="https://cocoapods.org/pods/lottie-ios" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/80aaf7fb5854bde9c64a0aff30cd12ebf1765b36/68747470733a2f2f696d672e736869656c64732e696f2f636f636f61706f64732f702f6c6f747469652d696f732e7376673f7374796c653d666c6174" alt="Platform" data-canonical-src="https://img.shields.io/cocoapods/p/lottie-ios.svg?style=flat" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h1&gt;&lt;a id="user-content-view-documentation-faq-help-examples-and-more-at-airbnbiolottie" class="anchor" aria-hidden="true" href="#view-documentation-faq-help-examples-and-more-at-airbnbiolottie"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;View documentation, FAQ, help, examples, and more at &lt;a href="http://airbnb.io/lottie/" rel="nofollow"&gt;airbnb.io/lottie&lt;/a&gt;&lt;/h1&gt;
&lt;p&gt;Lottie is a mobile library for Android and iOS that natively renders vector based animations and art in realtime with minimal code.&lt;/p&gt;
&lt;p&gt;Lottie loads and renders animations and vectors exported in the bodymovin JSON format. Bodymovin JSON can be created and exported from After Effects with &lt;a href="https://github.com/bodymovin/bodymovin"&gt;bodymovin&lt;/a&gt;, Sketch with &lt;a href="https://github.com/buba447/Lottie-Sketch-Export"&gt;Lottie Sketch Export&lt;/a&gt;, and from &lt;a href="https://www.haiku.ai" rel="nofollow"&gt;Haiku&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;For the first time, designers can create &lt;strong&gt;and ship&lt;/strong&gt; beautiful animations without an engineer painstakingly recreating it by hand.
Since the animation is backed by JSON they are extremely small in size but can be large in complexity!
Animations can be played, resized, looped, sped up, slowed down, reversed, and even interactively scrubbed.
Lottie can play or loop just a portion of the animation as well, the possibilities are endless!
Animations can even be &lt;em&gt;&lt;strong&gt;changed at runtime&lt;/strong&gt;&lt;/em&gt; in various ways! Change the color, position or any keyframable value!
Lottie also supports native UIViewController Transitions out of the box!&lt;/p&gt;
&lt;p&gt;Here is just a small sampling of the power of Lottie&lt;/p&gt;
&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="_Gifs/Examples1.gif"&gt;&lt;img src="_Gifs/Examples1.gif" alt="Example1" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a target="_blank" rel="noopener noreferrer" href="_Gifs/Examples2.gif"&gt;&lt;img src="_Gifs/Examples2.gif" alt="Example2" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="_Gifs/Community 2_3.gif"&gt;&lt;img src="_Gifs/Community 2_3.gif" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="_Gifs/Examples3.gif"&gt;&lt;img src="_Gifs/Examples3.gif" alt="Example3" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="_Gifs/Examples4.gif"&gt;&lt;img src="_Gifs/Examples4.gif" alt="Abcs" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-installing-lottie" class="anchor" aria-hidden="true" href="#installing-lottie"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Installing Lottie&lt;/h2&gt;
&lt;p&gt;Lottie supports &lt;a href="https://cocoapods.org/" rel="nofollow"&gt;CocoaPods&lt;/a&gt; and &lt;a href="https://github.com/Carthage/Carthage"&gt;Carthage&lt;/a&gt; (Both dynamic and static). Lottie is written in &lt;em&gt;&lt;strong&gt;Swift 4.2&lt;/strong&gt;&lt;/em&gt;.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-github-repo" class="anchor" aria-hidden="true" href="#github-repo"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Github Repo&lt;/h3&gt;
&lt;p&gt;You can pull the &lt;a href="https://github.com/airbnb/lottie-ios/"&gt;Lottie Github Repo&lt;/a&gt; and include the Lottie.xcodeproj to build a dynamic or static library.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-cocoapods" class="anchor" aria-hidden="true" href="#cocoapods"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;CocoaPods&lt;/h3&gt;
&lt;p&gt;Add the pod to your Podfile:&lt;/p&gt;
&lt;div class="highlight highlight-source-ruby"&gt;&lt;pre&gt;pod &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;lottie-ios&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;And then run:&lt;/p&gt;
&lt;div class="highlight highlight-source-ruby"&gt;&lt;pre&gt;pod install&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;After installing the cocoapod into your project import Lottie with&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;import&lt;/span&gt; &lt;span class="pl-en"&gt;Lottie&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h3&gt;&lt;a id="user-content-carthage" class="anchor" aria-hidden="true" href="#carthage"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Carthage&lt;/h3&gt;
&lt;p&gt;Add Lottie to your Cartfile:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;github "airbnb/lottie-ios" "master"
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;And then run:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;carthage update
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;In your application targets “General” tab under the “Linked Frameworks and Libraries” section, drag and drop lottie-ios.framework from the Carthage/Build/iOS directory that &lt;code&gt;carthage update&lt;/code&gt; produced.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-swift-package-manager" class="anchor" aria-hidden="true" href="#swift-package-manager"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Swift Package Manager&lt;/h3&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; swift-tools-version:5.1&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;
&lt;span class="pl-k"&gt;import&lt;/span&gt; &lt;span class="pl-en"&gt;PackageDescription&lt;/span&gt;

&lt;span class="pl-k"&gt;let&lt;/span&gt; package &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;Package&lt;/span&gt;(
  &lt;span class="pl-c1"&gt;name&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;YourTestProject&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;,
  &lt;span class="pl-c1"&gt;platforms&lt;/span&gt;: [
       .&lt;span class="pl-c1"&gt;iOS&lt;/span&gt;(.&lt;span class="pl-smi"&gt;v12&lt;/span&gt;),
  ],
  &lt;span class="pl-c1"&gt;dependencies&lt;/span&gt;: [
    .&lt;span class="pl-c1"&gt;package&lt;/span&gt;(&lt;span class="pl-c1"&gt;url&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;https://github.com/airbnb/lottie-ios.git&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-c1"&gt;from&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;3.1.2&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
  ],
  &lt;span class="pl-c1"&gt;targets&lt;/span&gt;: [
    .&lt;span class="pl-c1"&gt;target&lt;/span&gt;(&lt;span class="pl-c1"&gt;name&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;YourTestProject&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-c1"&gt;dependencies&lt;/span&gt;: [&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;Lottie&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;])
  ]
)&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;And then import wherever needed: &lt;code&gt;import Lottie&lt;/code&gt;&lt;/p&gt;
&lt;h4&gt;&lt;a id="user-content-adding-it-to-an-existent-ios-project-via-swift-package-manager" class="anchor" aria-hidden="true" href="#adding-it-to-an-existent-ios-project-via-swift-package-manager"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Adding it to an existent iOS Project via Swift Package Manager&lt;/h4&gt;
&lt;ol&gt;
&lt;li&gt;Using Xcode 11 go to File &amp;gt; Swift Packages &amp;gt; Add Package Dependency&lt;/li&gt;
&lt;li&gt;Paste the project URL: &lt;a href="https://github.com/airbnb/lottie-ios"&gt;https://github.com/airbnb/lottie-ios&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Click on next and select the project target&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;If you have doubts, please, check the following links:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://developer.apple.com/videos/play/wwdc2019/408/" rel="nofollow"&gt;How to use&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href="https://developer.apple.com/videos/play/wwdc2019/410/" rel="nofollow"&gt;Creating Swift Packages&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;After successfully retrieved the package and added it to your project, just import &lt;code&gt;Lottie&lt;/code&gt; and you can get the full benefits of it.&lt;/p&gt;
&lt;/article&gt;&lt;/div&gt;</description><author>airbnb</author><guid isPermaLink="false">https://github.com/airbnb/lottie-ios</guid><pubDate>Fri, 08 Nov 2019 00:21:00 GMT</pubDate></item><item><title>Juanpe/SkeletonView #22 in Swift, This week</title><link>https://github.com/Juanpe/SkeletonView</link><description>&lt;p&gt;&lt;i&gt;☠️ An elegant way to show users that something is happening and also prepare them to which contents he is waiting&lt;/i&gt;&lt;/p&gt;&lt;div id="readme" class="instapaper_body md" data-path="README.md"&gt;&lt;article class="markdown-body entry-content p-5" itemprop="text"&gt;&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="Assets/header2.jpg"&gt;&lt;img src="Assets/header2.jpg" alt="" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p align="center"&gt;
    &lt;a href="https://app.bitrise.io/app/6d289a17e22c8323" rel="nofollow"&gt;
      &lt;img src="https://camo.githubusercontent.com/5d4589cf532b4476b9062b9e364c44e3ea7e6833/68747470733a2f2f6170702e626974726973652e696f2f6170702f366432383961313765323263383332332f7374617475732e7376673f746f6b656e3d664937674b4334315844392d615258445363434b4277266272616e63683d6d6173746572" data-canonical-src="https://app.bitrise.io/app/6d289a17e22c8323/status.svg?token=fI7gKC41XD9-aRXDScCKBw&amp;amp;branch=master" style="max-width:100%;"&gt;
    &lt;/a&gt;
    &lt;a href="https://codebeat.co/projects/github-com-juanpe-skeletonview-master" rel="nofollow"&gt;&lt;img alt="codebeat badge" src="https://camo.githubusercontent.com/838dbce061c3d4b0bb7ef98b7f9296dcc6955f71/68747470733a2f2f636f6465626561742e636f2f6261646765732f66383534666466642d333165352d343638392d626130342d303735643833363533653630" data-canonical-src="https://codebeat.co/badges/f854fdfd-31e5-4689-ba04-075d83653e60" style="max-width:100%;"&gt;&lt;/a&gt;
    &lt;a href="https://github.com/Juanpe/SkeletonView"&gt;
        &lt;img src="https://camo.githubusercontent.com/029e97f027f4ec6479733cbd455c31ccd361d5be/68747470733a2f2f696d672e736869656c64732e696f2f636f636f61706f64732f702f536b656c65746f6e566965772e737667" alt="Platforms" data-canonical-src="https://img.shields.io/cocoapods/p/SkeletonView.svg" style="max-width:100%;"&gt;
    &lt;/a&gt;
    &lt;a target="_blank" rel="noopener noreferrer" href="https://camo.githubusercontent.com/bea9b06ee2118619a5968c9b685bf4df22e6808c/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f53776966742d352d6f72616e67652e737667"&gt;&lt;img src="https://camo.githubusercontent.com/bea9b06ee2118619a5968c9b685bf4df22e6808c/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f53776966742d352d6f72616e67652e737667" data-canonical-src="https://img.shields.io/badge/Swift-5-orange.svg" style="max-width:100%;"&gt;&lt;/a&gt;
    &lt;a href="https://cocoapods.org/pods/SkeletonView" rel="nofollow"&gt;
        &lt;img src="https://camo.githubusercontent.com/305665ef6fb70895b3bc51b598f152698f547e6d/68747470733a2f2f696d672e736869656c64732e696f2f636f636f61706f64732f762f536b656c65746f6e566965772e737667" alt="CocoaPods" data-canonical-src="https://img.shields.io/cocoapods/v/SkeletonView.svg" style="max-width:100%;"&gt;
    &lt;/a&gt;
    &lt;a href="https://github.com/Carthage/Carthage"&gt;
        &lt;img src="https://camo.githubusercontent.com/3dc8a44a2c3f7ccd5418008d1295aae48466c141/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f43617274686167652d636f6d70617469626c652d3442433531442e7376673f7374796c653d666c6174" alt="Carthage" data-canonical-src="https://img.shields.io/badge/Carthage-compatible-4BC51D.svg?style=flat" style="max-width:100%;"&gt;
    &lt;/a&gt;
    &lt;a href="https://github.com/apple/swift-package-manager"&gt;
        &lt;img src="https://camo.githubusercontent.com/49fd7cc52e2274ce9c356e5bb09300009a8a4a6c/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f53504d2d636f6d70617469626c652d627269676874677265656e2e737667" alt="SPM" data-canonical-src="https://img.shields.io/badge/SPM-compatible-brightgreen.svg" style="max-width:100%;"&gt;
    &lt;/a&gt;
    &lt;a href="https://twitter.com/JuanpeCatalan" rel="nofollow"&gt;
        &lt;img src="https://camo.githubusercontent.com/834ae52e5303018c39fc89b1c7d9f9b507e68989/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f636f6e746163742d404a75616e7065436174616c616e2d626c75652e7376673f7374796c653d666c6174" alt="Twitter: @JuanpeCatalan" data-canonical-src="https://img.shields.io/badge/contact-@JuanpeCatalan-blue.svg?style=flat" style="max-width:100%;"&gt;
    &lt;/a&gt;
    &lt;br&gt;
    &lt;a href="https://gitter.im/SkeletonView/community?utm_source=badge&amp;amp;utm_medium=badge&amp;amp;utm_campaign=pr-badge" rel="nofollow"&gt;
        &lt;img src="https://camo.githubusercontent.com/c17fc997e77acbd8b8177dfebff33a5dc899bfbf/68747470733a2f2f6261646765732e6769747465722e696d2f536b656c65746f6e566965772f636f6d6d756e6974792e7376673f7374796c653d666c6174" data-canonical-src="https://badges.gitter.im/SkeletonView/community.svg?style=flat" style="max-width:100%;"&gt;
    &lt;/a&gt;
    &lt;a href="https://twitter.com/intent/tweet?text=Wow%20This%20library%20is%20awesome:&amp;amp;url=https%3A%2F%2Fgithub.com%2FJuanpe%2FSkeletonView" rel="nofollow"&gt;
      &lt;img src="https://camo.githubusercontent.com/aca99d94b3a2ae1409fdff2a2034c7f4dd073989/68747470733a2f2f696d672e736869656c64732e696f2f747769747465722f75726c2f68747470732f6769746875622e636f6d2f4a75616e70652f536b656c65746f6e566965772e7376673f7374796c653d736f6369616c" alt="License" data-canonical-src="https://img.shields.io/twitter/url/https/github.com/Juanpe/SkeletonView.svg?style=social" style="max-width:100%;"&gt;
    &lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;&lt;g-emoji class="g-emoji" alias="earth_americas" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f30e.png"&gt;🌎&lt;/g-emoji&gt;  Translations: &lt;br&gt;
&lt;a href="https://github.com/Juanpe/SkeletonView/blob/master/README_zh.md"&gt;&lt;g-emoji class="g-emoji" alias="cn" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f1e8-1f1f3.png"&gt;🇨🇳&lt;/g-emoji&gt;&lt;/a&gt; by &lt;a href="https://twitter.com/WhatsXie" rel="nofollow"&gt;@WhatsXie&lt;/a&gt; &lt;br&gt;
&lt;a href="https://github.com/Juanpe/SkeletonView/blob/master/README_pt-br.md"&gt;&lt;g-emoji class="g-emoji" alias="brazil" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f1e7-1f1f7.png"&gt;🇧🇷&lt;/g-emoji&gt;&lt;/a&gt; by &lt;a href="https://twitter.com/brunomuniz_af" rel="nofollow"&gt;@brunomunizaf&lt;/a&gt; &lt;br&gt;
&lt;a href="https://github.com/Juanpe/SkeletonView/blob/master/README_ko.md"&gt;&lt;g-emoji class="g-emoji" alias="kr" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f1f0-1f1f7.png"&gt;🇰🇷&lt;/g-emoji&gt;&lt;/a&gt; by &lt;a href="https://twitter.com/techinpark" rel="nofollow"&gt;@techinpark&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Today almost all apps have async processes, such as Api requests, long running processes, etc. And while the processes are working, usually developers place a loading view to show users that something is going on.&lt;/p&gt;
&lt;p&gt;&lt;code&gt;SkeletonView&lt;/code&gt; has been conceived to address this need, an elegant way to show users that something is happening and also prepare them to which contents he is waiting.&lt;/p&gt;
&lt;p&gt;Enjoy it! &lt;g-emoji class="g-emoji" alias="slightly_smiling_face" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f642.png"&gt;🙂&lt;/g-emoji&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="#-features"&gt;Features&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#-guides"&gt;Guides&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#-installation"&gt;Installation&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="#using-cocoapods"&gt;Cocoapods&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#using-carthage"&gt;Carthage&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#using-swift-package-manager"&gt;SPM&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="#-how-to-use"&gt;How to use&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="#-collections"&gt;Collections&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#-multiline-text"&gt;Multiline text&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#-custom-colors"&gt;Custom colors&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#-appearance"&gt;Appearance&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#-custom-animations"&gt;Custom animations&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#-transitions"&gt;Transitions&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#-hierarchy"&gt;Hierarchy&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#-debug"&gt;Debug&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="#-documentation"&gt;Documentation&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#-supported-os--sdk-versions"&gt;Supported OS &amp;amp; SDK Versions&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#-next-steps"&gt;Next steps&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#-contributing"&gt;Contributing&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#-mentions"&gt;Mentions&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#-author"&gt;Author&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#-license"&gt;License&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content--features" class="anchor" aria-hidden="true" href="#-features"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;g-emoji class="g-emoji" alias="star2" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f31f.png"&gt;🌟&lt;/g-emoji&gt; Features&lt;/h2&gt;
&lt;ul class="contains-task-list"&gt;
&lt;li class="task-list-item"&gt;&lt;input type="checkbox" id="" disabled="" class="task-list-item-checkbox" checked=""&gt; Easy to use&lt;/li&gt;
&lt;li class="task-list-item"&gt;&lt;input type="checkbox" id="" disabled="" class="task-list-item-checkbox" checked=""&gt; All UIViews are skeletonables&lt;/li&gt;
&lt;li class="task-list-item"&gt;&lt;input type="checkbox" id="" disabled="" class="task-list-item-checkbox" checked=""&gt; Fully customizable&lt;/li&gt;
&lt;li class="task-list-item"&gt;&lt;input type="checkbox" id="" disabled="" class="task-list-item-checkbox" checked=""&gt; Universal (iPhone &amp;amp; iPad)&lt;/li&gt;
&lt;li class="task-list-item"&gt;&lt;input type="checkbox" id="" disabled="" class="task-list-item-checkbox" checked=""&gt; Interface Builder friendly&lt;/li&gt;
&lt;li class="task-list-item"&gt;&lt;input type="checkbox" id="" disabled="" class="task-list-item-checkbox" checked=""&gt; Simple Swift syntax&lt;/li&gt;
&lt;li class="task-list-item"&gt;&lt;input type="checkbox" id="" disabled="" class="task-list-item-checkbox" checked=""&gt; Lightweight readable codebase&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content--guides" class="anchor" aria-hidden="true" href="#-guides"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;g-emoji class="g-emoji" alias="clapper" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f3ac.png"&gt;🎬&lt;/g-emoji&gt; Guides&lt;/h2&gt;
&lt;p&gt;&lt;a href="https://youtu.be/75kgOhWsPNA" rel="nofollow"&gt;&lt;img src="Assets/thumb_getting_started.png" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content--installation" class="anchor" aria-hidden="true" href="#-installation"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;g-emoji class="g-emoji" alias="calling" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f4f2.png"&gt;📲&lt;/g-emoji&gt; Installation&lt;/h2&gt;
&lt;h4&gt;&lt;a id="user-content-using-cocoapods" class="anchor" aria-hidden="true" href="#using-cocoapods"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Using &lt;a href="https://cocoapods.org" rel="nofollow"&gt;CocoaPods&lt;/a&gt;&lt;/h4&gt;
&lt;p&gt;Edit your &lt;code&gt;Podfile&lt;/code&gt; and specify the dependency:&lt;/p&gt;
&lt;div class="highlight highlight-source-ruby"&gt;&lt;pre&gt;pod &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;SkeletonView&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h4&gt;&lt;a id="user-content-using-carthage" class="anchor" aria-hidden="true" href="#using-carthage"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Using &lt;a href="https://github.com/carthage"&gt;Carthage&lt;/a&gt;&lt;/h4&gt;
&lt;p&gt;Edit your &lt;code&gt;Cartfile&lt;/code&gt; and specify the dependency:&lt;/p&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt;github &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;Juanpe/SkeletonView&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h4&gt;&lt;a id="user-content-using-swift-package-manager" class="anchor" aria-hidden="true" href="#using-swift-package-manager"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Using &lt;a href="https://github.com/apple/swift-package-manager"&gt;Swift Package Manager&lt;/a&gt;&lt;/h4&gt;
&lt;p&gt;Once you have your Swift package set up, adding &lt;code&gt;SkeletonView&lt;/code&gt; as a dependency is as easy as adding it to the &lt;code&gt;dependencies&lt;/code&gt; value of your &lt;code&gt;Package.swift&lt;/code&gt;.&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;  dependencies&lt;span class="pl-k"&gt;:&lt;/span&gt; [
    .&lt;span class="pl-c1"&gt;package&lt;/span&gt;(&lt;span class="pl-c1"&gt;url&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;https://github.com/Juanpe/SkeletonView.git&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-c1"&gt;from&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;1.7.0&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
  ]&lt;/pre&gt;&lt;/div&gt;
&lt;h2&gt;&lt;a id="user-content--how-to-use" class="anchor" aria-hidden="true" href="#-how-to-use"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;g-emoji class="g-emoji" alias="monkey" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f412.png"&gt;🐒&lt;/g-emoji&gt; How to use&lt;/h2&gt;
&lt;p&gt;Only &lt;strong&gt;3&lt;/strong&gt; steps needed to use &lt;code&gt;SkeletonView&lt;/code&gt;:&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;1.&lt;/strong&gt; Import SkeletonView in proper place.&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;import&lt;/span&gt; &lt;span class="pl-en"&gt;SkeletonView&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;strong&gt;2.&lt;/strong&gt; Now, set which views will be &lt;code&gt;skeletonables&lt;/code&gt;. You achieve this in two ways:&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Using code:&lt;/strong&gt;&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;avatarImageView.&lt;span class="pl-smi"&gt;isSkeletonable&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;true&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;strong&gt;Using IB/Storyboards:&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="Assets/storyboard.png"&gt;&lt;img src="Assets/storyboard.png" alt="" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;3.&lt;/strong&gt; Once you've set the views, you can show the &lt;strong&gt;skeleton&lt;/strong&gt;. To do so, you have &lt;strong&gt;4&lt;/strong&gt; choices:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;(&lt;span class="pl-c1"&gt;1&lt;/span&gt;) view.&lt;span class="pl-c1"&gt;showSkeleton&lt;/span&gt;()                 &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Solid&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;(&lt;span class="pl-c1"&gt;2&lt;/span&gt;) view.&lt;span class="pl-c1"&gt;showGradientSkeleton&lt;/span&gt;()         &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Gradient&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;(&lt;span class="pl-c1"&gt;3&lt;/span&gt;) view.&lt;span class="pl-c1"&gt;showAnimatedSkeleton&lt;/span&gt;()         &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Solid animated&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;(&lt;span class="pl-c1"&gt;4&lt;/span&gt;) view.&lt;span class="pl-c1"&gt;showAnimatedGradientSkeleton&lt;/span&gt;() &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Gradient animated&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;strong&gt;Preview&lt;/strong&gt;&lt;/p&gt;
&lt;table&gt;
&lt;tbody&gt;&lt;tr&gt;
&lt;td width="25%"&gt;
Solid
&lt;/td&gt;
&lt;td width="25%"&gt;
Gradient
&lt;/td&gt;
&lt;td width="25%"&gt;
Solid Animated
&lt;/td&gt;
&lt;td width="25%"&gt;
Gradient Animated
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td width="25%"&gt;
&lt;a target="_blank" rel="noopener noreferrer" href="Assets/solid.png"&gt;&lt;img src="Assets/solid.png" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;/td&gt;
&lt;td width="25%"&gt;
&lt;a target="_blank" rel="noopener noreferrer" href="Assets/gradient.png"&gt;&lt;img src="Assets/gradient.png" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;/td&gt;
&lt;td width="25%"&gt;
&lt;a target="_blank" rel="noopener noreferrer" href="Assets/solid_animated.gif"&gt;&lt;img src="Assets/solid_animated.gif" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;/td&gt;
&lt;td width="25%"&gt;
&lt;a target="_blank" rel="noopener noreferrer" href="Assets/gradient_animated.gif"&gt;&lt;img src="Assets/gradient_animated.gif" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;&lt;/table&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;IMPORTANT!&lt;/strong&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;code&gt;SkeletonView&lt;/code&gt; is recursive, so if you want show the skeleton in all skeletonable views, you only need to call the show method in the main container view. For example, with UIViewControllers&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/blockquote&gt;
&lt;h3&gt;&lt;a id="user-content-extra" class="anchor" aria-hidden="true" href="#extra"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Extra&lt;/h3&gt;
&lt;h4&gt;&lt;a id="user-content-skeleton-views-layout" class="anchor" aria-hidden="true" href="#skeleton-views-layout"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Skeleton views layout&lt;/h4&gt;
&lt;p&gt;Sometimes skeleton layout may not fit your layout because the parent view bounds have changed. &lt;del&gt;For example, rotating the device.&lt;/del&gt;&lt;/p&gt;
&lt;p&gt;You can relayout the skeleton views like so:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;override&lt;/span&gt; &lt;span class="pl-k"&gt;func&lt;/span&gt; &lt;span class="pl-en"&gt;viewDidLayoutSubviews&lt;/span&gt;() {
    view.&lt;span class="pl-c1"&gt;layoutSkeletonIfNeeded&lt;/span&gt;()
}&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;g-emoji class="g-emoji" alias="warning" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/26a0.png"&gt;⚠️&lt;/g-emoji&gt;&lt;g-emoji class="g-emoji" alias="warning" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/26a0.png"&gt;⚠️&lt;/g-emoji&gt; You shouldn't call this method. From &lt;em&gt;version 1.8.1&lt;/em&gt; you don't need to call this method, the library does automatically. So, you can use this method &lt;em&gt;ONLY&lt;/em&gt; in the cases when you need to update the layout of the skeleton manually.&lt;/p&gt;
&lt;h4&gt;&lt;a id="user-content-update-skeleton-configuration" class="anchor" aria-hidden="true" href="#update-skeleton-configuration"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Update skeleton configuration&lt;/h4&gt;
&lt;p&gt;You can change the skeleton configuration at any time like its colour, animation, etc. with the following methods:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;(&lt;span class="pl-c1"&gt;1&lt;/span&gt;) view.&lt;span class="pl-c1"&gt;updateSkeleton&lt;/span&gt;()                 &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Solid&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;(&lt;span class="pl-c1"&gt;2&lt;/span&gt;) view.&lt;span class="pl-c1"&gt;updateGradientSkeleton&lt;/span&gt;()         &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Gradient&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;(&lt;span class="pl-c1"&gt;3&lt;/span&gt;) view.&lt;span class="pl-c1"&gt;updateAnimatedSkeleton&lt;/span&gt;()         &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Solid animated&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;(&lt;span class="pl-c1"&gt;4&lt;/span&gt;) view.&lt;span class="pl-c1"&gt;updateAnimatedGradientSkeleton&lt;/span&gt;() &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Gradient animated&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h3&gt;&lt;a id="user-content--collections" class="anchor" aria-hidden="true" href="#-collections"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;g-emoji class="g-emoji" alias="herb" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f33f.png"&gt;🌿&lt;/g-emoji&gt; Collections&lt;/h3&gt;
&lt;p&gt;Now, &lt;code&gt;SkeletonView&lt;/code&gt; is compatible with &lt;code&gt;UITableView&lt;/code&gt; and &lt;code&gt;UICollectionView&lt;/code&gt;.&lt;/p&gt;
&lt;h4&gt;&lt;a id="user-content-uitableview" class="anchor" aria-hidden="true" href="#uitableview"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;UITableView&lt;/h4&gt;
&lt;p&gt;If you want to show the skeleton in a &lt;code&gt;UITableView&lt;/code&gt;, you need to conform to &lt;code&gt;SkeletonTableViewDataSource&lt;/code&gt; protocol.&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;public&lt;/span&gt; &lt;span class="pl-k"&gt;protocol&lt;/span&gt; &lt;span class="pl-en"&gt;SkeletonTableViewDataSource&lt;/span&gt;: &lt;span class="pl-e"&gt;UITableViewDataSource &lt;/span&gt;{
    &lt;span class="pl-k"&gt;func&lt;/span&gt; &lt;span class="pl-en"&gt;numSections&lt;/span&gt;(&lt;span class="pl-en"&gt;in&lt;/span&gt; &lt;span class="pl-smi"&gt;collectionSkeletonView&lt;/span&gt;: UITableView) &lt;span class="pl-k"&gt;-&amp;gt;&lt;/span&gt; &lt;span class="pl-c1"&gt;Int&lt;/span&gt;
    &lt;span class="pl-k"&gt;func&lt;/span&gt; &lt;span class="pl-en"&gt;collectionSkeletonView&lt;/span&gt;(&lt;span class="pl-en"&gt;_&lt;/span&gt; &lt;span class="pl-smi"&gt;skeletonView&lt;/span&gt;: UITableView, &lt;span class="pl-en"&gt;numberOfRowsInSection&lt;/span&gt; &lt;span class="pl-smi"&gt;section&lt;/span&gt;: &lt;span class="pl-c1"&gt;Int&lt;/span&gt;) &lt;span class="pl-k"&gt;-&amp;gt;&lt;/span&gt; &lt;span class="pl-c1"&gt;Int&lt;/span&gt;
    &lt;span class="pl-k"&gt;func&lt;/span&gt; &lt;span class="pl-en"&gt;collectionSkeletonView&lt;/span&gt;(&lt;span class="pl-en"&gt;_&lt;/span&gt; &lt;span class="pl-smi"&gt;skeletonView&lt;/span&gt;: UITableView, &lt;span class="pl-en"&gt;cellIdentifierForRowAt&lt;/span&gt; &lt;span class="pl-smi"&gt;indexPath&lt;/span&gt;: IndexPath) &lt;span class="pl-k"&gt;-&amp;gt;&lt;/span&gt; ReusableCellIdentifier
}&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;As you can see, this protocol inherits from &lt;code&gt;UITableViewDataSource&lt;/code&gt;, so you can replace this protocol with the skeleton protocol.&lt;/p&gt;
&lt;p&gt;This protocol has a default implementation:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;func&lt;/span&gt; &lt;span class="pl-en"&gt;numSections&lt;/span&gt;(&lt;span class="pl-en"&gt;in&lt;/span&gt; &lt;span class="pl-smi"&gt;collectionSkeletonView&lt;/span&gt;: UITableView) &lt;span class="pl-k"&gt;-&amp;gt;&lt;/span&gt; &lt;span class="pl-c1"&gt;Int&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Default: 1&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;func&lt;/span&gt; &lt;span class="pl-en"&gt;collectionSkeletonView&lt;/span&gt;(&lt;span class="pl-en"&gt;_&lt;/span&gt; &lt;span class="pl-smi"&gt;skeletonView&lt;/span&gt;: UITableView, &lt;span class="pl-en"&gt;numberOfRowsInSection&lt;/span&gt; &lt;span class="pl-smi"&gt;section&lt;/span&gt;: &lt;span class="pl-c1"&gt;Int&lt;/span&gt;) &lt;span class="pl-k"&gt;-&amp;gt;&lt;/span&gt; &lt;span class="pl-c1"&gt;Int&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Default:&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; It calculates how many cells need to populate whole tableview&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;There is only one method you need to implement to let Skeleton know the cell identifier. This method doesn't have default implementation:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;func&lt;/span&gt; &lt;span class="pl-en"&gt;collectionSkeletonView&lt;/span&gt;(&lt;span class="pl-en"&gt;_&lt;/span&gt; &lt;span class="pl-smi"&gt;skeletonView&lt;/span&gt;: UITableView, &lt;span class="pl-en"&gt;cellIdentifierForRowAt&lt;/span&gt; &lt;span class="pl-smi"&gt;indexPath&lt;/span&gt;: IndexPath) &lt;span class="pl-k"&gt;-&amp;gt;&lt;/span&gt; ReusableCellIdentifier&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;strong&gt;Example&lt;/strong&gt;&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;func&lt;/span&gt; &lt;span class="pl-en"&gt;collectionSkeletonView&lt;/span&gt;(&lt;span class="pl-en"&gt;_&lt;/span&gt; &lt;span class="pl-smi"&gt;skeletonView&lt;/span&gt;: UITableView, &lt;span class="pl-en"&gt;cellIdentifierForRowAt&lt;/span&gt; &lt;span class="pl-smi"&gt;indexPath&lt;/span&gt;: IndexPath) &lt;span class="pl-k"&gt;-&amp;gt;&lt;/span&gt; ReusableCellIdentifier {
   &lt;span class="pl-k"&gt;return&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;CellIdentifier&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;
}&lt;/pre&gt;&lt;/div&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;IMPORTANT!&lt;/strong&gt;
If you are using resizable cells (&lt;code&gt;tableView.rowHeight = UITableViewAutomaticDimension&lt;/code&gt; ), it's mandatory define the &lt;code&gt;estimatedRowHeight&lt;/code&gt;.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;👩🏼‍🏫  &lt;strong&gt;How specify which elements are skeletonables?&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Here is an illustration that shows how you should specify which elements are skeletonables when you are using an &lt;code&gt;UITableView&lt;/code&gt;:&lt;/p&gt;
&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="Assets/tableview_scheme.png"&gt;&lt;img src="Assets/tableview_scheme.png" alt="" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;As you can see, we have to make skeletonable the tableview, the cell and the UI elements, but we don't need to set as skeletonable the &lt;code&gt;contentView&lt;/code&gt;&lt;/p&gt;
&lt;h4&gt;&lt;a id="user-content-uicollectionview" class="anchor" aria-hidden="true" href="#uicollectionview"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;UICollectionView&lt;/h4&gt;
&lt;p&gt;For &lt;code&gt;UICollectionView&lt;/code&gt;, you need to conform to &lt;code&gt;SkeletonCollectionViewDataSource&lt;/code&gt; protocol.&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;public&lt;/span&gt; &lt;span class="pl-k"&gt;protocol&lt;/span&gt; &lt;span class="pl-en"&gt;SkeletonCollectionViewDataSource&lt;/span&gt;: &lt;span class="pl-e"&gt;UICollectionViewDataSource &lt;/span&gt;{
    &lt;span class="pl-k"&gt;func&lt;/span&gt; &lt;span class="pl-en"&gt;numSections&lt;/span&gt;(&lt;span class="pl-en"&gt;in&lt;/span&gt; &lt;span class="pl-smi"&gt;collectionSkeletonView&lt;/span&gt;: UICollectionView) &lt;span class="pl-k"&gt;-&amp;gt;&lt;/span&gt; &lt;span class="pl-c1"&gt;Int&lt;/span&gt;
    &lt;span class="pl-k"&gt;func&lt;/span&gt; &lt;span class="pl-en"&gt;collectionSkeletonView&lt;/span&gt;(&lt;span class="pl-en"&gt;_&lt;/span&gt; &lt;span class="pl-smi"&gt;skeletonView&lt;/span&gt;: UICollectionView, &lt;span class="pl-en"&gt;numberOfItemsInSection&lt;/span&gt; &lt;span class="pl-smi"&gt;section&lt;/span&gt;: &lt;span class="pl-c1"&gt;Int&lt;/span&gt;) &lt;span class="pl-k"&gt;-&amp;gt;&lt;/span&gt; &lt;span class="pl-c1"&gt;Int&lt;/span&gt;
    &lt;span class="pl-k"&gt;func&lt;/span&gt; &lt;span class="pl-en"&gt;collectionSkeletonView&lt;/span&gt;(&lt;span class="pl-en"&gt;_&lt;/span&gt; &lt;span class="pl-smi"&gt;skeletonView&lt;/span&gt;: UICollectionView, &lt;span class="pl-en"&gt;cellIdentifierForItemAt&lt;/span&gt; &lt;span class="pl-smi"&gt;indexPath&lt;/span&gt;: IndexPath) &lt;span class="pl-k"&gt;-&amp;gt;&lt;/span&gt; ReusableCellIdentifier
}&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;The rest of the process is the same as &lt;code&gt;UITableView&lt;/code&gt;&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content--multiline-text" class="anchor" aria-hidden="true" href="#-multiline-text"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;g-emoji class="g-emoji" alias="newspaper" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f4f0.png"&gt;📰&lt;/g-emoji&gt; Multiline text&lt;/h3&gt;
&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="Assets/multilines2.png"&gt;&lt;img src="Assets/multilines2.png" alt="" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;When using elements with text, &lt;code&gt;SkeletonView&lt;/code&gt; draws lines to simulate text.
Besides, you can decide how many lines you want. If  &lt;code&gt;numberOfLines&lt;/code&gt; is set to zero, it will calculate how many lines needed to populate the whole skeleton and it will be drawn. Instead, if you set it to one, two or any number greater than zero, it will only draw this number of lines.&lt;/p&gt;
&lt;h5&gt;&lt;a id="user-content--customize" class="anchor" aria-hidden="true" href="#-customize"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;g-emoji class="g-emoji" alias="control_knobs" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f39b.png"&gt;🎛&lt;/g-emoji&gt; Customize&lt;/h5&gt;
&lt;p&gt;You can set some properties for multilines elements.&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Property&lt;/th&gt;
&lt;th&gt;Values&lt;/th&gt;
&lt;th&gt;Default&lt;/th&gt;
&lt;th&gt;Preview&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;Filling percent&lt;/strong&gt; of the last line.&lt;/td&gt;
&lt;td&gt;&lt;code&gt;0...100&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;70%&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;a target="_blank" rel="noopener noreferrer" href="Assets/multiline_lastline.png"&gt;&lt;img src="Assets/multiline_lastline.png" alt="" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;Corner radius&lt;/strong&gt; of lines. (&lt;strong&gt;NEW&lt;/strong&gt;)&lt;/td&gt;
&lt;td&gt;&lt;code&gt;0...10&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;0&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;a target="_blank" rel="noopener noreferrer" href="Assets/multiline_corner.png"&gt;&lt;img src="Assets/multiline_corner.png" alt="" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;To modify the percent or radius &lt;strong&gt;using code&lt;/strong&gt;, set the properties:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;descriptionTextView.&lt;span class="pl-smi"&gt;lastLineFillPercent&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;50&lt;/span&gt;
descriptionTextView.&lt;span class="pl-smi"&gt;linesCornerRadius&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;5&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Or, if you prefer use &lt;strong&gt;IB/Storyboard&lt;/strong&gt;:&lt;/p&gt;
&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="Assets/multiline_customize.png"&gt;&lt;img src="Assets/multiline_customize.png" alt="" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content--custom-colors" class="anchor" aria-hidden="true" href="#-custom-colors"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;g-emoji class="g-emoji" alias="art" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f3a8.png"&gt;🎨&lt;/g-emoji&gt; Custom colors&lt;/h3&gt;
&lt;p&gt;You can decide which color the skeleton is tinted with. You only need to pass as a parameter the color or gradient you want.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Using solid colors&lt;/strong&gt;&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;view.&lt;span class="pl-c1"&gt;showSkeleton&lt;/span&gt;(&lt;span class="pl-c1"&gt;usingColor&lt;/span&gt;: UIColor.&lt;span class="pl-smi"&gt;gray&lt;/span&gt;) &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Solid&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; or&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;view.&lt;span class="pl-c1"&gt;showSkeleton&lt;/span&gt;(&lt;span class="pl-c1"&gt;usingColor&lt;/span&gt;: &lt;span class="pl-c1"&gt;UIColor&lt;/span&gt;(&lt;span class="pl-c1"&gt;red&lt;/span&gt;: &lt;span class="pl-c1"&gt;25.0&lt;/span&gt;, &lt;span class="pl-c1"&gt;green&lt;/span&gt;: &lt;span class="pl-c1"&gt;30.0&lt;/span&gt;, &lt;span class="pl-c1"&gt;blue&lt;/span&gt;: &lt;span class="pl-c1"&gt;255.0&lt;/span&gt;, &lt;span class="pl-c1"&gt;alpha&lt;/span&gt;: &lt;span class="pl-c1"&gt;1.0&lt;/span&gt;))&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;strong&gt;Using gradients&lt;/strong&gt;&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;let&lt;/span&gt; gradient &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;SkeletonGradient&lt;/span&gt;(&lt;span class="pl-c1"&gt;baseColor&lt;/span&gt;: UIColor.&lt;span class="pl-smi"&gt;midnightBlue&lt;/span&gt;)
view.&lt;span class="pl-c1"&gt;showGradientSkeleton&lt;/span&gt;(&lt;span class="pl-c1"&gt;usingGradient&lt;/span&gt;: gradient) &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Gradient&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Besides, &lt;code&gt;SkeletonView&lt;/code&gt; features 20 flat colors 🤙🏼&lt;/p&gt;
&lt;p&gt;&lt;code&gt;UIColor.turquoise, UIColor.greenSea, UIColor.sunFlower, UIColor.flatOrange  ...&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="Assets/flatcolors.png"&gt;&lt;img src="Assets/flatcolors.png" alt="" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h6&gt;&lt;a id="user-content-image-captured-from-website-httpsflatuicolorscom" class="anchor" aria-hidden="true" href="#image-captured-from-website-httpsflatuicolorscom"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Image captured from website &lt;a href="https://flatuicolors.com" rel="nofollow"&gt;https://flatuicolors.com&lt;/a&gt;&lt;/h6&gt;
&lt;h3&gt;&lt;a id="user-content--appearance" class="anchor" aria-hidden="true" href="#-appearance"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;g-emoji class="g-emoji" alias="butterfly" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f98b.png"&gt;🦋&lt;/g-emoji&gt; Appearance&lt;/h3&gt;
&lt;p&gt;&lt;strong&gt;NEW&lt;/strong&gt; The skeletons have a default appearance. So, when you don't specify the color, gradient or multilines properties, &lt;code&gt;SkeletonView&lt;/code&gt; uses the default values.&lt;/p&gt;
&lt;p&gt;Default values:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;tintColor&lt;/strong&gt;: UIColor
&lt;ul&gt;
&lt;li&gt;&lt;em&gt;default: &lt;code&gt;.skeletonDefault&lt;/code&gt; (same as &lt;code&gt;.clouds&lt;/code&gt; but adaptive to dark mode)&lt;/em&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;gradient&lt;/strong&gt;: SkeletonGradient
&lt;ul&gt;
&lt;li&gt;&lt;em&gt;default: &lt;code&gt;SkeletonGradient(baseColor: .skeletonDefault)&lt;/code&gt;&lt;/em&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;multilineHeight&lt;/strong&gt;: CGFloat
&lt;ul&gt;
&lt;li&gt;&lt;em&gt;default: 15&lt;/em&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;multilineSpacing&lt;/strong&gt;: CGFloat
&lt;ul&gt;
&lt;li&gt;&lt;em&gt;default: 10&lt;/em&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;multilineLastLineFillPercent&lt;/strong&gt;: Int
&lt;ul&gt;
&lt;li&gt;&lt;em&gt;default: 70&lt;/em&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;multilineCornerRadius&lt;/strong&gt;: Int
&lt;ul&gt;
&lt;li&gt;&lt;em&gt;default: 0&lt;/em&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;To get these default values you can use &lt;code&gt;SkeletonAppearance.default&lt;/code&gt;. Using this property you can set the values as well:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;SkeletonAppearance.&lt;span class="pl-smi"&gt;default&lt;/span&gt;.&lt;span class="pl-smi"&gt;multilineHeight&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;20&lt;/span&gt;
SkeletonAppearance.&lt;span class="pl-smi"&gt;default&lt;/span&gt;.&lt;span class="pl-smi"&gt;tintColor&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; .&lt;span class="pl-smi"&gt;green&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;You can also specifiy these line appearance properties on a per-label basis:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;lastLineFillPercent&lt;/strong&gt;: Int&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;linesCornerRadius&lt;/strong&gt;: Int&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;skeletonLineSpacing&lt;/strong&gt;: CGFloat&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;skeletonPaddingInsets&lt;/strong&gt;: UIEdgeInsets&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;&lt;a id="user-content--custom-animations" class="anchor" aria-hidden="true" href="#-custom-animations"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;g-emoji class="g-emoji" alias="nerd_face" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f913.png"&gt;🤓&lt;/g-emoji&gt; Custom animations&lt;/h3&gt;
&lt;p&gt;&lt;code&gt;SkeletonView&lt;/code&gt; has two built-in animations, &lt;em&gt;pulse&lt;/em&gt; for solid skeletons and &lt;em&gt;sliding&lt;/em&gt; for gradients.&lt;/p&gt;
&lt;p&gt;Besides, if you want to do your own skeleton animation, it's really easy.&lt;/p&gt;
&lt;p&gt;Skeleton provides the &lt;code&gt;showAnimatedSkeleton&lt;/code&gt; function which has a &lt;code&gt;SkeletonLayerAnimation&lt;/code&gt; closure where you can define your custom animation.&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;public&lt;/span&gt; &lt;span class="pl-k"&gt;typealias&lt;/span&gt; &lt;span class="pl-en"&gt;SkeletonLayerAnimation&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; (CALayer) &lt;span class="pl-k"&gt;-&amp;gt;&lt;/span&gt; CAAnimation&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;You can call the function like this:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;view.&lt;span class="pl-smi"&gt;showAnimatedSkeleton&lt;/span&gt; { (layer) &lt;span class="pl-k"&gt;-&amp;gt;&lt;/span&gt; CAAnimation &lt;span class="pl-k"&gt;in&lt;/span&gt;
  &lt;span class="pl-k"&gt;let&lt;/span&gt; animation &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;CAAnimation&lt;/span&gt;()
  &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Customize here your animation&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;
  &lt;span class="pl-k"&gt;return&lt;/span&gt; animation
}&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;It's available &lt;code&gt;SkeletonAnimationBuilder&lt;/code&gt;. It's a builder to make &lt;code&gt;SkeletonLayerAnimation&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;Today, you can create &lt;strong&gt;sliding animations&lt;/strong&gt; for gradients, deciding the &lt;strong&gt;direction&lt;/strong&gt; and setting the &lt;strong&gt;duration&lt;/strong&gt; of the animation (default = 1.5s).&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; func makeSlidingAnimation(withDirection direction: GradientDirection, duration: CFTimeInterval = 1.5) -&amp;gt; SkeletonLayerAnimation&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;
&lt;span class="pl-k"&gt;let&lt;/span&gt; animation &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;SkeletonAnimationBuilder&lt;/span&gt;().&lt;span class="pl-c1"&gt;makeSlidingAnimation&lt;/span&gt;(&lt;span class="pl-c1"&gt;withDirection&lt;/span&gt;: .&lt;span class="pl-smi"&gt;leftToRight&lt;/span&gt;)
view.&lt;span class="pl-c1"&gt;showAnimatedGradientSkeleton&lt;/span&gt;(&lt;span class="pl-c1"&gt;usingGradient&lt;/span&gt;: gradient, &lt;span class="pl-c1"&gt;animation&lt;/span&gt;: animation)
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;code&gt;GradientDirection&lt;/code&gt; is an enum, with this cases:&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Direction&lt;/th&gt;
&lt;th&gt;Preview&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;.leftRight&lt;/td&gt;
&lt;td&gt;&lt;a target="_blank" rel="noopener noreferrer" href="Assets/sliding_left_to_right.gif"&gt;&lt;img src="Assets/sliding_left_to_right.gif" alt="" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;.rightLeft&lt;/td&gt;
&lt;td&gt;&lt;a target="_blank" rel="noopener noreferrer" href="Assets/sliding_right_to_left.gif"&gt;&lt;img src="Assets/sliding_right_to_left.gif" alt="" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;.topBottom&lt;/td&gt;
&lt;td&gt;&lt;a target="_blank" rel="noopener noreferrer" href="Assets/sliding_top_to_bottom.gif"&gt;&lt;img src="Assets/sliding_top_to_bottom.gif" alt="" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;.bottomTop&lt;/td&gt;
&lt;td&gt;&lt;a target="_blank" rel="noopener noreferrer" href="Assets/sliding_bottom_to_top.gif"&gt;&lt;img src="Assets/sliding_bottom_to_top.gif" alt="" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;.topLeftBottomRight&lt;/td&gt;
&lt;td&gt;&lt;a target="_blank" rel="noopener noreferrer" href="Assets/sliding_topLeft_to_bottomRight.gif"&gt;&lt;img src="Assets/sliding_topLeft_to_bottomRight.gif" alt="" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;.bottomRightTopLeft&lt;/td&gt;
&lt;td&gt;&lt;a target="_blank" rel="noopener noreferrer" href="Assets/sliding_bottomRight_to_topLeft.gif"&gt;&lt;img src="Assets/sliding_bottomRight_to_topLeft.gif" alt="" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;&lt;g-emoji class="g-emoji" alias="wink" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f609.png"&gt;😉&lt;/g-emoji&gt; TRICK!&lt;/strong&gt;
Exist another way to create sliding animations, just using this shortcut:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;code&gt;let animation = GradientDirection.leftToRight.slidingAnimation()&lt;/code&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/blockquote&gt;
&lt;h3&gt;&lt;a id="user-content--transitions" class="anchor" aria-hidden="true" href="#-transitions"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;g-emoji class="g-emoji" alias="surfing_man" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f3c4.png"&gt;🏄&lt;/g-emoji&gt; Transitions&lt;/h3&gt;
&lt;p&gt;&lt;code&gt;SkeletonView&lt;/code&gt; has build-in transitions to &lt;strong&gt;show&lt;/strong&gt; or &lt;strong&gt;hide&lt;/strong&gt; the skeletons in a &lt;em&gt;smoother&lt;/em&gt; way &lt;g-emoji class="g-emoji" alias="call_me_hand" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f919.png"&gt;🤙&lt;/g-emoji&gt;&lt;/p&gt;
&lt;p&gt;To use the transition, simply add the &lt;code&gt;transition&lt;/code&gt; parameter to your &lt;code&gt;showSkeleton()&lt;/code&gt; or &lt;code&gt;hideSkeleton()&lt;/code&gt; function with the transition time, like this:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;view.&lt;span class="pl-c1"&gt;showSkeleton&lt;/span&gt;(&lt;span class="pl-c1"&gt;transition&lt;/span&gt;: .&lt;span class="pl-c1"&gt;crossDissolve&lt;/span&gt;(&lt;span class="pl-c1"&gt;0.25&lt;/span&gt;))     &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt;Show skeleton cross dissolve transition with 0.25 seconds fade time&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;view.&lt;span class="pl-c1"&gt;hideSkeleton&lt;/span&gt;(&lt;span class="pl-c1"&gt;transition&lt;/span&gt;: .&lt;span class="pl-c1"&gt;crossDissolve&lt;/span&gt;(&lt;span class="pl-c1"&gt;0.25&lt;/span&gt;))     &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt;Hide skeleton cross dissolve transition with 0.25 seconds fade time&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;strong&gt;Preview&lt;/strong&gt;&lt;/p&gt;
&lt;table&gt;
&lt;tbody&gt;&lt;tr&gt;
&lt;td width="50%"&gt;
None
&lt;/td&gt;
&lt;td width="50%"&gt;
Cross dissolve
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td width="50%"&gt;
&lt;a target="_blank" rel="noopener noreferrer" href="Assets/skeleton_transition_nofade.gif"&gt;&lt;img src="Assets/skeleton_transition_nofade.gif" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;/td&gt;
&lt;td width="50%"&gt;
&lt;a target="_blank" rel="noopener noreferrer" href="Assets/skeleton_transition_fade.gif"&gt;&lt;img src="Assets/skeleton_transition_fade.gif" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;&lt;/table&gt;
&lt;h3&gt;&lt;a id="user-content--hierarchy" class="anchor" aria-hidden="true" href="#-hierarchy"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;g-emoji class="g-emoji" alias="family_man_girl_boy" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f468-1f467-1f466.png"&gt;👨‍👧‍👦&lt;/g-emoji&gt; Hierarchy&lt;/h3&gt;
&lt;p&gt;Since &lt;code&gt;SkeletonView&lt;/code&gt; is recursive, and we want skeleton to be very efficient, we want to stop recursion as soon as possible. For this reason, you must set the container view as &lt;code&gt;Skeletonable&lt;/code&gt;, because Skeleton will stop looking for &lt;code&gt;skeletonable&lt;/code&gt; subviews as soon as a view is not Skeletonable, breaking then the recursion.&lt;/p&gt;
&lt;p&gt;Because an image is worth a thousand words:&lt;/p&gt;
&lt;p&gt;In this example we have a &lt;code&gt;UIViewController&lt;/code&gt; with a &lt;code&gt;ContainerView&lt;/code&gt; and a &lt;code&gt;UITableView&lt;/code&gt;. When the view is ready, we show the skeleton using this method:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;view.showSkeleton()
&lt;/code&gt;&lt;/pre&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;code&gt;ìsSkeletonable&lt;/code&gt;= &lt;g-emoji class="g-emoji" alias="skull_and_crossbones" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/2620.png"&gt;☠️&lt;/g-emoji&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th align="center"&gt;Configuration&lt;/th&gt;
&lt;th align="center"&gt;Result&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td align="center"&gt;&lt;a target="_blank" rel="noopener noreferrer" href="Assets/no_skeletonable.jpg"&gt;&lt;img src="Assets/no_skeletonable.jpg" width="350" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/td&gt;
&lt;td align="center"&gt;&lt;a target="_blank" rel="noopener noreferrer" href="Assets/no_skeletonables_result.png"&gt;&lt;img src="Assets/no_skeletonables_result.png" width="350" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="center"&gt;&lt;a target="_blank" rel="noopener noreferrer" href="Assets/container_no_skeletonable.jpg"&gt;&lt;img src="Assets/container_no_skeletonable.jpg" width="350" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/td&gt;
&lt;td align="center"&gt;&lt;a target="_blank" rel="noopener noreferrer" href="Assets/no_skeletonables_result.png"&gt;&lt;img src="Assets/no_skeletonables_result.png" width="350" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="center"&gt;&lt;a target="_blank" rel="noopener noreferrer" href="Assets/container_skeletonable.jpg"&gt;&lt;img src="Assets/container_skeletonable.jpg" width="350" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/td&gt;
&lt;td align="center"&gt;&lt;a target="_blank" rel="noopener noreferrer" href="Assets/container_skeletonable_result.png"&gt;&lt;img src="Assets/container_skeletonable_result.png" width="350" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="center"&gt;&lt;a target="_blank" rel="noopener noreferrer" href="Assets/all_skeletonables.jpg"&gt;&lt;img src="Assets/all_skeletonables.jpg" width="350" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/td&gt;
&lt;td align="center"&gt;&lt;a target="_blank" rel="noopener noreferrer" href="Assets/all_skeletonables_result.png"&gt;&lt;img src="Assets/all_skeletonables_result.png" width="350" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="center"&gt;&lt;a target="_blank" rel="noopener noreferrer" href="Assets/tableview_no_skeletonable.jpg"&gt;&lt;img src="Assets/tableview_no_skeletonable.jpg" width="350" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/td&gt;
&lt;td align="center"&gt;&lt;a target="_blank" rel="noopener noreferrer" href="Assets/tableview_no_skeletonable_result.png"&gt;&lt;img src="Assets/tableview_no_skeletonable_result.png" height="350" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="center"&gt;&lt;a target="_blank" rel="noopener noreferrer" href="Assets/tableview_skeletonable.jpg"&gt;&lt;img src="Assets/tableview_skeletonable.jpg" width="350" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/td&gt;
&lt;td align="center"&gt;&lt;a target="_blank" rel="noopener noreferrer" href="Assets/tableview_skeletonable_result.png"&gt;&lt;img src="Assets/tableview_skeletonable_result.png" height="350" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h3&gt;&lt;a id="user-content--debug" class="anchor" aria-hidden="true" href="#-debug"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;g-emoji class="g-emoji" alias="microscope" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f52c.png"&gt;🔬&lt;/g-emoji&gt; Debug&lt;/h3&gt;
&lt;p&gt;&lt;strong&gt;NEW&lt;/strong&gt; In order to facilitate the debug tasks when something is not working fine. &lt;code&gt;SkeletonView&lt;/code&gt; has some new tools.&lt;/p&gt;
&lt;p&gt;First, &lt;code&gt;UIView&lt;/code&gt; has available a new property with his skeleton info:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;var&lt;/span&gt; skeletonDescription&lt;span class="pl-k"&gt;:&lt;/span&gt; &lt;span class="pl-c1"&gt;String&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;The skeleton representation looks like this:&lt;/p&gt;
&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="Assets/debug_description.png"&gt;&lt;img src="Assets/debug_description.png" alt="" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Besides, you can activate the new &lt;strong&gt;debug mode&lt;/strong&gt;. You just add the environment variable &lt;code&gt;SKELETON_DEBUG&lt;/code&gt; and activate it.&lt;/p&gt;
&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="Assets/debug_mode.png"&gt;&lt;img src="Assets/debug_mode.png" alt="" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Then, when the skeleton appears, you can see the view hierarchy in the Xcode console.&lt;/p&gt;
&lt;details&gt;
&lt;summary&gt;Open to see an output example &lt;/summary&gt;
&lt;a target="_blank" rel="noopener noreferrer" href="Assets/hierarchy_output.png"&gt;&lt;img src="Assets/hierarchy_output.png" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;/details&gt;
&lt;h3&gt;&lt;a id="user-content--documentation" class="anchor" aria-hidden="true" href="#-documentation"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;g-emoji class="g-emoji" alias="books" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f4da.png"&gt;📚&lt;/g-emoji&gt; Documentation&lt;/h3&gt;
&lt;p&gt;Coming soon...&lt;g-emoji class="g-emoji" alias="sweat_smile" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f605.png"&gt;😅&lt;/g-emoji&gt;&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content--supported-os--sdk-versions" class="anchor" aria-hidden="true" href="#-supported-os--sdk-versions"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;g-emoji class="g-emoji" alias="clipboard" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f4cb.png"&gt;📋&lt;/g-emoji&gt; Supported OS &amp;amp; SDK Versions&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;iOS 9.0+&lt;/li&gt;
&lt;li&gt;tvOS 9.0+&lt;/li&gt;
&lt;li&gt;Swift 5&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content--next-steps" class="anchor" aria-hidden="true" href="#-next-steps"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;g-emoji class="g-emoji" alias="mailbox_with_mail" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f4ec.png"&gt;📬&lt;/g-emoji&gt; Next steps&lt;/h2&gt;
&lt;ul class="contains-task-list"&gt;
&lt;li class="task-list-item"&gt;&lt;input type="checkbox" id="" disabled="" class="task-list-item-checkbox" checked=""&gt; Set the filling percent of the last line in multiline elements&lt;/li&gt;
&lt;li class="task-list-item"&gt;&lt;input type="checkbox" id="" disabled="" class="task-list-item-checkbox" checked=""&gt; Add more gradient animations&lt;/li&gt;
&lt;li class="task-list-item"&gt;&lt;input type="checkbox" id="" disabled="" class="task-list-item-checkbox" checked=""&gt; Supported resizable cells&lt;/li&gt;
&lt;li class="task-list-item"&gt;&lt;input type="checkbox" id="" disabled="" class="task-list-item-checkbox" checked=""&gt; CollectionView compatible&lt;/li&gt;
&lt;li class="task-list-item"&gt;&lt;input type="checkbox" id="" disabled="" class="task-list-item-checkbox" checked=""&gt; tvOS compatible&lt;/li&gt;
&lt;li class="task-list-item"&gt;&lt;input type="checkbox" id="" disabled="" class="task-list-item-checkbox" checked=""&gt; Add recovery state&lt;/li&gt;
&lt;li class="task-list-item"&gt;&lt;input type="checkbox" id="" disabled="" class="task-list-item-checkbox" checked=""&gt; Custom default appearance&lt;/li&gt;
&lt;li class="task-list-item"&gt;&lt;input type="checkbox" id="" disabled="" class="task-list-item-checkbox" checked=""&gt; Debug mode&lt;/li&gt;
&lt;li class="task-list-item"&gt;&lt;input type="checkbox" id="" disabled="" class="task-list-item-checkbox" checked=""&gt; Add animations when it shows/hides the skeletons&lt;/li&gt;
&lt;li class="task-list-item"&gt;&lt;input type="checkbox" id="" disabled="" class="task-list-item-checkbox"&gt; Custom collections compatible&lt;/li&gt;
&lt;li class="task-list-item"&gt;&lt;input type="checkbox" id="" disabled="" class="task-list-item-checkbox"&gt; MacOS and WatchOS compatible&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-️-contributing" class="anchor" aria-hidden="true" href="#️-contributing"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;g-emoji class="g-emoji" alias="heart" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/2764.png"&gt;❤️&lt;/g-emoji&gt; Contributing&lt;/h2&gt;
&lt;p&gt;This is an open source project, so feel free to contribute. How?&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Open an &lt;a href="https://github.com/Juanpe/SkeletonView/issues/new"&gt;issue&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;Send feedback via &lt;a href="mailto://juanpecatalan.com" rel="nofollow"&gt;email&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;Propose your own fixes, suggestions and open a pull request with the changes.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;See &lt;a href="https://github.com/Juanpe/SkeletonView/graphs/contributors"&gt;all contributors&lt;/a&gt;&lt;/p&gt;
&lt;h6&gt;&lt;a id="user-content-project-generated-with-swiftplate" class="anchor" aria-hidden="true" href="#project-generated-with-swiftplate"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Project generated with &lt;a href="https://github.com/JohnSundell/SwiftPlate"&gt;SwiftPlate&lt;/a&gt;&lt;/h6&gt;
&lt;h2&gt;&lt;a id="user-content--mentions" class="anchor" aria-hidden="true" href="#-mentions"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;g-emoji class="g-emoji" alias="loudspeaker" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f4e2.png"&gt;📢&lt;/g-emoji&gt; Mentions&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://iosdevweekly.com/issues/327#start" rel="nofollow"&gt;iOS Dev Weekly #327&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.hackingwithswift.com/articles/40/skeletonview-makes-loading-content-beautiful" rel="nofollow"&gt;Hacking with Swift Articles&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://medium.mybridge.co/swift-top-10-articles-for-the-past-month-v-nov-2017-dfed7861cd65" rel="nofollow"&gt;Top 10 Swift Articles November&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://medium.mybridge.co/30-amazing-ios-swift-libraries-for-the-past-year-v-2018-7cf15027eee9" rel="nofollow"&gt;30 Amazing iOS Swift Libraries (v2018)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://digest.appcoda.com/issues/appcoda-weekly-issue-44-81899" rel="nofollow"&gt;AppCoda Weekly #44&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://us11.campaign-archive.com/?u=cd1f3ed33c6527331d82107ba&amp;amp;id=48131a516d" rel="nofollow"&gt;iOS Cookies Newsletter #103&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://andybargh.com/swiftdevelopments-113/" rel="nofollow"&gt;Swift Developments Newsletter #113&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://ios-goodies.com/post/167557280951/week-204" rel="nofollow"&gt;iOS Goodies #204&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://digest.swiftweekly.com/issues/swift-weekly-issue-96-81759" rel="nofollow"&gt;Swift Weekly #96&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.cocoacontrols.com/controls/skeletonview" rel="nofollow"&gt;CocoaControls&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://ios.libhunt.com/newsletter/74" rel="nofollow"&gt;Awesome iOS Newsletter #74&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=mAGpsQiy6so" rel="nofollow"&gt;Swift News #36&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://medium.com/flawless-app-stories/best-ios-articles-new-tools-more-fcbe673e10d" rel="nofollow"&gt;Best iOS articles, new tools &amp;amp; more&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content--author" class="anchor" aria-hidden="true" href="#-author"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;👨🏻‍💻 Author&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Juanpe Catalán &lt;a href="http://www.twitter.com/JuanpeCatalan" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/7cf10772eb6ccebe92d678c452a971e6e2778653/687474703a2f2f692e696d6775722e636f6d2f7458536f5468462e706e67" alt="alt text" data-canonical-src="http://i.imgur.com/tXSoThF.png" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;a href="https://www.buymeacoffee.com/CDou4xtIK" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/031fc5a134cdca5ae3460822aba371e63f794233/68747470733a2f2f7777772e6275796d6561636f666665652e636f6d2f6173736574732f696d672f637573746f6d5f696d616765732f6f72616e67655f696d672e706e67" alt="Buy me a coffee" data-canonical-src="https://www.buymeacoffee.com/assets/img/custom_images/orange_img.png" style="max-width:100%;"&gt;&lt;span&gt;&lt;/span&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content--license" class="anchor" aria-hidden="true" href="#-license"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;👮🏻 License&lt;/h2&gt;
&lt;pre&gt;&lt;code&gt;MIT License

Copyright (c) 2017 Juanpe Catalán

Permission is hereby granted, free of charge, to any person obtaining a copy
of this software and associated documentation files (the "Software"), to deal
in the Software without restriction, including without limitation the rights
to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
copies of the Software, and to permit persons to whom the Software is
furnished to do so, subject to the following conditions:

The above copyright notice and this permission notice shall be included in all
copies or substantial portions of the Software.

THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
SOFTWARE.
&lt;/code&gt;&lt;/pre&gt;
&lt;/article&gt;&lt;/div&gt;</description><author>Juanpe</author><guid isPermaLink="false">https://github.com/Juanpe/SkeletonView</guid><pubDate>Fri, 08 Nov 2019 00:22:00 GMT</pubDate></item><item><title>LoopKit/Loop #23 in Swift, This week</title><link>https://github.com/LoopKit/Loop</link><description>&lt;p&gt;&lt;i&gt;An automated insulin delivery app template for iOS, built on LoopKit&lt;/i&gt;&lt;/p&gt;&lt;div id="readme" class="instapaper_body md" data-path="README.md"&gt;&lt;article class="markdown-body entry-content p-5" itemprop="text"&gt;&lt;h1&gt;&lt;a id="user-content-loop-for-ios" class="anchor" aria-hidden="true" href="#loop-for-ios"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Loop for iOS&lt;/h1&gt;
&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="/Loop/Assets.xcassets/AppIcon.appiconset/Icon-Small-40%402x.png?raw=true"&gt;&lt;img src="/Loop/Assets.xcassets/AppIcon.appiconset/Icon-Small-40%402x.png?raw=true" alt="App Icon" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href="https://travis-ci.org/LoopKit/Loop" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/8efb1d006e27ed688a187c2a43bdcea812474ecc/68747470733a2f2f7472617669732d63692e6f72672f4c6f6f704b69742f4c6f6f702e7376673f6272616e63683d6d6173746572" alt="Build Status" data-canonical-src="https://travis-ci.org/LoopKit/Loop.svg?branch=master" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://loop.zulipchat.com" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/11c063c06dacad518cf3aa987986e97ef2018727/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f7a756c69702d6a6f696e5f636861742d627269676874677265656e2e737667" alt="Join the chat at https://loop.zulipchat.com" data-canonical-src="https://img.shields.io/badge/zulip-join_chat-brightgreen.svg" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Loop is an app template for building an automated insulin delivery system. It is a stone resting on the boulders of work done by many others.&lt;/p&gt;
&lt;p&gt;Loop is built on top of &lt;a href="https://github.com/LoopKit/LoopKit"&gt;LoopKit&lt;/a&gt;. LoopKit is a set of frameworks that provide data storage, retrieval, and calculation, as well as boilerplate view controllers used in Loop.&lt;/p&gt;
&lt;p&gt;Please understand that this project:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Is highly experimental&lt;/li&gt;
&lt;li&gt;Is not approved for therapy&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;a href="/Documentation/Screenshots/Phone%20Graphs.png"&gt;&lt;img src="/Documentation/Screenshots/Phone%20Graphs.png?raw=true" alt="Screenshot of status screen" width="170" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="/Documentation/Screenshots/Phone%20Bolus.png"&gt;&lt;img src="/Documentation/Screenshots/Phone%20Bolus.png?raw=true" alt="Screenshot of bolus screen" width="170" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="/Documentation/Screenshots/Phone%20Notification%20Battery.png"&gt;&lt;img src="/Documentation/Screenshots/Phone%20Notification%20Battery.png?raw=true" alt="Screenshot of battery change notification" width="170" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="/Documentation/Screenshots/Phone%20Notification%20Loop%20Failure.png"&gt;&lt;img src="/Documentation/Screenshots/Phone%20Notification%20Loop%20Failure.png?raw=true" alt="Screenshot of loop failure notification" width="170" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="/Documentation/Screenshots/Phone%20Notification%20Bolus%20Failure.png"&gt;&lt;img src="/Documentation/Screenshots/Phone%20Notification%20Bolus%20Failure.png?raw=true" alt="Screenshot of bolus failure notification" width="170" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href="/Documentation/Screenshots/Watch%20Complication.png"&gt;&lt;img src="/Documentation/Screenshots/Watch%20Complication.png?raw=true" alt="Screenshot of glucose complication on Apple Watch" width="141" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="/Documentation/Screenshots/Watch%20Carb%20Entry.png"&gt;&lt;img src="/Documentation/Screenshots/Watch%20Carb%20Entry.png?raw=true" alt="Screenshot of carb entry on Apple Watch" width="141" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="/Documentation/Screenshots/Watch%20Bolus.png"&gt;&lt;img src="/Documentation/Screenshots/Watch%20Bolus.png?raw=true" alt="Screenshot of bolus entry on Apple Watch" width="141" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="/Documentation/Screenshots/Watch%20Menu.png"&gt;&lt;img src="/Documentation/Screenshots/Watch%20Menu.png?raw=true" alt="Screenshot of the app menu on Apple Watch" width="141" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="/Documentation/Screenshots/Watch%20Notification%20Reservoir.png"&gt;&lt;img src="/Documentation/Screenshots/Watch%20Notification%20Reservoir.png?raw=true" alt="Screenshot of bolus failure notification on Apple Watch" width="141" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="/Documentation/Screenshots/Watch%20Notification%20Bolus%20Failure.png"&gt;&lt;img src="/Documentation/Screenshots/Watch%20Notification%20Bolus%20Failure.png?raw=true" alt="Screenshot of bolus failure notification on Apple Watch" width="141" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h1&gt;&lt;a id="user-content-documentation" class="anchor" aria-hidden="true" href="#documentation"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Documentation&lt;/h1&gt;
&lt;p&gt;Please visit the &lt;a href="https://loopkit.github.io/loopdocs/" rel="nofollow"&gt;Loop Docs&lt;/a&gt; for installation, algorithm, and other details.&lt;/p&gt;
&lt;p&gt;For FAQs and other tips, refer to the &lt;a href="https://github.com/LoopKit/Loop/wiki"&gt;Wiki&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;(Note: there is also a tab for the Wiki at the top of this page)&lt;/p&gt;
&lt;h1&gt;&lt;a id="user-content-license-and-code-of-conduct" class="anchor" aria-hidden="true" href="#license-and-code-of-conduct"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;License and Code of Conduct&lt;/h1&gt;
&lt;p&gt;Please read the &lt;a href="/LICENSE.md"&gt;LICENSE&lt;/a&gt; and &lt;a href="/CODE_OF_CONDUCT.md"&gt;CODE_OF_CONDUCT&lt;/a&gt;&lt;/p&gt;
&lt;/article&gt;&lt;/div&gt;</description><author>LoopKit</author><guid isPermaLink="false">https://github.com/LoopKit/Loop</guid><pubDate>Fri, 08 Nov 2019 00:23:00 GMT</pubDate></item><item><title>realm/SwiftLint #24 in Swift, This week</title><link>https://github.com/realm/SwiftLint</link><description>&lt;p&gt;&lt;i&gt;A tool to enforce Swift style and conventions.&lt;/i&gt;&lt;/p&gt;&lt;div id="readme" class="instapaper_body md" data-path="README.md"&gt;&lt;article class="markdown-body entry-content p-5" itemprop="text"&gt;&lt;h1&gt;&lt;a id="user-content-swiftlint" class="anchor" aria-hidden="true" href="#swiftlint"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;SwiftLint&lt;/h1&gt;
&lt;p&gt;A tool to enforce Swift style and conventions, loosely based on
&lt;a href="https://github.com/github/swift-style-guide"&gt;GitHub's Swift Style Guide&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;SwiftLint hooks into &lt;a href="http://clang.llvm.org" rel="nofollow"&gt;Clang&lt;/a&gt; and
&lt;a href="http://www.jpsim.com/uncovering-sourcekit" rel="nofollow"&gt;SourceKit&lt;/a&gt; to use the
&lt;a href="http://clang.llvm.org/docs/IntroductionToTheClangAST.html" rel="nofollow"&gt;AST&lt;/a&gt; representation
of your source files for more accurate results.&lt;/p&gt;
&lt;p&gt;&lt;a href="https://dev.azure.com/jpsim/SwiftLint/_build/latest?definitionId=4?branchName=master" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/9a0296a6379b15a4bb08a821efade137d0837d36/68747470733a2f2f6465762e617a7572652e636f6d2f6a7073696d2f53776966744c696e742f5f617069732f6275696c642f7374617475732f7265616c6d2e53776966744c696e743f6272616e63684e616d653d6d6173746572" alt="Build Status" data-canonical-src="https://dev.azure.com/jpsim/SwiftLint/_apis/build/status/realm.SwiftLint?branchName=master" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://codecov.io/github/realm/SwiftLint?branch=master" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/c86f87b309c2e2ed94c56663ab18ce4096d1cd7f/68747470733a2f2f636f6465636f762e696f2f6769746875622f7265616c6d2f53776966744c696e742f636f7665726167652e7376673f6272616e63683d6d6173746572" alt="codecov.io" data-canonical-src="https://codecov.io/github/realm/SwiftLint/coverage.svg?branch=master" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="assets/screenshot.png"&gt;&lt;img src="assets/screenshot.png" alt="" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;This project adheres to the &lt;a href="https://realm.io/conduct" rel="nofollow"&gt;Contributor Covenant Code of Conduct&lt;/a&gt;.
By participating, you are expected to uphold this code. Please report
unacceptable behavior to &lt;a href="mailto:info@realm.io"&gt;info@realm.io&lt;/a&gt;.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Language Switch: &lt;a href="https://github.com/realm/SwiftLint/blob/master/README_CN.md"&gt;中文&lt;/a&gt;, &lt;a href="https://github.com/realm/SwiftLint/blob/master/README_KR.md"&gt;한국어&lt;/a&gt;.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2&gt;&lt;a id="user-content-installation" class="anchor" aria-hidden="true" href="#installation"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Installation&lt;/h2&gt;
&lt;h3&gt;&lt;a id="user-content-using-homebrew" class="anchor" aria-hidden="true" href="#using-homebrew"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Using &lt;a href="http://brew.sh/" rel="nofollow"&gt;Homebrew&lt;/a&gt;:&lt;/h3&gt;
&lt;pre&gt;&lt;code&gt;brew install swiftlint
&lt;/code&gt;&lt;/pre&gt;
&lt;h3&gt;&lt;a id="user-content-using-cocoapods" class="anchor" aria-hidden="true" href="#using-cocoapods"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Using &lt;a href="https://cocoapods.org" rel="nofollow"&gt;CocoaPods&lt;/a&gt;:&lt;/h3&gt;
&lt;p&gt;Simply add the following line to your Podfile:&lt;/p&gt;
&lt;div class="highlight highlight-source-ruby"&gt;&lt;pre&gt;pod &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;SwiftLint&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;This will download the SwiftLint binaries and dependencies in &lt;code&gt;Pods/&lt;/code&gt; during your next
&lt;code&gt;pod install&lt;/code&gt; execution and will allow you to invoke it via &lt;code&gt;${PODS_ROOT}/SwiftLint/swiftlint&lt;/code&gt;
in your Script Build Phases.&lt;/p&gt;
&lt;p&gt;This is the recommended way to install a specific version of SwiftLint since it supports
installing a pinned version rather than simply the latest (which is the case with Homebrew).&lt;/p&gt;
&lt;p&gt;Note that this will add the SwiftLint binaries, its dependencies' binaries and the Swift binary
library distribution to the &lt;code&gt;Pods/&lt;/code&gt; directory, so checking in this directory to SCM such as
git is discouraged.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-using-mint" class="anchor" aria-hidden="true" href="#using-mint"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Using &lt;a href="https://github.com/yonaskolb/mint"&gt;Mint&lt;/a&gt;:&lt;/h3&gt;
&lt;pre&gt;&lt;code&gt;$ mint install realm/SwiftLint
&lt;/code&gt;&lt;/pre&gt;
&lt;h3&gt;&lt;a id="user-content-using-a-pre-built-package" class="anchor" aria-hidden="true" href="#using-a-pre-built-package"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Using a pre-built package:&lt;/h3&gt;
&lt;p&gt;You can also install SwiftLint by downloading &lt;code&gt;SwiftLint.pkg&lt;/code&gt; from the
&lt;a href="https://github.com/realm/SwiftLint/releases/latest"&gt;latest GitHub release&lt;/a&gt; and
running it.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-compiling-from-source" class="anchor" aria-hidden="true" href="#compiling-from-source"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Compiling from source:&lt;/h3&gt;
&lt;p&gt;You can also build from source by cloning this project and running
&lt;code&gt;git submodule update --init --recursive; make install&lt;/code&gt; (Xcode 10.2 or later).&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-known-installation-issues-on-macos-before-10144" class="anchor" aria-hidden="true" href="#known-installation-issues-on-macos-before-10144"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Known Installation Issues On MacOS Before 10.14.4&lt;/h3&gt;
&lt;p&gt;Starting with &lt;a href="https://github.com/realm/SwiftLint/releases/tag/0.32.0"&gt;SwiftLint 0.32.0&lt;/a&gt;, if you get
an error similar to &lt;code&gt;dyld: Symbol not found: _$s11SubSequenceSlTl&lt;/code&gt; when running SwiftLint,
you'll need to install the &lt;a href="https://support.apple.com/kb/DL1998" rel="nofollow"&gt;Swift 5 Runtime Support for Command Line Tools&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Alternatively, you can:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Update to macOS 10.14.4 or later&lt;/li&gt;
&lt;li&gt;Install Xcode 10.2 or later at &lt;code&gt;/Applications/Xcode.app&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Rebuild SwiftLint from source using Xcode 10.2 or later&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-usage" class="anchor" aria-hidden="true" href="#usage"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Usage&lt;/h2&gt;
&lt;h3&gt;&lt;a id="user-content-presentation" class="anchor" aria-hidden="true" href="#presentation"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Presentation&lt;/h3&gt;
&lt;p&gt;To get a high-level overview of recommended ways to integrate SwiftLint into your project,
we encourage you to watch this presentation or read the transcript:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://academy.realm.io/posts/slug-jp-simard-swiftlint/" rel="nofollow"&gt;&lt;img src="assets/presentation.svg" alt="Presentation" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-xcode" class="anchor" aria-hidden="true" href="#xcode"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Xcode&lt;/h3&gt;
&lt;p&gt;Integrate SwiftLint into an Xcode scheme to get warnings and errors displayed
in the IDE. Just add a new "Run Script Phase" with:&lt;/p&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;if&lt;/span&gt; which swiftlint &lt;span class="pl-k"&gt;&amp;gt;&lt;/span&gt;/dev/null&lt;span class="pl-k"&gt;;&lt;/span&gt; &lt;span class="pl-k"&gt;then&lt;/span&gt;
  swiftlint
&lt;span class="pl-k"&gt;else&lt;/span&gt;
  &lt;span class="pl-c1"&gt;echo&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;warning: SwiftLint not installed, download from https://github.com/realm/SwiftLint&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;
&lt;span class="pl-k"&gt;fi&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="assets/runscript.png"&gt;&lt;img src="assets/runscript.png" alt="" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Alternatively, if you've installed SwiftLint via CocoaPods the script should look like this:&lt;/p&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt;&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;span class="pl-smi"&gt;${PODS_ROOT}&lt;/span&gt;/SwiftLint/swiftlint&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h4&gt;&lt;a id="user-content-format-on-save-xcode-plugin" class="anchor" aria-hidden="true" href="#format-on-save-xcode-plugin"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Format on Save Xcode Plugin&lt;/h4&gt;
&lt;p&gt;To run &lt;code&gt;swiftlint autocorrect&lt;/code&gt; on save in Xcode, install the
&lt;a href="https://github.com/ypresto/SwiftLintXcode"&gt;SwiftLintXcode&lt;/a&gt; plugin from Alcatraz.&lt;/p&gt;
&lt;p&gt;&lt;g-emoji class="g-emoji" alias="warning" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/26a0.png"&gt;⚠️&lt;/g-emoji&gt;This plugin will not work with Xcode 8 or later without disabling SIP.
This is not recommended.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-appcode" class="anchor" aria-hidden="true" href="#appcode"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;AppCode&lt;/h3&gt;
&lt;p&gt;To integrate SwiftLint with AppCode, install
&lt;a href="https://plugins.jetbrains.com/plugin/9175" rel="nofollow"&gt;this plugin&lt;/a&gt; and configure
SwiftLint's installed path in the plugin's preferences.
The &lt;code&gt;autocorrect&lt;/code&gt; action is available via &lt;code&gt;⌥⏎&lt;/code&gt;.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-atom" class="anchor" aria-hidden="true" href="#atom"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Atom&lt;/h3&gt;
&lt;p&gt;To integrate SwiftLint with &lt;a href="https://atom.io/" rel="nofollow"&gt;Atom&lt;/a&gt;, install the
&lt;a href="https://atom.io/packages/linter-swiftlint" rel="nofollow"&gt;&lt;code&gt;linter-swiftlint&lt;/code&gt;&lt;/a&gt; package from
APM.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-fastlane" class="anchor" aria-hidden="true" href="#fastlane"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;fastlane&lt;/h3&gt;
&lt;p&gt;You can use the &lt;a href="https://docs.fastlane.tools/actions/swiftlint" rel="nofollow"&gt;official swiftlint fastlane action&lt;/a&gt; to run SwiftLint as part of your fastlane process.&lt;/p&gt;
&lt;div class="highlight highlight-source-ruby"&gt;&lt;pre&gt;swiftlint(
    &lt;span class="pl-c1"&gt;mode:&lt;/span&gt; &lt;span class="pl-c1"&gt;:lint&lt;/span&gt;,                            &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; SwiftLint mode: :lint (default) or :autocorrect&lt;/span&gt;
    &lt;span class="pl-c1"&gt;executable:&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;Pods/SwiftLint/swiftlint&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; The SwiftLint binary path (optional). Important if you've installed it via CocoaPods&lt;/span&gt;
    &lt;span class="pl-c1"&gt;path:&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;/path/to/lint&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;,                  &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; Specify path to lint (optional)&lt;/span&gt;
    &lt;span class="pl-c1"&gt;output_file:&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;swiftlint.result.json&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;,   &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; The path of the output file (optional)&lt;/span&gt;
    &lt;span class="pl-c1"&gt;reporter:&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;json&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;,                       &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; The custom reporter to use (optional)&lt;/span&gt;
    &lt;span class="pl-c1"&gt;config_file:&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;.swiftlint-ci.yml&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;,       &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; The path of the configuration file (optional)&lt;/span&gt;
    &lt;span class="pl-c1"&gt;files:&lt;/span&gt; [                                &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; List of files to process (optional)&lt;/span&gt;
        &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;AppDelegate.swift&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;,
        &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;path/to/project/Model.swift&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;
    ],
    &lt;span class="pl-c1"&gt;ignore_exit_status:&lt;/span&gt; &lt;span class="pl-c1"&gt;true&lt;/span&gt;,               &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; Allow fastlane to continue even if SwiftLint returns a non-zero exit status (Default: false)&lt;/span&gt;
    &lt;span class="pl-c1"&gt;quiet:&lt;/span&gt; &lt;span class="pl-c1"&gt;true&lt;/span&gt;,                            &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; Don't print status logs like 'Linting ' &amp;amp; 'Done linting' (Default: false)&lt;/span&gt;
    &lt;span class="pl-c1"&gt;strict:&lt;/span&gt; &lt;span class="pl-c1"&gt;true&lt;/span&gt;                            &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; Fail on warnings? (Default: false)&lt;/span&gt;
)&lt;/pre&gt;&lt;/div&gt;
&lt;h3&gt;&lt;a id="user-content-command-line" class="anchor" aria-hidden="true" href="#command-line"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Command Line&lt;/h3&gt;
&lt;pre&gt;&lt;code&gt;$ swiftlint help
Available commands:

   analyze         [Experimental] Run analysis rules
   autocorrect     Automatically correct warnings and errors
   generate-docs   Generates markdown documentation for all rules
   help            Display general or command-specific help
   lint            Print lint warnings and errors (default command)
   rules           Display the list of rules and their identifiers
   version         Display the current version of SwiftLint
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Run &lt;code&gt;swiftlint&lt;/code&gt; in the directory containing the Swift files to lint. Directories
will be searched recursively.&lt;/p&gt;
&lt;p&gt;To specify a list of files when using &lt;code&gt;lint&lt;/code&gt;, &lt;code&gt;autocorrect&lt;/code&gt; or &lt;code&gt;analyze&lt;/code&gt;
(like the list of files modified by Xcode specified by the
&lt;a href="https://github.com/norio-nomura/ExtraBuildPhase"&gt;&lt;code&gt;ExtraBuildPhase&lt;/code&gt;&lt;/a&gt; Xcode
plugin, or modified files in the working tree based on &lt;code&gt;git ls-files -m&lt;/code&gt;), you
can do so by passing the option &lt;code&gt;--use-script-input-files&lt;/code&gt; and setting the
following instance variables: &lt;code&gt;SCRIPT_INPUT_FILE_COUNT&lt;/code&gt; and
&lt;code&gt;SCRIPT_INPUT_FILE_0&lt;/code&gt;, &lt;code&gt;SCRIPT_INPUT_FILE_1&lt;/code&gt;...&lt;code&gt;SCRIPT_INPUT_FILE_{SCRIPT_INPUT_FILE_COUNT}&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;These are same environment variables set for input files to
&lt;a href="http://indiestack.com/2014/12/speeding-up-custom-script-phases/" rel="nofollow"&gt;custom Xcode script phases&lt;/a&gt;.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-working-with-multiple-swift-versions" class="anchor" aria-hidden="true" href="#working-with-multiple-swift-versions"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Working With Multiple Swift Versions&lt;/h3&gt;
&lt;p&gt;SwiftLint hooks into SourceKit so it continues working even as Swift evolves!&lt;/p&gt;
&lt;p&gt;This also keeps SwiftLint lean, as it doesn't need to ship with a full Swift
compiler, it just communicates with the official one you already have installed
on your machine.&lt;/p&gt;
&lt;p&gt;You should always run SwiftLint with the same toolchain you use to compile your
code.&lt;/p&gt;
&lt;p&gt;You may want to override SwiftLint's default Swift toolchain if you have
multiple toolchains or Xcodes installed.&lt;/p&gt;
&lt;p&gt;Here's the order in which SwiftLint determines which Swift toolchain to use:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;$XCODE_DEFAULT_TOOLCHAIN_OVERRIDE&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;$TOOLCHAIN_DIR&lt;/code&gt; or &lt;code&gt;$TOOLCHAINS&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;xcrun -find swift&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;/Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;/Applications/Xcode-beta.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;~/Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;~/Applications/Xcode-beta.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;code&gt;sourcekitd.framework&lt;/code&gt; is expected to be found in the &lt;code&gt;usr/lib/&lt;/code&gt; subdirectory of
the value passed in the paths above.&lt;/p&gt;
&lt;p&gt;You may also set the &lt;code&gt;TOOLCHAINS&lt;/code&gt; environment variable to the reverse-DNS
notation that identifies a Swift toolchain version:&lt;/p&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt;$ TOOLCHAINS=com.apple.dt.toolchain.Swift_2_3 swiftlint autocorrect&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;On Linux, SourceKit is expected to be located in
&lt;code&gt;/usr/lib/libsourcekitdInProc.so&lt;/code&gt; or specified by the &lt;code&gt;LINUX_SOURCEKIT_LIB_PATH&lt;/code&gt;
environment variable.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-swift-version-support" class="anchor" aria-hidden="true" href="#swift-version-support"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Swift Version Support&lt;/h3&gt;
&lt;p&gt;Here's a reference of which SwiftLint version to use for a given Swift version.&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th align="left"&gt;Swift version&lt;/th&gt;
&lt;th align="left"&gt;Last supported SwiftLint release&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td align="left"&gt;Swift 1.x&lt;/td&gt;
&lt;td align="left"&gt;SwiftLint 0.1.2&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="left"&gt;Swift 2.x&lt;/td&gt;
&lt;td align="left"&gt;SwiftLint 0.18.1&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="left"&gt;Swift 3.x&lt;/td&gt;
&lt;td align="left"&gt;SwiftLint 0.25.1&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="left"&gt;Swift 4.0-4.1.x&lt;/td&gt;
&lt;td align="left"&gt;SwiftLint 0.28.2&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="left"&gt;Swift 4.2.x&lt;/td&gt;
&lt;td align="left"&gt;SwiftLint 0.35.0&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="left"&gt;Swift 5.x&lt;/td&gt;
&lt;td align="left"&gt;Latest&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h2&gt;&lt;a id="user-content-rules" class="anchor" aria-hidden="true" href="#rules"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Rules&lt;/h2&gt;
&lt;p&gt;Over 75 rules are included in SwiftLint and the Swift community (that's you!)
continues to contribute more over time.
&lt;a href="CONTRIBUTING.md"&gt;Pull requests&lt;/a&gt; are encouraged.&lt;/p&gt;
&lt;p&gt;You can find an updated list of rules and more information about them
in &lt;a href="Rules.md"&gt;Rules.md&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;You can also check &lt;a href="Source/SwiftLintFramework/Rules"&gt;Source/SwiftLintFramework/Rules&lt;/a&gt;
directory to see their implementation.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-opt-in-rules" class="anchor" aria-hidden="true" href="#opt-in-rules"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Opt-In Rules&lt;/h3&gt;
&lt;p&gt;&lt;code&gt;opt_in_rules&lt;/code&gt; are disabled by default (i.e., you have to explicitly enable them
in your configuration file).&lt;/p&gt;
&lt;p&gt;Guidelines on when to mark a rule as opt-in:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;A rule that can have many false positives (e.g. &lt;code&gt;empty_count&lt;/code&gt;)&lt;/li&gt;
&lt;li&gt;A rule that is too slow&lt;/li&gt;
&lt;li&gt;A rule that is not general consensus or is only useful in some cases
(e.g. &lt;code&gt;force_unwrapping&lt;/code&gt;)&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;&lt;a id="user-content-disable-rules-in-code" class="anchor" aria-hidden="true" href="#disable-rules-in-code"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Disable rules in code&lt;/h3&gt;
&lt;p&gt;Rules can be disabled with a comment inside a source file with the following
format:&lt;/p&gt;
&lt;p&gt;&lt;code&gt;// swiftlint:disable &amp;lt;rule1&amp;gt; [&amp;lt;rule2&amp;gt; &amp;lt;rule3&amp;gt;...]&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;The rules will be disabled until the end of the file or until the linter sees a
matching enable comment:&lt;/p&gt;
&lt;p&gt;&lt;code&gt;// swiftlint:enable &amp;lt;rule1&amp;gt; [&amp;lt;rule2&amp;gt; &amp;lt;rule3&amp;gt;...]&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;For example:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; swiftlint:disable colon&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;&lt;span class="pl-k"&gt;let&lt;/span&gt; noWarning &lt;span class="pl-k"&gt;:&lt;/span&gt;&lt;span class="pl-c1"&gt;String&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; No warning about colons immediately after variable names!&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; swiftlint:enable colon&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;&lt;span class="pl-k"&gt;let&lt;/span&gt; hasWarning &lt;span class="pl-k"&gt;:&lt;/span&gt;&lt;span class="pl-c1"&gt;String&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Warning generated about colons immediately after variable names&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Including the &lt;code&gt;all&lt;/code&gt; keyword will disable all rules until the linter sees a matching enable comment:&lt;/p&gt;
&lt;p&gt;&lt;code&gt;// swiftlint:disable all&lt;/code&gt;
&lt;code&gt;// swiftlint:enable all&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;For example:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; swiftlint:disable all&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;&lt;span class="pl-k"&gt;let&lt;/span&gt; noWarning &lt;span class="pl-k"&gt;:&lt;/span&gt;&lt;span class="pl-c1"&gt;String&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; No warning about colons immediately after variable names!&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;&lt;span class="pl-k"&gt;let&lt;/span&gt; i &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Also no warning about short identifier names&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; swiftlint:enable all&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;&lt;span class="pl-k"&gt;let&lt;/span&gt; hasWarning &lt;span class="pl-k"&gt;:&lt;/span&gt;&lt;span class="pl-c1"&gt;String&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Warning generated about colons immediately after variable names&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;&lt;span class="pl-k"&gt;let&lt;/span&gt; y &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Warning generated about short identifier names&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;It's also possible to modify a &lt;code&gt;disable&lt;/code&gt; or &lt;code&gt;enable&lt;/code&gt; command by appending
&lt;code&gt;:previous&lt;/code&gt;, &lt;code&gt;:this&lt;/code&gt; or &lt;code&gt;:next&lt;/code&gt; for only applying the command to the previous,
this (current) or next line respectively.&lt;/p&gt;
&lt;p&gt;For example:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; swiftlint:disable:next force_cast&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;&lt;span class="pl-k"&gt;let&lt;/span&gt; noWarning &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;NSNumber&lt;/span&gt;() &lt;span class="pl-k"&gt;as!&lt;/span&gt; &lt;span class="pl-c1"&gt;Int&lt;/span&gt;
&lt;span class="pl-k"&gt;let&lt;/span&gt; hasWarning &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;NSNumber&lt;/span&gt;() &lt;span class="pl-k"&gt;as!&lt;/span&gt; &lt;span class="pl-c1"&gt;Int&lt;/span&gt;
&lt;span class="pl-k"&gt;let&lt;/span&gt; noWarning2 &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;NSNumber&lt;/span&gt;() &lt;span class="pl-k"&gt;as!&lt;/span&gt; &lt;span class="pl-c1"&gt;Int&lt;/span&gt; &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; swiftlint:disable:this force_cast&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;&lt;span class="pl-k"&gt;let&lt;/span&gt; noWarning3 &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;NSNumber&lt;/span&gt;() &lt;span class="pl-k"&gt;as!&lt;/span&gt; &lt;span class="pl-c1"&gt;Int&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; swiftlint:disable:previous force_cast&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Run &lt;code&gt;swiftlint rules&lt;/code&gt; to print a list of all available rules and their
identifiers.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-configuration" class="anchor" aria-hidden="true" href="#configuration"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Configuration&lt;/h3&gt;
&lt;p&gt;Configure SwiftLint by adding a &lt;code&gt;.swiftlint.yml&lt;/code&gt; file from the directory you'll
run SwiftLint from. The following parameters can be configured:&lt;/p&gt;
&lt;p&gt;Rule inclusion:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;disabled_rules&lt;/code&gt;: Disable rules from the default enabled set.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;opt_in_rules&lt;/code&gt;: Enable rules not from the default set.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;whitelist_rules&lt;/code&gt;: Acts as a whitelist, only the rules specified in this list
will be enabled. Can not be specified alongside &lt;code&gt;disabled_rules&lt;/code&gt; or
&lt;code&gt;opt_in_rules&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;analyzer_rules&lt;/code&gt;: This is an entirely separate list of rules that are only
run by the &lt;code&gt;analyze&lt;/code&gt; command. All analyzer rules are opt-in, so this is the
only configurable rule list (there is no disabled/whitelist equivalent).&lt;/li&gt;
&lt;/ul&gt;
&lt;div class="highlight highlight-source-yaml"&gt;&lt;pre&gt;&lt;span class="pl-ent"&gt;disabled_rules&lt;/span&gt;: &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; rule identifiers to exclude from running&lt;/span&gt;
  - &lt;span class="pl-s"&gt;colon&lt;/span&gt;
  - &lt;span class="pl-s"&gt;comma&lt;/span&gt;
  - &lt;span class="pl-s"&gt;control_statement&lt;/span&gt;
&lt;span class="pl-ent"&gt;opt_in_rules&lt;/span&gt;: &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; some rules are only opt-in&lt;/span&gt;
  - &lt;span class="pl-s"&gt;empty_count&lt;/span&gt;
  &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; Find all the available rules by running:&lt;/span&gt;
  &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; swiftlint rules&lt;/span&gt;
&lt;span class="pl-ent"&gt;included&lt;/span&gt;: &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; paths to include during linting. `--path` is ignored if present.&lt;/span&gt;
  - &lt;span class="pl-s"&gt;Source&lt;/span&gt;
&lt;span class="pl-ent"&gt;excluded&lt;/span&gt;: &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; paths to ignore during linting. Takes precedence over `included`.&lt;/span&gt;
  - &lt;span class="pl-s"&gt;Carthage&lt;/span&gt;
  - &lt;span class="pl-s"&gt;Pods&lt;/span&gt;
  - &lt;span class="pl-s"&gt;Source/ExcludedFolder&lt;/span&gt;
  - &lt;span class="pl-s"&gt;Source/ExcludedFile.swift&lt;/span&gt;
  - &lt;span class="pl-s"&gt;Source/*/ExcludedFile.swift &lt;/span&gt;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; Exclude files with a wildcard&lt;/span&gt;
&lt;span class="pl-ent"&gt;analyzer_rules&lt;/span&gt;: &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; Rules run by `swiftlint analyze` (experimental)&lt;/span&gt;
  - &lt;span class="pl-s"&gt;explicit_self&lt;/span&gt;

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; configurable rules can be customized from this configuration file&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; binary rules can set their severity level&lt;/span&gt;
&lt;span class="pl-ent"&gt;force_cast&lt;/span&gt;: &lt;span class="pl-s"&gt;warning &lt;/span&gt;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; implicitly&lt;/span&gt;
&lt;span class="pl-ent"&gt;force_try&lt;/span&gt;:
  &lt;span class="pl-ent"&gt;severity&lt;/span&gt;: &lt;span class="pl-s"&gt;warning &lt;/span&gt;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; explicitly&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; rules that have both warning and error levels, can set just the warning level&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; implicitly&lt;/span&gt;
&lt;span class="pl-ent"&gt;line_length&lt;/span&gt;: &lt;span class="pl-c1"&gt;110&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; they can set both implicitly with an array&lt;/span&gt;
&lt;span class="pl-ent"&gt;type_body_length&lt;/span&gt;:
  - &lt;span class="pl-c1"&gt;300&lt;/span&gt; &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; warning&lt;/span&gt;
  - &lt;span class="pl-c1"&gt;400&lt;/span&gt; &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; error&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; or they can set both explicitly&lt;/span&gt;
&lt;span class="pl-ent"&gt;file_length&lt;/span&gt;:
  &lt;span class="pl-ent"&gt;warning&lt;/span&gt;: &lt;span class="pl-c1"&gt;500&lt;/span&gt;
  &lt;span class="pl-ent"&gt;error&lt;/span&gt;: &lt;span class="pl-c1"&gt;1200&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; naming rules can set warnings/errors for min_length and max_length&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; additionally they can set excluded names&lt;/span&gt;
&lt;span class="pl-ent"&gt;type_name&lt;/span&gt;:
  &lt;span class="pl-ent"&gt;min_length&lt;/span&gt;: &lt;span class="pl-c1"&gt;4&lt;/span&gt; &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; only warning&lt;/span&gt;
  &lt;span class="pl-ent"&gt;max_length&lt;/span&gt;: &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; warning and error&lt;/span&gt;
    &lt;span class="pl-ent"&gt;warning&lt;/span&gt;: &lt;span class="pl-c1"&gt;40&lt;/span&gt;
    &lt;span class="pl-ent"&gt;error&lt;/span&gt;: &lt;span class="pl-c1"&gt;50&lt;/span&gt;
  &lt;span class="pl-ent"&gt;excluded&lt;/span&gt;: &lt;span class="pl-s"&gt;iPhone &lt;/span&gt;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; excluded via string&lt;/span&gt;
  &lt;span class="pl-ent"&gt;allowed_symbols&lt;/span&gt;: &lt;span class="pl-s"&gt;["_"] &lt;/span&gt;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; these are allowed in type names&lt;/span&gt;
&lt;span class="pl-ent"&gt;identifier_name&lt;/span&gt;:
  &lt;span class="pl-ent"&gt;min_length&lt;/span&gt;: &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; only min_length&lt;/span&gt;
    &lt;span class="pl-ent"&gt;error&lt;/span&gt;: &lt;span class="pl-c1"&gt;4&lt;/span&gt; &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; only error&lt;/span&gt;
  &lt;span class="pl-ent"&gt;excluded&lt;/span&gt;: &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; excluded via string array&lt;/span&gt;
    - &lt;span class="pl-s"&gt;id&lt;/span&gt;
    - &lt;span class="pl-s"&gt;URL&lt;/span&gt;
    - &lt;span class="pl-s"&gt;GlobalAPIKey&lt;/span&gt;
&lt;span class="pl-ent"&gt;reporter&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;xcode&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; reporter type (xcode, json, csv, checkstyle, junit, html, emoji, sonarqube, markdown)&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;You can also use environment variables in your configuration file,
by using &lt;code&gt;${SOME_VARIABLE}&lt;/code&gt; in a string.&lt;/p&gt;
&lt;h4&gt;&lt;a id="user-content-defining-custom-rules" class="anchor" aria-hidden="true" href="#defining-custom-rules"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Defining Custom Rules&lt;/h4&gt;
&lt;p&gt;You can define custom regex-based rules in your configuration file using the
following syntax:&lt;/p&gt;
&lt;div class="highlight highlight-source-yaml"&gt;&lt;pre&gt;&lt;span class="pl-ent"&gt;custom_rules&lt;/span&gt;:
  &lt;span class="pl-ent"&gt;pirates_beat_ninjas&lt;/span&gt;: &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; rule identifier&lt;/span&gt;
    &lt;span class="pl-ent"&gt;included&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;.*&lt;span class="pl-cce"&gt;\\&lt;/span&gt;.swift&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; regex that defines paths to include during linting. optional.&lt;/span&gt;
    &lt;span class="pl-ent"&gt;excluded&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;.*Test&lt;span class="pl-cce"&gt;\\&lt;/span&gt;.swift&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; regex that defines paths to exclude during linting. optional&lt;/span&gt;
    &lt;span class="pl-ent"&gt;name&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;Pirates Beat Ninjas&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; rule name. optional.&lt;/span&gt;
    &lt;span class="pl-ent"&gt;regex&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;([n,N]inja)&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; matching pattern&lt;/span&gt;
    &lt;span class="pl-ent"&gt;match_kinds&lt;/span&gt;: &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; SyntaxKinds to match. optional.&lt;/span&gt;
      - &lt;span class="pl-s"&gt;comment&lt;/span&gt;
      - &lt;span class="pl-s"&gt;identifier&lt;/span&gt;
    &lt;span class="pl-ent"&gt;message&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;Pirates are better than ninjas.&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; violation message. optional.&lt;/span&gt;
    &lt;span class="pl-ent"&gt;severity&lt;/span&gt;: &lt;span class="pl-s"&gt;error &lt;/span&gt;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; violation severity. optional.&lt;/span&gt;
  &lt;span class="pl-ent"&gt;no_hiding_in_strings&lt;/span&gt;:
    &lt;span class="pl-ent"&gt;regex&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;([n,N]inja)&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;
    &lt;span class="pl-ent"&gt;match_kinds&lt;/span&gt;: &lt;span class="pl-s"&gt;string&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;This is what the output would look like:&lt;/p&gt;
&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="assets/custom-rule.png"&gt;&lt;img src="assets/custom-rule.png" alt="" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;You can filter the matches by providing one or more &lt;code&gt;match_kinds&lt;/code&gt;, which will
reject matches that include syntax kinds that are not present in this list. Here
are all the possible syntax kinds:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;argument&lt;/li&gt;
&lt;li&gt;attribute.builtin&lt;/li&gt;
&lt;li&gt;attribute.id&lt;/li&gt;
&lt;li&gt;buildconfig.id&lt;/li&gt;
&lt;li&gt;buildconfig.keyword&lt;/li&gt;
&lt;li&gt;comment&lt;/li&gt;
&lt;li&gt;comment.mark&lt;/li&gt;
&lt;li&gt;comment.url&lt;/li&gt;
&lt;li&gt;doccomment&lt;/li&gt;
&lt;li&gt;doccomment.field&lt;/li&gt;
&lt;li&gt;identifier&lt;/li&gt;
&lt;li&gt;keyword&lt;/li&gt;
&lt;li&gt;number&lt;/li&gt;
&lt;li&gt;objectliteral&lt;/li&gt;
&lt;li&gt;parameter&lt;/li&gt;
&lt;li&gt;placeholder&lt;/li&gt;
&lt;li&gt;string&lt;/li&gt;
&lt;li&gt;string_interpolation_anchor&lt;/li&gt;
&lt;li&gt;typeidentifier&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;If using custom rules alongside a whitelist, make sure to add &lt;code&gt;custom_rules&lt;/code&gt; as an item under &lt;code&gt;whitelist_rules&lt;/code&gt;.&lt;/p&gt;
&lt;h4&gt;&lt;a id="user-content-nested-configurations" class="anchor" aria-hidden="true" href="#nested-configurations"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Nested Configurations&lt;/h4&gt;
&lt;p&gt;SwiftLint supports nesting configuration files for more granular control over
the linting process.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Include additional &lt;code&gt;.swiftlint.yml&lt;/code&gt; files where necessary in your directory
structure.&lt;/li&gt;
&lt;li&gt;Each file will be linted using the configuration file that is in its
directory or at the deepest level of its parent directories. Otherwise the
root configuration will be used.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;included&lt;/code&gt; is ignored for nested configurations.&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;&lt;a id="user-content-auto-correct" class="anchor" aria-hidden="true" href="#auto-correct"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Auto-correct&lt;/h3&gt;
&lt;p&gt;SwiftLint can automatically correct certain violations. Files on disk are
overwritten with a corrected version.&lt;/p&gt;
&lt;p&gt;Please make sure to have backups of these files before running
&lt;code&gt;swiftlint autocorrect&lt;/code&gt;, otherwise important data may be lost.&lt;/p&gt;
&lt;p&gt;Standard linting is disabled while correcting because of the high likelihood of
violations (or their offsets) being incorrect after modifying a file while
applying corrections.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-analyze-experimental" class="anchor" aria-hidden="true" href="#analyze-experimental"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Analyze (experimental)&lt;/h3&gt;
&lt;p&gt;The &lt;em&gt;experimental&lt;/em&gt; &lt;code&gt;swiftlint analyze&lt;/code&gt; command can lint Swift files using the
full type-checked AST. The compiler log path containing the clean &lt;code&gt;swiftc&lt;/code&gt; build
command invocation (incremental builds will fail) must be passed to &lt;code&gt;analyze&lt;/code&gt;
via the &lt;code&gt;--compiler-log-path&lt;/code&gt; flag.
e.g. &lt;code&gt;--compiler-log-path /path/to/xcodebuild.log&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;This can be obtained by running
&lt;code&gt;xcodebuild -workspace {WORKSPACE}.xcworkspace -scheme {SCHEME} &amp;gt; xcodebuild.log&lt;/code&gt;
with a clean &lt;code&gt;DerivedData&lt;/code&gt; folder.&lt;/p&gt;
&lt;p&gt;This command and related code in SwiftLint is subject to substantial changes at
any time while this feature is marked as experimental. Analyzer rules also tend
to be considerably slower than lint rules.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-license" class="anchor" aria-hidden="true" href="#license"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;License&lt;/h2&gt;
&lt;p&gt;&lt;a href="LICENSE"&gt;MIT licensed.&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-about" class="anchor" aria-hidden="true" href="#about"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;About&lt;/h2&gt;
&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="assets/realm.png"&gt;&lt;img src="assets/realm.png" width="184" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;SwiftLint is maintained and funded by Realm Inc. The names and logos for
Realm are trademarks of Realm Inc.&lt;/p&gt;
&lt;p&gt;We &lt;g-emoji class="g-emoji" alias="heart" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/2764.png"&gt;❤️&lt;/g-emoji&gt; open source software!
See &lt;a href="https://github.com/realm"&gt;our other open source projects&lt;/a&gt;,
read &lt;a href="https://realm.io/news" rel="nofollow"&gt;our blog&lt;/a&gt;, or say hi on twitter
(&lt;a href="https://twitter.com/realm" rel="nofollow"&gt;@realm&lt;/a&gt;).&lt;/p&gt;
&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="assets/macstadium.png"&gt;&lt;img src="assets/macstadium.png" width="184" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Our thanks to MacStadium for providing a Mac Mini to run our performance
tests.&lt;/p&gt;
&lt;/article&gt;&lt;/div&gt;</description><author>realm</author><guid isPermaLink="false">https://github.com/realm/SwiftLint</guid><pubDate>Fri, 08 Nov 2019 00:24:00 GMT</pubDate></item><item><title>groue/GRDB.swift #25 in Swift, This week</title><link>https://github.com/groue/GRDB.swift</link><description>&lt;p&gt;&lt;i&gt;A toolkit for SQLite databases, with a focus on application development&lt;/i&gt;&lt;/p&gt;&lt;div id="readme" class="instapaper_body md" data-path="README.md"&gt;&lt;article class="markdown-body entry-content p-5" itemprop="text"&gt;&lt;h1&gt;&lt;a id="user-content-grdb-4-----" class="anchor" aria-hidden="true" href="#grdb-4-----"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;GRDB 4 &lt;a href="https://developer.apple.com/swift/" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/7deaf2fd442ddfbdc28a7dc3ce67f067a59618a0/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f73776966742d342e322d6f72616e67652e7376673f7374796c653d666c6174" alt="Swift 4.2" data-canonical-src="https://img.shields.io/badge/swift-4.2-orange.svg?style=flat" style="max-width:100%;"&gt;&lt;/a&gt; &lt;a href="https://developer.apple.com/swift/" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/c71f82ee3309bc14cc904fb1a628903768e1ac39/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f73776966742d352d6f72616e67652e7376673f7374796c653d666c6174" alt="Swift 5" data-canonical-src="https://img.shields.io/badge/swift-5-orange.svg?style=flat" style="max-width:100%;"&gt;&lt;/a&gt; &lt;a href="https://developer.apple.com/swift/" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/0b596e48758a762e966c41ea71cb4eeab1b3588c/68747470733a2f2f696d672e736869656c64732e696f2f636f636f61706f64732f702f475244422e73776966742e737667" alt="Platforms" data-canonical-src="https://img.shields.io/cocoapods/p/GRDB.swift.svg" style="max-width:100%;"&gt;&lt;/a&gt; &lt;a href="/LICENSE"&gt;&lt;img src="https://camo.githubusercontent.com/7436c9380b0004504c50be20057c7759b100fc5d/68747470733a2f2f696d672e736869656c64732e696f2f6769746875622f6c6963656e73652f67726f75652f475244422e73776966742e7376673f6d61784167653d32353932303030" alt="License" data-canonical-src="https://img.shields.io/github/license/groue/GRDB.swift.svg?maxAge=2592000" style="max-width:100%;"&gt;&lt;/a&gt; &lt;a href="https://travis-ci.org/groue/GRDB.swift" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/7454ea95706b4541a19f4e7b2183204cc9c5529e/68747470733a2f2f7472617669732d63692e6f72672f67726f75652f475244422e73776966742e7376673f6272616e63683d6d6173746572" alt="Build Status" data-canonical-src="https://travis-ci.org/groue/GRDB.swift.svg?branch=master" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/h1&gt;
&lt;h3&gt;&lt;a id="user-content-a-toolkit-for-sqlite-databases-with-a-focus-on-application-development" class="anchor" aria-hidden="true" href="#a-toolkit-for-sqlite-databases-with-a-focus-on-application-development"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;A toolkit for SQLite databases, with a focus on application development&lt;/h3&gt;
&lt;hr&gt;
&lt;p&gt;&lt;strong&gt;Latest release&lt;/strong&gt;: October 15, 2019 • version 4.5.0 • &lt;a href="CHANGELOG.md"&gt;CHANGELOG&lt;/a&gt; • &lt;a href="Documentation/GRDB3MigrationGuide.md"&gt;Migrating From GRDB 3 to GRDB 4&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Requirements&lt;/strong&gt;: iOS 9.0+ / macOS 10.9+ / tvOS 9.0+ / watchOS 2.0+ • Swift 4.2+ / Xcode 10.0+&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Swift version&lt;/th&gt;
&lt;th&gt;GRDB version&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;Swift 5&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;&lt;strong&gt;v4.5.0&lt;/strong&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;Swift 4.2&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;&lt;strong&gt;v4.5.0&lt;/strong&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Swift 4.1&lt;/td&gt;
&lt;td&gt;&lt;a href="https://github.com/groue/GRDB.swift/tree/v3.7.0"&gt;v3.7.0&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Swift 4&lt;/td&gt;
&lt;td&gt;&lt;a href="https://github.com/groue/GRDB.swift/tree/v2.10.0"&gt;v2.10.0&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Swift 3.2&lt;/td&gt;
&lt;td&gt;&lt;a href="https://github.com/groue/GRDB.swift/tree/v1.3.0"&gt;v1.3.0&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Swift 3.1&lt;/td&gt;
&lt;td&gt;&lt;a href="https://github.com/groue/GRDB.swift/tree/v1.3.0"&gt;v1.3.0&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Swift 3&lt;/td&gt;
&lt;td&gt;&lt;a href="https://github.com/groue/GRDB.swift/tree/v1.0"&gt;v1.0&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Swift 2.3&lt;/td&gt;
&lt;td&gt;&lt;a href="https://github.com/groue/GRDB.swift/tree/v0.81.2"&gt;v0.81.2&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Swift 2.2&lt;/td&gt;
&lt;td&gt;&lt;a href="https://github.com/groue/GRDB.swift/tree/v0.80.2"&gt;v0.80.2&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;&lt;strong&gt;Contact&lt;/strong&gt;:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Release announcements and usage tips: follow &lt;a href="http://twitter.com/groue" rel="nofollow"&gt;@groue&lt;/a&gt; on Twitter.&lt;/li&gt;
&lt;li&gt;Report bugs in a &lt;a href="https://github.com/groue/GRDB.swift/issues/new"&gt;Github issue&lt;/a&gt;. Make sure you check the &lt;a href="https://github.com/groue/GRDB.swift/issues?q=is%3Aopen"&gt;existing issues&lt;/a&gt; first.&lt;/li&gt;
&lt;li&gt;A question? Looking for advice? Do you wonder how to contribute? Fancy a chat? Go to the &lt;a href="https://forums.swift.org/c/related-projects/grdb" rel="nofollow"&gt;GRDB forums&lt;/a&gt;, or open a &lt;a href="https://github.com/groue/GRDB.swift/issues/new"&gt;Github issue&lt;/a&gt;.&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-what-is-this" class="anchor" aria-hidden="true" href="#what-is-this"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;What is this?&lt;/h2&gt;
&lt;p&gt;GRDB provides raw access to SQL and advanced SQLite features, because one sometimes enjoys a sharp tool. It has robust concurrency primitives, so that multi-threaded applications can efficiently use their databases. It grants your application models with persistence and fetching methods, so that you don't have to deal with SQL and raw database rows when you don't want to.&lt;/p&gt;
&lt;p&gt;Compared to &lt;a href="http://github.com/stephencelis/SQLite.swift"&gt;SQLite.swift&lt;/a&gt; or &lt;a href="http://github.com/ccgus/fmdb"&gt;FMDB&lt;/a&gt;, GRDB can spare you a lot of glue code. Compared to &lt;a href="https://developer.apple.com/library/content/documentation/Cocoa/Conceptual/CoreData/" rel="nofollow"&gt;Core Data&lt;/a&gt; or &lt;a href="http://realm.io" rel="nofollow"&gt;Realm&lt;/a&gt;, it can simplify your multi-threaded applications.&lt;/p&gt;
&lt;p&gt;It comes with &lt;a href="#documentation"&gt;up-to-date documentation&lt;/a&gt;, &lt;a href="#general-guides--good-practices"&gt;general guides&lt;/a&gt;, and it is &lt;a href="https://github.com/groue/GRDB.swift/wiki/Performance"&gt;fast&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;See &lt;a href="Documentation/WhyAdoptGRDB.md"&gt;Why Adopt GRDB?&lt;/a&gt; if you are looking for your favorite database library.&lt;/p&gt;
&lt;hr&gt;
&lt;p align="center"&gt;
    &lt;a href="#features"&gt;Features&lt;/a&gt; •
    &lt;a href="#usage"&gt;Usage&lt;/a&gt; •
    &lt;a href="#installation"&gt;Installation&lt;/a&gt; •
    &lt;a href="#documentation"&gt;Documentation&lt;/a&gt; •
    &lt;a href="#demo-application"&gt;Demo Application&lt;/a&gt; •
    &lt;a href="#faq"&gt;FAQ&lt;/a&gt;
&lt;/p&gt;
&lt;hr&gt;
&lt;h2&gt;&lt;a id="user-content-features" class="anchor" aria-hidden="true" href="#features"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Features&lt;/h2&gt;
&lt;p&gt;GRDB ships with:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="#sqlite-api"&gt;Access to raw SQL and SQLite&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#records"&gt;Records&lt;/a&gt;: Fetching and persistence methods for your custom structs and class hierarchies.&lt;/li&gt;
&lt;li&gt;&lt;a href="#the-query-interface"&gt;Query Interface&lt;/a&gt;: A swift way to avoid the SQL language.&lt;/li&gt;
&lt;li&gt;&lt;a href="Documentation/AssociationsBasics.md"&gt;Associations&lt;/a&gt;: Relations and joins between record types.&lt;/li&gt;
&lt;li&gt;&lt;a href="#database-pools"&gt;WAL Mode Support&lt;/a&gt;: Extra performance for multi-threaded applications.&lt;/li&gt;
&lt;li&gt;&lt;a href="#migrations"&gt;Migrations&lt;/a&gt;: Transform your database as your application evolves.&lt;/li&gt;
&lt;li&gt;&lt;a href="#database-changes-observation"&gt;Database Observation&lt;/a&gt;: Observe database changes and transactions.&lt;/li&gt;
&lt;li&gt;&lt;a href="#full-text-search"&gt;Full-Text Search&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#encryption"&gt;Encryption&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="Documentation/CustomSQLiteBuilds.md"&gt;Support for Custom SQLite Builds&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Companion libraries that enhance and extend GRDB:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://github.com/groue/GRDBCombine"&gt;GRDBCombine&lt;/a&gt;: track database changes in a reactive way, with &lt;a href="https://developer.apple.com/documentation/combine" rel="nofollow"&gt;Combine&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;&lt;a href="http://github.com/RxSwiftCommunity/RxGRDB"&gt;RxGRDB&lt;/a&gt;: track database changes in a reactive way, with &lt;a href="https://github.com/ReactiveX/RxSwift"&gt;RxSwift&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/groue/GRDBObjc"&gt;GRDBObjc&lt;/a&gt;: FMDB-compatible bindings to GRDB.&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-usage" class="anchor" aria-hidden="true" href="#usage"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Usage&lt;/h2&gt;
&lt;details open=""&gt;
  &lt;summary&gt;Connect to an SQLite database&lt;/summary&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;import&lt;/span&gt; &lt;span class="pl-en"&gt;GRDB&lt;/span&gt;

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Simple database connection&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;&lt;span class="pl-k"&gt;let&lt;/span&gt; dbQueue &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-k"&gt;try&lt;/span&gt; &lt;span class="pl-c1"&gt;DatabaseQueue&lt;/span&gt;(&lt;span class="pl-c1"&gt;path&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;/path/to/database.sqlite&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Enhanced multithreading based on SQLite's WAL mode&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;&lt;span class="pl-k"&gt;let&lt;/span&gt; dbPool &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-k"&gt;try&lt;/span&gt; &lt;span class="pl-c1"&gt;DatabasePool&lt;/span&gt;(&lt;span class="pl-c1"&gt;path&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;/path/to/database.sqlite&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;See &lt;a href="#database-connections"&gt;Database Connections&lt;/a&gt;&lt;/p&gt;
&lt;/details&gt;
&lt;details&gt;
    &lt;summary&gt;Execute SQL statements&lt;/summary&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;try&lt;/span&gt; dbQueue.&lt;span class="pl-smi"&gt;write&lt;/span&gt; { db &lt;span class="pl-k"&gt;in&lt;/span&gt;
    &lt;span class="pl-k"&gt;try&lt;/span&gt; db.&lt;span class="pl-c1"&gt;execute&lt;/span&gt;(&lt;span class="pl-c1"&gt;sql&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"""&lt;/span&gt;&lt;/span&gt;
&lt;span class="pl-s"&gt;        CREATE TABLE place (&lt;/span&gt;
&lt;span class="pl-s"&gt;          id INTEGER PRIMARY KEY AUTOINCREMENT,&lt;/span&gt;
&lt;span class="pl-s"&gt;          title TEXT NOT NULL,&lt;/span&gt;
&lt;span class="pl-s"&gt;          favorite BOOLEAN NOT NULL DEFAULT 0,&lt;/span&gt;
&lt;span class="pl-s"&gt;          latitude DOUBLE NOT NULL,&lt;/span&gt;
&lt;span class="pl-s"&gt;          longitude DOUBLE NOT NULL)&lt;/span&gt;
&lt;span class="pl-s"&gt;        &lt;span class="pl-pds"&gt;"""&lt;/span&gt;&lt;/span&gt;)

    &lt;span class="pl-k"&gt;try&lt;/span&gt; db.&lt;span class="pl-c1"&gt;execute&lt;/span&gt;(&lt;span class="pl-c1"&gt;sql&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"""&lt;/span&gt;&lt;/span&gt;
&lt;span class="pl-s"&gt;        INSERT INTO place (title, favorite, latitude, longitude)&lt;/span&gt;
&lt;span class="pl-s"&gt;        VALUES (?, ?, ?, ?)&lt;/span&gt;
&lt;span class="pl-s"&gt;        &lt;span class="pl-pds"&gt;"""&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-c1"&gt;arguments&lt;/span&gt;: [&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;Paris&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-c1"&gt;true&lt;/span&gt;, &lt;span class="pl-c1"&gt;48.85341&lt;/span&gt;, &lt;span class="pl-c1"&gt;2.3488&lt;/span&gt;])
    
    &lt;span class="pl-k"&gt;let&lt;/span&gt; parisId &lt;span class="pl-k"&gt;=&lt;/span&gt; db.&lt;span class="pl-smi"&gt;lastInsertedRowID&lt;/span&gt;
    
    &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Swift 5 only&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;    &lt;span class="pl-k"&gt;try&lt;/span&gt; db.&lt;span class="pl-c1"&gt;execute&lt;/span&gt;(&lt;span class="pl-c1"&gt;literal&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"""&lt;/span&gt;&lt;/span&gt;
&lt;span class="pl-s"&gt;        INSERT INTO place (title, favorite, latitude, longitude)&lt;/span&gt;
&lt;span class="pl-s"&gt;        VALUES (&lt;span class="pl-pse"&gt;\(&lt;/span&gt;&lt;span class="pl-s1"&gt;&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;Madrid&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="pl-pse"&gt;&lt;span class="pl-s1"&gt;)&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-pse"&gt;\(&lt;/span&gt;&lt;span class="pl-s1"&gt;&lt;span class="pl-c1"&gt;true&lt;/span&gt;&lt;/span&gt;&lt;span class="pl-pse"&gt;&lt;span class="pl-s1"&gt;)&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-pse"&gt;\(&lt;/span&gt;&lt;span class="pl-s1"&gt;&lt;span class="pl-c1"&gt;40.41678&lt;/span&gt;&lt;/span&gt;&lt;span class="pl-pse"&gt;&lt;span class="pl-s1"&gt;)&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-pse"&gt;\(&lt;/span&gt;&lt;span class="pl-s1"&gt;&lt;span class="pl-c1"&gt;-3.70379&lt;/span&gt;&lt;/span&gt;&lt;span class="pl-pse"&gt;&lt;span class="pl-s1"&gt;)&lt;/span&gt;&lt;/span&gt;)&lt;/span&gt;
&lt;span class="pl-s"&gt;        &lt;span class="pl-pds"&gt;"""&lt;/span&gt;&lt;/span&gt;)
}&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;See &lt;a href="#executing-updates"&gt;Executing Updates&lt;/a&gt;&lt;/p&gt;
&lt;/details&gt;
&lt;details&gt;
    &lt;summary&gt;Fetch database rows and values&lt;/summary&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;try&lt;/span&gt; dbQueue.&lt;span class="pl-smi"&gt;read&lt;/span&gt; { db &lt;span class="pl-k"&gt;in&lt;/span&gt;
    &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Fetch database rows&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;    &lt;span class="pl-k"&gt;let&lt;/span&gt; rows &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-k"&gt;try&lt;/span&gt; Row.&lt;span class="pl-c1"&gt;fetchCursor&lt;/span&gt;(db, &lt;span class="pl-c1"&gt;sql&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;SELECT * FROM place&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
    &lt;span class="pl-k"&gt;while&lt;/span&gt; &lt;span class="pl-k"&gt;let&lt;/span&gt; row &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-k"&gt;try&lt;/span&gt; rows.&lt;span class="pl-c1"&gt;next&lt;/span&gt;() {
        &lt;span class="pl-k"&gt;let&lt;/span&gt; title&lt;span class="pl-k"&gt;:&lt;/span&gt; &lt;span class="pl-c1"&gt;String&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; row[&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;title&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;]
        &lt;span class="pl-k"&gt;let&lt;/span&gt; isFavorite&lt;span class="pl-k"&gt;:&lt;/span&gt; &lt;span class="pl-c1"&gt;Bool&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; row[&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;favorite&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;]
        &lt;span class="pl-k"&gt;let&lt;/span&gt; coordinate &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;CLLocationCoordinate2D&lt;/span&gt;(
            &lt;span class="pl-c1"&gt;latitude&lt;/span&gt;: row[&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;latitude&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;],
            &lt;span class="pl-c1"&gt;longitude&lt;/span&gt;: row[&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;longitude&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;])
    }
    
    &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Fetch values&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;    &lt;span class="pl-k"&gt;let&lt;/span&gt; placeCount &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-k"&gt;try&lt;/span&gt; &lt;span class="pl-c1"&gt;Int&lt;/span&gt;.&lt;span class="pl-c1"&gt;fetchOne&lt;/span&gt;(db, &lt;span class="pl-c1"&gt;sql&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;SELECT COUNT(*) FROM place&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)&lt;span class="pl-k"&gt;!&lt;/span&gt; &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Int&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;    &lt;span class="pl-k"&gt;let&lt;/span&gt; placeTitles &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-k"&gt;try&lt;/span&gt; &lt;span class="pl-c1"&gt;String&lt;/span&gt;.&lt;span class="pl-c1"&gt;fetchAll&lt;/span&gt;(db, &lt;span class="pl-c1"&gt;sql&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;SELECT title FROM place&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;) &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; [String]&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;}

&lt;span class="pl-k"&gt;let&lt;/span&gt; placeCount &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-k"&gt;try&lt;/span&gt; dbQueue.&lt;span class="pl-smi"&gt;read&lt;/span&gt; { db &lt;span class="pl-k"&gt;in&lt;/span&gt;
    &lt;span class="pl-k"&gt;try&lt;/span&gt; &lt;span class="pl-c1"&gt;Int&lt;/span&gt;.&lt;span class="pl-c1"&gt;fetchOne&lt;/span&gt;(db, &lt;span class="pl-c1"&gt;sql&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;SELECT COUNT(*) FROM place&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)&lt;span class="pl-k"&gt;!&lt;/span&gt;
}&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;See &lt;a href="#fetch-queries"&gt;Fetch Queries&lt;/a&gt;&lt;/p&gt;
&lt;/details&gt;
&lt;details&gt;
    &lt;summary&gt;Store custom models aka "records"&lt;/summary&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;struct&lt;/span&gt; &lt;span class="pl-en"&gt;Place&lt;/span&gt; {
    &lt;span class="pl-k"&gt;var&lt;/span&gt; id&lt;span class="pl-k"&gt;:&lt;/span&gt; &lt;span class="pl-c1"&gt;Int64&lt;/span&gt;&lt;span class="pl-k"&gt;?&lt;/span&gt;
    &lt;span class="pl-k"&gt;var&lt;/span&gt; title&lt;span class="pl-k"&gt;:&lt;/span&gt; &lt;span class="pl-c1"&gt;String&lt;/span&gt;
    &lt;span class="pl-k"&gt;var&lt;/span&gt; isFavorite&lt;span class="pl-k"&gt;:&lt;/span&gt; &lt;span class="pl-c1"&gt;Bool&lt;/span&gt;
    &lt;span class="pl-k"&gt;var&lt;/span&gt; coordinate&lt;span class="pl-k"&gt;:&lt;/span&gt; CLLocationCoordinate2D
}

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; snip: turn Place into a "record" by adopting the protocols that&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; provide fetching and persistence methods.&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;
&lt;span class="pl-k"&gt;try&lt;/span&gt; dbQueue.&lt;span class="pl-smi"&gt;write&lt;/span&gt; { db &lt;span class="pl-k"&gt;in&lt;/span&gt;
    &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Create database table&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;    &lt;span class="pl-k"&gt;try&lt;/span&gt; db.&lt;span class="pl-c1"&gt;create&lt;/span&gt;(&lt;span class="pl-c1"&gt;table&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;place&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;) { t &lt;span class="pl-k"&gt;in&lt;/span&gt;
        t.&lt;span class="pl-c1"&gt;autoIncrementedPrimaryKey&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;id&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
        t.&lt;span class="pl-c1"&gt;column&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;title&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, .&lt;span class="pl-c1"&gt;text&lt;/span&gt;).&lt;span class="pl-c1"&gt;notNull&lt;/span&gt;()
        t.&lt;span class="pl-c1"&gt;column&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;favorite&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, .&lt;span class="pl-smi"&gt;boolean&lt;/span&gt;).&lt;span class="pl-c1"&gt;notNull&lt;/span&gt;().&lt;span class="pl-c1"&gt;defaults&lt;/span&gt;(&lt;span class="pl-c1"&gt;to&lt;/span&gt;: &lt;span class="pl-c1"&gt;false&lt;/span&gt;)
        t.&lt;span class="pl-c1"&gt;column&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;longitude&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, .&lt;span class="pl-c1"&gt;double&lt;/span&gt;).&lt;span class="pl-c1"&gt;notNull&lt;/span&gt;()
        t.&lt;span class="pl-c1"&gt;column&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;latitude&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, .&lt;span class="pl-c1"&gt;double&lt;/span&gt;).&lt;span class="pl-c1"&gt;notNull&lt;/span&gt;()
    }
    
    &lt;span class="pl-k"&gt;var&lt;/span&gt; berlin &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;Place&lt;/span&gt;(
        &lt;span class="pl-c1"&gt;id&lt;/span&gt;: &lt;span class="pl-c1"&gt;nil&lt;/span&gt;,
        &lt;span class="pl-c1"&gt;title&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;Berlin&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;,
        &lt;span class="pl-c1"&gt;isFavorite&lt;/span&gt;: &lt;span class="pl-c1"&gt;false&lt;/span&gt;,
        &lt;span class="pl-c1"&gt;coordinate&lt;/span&gt;: &lt;span class="pl-c1"&gt;CLLocationCoordinate2D&lt;/span&gt;(&lt;span class="pl-c1"&gt;latitude&lt;/span&gt;: &lt;span class="pl-c1"&gt;52.52437&lt;/span&gt;, &lt;span class="pl-c1"&gt;longitude&lt;/span&gt;: &lt;span class="pl-c1"&gt;13.41053&lt;/span&gt;))
    
    &lt;span class="pl-k"&gt;try&lt;/span&gt; berlin.&lt;span class="pl-c1"&gt;insert&lt;/span&gt;(db)
    berlin.&lt;span class="pl-smi"&gt;id&lt;/span&gt; &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; some value&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;    
    berlin.&lt;span class="pl-smi"&gt;isFavorite&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;true&lt;/span&gt;
    &lt;span class="pl-k"&gt;try&lt;/span&gt; berlin.&lt;span class="pl-c1"&gt;update&lt;/span&gt;(db)
}&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;See &lt;a href="#records"&gt;Records&lt;/a&gt;&lt;/p&gt;
&lt;/details&gt;
&lt;details&gt;
    &lt;summary&gt;Fetch records and values with the Swift query interface&lt;/summary&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;try&lt;/span&gt; dbQueue.&lt;span class="pl-smi"&gt;read&lt;/span&gt; { db &lt;span class="pl-k"&gt;in&lt;/span&gt;
    &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Place?&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;    &lt;span class="pl-k"&gt;let&lt;/span&gt; paris &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-k"&gt;try&lt;/span&gt; Place.&lt;span class="pl-c1"&gt;fetchOne&lt;/span&gt;(db, &lt;span class="pl-c1"&gt;key&lt;/span&gt;: &lt;span class="pl-c1"&gt;1&lt;/span&gt;)
    
    &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Place?&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;    &lt;span class="pl-k"&gt;let&lt;/span&gt; berlin &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-k"&gt;try&lt;/span&gt; Place.&lt;span class="pl-c1"&gt;filter&lt;/span&gt;(&lt;span class="pl-c1"&gt;Column&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;title&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;) &lt;span class="pl-k"&gt;==&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;Berlin&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;).&lt;span class="pl-c1"&gt;fetchOne&lt;/span&gt;(db)
    
    &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; [Place]&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;    &lt;span class="pl-k"&gt;let&lt;/span&gt; favoritePlaces &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-k"&gt;try&lt;/span&gt; Place
        .&lt;span class="pl-c1"&gt;filter&lt;/span&gt;(&lt;span class="pl-c1"&gt;Column&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;favorite&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;) &lt;span class="pl-k"&gt;==&lt;/span&gt; &lt;span class="pl-c1"&gt;true&lt;/span&gt;)
        .&lt;span class="pl-c1"&gt;order&lt;/span&gt;(&lt;span class="pl-c1"&gt;Column&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;title&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;))
        .&lt;span class="pl-c1"&gt;fetchAll&lt;/span&gt;(db)
    
    &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Int&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;    &lt;span class="pl-k"&gt;let&lt;/span&gt; favoriteCount &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-k"&gt;try&lt;/span&gt; Place.&lt;span class="pl-c1"&gt;filter&lt;/span&gt;(&lt;span class="pl-c1"&gt;Column&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;favorite&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)).&lt;span class="pl-c1"&gt;fetchCount&lt;/span&gt;(db)
    
    &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; SQL is always welcome&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;    &lt;span class="pl-k"&gt;let&lt;/span&gt; places &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-k"&gt;try&lt;/span&gt; Place.&lt;span class="pl-c1"&gt;fetchAll&lt;/span&gt;(db, &lt;span class="pl-c1"&gt;sql&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;SELECT * FROM place&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
}&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;See the &lt;a href="#the-query-interface"&gt;Query Interface&lt;/a&gt;&lt;/p&gt;
&lt;/details&gt;
&lt;details&gt;
    &lt;summary&gt;Be notified of database changes&lt;/summary&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;let&lt;/span&gt; observation &lt;span class="pl-k"&gt;=&lt;/span&gt; ValueObservation.&lt;span class="pl-smi"&gt;tracking&lt;/span&gt; { db &lt;span class="pl-k"&gt;in&lt;/span&gt;
    &lt;span class="pl-k"&gt;try&lt;/span&gt; Place.&lt;span class="pl-c1"&gt;fetchAll&lt;/span&gt;(db)
}
observation.&lt;span class="pl-c1"&gt;start&lt;/span&gt;(
    &lt;span class="pl-c1"&gt;in&lt;/span&gt;: dbQueue,
    &lt;span class="pl-c1"&gt;onError&lt;/span&gt;: { error &lt;span class="pl-k"&gt;in&lt;/span&gt;
        &lt;span class="pl-c1"&gt;print&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;fresh places could not be fetched&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
    }
    onChange&lt;span class="pl-k"&gt;:&lt;/span&gt; { (&lt;span class="pl-c1"&gt;places&lt;/span&gt;: [Place]) &lt;span class="pl-k"&gt;in&lt;/span&gt;
        &lt;span class="pl-c1"&gt;print&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;Places have changed.&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
    })&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;See &lt;a href="#database-changes-observation"&gt;Database Changes Observation&lt;/a&gt;&lt;/p&gt;
&lt;/details&gt;
&lt;h1&gt;&lt;a id="user-content-documentation" class="anchor" aria-hidden="true" href="#documentation"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Documentation&lt;/h1&gt;
&lt;p&gt;&lt;strong&gt;GRDB runs on top of SQLite&lt;/strong&gt;: you should get familiar with the &lt;a href="http://www.sqlite.org/faq.html" rel="nofollow"&gt;SQLite FAQ&lt;/a&gt;. For general and detailed information, jump to the &lt;a href="http://www.sqlite.org/docs.html" rel="nofollow"&gt;SQLite Documentation&lt;/a&gt;.&lt;/p&gt;
&lt;h4&gt;&lt;a id="user-content-reference" class="anchor" aria-hidden="true" href="#reference"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Reference&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://groue.github.io/GRDB.swift/docs/4.5/index.html" rel="nofollow"&gt;GRDB Reference&lt;/a&gt; (generated by &lt;a href="https://github.com/realm/jazzy"&gt;Jazzy&lt;/a&gt;)&lt;/li&gt;
&lt;/ul&gt;
&lt;h4&gt;&lt;a id="user-content-getting-started" class="anchor" aria-hidden="true" href="#getting-started"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Getting Started&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="#installation"&gt;Installation&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#demo-application"&gt;Demo Application&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#database-connections"&gt;Database Connections&lt;/a&gt;: Connect to SQLite databases&lt;/li&gt;
&lt;/ul&gt;
&lt;h4&gt;&lt;a id="user-content-sqlite-and-sql" class="anchor" aria-hidden="true" href="#sqlite-and-sql"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;SQLite and SQL&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="#sqlite-api"&gt;SQLite API&lt;/a&gt;: The low-level SQLite API • &lt;a href="#executing-updates"&gt;executing updates&lt;/a&gt; • &lt;a href="#fetch-queries"&gt;fetch queries&lt;/a&gt; • &lt;a href="Documentation/SQLInterpolation.md"&gt;SQL Interpolation&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h4&gt;&lt;a id="user-content-records-and-the-query-interface" class="anchor" aria-hidden="true" href="#records-and-the-query-interface"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Records and the Query Interface&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="#records"&gt;Records&lt;/a&gt;: Fetching and persistence methods for your custom structs and class hierarchies&lt;/li&gt;
&lt;li&gt;&lt;a href="#the-query-interface"&gt;Query Interface&lt;/a&gt;: A swift way to generate SQL • &lt;a href="#database-schema"&gt;table creation&lt;/a&gt; • &lt;a href="#requests"&gt;requests&lt;/a&gt; • &lt;a href="Documentation/AssociationsBasics.md"&gt;associations between record types&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h4&gt;&lt;a id="user-content-application-tools" class="anchor" aria-hidden="true" href="#application-tools"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Application Tools&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="#migrations"&gt;Migrations&lt;/a&gt;: Transform your database as your application evolves.&lt;/li&gt;
&lt;li&gt;&lt;a href="#full-text-search"&gt;Full-Text Search&lt;/a&gt;: Perform efficient and customizable full-text searches.&lt;/li&gt;
&lt;li&gt;&lt;a href="#joined-queries-support"&gt;Joined Queries Support&lt;/a&gt;: Consume complex joined queries.&lt;/li&gt;
&lt;li&gt;&lt;a href="#database-changes-observation"&gt;Database Changes Observation&lt;/a&gt;: Observe database changes and transactions.&lt;/li&gt;
&lt;li&gt;&lt;a href="#encryption"&gt;Encryption&lt;/a&gt;: Encrypt your database with SQLCipher.&lt;/li&gt;
&lt;li&gt;&lt;a href="#backup"&gt;Backup&lt;/a&gt;: Dump the content of a database to another.&lt;/li&gt;
&lt;/ul&gt;
&lt;h4&gt;&lt;a id="user-content-good-to-know" class="anchor" aria-hidden="true" href="#good-to-know"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Good to Know&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="#avoiding-sql-injection"&gt;Avoiding SQL Injection&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#error-handling"&gt;Error Handling&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#unicode"&gt;Unicode&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#memory-management"&gt;Memory Management&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#data-protection"&gt;Data Protection&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#concurrency"&gt;Concurrency&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#performance"&gt;Performance&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h4&gt;&lt;a id="user-content-general-guides--good-practices" class="anchor" aria-hidden="true" href="#general-guides--good-practices"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;General Guides &amp;amp; Good Practices&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;&lt;g-emoji class="g-emoji" alias="bulb" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f4a1.png"&gt;💡&lt;/g-emoji&gt; &lt;a href="Documentation/GoodPracticesForDesigningRecordTypes.md"&gt;Good Practices for Designing Record Types&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;g-emoji class="g-emoji" alias="bulb" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f4a1.png"&gt;💡&lt;/g-emoji&gt; &lt;a href="Documentation/GRDB3MigrationGuide.md"&gt;Migrating From GRDB 3 to GRDB 4&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;g-emoji class="g-emoji" alias="bulb" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f4a1.png"&gt;💡&lt;/g-emoji&gt; &lt;a href="https://github.com/groue/GRDB.swift/issues?q=is%3Aissue+label%3A%22best+practices%22"&gt;Issues tagged "best practices"&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;g-emoji class="g-emoji" alias="question" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/2753.png"&gt;❓&lt;/g-emoji&gt; &lt;a href="https://github.com/groue/GRDB.swift/issues?utf8=%E2%9C%93&amp;amp;q=is%3Aissue%20label%3Aquestion"&gt;Issues tagged "question"&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;g-emoji class="g-emoji" alias="blue_book" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f4d8.png"&gt;📘&lt;/g-emoji&gt; &lt;a href="Documentation/WhyAdoptGRDB.md"&gt;Why Adopt GRDB?&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;g-emoji class="g-emoji" alias="blue_book" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f4d8.png"&gt;📘&lt;/g-emoji&gt; &lt;a href="https://medium.com/@gwendal.roue/how-to-build-an-ios-application-with-sqlite-and-grdb-swift-d023a06c29b3" rel="nofollow"&gt;How to build an iOS application with SQLite and GRDB.swift&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;g-emoji class="g-emoji" alias="blue_book" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f4d8.png"&gt;📘&lt;/g-emoji&gt; &lt;a href="https://medium.com/@gwendal.roue/four-different-ways-to-handle-sqlite-concurrency-db3bcc74d00e" rel="nofollow"&gt;Four different ways to handle SQLite concurrency&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;g-emoji class="g-emoji" alias="blue_book" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f4d8.png"&gt;📘&lt;/g-emoji&gt; &lt;a href="https://hackernoon.com/unexpected-sqlite-with-swift-ddc6343bcbfc" rel="nofollow"&gt;Unexpected SQLite with Swift&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;&lt;a href="#faq"&gt;FAQ&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;&lt;a href="#sample-code"&gt;Sample Code&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;h1&gt;&lt;a id="user-content-installation" class="anchor" aria-hidden="true" href="#installation"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Installation&lt;/h1&gt;
&lt;p&gt;&lt;strong&gt;The installation procedures below have GRDB use the version of SQLite that ships with the target operating system.&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;See &lt;a href="#encryption"&gt;Encryption&lt;/a&gt; for the installation procedure of GRDB with SQLCipher.&lt;/p&gt;
&lt;p&gt;See &lt;a href="Documentation/CustomSQLiteBuilds.md"&gt;Custom SQLite builds&lt;/a&gt; for the installation procedure of GRDB with a customized build of SQLite 3.28.0.&lt;/p&gt;
&lt;p&gt;See &lt;a href="#enabling-fts5-support"&gt;Enabling FTS5 Support&lt;/a&gt; for the installation procedure of GRDB with support for the FTS5 full-text engine.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-cocoapods" class="anchor" aria-hidden="true" href="#cocoapods"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;CocoaPods&lt;/h2&gt;
&lt;p&gt;&lt;a href="http://cocoapods.org/" rel="nofollow"&gt;CocoaPods&lt;/a&gt; is a dependency manager for Xcode projects. To use GRDB with CocoaPods (version 1.2 or higher), specify in your &lt;code&gt;Podfile&lt;/code&gt;:&lt;/p&gt;
&lt;div class="highlight highlight-source-ruby"&gt;&lt;pre&gt;pod &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;GRDB.swift&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;GRDB can be installed as a framework, or a static library.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-swift-package-manager" class="anchor" aria-hidden="true" href="#swift-package-manager"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Swift Package Manager&lt;/h2&gt;
&lt;p&gt;The &lt;a href="https://swift.org/package-manager/" rel="nofollow"&gt;Swift Package Manager&lt;/a&gt; automates the distribution of Swift code. To use GRDB with SPM, add a dependency to your &lt;code&gt;Package.swift&lt;/code&gt; file:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;let&lt;/span&gt; package &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;Package&lt;/span&gt;(
    &lt;span class="pl-c1"&gt;dependencies&lt;/span&gt;: [
        .&lt;span class="pl-c1"&gt;package&lt;/span&gt;(&lt;span class="pl-c1"&gt;url&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;https://github.com/groue/GRDB.swift.git&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, .&lt;span class="pl-c1"&gt;upToNextMajor&lt;/span&gt;(&lt;span class="pl-c1"&gt;from&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;4.5.0&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;))
    ]
)&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Note that Linux is not currently supported.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-carthage" class="anchor" aria-hidden="true" href="#carthage"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Carthage&lt;/h2&gt;
&lt;p&gt;&lt;a href="https://github.com/Carthage/Carthage"&gt;Carthage&lt;/a&gt; is &lt;strong&gt;unsupported&lt;/strong&gt;. For some context about this decision, see &lt;a href="https://github.com/groue/GRDB.swift/issues/433"&gt;#433&lt;/a&gt;.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-manually" class="anchor" aria-hidden="true" href="#manually"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Manually&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="https://github.com/groue/GRDB.swift/releases/tag/v4.5.0"&gt;Download&lt;/a&gt; a copy of GRDB, or clone its repository and make sure you use the latest tagged version with the &lt;code&gt;git checkout v4.5.0&lt;/code&gt; command.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Embed the &lt;code&gt;GRDB.xcodeproj&lt;/code&gt; project in your own project.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Add the &lt;code&gt;GRDBOSX&lt;/code&gt;, &lt;code&gt;GRDBiOS&lt;/code&gt;, &lt;code&gt;GRDBtvOS&lt;/code&gt;, or &lt;code&gt;GRDBWatchOS&lt;/code&gt; target in the &lt;strong&gt;Target Dependencies&lt;/strong&gt; section of the &lt;strong&gt;Build Phases&lt;/strong&gt; tab of your application target (extension target for WatchOS).&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Add the &lt;code&gt;GRDB.framework&lt;/code&gt; from the targetted platform to the &lt;strong&gt;Embedded Binaries&lt;/strong&gt; section of the &lt;strong&gt;General&lt;/strong&gt;  tab of your application target (extension target for WatchOS).&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;g-emoji class="g-emoji" alias="bulb" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f4a1.png"&gt;💡&lt;/g-emoji&gt; &lt;strong&gt;Tip&lt;/strong&gt;: see the &lt;a href="Documentation/DemoApps/GRDBDemoiOS/README.md"&gt;Demo Application&lt;/a&gt; for an example of such integration.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h1&gt;&lt;a id="user-content-demo-application" class="anchor" aria-hidden="true" href="#demo-application"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Demo Application&lt;/h1&gt;
&lt;p&gt;The repository comes with a &lt;a href="Documentation/DemoApps/GRDBDemoiOS/README.md"&gt;Demo Application&lt;/a&gt; that shows you:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;how to setup a database in an iOS app&lt;/li&gt;
&lt;li&gt;how to define a simple &lt;a href="#codable-records"&gt;Codable Record&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;how to track database changes with &lt;a href="#valueobservation"&gt;ValueObservation&lt;/a&gt;.&lt;/li&gt;
&lt;/ul&gt;
&lt;h1&gt;&lt;a id="user-content-database-connections" class="anchor" aria-hidden="true" href="#database-connections"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Database Connections&lt;/h1&gt;
&lt;p&gt;GRDB provides two classes for accessing SQLite databases: &lt;code&gt;DatabaseQueue&lt;/code&gt; and &lt;code&gt;DatabasePool&lt;/code&gt;:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;import&lt;/span&gt; &lt;span class="pl-en"&gt;GRDB&lt;/span&gt;

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Pick one:&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;&lt;span class="pl-k"&gt;let&lt;/span&gt; dbQueue &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-k"&gt;try&lt;/span&gt; &lt;span class="pl-c1"&gt;DatabaseQueue&lt;/span&gt;(&lt;span class="pl-c1"&gt;path&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;/path/to/database.sqlite&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
&lt;span class="pl-k"&gt;let&lt;/span&gt; dbPool &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-k"&gt;try&lt;/span&gt; &lt;span class="pl-c1"&gt;DatabasePool&lt;/span&gt;(&lt;span class="pl-c1"&gt;path&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;/path/to/database.sqlite&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;The differences are:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Database pools allow concurrent database accesses (this can improve the performance of multithreaded applications).&lt;/li&gt;
&lt;li&gt;Database pools open your SQLite database in the &lt;a href="https://www.sqlite.org/wal.html" rel="nofollow"&gt;WAL mode&lt;/a&gt; (unless read-only).&lt;/li&gt;
&lt;li&gt;Database queues support &lt;a href="https://www.sqlite.org/inmemorydb.html" rel="nofollow"&gt;in-memory databases&lt;/a&gt;.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;If you are not sure, choose DatabaseQueue.&lt;/strong&gt; You will always be able to switch to DatabasePool later.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="#database-queues"&gt;Database Queues&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#database-pools"&gt;Database Pools&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-database-queues" class="anchor" aria-hidden="true" href="#database-queues"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Database Queues&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;Open a database queue&lt;/strong&gt; with the path to a database file:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;import&lt;/span&gt; &lt;span class="pl-en"&gt;GRDB&lt;/span&gt;

&lt;span class="pl-k"&gt;let&lt;/span&gt; dbQueue &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-k"&gt;try&lt;/span&gt; &lt;span class="pl-c1"&gt;DatabaseQueue&lt;/span&gt;(&lt;span class="pl-c1"&gt;path&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;/path/to/database.sqlite&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
&lt;span class="pl-k"&gt;let&lt;/span&gt; inMemoryDBQueue &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;DatabaseQueue&lt;/span&gt;()&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;SQLite creates the database file if it does not already exist. The connection is closed when the database queue gets deallocated.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;A database queue can be used from any thread.&lt;/strong&gt; The &lt;code&gt;write&lt;/code&gt; and &lt;code&gt;read&lt;/code&gt; methods are synchronous, and block the current thread until your database statements are executed in a protected dispatch queue:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Modify the database:&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;&lt;span class="pl-k"&gt;try&lt;/span&gt; dbQueue.&lt;span class="pl-smi"&gt;write&lt;/span&gt; { db &lt;span class="pl-k"&gt;in&lt;/span&gt;
    &lt;span class="pl-k"&gt;try&lt;/span&gt; db.&lt;span class="pl-c1"&gt;create&lt;/span&gt;(&lt;span class="pl-c1"&gt;table&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;place&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;) { &lt;span class="pl-k"&gt;...&lt;/span&gt; }
    &lt;span class="pl-k"&gt;try&lt;/span&gt; &lt;span class="pl-c1"&gt;Place&lt;/span&gt;(&lt;span class="pl-k"&gt;...&lt;/span&gt;).&lt;span class="pl-c1"&gt;insert&lt;/span&gt;(db)
}

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Read values:&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;&lt;span class="pl-k"&gt;try&lt;/span&gt; dbQueue.&lt;span class="pl-smi"&gt;read&lt;/span&gt; { db &lt;span class="pl-k"&gt;in&lt;/span&gt;
    &lt;span class="pl-k"&gt;let&lt;/span&gt; places &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-k"&gt;try&lt;/span&gt; Place.&lt;span class="pl-c1"&gt;fetchAll&lt;/span&gt;(db)
    &lt;span class="pl-k"&gt;let&lt;/span&gt; placeCount &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-k"&gt;try&lt;/span&gt; Place.&lt;span class="pl-c1"&gt;fetchCount&lt;/span&gt;(db)
}&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Database access methods can return values:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;let&lt;/span&gt; placeCount &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-k"&gt;try&lt;/span&gt; dbQueue.&lt;span class="pl-smi"&gt;read&lt;/span&gt; { db &lt;span class="pl-k"&gt;in&lt;/span&gt;
    &lt;span class="pl-k"&gt;try&lt;/span&gt; Place.&lt;span class="pl-c1"&gt;fetchCount&lt;/span&gt;(db)
}

&lt;span class="pl-k"&gt;let&lt;/span&gt; newPlaceCount &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-k"&gt;try&lt;/span&gt; dbQueue.&lt;span class="pl-smi"&gt;write&lt;/span&gt; { db &lt;span class="pl-k"&gt;-&amp;gt;&lt;/span&gt; &lt;span class="pl-c1"&gt;Int&lt;/span&gt; &lt;span class="pl-k"&gt;in&lt;/span&gt;
    &lt;span class="pl-k"&gt;try&lt;/span&gt; &lt;span class="pl-c1"&gt;Place&lt;/span&gt;(&lt;span class="pl-k"&gt;...&lt;/span&gt;).&lt;span class="pl-c1"&gt;insert&lt;/span&gt;(db)
    &lt;span class="pl-k"&gt;return&lt;/span&gt; &lt;span class="pl-k"&gt;try&lt;/span&gt; Place.&lt;span class="pl-c1"&gt;fetchCount&lt;/span&gt;(db)
}&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;strong&gt;A database queue serializes accesses to the database&lt;/strong&gt;, which means that there is never more than one thread that uses the database.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;When you don't need to modify the database, prefer the &lt;code&gt;read&lt;/code&gt; method. It prevents any modification to the database.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;The &lt;code&gt;write&lt;/code&gt; method wraps your database statements in a transaction that commits if and only if no error occurs. On the first unhandled error, all changes are reverted, the whole transaction is rollbacked, and the error is rethrown.&lt;/p&gt;
&lt;p&gt;When precise transaction handling is required, see &lt;a href="#transactions-and-savepoints"&gt;Transactions and Savepoints&lt;/a&gt;.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;A database queue needs your application to follow rules in order to deliver its safety guarantees.&lt;/strong&gt; Please refer to the &lt;a href="#concurrency"&gt;Concurrency&lt;/a&gt; chapter.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;g-emoji class="g-emoji" alias="bulb" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f4a1.png"&gt;💡&lt;/g-emoji&gt; &lt;strong&gt;Tip&lt;/strong&gt;: see the &lt;a href="Documentation/DemoApps/GRDBDemoiOS/README.md"&gt;Demo Application&lt;/a&gt; for a sample code that sets up a database queue on iOS.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3&gt;&lt;a id="user-content-databasequeue-configuration" class="anchor" aria-hidden="true" href="#databasequeue-configuration"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;DatabaseQueue Configuration&lt;/h3&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;var&lt;/span&gt; config &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;Configuration&lt;/span&gt;()
config.&lt;span class="pl-smi"&gt;readonly&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;true&lt;/span&gt;
config.&lt;span class="pl-smi"&gt;foreignKeysEnabled&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;true&lt;/span&gt; &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Default is already true&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;config.&lt;span class="pl-smi"&gt;trace&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; { &lt;span class="pl-c1"&gt;print&lt;/span&gt;(&lt;span class="pl-c1"&gt;$0&lt;/span&gt;) }     &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Prints all SQL statements&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;config.&lt;span class="pl-smi"&gt;label&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;MyDatabase&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;      &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Useful when your app opens multiple databases&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;
&lt;span class="pl-k"&gt;let&lt;/span&gt; dbQueue &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-k"&gt;try&lt;/span&gt; &lt;span class="pl-c1"&gt;DatabaseQueue&lt;/span&gt;(
    &lt;span class="pl-c1"&gt;path&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;/path/to/database.sqlite&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;,
    &lt;span class="pl-c1"&gt;configuration&lt;/span&gt;: config)&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;See &lt;a href="http://groue.github.io/GRDB.swift/docs/4.5/Structs/Configuration.html" rel="nofollow"&gt;Configuration&lt;/a&gt; for more details.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-database-pools" class="anchor" aria-hidden="true" href="#database-pools"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Database Pools&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;A database pool allows concurrent database accesses.&lt;/strong&gt;&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;import&lt;/span&gt; &lt;span class="pl-en"&gt;GRDB&lt;/span&gt;
&lt;span class="pl-k"&gt;let&lt;/span&gt; dbPool &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-k"&gt;try&lt;/span&gt; &lt;span class="pl-c1"&gt;DatabasePool&lt;/span&gt;(&lt;span class="pl-c1"&gt;path&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;/path/to/database.sqlite&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;SQLite creates the database file if it does not already exist. The connection is closed when the database pool gets deallocated.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;g-emoji class="g-emoji" alias="point_up" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/261d.png"&gt;☝️&lt;/g-emoji&gt; &lt;strong&gt;Note&lt;/strong&gt;: unless read-only, a database pool opens your database in the SQLite "WAL mode". The WAL mode does not fit all situations. Please have a look at &lt;a href="https://www.sqlite.org/wal.html" rel="nofollow"&gt;https://www.sqlite.org/wal.html&lt;/a&gt;.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;strong&gt;A database pool can be used from any thread.&lt;/strong&gt; The &lt;code&gt;write&lt;/code&gt; and &lt;code&gt;read&lt;/code&gt; methods are synchronous, and block the current thread until your database statements are executed in a protected dispatch queue:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Modify the database:&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;&lt;span class="pl-k"&gt;try&lt;/span&gt; dbPool.&lt;span class="pl-smi"&gt;write&lt;/span&gt; { db &lt;span class="pl-k"&gt;in&lt;/span&gt;
    &lt;span class="pl-k"&gt;try&lt;/span&gt; db.&lt;span class="pl-c1"&gt;create&lt;/span&gt;(&lt;span class="pl-c1"&gt;table&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;place&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;) { &lt;span class="pl-k"&gt;...&lt;/span&gt; }
    &lt;span class="pl-k"&gt;try&lt;/span&gt; &lt;span class="pl-c1"&gt;Place&lt;/span&gt;(&lt;span class="pl-k"&gt;...&lt;/span&gt;).&lt;span class="pl-c1"&gt;insert&lt;/span&gt;(db)
}

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Read values:&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;&lt;span class="pl-k"&gt;try&lt;/span&gt; dbPool.&lt;span class="pl-smi"&gt;read&lt;/span&gt; { db &lt;span class="pl-k"&gt;in&lt;/span&gt;
    &lt;span class="pl-k"&gt;let&lt;/span&gt; places &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-k"&gt;try&lt;/span&gt; Place.&lt;span class="pl-c1"&gt;fetchAll&lt;/span&gt;(db)
    &lt;span class="pl-k"&gt;let&lt;/span&gt; placeCount &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-k"&gt;try&lt;/span&gt; Place.&lt;span class="pl-c1"&gt;fetchCount&lt;/span&gt;(db)
}&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Database access methods can return values:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;let&lt;/span&gt; placeCount &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-k"&gt;try&lt;/span&gt; dbPool.&lt;span class="pl-smi"&gt;read&lt;/span&gt; { db &lt;span class="pl-k"&gt;in&lt;/span&gt;
    &lt;span class="pl-k"&gt;try&lt;/span&gt; Place.&lt;span class="pl-c1"&gt;fetchCount&lt;/span&gt;(db)
}

&lt;span class="pl-k"&gt;let&lt;/span&gt; newPlaceCount &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-k"&gt;try&lt;/span&gt; dbPool.&lt;span class="pl-smi"&gt;write&lt;/span&gt; { db &lt;span class="pl-k"&gt;-&amp;gt;&lt;/span&gt; &lt;span class="pl-c1"&gt;Int&lt;/span&gt; &lt;span class="pl-k"&gt;in&lt;/span&gt;
    &lt;span class="pl-k"&gt;try&lt;/span&gt; &lt;span class="pl-c1"&gt;Place&lt;/span&gt;(&lt;span class="pl-k"&gt;...&lt;/span&gt;).&lt;span class="pl-c1"&gt;insert&lt;/span&gt;(db)
    &lt;span class="pl-k"&gt;return&lt;/span&gt; &lt;span class="pl-k"&gt;try&lt;/span&gt; Place.&lt;span class="pl-c1"&gt;fetchCount&lt;/span&gt;(db)
}&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;strong&gt;Database pools allow several threads to access the database at the same time:&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;When you don't need to modify the database, prefer the &lt;code&gt;read&lt;/code&gt; method, because several threads can perform reads in parallel.&lt;/p&gt;
&lt;p&gt;Reads are generally non-blocking, unless the maximum number of concurrent reads has been reached. In this case, a read has to wait for another read to complete. That maximum number can be &lt;a href="#databasepool-configuration"&gt;configured&lt;/a&gt;.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Reads are guaranteed an immutable view of the last committed state of the database, regardless of concurrent writes. This kind of isolation is called &lt;a href="https://sqlite.org/isolation.html" rel="nofollow"&gt;snapshot isolation&lt;/a&gt;.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Unlike reads, writes are serialized. There is never more than a single thread that is writing into the database.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;The &lt;code&gt;write&lt;/code&gt; method wraps your database statements in a transaction that commits if and only if no error occurs. On the first unhandled error, all changes are reverted, the whole transaction is rollbacked, and the error is rethrown.&lt;/p&gt;
&lt;p&gt;When precise transaction handling is required, see &lt;a href="#transactions-and-savepoints"&gt;Transactions and Savepoints&lt;/a&gt;.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Database pools can take &lt;a href="#database-snapshots"&gt;snapshots&lt;/a&gt; of the database.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;A database pool needs your application to follow rules in order to deliver its safety guarantees.&lt;/strong&gt; See the &lt;a href="#concurrency"&gt;Concurrency&lt;/a&gt; chapter for more details about database pools, how they differ from database queues, and advanced use cases.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;g-emoji class="g-emoji" alias="bulb" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f4a1.png"&gt;💡&lt;/g-emoji&gt; &lt;strong&gt;Tip&lt;/strong&gt;: see the &lt;a href="Documentation/DemoApps/GRDBDemoiOS/README.md"&gt;Demo Application&lt;/a&gt; for a sample code that sets up a database queue on iOS, and just replace DatabaseQueue with DatabasePool.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3&gt;&lt;a id="user-content-databasepool-configuration" class="anchor" aria-hidden="true" href="#databasepool-configuration"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;DatabasePool Configuration&lt;/h3&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;var&lt;/span&gt; config &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;Configuration&lt;/span&gt;()
config.&lt;span class="pl-smi"&gt;readonly&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;true&lt;/span&gt;
config.&lt;span class="pl-smi"&gt;foreignKeysEnabled&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;true&lt;/span&gt; &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Default is already true&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;config.&lt;span class="pl-smi"&gt;trace&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; { &lt;span class="pl-c1"&gt;print&lt;/span&gt;(&lt;span class="pl-c1"&gt;$0&lt;/span&gt;) }     &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Prints all SQL statements&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;config.&lt;span class="pl-smi"&gt;label&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;MyDatabase&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;      &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Useful when your app opens multiple databases&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;config.&lt;span class="pl-smi"&gt;maximumReaderCount&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;10&lt;/span&gt;   &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; The default is 5&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;
&lt;span class="pl-k"&gt;let&lt;/span&gt; dbPool &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-k"&gt;try&lt;/span&gt; &lt;span class="pl-c1"&gt;DatabasePool&lt;/span&gt;(
    &lt;span class="pl-c1"&gt;path&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;/path/to/database.sqlite&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;,
    &lt;span class="pl-c1"&gt;configuration&lt;/span&gt;: config)&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;See &lt;a href="http://groue.github.io/GRDB.swift/docs/4.5/Structs/Configuration.html" rel="nofollow"&gt;Configuration&lt;/a&gt; for more details.&lt;/p&gt;
&lt;p&gt;Database pools are more memory-hungry than database queues. See &lt;a href="#memory-management"&gt;Memory Management&lt;/a&gt; for more information.&lt;/p&gt;
&lt;h1&gt;&lt;a id="user-content-sqlite-api" class="anchor" aria-hidden="true" href="#sqlite-api"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;SQLite API&lt;/h1&gt;
&lt;p&gt;&lt;strong&gt;In this section of the documentation, we will talk SQL.&lt;/strong&gt; Jump to the &lt;a href="#the-query-interface"&gt;query interface&lt;/a&gt; if SQL is not your cup of tea.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="#executing-updates"&gt;Executing Updates&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#fetch-queries"&gt;Fetch Queries&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="#fetching-methods"&gt;Fetching Methods&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#row-queries"&gt;Row Queries&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#value-queries"&gt;Value Queries&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="#values"&gt;Values&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="#data-and-memory-savings"&gt;Data&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#date-and-datecomponents"&gt;Date and DateComponents&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#nsnumber-and-nsdecimalnumber"&gt;NSNumber and NSDecimalNumber&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#swift-enums"&gt;Swift enums&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#custom-value-types"&gt;Custom Value Types&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="#transactions-and-savepoints"&gt;Transactions and Savepoints&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="Documentation/SQLInterpolation.md"&gt;SQL Interpolation&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Advanced topics:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="#prepared-statements"&gt;Prepared Statements&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#custom-sql-functions-and-aggregates"&gt;Custom SQL Functions and Aggregates&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#database-schema-introspection"&gt;Database Schema Introspection&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#row-adapters"&gt;Row Adapters&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#raw-sqlite-pointers"&gt;Raw SQLite Pointers&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-executing-updates" class="anchor" aria-hidden="true" href="#executing-updates"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Executing Updates&lt;/h2&gt;
&lt;p&gt;Once granted with a &lt;a href="#database-connections"&gt;database connection&lt;/a&gt;, the &lt;code&gt;execute&lt;/code&gt; method executes the SQL statements that do not return any database row, such as &lt;code&gt;CREATE TABLE&lt;/code&gt;, &lt;code&gt;INSERT&lt;/code&gt;, &lt;code&gt;DELETE&lt;/code&gt;, &lt;code&gt;ALTER&lt;/code&gt;, etc.&lt;/p&gt;
&lt;p&gt;For example:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;try&lt;/span&gt; dbQueue.&lt;span class="pl-smi"&gt;write&lt;/span&gt; { db &lt;span class="pl-k"&gt;in&lt;/span&gt;
    &lt;span class="pl-k"&gt;try&lt;/span&gt; db.&lt;span class="pl-c1"&gt;execute&lt;/span&gt;(&lt;span class="pl-c1"&gt;sql&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"""&lt;/span&gt;&lt;/span&gt;
&lt;span class="pl-s"&gt;        CREATE TABLE player (&lt;/span&gt;
&lt;span class="pl-s"&gt;            id INTEGER PRIMARY KEY AUTOINCREMENT,&lt;/span&gt;
&lt;span class="pl-s"&gt;            name TEXT NOT NULL,&lt;/span&gt;
&lt;span class="pl-s"&gt;            score INT)&lt;/span&gt;
&lt;span class="pl-s"&gt;        &lt;span class="pl-pds"&gt;"""&lt;/span&gt;&lt;/span&gt;)
    
    &lt;span class="pl-k"&gt;try&lt;/span&gt; db.&lt;span class="pl-c1"&gt;execute&lt;/span&gt;(
        &lt;span class="pl-c1"&gt;sql&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;INSERT INTO player (name, score) VALUES (?, ?)&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;,
        &lt;span class="pl-c1"&gt;arguments&lt;/span&gt;: [&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;Barbara&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-c1"&gt;1000&lt;/span&gt;])
    
    &lt;span class="pl-k"&gt;try&lt;/span&gt; db.&lt;span class="pl-c1"&gt;execute&lt;/span&gt;(
        &lt;span class="pl-c1"&gt;sql&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;UPDATE player SET score = :score WHERE id = :id&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;,
        &lt;span class="pl-c1"&gt;arguments&lt;/span&gt;: [&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;score&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;&lt;span class="pl-k"&gt;:&lt;/span&gt; &lt;span class="pl-c1"&gt;1000&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;id&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;&lt;span class="pl-k"&gt;:&lt;/span&gt; &lt;span class="pl-c1"&gt;1&lt;/span&gt;])
    }
}&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;The &lt;code&gt;?&lt;/code&gt; and colon-prefixed keys like &lt;code&gt;:score&lt;/code&gt; in the SQL query are the &lt;strong&gt;statements arguments&lt;/strong&gt;. You pass arguments with arrays or dictionaries, as in the example above. See &lt;a href="#values"&gt;Values&lt;/a&gt; for more information on supported arguments types (Bool, Int, String, Date, Swift enums, etc.), and &lt;a href="http://groue.github.io/GRDB.swift/docs/4.5/Structs/StatementArguments.html" rel="nofollow"&gt;StatementArguments&lt;/a&gt; for a detailed documentation of SQLite arguments.&lt;/p&gt;
&lt;p&gt;In Swift 5, you can embed query arguments right into your SQL queries, with the &lt;code&gt;literal&lt;/code&gt; argument label, as in the example below. See &lt;a href="Documentation/SQLInterpolation.md"&gt;SQL Interpolation&lt;/a&gt; for more details.&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Swift 5&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;&lt;span class="pl-k"&gt;try&lt;/span&gt; dbQueue.&lt;span class="pl-smi"&gt;write&lt;/span&gt; { db &lt;span class="pl-k"&gt;in&lt;/span&gt;
    &lt;span class="pl-k"&gt;try&lt;/span&gt; db.&lt;span class="pl-c1"&gt;execute&lt;/span&gt;(&lt;span class="pl-c1"&gt;literal&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"""&lt;/span&gt;&lt;/span&gt;
&lt;span class="pl-s"&gt;        INSERT INTO player (name, score)&lt;/span&gt;
&lt;span class="pl-s"&gt;        VALUES (&lt;span class="pl-pse"&gt;\(&lt;/span&gt;&lt;span class="pl-s1"&gt;&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;O'Brien&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="pl-pse"&gt;&lt;span class="pl-s1"&gt;)&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-pse"&gt;\(&lt;/span&gt;&lt;span class="pl-s1"&gt;&lt;span class="pl-c1"&gt;550&lt;/span&gt;&lt;/span&gt;&lt;span class="pl-pse"&gt;&lt;span class="pl-s1"&gt;)&lt;/span&gt;&lt;/span&gt;)&lt;/span&gt;
&lt;span class="pl-s"&gt;        &lt;span class="pl-pds"&gt;"""&lt;/span&gt;&lt;/span&gt;)
}&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;strong&gt;Never ever embed values directly in your raw SQL strings&lt;/strong&gt;. See &lt;a href="#avoiding-sql-injection"&gt;Avoiding SQL Injection&lt;/a&gt; for more information:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; WRONG: don't embed values in raw SQL strings&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;&lt;span class="pl-k"&gt;let&lt;/span&gt; id &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;123&lt;/span&gt;
&lt;span class="pl-k"&gt;let&lt;/span&gt; name &lt;span class="pl-k"&gt;=&lt;/span&gt; textField.&lt;span class="pl-c1"&gt;text&lt;/span&gt;
&lt;span class="pl-k"&gt;try&lt;/span&gt; db.&lt;span class="pl-c1"&gt;execute&lt;/span&gt;(
    &lt;span class="pl-c1"&gt;sql&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;UPDATE player SET name = '&lt;span class="pl-pse"&gt;\(&lt;/span&gt;&lt;span class="pl-s1"&gt;name&lt;/span&gt;&lt;span class="pl-pse"&gt;&lt;span class="pl-s1"&gt;)&lt;/span&gt;&lt;/span&gt;' WHERE id = &lt;span class="pl-pse"&gt;\(&lt;/span&gt;&lt;span class="pl-s1"&gt;id&lt;/span&gt;&lt;span class="pl-pse"&gt;&lt;span class="pl-s1"&gt;)&lt;/span&gt;&lt;/span&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; CORRECT: use SQL Interpolation (Swift 5)&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;&lt;span class="pl-k"&gt;try&lt;/span&gt; db.&lt;span class="pl-c1"&gt;execute&lt;/span&gt;(
    &lt;span class="pl-c1"&gt;literal&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;UPDATE player SET name = &lt;span class="pl-pse"&gt;\(&lt;/span&gt;&lt;span class="pl-s1"&gt;name&lt;/span&gt;&lt;span class="pl-pse"&gt;&lt;span class="pl-s1"&gt;)&lt;/span&gt;&lt;/span&gt; WHERE id = &lt;span class="pl-pse"&gt;\(&lt;/span&gt;&lt;span class="pl-s1"&gt;id&lt;/span&gt;&lt;span class="pl-pse"&gt;&lt;span class="pl-s1"&gt;)&lt;/span&gt;&lt;/span&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; CORRECT: use arguments dictionary&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;&lt;span class="pl-k"&gt;try&lt;/span&gt; db.&lt;span class="pl-c1"&gt;execute&lt;/span&gt;(
    &lt;span class="pl-c1"&gt;sql&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;UPDATE player SET name = :name WHERE id = :id&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;,
    &lt;span class="pl-c1"&gt;arguments&lt;/span&gt;: [&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;name&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;&lt;span class="pl-k"&gt;:&lt;/span&gt; name, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;id&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;&lt;span class="pl-k"&gt;:&lt;/span&gt; id])

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; CORRECT: use arguments array&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;&lt;span class="pl-k"&gt;try&lt;/span&gt; db.&lt;span class="pl-c1"&gt;execute&lt;/span&gt;(
    &lt;span class="pl-c1"&gt;sql&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;UPDATE player SET name = ? WHERE id = ?&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;,
    &lt;span class="pl-c1"&gt;arguments&lt;/span&gt;: [name, id])&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;strong&gt;Join multiple statements with a semicolon&lt;/strong&gt;:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;try&lt;/span&gt; db.&lt;span class="pl-c1"&gt;execute&lt;/span&gt;(&lt;span class="pl-c1"&gt;sql&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"""&lt;/span&gt;&lt;/span&gt;
&lt;span class="pl-s"&gt;    INSERT INTO player (name, score) VALUES (?, ?);&lt;/span&gt;
&lt;span class="pl-s"&gt;    INSERT INTO player (name, score) VALUES (?, ?);&lt;/span&gt;
&lt;span class="pl-s"&gt;    &lt;span class="pl-pds"&gt;"""&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-c1"&gt;arguments&lt;/span&gt;: [&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;Arthur&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-c1"&gt;750&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;Barbara&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-c1"&gt;1000&lt;/span&gt;])

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Swift 5&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;&lt;span class="pl-k"&gt;try&lt;/span&gt; db.&lt;span class="pl-c1"&gt;execute&lt;/span&gt;(&lt;span class="pl-c1"&gt;literal&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"""&lt;/span&gt;&lt;/span&gt;
&lt;span class="pl-s"&gt;    INSERT INTO player (name, score) VALUES (&lt;span class="pl-pse"&gt;\(&lt;/span&gt;&lt;span class="pl-s1"&gt;&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;Arthur&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="pl-pse"&gt;&lt;span class="pl-s1"&gt;)&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-pse"&gt;\(&lt;/span&gt;&lt;span class="pl-s1"&gt;&lt;span class="pl-c1"&gt;750&lt;/span&gt;&lt;/span&gt;&lt;span class="pl-pse"&gt;&lt;span class="pl-s1"&gt;)&lt;/span&gt;&lt;/span&gt;);&lt;/span&gt;
&lt;span class="pl-s"&gt;    INSERT INTO player (name, score) VALUES (&lt;span class="pl-pse"&gt;\(&lt;/span&gt;&lt;span class="pl-s1"&gt;&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;Barbara&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="pl-pse"&gt;&lt;span class="pl-s1"&gt;)&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-pse"&gt;\(&lt;/span&gt;&lt;span class="pl-s1"&gt;&lt;span class="pl-c1"&gt;1000&lt;/span&gt;&lt;/span&gt;&lt;span class="pl-pse"&gt;&lt;span class="pl-s1"&gt;)&lt;/span&gt;&lt;/span&gt;);&lt;/span&gt;
&lt;span class="pl-s"&gt;    &lt;span class="pl-pds"&gt;"""&lt;/span&gt;&lt;/span&gt;)&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;When you want to make sure that a single statement is executed, use &lt;a href="#prepared-statements"&gt;Prepared Statements&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;After an INSERT statement&lt;/strong&gt;, you can get the row ID of the inserted row:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;try&lt;/span&gt; db.&lt;span class="pl-c1"&gt;execute&lt;/span&gt;(
    &lt;span class="pl-c1"&gt;sql&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;INSERT INTO player (name, score) VALUES (?, ?)&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;,
    &lt;span class="pl-c1"&gt;arguments&lt;/span&gt;: [&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;Arthur&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-c1"&gt;1000&lt;/span&gt;])
&lt;span class="pl-k"&gt;let&lt;/span&gt; playerId &lt;span class="pl-k"&gt;=&lt;/span&gt; db.&lt;span class="pl-smi"&gt;lastInsertedRowID&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Don't miss &lt;a href="#records"&gt;Records&lt;/a&gt;, that provide classic &lt;strong&gt;persistence methods&lt;/strong&gt;:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;var&lt;/span&gt; player &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;Player&lt;/span&gt;(&lt;span class="pl-c1"&gt;name&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;Arthur&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-c1"&gt;score&lt;/span&gt;: &lt;span class="pl-c1"&gt;1000&lt;/span&gt;)
&lt;span class="pl-k"&gt;try&lt;/span&gt; player.&lt;span class="pl-c1"&gt;insert&lt;/span&gt;(db)
&lt;span class="pl-k"&gt;let&lt;/span&gt; playerId &lt;span class="pl-k"&gt;=&lt;/span&gt; player.&lt;span class="pl-smi"&gt;id&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h2&gt;&lt;a id="user-content-fetch-queries" class="anchor" aria-hidden="true" href="#fetch-queries"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Fetch Queries&lt;/h2&gt;
&lt;p&gt;&lt;a href="#database-connections"&gt;Database connections&lt;/a&gt; let you fetch database rows, plain values, and custom models aka "records".&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Rows&lt;/strong&gt; are the raw results of SQL queries:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;try&lt;/span&gt; dbQueue.&lt;span class="pl-smi"&gt;read&lt;/span&gt; { db &lt;span class="pl-k"&gt;in&lt;/span&gt;
    &lt;span class="pl-k"&gt;if&lt;/span&gt; &lt;span class="pl-k"&gt;let&lt;/span&gt; row &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-k"&gt;try&lt;/span&gt; Row.&lt;span class="pl-c1"&gt;fetchOne&lt;/span&gt;(db, &lt;span class="pl-c1"&gt;sql&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;SELECT * FROM wine WHERE id = ?&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-c1"&gt;arguments&lt;/span&gt;: [&lt;span class="pl-c1"&gt;1&lt;/span&gt;]) {
        &lt;span class="pl-k"&gt;let&lt;/span&gt; name&lt;span class="pl-k"&gt;:&lt;/span&gt; &lt;span class="pl-c1"&gt;String&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; row[&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;name&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;]
        &lt;span class="pl-k"&gt;let&lt;/span&gt; color&lt;span class="pl-k"&gt;:&lt;/span&gt; Color &lt;span class="pl-k"&gt;=&lt;/span&gt; row[&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;color&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;]
        &lt;span class="pl-c1"&gt;print&lt;/span&gt;(name, color)
    }
}&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;strong&gt;Values&lt;/strong&gt; are the Bool, Int, String, Date, Swift enums, etc. stored in row columns:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;try&lt;/span&gt; dbQueue.&lt;span class="pl-smi"&gt;read&lt;/span&gt; { db &lt;span class="pl-k"&gt;in&lt;/span&gt;
    &lt;span class="pl-k"&gt;let&lt;/span&gt; urls &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-k"&gt;try&lt;/span&gt; URL.&lt;span class="pl-c1"&gt;fetchCursor&lt;/span&gt;(db, &lt;span class="pl-c1"&gt;sql&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;SELECT url FROM wine&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
    &lt;span class="pl-k"&gt;while&lt;/span&gt; &lt;span class="pl-k"&gt;let&lt;/span&gt; url &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-k"&gt;try&lt;/span&gt; urls.&lt;span class="pl-c1"&gt;next&lt;/span&gt;() {
        &lt;span class="pl-c1"&gt;print&lt;/span&gt;(url)
    }
}&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;strong&gt;Records&lt;/strong&gt; are your application objects that can initialize themselves from rows:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;let&lt;/span&gt; wines &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-k"&gt;try&lt;/span&gt; dbQueue.&lt;span class="pl-smi"&gt;read&lt;/span&gt; { db &lt;span class="pl-k"&gt;in&lt;/span&gt;
    &lt;span class="pl-k"&gt;try&lt;/span&gt; Wine.&lt;span class="pl-c1"&gt;fetchAll&lt;/span&gt;(db, &lt;span class="pl-c1"&gt;sql&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;SELECT * FROM wine&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
}&lt;/pre&gt;&lt;/div&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="#fetching-methods"&gt;Fetching Methods&lt;/a&gt; and &lt;a href="#cursors"&gt;Cursors&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#row-queries"&gt;Row Queries&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#value-queries"&gt;Value Queries&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#records"&gt;Records&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;&lt;a id="user-content-fetching-methods" class="anchor" aria-hidden="true" href="#fetching-methods"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Fetching Methods&lt;/h3&gt;
&lt;p&gt;&lt;strong&gt;Throughout GRDB&lt;/strong&gt;, you can always fetch &lt;em&gt;cursors&lt;/em&gt;, &lt;em&gt;arrays&lt;/em&gt;, or &lt;em&gt;single values&lt;/em&gt; of any fetchable type (database &lt;a href="#row-queries"&gt;row&lt;/a&gt;, simple &lt;a href="#value-queries"&gt;value&lt;/a&gt;, or custom &lt;a href="#records"&gt;record&lt;/a&gt;):&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;try&lt;/span&gt; Row.&lt;span class="pl-c1"&gt;fetchCursor&lt;/span&gt;(&lt;span class="pl-k"&gt;...&lt;/span&gt;) &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; A Cursor of Row&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;&lt;span class="pl-k"&gt;try&lt;/span&gt; Row.&lt;span class="pl-c1"&gt;fetchAll&lt;/span&gt;(&lt;span class="pl-k"&gt;...&lt;/span&gt;)    &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; [Row]&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;&lt;span class="pl-k"&gt;try&lt;/span&gt; Row.&lt;span class="pl-c1"&gt;fetchOne&lt;/span&gt;(&lt;span class="pl-k"&gt;...&lt;/span&gt;)    &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Row?&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;fetchCursor&lt;/code&gt; returns a &lt;strong&gt;&lt;a href="#cursors"&gt;cursor&lt;/a&gt;&lt;/strong&gt; over fetched values:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;let&lt;/span&gt; rows &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-k"&gt;try&lt;/span&gt; Row.&lt;span class="pl-c1"&gt;fetchCursor&lt;/span&gt;(db, &lt;span class="pl-c1"&gt;sql&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;SELECT ...&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;) &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; A Cursor of Row&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;fetchAll&lt;/code&gt; returns an &lt;strong&gt;array&lt;/strong&gt;:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;let&lt;/span&gt; players &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-k"&gt;try&lt;/span&gt; Player.&lt;span class="pl-c1"&gt;fetchAll&lt;/span&gt;(db, &lt;span class="pl-c1"&gt;sql&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;SELECT ...&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;) &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; [Player]&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;fetchOne&lt;/code&gt; returns a &lt;strong&gt;single optional value&lt;/strong&gt;, and consumes a single database row (if any).&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;let&lt;/span&gt; count &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-k"&gt;try&lt;/span&gt; &lt;span class="pl-c1"&gt;Int&lt;/span&gt;.&lt;span class="pl-c1"&gt;fetchOne&lt;/span&gt;(db, &lt;span class="pl-c1"&gt;sql&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;SELECT COUNT(*) ...&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;) &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Int?&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;&lt;a id="user-content-cursors" class="anchor" aria-hidden="true" href="#cursors"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Cursors&lt;/h3&gt;
&lt;p&gt;&lt;strong&gt;Whenever you consume several rows from the database, you can fetch an Array, or a Cursor&lt;/strong&gt;.&lt;/p&gt;
&lt;p&gt;The &lt;code&gt;fetchAll()&lt;/code&gt; method returns a regular Swift array, that you iterate like all other arrays:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;try&lt;/span&gt; dbQueue.&lt;span class="pl-smi"&gt;read&lt;/span&gt; { db &lt;span class="pl-k"&gt;in&lt;/span&gt;
    &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; [Player]&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;    &lt;span class="pl-k"&gt;let&lt;/span&gt; players &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-k"&gt;try&lt;/span&gt; Player.&lt;span class="pl-c1"&gt;fetchAll&lt;/span&gt;(db, &lt;span class="pl-c1"&gt;sql&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;SELECT ...&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
    &lt;span class="pl-k"&gt;for&lt;/span&gt; player &lt;span class="pl-k"&gt;in&lt;/span&gt; players {
        &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; use player&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;    }
}&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Unlike arrays, cursors returned by &lt;code&gt;fetchCursor()&lt;/code&gt; load their results step after step:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;try&lt;/span&gt; dbQueue.&lt;span class="pl-smi"&gt;read&lt;/span&gt; { db &lt;span class="pl-k"&gt;in&lt;/span&gt;
    &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Cursor of Player&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;    &lt;span class="pl-k"&gt;let&lt;/span&gt; players &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-k"&gt;try&lt;/span&gt; Player.&lt;span class="pl-c1"&gt;fetchCursor&lt;/span&gt;(db, &lt;span class="pl-c1"&gt;sql&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;SELECT ...&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
    &lt;span class="pl-k"&gt;while&lt;/span&gt; &lt;span class="pl-k"&gt;let&lt;/span&gt; player &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-k"&gt;try&lt;/span&gt; players.&lt;span class="pl-c1"&gt;next&lt;/span&gt;() {
        &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; use player&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;    }
}&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Both arrays and cursors can iterate over database results. How do you choose one or the other? Look at the differences:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Cursors can not be used on any thread&lt;/strong&gt;: you must consume a cursor on the dispatch queue it was created in. Particularly, don't extract a cursor out of a database access method:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Wrong&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;&lt;span class="pl-k"&gt;let&lt;/span&gt; cursor &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-k"&gt;try&lt;/span&gt; dbQueue.&lt;span class="pl-smi"&gt;read&lt;/span&gt; { db &lt;span class="pl-k"&gt;in&lt;/span&gt;
    &lt;span class="pl-k"&gt;try&lt;/span&gt; Player.&lt;span class="pl-c1"&gt;fetchCursor&lt;/span&gt;(db, &lt;span class="pl-k"&gt;...&lt;/span&gt;)
}
&lt;span class="pl-k"&gt;while&lt;/span&gt; &lt;span class="pl-k"&gt;let&lt;/span&gt; player &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-k"&gt;try&lt;/span&gt; cursor.&lt;span class="pl-c1"&gt;next&lt;/span&gt;() { &lt;span class="pl-k"&gt;...&lt;/span&gt; }&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Conversely, arrays may be consumed on any thread:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; OK&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;&lt;span class="pl-k"&gt;let&lt;/span&gt; array &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-k"&gt;try&lt;/span&gt; dbQueue.&lt;span class="pl-smi"&gt;read&lt;/span&gt; { db &lt;span class="pl-k"&gt;in&lt;/span&gt;
    &lt;span class="pl-k"&gt;try&lt;/span&gt; Player.&lt;span class="pl-c1"&gt;fetchAll&lt;/span&gt;(db, &lt;span class="pl-k"&gt;...&lt;/span&gt;)
}
&lt;span class="pl-k"&gt;for&lt;/span&gt; player &lt;span class="pl-k"&gt;in&lt;/span&gt; array { &lt;span class="pl-k"&gt;...&lt;/span&gt; }&lt;/pre&gt;&lt;/div&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Cursors can be iterated only one time.&lt;/strong&gt; Arrays can be iterated many times.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Cursors iterate database results in a lazy fashion&lt;/strong&gt;, and don't consume much memory. Arrays contain copies of database values, and may take a lot of memory when there are many fetched results.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Cursors are granted with direct access to SQLite,&lt;/strong&gt; unlike arrays that have to take the time to copy database values. If you look after extra performance, you may prefer cursors over arrays.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Cursors adopt the &lt;a href="http://groue.github.io/GRDB.swift/docs/4.5/Protocols/Cursor.html" rel="nofollow"&gt;Cursor&lt;/a&gt; protocol, which looks a lot like standard &lt;a href="https://developer.apple.com/reference/swift/lazysequenceprotocol" rel="nofollow"&gt;lazy sequences&lt;/a&gt; of Swift.&lt;/strong&gt; As such, cursors come with many convenience methods: &lt;code&gt;compactMap&lt;/code&gt;, &lt;code&gt;contains&lt;/code&gt;, &lt;code&gt;dropFirst&lt;/code&gt;, &lt;code&gt;dropLast&lt;/code&gt;, &lt;code&gt;drop(while:)&lt;/code&gt;, &lt;code&gt;enumerated&lt;/code&gt;, &lt;code&gt;filter&lt;/code&gt;, &lt;code&gt;first&lt;/code&gt;, &lt;code&gt;flatMap&lt;/code&gt;, &lt;code&gt;forEach&lt;/code&gt;, &lt;code&gt;joined&lt;/code&gt;, &lt;code&gt;joined(separator:)&lt;/code&gt;, &lt;code&gt;max&lt;/code&gt;, &lt;code&gt;max(by:)&lt;/code&gt;, &lt;code&gt;min&lt;/code&gt;, &lt;code&gt;min(by:)&lt;/code&gt;, &lt;code&gt;map&lt;/code&gt;, &lt;code&gt;prefix&lt;/code&gt;, &lt;code&gt;prefix(while:)&lt;/code&gt;, &lt;code&gt;reduce&lt;/code&gt;, &lt;code&gt;reduce(into:)&lt;/code&gt;, &lt;code&gt;suffix&lt;/code&gt;:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Prints all Github links&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;&lt;span class="pl-k"&gt;try&lt;/span&gt; URL
    .&lt;span class="pl-c1"&gt;fetchCursor&lt;/span&gt;(db, &lt;span class="pl-c1"&gt;sql&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;SELECT url FROM link&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
    .&lt;span class="pl-c1"&gt;filter&lt;/span&gt; { url &lt;span class="pl-k"&gt;in&lt;/span&gt; url.&lt;span class="pl-smi"&gt;host&lt;/span&gt; &lt;span class="pl-k"&gt;==&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;github.com&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; }
    .&lt;span class="pl-c1"&gt;forEach&lt;/span&gt; { url &lt;span class="pl-k"&gt;in&lt;/span&gt; &lt;span class="pl-c1"&gt;print&lt;/span&gt;(url) }

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; An efficient cursor of coordinates:&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;&lt;span class="pl-k"&gt;let&lt;/span&gt; locations &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-k"&gt;try&lt;/span&gt; Row.
    .&lt;span class="pl-c1"&gt;fetchCursor&lt;/span&gt;(db, &lt;span class="pl-c1"&gt;sql&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;SELECT latitude, longitude FROM place&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
    .&lt;span class="pl-c1"&gt;map&lt;/span&gt; { row &lt;span class="pl-k"&gt;in&lt;/span&gt;
        &lt;span class="pl-c1"&gt;CLLocationCoordinate2D&lt;/span&gt;(&lt;span class="pl-c1"&gt;latitude&lt;/span&gt;: row[&lt;span class="pl-c1"&gt;0&lt;/span&gt;], &lt;span class="pl-c1"&gt;longitude&lt;/span&gt;: row[&lt;span class="pl-c1"&gt;1&lt;/span&gt;])
    }

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Turn cursors into arrays or sets:&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;&lt;span class="pl-k"&gt;let&lt;/span&gt; array &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-k"&gt;try&lt;/span&gt; &lt;span class="pl-c1"&gt;Array&lt;/span&gt;(cursor)
&lt;span class="pl-k"&gt;let&lt;/span&gt; &lt;span class="pl-k"&gt;set&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-k"&gt;try&lt;/span&gt; &lt;span class="pl-c1"&gt;Set&lt;/span&gt;(cursor)&lt;/pre&gt;&lt;/div&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Cursors are not Swift sequences.&lt;/strong&gt; That's because Swift sequences can't handle iteration errors, when reading SQLite results may fail at any time. SQL functions may throw errors. On iOS, &lt;a href="#data-protection"&gt;data protection&lt;/a&gt; may block access to the database file in the background. On macOS, your application users may mess with the file system.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Cursors require a little care&lt;/strong&gt;:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Don't modify the results during a cursor iteration:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Undefined behavior&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;&lt;span class="pl-k"&gt;while&lt;/span&gt; &lt;span class="pl-k"&gt;let&lt;/span&gt; player &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-k"&gt;try&lt;/span&gt; players.&lt;span class="pl-c1"&gt;next&lt;/span&gt;() {
    &lt;span class="pl-k"&gt;try&lt;/span&gt; db.&lt;span class="pl-c1"&gt;execute&lt;/span&gt;(&lt;span class="pl-c1"&gt;sql&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;DELETE ...&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
}&lt;/pre&gt;&lt;/div&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Don't turn a cursor of &lt;code&gt;Row&lt;/code&gt; into an array. You would not get the distinct rows you expect. To get a array of rows, use &lt;code&gt;Row.fetchAll(...)&lt;/code&gt;. Generally speaking, make sure you copy a row whenever you extract it from a cursor for later use: &lt;code&gt;row.copy()&lt;/code&gt;.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;If you don't see, or don't care about the difference, use arrays. If you care about memory and performance, use cursors when appropriate.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-row-queries" class="anchor" aria-hidden="true" href="#row-queries"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Row Queries&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="#fetching-rows"&gt;Fetching Rows&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#column-values"&gt;Column Values&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#databasevalue"&gt;DatabaseValue&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#rows-as-dictionaries"&gt;Rows as Dictionaries&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h4&gt;&lt;a id="user-content-fetching-rows" class="anchor" aria-hidden="true" href="#fetching-rows"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Fetching Rows&lt;/h4&gt;
&lt;p&gt;Fetch &lt;strong&gt;cursors&lt;/strong&gt; of rows, &lt;strong&gt;arrays&lt;/strong&gt;, or &lt;strong&gt;single&lt;/strong&gt; rows (see &lt;a href="#fetching-methods"&gt;fetching methods&lt;/a&gt;):&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;try&lt;/span&gt; dbQueue.&lt;span class="pl-smi"&gt;read&lt;/span&gt; { db &lt;span class="pl-k"&gt;in&lt;/span&gt;
    &lt;span class="pl-k"&gt;try&lt;/span&gt; Row.&lt;span class="pl-c1"&gt;fetchCursor&lt;/span&gt;(db, &lt;span class="pl-c1"&gt;sql&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;SELECT ...&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-c1"&gt;arguments&lt;/span&gt;: &lt;span class="pl-k"&gt;...&lt;/span&gt;) &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; A Cursor of Row&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;    &lt;span class="pl-k"&gt;try&lt;/span&gt; Row.&lt;span class="pl-c1"&gt;fetchAll&lt;/span&gt;(db, &lt;span class="pl-c1"&gt;sql&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;SELECT ...&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-c1"&gt;arguments&lt;/span&gt;: &lt;span class="pl-k"&gt;...&lt;/span&gt;)    &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; [Row]&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;    &lt;span class="pl-k"&gt;try&lt;/span&gt; Row.&lt;span class="pl-c1"&gt;fetchOne&lt;/span&gt;(db, &lt;span class="pl-c1"&gt;sql&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;SELECT ...&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-c1"&gt;arguments&lt;/span&gt;: &lt;span class="pl-k"&gt;...&lt;/span&gt;)    &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Row?&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;    
    &lt;span class="pl-k"&gt;let&lt;/span&gt; rows &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-k"&gt;try&lt;/span&gt; Row.&lt;span class="pl-c1"&gt;fetchCursor&lt;/span&gt;(db, &lt;span class="pl-c1"&gt;sql&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;SELECT * FROM wine&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
    &lt;span class="pl-k"&gt;while&lt;/span&gt; &lt;span class="pl-k"&gt;let&lt;/span&gt; row &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-k"&gt;try&lt;/span&gt; rows.&lt;span class="pl-c1"&gt;next&lt;/span&gt;() {
        &lt;span class="pl-k"&gt;let&lt;/span&gt; name&lt;span class="pl-k"&gt;:&lt;/span&gt; &lt;span class="pl-c1"&gt;String&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; row[&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;name&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;]
        &lt;span class="pl-k"&gt;let&lt;/span&gt; color&lt;span class="pl-k"&gt;:&lt;/span&gt; Color &lt;span class="pl-k"&gt;=&lt;/span&gt; row[&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;color&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;]
        &lt;span class="pl-c1"&gt;print&lt;/span&gt;(name, color)
    }
}

&lt;span class="pl-k"&gt;let&lt;/span&gt; rows &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-k"&gt;try&lt;/span&gt; dbQueue.&lt;span class="pl-smi"&gt;read&lt;/span&gt; { db &lt;span class="pl-k"&gt;in&lt;/span&gt;
    &lt;span class="pl-k"&gt;try&lt;/span&gt; Row.&lt;span class="pl-c1"&gt;fetchAll&lt;/span&gt;(db, &lt;span class="pl-c1"&gt;sql&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;SELECT * FROM player&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
}&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Arguments are optional arrays or dictionaries that fill the positional &lt;code&gt;?&lt;/code&gt; and colon-prefixed keys like &lt;code&gt;:name&lt;/code&gt; in the query:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;let&lt;/span&gt; rows &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-k"&gt;try&lt;/span&gt; Row.&lt;span class="pl-c1"&gt;fetchAll&lt;/span&gt;(db,
    &lt;span class="pl-c1"&gt;sql&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;SELECT * FROM player WHERE name = ?&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;,
    &lt;span class="pl-c1"&gt;arguments&lt;/span&gt;: [&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;Arthur&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;])

&lt;span class="pl-k"&gt;let&lt;/span&gt; rows &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-k"&gt;try&lt;/span&gt; Row.&lt;span class="pl-c1"&gt;fetchAll&lt;/span&gt;(db,
    &lt;span class="pl-c1"&gt;sql&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;SELECT * FROM player WHERE name = :name&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;,
    &lt;span class="pl-c1"&gt;arguments&lt;/span&gt;: [&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;name&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;&lt;span class="pl-k"&gt;:&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;Arthur&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;])&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;See &lt;a href="#values"&gt;Values&lt;/a&gt; for more information on supported arguments types (Bool, Int, String, Date, Swift enums, etc.), and &lt;a href="http://groue.github.io/GRDB.swift/docs/4.5/Structs/StatementArguments.html" rel="nofollow"&gt;StatementArguments&lt;/a&gt; for a detailed documentation of SQLite arguments.&lt;/p&gt;
&lt;p&gt;Unlike row arrays that contain copies of the database rows, row cursors are close to the SQLite metal, and require a little care:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;g-emoji class="g-emoji" alias="point_up" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/261d.png"&gt;☝️&lt;/g-emoji&gt; &lt;strong&gt;Don't turn a cursor of &lt;code&gt;Row&lt;/code&gt; into an array&lt;/strong&gt;. You would not get the distinct rows you expect. To get a array of rows, use &lt;code&gt;Row.fetchAll(...)&lt;/code&gt;. Generally speaking, make sure you copy a row whenever you extract it from a cursor for later use: &lt;code&gt;row.copy()&lt;/code&gt;.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h4&gt;&lt;a id="user-content-column-values" class="anchor" aria-hidden="true" href="#column-values"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Column Values&lt;/h4&gt;
&lt;p&gt;&lt;strong&gt;Read column values&lt;/strong&gt; by index or column name:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;let&lt;/span&gt; name&lt;span class="pl-k"&gt;:&lt;/span&gt; &lt;span class="pl-c1"&gt;String&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; row[&lt;span class="pl-c1"&gt;0&lt;/span&gt;]      &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; 0 is the leftmost column&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;&lt;span class="pl-k"&gt;let&lt;/span&gt; name&lt;span class="pl-k"&gt;:&lt;/span&gt; &lt;span class="pl-c1"&gt;String&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; row[&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;name&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;] &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Leftmost matching column - lookup is case-insensitive&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;&lt;span class="pl-k"&gt;let&lt;/span&gt; name&lt;span class="pl-k"&gt;:&lt;/span&gt; &lt;span class="pl-c1"&gt;String&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; row[&lt;span class="pl-c1"&gt;Column&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;name&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)] &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Using query interface's Column&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Make sure to ask for an optional when the value may be NULL:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;let&lt;/span&gt; name&lt;span class="pl-k"&gt;:&lt;/span&gt; &lt;span class="pl-c1"&gt;String&lt;/span&gt;&lt;span class="pl-k"&gt;?&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; row[&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;name&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;]&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;The &lt;code&gt;row[]&lt;/code&gt; subscript returns the type you ask for. See &lt;a href="#values"&gt;Values&lt;/a&gt; for more information on supported value types:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;let&lt;/span&gt; bookCount&lt;span class="pl-k"&gt;:&lt;/span&gt; &lt;span class="pl-c1"&gt;Int&lt;/span&gt;     &lt;span class="pl-k"&gt;=&lt;/span&gt; row[&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;bookCount&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;]
&lt;span class="pl-k"&gt;let&lt;/span&gt; bookCount64&lt;span class="pl-k"&gt;:&lt;/span&gt; &lt;span class="pl-c1"&gt;Int64&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; row[&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;bookCount&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;]
&lt;span class="pl-k"&gt;let&lt;/span&gt; hasBooks&lt;span class="pl-k"&gt;:&lt;/span&gt; &lt;span class="pl-c1"&gt;Bool&lt;/span&gt;     &lt;span class="pl-k"&gt;=&lt;/span&gt; row[&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;bookCount&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;] &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; false when 0&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;
&lt;span class="pl-k"&gt;let&lt;/span&gt; string&lt;span class="pl-k"&gt;:&lt;/span&gt; &lt;span class="pl-c1"&gt;String&lt;/span&gt;     &lt;span class="pl-k"&gt;=&lt;/span&gt; row[&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;date&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;]      &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; "2015-09-11 18:14:15.123"&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;&lt;span class="pl-k"&gt;let&lt;/span&gt; date&lt;span class="pl-k"&gt;:&lt;/span&gt; Date         &lt;span class="pl-k"&gt;=&lt;/span&gt; row[&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;date&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;]      &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Date&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;&lt;span class="pl-c1"&gt;self&lt;/span&gt;.&lt;span class="pl-smi"&gt;date&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; row[&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;date&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;] &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Depends on the type of the property.&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;You can also use the &lt;code&gt;as&lt;/code&gt; type casting operator:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;row[&lt;span class="pl-k"&gt;...&lt;/span&gt;] &lt;span class="pl-k"&gt;as&lt;/span&gt; &lt;span class="pl-c1"&gt;Int&lt;/span&gt;
row[&lt;span class="pl-k"&gt;...&lt;/span&gt;] &lt;span class="pl-k"&gt;as&lt;/span&gt; &lt;span class="pl-c1"&gt;Int&lt;/span&gt;&lt;span class="pl-k"&gt;?&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;g-emoji class="g-emoji" alias="warning" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/26a0.png"&gt;⚠️&lt;/g-emoji&gt; &lt;strong&gt;Warning&lt;/strong&gt;: avoid the &lt;code&gt;as!&lt;/code&gt; and &lt;code&gt;as?&lt;/code&gt; operators:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;if&lt;/span&gt; &lt;span class="pl-k"&gt;let&lt;/span&gt; int &lt;span class="pl-k"&gt;=&lt;/span&gt; row[&lt;span class="pl-k"&gt;...&lt;/span&gt;] &lt;span class="pl-k"&gt;as?&lt;/span&gt; &lt;span class="pl-c1"&gt;Int&lt;/span&gt; { &lt;span class="pl-k"&gt;...&lt;/span&gt; } &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; BAD - doesn't work&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;&lt;span class="pl-k"&gt;if&lt;/span&gt; &lt;span class="pl-k"&gt;let&lt;/span&gt; int &lt;span class="pl-k"&gt;=&lt;/span&gt; row[&lt;span class="pl-k"&gt;...&lt;/span&gt;] &lt;span class="pl-k"&gt;as&lt;/span&gt; &lt;span class="pl-c1"&gt;Int&lt;/span&gt;&lt;span class="pl-k"&gt;?&lt;/span&gt; { &lt;span class="pl-k"&gt;...&lt;/span&gt; } &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; GOOD&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;/blockquote&gt;
&lt;p&gt;Generally speaking, you can extract the type you need, provided it can be converted from the underlying SQLite value:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Successful conversions include:&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;All numeric SQLite values to all numeric Swift types, and Bool (zero is the only false boolean).&lt;/li&gt;
&lt;li&gt;Text SQLite values to Swift String.&lt;/li&gt;
&lt;li&gt;Blob SQLite values to Foundation Data.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;See &lt;a href="#values"&gt;Values&lt;/a&gt; for more information on supported types (Bool, Int, String, Date, Swift enums, etc.)&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;NULL returns nil.&lt;/strong&gt;&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;let&lt;/span&gt; row &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-k"&gt;try&lt;/span&gt; Row.&lt;span class="pl-c1"&gt;fetchOne&lt;/span&gt;(db, &lt;span class="pl-c1"&gt;sql&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;SELECT NULL&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)&lt;span class="pl-k"&gt;!&lt;/span&gt;
row[&lt;span class="pl-c1"&gt;0&lt;/span&gt;] &lt;span class="pl-k"&gt;as&lt;/span&gt; &lt;span class="pl-c1"&gt;Int&lt;/span&gt;&lt;span class="pl-k"&gt;?&lt;/span&gt; &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; nil&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;row[&lt;span class="pl-c1"&gt;0&lt;/span&gt;] &lt;span class="pl-k"&gt;as&lt;/span&gt; &lt;span class="pl-c1"&gt;Int&lt;/span&gt;  &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; fatal error: could not convert NULL to Int.&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;There is one exception, though: the &lt;a href="#databasevalue"&gt;DatabaseValue&lt;/a&gt; type:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;row[&lt;span class="pl-c1"&gt;0&lt;/span&gt;] &lt;span class="pl-k"&gt;as&lt;/span&gt; DatabaseValue &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; DatabaseValue.null&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Missing columns return nil.&lt;/strong&gt;&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;let&lt;/span&gt; row &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-k"&gt;try&lt;/span&gt; Row.&lt;span class="pl-c1"&gt;fetchOne&lt;/span&gt;(db, &lt;span class="pl-c1"&gt;sql&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;SELECT 'foo' AS foo&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)&lt;span class="pl-k"&gt;!&lt;/span&gt;
row[&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;missing&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;] &lt;span class="pl-k"&gt;as&lt;/span&gt; &lt;span class="pl-c1"&gt;String&lt;/span&gt;&lt;span class="pl-k"&gt;?&lt;/span&gt; &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; nil&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;row[&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;missing&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;] &lt;span class="pl-k"&gt;as&lt;/span&gt; &lt;span class="pl-c1"&gt;String&lt;/span&gt;  &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; fatal error: no such column: missing&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;You can explicitly check for a column presence with the &lt;code&gt;hasColumn&lt;/code&gt; method.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Invalid conversions throw a fatal error.&lt;/strong&gt;&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;let&lt;/span&gt; row &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-k"&gt;try&lt;/span&gt; Row.&lt;span class="pl-c1"&gt;fetchOne&lt;/span&gt;(db, &lt;span class="pl-c1"&gt;sql&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;SELECT 'Mom’s birthday'&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)&lt;span class="pl-k"&gt;!&lt;/span&gt;
row[&lt;span class="pl-c1"&gt;0&lt;/span&gt;] &lt;span class="pl-k"&gt;as&lt;/span&gt; &lt;span class="pl-c1"&gt;String&lt;/span&gt; &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; "Mom’s birthday"&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;row[&lt;span class="pl-c1"&gt;0&lt;/span&gt;] &lt;span class="pl-k"&gt;as&lt;/span&gt; Date&lt;span class="pl-k"&gt;?&lt;/span&gt;  &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; fatal error: could not convert "Mom’s birthday" to Date.&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;row[&lt;span class="pl-c1"&gt;0&lt;/span&gt;] &lt;span class="pl-k"&gt;as&lt;/span&gt; Date   &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; fatal error: could not convert "Mom’s birthday" to Date.&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;
&lt;span class="pl-k"&gt;let&lt;/span&gt; row &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-k"&gt;try&lt;/span&gt; Row.&lt;span class="pl-c1"&gt;fetchOne&lt;/span&gt;(db, &lt;span class="pl-c1"&gt;sql&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;SELECT 256&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)&lt;span class="pl-k"&gt;!&lt;/span&gt;
row[&lt;span class="pl-c1"&gt;0&lt;/span&gt;] &lt;span class="pl-k"&gt;as&lt;/span&gt; &lt;span class="pl-c1"&gt;Int&lt;/span&gt;    &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; 256&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;row[&lt;span class="pl-c1"&gt;0&lt;/span&gt;] &lt;span class="pl-k"&gt;as&lt;/span&gt; &lt;span class="pl-c1"&gt;UInt8&lt;/span&gt;&lt;span class="pl-k"&gt;?&lt;/span&gt; &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; fatal error: could not convert 256 to UInt8.&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;row[&lt;span class="pl-c1"&gt;0&lt;/span&gt;] &lt;span class="pl-k"&gt;as&lt;/span&gt; &lt;span class="pl-c1"&gt;UInt8&lt;/span&gt;  &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; fatal error: could not convert 256 to UInt8.&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Those conversion fatal errors can be avoided with the &lt;a href="#databasevalue"&gt;DatabaseValue&lt;/a&gt; type:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;let&lt;/span&gt; row &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-k"&gt;try&lt;/span&gt; Row.&lt;span class="pl-c1"&gt;fetchOne&lt;/span&gt;(db, &lt;span class="pl-c1"&gt;sql&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;SELECT 'Mom’s birthday'&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)&lt;span class="pl-k"&gt;!&lt;/span&gt;
&lt;span class="pl-k"&gt;let&lt;/span&gt; dbValue&lt;span class="pl-k"&gt;:&lt;/span&gt; DatabaseValue &lt;span class="pl-k"&gt;=&lt;/span&gt; row[&lt;span class="pl-c1"&gt;0&lt;/span&gt;]
&lt;span class="pl-k"&gt;if&lt;/span&gt; dbValue.&lt;span class="pl-smi"&gt;isNull&lt;/span&gt; {
    &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Handle NULL&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;} &lt;span class="pl-k"&gt;else&lt;/span&gt; &lt;span class="pl-k"&gt;if&lt;/span&gt; &lt;span class="pl-k"&gt;let&lt;/span&gt; date &lt;span class="pl-k"&gt;=&lt;/span&gt; Date.&lt;span class="pl-c1"&gt;fromDatabaseValue&lt;/span&gt;(dbValue) {
    &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Handle valid date&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;} &lt;span class="pl-k"&gt;else&lt;/span&gt; {
    &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Handle invalid date&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;}&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;This extra verbosity is the consequence of having to deal with an untrusted database: you may consider fixing the content of your database instead. See &lt;a href="#fatal-errors"&gt;Fatal Errors&lt;/a&gt; for more information.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;SQLite has a weak type system, and provides &lt;a href="https://www.sqlite.org/c3ref/column_blob.html" rel="nofollow"&gt;convenience conversions&lt;/a&gt; that can turn String to Int, Double to Blob, etc.&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;GRDB will sometimes let those conversions go through:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;let&lt;/span&gt; rows &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-k"&gt;try&lt;/span&gt; Row.&lt;span class="pl-c1"&gt;fetchCursor&lt;/span&gt;(db, &lt;span class="pl-c1"&gt;sql&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;SELECT '20 small cigars'&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
&lt;span class="pl-k"&gt;while&lt;/span&gt; &lt;span class="pl-k"&gt;let&lt;/span&gt; row &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-k"&gt;try&lt;/span&gt; rows.&lt;span class="pl-c1"&gt;next&lt;/span&gt;() {
    row[&lt;span class="pl-c1"&gt;0&lt;/span&gt;] &lt;span class="pl-k"&gt;as&lt;/span&gt; &lt;span class="pl-c1"&gt;Int&lt;/span&gt;   &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; 20&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;}&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Don't freak out: those conversions did not prevent SQLite from becoming the immensely successful database engine you want to use. And GRDB adds safety checks described just above. You can also prevent those convenience conversions altogether by using the &lt;a href="#databasevalue"&gt;DatabaseValue&lt;/a&gt; type.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h4&gt;&lt;a id="user-content-databasevalue" class="anchor" aria-hidden="true" href="#databasevalue"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;DatabaseValue&lt;/h4&gt;
&lt;p&gt;&lt;strong&gt;DatabaseValue is an intermediate type between SQLite and your values, which gives information about the raw value stored in the database.&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;You get DatabaseValue just like other value types:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;let&lt;/span&gt; dbValue&lt;span class="pl-k"&gt;:&lt;/span&gt; DatabaseValue &lt;span class="pl-k"&gt;=&lt;/span&gt; row[&lt;span class="pl-c1"&gt;0&lt;/span&gt;]
&lt;span class="pl-k"&gt;let&lt;/span&gt; dbValue&lt;span class="pl-k"&gt;:&lt;/span&gt; DatabaseValue&lt;span class="pl-k"&gt;?&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; row[&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;name&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;] &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; nil if and only if column does not exist&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Check for NULL:&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;dbValue.&lt;span class="pl-smi"&gt;isNull&lt;/span&gt; &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Bool&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; The stored value:&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;dbValue.&lt;span class="pl-smi"&gt;storage&lt;/span&gt;.&lt;span class="pl-c1"&gt;value&lt;/span&gt; &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Int64, Double, String, Data, or nil&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; All the five storage classes supported by SQLite:&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;&lt;span class="pl-k"&gt;switch&lt;/span&gt; dbValue.&lt;span class="pl-smi"&gt;storage&lt;/span&gt; {
&lt;span class="pl-k"&gt;case&lt;/span&gt; .&lt;span class="pl-smi"&gt;null&lt;/span&gt;&lt;span class="pl-k"&gt;:&lt;/span&gt;                 &lt;span class="pl-c1"&gt;print&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;NULL&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
&lt;span class="pl-k"&gt;case&lt;/span&gt; .&lt;span class="pl-c1"&gt;int64&lt;/span&gt;(&lt;span class="pl-k"&gt;let&lt;/span&gt; int64)&lt;span class="pl-k"&gt;:&lt;/span&gt;     &lt;span class="pl-c1"&gt;print&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;Int64: &lt;span class="pl-pse"&gt;\(&lt;/span&gt;&lt;span class="pl-s1"&gt;int64&lt;/span&gt;&lt;span class="pl-pse"&gt;&lt;span class="pl-s1"&gt;)&lt;/span&gt;&lt;/span&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
&lt;span class="pl-k"&gt;case&lt;/span&gt; .&lt;span class="pl-c1"&gt;double&lt;/span&gt;(&lt;span class="pl-k"&gt;let&lt;/span&gt; double)&lt;span class="pl-k"&gt;:&lt;/span&gt;   &lt;span class="pl-c1"&gt;print&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;Double: &lt;span class="pl-pse"&gt;\(&lt;/span&gt;&lt;span class="pl-s1"&gt;double&lt;/span&gt;&lt;span class="pl-pse"&gt;&lt;span class="pl-s1"&gt;)&lt;/span&gt;&lt;/span&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
&lt;span class="pl-k"&gt;case&lt;/span&gt; .&lt;span class="pl-c1"&gt;string&lt;/span&gt;(&lt;span class="pl-k"&gt;let&lt;/span&gt; string)&lt;span class="pl-k"&gt;:&lt;/span&gt;   &lt;span class="pl-c1"&gt;print&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;String: &lt;span class="pl-pse"&gt;\(&lt;/span&gt;&lt;span class="pl-s1"&gt;string&lt;/span&gt;&lt;span class="pl-pse"&gt;&lt;span class="pl-s1"&gt;)&lt;/span&gt;&lt;/span&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
&lt;span class="pl-k"&gt;case&lt;/span&gt; .&lt;span class="pl-c1"&gt;blob&lt;/span&gt;(&lt;span class="pl-k"&gt;let&lt;/span&gt; data)&lt;span class="pl-k"&gt;:&lt;/span&gt;       &lt;span class="pl-c1"&gt;print&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;Data: &lt;span class="pl-pse"&gt;\(&lt;/span&gt;&lt;span class="pl-s1"&gt;data&lt;/span&gt;&lt;span class="pl-pse"&gt;&lt;span class="pl-s1"&gt;)&lt;/span&gt;&lt;/span&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
}&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;You can extract regular &lt;a href="#values"&gt;values&lt;/a&gt; (Bool, Int, String, Date, Swift enums, etc.) from DatabaseValue with the &lt;a href="#custom-value-types"&gt;DatabaseValueConvertible.fromDatabaseValue()&lt;/a&gt; method:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;let&lt;/span&gt; dbValue&lt;span class="pl-k"&gt;:&lt;/span&gt; DatabaseValue &lt;span class="pl-k"&gt;=&lt;/span&gt; row[&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;bookCount&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;]
&lt;span class="pl-k"&gt;let&lt;/span&gt; bookCount   &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;Int&lt;/span&gt;.&lt;span class="pl-c1"&gt;fromDatabaseValue&lt;/span&gt;(dbValue)   &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Int?&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;&lt;span class="pl-k"&gt;let&lt;/span&gt; bookCount64 &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;Int64&lt;/span&gt;.&lt;span class="pl-c1"&gt;fromDatabaseValue&lt;/span&gt;(dbValue) &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Int64?&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;&lt;span class="pl-k"&gt;let&lt;/span&gt; hasBooks    &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;Bool&lt;/span&gt;.&lt;span class="pl-c1"&gt;fromDatabaseValue&lt;/span&gt;(dbValue)  &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Bool?, false when 0&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;
&lt;span class="pl-k"&gt;let&lt;/span&gt; dbValue&lt;span class="pl-k"&gt;:&lt;/span&gt; DatabaseValue &lt;span class="pl-k"&gt;=&lt;/span&gt; row[&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;date&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;]
&lt;span class="pl-k"&gt;let&lt;/span&gt; string &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;String&lt;/span&gt;.&lt;span class="pl-c1"&gt;fromDatabaseValue&lt;/span&gt;(dbValue)     &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; "2015-09-11 18:14:15.123"&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;&lt;span class="pl-k"&gt;let&lt;/span&gt; date   &lt;span class="pl-k"&gt;=&lt;/span&gt; Date.&lt;span class="pl-c1"&gt;fromDatabaseValue&lt;/span&gt;(dbValue)       &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Date?&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;code&gt;fromDatabaseValue&lt;/code&gt; returns nil for invalid conversions:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;let&lt;/span&gt; row &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-k"&gt;try&lt;/span&gt; Row.&lt;span class="pl-c1"&gt;fetchOne&lt;/span&gt;(db, &lt;span class="pl-c1"&gt;sql&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;SELECT 'Mom’s birthday'&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)&lt;span class="pl-k"&gt;!&lt;/span&gt;
&lt;span class="pl-k"&gt;let&lt;/span&gt; dbValue&lt;span class="pl-k"&gt;:&lt;/span&gt; DatabaseValue &lt;span class="pl-k"&gt;=&lt;/span&gt; row[&lt;span class="pl-c1"&gt;0&lt;/span&gt;]
&lt;span class="pl-k"&gt;let&lt;/span&gt; string &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;String&lt;/span&gt;.&lt;span class="pl-c1"&gt;fromDatabaseValue&lt;/span&gt;(dbValue) &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; "Mom’s birthday"&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;&lt;span class="pl-k"&gt;let&lt;/span&gt; int    &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;Int&lt;/span&gt;.&lt;span class="pl-c1"&gt;fromDatabaseValue&lt;/span&gt;(dbValue)    &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; nil&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;&lt;span class="pl-k"&gt;let&lt;/span&gt; date   &lt;span class="pl-k"&gt;=&lt;/span&gt; Date.&lt;span class="pl-c1"&gt;fromDatabaseValue&lt;/span&gt;(dbValue)   &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; nil&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h4&gt;&lt;a id="user-content-rows-as-dictionaries" class="anchor" aria-hidden="true" href="#rows-as-dictionaries"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Rows as Dictionaries&lt;/h4&gt;
&lt;p&gt;Row adopts the standard &lt;a href="https://developer.apple.com/documentation/swift/randomaccesscollection" rel="nofollow"&gt;RandomAccessCollection&lt;/a&gt; protocol, and can be seen as a dictionary of &lt;a href="#databasevalue"&gt;DatabaseValue&lt;/a&gt;:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; All the (columnName, dbValue) tuples, from left to right:&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;&lt;span class="pl-k"&gt;for&lt;/span&gt; (columnName, dbValue) &lt;span class="pl-k"&gt;in&lt;/span&gt; row {
    &lt;span class="pl-k"&gt;...&lt;/span&gt;
}&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;strong&gt;You can build rows from dictionaries&lt;/strong&gt; (standard Swift dictionaries and NSDictionary). See &lt;a href="#values"&gt;Values&lt;/a&gt; for more information on supported types:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;let&lt;/span&gt; row&lt;span class="pl-k"&gt;:&lt;/span&gt; Row &lt;span class="pl-k"&gt;=&lt;/span&gt; [&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;name&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;&lt;span class="pl-k"&gt;:&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;foo&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;date&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;&lt;span class="pl-k"&gt;:&lt;/span&gt; &lt;span class="pl-c1"&gt;nil&lt;/span&gt;]
&lt;span class="pl-k"&gt;let&lt;/span&gt; row &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;Row&lt;/span&gt;([&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;name&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;&lt;span class="pl-k"&gt;:&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;foo&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;date&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;&lt;span class="pl-k"&gt;:&lt;/span&gt; &lt;span class="pl-c1"&gt;nil&lt;/span&gt;])
&lt;span class="pl-k"&gt;let&lt;/span&gt; row &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;Row&lt;/span&gt;(&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;/*&lt;/span&gt; [AnyHashable: Any] &lt;span class="pl-c"&gt;*/&lt;/span&gt;&lt;/span&gt;) &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; nil if invalid dictionary&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Yet rows are not real dictionaries: they may contain duplicate columns:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;let&lt;/span&gt; row &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-k"&gt;try&lt;/span&gt; Row.&lt;span class="pl-c1"&gt;fetchOne&lt;/span&gt;(db, &lt;span class="pl-c1"&gt;sql&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;SELECT 1 AS foo, 2 AS foo&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)&lt;span class="pl-k"&gt;!&lt;/span&gt;
row.&lt;span class="pl-smi"&gt;columnNames&lt;/span&gt;    &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; ["foo", "foo"]&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;row.&lt;span class="pl-smi"&gt;databaseValues&lt;/span&gt; &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; [1, 2]&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;row[&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;foo&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;]         &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; 1 (leftmost matching column)&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;&lt;span class="pl-k"&gt;for&lt;/span&gt; (columnName, dbValue) &lt;span class="pl-k"&gt;in&lt;/span&gt; row { &lt;span class="pl-k"&gt;...&lt;/span&gt; } &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; ("foo", 1), ("foo", 2)&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;strong&gt;When you build a dictionary from a row&lt;/strong&gt;, you have to disambiguate identical columns, and choose how to present database values. For example:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;A &lt;code&gt;[String: DatabaseValue]&lt;/code&gt; dictionary that keeps leftmost value in case of duplicated column name:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;let&lt;/span&gt; dict &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;Dictionary&lt;/span&gt;(row, &lt;span class="pl-c1"&gt;uniquingKeysWith&lt;/span&gt;: { (left, &lt;span class="pl-c1"&gt;_&lt;/span&gt;) &lt;span class="pl-k"&gt;in&lt;/span&gt; left })&lt;/pre&gt;&lt;/div&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;A &lt;code&gt;[String: AnyObject]&lt;/code&gt; dictionary which keeps rightmost value in case of duplicated column name. This dictionary is identical to FMResultSet's resultDictionary from FMDB. It contains NSNull values for null columns, and can be shared with Objective-C:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;let&lt;/span&gt; dict &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;Dictionary&lt;/span&gt;(
    row.&lt;span class="pl-c1"&gt;map&lt;/span&gt; { (column, dbValue) &lt;span class="pl-k"&gt;in&lt;/span&gt;
        (column, dbValue.&lt;span class="pl-smi"&gt;storage&lt;/span&gt;.&lt;span class="pl-c1"&gt;value&lt;/span&gt; &lt;span class="pl-k"&gt;as&lt;/span&gt; &lt;span class="pl-c1"&gt;AnyObject&lt;/span&gt;)
    },
    &lt;span class="pl-c1"&gt;uniquingKeysWith&lt;/span&gt;: { (&lt;span class="pl-c1"&gt;_&lt;/span&gt;, right) &lt;span class="pl-k"&gt;in&lt;/span&gt; right })&lt;/pre&gt;&lt;/div&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;A &lt;code&gt;[String: Any]&lt;/code&gt; dictionary that can feed, for example, JSONSerialization:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;let&lt;/span&gt; dict &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;Dictionary&lt;/span&gt;(
    row.&lt;span class="pl-c1"&gt;map&lt;/span&gt; { (column, dbValue) &lt;span class="pl-k"&gt;in&lt;/span&gt;
        (column, dbValue.&lt;span class="pl-smi"&gt;storage&lt;/span&gt;.&lt;span class="pl-c1"&gt;value&lt;/span&gt;)
    },
    &lt;span class="pl-c1"&gt;uniquingKeysWith&lt;/span&gt;: { (left, &lt;span class="pl-c1"&gt;_&lt;/span&gt;) &lt;span class="pl-k"&gt;in&lt;/span&gt; left })&lt;/pre&gt;&lt;/div&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;See the documentation of &lt;a href="https://developer.apple.com/documentation/swift/dictionary/2892961-init" rel="nofollow"&gt;&lt;code&gt;Dictionary.init(_:uniquingKeysWith:)&lt;/code&gt;&lt;/a&gt; for more information.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-value-queries" class="anchor" aria-hidden="true" href="#value-queries"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Value Queries&lt;/h3&gt;
&lt;p&gt;Instead of rows, you can directly fetch &lt;strong&gt;&lt;a href="#values"&gt;values&lt;/a&gt;&lt;/strong&gt;. Like rows, fetch them as &lt;strong&gt;cursors&lt;/strong&gt;, &lt;strong&gt;arrays&lt;/strong&gt;, or &lt;strong&gt;single&lt;/strong&gt; values (see &lt;a href="#fetching-methods"&gt;fetching methods&lt;/a&gt;). Values are extracted from the leftmost column of the SQL queries:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;try&lt;/span&gt; dbQueue.&lt;span class="pl-smi"&gt;read&lt;/span&gt; { db &lt;span class="pl-k"&gt;in&lt;/span&gt;
    &lt;span class="pl-k"&gt;try&lt;/span&gt; &lt;span class="pl-c1"&gt;Int&lt;/span&gt;.&lt;span class="pl-c1"&gt;fetchCursor&lt;/span&gt;(db, &lt;span class="pl-c1"&gt;sql&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;SELECT ...&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-c1"&gt;arguments&lt;/span&gt;: &lt;span class="pl-k"&gt;...&lt;/span&gt;) &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; A Cursor of Int&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;    &lt;span class="pl-k"&gt;try&lt;/span&gt; &lt;span class="pl-c1"&gt;Int&lt;/span&gt;.&lt;span class="pl-c1"&gt;fetchAll&lt;/span&gt;(db, &lt;span class="pl-c1"&gt;sql&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;SELECT ...&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-c1"&gt;arguments&lt;/span&gt;: &lt;span class="pl-k"&gt;...&lt;/span&gt;)    &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; [Int]&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;    &lt;span class="pl-k"&gt;try&lt;/span&gt; &lt;span class="pl-c1"&gt;Int&lt;/span&gt;.&lt;span class="pl-c1"&gt;fetchOne&lt;/span&gt;(db, &lt;span class="pl-c1"&gt;sql&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;SELECT ...&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-c1"&gt;arguments&lt;/span&gt;: &lt;span class="pl-k"&gt;...&lt;/span&gt;)    &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Int?&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;    
    &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; When database may contain NULL:&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;    &lt;span class="pl-k"&gt;try&lt;/span&gt; &lt;span class="pl-c1"&gt;Optional&lt;/span&gt;&lt;span class="pl-k"&gt;&amp;lt;&lt;/span&gt;&lt;span class="pl-c1"&gt;Int&lt;/span&gt;&lt;span class="pl-k"&gt;&amp;gt;&lt;/span&gt;.&lt;span class="pl-c1"&gt;fetchCursor&lt;/span&gt;(db, &lt;span class="pl-c1"&gt;sql&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;SELECT ...&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-c1"&gt;arguments&lt;/span&gt;: &lt;span class="pl-k"&gt;...&lt;/span&gt;) &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; A Cursor of Int?&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;    &lt;span class="pl-k"&gt;try&lt;/span&gt; &lt;span class="pl-c1"&gt;Optional&lt;/span&gt;&lt;span class="pl-k"&gt;&amp;lt;&lt;/span&gt;&lt;span class="pl-c1"&gt;Int&lt;/span&gt;&lt;span class="pl-k"&gt;&amp;gt;&lt;/span&gt;.&lt;span class="pl-c1"&gt;fetchAll&lt;/span&gt;(db, &lt;span class="pl-c1"&gt;sql&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;SELECT ...&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-c1"&gt;arguments&lt;/span&gt;: &lt;span class="pl-k"&gt;...&lt;/span&gt;)    &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; [Int?]&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;}

&lt;span class="pl-k"&gt;let&lt;/span&gt; playerCount &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-k"&gt;try&lt;/span&gt; dbQueue.&lt;span class="pl-smi"&gt;read&lt;/span&gt; { db &lt;span class="pl-k"&gt;in&lt;/span&gt;
    &lt;span class="pl-k"&gt;try&lt;/span&gt; &lt;span class="pl-c1"&gt;Int&lt;/span&gt;.&lt;span class="pl-c1"&gt;fetchOne&lt;/span&gt;(db, &lt;span class="pl-c1"&gt;sql&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;SELECT COUNT(*) FROM player&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)&lt;span class="pl-k"&gt;!&lt;/span&gt;
}&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;code&gt;fetchOne&lt;/code&gt; returns an optional value which is nil in two cases: either the SELECT statement yielded no row, or one row with a NULL value.&lt;/p&gt;
&lt;p&gt;There are many supported value types (Bool, Int, String, Date, Swift enums, etc.). See &lt;a href="#values"&gt;Values&lt;/a&gt; for more information:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;let&lt;/span&gt; count &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-k"&gt;try&lt;/span&gt; &lt;span class="pl-c1"&gt;Int&lt;/span&gt;.&lt;span class="pl-c1"&gt;fetchOne&lt;/span&gt;(db, &lt;span class="pl-c1"&gt;sql&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;SELECT COUNT(*) FROM player&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)&lt;span class="pl-k"&gt;!&lt;/span&gt; &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Int&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;&lt;span class="pl-k"&gt;let&lt;/span&gt; urls &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-k"&gt;try&lt;/span&gt; URL.&lt;span class="pl-c1"&gt;fetchAll&lt;/span&gt;(db, &lt;span class="pl-c1"&gt;sql&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;SELECT url FROM link&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)          &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; [URL]&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h2&gt;&lt;a id="user-content-values" class="anchor" aria-hidden="true" href="#values"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Values&lt;/h2&gt;
&lt;p&gt;GRDB ships with built-in support for the following value types:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Swift Standard Library&lt;/strong&gt;: Bool, Double, Float, all signed and unsigned integer types, String, &lt;a href="#swift-enums"&gt;Swift enums&lt;/a&gt;.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Foundation&lt;/strong&gt;: &lt;a href="#data-and-memory-savings"&gt;Data&lt;/a&gt;, &lt;a href="#date-and-datecomponents"&gt;Date&lt;/a&gt;, &lt;a href="#date-and-datecomponents"&gt;DateComponents&lt;/a&gt;, NSNull, &lt;a href="#nsnumber-and-nsdecimalnumber"&gt;NSNumber&lt;/a&gt;, NSString, URL, &lt;a href="#uuid"&gt;UUID&lt;/a&gt;.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;CoreGraphics&lt;/strong&gt;: CGFloat.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;&lt;a href="#databasevalue"&gt;DatabaseValue&lt;/a&gt;&lt;/strong&gt;, the type which gives information about the raw value stored in the database.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Full-Text Patterns&lt;/strong&gt;: &lt;a href="#fts3pattern"&gt;FTS3Pattern&lt;/a&gt; and &lt;a href="#fts5pattern"&gt;FTS5Pattern&lt;/a&gt;.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Generally speaking, all types that adopt the &lt;a href="#custom-value-types"&gt;DatabaseValueConvertible&lt;/a&gt; protocol.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Values can be used as &lt;a href="http://groue.github.io/GRDB.swift/docs/4.5/Structs/StatementArguments.html" rel="nofollow"&gt;statement arguments&lt;/a&gt;:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;let&lt;/span&gt; url&lt;span class="pl-k"&gt;:&lt;/span&gt; URL &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-k"&gt;...&lt;/span&gt;
&lt;span class="pl-k"&gt;let&lt;/span&gt; verified&lt;span class="pl-k"&gt;:&lt;/span&gt; &lt;span class="pl-c1"&gt;Bool&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-k"&gt;...&lt;/span&gt;
&lt;span class="pl-k"&gt;try&lt;/span&gt; db.&lt;span class="pl-c1"&gt;execute&lt;/span&gt;(
    &lt;span class="pl-c1"&gt;sql&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;INSERT INTO link (url, verified) VALUES (?, ?)&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;,
    &lt;span class="pl-c1"&gt;arguments&lt;/span&gt;: [url, verified])&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Values can be &lt;a href="#column-values"&gt;extracted from rows&lt;/a&gt;:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;let&lt;/span&gt; rows &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-k"&gt;try&lt;/span&gt; Row.&lt;span class="pl-c1"&gt;fetchCursor&lt;/span&gt;(db, &lt;span class="pl-c1"&gt;sql&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;SELECT * FROM link&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
&lt;span class="pl-k"&gt;while&lt;/span&gt; &lt;span class="pl-k"&gt;let&lt;/span&gt; row &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-k"&gt;try&lt;/span&gt; rows.&lt;span class="pl-c1"&gt;next&lt;/span&gt;() {
    &lt;span class="pl-k"&gt;let&lt;/span&gt; url&lt;span class="pl-k"&gt;:&lt;/span&gt; URL &lt;span class="pl-k"&gt;=&lt;/span&gt; row[&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;url&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;]
    &lt;span class="pl-k"&gt;let&lt;/span&gt; verified&lt;span class="pl-k"&gt;:&lt;/span&gt; &lt;span class="pl-c1"&gt;Bool&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; row[&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;verified&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;]
}&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Values can be &lt;a href="#value-queries"&gt;directly fetched&lt;/a&gt;:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;let&lt;/span&gt; urls &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-k"&gt;try&lt;/span&gt; URL.&lt;span class="pl-c1"&gt;fetchAll&lt;/span&gt;(db, &lt;span class="pl-c1"&gt;sql&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;SELECT url FROM link&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)  &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; [URL]&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Use values in &lt;a href="#records"&gt;Records&lt;/a&gt;:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;struct&lt;/span&gt; &lt;span class="pl-en"&gt;Link&lt;/span&gt;: &lt;span class="pl-e"&gt;FetchableRecord &lt;/span&gt;{
    &lt;span class="pl-k"&gt;var&lt;/span&gt; url&lt;span class="pl-k"&gt;:&lt;/span&gt; URL
    &lt;span class="pl-k"&gt;var&lt;/span&gt; isVerified&lt;span class="pl-k"&gt;:&lt;/span&gt; &lt;span class="pl-c1"&gt;Bool&lt;/span&gt;
    
    &lt;span class="pl-k"&gt;init&lt;/span&gt;(&lt;span class="pl-smi"&gt;&lt;span class="pl-en"&gt;row&lt;/span&gt;&lt;/span&gt;: Row) {
        url &lt;span class="pl-k"&gt;=&lt;/span&gt; row[&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;url&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;]
        isVerified &lt;span class="pl-k"&gt;=&lt;/span&gt; row[&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;verified&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;]
    }
}&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Use values in the &lt;a href="#the-query-interface"&gt;query interface&lt;/a&gt;:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;let&lt;/span&gt; url&lt;span class="pl-k"&gt;:&lt;/span&gt; URL &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-k"&gt;...&lt;/span&gt;
&lt;span class="pl-k"&gt;let&lt;/span&gt; link &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-k"&gt;try&lt;/span&gt; Link.&lt;span class="pl-c1"&gt;filter&lt;/span&gt;(&lt;span class="pl-c1"&gt;Column&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;url&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;) &lt;span class="pl-k"&gt;==&lt;/span&gt; url).&lt;span class="pl-c1"&gt;fetchOne&lt;/span&gt;(db)&lt;/pre&gt;&lt;/div&gt;
&lt;h3&gt;&lt;a id="user-content-data-and-memory-savings" class="anchor" aria-hidden="true" href="#data-and-memory-savings"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Data (and Memory Savings)&lt;/h3&gt;
&lt;p&gt;&lt;strong&gt;Data&lt;/strong&gt; suits the BLOB SQLite columns. It can be stored and fetched from the database just like other &lt;a href="#values"&gt;values&lt;/a&gt;:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;let&lt;/span&gt; rows &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-k"&gt;try&lt;/span&gt; Row.&lt;span class="pl-c1"&gt;fetchCursor&lt;/span&gt;(db, &lt;span class="pl-c1"&gt;sql&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;SELECT data, ...&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
&lt;span class="pl-k"&gt;while&lt;/span&gt; &lt;span class="pl-k"&gt;let&lt;/span&gt; row &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-k"&gt;try&lt;/span&gt; rows.&lt;span class="pl-c1"&gt;next&lt;/span&gt;() {
    &lt;span class="pl-k"&gt;let&lt;/span&gt; data&lt;span class="pl-k"&gt;:&lt;/span&gt; Data &lt;span class="pl-k"&gt;=&lt;/span&gt; row[&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;data&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;]
}&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;At each step of the request iteration, the &lt;code&gt;row[]&lt;/code&gt; subscript creates &lt;em&gt;two copies&lt;/em&gt; of the database bytes: one fetched by SQLite, and another, stored in the Swift Data value.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;You have the opportunity to save memory&lt;/strong&gt; by not copying the data fetched by SQLite:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;while&lt;/span&gt; &lt;span class="pl-k"&gt;let&lt;/span&gt; row &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-k"&gt;try&lt;/span&gt; rows.&lt;span class="pl-c1"&gt;next&lt;/span&gt;() {
    &lt;span class="pl-k"&gt;let&lt;/span&gt; data &lt;span class="pl-k"&gt;=&lt;/span&gt; row.&lt;span class="pl-c1"&gt;dataNoCopy&lt;/span&gt;(&lt;span class="pl-c1"&gt;named&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;data&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;) &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Data?&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;}&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;The non-copied data does not live longer than the iteration step: make sure that you do not use it past this point.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-date-and-datecomponents" class="anchor" aria-hidden="true" href="#date-and-datecomponents"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Date and DateComponents&lt;/h3&gt;
&lt;p&gt;&lt;a href="#date"&gt;&lt;strong&gt;Date&lt;/strong&gt;&lt;/a&gt; and &lt;a href="#datecomponents"&gt;&lt;strong&gt;DateComponents&lt;/strong&gt;&lt;/a&gt; can be stored and fetched from the database.&lt;/p&gt;
&lt;p&gt;Here is how GRDB supports the various &lt;a href="https://www.sqlite.org/lang_datefunc.html" rel="nofollow"&gt;date formats&lt;/a&gt; supported by SQLite:&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th align="left"&gt;SQLite format&lt;/th&gt;
&lt;th align="center"&gt;Date&lt;/th&gt;
&lt;th align="center"&gt;DateComponents&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td align="left"&gt;YYYY-MM-DD&lt;/td&gt;
&lt;td align="center"&gt;Read ¹&lt;/td&gt;
&lt;td align="center"&gt;Read/Write&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="left"&gt;YYYY-MM-DD HH:MM&lt;/td&gt;
&lt;td align="center"&gt;Read ¹&lt;/td&gt;
&lt;td align="center"&gt;Read/Write&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="left"&gt;YYYY-MM-DD HH:MM:SS&lt;/td&gt;
&lt;td align="center"&gt;Read ¹&lt;/td&gt;
&lt;td align="center"&gt;Read/Write&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="left"&gt;YYYY-MM-DD HH:MM:SS.SSS&lt;/td&gt;
&lt;td align="center"&gt;Read/Write ¹&lt;/td&gt;
&lt;td align="center"&gt;Read/Write&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="left"&gt;YYYY-MM-DD&lt;strong&gt;T&lt;/strong&gt;HH:MM&lt;/td&gt;
&lt;td align="center"&gt;Read ¹&lt;/td&gt;
&lt;td align="center"&gt;Read&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="left"&gt;YYYY-MM-DD&lt;strong&gt;T&lt;/strong&gt;HH:MM:SS&lt;/td&gt;
&lt;td align="center"&gt;Read ¹&lt;/td&gt;
&lt;td align="center"&gt;Read&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="left"&gt;YYYY-MM-DD&lt;strong&gt;T&lt;/strong&gt;HH:MM:SS.SSS&lt;/td&gt;
&lt;td align="center"&gt;Read ¹&lt;/td&gt;
&lt;td align="center"&gt;Read&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="left"&gt;HH:MM&lt;/td&gt;
&lt;td align="center"&gt;&lt;/td&gt;
&lt;td align="center"&gt;Read/Write&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="left"&gt;HH:MM:SS&lt;/td&gt;
&lt;td align="center"&gt;&lt;/td&gt;
&lt;td align="center"&gt;Read/Write&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="left"&gt;HH:MM:SS.SSS&lt;/td&gt;
&lt;td align="center"&gt;&lt;/td&gt;
&lt;td align="center"&gt;Read/Write&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="left"&gt;Timestamps since unix epoch&lt;/td&gt;
&lt;td align="center"&gt;Read ²&lt;/td&gt;
&lt;td align="center"&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="left"&gt;&lt;code&gt;now&lt;/code&gt;&lt;/td&gt;
&lt;td align="center"&gt;&lt;/td&gt;
&lt;td align="center"&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;¹ Dates are stored and read in the UTC time zone. Missing components are assumed to be zero.&lt;/p&gt;
&lt;p&gt;² GRDB 2+ interprets numerical values as timestamps that fuel &lt;code&gt;Date(timeIntervalSince1970:)&lt;/code&gt;. Previous GRDB versions used to interpret numbers as &lt;a href="https://en.wikipedia.org/wiki/Julian_day" rel="nofollow"&gt;julian days&lt;/a&gt;. Julian days are still supported, with the &lt;code&gt;Date(julianDay:)&lt;/code&gt; initializer.&lt;/p&gt;
&lt;h4&gt;&lt;a id="user-content-date" class="anchor" aria-hidden="true" href="#date"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Date&lt;/h4&gt;
&lt;p&gt;&lt;strong&gt;Date&lt;/strong&gt; can be stored and fetched from the database just like other &lt;a href="#values"&gt;values&lt;/a&gt;:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;try&lt;/span&gt; db.&lt;span class="pl-c1"&gt;execute&lt;/span&gt;(
    &lt;span class="pl-c1"&gt;sql&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;INSERT INTO player (creationDate, ...) VALUES (?, ...)&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;,
    &lt;span class="pl-c1"&gt;arguments&lt;/span&gt;: [&lt;span class="pl-c1"&gt;Date&lt;/span&gt;(), &lt;span class="pl-k"&gt;...&lt;/span&gt;])

&lt;span class="pl-k"&gt;let&lt;/span&gt; row &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-k"&gt;try&lt;/span&gt; Row.&lt;span class="pl-c1"&gt;fetchOne&lt;/span&gt;(db, &lt;span class="pl-k"&gt;...&lt;/span&gt;)&lt;span class="pl-k"&gt;!&lt;/span&gt;
&lt;span class="pl-k"&gt;let&lt;/span&gt; creationDate&lt;span class="pl-k"&gt;:&lt;/span&gt; Date &lt;span class="pl-k"&gt;=&lt;/span&gt; row[&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;creationDate&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;]&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Dates are stored using the format "YYYY-MM-DD HH:MM:SS.SSS" in the UTC time zone. It is precise to the millisecond.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;g-emoji class="g-emoji" alias="point_up" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/261d.png"&gt;☝️&lt;/g-emoji&gt; &lt;strong&gt;Note&lt;/strong&gt;: this format was chosen because it is the only format that is:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Comparable (&lt;code&gt;ORDER BY date&lt;/code&gt; works)&lt;/li&gt;
&lt;li&gt;Comparable with the SQLite keyword CURRENT_TIMESTAMP (&lt;code&gt;WHERE date &amp;gt; CURRENT_TIMESTAMP&lt;/code&gt; works)&lt;/li&gt;
&lt;li&gt;Able to feed &lt;a href="https://www.sqlite.org/lang_datefunc.html" rel="nofollow"&gt;SQLite date &amp;amp; time functions&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Precise enough&lt;/li&gt;
&lt;/ul&gt;
&lt;/blockquote&gt;
&lt;p&gt;When the default format does not fit your needs, customize date conversions. For example:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;try&lt;/span&gt; db.&lt;span class="pl-c1"&gt;execute&lt;/span&gt;(
    &lt;span class="pl-c1"&gt;sql&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;INSERT INTO player (creationDate, ...) VALUES (?, ...)&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;,
    &lt;span class="pl-c1"&gt;arguments&lt;/span&gt;: [&lt;span class="pl-c1"&gt;Date&lt;/span&gt;().&lt;span class="pl-smi"&gt;timeIntervalSinceReferenceDate&lt;/span&gt;, &lt;span class="pl-k"&gt;...&lt;/span&gt;])

&lt;span class="pl-k"&gt;let&lt;/span&gt; row &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-k"&gt;try&lt;/span&gt; Row.&lt;span class="pl-c1"&gt;fetchOne&lt;/span&gt;(db, &lt;span class="pl-k"&gt;...&lt;/span&gt;)&lt;span class="pl-k"&gt;!&lt;/span&gt;
&lt;span class="pl-k"&gt;let&lt;/span&gt; creationDate &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;Date&lt;/span&gt;(&lt;span class="pl-c1"&gt;timeIntervalSinceReferenceDate&lt;/span&gt;: row[&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;creationDate&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;])&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;See &lt;a href="#codable-records"&gt;Codable Records&lt;/a&gt; for more date customization options.&lt;/p&gt;
&lt;h4&gt;&lt;a id="user-content-datecomponents" class="anchor" aria-hidden="true" href="#datecomponents"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;DateComponents&lt;/h4&gt;
&lt;p&gt;DateComponents is indirectly supported, through the &lt;strong&gt;DatabaseDateComponents&lt;/strong&gt; helper type.&lt;/p&gt;
&lt;p&gt;DatabaseDateComponents reads date components from all &lt;a href="https://www.sqlite.org/lang_datefunc.html" rel="nofollow"&gt;date formats supported by SQLite&lt;/a&gt;, and stores them in the format of your choice, from HH:MM to YYYY-MM-DD HH:MM:SS.SSS.&lt;/p&gt;
&lt;p&gt;DatabaseDateComponents can be stored and fetched from the database just like other &lt;a href="#values"&gt;values&lt;/a&gt;:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;let&lt;/span&gt; components &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;DateComponents&lt;/span&gt;()
components.&lt;span class="pl-smi"&gt;year&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;1973&lt;/span&gt;
components.&lt;span class="pl-smi"&gt;month&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;9&lt;/span&gt;
components.&lt;span class="pl-smi"&gt;day&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;18&lt;/span&gt;

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Store "1973-09-18"&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;&lt;span class="pl-k"&gt;let&lt;/span&gt; dbComponents &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;DatabaseDateComponents&lt;/span&gt;(components, &lt;span class="pl-c1"&gt;format&lt;/span&gt;: .&lt;span class="pl-smi"&gt;YMD&lt;/span&gt;)
&lt;span class="pl-k"&gt;try&lt;/span&gt; db.&lt;span class="pl-c1"&gt;execute&lt;/span&gt;(
    &lt;span class="pl-c1"&gt;sql&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;INSERT INTO player (birthDate, ...) VALUES (?, ...)&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;,
    &lt;span class="pl-c1"&gt;arguments&lt;/span&gt;: [dbComponents, &lt;span class="pl-k"&gt;...&lt;/span&gt;])

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Read "1973-09-18"&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;&lt;span class="pl-k"&gt;let&lt;/span&gt; row &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-k"&gt;try&lt;/span&gt; Row.&lt;span class="pl-c1"&gt;fetchOne&lt;/span&gt;(db, &lt;span class="pl-c1"&gt;sql&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;SELECT birthDate ...&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)&lt;span class="pl-k"&gt;!&lt;/span&gt;
&lt;span class="pl-k"&gt;let&lt;/span&gt; dbComponents&lt;span class="pl-k"&gt;:&lt;/span&gt; DatabaseDateComponents &lt;span class="pl-k"&gt;=&lt;/span&gt; row[&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;birthDate&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;]
dbComponents.&lt;span class="pl-smi"&gt;format&lt;/span&gt;         &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; .YMD (the actual format found in the database)&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;dbComponents.&lt;span class="pl-smi"&gt;dateComponents&lt;/span&gt; &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; DateComponents&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h3&gt;&lt;a id="user-content-nsnumber-and-nsdecimalnumber" class="anchor" aria-hidden="true" href="#nsnumber-and-nsdecimalnumber"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;NSNumber and NSDecimalNumber&lt;/h3&gt;
&lt;p&gt;&lt;strong&gt;NSNumber&lt;/strong&gt; can be stored and fetched from the database just like other &lt;a href="#values"&gt;values&lt;/a&gt;. Floating point NSNumbers are stored as Double. Integer and boolean, as Int64. Integers that don't fit Int64 won't be stored: you'll get a fatal error instead. Be cautious when an NSNumber contains an UInt64, for example.&lt;/p&gt;
&lt;p&gt;NSDecimalNumber deserves a longer discussion:&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;SQLite has no support for decimal numbers.&lt;/strong&gt; Given the table below, SQLite will actually store integers or doubles:&lt;/p&gt;
&lt;div class="highlight highlight-source-sql"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;CREATE&lt;/span&gt; &lt;span class="pl-k"&gt;TABLE&lt;/span&gt; &lt;span class="pl-en"&gt;transfer&lt;/span&gt; (
    amount &lt;span class="pl-k"&gt;DECIMAL&lt;/span&gt;(&lt;span class="pl-c1"&gt;10&lt;/span&gt;,&lt;span class="pl-c1"&gt;5&lt;/span&gt;) &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;--&lt;/span&gt; will store integer or double, actually&lt;/span&gt;
)&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;This means that computations will not be exact:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;try&lt;/span&gt; db.&lt;span class="pl-c1"&gt;execute&lt;/span&gt;(&lt;span class="pl-c1"&gt;sql&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;INSERT INTO transfer (amount) VALUES (0.1)&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
&lt;span class="pl-k"&gt;try&lt;/span&gt; db.&lt;span class="pl-c1"&gt;execute&lt;/span&gt;(&lt;span class="pl-c1"&gt;sql&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;INSERT INTO transfer (amount) VALUES (0.2)&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
&lt;span class="pl-k"&gt;let&lt;/span&gt; sum &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-k"&gt;try&lt;/span&gt; NSDecimalNumber.&lt;span class="pl-c1"&gt;fetchOne&lt;/span&gt;(db, &lt;span class="pl-c1"&gt;sql&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;SELECT SUM(amount) FROM transfer&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)&lt;span class="pl-k"&gt;!&lt;/span&gt;

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Yikes! 0.3000000000000000512&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;&lt;span class="pl-c1"&gt;print&lt;/span&gt;(sum)&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Don't blame SQLite or GRDB, and instead store your decimal numbers differently.&lt;/p&gt;
&lt;p&gt;A classic technique is to store &lt;em&gt;integers&lt;/em&gt; instead, since SQLite performs exact computations of integers. For example, don't store Euros, but store cents instead:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Write&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;&lt;span class="pl-k"&gt;let&lt;/span&gt; amount &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;NSDecimalNumber&lt;/span&gt;(&lt;span class="pl-c1"&gt;string&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;0.10&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
&lt;span class="pl-k"&gt;let&lt;/span&gt; integerAmount &lt;span class="pl-k"&gt;=&lt;/span&gt; amount.&lt;span class="pl-c1"&gt;multiplying&lt;/span&gt;(&lt;span class="pl-c1"&gt;byPowerOf10&lt;/span&gt;: &lt;span class="pl-c1"&gt;2&lt;/span&gt;).&lt;span class="pl-smi"&gt;int64Value&lt;/span&gt;
&lt;span class="pl-k"&gt;try&lt;/span&gt; db.&lt;span class="pl-c1"&gt;execute&lt;/span&gt;(&lt;span class="pl-c1"&gt;sql&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;INSERT INTO transfer (amount) VALUES (?)&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-c1"&gt;arguments&lt;/span&gt;: [integerAmount])

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Read&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;&lt;span class="pl-k"&gt;let&lt;/span&gt; integerAmount &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-k"&gt;try&lt;/span&gt; &lt;span class="pl-c1"&gt;Int64&lt;/span&gt;.&lt;span class="pl-c1"&gt;fetchOne&lt;/span&gt;(db, &lt;span class="pl-c1"&gt;sql&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;SELECT SUM(amount) FROM transfer&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)&lt;span class="pl-k"&gt;!&lt;/span&gt;
&lt;span class="pl-k"&gt;let&lt;/span&gt; amount &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;NSDecimalNumber&lt;/span&gt;(&lt;span class="pl-c1"&gt;value&lt;/span&gt;: integerAmount).&lt;span class="pl-c1"&gt;multiplying&lt;/span&gt;(&lt;span class="pl-c1"&gt;byPowerOf10&lt;/span&gt;: &lt;span class="pl-c1"&gt;-2&lt;/span&gt;) &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; 0.10&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h3&gt;&lt;a id="user-content-uuid" class="anchor" aria-hidden="true" href="#uuid"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;UUID&lt;/h3&gt;
&lt;p&gt;&lt;strong&gt;UUID&lt;/strong&gt; can be stored and fetched from the database just like other &lt;a href="#values"&gt;values&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;GRDB stores uuids as 16-bytes data blobs, and decodes them from both 16-bytes data blobs and strings such as "E621E1F8-C36C-495A-93FC-0C247A3E6E5F".&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-swift-enums" class="anchor" aria-hidden="true" href="#swift-enums"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Swift Enums&lt;/h3&gt;
&lt;p&gt;&lt;strong&gt;Swift enums&lt;/strong&gt; and generally all types that adopt the &lt;a href="https://developer.apple.com/library/tvos/documentation/Swift/Reference/Swift_RawRepresentable_Protocol/index.html" rel="nofollow"&gt;RawRepresentable&lt;/a&gt; protocol can be stored and fetched from the database just like their raw &lt;a href="#values"&gt;values&lt;/a&gt;:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;enum&lt;/span&gt; &lt;span class="pl-en"&gt;Color&lt;/span&gt; : &lt;span class="pl-e"&gt;&lt;span class="pl-c1"&gt;Int&lt;/span&gt; &lt;/span&gt;{
    &lt;span class="pl-k"&gt;case&lt;/span&gt; &lt;span class="pl-c1"&gt;red&lt;/span&gt;, &lt;span class="pl-c1"&gt;white&lt;/span&gt;, &lt;span class="pl-c1"&gt;rose&lt;/span&gt;
}

&lt;span class="pl-k"&gt;enum&lt;/span&gt; &lt;span class="pl-en"&gt;Grape&lt;/span&gt; : &lt;span class="pl-e"&gt;&lt;span class="pl-c1"&gt;String&lt;/span&gt; &lt;/span&gt;{
    &lt;span class="pl-k"&gt;case&lt;/span&gt; &lt;span class="pl-c1"&gt;chardonnay&lt;/span&gt;, &lt;span class="pl-c1"&gt;merlot&lt;/span&gt;, &lt;span class="pl-c1"&gt;riesling&lt;/span&gt;
}

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Declare empty DatabaseValueConvertible adoption&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;&lt;span class="pl-k"&gt;extension&lt;/span&gt; &lt;span class="pl-en"&gt;Color&lt;/span&gt; : &lt;span class="pl-e"&gt;DatabaseValueConvertible &lt;/span&gt;{ }
&lt;span class="pl-k"&gt;extension&lt;/span&gt; &lt;span class="pl-en"&gt;Grape&lt;/span&gt; : &lt;span class="pl-e"&gt;DatabaseValueConvertible &lt;/span&gt;{ }

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Store&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;&lt;span class="pl-k"&gt;try&lt;/span&gt; db.&lt;span class="pl-c1"&gt;execute&lt;/span&gt;(
    &lt;span class="pl-c1"&gt;sql&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;INSERT INTO wine (grape, color) VALUES (?, ?)&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;,
    &lt;span class="pl-c1"&gt;arguments&lt;/span&gt;: [Grape.&lt;span class="pl-smi"&gt;merlot&lt;/span&gt;, Color.&lt;span class="pl-smi"&gt;red&lt;/span&gt;])

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Read&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;&lt;span class="pl-k"&gt;let&lt;/span&gt; rows &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-k"&gt;try&lt;/span&gt; Row.&lt;span class="pl-c1"&gt;fetchCursor&lt;/span&gt;(db, &lt;span class="pl-c1"&gt;sql&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;SELECT * FROM wine&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
&lt;span class="pl-k"&gt;while&lt;/span&gt; &lt;span class="pl-k"&gt;let&lt;/span&gt; row &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-k"&gt;try&lt;/span&gt; rows.&lt;span class="pl-c1"&gt;next&lt;/span&gt;() {
    &lt;span class="pl-k"&gt;let&lt;/span&gt; grape&lt;span class="pl-k"&gt;:&lt;/span&gt; Grape &lt;span class="pl-k"&gt;=&lt;/span&gt; row[&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;grape&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;]
    &lt;span class="pl-k"&gt;let&lt;/span&gt; color&lt;span class="pl-k"&gt;:&lt;/span&gt; Color &lt;span class="pl-k"&gt;=&lt;/span&gt; row[&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;color&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;]
}&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;strong&gt;When a database value does not match any enum case&lt;/strong&gt;, you get a fatal error. This fatal error can be avoided with the &lt;a href="#databasevalue"&gt;DatabaseValue&lt;/a&gt; type:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;let&lt;/span&gt; row &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-k"&gt;try&lt;/span&gt; Row.&lt;span class="pl-c1"&gt;fetchOne&lt;/span&gt;(db, &lt;span class="pl-c1"&gt;sql&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;SELECT 'syrah'&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)&lt;span class="pl-k"&gt;!&lt;/span&gt;

row[&lt;span class="pl-c1"&gt;0&lt;/span&gt;] &lt;span class="pl-k"&gt;as&lt;/span&gt; &lt;span class="pl-c1"&gt;String&lt;/span&gt;  &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; "syrah"&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;row[&lt;span class="pl-c1"&gt;0&lt;/span&gt;] &lt;span class="pl-k"&gt;as&lt;/span&gt; Grape&lt;span class="pl-k"&gt;?&lt;/span&gt;  &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; fatal error: could not convert "syrah" to Grape.&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;row[&lt;span class="pl-c1"&gt;0&lt;/span&gt;] &lt;span class="pl-k"&gt;as&lt;/span&gt; Grape   &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; fatal error: could not convert "syrah" to Grape.&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;
&lt;span class="pl-k"&gt;let&lt;/span&gt; dbValue&lt;span class="pl-k"&gt;:&lt;/span&gt; DatabaseValue &lt;span class="pl-k"&gt;=&lt;/span&gt; row[&lt;span class="pl-c1"&gt;0&lt;/span&gt;]
&lt;span class="pl-k"&gt;if&lt;/span&gt; dbValue.&lt;span class="pl-smi"&gt;isNull&lt;/span&gt; {
    &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Handle NULL&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;} &lt;span class="pl-k"&gt;else&lt;/span&gt; &lt;span class="pl-k"&gt;if&lt;/span&gt; &lt;span class="pl-k"&gt;let&lt;/span&gt; grape &lt;span class="pl-k"&gt;=&lt;/span&gt; Grape.&lt;span class="pl-c1"&gt;fromDatabaseValue&lt;/span&gt;(dbValue) {
    &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Handle valid grape&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;} &lt;span class="pl-k"&gt;else&lt;/span&gt; {
    &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Handle unknown grape&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;}&lt;/pre&gt;&lt;/div&gt;
&lt;h3&gt;&lt;a id="user-content-custom-value-types" class="anchor" aria-hidden="true" href="#custom-value-types"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Custom Value Types&lt;/h3&gt;
&lt;p&gt;Conversion to and from the database is based on the &lt;code&gt;DatabaseValueConvertible&lt;/code&gt; protocol:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;protocol&lt;/span&gt; &lt;span class="pl-en"&gt;DatabaseValueConvertible&lt;/span&gt; {
    &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;///&lt;/span&gt; Returns a value that can be stored in the database.&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;    &lt;span class="pl-k"&gt;var&lt;/span&gt; databaseValue&lt;span class="pl-k"&gt;:&lt;/span&gt; DatabaseValue { &lt;span class="pl-k"&gt;get&lt;/span&gt; }
    
    &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;///&lt;/span&gt; Returns a value initialized from dbValue, if possible.&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;    &lt;span class="pl-k"&gt;static&lt;/span&gt; &lt;span class="pl-k"&gt;func&lt;/span&gt; &lt;span class="pl-en"&gt;fromDatabaseValue&lt;/span&gt;(&lt;span class="pl-en"&gt;_&lt;/span&gt; &lt;span class="pl-smi"&gt;dbValue&lt;/span&gt;: DatabaseValue) &lt;span class="pl-k"&gt;-&amp;gt;&lt;/span&gt; &lt;span class="pl-c1"&gt;Self&lt;/span&gt;&lt;span class="pl-k"&gt;?&lt;/span&gt;
}&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;All types that adopt this protocol can be used like all other &lt;a href="#values"&gt;values&lt;/a&gt; (Bool, Int, String, Date, Swift enums, etc.)&lt;/p&gt;
&lt;p&gt;The &lt;code&gt;databaseValue&lt;/code&gt; property returns &lt;a href="#databasevalue"&gt;DatabaseValue&lt;/a&gt;, a type that wraps the five values supported by SQLite: NULL, Int64, Double, String and Data. Since DatabaseValue has no public initializer, use &lt;code&gt;DatabaseValue.null&lt;/code&gt;, or another type that already adopts the protocol: &lt;code&gt;1.databaseValue&lt;/code&gt;, &lt;code&gt;"foo".databaseValue&lt;/code&gt;, etc. Conversion to DatabaseValue &lt;em&gt;must not&lt;/em&gt; fail.&lt;/p&gt;
&lt;p&gt;The &lt;code&gt;fromDatabaseValue()&lt;/code&gt; factory method returns an instance of your custom type if the database value contains a suitable value. If the database value does not contain a suitable value, such as "foo" for Date, &lt;code&gt;fromDatabaseValue&lt;/code&gt; &lt;em&gt;must&lt;/em&gt; return nil (GRDB will interpret this nil result as a conversion error, and react accordingly).&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-transactions-and-savepoints" class="anchor" aria-hidden="true" href="#transactions-and-savepoints"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Transactions and Savepoints&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="#transactions-and-safety"&gt;Transactions and Safety&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#explicit-transactions"&gt;Explicit Transactions&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#savepoints"&gt;Savepoints&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#transaction-kinds"&gt;Transaction Kinds&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;&lt;a id="user-content-transactions-and-safety" class="anchor" aria-hidden="true" href="#transactions-and-safety"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Transactions and Safety&lt;/h3&gt;
&lt;p&gt;&lt;strong&gt;A transaction&lt;/strong&gt; is a fundamental tool of SQLite that guarantees &lt;a href="https://www.sqlite.org/transactional.html" rel="nofollow"&gt;data consistency&lt;/a&gt; as well as &lt;a href="https://sqlite.org/isolation.html" rel="nofollow"&gt;proper isolation&lt;/a&gt; between application threads and database connections.&lt;/p&gt;
&lt;p&gt;GRDB generally opens transactions for you, as a way to enforce its &lt;a href="#concurrency"&gt;concurrency guarantees&lt;/a&gt;, and provide maximal security for both your application data and application logic:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; BEGIN TRANSACTION&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; INSERT INTO credit ...&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; INSERT INTO debit ...&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; COMMIT&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;&lt;span class="pl-k"&gt;try&lt;/span&gt; dbQueue.&lt;span class="pl-smi"&gt;write&lt;/span&gt; { db &lt;span class="pl-k"&gt;in&lt;/span&gt;
    &lt;span class="pl-k"&gt;try&lt;/span&gt; &lt;span class="pl-c1"&gt;Credit&lt;/span&gt;(destinationAccount, amount).&lt;span class="pl-c1"&gt;insert&lt;/span&gt;(db)
    &lt;span class="pl-k"&gt;try&lt;/span&gt; &lt;span class="pl-c1"&gt;Debit&lt;/span&gt;(sourceAccount, amount).&lt;span class="pl-c1"&gt;insert&lt;/span&gt;(db)
}

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; BEGIN TRANSACTION&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; INSERT INTO credit ...&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; INSERT INTO debit ...&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; COMMIT&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;&lt;span class="pl-k"&gt;try&lt;/span&gt; dbPool.&lt;span class="pl-smi"&gt;write&lt;/span&gt; { db &lt;span class="pl-k"&gt;in&lt;/span&gt;
    &lt;span class="pl-k"&gt;try&lt;/span&gt; &lt;span class="pl-c1"&gt;Credit&lt;/span&gt;(destinationAccount, amount).&lt;span class="pl-c1"&gt;insert&lt;/span&gt;(db)
    &lt;span class="pl-k"&gt;try&lt;/span&gt; &lt;span class="pl-c1"&gt;Debit&lt;/span&gt;(sourceAccount, amount).&lt;span class="pl-c1"&gt;insert&lt;/span&gt;(db)
}&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Yet you may need to exactly control when transactions take place:&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-explicit-transactions" class="anchor" aria-hidden="true" href="#explicit-transactions"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Explicit Transactions&lt;/h3&gt;
&lt;p&gt;&lt;code&gt;DatabaseQueue.inDatabase()&lt;/code&gt; and &lt;code&gt;DatabasePool.writeWithoutTransaction()&lt;/code&gt; execute your database statements outside of any transaction:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; INSERT INTO credit ...&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; INSERT INTO debit ...&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;&lt;span class="pl-k"&gt;try&lt;/span&gt; dbQueue.&lt;span class="pl-smi"&gt;inDatabase&lt;/span&gt; { db &lt;span class="pl-k"&gt;in&lt;/span&gt;
    &lt;span class="pl-k"&gt;try&lt;/span&gt; &lt;span class="pl-c1"&gt;Credit&lt;/span&gt;(destinationAccount, amount).&lt;span class="pl-c1"&gt;insert&lt;/span&gt;(db)
    &lt;span class="pl-k"&gt;try&lt;/span&gt; &lt;span class="pl-c1"&gt;Debit&lt;/span&gt;(sourceAccount, amount).&lt;span class="pl-c1"&gt;insert&lt;/span&gt;(db)
}

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; INSERT INTO credit ...&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; INSERT INTO debit ...&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;&lt;span class="pl-k"&gt;try&lt;/span&gt; dbPool.&lt;span class="pl-smi"&gt;writeWithoutTransaction&lt;/span&gt; { db &lt;span class="pl-k"&gt;in&lt;/span&gt;
    &lt;span class="pl-k"&gt;try&lt;/span&gt; &lt;span class="pl-c1"&gt;Credit&lt;/span&gt;(destinationAccount, amount).&lt;span class="pl-c1"&gt;insert&lt;/span&gt;(db)
    &lt;span class="pl-k"&gt;try&lt;/span&gt; &lt;span class="pl-c1"&gt;Debit&lt;/span&gt;(sourceAccount, amount).&lt;span class="pl-c1"&gt;insert&lt;/span&gt;(db)
}&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;strong&gt;Writing outside of any transaction is dangerous,&lt;/strong&gt; for two reasons:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;In our credit/debit example, you may successfully insert a credit, but fail inserting the debit, and end up with unbalanced accounts (oops).&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; UNSAFE DATABASE INTEGRITY&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;&lt;span class="pl-k"&gt;try&lt;/span&gt; dbQueue.&lt;span class="pl-smi"&gt;inDatabase&lt;/span&gt; { db &lt;span class="pl-k"&gt;in&lt;/span&gt; &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; or dbPool.writeWithoutTransaction&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;    &lt;span class="pl-k"&gt;try&lt;/span&gt; &lt;span class="pl-c1"&gt;Credit&lt;/span&gt;(destinationAccount, amount).&lt;span class="pl-c1"&gt;insert&lt;/span&gt;(db) &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; may succeed&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;    &lt;span class="pl-k"&gt;try&lt;/span&gt; &lt;span class="pl-c1"&gt;Debit&lt;/span&gt;(sourceAccount, amount).&lt;span class="pl-c1"&gt;insert&lt;/span&gt;(db)      &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; may fail&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;}&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Transactions avoid this kind of bug.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="#database-pools"&gt;Database pool&lt;/a&gt; concurrent reads can see an inconsistent state of the database:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; UNSAFE CONCURRENCY&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;&lt;span class="pl-k"&gt;try&lt;/span&gt; dbPool.&lt;span class="pl-smi"&gt;writeWithoutTransaction&lt;/span&gt; { db &lt;span class="pl-k"&gt;in&lt;/span&gt;
    &lt;span class="pl-k"&gt;try&lt;/span&gt; &lt;span class="pl-c1"&gt;Credit&lt;/span&gt;(destinationAccount, amount).&lt;span class="pl-c1"&gt;insert&lt;/span&gt;(db)
    &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; &amp;lt;- Concurrent dbPool.read sees a partial db update here&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;    &lt;span class="pl-k"&gt;try&lt;/span&gt; &lt;span class="pl-c1"&gt;Debit&lt;/span&gt;(sourceAccount, amount).&lt;span class="pl-c1"&gt;insert&lt;/span&gt;(db)
}&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Transactions avoid this kind of bug, too.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;To open explicit transactions, use one of the &lt;code&gt;Database.inTransaction&lt;/code&gt;, &lt;code&gt;DatabaseQueue.inTransaction&lt;/code&gt;, or &lt;code&gt;DatabasePool.writeInTransaction&lt;/code&gt; methods:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; BEGIN TRANSACTION&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; INSERT INTO credit ...&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; INSERT INTO debit ...&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; COMMIT&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;&lt;span class="pl-k"&gt;try&lt;/span&gt; dbQueue.&lt;span class="pl-smi"&gt;inDatabase&lt;/span&gt; { db &lt;span class="pl-k"&gt;in&lt;/span&gt;  &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; or dbPool.writeWithoutTransaction&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;    &lt;span class="pl-k"&gt;try&lt;/span&gt; db.&lt;span class="pl-smi"&gt;inTransaction&lt;/span&gt; {
        &lt;span class="pl-k"&gt;try&lt;/span&gt; &lt;span class="pl-c1"&gt;Credit&lt;/span&gt;(destinationAccount, amount).&lt;span class="pl-c1"&gt;insert&lt;/span&gt;(db)
        &lt;span class="pl-k"&gt;try&lt;/span&gt; &lt;span class="pl-c1"&gt;Debit&lt;/span&gt;(sourceAccount, amount).&lt;span class="pl-c1"&gt;insert&lt;/span&gt;(db)
        &lt;span class="pl-k"&gt;return&lt;/span&gt; .&lt;span class="pl-smi"&gt;commit&lt;/span&gt;
    }
}

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; BEGIN TRANSACTION&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; INSERT INTO credit ...&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; INSERT INTO debit ...&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; COMMIT&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;&lt;span class="pl-k"&gt;try&lt;/span&gt; dbQueue.&lt;span class="pl-smi"&gt;inTransaction&lt;/span&gt; { db &lt;span class="pl-k"&gt;in&lt;/span&gt;  &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; or dbPool.writeInTransaction&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;    &lt;span class="pl-k"&gt;try&lt;/span&gt; &lt;span class="pl-c1"&gt;Credit&lt;/span&gt;(destinationAccount, amount).&lt;span class="pl-c1"&gt;insert&lt;/span&gt;(db)
    &lt;span class="pl-k"&gt;try&lt;/span&gt; &lt;span class="pl-c1"&gt;Debit&lt;/span&gt;(sourceAccount, amount).&lt;span class="pl-c1"&gt;insert&lt;/span&gt;(db)
    &lt;span class="pl-k"&gt;return&lt;/span&gt; .&lt;span class="pl-smi"&gt;commit&lt;/span&gt;
}&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;If an error is thrown from the transaction block, the transaction is rollbacked and the error is rethrown by the &lt;code&gt;inTransaction&lt;/code&gt; method. If you return &lt;code&gt;.rollback&lt;/code&gt; instead of &lt;code&gt;.commit&lt;/code&gt;, the transaction is also rollbacked, but no error is thrown.&lt;/p&gt;
&lt;p&gt;You can also perform manual transaction management:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;try&lt;/span&gt; dbQueue.&lt;span class="pl-smi"&gt;inDatabase&lt;/span&gt; { db &lt;span class="pl-k"&gt;in&lt;/span&gt;  &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; or dbPool.writeWithoutTransaction&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;    &lt;span class="pl-k"&gt;try&lt;/span&gt; db.&lt;span class="pl-c1"&gt;beginTransaction&lt;/span&gt;()
    &lt;span class="pl-k"&gt;...&lt;/span&gt;
    &lt;span class="pl-k"&gt;try&lt;/span&gt; db.&lt;span class="pl-c1"&gt;commit&lt;/span&gt;()
    
    &lt;span class="pl-k"&gt;try&lt;/span&gt; db.&lt;span class="pl-c1"&gt;execute&lt;/span&gt;(&lt;span class="pl-c1"&gt;sql&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;BEGIN TRANSACTION&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
    &lt;span class="pl-k"&gt;...&lt;/span&gt;
    &lt;span class="pl-k"&gt;try&lt;/span&gt; db.&lt;span class="pl-c1"&gt;execute&lt;/span&gt;(&lt;span class="pl-c1"&gt;sql&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;ROLLBACK&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
}&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Transactions can't be left opened unless you set the &lt;a href="http://groue.github.io/GRDB.swift/docs/4.5/Structs/Configuration.html" rel="nofollow"&gt;allowsUnsafeTransactions&lt;/a&gt; configuration flag:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; fatal error: A transaction has been left opened at the end of a database access&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;&lt;span class="pl-k"&gt;try&lt;/span&gt; dbQueue.&lt;span class="pl-smi"&gt;inDatabase&lt;/span&gt; { db &lt;span class="pl-k"&gt;in&lt;/span&gt;
    &lt;span class="pl-k"&gt;try&lt;/span&gt; db.&lt;span class="pl-c1"&gt;execute&lt;/span&gt;(&lt;span class="pl-c1"&gt;sql&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;BEGIN TRANSACTION&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
    &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; &amp;lt;- no commit or rollback&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;}&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;You can ask if a transaction is currently opened:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;func&lt;/span&gt; &lt;span class="pl-en"&gt;myCriticalMethod&lt;/span&gt;(&lt;span class="pl-en"&gt;_&lt;/span&gt; &lt;span class="pl-smi"&gt;db&lt;/span&gt;: Database) &lt;span class="pl-k"&gt;throws&lt;/span&gt; {
    &lt;span class="pl-c1"&gt;precondition&lt;/span&gt;(db.&lt;span class="pl-smi"&gt;isInsideTransaction&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;This method requires a transaction&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
    &lt;span class="pl-k"&gt;try&lt;/span&gt; &lt;span class="pl-k"&gt;...&lt;/span&gt;
}&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Yet, you have a better option than checking for transactions: critical database sections should use savepoints, described below:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;func&lt;/span&gt; &lt;span class="pl-en"&gt;myCriticalMethod&lt;/span&gt;(&lt;span class="pl-en"&gt;_&lt;/span&gt; &lt;span class="pl-smi"&gt;db&lt;/span&gt;: Database) &lt;span class="pl-k"&gt;throws&lt;/span&gt; {
    &lt;span class="pl-k"&gt;try&lt;/span&gt; db.&lt;span class="pl-smi"&gt;inSavepoint&lt;/span&gt; {
        &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Here the database is guaranteed to be inside a transaction.&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;        &lt;span class="pl-k"&gt;try&lt;/span&gt; &lt;span class="pl-k"&gt;...&lt;/span&gt;
    }
}&lt;/pre&gt;&lt;/div&gt;
&lt;h3&gt;&lt;a id="user-content-savepoints" class="anchor" aria-hidden="true" href="#savepoints"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Savepoints&lt;/h3&gt;
&lt;p&gt;&lt;strong&gt;Statements grouped in a savepoint can be rollbacked without invalidating a whole transaction:&lt;/strong&gt;&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;try&lt;/span&gt; dbQueue.&lt;span class="pl-smi"&gt;write&lt;/span&gt; { db &lt;span class="pl-k"&gt;in&lt;/span&gt;
    &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Makes sure both inserts succeed, or none:&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;    &lt;span class="pl-k"&gt;try&lt;/span&gt; db.&lt;span class="pl-smi"&gt;inSavepoint&lt;/span&gt; {
        &lt;span class="pl-k"&gt;try&lt;/span&gt; &lt;span class="pl-c1"&gt;Credit&lt;/span&gt;(destinationAccount, amount).&lt;span class="pl-c1"&gt;insert&lt;/span&gt;(db)
        &lt;span class="pl-k"&gt;try&lt;/span&gt; &lt;span class="pl-c1"&gt;Debit&lt;/span&gt;(sourceAccount, amount).&lt;span class="pl-c1"&gt;insert&lt;/span&gt;(db)
        &lt;span class="pl-k"&gt;return&lt;/span&gt; .&lt;span class="pl-smi"&gt;commit&lt;/span&gt;
    }
    
    &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Other savepoints, etc...&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;}&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;If an error is thrown from the savepoint block, the savepoint is rollbacked and the error is rethrown by the &lt;code&gt;inSavepoint&lt;/code&gt; method. If you return &lt;code&gt;.rollback&lt;/code&gt; instead of &lt;code&gt;.commit&lt;/code&gt;, the savepoint is also rollbacked, but no error is thrown.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Unlike transactions, savepoints can be nested.&lt;/strong&gt; They implicitly open a transaction if no one was opened when the savepoint begins. As such, they behave just like nested transactions. Yet the database changes are only written to disk when the outermost transaction is committed:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;try&lt;/span&gt; dbQueue.&lt;span class="pl-smi"&gt;inDatabase&lt;/span&gt; { db &lt;span class="pl-k"&gt;in&lt;/span&gt;
    &lt;span class="pl-k"&gt;try&lt;/span&gt; db.&lt;span class="pl-smi"&gt;inSavepoint&lt;/span&gt; {
        &lt;span class="pl-k"&gt;...&lt;/span&gt;
        &lt;span class="pl-k"&gt;try&lt;/span&gt; db.&lt;span class="pl-smi"&gt;inSavepoint&lt;/span&gt; {
            &lt;span class="pl-k"&gt;...&lt;/span&gt;
            &lt;span class="pl-k"&gt;return&lt;/span&gt; .&lt;span class="pl-smi"&gt;commit&lt;/span&gt;
        }
        &lt;span class="pl-k"&gt;...&lt;/span&gt;
        &lt;span class="pl-k"&gt;return&lt;/span&gt; .&lt;span class="pl-smi"&gt;commit&lt;/span&gt;  &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; writes changes to disk&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;    }
}&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;SQLite savepoints are more than nested transactions, though. For advanced uses, use &lt;a href="https://www.sqlite.org/lang_savepoint.html" rel="nofollow"&gt;SQLite savepoint documentation&lt;/a&gt;.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-transaction-kinds" class="anchor" aria-hidden="true" href="#transaction-kinds"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Transaction Kinds&lt;/h3&gt;
&lt;p&gt;SQLite supports &lt;a href="https://www.sqlite.org/lang_transaction.html" rel="nofollow"&gt;three kinds of transactions&lt;/a&gt;: deferred (the default), immediate, and exclusive.&lt;/p&gt;
&lt;p&gt;The transaction kind can be changed in the database configuration, or for each transaction:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; 1) Default configuration:&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;&lt;span class="pl-k"&gt;let&lt;/span&gt; dbQueue &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-k"&gt;try&lt;/span&gt; &lt;span class="pl-c1"&gt;DatabaseQueue&lt;/span&gt;(&lt;span class="pl-c1"&gt;path&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;...&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; BEGIN DEFERED TRANSACTION ...&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;dbQueue.&lt;span class="pl-smi"&gt;write&lt;/span&gt; { db &lt;span class="pl-k"&gt;in&lt;/span&gt; &lt;span class="pl-k"&gt;...&lt;/span&gt; }

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; BEGIN EXCLUSIVE TRANSACTION ...&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;dbQueue.&lt;span class="pl-c1"&gt;inTransaction&lt;/span&gt;(.&lt;span class="pl-smi"&gt;exclusive&lt;/span&gt;) { db &lt;span class="pl-k"&gt;in&lt;/span&gt; &lt;span class="pl-k"&gt;...&lt;/span&gt; }

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; 2) Customized default transaction kind:&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;&lt;span class="pl-k"&gt;var&lt;/span&gt; config &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;Configuration&lt;/span&gt;()
config.&lt;span class="pl-smi"&gt;defaultTransactionKind&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; .&lt;span class="pl-smi"&gt;immediate&lt;/span&gt;
&lt;span class="pl-k"&gt;let&lt;/span&gt; dbQueue &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-k"&gt;try&lt;/span&gt; &lt;span class="pl-c1"&gt;DatabaseQueue&lt;/span&gt;(&lt;span class="pl-c1"&gt;path&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;...&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-c1"&gt;configuration&lt;/span&gt;: config)

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; BEGIN IMMEDIATE TRANSACTION ...&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;dbQueue.&lt;span class="pl-smi"&gt;write&lt;/span&gt; { db &lt;span class="pl-k"&gt;in&lt;/span&gt; &lt;span class="pl-k"&gt;...&lt;/span&gt; }

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; BEGIN EXCLUSIVE TRANSACTION ...&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;dbQueue.&lt;span class="pl-c1"&gt;inTransaction&lt;/span&gt;(.&lt;span class="pl-smi"&gt;exclusive&lt;/span&gt;) { db &lt;span class="pl-k"&gt;in&lt;/span&gt; &lt;span class="pl-k"&gt;...&lt;/span&gt; }&lt;/pre&gt;&lt;/div&gt;
&lt;h2&gt;&lt;a id="user-content-prepared-statements" class="anchor" aria-hidden="true" href="#prepared-statements"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Prepared Statements&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;Prepared Statements&lt;/strong&gt; let you prepare an SQL query and execute it later, several times if you need, with different arguments.&lt;/p&gt;
&lt;p&gt;There are two kinds of prepared statements: &lt;strong&gt;select statements&lt;/strong&gt;, and &lt;strong&gt;update statements&lt;/strong&gt;:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;try&lt;/span&gt; dbQueue.&lt;span class="pl-smi"&gt;write&lt;/span&gt; { db &lt;span class="pl-k"&gt;in&lt;/span&gt;
    &lt;span class="pl-k"&gt;let&lt;/span&gt; updateSQL &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;INSERT INTO player (name, score) VALUES (:name, :score)&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;
    &lt;span class="pl-k"&gt;let&lt;/span&gt; updateStatement &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-k"&gt;try&lt;/span&gt; db.&lt;span class="pl-c1"&gt;makeUpdateStatement&lt;/span&gt;(&lt;span class="pl-c1"&gt;sql&lt;/span&gt;: updateSQL)
    
    &lt;span class="pl-k"&gt;let&lt;/span&gt; selectSQL &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;SELECT * FROM player WHERE name = ?&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;
    &lt;span class="pl-k"&gt;let&lt;/span&gt; selectStatement &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-k"&gt;try&lt;/span&gt; db.&lt;span class="pl-c1"&gt;makeSelectStatement&lt;/span&gt;(&lt;span class="pl-c1"&gt;sql&lt;/span&gt;: selectSQL)
}&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;The &lt;code&gt;?&lt;/code&gt; and colon-prefixed keys like &lt;code&gt;:name&lt;/code&gt; in the SQL query are the statement arguments. You set them with arrays or dictionaries (arguments are actually of type &lt;a href="http://groue.github.io/GRDB.swift/docs/4.5/Structs/StatementArguments.html" rel="nofollow"&gt;StatementArguments&lt;/a&gt;, which happens to adopt the ExpressibleByArrayLiteral and ExpressibleByDictionaryLiteral protocols).&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;updateStatement.&lt;span class="pl-smi"&gt;arguments&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; [&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;name&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;&lt;span class="pl-k"&gt;:&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;Arthur&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;score&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;&lt;span class="pl-k"&gt;:&lt;/span&gt; &lt;span class="pl-c1"&gt;1000&lt;/span&gt;]
selectStatement.&lt;span class="pl-smi"&gt;arguments&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; [&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;Arthur&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;]&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;After arguments are set, you can execute the prepared statement:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;try&lt;/span&gt; updateStatement.&lt;span class="pl-c1"&gt;execute&lt;/span&gt;()&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Select statements can be used wherever a raw SQL query string would fit (see &lt;a href="#fetch-queries"&gt;fetch queries&lt;/a&gt;):&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;let&lt;/span&gt; rows &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-k"&gt;try&lt;/span&gt; Row.&lt;span class="pl-c1"&gt;fetchCursor&lt;/span&gt;(selectStatement)    &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; A Cursor of Row&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;&lt;span class="pl-k"&gt;let&lt;/span&gt; players &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-k"&gt;try&lt;/span&gt; Player.&lt;span class="pl-c1"&gt;fetchAll&lt;/span&gt;(selectStatement) &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; [Player]&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;&lt;span class="pl-k"&gt;let&lt;/span&gt; player &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-k"&gt;try&lt;/span&gt; Player.&lt;span class="pl-c1"&gt;fetchOne&lt;/span&gt;(selectStatement)  &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Player?&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;You can set the arguments at the moment of the statement execution:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;try&lt;/span&gt; updateStatement.&lt;span class="pl-c1"&gt;execute&lt;/span&gt;(&lt;span class="pl-c1"&gt;arguments&lt;/span&gt;: [&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;name&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;&lt;span class="pl-k"&gt;:&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;Arthur&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;score&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;&lt;span class="pl-k"&gt;:&lt;/span&gt; &lt;span class="pl-c1"&gt;1000&lt;/span&gt;])
&lt;span class="pl-k"&gt;let&lt;/span&gt; player &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-k"&gt;try&lt;/span&gt; Player.&lt;span class="pl-c1"&gt;fetchOne&lt;/span&gt;(selectStatement, &lt;span class="pl-c1"&gt;arguments&lt;/span&gt;: [&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;Arthur&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;])&lt;/pre&gt;&lt;/div&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;g-emoji class="g-emoji" alias="point_up" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/261d.png"&gt;☝️&lt;/g-emoji&gt; &lt;strong&gt;Note&lt;/strong&gt;: it is a programmer error to reuse a prepared statement that has failed: GRDB may crash if you do so.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;See &lt;a href="#row-queries"&gt;row queries&lt;/a&gt;, &lt;a href="#value-queries"&gt;value queries&lt;/a&gt;, and &lt;a href="#records"&gt;Records&lt;/a&gt; for more information.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-prepared-statements-cache" class="anchor" aria-hidden="true" href="#prepared-statements-cache"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Prepared Statements Cache&lt;/h3&gt;
&lt;p&gt;When the same query will be used several times in the lifetime of your application, you may feel a natural desire to cache prepared statements.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Don't cache statements yourself.&lt;/strong&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;g-emoji class="g-emoji" alias="point_up" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/261d.png"&gt;☝️&lt;/g-emoji&gt; &lt;strong&gt;Note&lt;/strong&gt;: This is because you don't have the necessary tools. Statements are tied to specific SQLite connections and dispatch queues which you don't manage yourself, especially when you use &lt;a href="#database-pools"&gt;database pools&lt;/a&gt;. A change in the database schema &lt;a href="https://www.sqlite.org/compile.html#max_schema_retry" rel="nofollow"&gt;may, or may not&lt;/a&gt; invalidate a statement. On systems earlier than OSX 10.10 that don't have the &lt;a href="https://www.sqlite.org/c3ref/close.html" rel="nofollow"&gt;sqlite3_close_v2 function&lt;/a&gt;, SQLite connections won't close properly if statements have been kept alive.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Instead, use the &lt;code&gt;cachedUpdateStatement&lt;/code&gt; and &lt;code&gt;cachedSelectStatement&lt;/code&gt; methods. GRDB does all the hard caching and &lt;a href="#memory-management"&gt;memory management&lt;/a&gt; stuff for you:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;let&lt;/span&gt; updateStatement &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-k"&gt;try&lt;/span&gt; db.&lt;span class="pl-c1"&gt;cachedUpdateStatement&lt;/span&gt;(&lt;span class="pl-c1"&gt;sql&lt;/span&gt;: sql)
&lt;span class="pl-k"&gt;let&lt;/span&gt; selectStatement &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-k"&gt;try&lt;/span&gt; db.&lt;span class="pl-c1"&gt;cachedSelectStatement&lt;/span&gt;(&lt;span class="pl-c1"&gt;sql&lt;/span&gt;: sql)&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Should a cached prepared statement throw an error, don't reuse it (it is a programmer error). Instead, reload it from the cache.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-custom-sql-functions-and-aggregates" class="anchor" aria-hidden="true" href="#custom-sql-functions-and-aggregates"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Custom SQL Functions and Aggregates&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;SQLite lets you define SQL functions and aggregates.&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;A custom SQL function or aggregate extends SQLite:&lt;/p&gt;
&lt;div class="highlight highlight-source-sql"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;SELECT&lt;/span&gt; reverse(name) &lt;span class="pl-k"&gt;FROM&lt;/span&gt; player;   &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;--&lt;/span&gt; custom function&lt;/span&gt;
&lt;span class="pl-k"&gt;SELECT&lt;/span&gt; maxLength(name) &lt;span class="pl-k"&gt;FROM&lt;/span&gt; player; &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;--&lt;/span&gt; custom aggregate&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="#custom-sql-functions"&gt;Custom SQL Functions&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#custom-aggregates"&gt;Custom Aggregates&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;&lt;a id="user-content-custom-sql-functions" class="anchor" aria-hidden="true" href="#custom-sql-functions"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Custom SQL Functions&lt;/h3&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;let&lt;/span&gt; reverse &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;DatabaseFunction&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;reverse&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-c1"&gt;argumentCount&lt;/span&gt;: &lt;span class="pl-c1"&gt;1&lt;/span&gt;, &lt;span class="pl-c1"&gt;pure&lt;/span&gt;: &lt;span class="pl-c1"&gt;true&lt;/span&gt;) { (&lt;span class="pl-c1"&gt;values&lt;/span&gt;: [DatabaseValue]) &lt;span class="pl-k"&gt;in&lt;/span&gt;
    &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Extract string value, if any...&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;    &lt;span class="pl-k"&gt;guard&lt;/span&gt; &lt;span class="pl-k"&gt;let&lt;/span&gt; string &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;String&lt;/span&gt;.&lt;span class="pl-c1"&gt;fromDatabaseValue&lt;/span&gt;(values[&lt;span class="pl-c1"&gt;0&lt;/span&gt;]) &lt;span class="pl-k"&gt;else&lt;/span&gt; {
        &lt;span class="pl-k"&gt;return&lt;/span&gt; &lt;span class="pl-c1"&gt;nil&lt;/span&gt;
    }
    &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; ... and return reversed string:&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;    &lt;span class="pl-k"&gt;return&lt;/span&gt; &lt;span class="pl-c1"&gt;String&lt;/span&gt;(string.&lt;span class="pl-c1"&gt;reversed&lt;/span&gt;())
}
dbQueue.&lt;span class="pl-c1"&gt;add&lt;/span&gt;(&lt;span class="pl-c1"&gt;function&lt;/span&gt;: reverse)   &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Or dbPool.add(function: ...)&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;
&lt;span class="pl-k"&gt;try&lt;/span&gt; dbQueue.&lt;span class="pl-smi"&gt;read&lt;/span&gt; { db &lt;span class="pl-k"&gt;in&lt;/span&gt;
    &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; "oof"&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;    &lt;span class="pl-k"&gt;try&lt;/span&gt; &lt;span class="pl-c1"&gt;String&lt;/span&gt;.&lt;span class="pl-c1"&gt;fetchOne&lt;/span&gt;(db, &lt;span class="pl-c1"&gt;sql&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;SELECT reverse('foo')&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)&lt;span class="pl-k"&gt;!&lt;/span&gt;
}&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;The &lt;em&gt;function&lt;/em&gt; argument takes an array of &lt;a href="#databasevalue"&gt;DatabaseValue&lt;/a&gt;, and returns any valid &lt;a href="#values"&gt;value&lt;/a&gt; (Bool, Int, String, Date, Swift enums, etc.) The number of database values is guaranteed to be &lt;em&gt;argumentCount&lt;/em&gt;.&lt;/p&gt;
&lt;p&gt;SQLite has the opportunity to perform additional optimizations when functions are "pure", which means that their result only depends on their arguments. So make sure to set the &lt;em&gt;pure&lt;/em&gt; argument to true when possible.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Functions can take a variable number of arguments:&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;When you don't provide any explicit &lt;em&gt;argumentCount&lt;/em&gt;, the function can take any number of arguments:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;let&lt;/span&gt; averageOf &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;DatabaseFunction&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;averageOf&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-c1"&gt;pure&lt;/span&gt;: &lt;span class="pl-c1"&gt;true&lt;/span&gt;) { (&lt;span class="pl-c1"&gt;values&lt;/span&gt;: [DatabaseValue]) &lt;span class="pl-k"&gt;in&lt;/span&gt;
    &lt;span class="pl-k"&gt;let&lt;/span&gt; doubles &lt;span class="pl-k"&gt;=&lt;/span&gt; values.&lt;span class="pl-smi"&gt;compactMap&lt;/span&gt; { &lt;span class="pl-c1"&gt;Double&lt;/span&gt;.&lt;span class="pl-c1"&gt;fromDatabaseValue&lt;/span&gt;(&lt;span class="pl-c1"&gt;$0&lt;/span&gt;) }
    &lt;span class="pl-k"&gt;return&lt;/span&gt; doubles.&lt;span class="pl-c1"&gt;reduce&lt;/span&gt;(&lt;span class="pl-c1"&gt;0&lt;/span&gt;, &lt;span class="pl-k"&gt;+&lt;/span&gt;) &lt;span class="pl-k"&gt;/&lt;/span&gt; &lt;span class="pl-c1"&gt;Double&lt;/span&gt;(doubles.&lt;span class="pl-c1"&gt;count&lt;/span&gt;)
}
dbQueue.&lt;span class="pl-c1"&gt;add&lt;/span&gt;(&lt;span class="pl-c1"&gt;function&lt;/span&gt;: averageOf)

&lt;span class="pl-k"&gt;try&lt;/span&gt; dbQueue.&lt;span class="pl-smi"&gt;read&lt;/span&gt; { db &lt;span class="pl-k"&gt;in&lt;/span&gt;
    &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; 2.0&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;    &lt;span class="pl-k"&gt;try&lt;/span&gt; &lt;span class="pl-c1"&gt;Double&lt;/span&gt;.&lt;span class="pl-c1"&gt;fetchOne&lt;/span&gt;(db, &lt;span class="pl-c1"&gt;sql&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;SELECT averageOf(1, 2, 3)&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)&lt;span class="pl-k"&gt;!&lt;/span&gt;
}&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;strong&gt;Functions can throw:&lt;/strong&gt;&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;let&lt;/span&gt; sqrt &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;DatabaseFunction&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;sqrt&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-c1"&gt;argumentCount&lt;/span&gt;: &lt;span class="pl-c1"&gt;1&lt;/span&gt;, &lt;span class="pl-c1"&gt;pure&lt;/span&gt;: &lt;span class="pl-c1"&gt;true&lt;/span&gt;) { (&lt;span class="pl-c1"&gt;values&lt;/span&gt;: [DatabaseValue]) &lt;span class="pl-k"&gt;in&lt;/span&gt;
    &lt;span class="pl-k"&gt;guard&lt;/span&gt; &lt;span class="pl-k"&gt;let&lt;/span&gt; double &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;Double&lt;/span&gt;.&lt;span class="pl-c1"&gt;fromDatabaseValue&lt;/span&gt;(values[&lt;span class="pl-c1"&gt;0&lt;/span&gt;]) &lt;span class="pl-k"&gt;else&lt;/span&gt; {
        &lt;span class="pl-k"&gt;return&lt;/span&gt; &lt;span class="pl-c1"&gt;nil&lt;/span&gt;
    }
    &lt;span class="pl-k"&gt;guard&lt;/span&gt; double &lt;span class="pl-k"&gt;&amp;gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;0&lt;/span&gt; &lt;span class="pl-k"&gt;else&lt;/span&gt; {
        &lt;span class="pl-k"&gt;throw&lt;/span&gt; &lt;span class="pl-c1"&gt;DatabaseError&lt;/span&gt;(&lt;span class="pl-c1"&gt;message&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;invalid negative number&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
    }
    &lt;span class="pl-k"&gt;return&lt;/span&gt; &lt;span class="pl-c1"&gt;sqrt&lt;/span&gt;(double)
}
dbQueue.&lt;span class="pl-c1"&gt;add&lt;/span&gt;(&lt;span class="pl-c1"&gt;function&lt;/span&gt;: sqrt)

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; SQLite error 1 with statement `SELECT sqrt(-1)`: invalid negative number&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;&lt;span class="pl-k"&gt;try&lt;/span&gt; dbQueue.&lt;span class="pl-smi"&gt;read&lt;/span&gt; { db &lt;span class="pl-k"&gt;in&lt;/span&gt;
    &lt;span class="pl-k"&gt;try&lt;/span&gt; &lt;span class="pl-c1"&gt;Double&lt;/span&gt;.&lt;span class="pl-c1"&gt;fetchOne&lt;/span&gt;(db, &lt;span class="pl-c1"&gt;sql&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;SELECT sqrt(-1)&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)&lt;span class="pl-k"&gt;!&lt;/span&gt;
}&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;strong&gt;Use custom functions in the &lt;a href="#the-query-interface"&gt;query interface&lt;/a&gt;:&lt;/strong&gt;&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; SELECT reverseString("name") FROM player&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;Player.&lt;span class="pl-c1"&gt;select&lt;/span&gt;(reverseString.&lt;span class="pl-c1"&gt;apply&lt;/span&gt;(nameColumn))&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;strong&gt;GRDB ships with built-in SQL functions that perform unicode-aware string transformations.&lt;/strong&gt; See &lt;a href="#unicode"&gt;Unicode&lt;/a&gt;.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-custom-aggregates" class="anchor" aria-hidden="true" href="#custom-aggregates"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Custom Aggregates&lt;/h3&gt;
&lt;p&gt;Before registering a custom aggregate, you need to define a type that adopts the &lt;code&gt;DatabaseAggregate&lt;/code&gt; protocol:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;protocol&lt;/span&gt; &lt;span class="pl-en"&gt;DatabaseAggregate&lt;/span&gt; {
    &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Initializes an aggregate&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;    &lt;span class="pl-k"&gt;init&lt;/span&gt;()
    
    &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Called at each step of the aggregation&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;    &lt;span class="pl-k"&gt;mutating&lt;/span&gt; &lt;span class="pl-k"&gt;func&lt;/span&gt; &lt;span class="pl-en"&gt;step&lt;/span&gt;(&lt;span class="pl-en"&gt;_&lt;/span&gt; &lt;span class="pl-smi"&gt;dbValues&lt;/span&gt;: [DatabaseValue]) &lt;span class="pl-k"&gt;throws&lt;/span&gt;
    
    &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Returns the final result&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;    &lt;span class="pl-k"&gt;func&lt;/span&gt; &lt;span class="pl-en"&gt;finalize&lt;/span&gt;() &lt;span class="pl-k"&gt;throws&lt;/span&gt; &lt;span class="pl-k"&gt;-&amp;gt;&lt;/span&gt; DatabaseValueConvertible&lt;span class="pl-k"&gt;?&lt;/span&gt;
}&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;For example:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;struct&lt;/span&gt; &lt;span class="pl-en"&gt;MaxLength&lt;/span&gt; : &lt;span class="pl-e"&gt;DatabaseAggregate &lt;/span&gt;{
    &lt;span class="pl-k"&gt;var&lt;/span&gt; maxLength&lt;span class="pl-k"&gt;:&lt;/span&gt; &lt;span class="pl-c1"&gt;Int&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;0&lt;/span&gt;
    
    &lt;span class="pl-k"&gt;mutating&lt;/span&gt; &lt;span class="pl-k"&gt;func&lt;/span&gt; &lt;span class="pl-en"&gt;step&lt;/span&gt;(&lt;span class="pl-en"&gt;_&lt;/span&gt; &lt;span class="pl-smi"&gt;dbValues&lt;/span&gt;: [DatabaseValue]) {
        &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; At each step, extract string value, if any...&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;        &lt;span class="pl-k"&gt;guard&lt;/span&gt; &lt;span class="pl-k"&gt;let&lt;/span&gt; string &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;String&lt;/span&gt;.&lt;span class="pl-c1"&gt;fromDatabaseValue&lt;/span&gt;(dbValues[&lt;span class="pl-c1"&gt;0&lt;/span&gt;]) &lt;span class="pl-k"&gt;else&lt;/span&gt; {
            &lt;span class="pl-k"&gt;return&lt;/span&gt;
        }
        &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; ... and update the result&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;        &lt;span class="pl-k"&gt;let&lt;/span&gt; length &lt;span class="pl-k"&gt;=&lt;/span&gt; string.&lt;span class="pl-c1"&gt;count&lt;/span&gt;
        &lt;span class="pl-k"&gt;if&lt;/span&gt; length &lt;span class="pl-k"&gt;&amp;gt;&lt;/span&gt; maxLength {
            maxLength &lt;span class="pl-k"&gt;=&lt;/span&gt; length
        }
    }
    
    &lt;span class="pl-k"&gt;func&lt;/span&gt; &lt;span class="pl-en"&gt;finalize&lt;/span&gt;() &lt;span class="pl-k"&gt;-&amp;gt;&lt;/span&gt; DatabaseValueConvertible&lt;span class="pl-k"&gt;?&lt;/span&gt; {
        &lt;span class="pl-k"&gt;return&lt;/span&gt; maxLength
    }
}

&lt;span class="pl-k"&gt;let&lt;/span&gt; maxLength &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;DatabaseFunction&lt;/span&gt;(
    &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;maxLength&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;,
    &lt;span class="pl-c1"&gt;argumentCount&lt;/span&gt;: &lt;span class="pl-c1"&gt;1&lt;/span&gt;,
    &lt;span class="pl-c1"&gt;pure&lt;/span&gt;: &lt;span class="pl-c1"&gt;true&lt;/span&gt;,
    &lt;span class="pl-c1"&gt;aggregate&lt;/span&gt;: MaxLength.&lt;span class="pl-k"&gt;self&lt;/span&gt;)

dbQueue.&lt;span class="pl-c1"&gt;add&lt;/span&gt;(&lt;span class="pl-c1"&gt;function&lt;/span&gt;: maxLength)   &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Or dbPool.add(function: ...)&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;
&lt;span class="pl-k"&gt;try&lt;/span&gt; dbQueue.&lt;span class="pl-smi"&gt;read&lt;/span&gt; { db &lt;span class="pl-k"&gt;in&lt;/span&gt;
    &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Some Int&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;    &lt;span class="pl-k"&gt;try&lt;/span&gt; &lt;span class="pl-c1"&gt;Int&lt;/span&gt;.&lt;span class="pl-c1"&gt;fetchOne&lt;/span&gt;(db, &lt;span class="pl-c1"&gt;sql&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;SELECT maxLength(name) FROM player&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)&lt;span class="pl-k"&gt;!&lt;/span&gt;
}&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;The &lt;code&gt;step&lt;/code&gt; method of the aggregate takes an array of &lt;a href="#databasevalue"&gt;DatabaseValue&lt;/a&gt;. This array contains as many values as the &lt;em&gt;argumentCount&lt;/em&gt; parameter (or any number of values, when &lt;em&gt;argumentCount&lt;/em&gt; is omitted).&lt;/p&gt;
&lt;p&gt;The &lt;code&gt;finalize&lt;/code&gt; method of the aggregate returns the final aggregated &lt;a href="#values"&gt;value&lt;/a&gt; (Bool, Int, String, Date, Swift enums, etc.).&lt;/p&gt;
&lt;p&gt;SQLite has the opportunity to perform additional optimizations when aggregates are "pure", which means that their result only depends on their inputs. So make sure to set the &lt;em&gt;pure&lt;/em&gt; argument to true when possible.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Use custom aggregates in the &lt;a href="#the-query-interface"&gt;query interface&lt;/a&gt;:&lt;/strong&gt;&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; SELECT maxLength("name") FROM player&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;&lt;span class="pl-k"&gt;let&lt;/span&gt; request &lt;span class="pl-k"&gt;=&lt;/span&gt; Player.&lt;span class="pl-c1"&gt;select&lt;/span&gt;(maxLength.&lt;span class="pl-c1"&gt;apply&lt;/span&gt;(nameColumn))
&lt;span class="pl-k"&gt;try&lt;/span&gt; &lt;span class="pl-c1"&gt;Int&lt;/span&gt;.&lt;span class="pl-c1"&gt;fetchOne&lt;/span&gt;(db, request) &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Int?&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h2&gt;&lt;a id="user-content-database-schema-introspection" class="anchor" aria-hidden="true" href="#database-schema-introspection"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Database Schema Introspection&lt;/h2&gt;
&lt;p&gt;GRDB comes with a set of schema introspection methods:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;try&lt;/span&gt; dbQueue.&lt;span class="pl-smi"&gt;read&lt;/span&gt; { db &lt;span class="pl-k"&gt;in&lt;/span&gt;
    &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Bool, true if the table exists&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;    &lt;span class="pl-k"&gt;try&lt;/span&gt; db.&lt;span class="pl-c1"&gt;tableExists&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;player&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
    
    &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; [ColumnInfo], the columns in the table&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;    &lt;span class="pl-k"&gt;try&lt;/span&gt; db.&lt;span class="pl-c1"&gt;columns&lt;/span&gt;(&lt;span class="pl-c1"&gt;in&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;player&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
    
    &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; PrimaryKeyInfo&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;    &lt;span class="pl-k"&gt;try&lt;/span&gt; db.&lt;span class="pl-c1"&gt;primaryKey&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;player&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
    
    &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; [ForeignKeyInfo], the foreign keys defined on the table&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;    &lt;span class="pl-k"&gt;try&lt;/span&gt; db.&lt;span class="pl-c1"&gt;foreignKeys&lt;/span&gt;(&lt;span class="pl-c1"&gt;on&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;player&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
    
    &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; [IndexInfo], the indexes defined on the table&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;    &lt;span class="pl-k"&gt;try&lt;/span&gt; db.&lt;span class="pl-c1"&gt;indexes&lt;/span&gt;(&lt;span class="pl-c1"&gt;on&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;player&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
    
    &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Bool, true if column(s) is a unique key (primary key or unique index)&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;    &lt;span class="pl-k"&gt;try&lt;/span&gt; db.&lt;span class="pl-c1"&gt;table&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;player&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-c1"&gt;hasUniqueKey&lt;/span&gt;: [&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;email&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;])
}

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Bool, true if argument is the name of an internal SQLite table&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;Database.&lt;span class="pl-c1"&gt;isSQLiteInternalTable&lt;/span&gt;(&lt;span class="pl-k"&gt;...&lt;/span&gt;)

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Bool, true if argument is the name of an internal GRDB table&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;Database.&lt;span class="pl-c1"&gt;isGRDBInternalTable&lt;/span&gt;(&lt;span class="pl-k"&gt;...&lt;/span&gt;)&lt;/pre&gt;&lt;/div&gt;
&lt;h2&gt;&lt;a id="user-content-row-adapters" class="anchor" aria-hidden="true" href="#row-adapters"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Row Adapters&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;Row adapters let you present database rows in the way expected by the row consumers.&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;They basically help two incompatible row interfaces to work together. For example, a row consumer expects a column named "consumed", but the produced row has a column named "produced".&lt;/p&gt;
&lt;p&gt;In this case, the &lt;code&gt;ColumnMapping&lt;/code&gt; row adapter comes in handy:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Fetch a 'produced' column, and consume a 'consumed' column:&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;&lt;span class="pl-k"&gt;let&lt;/span&gt; adapter &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;ColumnMapping&lt;/span&gt;([&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;consumed&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;&lt;span class="pl-k"&gt;:&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;produced&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;])
&lt;span class="pl-k"&gt;let&lt;/span&gt; row &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-k"&gt;try&lt;/span&gt; Row.&lt;span class="pl-c1"&gt;fetchOne&lt;/span&gt;(db, &lt;span class="pl-c1"&gt;sql&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;SELECT 'Hello' AS produced&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-c1"&gt;adapter&lt;/span&gt;: adapter)&lt;span class="pl-k"&gt;!&lt;/span&gt;
row[&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;consumed&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;] &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; "Hello"&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;row[&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;produced&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;] &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; nil&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Row adapters are values that adopt the &lt;a href="http://groue.github.io/GRDB.swift/docs/4.5/Protocols/RowAdapter.html" rel="nofollow"&gt;RowAdapter&lt;/a&gt; protocol. You can implement your own custom adapters (&lt;a href="#what-are-experimental-features"&gt;&lt;strong&gt;&lt;g-emoji class="g-emoji" alias="fire" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f525.png"&gt;🔥&lt;/g-emoji&gt; EXPERIMENTAL&lt;/strong&gt;&lt;/a&gt;), or use one of the four built-in adapters, described below.&lt;/p&gt;
&lt;p&gt;To see how row adapters can be used, see &lt;a href="#joined-queries-support"&gt;Joined Queries Support&lt;/a&gt;.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-columnmapping" class="anchor" aria-hidden="true" href="#columnmapping"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;ColumnMapping&lt;/h3&gt;
&lt;p&gt;ColumnMapping renames columns. Build one with a dictionary whose keys are adapted column names, and values the column names in the raw row:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; [newName:"Hello"]&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;&lt;span class="pl-k"&gt;let&lt;/span&gt; adapter &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;ColumnMapping&lt;/span&gt;([&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;newName&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;&lt;span class="pl-k"&gt;:&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;oldName&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;])
&lt;span class="pl-k"&gt;let&lt;/span&gt; row &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-k"&gt;try&lt;/span&gt; Row.&lt;span class="pl-c1"&gt;fetchOne&lt;/span&gt;(db, &lt;span class="pl-c1"&gt;sql&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;SELECT 'Hello' AS oldName&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-c1"&gt;adapter&lt;/span&gt;: adapter)&lt;span class="pl-k"&gt;!&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h3&gt;&lt;a id="user-content-suffixrowadapter" class="anchor" aria-hidden="true" href="#suffixrowadapter"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;SuffixRowAdapter&lt;/h3&gt;
&lt;p&gt;&lt;code&gt;SuffixRowAdapter&lt;/code&gt; hides the first columns in a row:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; [b:1 c:2]&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;&lt;span class="pl-k"&gt;let&lt;/span&gt; adapter &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;SuffixRowAdapter&lt;/span&gt;(&lt;span class="pl-c1"&gt;fromIndex&lt;/span&gt;: &lt;span class="pl-c1"&gt;1&lt;/span&gt;)
&lt;span class="pl-k"&gt;let&lt;/span&gt; row &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-k"&gt;try&lt;/span&gt; Row.&lt;span class="pl-c1"&gt;fetchOne&lt;/span&gt;(db, &lt;span class="pl-c1"&gt;sql&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;SELECT 0 AS a, 1 AS b, 2 AS c&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-c1"&gt;adapter&lt;/span&gt;: adapter)&lt;span class="pl-k"&gt;!&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h3&gt;&lt;a id="user-content-rangerowadapter" class="anchor" aria-hidden="true" href="#rangerowadapter"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;RangeRowAdapter&lt;/h3&gt;
&lt;p&gt;&lt;code&gt;RangeRowAdapter&lt;/code&gt; only exposes a range of columns.&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; [b:1]&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;&lt;span class="pl-k"&gt;let&lt;/span&gt; adapter &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;RangeRowAdapter&lt;/span&gt;(&lt;span class="pl-c1"&gt;1&lt;/span&gt;&lt;span class="pl-k"&gt;..&amp;lt;&lt;/span&gt;&lt;span class="pl-c1"&gt;2&lt;/span&gt;)
&lt;span class="pl-k"&gt;let&lt;/span&gt; row &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-k"&gt;try&lt;/span&gt; Row.&lt;span class="pl-c1"&gt;fetchOne&lt;/span&gt;(db, &lt;span class="pl-c1"&gt;sql&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;SELECT 0 AS a, 1 AS b, 2 AS c&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-c1"&gt;adapter&lt;/span&gt;: adapter)&lt;span class="pl-k"&gt;!&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h3&gt;&lt;a id="user-content-emptyrowadapter" class="anchor" aria-hidden="true" href="#emptyrowadapter"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;EmptyRowAdapter&lt;/h3&gt;
&lt;p&gt;&lt;code&gt;EmptyRowAdapter&lt;/code&gt; hides all columns.&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;let&lt;/span&gt; adapter &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;EmptyRowAdapter&lt;/span&gt;()
&lt;span class="pl-k"&gt;let&lt;/span&gt; row &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-k"&gt;try&lt;/span&gt; Row.&lt;span class="pl-c1"&gt;fetchOne&lt;/span&gt;(db, &lt;span class="pl-c1"&gt;sql&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;SELECT 0 AS a, 1 AS b, 2 AS c&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-c1"&gt;adapter&lt;/span&gt;: adapter)&lt;span class="pl-k"&gt;!&lt;/span&gt;
row.&lt;span class="pl-c1"&gt;isEmpty&lt;/span&gt; &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; true&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;This limit adapter may turn out useful in some narrow use cases. You'll be happy to find it when you need it.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-scopeadapter" class="anchor" aria-hidden="true" href="#scopeadapter"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;ScopeAdapter&lt;/h3&gt;
&lt;p&gt;&lt;code&gt;ScopeAdapter&lt;/code&gt; defines &lt;em&gt;row scopes&lt;/em&gt;:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;let&lt;/span&gt; adapter &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;ScopeAdapter&lt;/span&gt;([
    &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;left&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;&lt;span class="pl-k"&gt;:&lt;/span&gt; &lt;span class="pl-c1"&gt;RangeRowAdapter&lt;/span&gt;(&lt;span class="pl-c1"&gt;0&lt;/span&gt;&lt;span class="pl-k"&gt;..&amp;lt;&lt;/span&gt;&lt;span class="pl-c1"&gt;2&lt;/span&gt;),
    &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;right&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;&lt;span class="pl-k"&gt;:&lt;/span&gt; &lt;span class="pl-c1"&gt;RangeRowAdapter&lt;/span&gt;(&lt;span class="pl-c1"&gt;2&lt;/span&gt;&lt;span class="pl-k"&gt;..&amp;lt;&lt;/span&gt;&lt;span class="pl-c1"&gt;4&lt;/span&gt;)])
&lt;span class="pl-k"&gt;let&lt;/span&gt; row &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-k"&gt;try&lt;/span&gt; Row.&lt;span class="pl-c1"&gt;fetchOne&lt;/span&gt;(db, &lt;span class="pl-c1"&gt;sql&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;SELECT 0 AS a, 1 AS b, 2 AS c, 3 AS d&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-c1"&gt;adapter&lt;/span&gt;: adapter)&lt;span class="pl-k"&gt;!&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;ScopeAdapter does not change the columns and values of the fetched row. Instead, it defines &lt;em&gt;scopes&lt;/em&gt;, which you access through the &lt;code&gt;Row.scopes&lt;/code&gt; property:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;row                   &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; [a:0 b:1 c:2 d:3]&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;row.&lt;span class="pl-smi"&gt;scopes&lt;/span&gt;[&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;left&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;]    &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; [a:0 b:1]&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;row.&lt;span class="pl-smi"&gt;scopes&lt;/span&gt;[&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;right&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;]   &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; [c:2 d:3]&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;row.&lt;span class="pl-smi"&gt;scopes&lt;/span&gt;[&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;missing&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;] &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; nil&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Scopes can be nested:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;let&lt;/span&gt; adapter &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;ScopeAdapter&lt;/span&gt;([
    &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;left&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;&lt;span class="pl-k"&gt;:&lt;/span&gt; &lt;span class="pl-c1"&gt;ScopeAdapter&lt;/span&gt;([
        &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;left&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;&lt;span class="pl-k"&gt;:&lt;/span&gt; &lt;span class="pl-c1"&gt;RangeRowAdapter&lt;/span&gt;(&lt;span class="pl-c1"&gt;0&lt;/span&gt;&lt;span class="pl-k"&gt;..&amp;lt;&lt;/span&gt;&lt;span class="pl-c1"&gt;1&lt;/span&gt;),
        &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;right&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;&lt;span class="pl-k"&gt;:&lt;/span&gt; &lt;span class="pl-c1"&gt;RangeRowAdapter&lt;/span&gt;(&lt;span class="pl-c1"&gt;1&lt;/span&gt;&lt;span class="pl-k"&gt;..&amp;lt;&lt;/span&gt;&lt;span class="pl-c1"&gt;2&lt;/span&gt;)]),
    &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;right&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;&lt;span class="pl-k"&gt;:&lt;/span&gt; &lt;span class="pl-c1"&gt;ScopeAdapter&lt;/span&gt;([
        &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;left&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;&lt;span class="pl-k"&gt;:&lt;/span&gt; &lt;span class="pl-c1"&gt;RangeRowAdapter&lt;/span&gt;(&lt;span class="pl-c1"&gt;2&lt;/span&gt;&lt;span class="pl-k"&gt;..&amp;lt;&lt;/span&gt;&lt;span class="pl-c1"&gt;3&lt;/span&gt;),
        &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;right&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;&lt;span class="pl-k"&gt;:&lt;/span&gt; &lt;span class="pl-c1"&gt;RangeRowAdapter&lt;/span&gt;(&lt;span class="pl-c1"&gt;3&lt;/span&gt;&lt;span class="pl-k"&gt;..&amp;lt;&lt;/span&gt;&lt;span class="pl-c1"&gt;4&lt;/span&gt;)])
    ])
&lt;span class="pl-k"&gt;let&lt;/span&gt; row &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-k"&gt;try&lt;/span&gt; Row.&lt;span class="pl-c1"&gt;fetchOne&lt;/span&gt;(db, &lt;span class="pl-c1"&gt;sql&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;SELECT 0 AS a, 1 AS b, 2 AS c, 3 AS d&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-c1"&gt;adapter&lt;/span&gt;: adapter)&lt;span class="pl-k"&gt;!&lt;/span&gt;

&lt;span class="pl-k"&gt;let&lt;/span&gt; leftRow &lt;span class="pl-k"&gt;=&lt;/span&gt; row.&lt;span class="pl-smi"&gt;scopes&lt;/span&gt;[&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;left&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;]&lt;span class="pl-k"&gt;!&lt;/span&gt;
leftRow.&lt;span class="pl-smi"&gt;scopes&lt;/span&gt;[&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;left&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;]  &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; [a:0]&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;leftRow.&lt;span class="pl-smi"&gt;scopes&lt;/span&gt;[&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;right&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;] &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; [b:1]&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;
&lt;span class="pl-k"&gt;let&lt;/span&gt; rightRow &lt;span class="pl-k"&gt;=&lt;/span&gt; row.&lt;span class="pl-smi"&gt;scopes&lt;/span&gt;[&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;right&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;]&lt;span class="pl-k"&gt;!&lt;/span&gt;
rightRow.&lt;span class="pl-smi"&gt;scopes&lt;/span&gt;[&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;left&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;]  &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; [c:2]&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;rightRow.&lt;span class="pl-smi"&gt;scopes&lt;/span&gt;[&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;right&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;] &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; [d:3]&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Any adapter can be extended with scopes:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;let&lt;/span&gt; baseAdapter &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;RangeRowAdapter&lt;/span&gt;(&lt;span class="pl-c1"&gt;0&lt;/span&gt;&lt;span class="pl-k"&gt;..&amp;lt;&lt;/span&gt;&lt;span class="pl-c1"&gt;2&lt;/span&gt;)
&lt;span class="pl-k"&gt;let&lt;/span&gt; adapter &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;ScopeAdapter&lt;/span&gt;(&lt;span class="pl-c1"&gt;base&lt;/span&gt;: baseAdapter, &lt;span class="pl-c1"&gt;scopes&lt;/span&gt;: [
    &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;remainder&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;&lt;span class="pl-k"&gt;:&lt;/span&gt; &lt;span class="pl-c1"&gt;SuffixRowAdapter&lt;/span&gt;(&lt;span class="pl-c1"&gt;fromIndex&lt;/span&gt;: &lt;span class="pl-c1"&gt;2&lt;/span&gt;)])
&lt;span class="pl-k"&gt;let&lt;/span&gt; row &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-k"&gt;try&lt;/span&gt; Row.&lt;span class="pl-c1"&gt;fetchOne&lt;/span&gt;(db, &lt;span class="pl-c1"&gt;sql&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;SELECT 0 AS a, 1 AS b, 2 AS c, 3 AS d&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-c1"&gt;adapter&lt;/span&gt;: adapter)&lt;span class="pl-k"&gt;!&lt;/span&gt;

row &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; [a:0 b:1]&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;row.&lt;span class="pl-smi"&gt;scopes&lt;/span&gt;[&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;remainder&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;] &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; [c:2 d:3]&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h2&gt;&lt;a id="user-content-raw-sqlite-pointers" class="anchor" aria-hidden="true" href="#raw-sqlite-pointers"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Raw SQLite Pointers&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;If not all SQLite APIs are exposed in GRDB, you can still use the &lt;a href="https://www.sqlite.org/c3ref/intro.html" rel="nofollow"&gt;SQLite C Interface&lt;/a&gt; and call &lt;a href="https://www.sqlite.org/c3ref/funclist.html" rel="nofollow"&gt;SQLite C functions&lt;/a&gt;.&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Those functions are embedded right into the &lt;a href="Documentation/CustomSQLiteBuilds.md"&gt;GRDBCustom&lt;/a&gt; module. Otherwise, you'll need to import &lt;code&gt;SQLite3&lt;/code&gt;, &lt;code&gt;SQLCipher&lt;/code&gt;, or &lt;code&gt;CSQLite&lt;/code&gt;, depending on the GRDB flavor you are using:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Swift Package Manager&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;&lt;span class="pl-k"&gt;import&lt;/span&gt; &lt;span class="pl-en"&gt;CSQLite&lt;/span&gt;

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; SQLCipher&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;&lt;span class="pl-k"&gt;import&lt;/span&gt; &lt;span class="pl-en"&gt;SQLCipher&lt;/span&gt;

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; System SQLite&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;&lt;span class="pl-k"&gt;import&lt;/span&gt; &lt;span class="pl-en"&gt;SQLite3&lt;/span&gt;

&lt;span class="pl-k"&gt;let&lt;/span&gt; sqliteVersion &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;String&lt;/span&gt;(&lt;span class="pl-c1"&gt;cString&lt;/span&gt;: &lt;span class="pl-c1"&gt;sqlite3_libversion&lt;/span&gt;())&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Raw pointers to database connections and statements are available through the &lt;code&gt;Database.sqliteConnection&lt;/code&gt; and &lt;code&gt;Statement.sqliteStatement&lt;/code&gt; properties:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;try&lt;/span&gt; dbQueue.&lt;span class="pl-smi"&gt;read&lt;/span&gt; { db &lt;span class="pl-k"&gt;in&lt;/span&gt;
    &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; The raw pointer to a database connection:&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;    &lt;span class="pl-k"&gt;let&lt;/span&gt; sqliteConnection &lt;span class="pl-k"&gt;=&lt;/span&gt; db.&lt;span class="pl-smi"&gt;sqliteConnection&lt;/span&gt;

    &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; The raw pointer to a statement:&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;    &lt;span class="pl-k"&gt;let&lt;/span&gt; statement &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-k"&gt;try&lt;/span&gt; db.&lt;span class="pl-c1"&gt;makeSelectStatement&lt;/span&gt;(&lt;span class="pl-c1"&gt;sql&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;SELECT ...&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
    &lt;span class="pl-k"&gt;let&lt;/span&gt; sqliteStatement &lt;span class="pl-k"&gt;=&lt;/span&gt; statement.&lt;span class="pl-smi"&gt;sqliteStatement&lt;/span&gt;
}&lt;/pre&gt;&lt;/div&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;g-emoji class="g-emoji" alias="point_up" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/261d.png"&gt;☝️&lt;/g-emoji&gt; &lt;strong&gt;Notes&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Those pointers are owned by GRDB: don't close connections or finalize statements created by GRDB.&lt;/li&gt;
&lt;li&gt;GRDB opens SQLite connections in the "&lt;a href="https://www.sqlite.org/threadsafe.html" rel="nofollow"&gt;multi-thread mode&lt;/a&gt;", which (oddly) means that &lt;strong&gt;they are not thread-safe&lt;/strong&gt;. Make sure you touch raw databases and statements inside their dedicated dispatch queues.&lt;/li&gt;
&lt;li&gt;Use the raw SQLite C Interface at your own risk. GRDB won't prevent you from shooting yourself in the foot.&lt;/li&gt;
&lt;/ul&gt;
&lt;/blockquote&gt;
&lt;h1&gt;&lt;a id="user-content-records" class="anchor" aria-hidden="true" href="#records"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Records&lt;/h1&gt;
&lt;p&gt;&lt;strong&gt;On top of the &lt;a href="#sqlite-api"&gt;SQLite API&lt;/a&gt;, GRDB provides protocols and a class&lt;/strong&gt; that help manipulating database rows as regular objects named "records":&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;try&lt;/span&gt; dbQueue.&lt;span class="pl-smi"&gt;write&lt;/span&gt; { db &lt;span class="pl-k"&gt;in&lt;/span&gt;
    &lt;span class="pl-k"&gt;if&lt;/span&gt; &lt;span class="pl-k"&gt;var&lt;/span&gt; place &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-k"&gt;try&lt;/span&gt; Place.&lt;span class="pl-c1"&gt;fetchOne&lt;/span&gt;(db, &lt;span class="pl-c1"&gt;key&lt;/span&gt;: &lt;span class="pl-c1"&gt;1&lt;/span&gt;) {
        place.&lt;span class="pl-smi"&gt;isFavorite&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;true&lt;/span&gt;
        &lt;span class="pl-k"&gt;try&lt;/span&gt; place.&lt;span class="pl-c1"&gt;update&lt;/span&gt;(db)
    }
}&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Of course, you need to open a &lt;a href="#database-connections"&gt;database connection&lt;/a&gt;, and &lt;a href="#database-schema"&gt;create database tables&lt;/a&gt; first.&lt;/p&gt;
&lt;p&gt;To define your custom records, you subclass the ready-made &lt;code&gt;Record&lt;/code&gt; class, or you extend your structs and classes with protocols that come with focused sets of features: fetching methods, persistence methods, record comparison...&lt;/p&gt;
&lt;p&gt;Extending structs with record protocols is more "swifty". Subclassing the Record class is more "classic". You can choose either way. See some &lt;a href="#examples-of-record-definitions"&gt;examples of record definitions&lt;/a&gt;, and the &lt;a href="#list-of-record-methods"&gt;list of record methods&lt;/a&gt; for an overview.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;g-emoji class="g-emoji" alias="point_up" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/261d.png"&gt;☝️&lt;/g-emoji&gt; &lt;strong&gt;Note&lt;/strong&gt;: if you are familiar with Core Data's NSManagedObject or Realm's Object, you may experience a cultural shock: GRDB records are not uniqued, do not auto-update, and do not lazy-load. This is both a purpose, and a consequence of protocol-oriented programming. You should read &lt;a href="https://medium.com/@gwendal.roue/how-to-build-an-ios-application-with-sqlite-and-grdb-swift-d023a06c29b3" rel="nofollow"&gt;How to build an iOS application with SQLite and GRDB.swift&lt;/a&gt; for a general introduction.&lt;/p&gt;
&lt;p&gt;&lt;g-emoji class="g-emoji" alias="bulb" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f4a1.png"&gt;💡&lt;/g-emoji&gt; &lt;strong&gt;Tip&lt;/strong&gt;: after you have read this chapter, check the &lt;a href="Documentation/GoodPracticesForDesigningRecordTypes.md"&gt;Good Practices for Designing Record Types&lt;/a&gt; Guide.&lt;/p&gt;
&lt;p&gt;&lt;g-emoji class="g-emoji" alias="bulb" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f4a1.png"&gt;💡&lt;/g-emoji&gt; &lt;strong&gt;Tip&lt;/strong&gt;: see the &lt;a href="Documentation/DemoApps/GRDBDemoiOS/README.md"&gt;Demo Application&lt;/a&gt; for a sample app that uses records.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;strong&gt;Overview&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="#inserting-records"&gt;Inserting Records&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#fetching-records"&gt;Fetching Records&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#updating-records"&gt;Updating Records&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#deleting-records"&gt;Deleting Records&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#counting-records"&gt;Counting Records&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;Protocols and the Record Class&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="#record-protocols-overview"&gt;Record Protocols Overview&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#fetchablerecord-protocol"&gt;FetchableRecord Protocol&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#tablerecord-protocol"&gt;TableRecord Protocol&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#persistablerecord-protocol"&gt;PersistableRecord Protocol&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="#persistence-methods"&gt;Persistence Methods&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#customizing-the-persistence-methods"&gt;Customizing the Persistence Methods&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="#codable-records"&gt;Codable Records&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#record-class"&gt;Record Class&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#record-comparison"&gt;Record Comparison&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#record-customization-options"&gt;Record Customization Options&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;Records in a Glance&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="#examples-of-record-definitions"&gt;Examples of Record Definitions&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#list-of-record-methods"&gt;List of Record Methods&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;&lt;a id="user-content-inserting-records" class="anchor" aria-hidden="true" href="#inserting-records"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Inserting Records&lt;/h3&gt;
&lt;p&gt;To insert a record in the database, call the &lt;code&gt;insert&lt;/code&gt; method:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;let&lt;/span&gt; player &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;Player&lt;/span&gt;(&lt;span class="pl-c1"&gt;name&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;Arthur&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-c1"&gt;email&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;arthur@example.com&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
&lt;span class="pl-k"&gt;try&lt;/span&gt; player.&lt;span class="pl-c1"&gt;insert&lt;/span&gt;(db)&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;g-emoji class="g-emoji" alias="point_right" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f449.png"&gt;👉&lt;/g-emoji&gt; &lt;code&gt;insert&lt;/code&gt; is available for subclasses of the &lt;a href="#record-class"&gt;Record&lt;/a&gt; class, and types that adopt the &lt;a href="#persistablerecord-protocol"&gt;PersistableRecord&lt;/a&gt; protocol.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-fetching-records" class="anchor" aria-hidden="true" href="#fetching-records"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Fetching Records&lt;/h3&gt;
&lt;p&gt;To fetch records from the database, call a &lt;a href="#fetching-methods"&gt;fetching method&lt;/a&gt;:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;let&lt;/span&gt; arthur &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-k"&gt;try&lt;/span&gt; Player.&lt;span class="pl-c1"&gt;fetchOne&lt;/span&gt;(db,            &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Player?&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;    &lt;span class="pl-c1"&gt;sql&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;SELECT * FROM players WHERE name = ?&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;,
    &lt;span class="pl-c1"&gt;arguments&lt;/span&gt;: [&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;Arthur&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;])

&lt;span class="pl-k"&gt;let&lt;/span&gt; bestPlayers &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-k"&gt;try&lt;/span&gt; Player                    &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; [Player]&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;    .&lt;span class="pl-c1"&gt;order&lt;/span&gt;(&lt;span class="pl-c1"&gt;Column&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;score&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;).&lt;span class="pl-smi"&gt;desc&lt;/span&gt;)
    .&lt;span class="pl-c1"&gt;limit&lt;/span&gt;(&lt;span class="pl-c1"&gt;10&lt;/span&gt;)
    .&lt;span class="pl-c1"&gt;fetchAll&lt;/span&gt;(db)
    
&lt;span class="pl-k"&gt;let&lt;/span&gt; spain &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-k"&gt;try&lt;/span&gt; Country.&lt;span class="pl-c1"&gt;fetchOne&lt;/span&gt;(db, &lt;span class="pl-c1"&gt;key&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;ES&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;) &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Country?&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;g-emoji class="g-emoji" alias="point_right" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f449.png"&gt;👉&lt;/g-emoji&gt; Fetching from raw SQL is available for subclasses of the &lt;a href="#record-class"&gt;Record&lt;/a&gt; class, and types that adopt the &lt;a href="#fetchablerecord-protocol"&gt;FetchableRecord&lt;/a&gt; protocol.&lt;/p&gt;
&lt;p&gt;&lt;g-emoji class="g-emoji" alias="point_right" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f449.png"&gt;👉&lt;/g-emoji&gt; Fetching without SQL, using the &lt;a href="#the-query-interface"&gt;query interface&lt;/a&gt;, is available for subclasses of the &lt;a href="#record-class"&gt;Record&lt;/a&gt; class, and types that adopt both &lt;a href="#fetchablerecord-protocol"&gt;FetchableRecord&lt;/a&gt; and &lt;a href="#tablerecord-protocol"&gt;TableRecord&lt;/a&gt; protocol.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-updating-records" class="anchor" aria-hidden="true" href="#updating-records"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Updating Records&lt;/h3&gt;
&lt;p&gt;To update a record in the database, call the &lt;code&gt;update&lt;/code&gt; method:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;if&lt;/span&gt; &lt;span class="pl-k"&gt;let&lt;/span&gt; player &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-k"&gt;try&lt;/span&gt; Player.&lt;span class="pl-c1"&gt;fetchOne&lt;/span&gt;(db, &lt;span class="pl-c1"&gt;key&lt;/span&gt;: &lt;span class="pl-c1"&gt;1&lt;/span&gt;) 
    player.&lt;span class="pl-smi"&gt;score&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;1000&lt;/span&gt;
    &lt;span class="pl-k"&gt;try&lt;/span&gt; player.&lt;span class="pl-c1"&gt;update&lt;/span&gt;(db)
}&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;It is possible to &lt;a href="#record-comparison"&gt;avoid useless updates&lt;/a&gt;:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;if&lt;/span&gt; &lt;span class="pl-k"&gt;var&lt;/span&gt; player &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-k"&gt;try&lt;/span&gt; Player.&lt;span class="pl-c1"&gt;fetchOne&lt;/span&gt;(db, &lt;span class="pl-c1"&gt;key&lt;/span&gt;: &lt;span class="pl-c1"&gt;1&lt;/span&gt;) {
    &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; does not hit the database if score has not changed&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;    &lt;span class="pl-k"&gt;try&lt;/span&gt; player.&lt;span class="pl-c1"&gt;updateChanges&lt;/span&gt;(db) {
        &lt;span class="pl-c1"&gt;$0&lt;/span&gt;.&lt;span class="pl-smi"&gt;score&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;1000&lt;/span&gt;
    }
}&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;For batch updates, execute an &lt;a href="#executing-updates"&gt;SQL query&lt;/a&gt;:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;try&lt;/span&gt; db.&lt;span class="pl-c1"&gt;execute&lt;/span&gt;(&lt;span class="pl-c1"&gt;sql&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;UPDATE player SET synchronized = 1&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;g-emoji class="g-emoji" alias="point_right" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f449.png"&gt;👉&lt;/g-emoji&gt; update methods are available for subclasses of the &lt;a href="#record-class"&gt;Record&lt;/a&gt; class, and types that adopt the &lt;a href="#persistablerecord-protocol"&gt;PersistableRecord&lt;/a&gt; protocol.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-deleting-records" class="anchor" aria-hidden="true" href="#deleting-records"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Deleting Records&lt;/h3&gt;
&lt;p&gt;To delete a record in the database, call the &lt;code&gt;delete&lt;/code&gt; method:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;if&lt;/span&gt; &lt;span class="pl-k"&gt;let&lt;/span&gt; player &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-k"&gt;try&lt;/span&gt; Player.&lt;span class="pl-c1"&gt;fetchOne&lt;/span&gt;(db, &lt;span class="pl-c1"&gt;key&lt;/span&gt;: &lt;span class="pl-c1"&gt;1&lt;/span&gt;) {
    &lt;span class="pl-k"&gt;try&lt;/span&gt; player.&lt;span class="pl-c1"&gt;delete&lt;/span&gt;(db)
}&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;You can also delete by primary key, or any unique index:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;try&lt;/span&gt; Player.&lt;span class="pl-c1"&gt;deleteOne&lt;/span&gt;(db, &lt;span class="pl-c1"&gt;key&lt;/span&gt;: &lt;span class="pl-c1"&gt;1&lt;/span&gt;)
&lt;span class="pl-k"&gt;try&lt;/span&gt; Player.&lt;span class="pl-c1"&gt;deleteOne&lt;/span&gt;(db, &lt;span class="pl-c1"&gt;key&lt;/span&gt;: [&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;email&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;&lt;span class="pl-k"&gt;:&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;arthur@example.com&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;])
&lt;span class="pl-k"&gt;try&lt;/span&gt; Country.&lt;span class="pl-c1"&gt;deleteAll&lt;/span&gt;(db, &lt;span class="pl-c1"&gt;keys&lt;/span&gt;: [&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;FR&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;US&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;])&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;For batch deletes, execute an &lt;a href="#executing-updates"&gt;SQL query&lt;/a&gt;, or see the &lt;a href="#the-query-interface"&gt;query interface&lt;/a&gt;:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;try&lt;/span&gt; Player
    .&lt;span class="pl-c1"&gt;filter&lt;/span&gt;(&lt;span class="pl-c1"&gt;Column&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;email&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;) &lt;span class="pl-k"&gt;==&lt;/span&gt; &lt;span class="pl-c1"&gt;nil&lt;/span&gt;)
    .&lt;span class="pl-c1"&gt;deleteAll&lt;/span&gt;(db)&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;g-emoji class="g-emoji" alias="point_right" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f449.png"&gt;👉&lt;/g-emoji&gt; delete methods are available for subclasses of the &lt;a href="#record-class"&gt;Record&lt;/a&gt; class, and types that adopt the &lt;a href="#persistablerecord-protocol"&gt;PersistableRecord&lt;/a&gt; protocol.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-counting-records" class="anchor" aria-hidden="true" href="#counting-records"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Counting Records&lt;/h3&gt;
&lt;p&gt;To count records, call the &lt;code&gt;fetchCount&lt;/code&gt; method:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;let&lt;/span&gt; playerCount&lt;span class="pl-k"&gt;:&lt;/span&gt; &lt;span class="pl-c1"&gt;Int&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-k"&gt;try&lt;/span&gt; Player.&lt;span class="pl-c1"&gt;fetchCount&lt;/span&gt;(db)

&lt;span class="pl-k"&gt;let&lt;/span&gt; playerWithEmailCount&lt;span class="pl-k"&gt;:&lt;/span&gt; &lt;span class="pl-c1"&gt;Int&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-k"&gt;try&lt;/span&gt; Player
    .&lt;span class="pl-c1"&gt;filter&lt;/span&gt;(&lt;span class="pl-c1"&gt;Column&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;email&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;) &lt;span class="pl-k"&gt;==&lt;/span&gt; &lt;span class="pl-c1"&gt;nil&lt;/span&gt;)
    .&lt;span class="pl-c1"&gt;fetchCount&lt;/span&gt;(db)&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;g-emoji class="g-emoji" alias="point_right" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f449.png"&gt;👉&lt;/g-emoji&gt; &lt;code&gt;fetchCount&lt;/code&gt; is available for subclasses of the &lt;a href="#record-class"&gt;Record&lt;/a&gt; class, and types that adopt the &lt;a href="#tablerecord-protocol"&gt;TableRecord&lt;/a&gt; protocol.&lt;/p&gt;
&lt;p&gt;Details follow:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="#record-protocols-overview"&gt;Record Protocols Overview&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#fetchablerecord-protocol"&gt;FetchableRecord Protocol&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#tablerecord-protocol"&gt;TableRecord Protocol&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#persistablerecord-protocol"&gt;PersistableRecord Protocol&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#codable-records"&gt;Codable Records&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#record-class"&gt;Record Class&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#record-comparison"&gt;Record Comparison&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#record-customization-options"&gt;Record Customization Options&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#examples-of-record-definitions"&gt;Examples of Record Definitions&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#list-of-record-methods"&gt;List of Record Methods&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-record-protocols-overview" class="anchor" aria-hidden="true" href="#record-protocols-overview"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Record Protocols Overview&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;GRDB ships with three record protocols&lt;/strong&gt;. Your own types will adopt one or several of them, according to the abilities you want to extend your types with.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="#fetchablerecord-protocol"&gt;FetchableRecord&lt;/a&gt; is able to &lt;strong&gt;decode database rows&lt;/strong&gt;.&lt;/p&gt;
&lt;p&gt;It is always possible to decode rows without this protocol:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;struct&lt;/span&gt; &lt;span class="pl-en"&gt;Place&lt;/span&gt; { &lt;span class="pl-k"&gt;...&lt;/span&gt; }
&lt;span class="pl-k"&gt;try&lt;/span&gt; dbQueue.&lt;span class="pl-smi"&gt;read&lt;/span&gt; { db &lt;span class="pl-k"&gt;in&lt;/span&gt;
    &lt;span class="pl-k"&gt;let&lt;/span&gt; rows &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-k"&gt;try&lt;/span&gt; Row.&lt;span class="pl-c1"&gt;fetchAll&lt;/span&gt;(db, &lt;span class="pl-c1"&gt;sql&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;SELECT * FROM place&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
    &lt;span class="pl-k"&gt;let&lt;/span&gt; places&lt;span class="pl-k"&gt;:&lt;/span&gt; [Place] &lt;span class="pl-k"&gt;=&lt;/span&gt; rows.&lt;span class="pl-c1"&gt;map&lt;/span&gt; { row &lt;span class="pl-k"&gt;in&lt;/span&gt;
        &lt;span class="pl-k"&gt;return&lt;/span&gt; &lt;span class="pl-c1"&gt;Place&lt;/span&gt;(
            &lt;span class="pl-c1"&gt;id&lt;/span&gt;: row[&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;id&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;],
            &lt;span class="pl-c1"&gt;title&lt;/span&gt;: row[&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;title&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;],
            &lt;span class="pl-c1"&gt;coordinate&lt;/span&gt;: &lt;span class="pl-c1"&gt;CLLocationCoordinate2D&lt;/span&gt;(
                &lt;span class="pl-c1"&gt;latitude&lt;/span&gt;: row[&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;latitude&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;],
                &lt;span class="pl-c1"&gt;longitude&lt;/span&gt;: row[&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;longitude&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;]))
        )
    }
}&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;But FetchableRecord lets you write code that is easier to read, and more efficient as well, both in terms of performance and memory usage:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;struct&lt;/span&gt; &lt;span class="pl-en"&gt;Place&lt;/span&gt;: &lt;span class="pl-e"&gt;FetchableRecord &lt;/span&gt;{ &lt;span class="pl-k"&gt;...&lt;/span&gt; }
&lt;span class="pl-k"&gt;try&lt;/span&gt; dbQueue.&lt;span class="pl-smi"&gt;read&lt;/span&gt; { db &lt;span class="pl-k"&gt;in&lt;/span&gt;
    &lt;span class="pl-k"&gt;let&lt;/span&gt; places &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-k"&gt;try&lt;/span&gt; Place.&lt;span class="pl-c1"&gt;fetchAll&lt;/span&gt;(db, &lt;span class="pl-c1"&gt;sql&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;SELECT * FROM place&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
}&lt;/pre&gt;&lt;/div&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;g-emoji class="g-emoji" alias="bulb" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f4a1.png"&gt;💡&lt;/g-emoji&gt; &lt;strong&gt;Tip&lt;/strong&gt;: FetchableRecord can derive its implementation from the standard Decodable protocol. See &lt;a href="#codable-records"&gt;Codable Records&lt;/a&gt; for more information.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;FetchableRecord can decode database rows, but it is not able to build SQL requests for you. For that, you also need TableRecord:&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="#tablerecord-protocol"&gt;TableRecord&lt;/a&gt; is able to &lt;strong&gt;generate SQL queries&lt;/strong&gt;:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;struct&lt;/span&gt; &lt;span class="pl-en"&gt;Place&lt;/span&gt;: &lt;span class="pl-e"&gt;TableRecord &lt;/span&gt;{ &lt;span class="pl-k"&gt;...&lt;/span&gt; }
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; SELECT * FROM place ORDER BY title&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;&lt;span class="pl-k"&gt;let&lt;/span&gt; request &lt;span class="pl-k"&gt;=&lt;/span&gt; Place.&lt;span class="pl-c1"&gt;order&lt;/span&gt;(&lt;span class="pl-c1"&gt;Column&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;title&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;))&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;When a type adopts both TableRecord and FetchableRecord, it can load from those requests:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;struct&lt;/span&gt; &lt;span class="pl-en"&gt;Place&lt;/span&gt;: &lt;span class="pl-e"&gt;TableRecord&lt;/span&gt;, &lt;span class="pl-e"&gt;FetchableRecord &lt;/span&gt;{ &lt;span class="pl-k"&gt;...&lt;/span&gt; }
&lt;span class="pl-k"&gt;try&lt;/span&gt; dbQueue.&lt;span class="pl-smi"&gt;read&lt;/span&gt; { db &lt;span class="pl-k"&gt;in&lt;/span&gt;
    &lt;span class="pl-k"&gt;let&lt;/span&gt; places &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-k"&gt;try&lt;/span&gt; Place.&lt;span class="pl-c1"&gt;order&lt;/span&gt;(&lt;span class="pl-c1"&gt;Column&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;title&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)).&lt;span class="pl-c1"&gt;fetchAll&lt;/span&gt;(db)
    &lt;span class="pl-k"&gt;let&lt;/span&gt; paris &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-k"&gt;try&lt;/span&gt; Place.&lt;span class="pl-c1"&gt;fetchOne&lt;/span&gt;(&lt;span class="pl-c1"&gt;key&lt;/span&gt;: &lt;span class="pl-c1"&gt;1&lt;/span&gt;)
}&lt;/pre&gt;&lt;/div&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="#persistablerecord-protocol"&gt;PersistableRecord&lt;/a&gt; is able to &lt;strong&gt;write&lt;/strong&gt;: it can create, update, and delete rows in the database:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;struct&lt;/span&gt; &lt;span class="pl-en"&gt;Place&lt;/span&gt; : &lt;span class="pl-e"&gt;PersistableRecord &lt;/span&gt;{ &lt;span class="pl-k"&gt;...&lt;/span&gt; }
&lt;span class="pl-k"&gt;try&lt;/span&gt; dbQueue.&lt;span class="pl-smi"&gt;write&lt;/span&gt; { db &lt;span class="pl-k"&gt;in&lt;/span&gt;
    &lt;span class="pl-k"&gt;try&lt;/span&gt; Place.&lt;span class="pl-c1"&gt;delete&lt;/span&gt;(db, &lt;span class="pl-c1"&gt;key&lt;/span&gt;: &lt;span class="pl-c1"&gt;1&lt;/span&gt;)
    &lt;span class="pl-k"&gt;try&lt;/span&gt; &lt;span class="pl-c1"&gt;Place&lt;/span&gt;(&lt;span class="pl-k"&gt;...&lt;/span&gt;).&lt;span class="pl-c1"&gt;insert&lt;/span&gt;(db)
}&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;A persistable record can also &lt;a href="#record-comparison"&gt;compare&lt;/a&gt; itself against other records, and avoid useless database updates.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;g-emoji class="g-emoji" alias="bulb" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f4a1.png"&gt;💡&lt;/g-emoji&gt; &lt;strong&gt;Tip&lt;/strong&gt;: PersistableRecord can derive its implementation from the standard Encodable protocol. See &lt;a href="#codable-records"&gt;Codable Records&lt;/a&gt; for more information.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-fetchablerecord-protocol" class="anchor" aria-hidden="true" href="#fetchablerecord-protocol"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;FetchableRecord Protocol&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;The FetchableRecord protocol grants fetching methods to any type&lt;/strong&gt; that can be built from a database row:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;protocol&lt;/span&gt; &lt;span class="pl-en"&gt;FetchableRecord&lt;/span&gt; {
    &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;///&lt;/span&gt; Row initializer&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;    &lt;span class="pl-k"&gt;init&lt;/span&gt;(&lt;span class="pl-smi"&gt;&lt;span class="pl-en"&gt;row&lt;/span&gt;&lt;/span&gt;: Row)
}&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;strong&gt;To use FetchableRecord&lt;/strong&gt;, subclass the &lt;a href="#record-class"&gt;Record&lt;/a&gt; class, or adopt it explicitly. For example:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;struct&lt;/span&gt; &lt;span class="pl-en"&gt;Place&lt;/span&gt; {
    &lt;span class="pl-k"&gt;var&lt;/span&gt; id&lt;span class="pl-k"&gt;:&lt;/span&gt; &lt;span class="pl-c1"&gt;Int64&lt;/span&gt;&lt;span class="pl-k"&gt;?&lt;/span&gt;
    &lt;span class="pl-k"&gt;var&lt;/span&gt; title&lt;span class="pl-k"&gt;:&lt;/span&gt; &lt;span class="pl-c1"&gt;String&lt;/span&gt;
    &lt;span class="pl-k"&gt;var&lt;/span&gt; coordinate&lt;span class="pl-k"&gt;:&lt;/span&gt; CLLocationCoordinate2D
}

&lt;span class="pl-k"&gt;extension&lt;/span&gt; &lt;span class="pl-en"&gt;Place&lt;/span&gt; : &lt;span class="pl-e"&gt;FetchableRecord &lt;/span&gt;{
    &lt;span class="pl-k"&gt;init&lt;/span&gt;(&lt;span class="pl-smi"&gt;&lt;span class="pl-en"&gt;row&lt;/span&gt;&lt;/span&gt;: Row) {
        id &lt;span class="pl-k"&gt;=&lt;/span&gt; row[&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;id&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;]
        title &lt;span class="pl-k"&gt;=&lt;/span&gt; row[&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;title&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;]
        coordinate &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;CLLocationCoordinate2D&lt;/span&gt;(
            &lt;span class="pl-c1"&gt;latitude&lt;/span&gt;: row[&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;latitude&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;],
            &lt;span class="pl-c1"&gt;longitude&lt;/span&gt;: row[&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;longitude&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;])
    }
}&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Rows also accept column enums:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;extension&lt;/span&gt; &lt;span class="pl-en"&gt;Place&lt;/span&gt; : &lt;span class="pl-e"&gt;FetchableRecord &lt;/span&gt;{
    &lt;span class="pl-k"&gt;enum&lt;/span&gt; &lt;span class="pl-en"&gt;Columns&lt;/span&gt;: &lt;span class="pl-e"&gt;&lt;span class="pl-c1"&gt;String&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-e"&gt;ColumnExpression &lt;/span&gt;{
        &lt;span class="pl-k"&gt;case&lt;/span&gt; &lt;span class="pl-c1"&gt;id&lt;/span&gt;, &lt;span class="pl-c1"&gt;title&lt;/span&gt;, &lt;span class="pl-c1"&gt;latitude&lt;/span&gt;, &lt;span class="pl-c1"&gt;longitude&lt;/span&gt;
    }
    
    &lt;span class="pl-k"&gt;init&lt;/span&gt;(&lt;span class="pl-smi"&gt;&lt;span class="pl-en"&gt;row&lt;/span&gt;&lt;/span&gt;: Row) {
        id &lt;span class="pl-k"&gt;=&lt;/span&gt; row[Columns.&lt;span class="pl-smi"&gt;id&lt;/span&gt;]
        title &lt;span class="pl-k"&gt;=&lt;/span&gt; row[Columns.&lt;span class="pl-smi"&gt;title&lt;/span&gt;]
        coordinate &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;CLLocationCoordinate2D&lt;/span&gt;(
            &lt;span class="pl-c1"&gt;latitude&lt;/span&gt;: row[Columns.&lt;span class="pl-smi"&gt;latitude&lt;/span&gt;],
            &lt;span class="pl-c1"&gt;longitude&lt;/span&gt;: row[Columns.&lt;span class="pl-smi"&gt;longitude&lt;/span&gt;])
    }
}&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;See &lt;a href="#column-values"&gt;column values&lt;/a&gt; for more information about the &lt;code&gt;row[]&lt;/code&gt; subscript.&lt;/p&gt;
&lt;p&gt;When your record type adopts the standard Decodable protocol, you don't have to provide the implementation for &lt;code&gt;init(row:)&lt;/code&gt;. See &lt;a href="#codable-records"&gt;Codable Records&lt;/a&gt; for more information:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; That's all&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;&lt;span class="pl-k"&gt;struct&lt;/span&gt; &lt;span class="pl-en"&gt;Player&lt;/span&gt;: &lt;span class="pl-e"&gt;Decodable&lt;/span&gt;, &lt;span class="pl-e"&gt;FetchableRecord &lt;/span&gt;{
    &lt;span class="pl-k"&gt;var&lt;/span&gt; id&lt;span class="pl-k"&gt;:&lt;/span&gt; &lt;span class="pl-c1"&gt;Int64&lt;/span&gt;
    &lt;span class="pl-k"&gt;var&lt;/span&gt; name&lt;span class="pl-k"&gt;:&lt;/span&gt; &lt;span class="pl-c1"&gt;String&lt;/span&gt;
    &lt;span class="pl-k"&gt;var&lt;/span&gt; score&lt;span class="pl-k"&gt;:&lt;/span&gt; &lt;span class="pl-c1"&gt;Int&lt;/span&gt;
}&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;FetchableRecord allows adopting types to be fetched from SQL queries:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;try&lt;/span&gt; Place.&lt;span class="pl-c1"&gt;fetchCursor&lt;/span&gt;(db, &lt;span class="pl-c1"&gt;sql&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;SELECT ...&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-c1"&gt;arguments&lt;/span&gt;:&lt;span class="pl-k"&gt;...&lt;/span&gt;) &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; A Cursor of Place&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;&lt;span class="pl-k"&gt;try&lt;/span&gt; Place.&lt;span class="pl-c1"&gt;fetchAll&lt;/span&gt;(db, &lt;span class="pl-c1"&gt;sql&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;SELECT ...&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-c1"&gt;arguments&lt;/span&gt;:&lt;span class="pl-k"&gt;...&lt;/span&gt;)    &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; [Place]&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;&lt;span class="pl-k"&gt;try&lt;/span&gt; Place.&lt;span class="pl-c1"&gt;fetchOne&lt;/span&gt;(db, &lt;span class="pl-c1"&gt;sql&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;SELECT ...&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-c1"&gt;arguments&lt;/span&gt;:&lt;span class="pl-k"&gt;...&lt;/span&gt;)    &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Place?&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;See &lt;a href="#fetching-methods"&gt;fetching methods&lt;/a&gt; for information about the &lt;code&gt;fetchCursor&lt;/code&gt;, &lt;code&gt;fetchAll&lt;/code&gt; and &lt;code&gt;fetchOne&lt;/code&gt; methods. See &lt;a href="http://groue.github.io/GRDB.swift/docs/4.5/Structs/StatementArguments.html" rel="nofollow"&gt;StatementArguments&lt;/a&gt; for more information about the query arguments.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;g-emoji class="g-emoji" alias="point_up" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/261d.png"&gt;☝️&lt;/g-emoji&gt; &lt;strong&gt;Note&lt;/strong&gt;: for performance reasons, the same row argument to &lt;code&gt;init(row:)&lt;/code&gt; is reused during the iteration of a fetch query. If you want to keep the row for later use, make sure to store a copy: &lt;code&gt;self.row = row.copy()&lt;/code&gt;.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;g-emoji class="g-emoji" alias="point_up" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/261d.png"&gt;☝️&lt;/g-emoji&gt; &lt;strong&gt;Note&lt;/strong&gt;: The &lt;code&gt;FetchableRecord.init(row:)&lt;/code&gt; initializer fits the needs of most applications. But some application are more demanding than others. When FetchableRecord does not exactly provide the support you need, have a look at the &lt;a href="#beyond-fetchablerecord"&gt;Beyond FetchableRecord&lt;/a&gt; chapter.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2&gt;&lt;a id="user-content-tablerecord-protocol" class="anchor" aria-hidden="true" href="#tablerecord-protocol"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;TableRecord Protocol&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;The TableRecord protocol&lt;/strong&gt; generates SQL for you. To use TableRecord, subclass the &lt;a href="#record-class"&gt;Record&lt;/a&gt; class, or adopt it explicitly:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;protocol&lt;/span&gt; &lt;span class="pl-en"&gt;TableRecord&lt;/span&gt; {
    &lt;span class="pl-k"&gt;static&lt;/span&gt; &lt;span class="pl-k"&gt;var&lt;/span&gt; databaseTableName&lt;span class="pl-k"&gt;:&lt;/span&gt; &lt;span class="pl-c1"&gt;String&lt;/span&gt; { &lt;span class="pl-k"&gt;get&lt;/span&gt; }
    &lt;span class="pl-k"&gt;static&lt;/span&gt; &lt;span class="pl-k"&gt;var&lt;/span&gt; databaseSelection&lt;span class="pl-k"&gt;:&lt;/span&gt; [SQLSelectable] { &lt;span class="pl-k"&gt;get&lt;/span&gt; }
}&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;The &lt;code&gt;databaseSelection&lt;/code&gt; type property is optional, and documented in the &lt;a href="#columns-selected-by-a-request"&gt;Columns Selected by a Request&lt;/a&gt; chapter.&lt;/p&gt;
&lt;p&gt;The &lt;code&gt;databaseTableName&lt;/code&gt; type property is the name of a database table. By default, it is derived from the type name:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;struct&lt;/span&gt; &lt;span class="pl-en"&gt;Place&lt;/span&gt;: &lt;span class="pl-e"&gt;TableRecord &lt;/span&gt;{ }
&lt;span class="pl-c1"&gt;print&lt;/span&gt;(Place.&lt;span class="pl-smi"&gt;databaseTableName&lt;/span&gt;) &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; prints "place"&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;For example:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Place: &lt;code&gt;place&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Country: &lt;code&gt;country&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;PostalAddress: &lt;code&gt;postalAddress&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;HTTPRequest: &lt;code&gt;httpRequest&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;TOEFL: &lt;code&gt;toefl&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;You can still provide a custom table name:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;struct&lt;/span&gt; &lt;span class="pl-en"&gt;Place&lt;/span&gt;: &lt;span class="pl-e"&gt;TableRecord &lt;/span&gt;{
    &lt;span class="pl-k"&gt;static&lt;/span&gt; &lt;span class="pl-k"&gt;let&lt;/span&gt; databaseTableName &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;location&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;
}
&lt;span class="pl-c1"&gt;print&lt;/span&gt;(Place.&lt;span class="pl-smi"&gt;databaseTableName&lt;/span&gt;) &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; prints "location"&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Subclasses of the &lt;a href="#record-class"&gt;Record&lt;/a&gt; class must always override their superclass's &lt;code&gt;databaseTableName&lt;/code&gt; property:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;class&lt;/span&gt; &lt;span class="pl-en"&gt;Place&lt;/span&gt;: &lt;span class="pl-e"&gt;Record &lt;/span&gt;{
    &lt;span class="pl-k"&gt;override&lt;/span&gt; &lt;span class="pl-k"&gt;class&lt;/span&gt; &lt;span class="pl-k"&gt;var&lt;/span&gt; databaseTableName&lt;span class="pl-k"&gt;:&lt;/span&gt; &lt;span class="pl-c1"&gt;String&lt;/span&gt; {
        &lt;span class="pl-k"&gt;return&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;place&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;
    }
}
&lt;span class="pl-c1"&gt;print&lt;/span&gt;(Place.&lt;span class="pl-smi"&gt;databaseTableName&lt;/span&gt;) &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; prints "place"&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;When a type adopts both TableRecord and &lt;a href="#fetchablerecord-protocol"&gt;FetchableRecord&lt;/a&gt;, it can be fetched using the &lt;a href="#the-query-interface"&gt;query interface&lt;/a&gt;:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; SELECT * FROM place WHERE name = 'Paris'&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;&lt;span class="pl-k"&gt;let&lt;/span&gt; paris &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-k"&gt;try&lt;/span&gt; Place.&lt;span class="pl-c1"&gt;filter&lt;/span&gt;(nameColumn &lt;span class="pl-k"&gt;==&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;Paris&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;).&lt;span class="pl-c1"&gt;fetchOne&lt;/span&gt;(db)&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;TableRecord can also fetch records by primary key:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;try&lt;/span&gt; Player.&lt;span class="pl-c1"&gt;fetchOne&lt;/span&gt;(db, &lt;span class="pl-c1"&gt;key&lt;/span&gt;: &lt;span class="pl-c1"&gt;1&lt;/span&gt;)              &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Player?&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;&lt;span class="pl-k"&gt;try&lt;/span&gt; Player.&lt;span class="pl-c1"&gt;fetchAll&lt;/span&gt;(db, &lt;span class="pl-c1"&gt;keys&lt;/span&gt;: [&lt;span class="pl-c1"&gt;1&lt;/span&gt;, &lt;span class="pl-c1"&gt;2&lt;/span&gt;, &lt;span class="pl-c1"&gt;3&lt;/span&gt;])     &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; [Player]&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;
&lt;span class="pl-k"&gt;try&lt;/span&gt; Country.&lt;span class="pl-c1"&gt;fetchOne&lt;/span&gt;(db, &lt;span class="pl-c1"&gt;key&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;FR&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)          &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Country?&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;&lt;span class="pl-k"&gt;try&lt;/span&gt; Country.&lt;span class="pl-c1"&gt;fetchAll&lt;/span&gt;(db, &lt;span class="pl-c1"&gt;keys&lt;/span&gt;: [&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;FR&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;US&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;]) &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; [Country]&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;When the table has no explicit primary key, GRDB uses the &lt;a href="#the-implicit-rowid-primary-key"&gt;hidden "rowid" column&lt;/a&gt;:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; SELECT * FROM document WHERE rowid = 1&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;&lt;span class="pl-k"&gt;try&lt;/span&gt; Document.&lt;span class="pl-c1"&gt;fetchOne&lt;/span&gt;(db, &lt;span class="pl-c1"&gt;key&lt;/span&gt;: &lt;span class="pl-c1"&gt;1&lt;/span&gt;)            &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Document?&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;For multiple-column primary keys and unique keys defined by unique indexes, provide a dictionary:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; SELECT * FROM citizenship WHERE citizenId = 1 AND countryCode = 'FR'&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;&lt;span class="pl-k"&gt;try&lt;/span&gt; Citizenship.&lt;span class="pl-c1"&gt;fetchOne&lt;/span&gt;(db, &lt;span class="pl-c1"&gt;key&lt;/span&gt;: [&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;citizenId&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;&lt;span class="pl-k"&gt;:&lt;/span&gt; &lt;span class="pl-c1"&gt;1&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;countryCode&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;&lt;span class="pl-k"&gt;:&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;FR&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;]) &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Citizenship?&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h2&gt;&lt;a id="user-content-persistablerecord-protocol" class="anchor" aria-hidden="true" href="#persistablerecord-protocol"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;PersistableRecord Protocol&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;GRDB record types can create, update, and delete rows in the database.&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Those abilities are granted by three protocols:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Defines how a record encodes itself into the database&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;&lt;span class="pl-k"&gt;protocol&lt;/span&gt; &lt;span class="pl-en"&gt;EncodableRecord&lt;/span&gt; {
    &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;///&lt;/span&gt; Defines the values persisted in the database&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;    &lt;span class="pl-k"&gt;func&lt;/span&gt; &lt;span class="pl-en"&gt;encode&lt;/span&gt;(&lt;span class="pl-en"&gt;to&lt;/span&gt; &lt;span class="pl-smi"&gt;container&lt;/span&gt;: &lt;span class="pl-k"&gt;inout&lt;/span&gt; PersistenceContainer)
}

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Adds persistence methods&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;&lt;span class="pl-k"&gt;protocol&lt;/span&gt; &lt;span class="pl-en"&gt;MutablePersistableRecord&lt;/span&gt;: &lt;span class="pl-e"&gt;TableRecord&lt;/span&gt;, &lt;span class="pl-e"&gt;EncodableRecord &lt;/span&gt;{
    &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;///&lt;/span&gt; Optional method that lets your adopting type store its rowID upon&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;    &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;///&lt;/span&gt; successful insertion. Don't call it directly: it is called for you.&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;    &lt;span class="pl-k"&gt;mutating&lt;/span&gt; &lt;span class="pl-k"&gt;func&lt;/span&gt; &lt;span class="pl-en"&gt;didInsert&lt;/span&gt;(&lt;span class="pl-en"&gt;with&lt;/span&gt; &lt;span class="pl-smi"&gt;rowID&lt;/span&gt;: &lt;span class="pl-c1"&gt;Int64&lt;/span&gt;, &lt;span class="pl-en"&gt;for&lt;/span&gt; &lt;span class="pl-smi"&gt;column&lt;/span&gt;: &lt;span class="pl-c1"&gt;String&lt;/span&gt;&lt;span class="pl-k"&gt;?&lt;/span&gt;)
}

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Adds immutability&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;&lt;span class="pl-k"&gt;protocol&lt;/span&gt; &lt;span class="pl-en"&gt;PersistableRecord&lt;/span&gt;: &lt;span class="pl-e"&gt;MutablePersistableRecord &lt;/span&gt;{
    &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;///&lt;/span&gt; Non-mutating version of the optional didInsert(with:for:)&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;    &lt;span class="pl-k"&gt;func&lt;/span&gt; &lt;span class="pl-en"&gt;didInsert&lt;/span&gt;(&lt;span class="pl-en"&gt;with&lt;/span&gt; &lt;span class="pl-smi"&gt;rowID&lt;/span&gt;: &lt;span class="pl-c1"&gt;Int64&lt;/span&gt;, &lt;span class="pl-en"&gt;for&lt;/span&gt; &lt;span class="pl-smi"&gt;column&lt;/span&gt;: &lt;span class="pl-c1"&gt;String&lt;/span&gt;&lt;span class="pl-k"&gt;?&lt;/span&gt;)
}&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Yes, three protocols instead of one. Here is how you pick one or the other:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;If your type is a class&lt;/strong&gt;, choose &lt;code&gt;PersistableRecord&lt;/code&gt;. On top of that, implement &lt;code&gt;didInsert(with:for:)&lt;/code&gt; if the database table has an auto-incremented primary key.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;If your type is a struct, and the database table has an auto-incremented primary key&lt;/strong&gt;, choose &lt;code&gt;MutablePersistableRecord&lt;/code&gt;, and implement &lt;code&gt;didInsert(with:for:)&lt;/code&gt;.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Otherwise&lt;/strong&gt;, choose &lt;code&gt;PersistableRecord&lt;/code&gt;, and ignore &lt;code&gt;didInsert(with:for:)&lt;/code&gt;.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;The &lt;code&gt;encode(to:)&lt;/code&gt; method defines which &lt;a href="#values"&gt;values&lt;/a&gt; (Bool, Int, String, Date, Swift enums, etc.) are assigned to database columns.&lt;/p&gt;
&lt;p&gt;The optional &lt;code&gt;didInsert&lt;/code&gt; method lets the adopting type store its rowID after successful insertion, and is only useful for tables that have an auto-incremented primary key. It is called from a protected dispatch queue, and serialized with all database updates.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;To use the persistable protocols&lt;/strong&gt;, subclass the &lt;a href="#record-class"&gt;Record&lt;/a&gt; class, or adopt one of them explicitly. For example:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;extension&lt;/span&gt; &lt;span class="pl-en"&gt;Place&lt;/span&gt; : &lt;span class="pl-e"&gt;MutablePersistableRecord &lt;/span&gt;{
    &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;///&lt;/span&gt; The values persisted in the database&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;    &lt;span class="pl-k"&gt;func&lt;/span&gt; &lt;span class="pl-en"&gt;encode&lt;/span&gt;(&lt;span class="pl-en"&gt;to&lt;/span&gt; &lt;span class="pl-smi"&gt;container&lt;/span&gt;: &lt;span class="pl-k"&gt;inout&lt;/span&gt; PersistenceContainer) {
        container[&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;id&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;] &lt;span class="pl-k"&gt;=&lt;/span&gt; id
        container[&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;title&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;] &lt;span class="pl-k"&gt;=&lt;/span&gt; title
        container[&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;latitude&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;] &lt;span class="pl-k"&gt;=&lt;/span&gt; coordinate.&lt;span class="pl-smi"&gt;latitude&lt;/span&gt;
        container[&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;longitude&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;] &lt;span class="pl-k"&gt;=&lt;/span&gt; coordinate.&lt;span class="pl-smi"&gt;longitude&lt;/span&gt;
    }
    
    &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Update auto-incremented id upon successful insertion&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;    &lt;span class="pl-k"&gt;mutating&lt;/span&gt; &lt;span class="pl-k"&gt;func&lt;/span&gt; &lt;span class="pl-en"&gt;didInsert&lt;/span&gt;(&lt;span class="pl-en"&gt;with&lt;/span&gt; &lt;span class="pl-smi"&gt;rowID&lt;/span&gt;: &lt;span class="pl-c1"&gt;Int64&lt;/span&gt;, &lt;span class="pl-en"&gt;for&lt;/span&gt; &lt;span class="pl-smi"&gt;column&lt;/span&gt;: &lt;span class="pl-c1"&gt;String&lt;/span&gt;&lt;span class="pl-k"&gt;?&lt;/span&gt;) {
        id &lt;span class="pl-k"&gt;=&lt;/span&gt; rowID
    }
}

&lt;span class="pl-k"&gt;var&lt;/span&gt; paris &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;Place&lt;/span&gt;(
    &lt;span class="pl-c1"&gt;id&lt;/span&gt;: &lt;span class="pl-c1"&gt;nil&lt;/span&gt;,
    &lt;span class="pl-c1"&gt;title&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;Paris&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;,
    &lt;span class="pl-c1"&gt;coordinate&lt;/span&gt;: &lt;span class="pl-c1"&gt;CLLocationCoordinate2D&lt;/span&gt;(&lt;span class="pl-c1"&gt;latitude&lt;/span&gt;: &lt;span class="pl-c1"&gt;48.8534100&lt;/span&gt;, &lt;span class="pl-c1"&gt;longitude&lt;/span&gt;: &lt;span class="pl-c1"&gt;2.3488000&lt;/span&gt;))

&lt;span class="pl-k"&gt;try&lt;/span&gt; paris.&lt;span class="pl-c1"&gt;insert&lt;/span&gt;(db)
paris.&lt;span class="pl-smi"&gt;id&lt;/span&gt;   &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; some value&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Persistence containers also accept column enums:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;extension&lt;/span&gt; &lt;span class="pl-en"&gt;Place&lt;/span&gt; : &lt;span class="pl-e"&gt;MutablePersistableRecord &lt;/span&gt;{
    &lt;span class="pl-k"&gt;enum&lt;/span&gt; &lt;span class="pl-en"&gt;Columns&lt;/span&gt;: &lt;span class="pl-e"&gt;&lt;span class="pl-c1"&gt;String&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-e"&gt;ColumnExpression &lt;/span&gt;{
        &lt;span class="pl-k"&gt;case&lt;/span&gt; &lt;span class="pl-c1"&gt;id&lt;/span&gt;, &lt;span class="pl-c1"&gt;title&lt;/span&gt;, &lt;span class="pl-c1"&gt;latitude&lt;/span&gt;, &lt;span class="pl-c1"&gt;longitude&lt;/span&gt;
    }
    
    &lt;span class="pl-k"&gt;func&lt;/span&gt; &lt;span class="pl-en"&gt;encode&lt;/span&gt;(&lt;span class="pl-en"&gt;to&lt;/span&gt; &lt;span class="pl-smi"&gt;container&lt;/span&gt;: &lt;span class="pl-k"&gt;inout&lt;/span&gt; PersistenceContainer) {
        container[Columns.&lt;span class="pl-smi"&gt;id&lt;/span&gt;] &lt;span class="pl-k"&gt;=&lt;/span&gt; id
        container[Columns.&lt;span class="pl-smi"&gt;title&lt;/span&gt;] &lt;span class="pl-k"&gt;=&lt;/span&gt; title
        container[Columns.&lt;span class="pl-smi"&gt;latitude&lt;/span&gt;] &lt;span class="pl-k"&gt;=&lt;/span&gt; coordinate.&lt;span class="pl-smi"&gt;latitude&lt;/span&gt;
        container[Columns.&lt;span class="pl-smi"&gt;longitude&lt;/span&gt;] &lt;span class="pl-k"&gt;=&lt;/span&gt; coordinate.&lt;span class="pl-smi"&gt;longitude&lt;/span&gt;
    }
}&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;When your record type adopts the standard Encodable protocol, you don't have to provide the implementation for &lt;code&gt;encode(to:)&lt;/code&gt;. See &lt;a href="#codable-records"&gt;Codable Records&lt;/a&gt; for more information:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; That's all&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;&lt;span class="pl-k"&gt;struct&lt;/span&gt; &lt;span class="pl-en"&gt;Player&lt;/span&gt;: &lt;span class="pl-e"&gt;Encodable&lt;/span&gt;, &lt;span class="pl-e"&gt;MutablePersistableRecord &lt;/span&gt;{
    &lt;span class="pl-k"&gt;var&lt;/span&gt; id&lt;span class="pl-k"&gt;:&lt;/span&gt; &lt;span class="pl-c1"&gt;Int64&lt;/span&gt;&lt;span class="pl-k"&gt;?&lt;/span&gt;
    &lt;span class="pl-k"&gt;var&lt;/span&gt; name&lt;span class="pl-k"&gt;:&lt;/span&gt; &lt;span class="pl-c1"&gt;String&lt;/span&gt;
    &lt;span class="pl-k"&gt;var&lt;/span&gt; score&lt;span class="pl-k"&gt;:&lt;/span&gt; &lt;span class="pl-c1"&gt;Int&lt;/span&gt;
    
    &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Update auto-incremented id upon successful insertion&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;    &lt;span class="pl-k"&gt;mutating&lt;/span&gt; &lt;span class="pl-k"&gt;func&lt;/span&gt; &lt;span class="pl-en"&gt;didInsert&lt;/span&gt;(&lt;span class="pl-en"&gt;with&lt;/span&gt; &lt;span class="pl-smi"&gt;rowID&lt;/span&gt;: &lt;span class="pl-c1"&gt;Int64&lt;/span&gt;, &lt;span class="pl-en"&gt;for&lt;/span&gt; &lt;span class="pl-smi"&gt;column&lt;/span&gt;: &lt;span class="pl-c1"&gt;String&lt;/span&gt;&lt;span class="pl-k"&gt;?&lt;/span&gt;) {
        id &lt;span class="pl-k"&gt;=&lt;/span&gt; rowID
    }
}&lt;/pre&gt;&lt;/div&gt;
&lt;h3&gt;&lt;a id="user-content-persistence-methods" class="anchor" aria-hidden="true" href="#persistence-methods"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Persistence Methods&lt;/h3&gt;
&lt;p&gt;&lt;a href="#record-class"&gt;Record&lt;/a&gt; subclasses and types that adopt &lt;a href="#persistablerecord-protocol"&gt;PersistableRecord&lt;/a&gt; are given default implementations for methods that insert, update, and delete:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Instance methods&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;&lt;span class="pl-k"&gt;try&lt;/span&gt; place.&lt;span class="pl-c1"&gt;save&lt;/span&gt;(db)                     &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; INSERT or UPDATE&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;&lt;span class="pl-k"&gt;try&lt;/span&gt; place.&lt;span class="pl-c1"&gt;insert&lt;/span&gt;(db)                   &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; INSERT&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;&lt;span class="pl-k"&gt;try&lt;/span&gt; place.&lt;span class="pl-c1"&gt;update&lt;/span&gt;(db)                   &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; UPDATE&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;&lt;span class="pl-k"&gt;try&lt;/span&gt; place.&lt;span class="pl-c1"&gt;update&lt;/span&gt;(db, &lt;span class="pl-c1"&gt;columns&lt;/span&gt;: &lt;span class="pl-k"&gt;...&lt;/span&gt;)     &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; UPDATE&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;&lt;span class="pl-k"&gt;try&lt;/span&gt; place.&lt;span class="pl-c1"&gt;updateChanges&lt;/span&gt;(db, &lt;span class="pl-c1"&gt;from&lt;/span&gt;: &lt;span class="pl-k"&gt;...&lt;/span&gt;) &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Maybe UPDATE&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;&lt;span class="pl-k"&gt;try&lt;/span&gt; place.&lt;span class="pl-c1"&gt;updateChanges&lt;/span&gt;(db) { &lt;span class="pl-k"&gt;...&lt;/span&gt; }    &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Maybe UPDATE&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;&lt;span class="pl-k"&gt;try&lt;/span&gt; place.&lt;span class="pl-c1"&gt;updateChanges&lt;/span&gt;(db)            &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Maybe UPDATE (Record class only)&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;&lt;span class="pl-k"&gt;try&lt;/span&gt; place.&lt;span class="pl-c1"&gt;delete&lt;/span&gt;(db)                   &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; DELETE&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;&lt;span class="pl-k"&gt;try&lt;/span&gt; place.&lt;span class="pl-c1"&gt;exists&lt;/span&gt;(db)

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Type methods&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;&lt;span class="pl-k"&gt;try&lt;/span&gt; Place.&lt;span class="pl-c1"&gt;deleteAll&lt;/span&gt;(db)                    &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; DELETE&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;&lt;span class="pl-k"&gt;try&lt;/span&gt; Place.&lt;span class="pl-c1"&gt;deleteAll&lt;/span&gt;(db, &lt;span class="pl-c1"&gt;keys&lt;/span&gt;:&lt;span class="pl-k"&gt;...&lt;/span&gt;)          &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; DELETE&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;&lt;span class="pl-k"&gt;try&lt;/span&gt; Place.&lt;span class="pl-c1"&gt;deleteOne&lt;/span&gt;(db, &lt;span class="pl-c1"&gt;key&lt;/span&gt;:&lt;span class="pl-k"&gt;...&lt;/span&gt;)           &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; DELETE&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;insert&lt;/code&gt;, &lt;code&gt;update&lt;/code&gt;, &lt;code&gt;save&lt;/code&gt; and &lt;code&gt;delete&lt;/code&gt; can throw a &lt;a href="#error-handling"&gt;DatabaseError&lt;/a&gt;.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;update&lt;/code&gt; and &lt;code&gt;updateChanges&lt;/code&gt; can also throw a &lt;a href="#persistenceerror"&gt;PersistenceError&lt;/a&gt;, should the update fail because there is no matching row in the database.&lt;/p&gt;
&lt;p&gt;When saving an object that may or may not already exist in the database, prefer the &lt;code&gt;save&lt;/code&gt; method:&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;save&lt;/code&gt; makes sure your values are stored in the database.&lt;/p&gt;
&lt;p&gt;It performs an UPDATE if the record has a non-null primary key, and then, if no row was modified, an INSERT. It directly perfoms an INSERT if the record has no primary key, or a null primary key.&lt;/p&gt;
&lt;p&gt;Despite the fact that it may execute two SQL statements, &lt;code&gt;save&lt;/code&gt; behaves as an atomic operation: GRDB won't allow any concurrent thread to sneak in (see &lt;a href="#concurrency"&gt;concurrency&lt;/a&gt;).&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;delete&lt;/code&gt; returns whether a database row was deleted or not.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;All primary keys are supported&lt;/strong&gt;, including composite primary keys that span several columns, and the &lt;a href="#the-implicit-rowid-primary-key"&gt;implicit rowid primary key&lt;/a&gt;.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-customizing-the-persistence-methods" class="anchor" aria-hidden="true" href="#customizing-the-persistence-methods"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Customizing the Persistence Methods&lt;/h3&gt;
&lt;p&gt;Your custom type may want to perform extra work when the persistence methods are invoked.&lt;/p&gt;
&lt;p&gt;For example, it may want to have its UUID automatically set before inserting. Or it may want to validate its values before saving.&lt;/p&gt;
&lt;p&gt;When you subclass &lt;a href="#record-class"&gt;Record&lt;/a&gt;, you simply have to override the customized method, and call &lt;code&gt;super&lt;/code&gt;:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;class&lt;/span&gt; &lt;span class="pl-en"&gt;Player&lt;/span&gt; : &lt;span class="pl-e"&gt;Record &lt;/span&gt;{
    &lt;span class="pl-k"&gt;var&lt;/span&gt; uuid&lt;span class="pl-k"&gt;:&lt;/span&gt; UUID&lt;span class="pl-k"&gt;?&lt;/span&gt;
    
    &lt;span class="pl-k"&gt;override&lt;/span&gt; &lt;span class="pl-k"&gt;func&lt;/span&gt; &lt;span class="pl-en"&gt;insert&lt;/span&gt;(&lt;span class="pl-en"&gt;_&lt;/span&gt; &lt;span class="pl-smi"&gt;db&lt;/span&gt;: Database) &lt;span class="pl-k"&gt;throws&lt;/span&gt; {
        &lt;span class="pl-k"&gt;if&lt;/span&gt; uuid &lt;span class="pl-k"&gt;==&lt;/span&gt; &lt;span class="pl-c1"&gt;nil&lt;/span&gt; {
            uuid &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;UUID&lt;/span&gt;()
        }
        &lt;span class="pl-k"&gt;try&lt;/span&gt; &lt;span class="pl-c1"&gt;super&lt;/span&gt;.&lt;span class="pl-c1"&gt;insert&lt;/span&gt;(db)
    }
}&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;If you use the raw &lt;a href="#persistablerecord-protocol"&gt;PersistableRecord&lt;/a&gt; protocol, use one of the &lt;em&gt;special methods&lt;/em&gt; &lt;code&gt;performInsert&lt;/code&gt;, &lt;code&gt;performUpdate&lt;/code&gt;, &lt;code&gt;performSave&lt;/code&gt;, &lt;code&gt;performDelete&lt;/code&gt;, or &lt;code&gt;performExists&lt;/code&gt;:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;struct&lt;/span&gt; &lt;span class="pl-en"&gt;Link&lt;/span&gt; : &lt;span class="pl-e"&gt;PersistableRecord &lt;/span&gt;{
    &lt;span class="pl-k"&gt;var&lt;/span&gt; url&lt;span class="pl-k"&gt;:&lt;/span&gt; URL
    
    &lt;span class="pl-k"&gt;func&lt;/span&gt; &lt;span class="pl-en"&gt;insert&lt;/span&gt;(&lt;span class="pl-en"&gt;_&lt;/span&gt; &lt;span class="pl-smi"&gt;db&lt;/span&gt;: Database) &lt;span class="pl-k"&gt;throws&lt;/span&gt; {
        &lt;span class="pl-k"&gt;try&lt;/span&gt; &lt;span class="pl-c1"&gt;validate&lt;/span&gt;()
        &lt;span class="pl-k"&gt;try&lt;/span&gt; &lt;span class="pl-c1"&gt;performInsert&lt;/span&gt;(db)
    }
    
    &lt;span class="pl-k"&gt;func&lt;/span&gt; &lt;span class="pl-en"&gt;update&lt;/span&gt;(&lt;span class="pl-en"&gt;_&lt;/span&gt; &lt;span class="pl-smi"&gt;db&lt;/span&gt;: Database, &lt;span class="pl-smi"&gt;&lt;span class="pl-en"&gt;columns&lt;/span&gt;&lt;/span&gt;: &lt;span class="pl-c1"&gt;Set&lt;/span&gt;&amp;lt;&lt;span class="pl-c1"&gt;String&lt;/span&gt;&amp;gt;) &lt;span class="pl-k"&gt;throws&lt;/span&gt; {
        &lt;span class="pl-k"&gt;try&lt;/span&gt; &lt;span class="pl-c1"&gt;validate&lt;/span&gt;()
        &lt;span class="pl-k"&gt;try&lt;/span&gt; &lt;span class="pl-c1"&gt;performUpdate&lt;/span&gt;(db, &lt;span class="pl-c1"&gt;columns&lt;/span&gt;: columns)
    }
    
    &lt;span class="pl-k"&gt;func&lt;/span&gt; &lt;span class="pl-en"&gt;validate&lt;/span&gt;() &lt;span class="pl-k"&gt;throws&lt;/span&gt; {
        &lt;span class="pl-k"&gt;if&lt;/span&gt; url.&lt;span class="pl-smi"&gt;host&lt;/span&gt; &lt;span class="pl-k"&gt;==&lt;/span&gt; &lt;span class="pl-c1"&gt;nil&lt;/span&gt; {
            &lt;span class="pl-k"&gt;throw&lt;/span&gt; &lt;span class="pl-c1"&gt;ValidationError&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;url must be absolute.&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
        }
    }
}&lt;/pre&gt;&lt;/div&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;g-emoji class="g-emoji" alias="point_up" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/261d.png"&gt;☝️&lt;/g-emoji&gt; &lt;strong&gt;Note&lt;/strong&gt;: the special methods &lt;code&gt;performInsert&lt;/code&gt;, &lt;code&gt;performUpdate&lt;/code&gt;, etc. are reserved for your custom implementations. Do not use them elsewhere. Do not provide another implementation for those methods.&lt;/p&gt;
&lt;p&gt;&lt;g-emoji class="g-emoji" alias="point_up" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/261d.png"&gt;☝️&lt;/g-emoji&gt; &lt;strong&gt;Note&lt;/strong&gt;: it is recommended that you do not implement your own version of the &lt;code&gt;save&lt;/code&gt; method. Its default implementation forwards the job to &lt;code&gt;update&lt;/code&gt; or &lt;code&gt;insert&lt;/code&gt;: these are the methods that may need customization, not &lt;code&gt;save&lt;/code&gt;.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2&gt;&lt;a id="user-content-codable-records" class="anchor" aria-hidden="true" href="#codable-records"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Codable Records&lt;/h2&gt;
&lt;p&gt;Record types that adopt an archival protocol (&lt;a href="https://developer.apple.com/documentation/foundation/archives_and_serialization/encoding_and_decoding_custom_types" rel="nofollow"&gt;Codable, Encodable or Decodable&lt;/a&gt;) get free database support just by declaring conformance to the desired &lt;a href="#record-protocols-overview"&gt;record protocols&lt;/a&gt;:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Declare a record...&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;&lt;span class="pl-k"&gt;struct&lt;/span&gt; &lt;span class="pl-en"&gt;Player&lt;/span&gt;: &lt;span class="pl-e"&gt;Codable&lt;/span&gt;, &lt;span class="pl-e"&gt;FetchableRecord&lt;/span&gt;, &lt;span class="pl-e"&gt;PersistableRecord &lt;/span&gt;{
    &lt;span class="pl-k"&gt;var&lt;/span&gt; name&lt;span class="pl-k"&gt;:&lt;/span&gt; &lt;span class="pl-c1"&gt;String&lt;/span&gt;
    &lt;span class="pl-k"&gt;var&lt;/span&gt; score&lt;span class="pl-k"&gt;:&lt;/span&gt; &lt;span class="pl-c1"&gt;Int&lt;/span&gt;
}

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; ...and there you go:&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;&lt;span class="pl-k"&gt;try&lt;/span&gt; dbQueue.&lt;span class="pl-smi"&gt;write&lt;/span&gt; { db &lt;span class="pl-k"&gt;in&lt;/span&gt;
    &lt;span class="pl-k"&gt;try&lt;/span&gt; &lt;span class="pl-c1"&gt;Player&lt;/span&gt;(&lt;span class="pl-c1"&gt;name&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;Arthur&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-c1"&gt;score&lt;/span&gt;: &lt;span class="pl-c1"&gt;100&lt;/span&gt;).&lt;span class="pl-c1"&gt;insert&lt;/span&gt;(db)
    &lt;span class="pl-k"&gt;let&lt;/span&gt; players &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-k"&gt;try&lt;/span&gt; Player.&lt;span class="pl-c1"&gt;fetchAll&lt;/span&gt;(db)
}&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Codable records encode and decode their properties according to their own implementation of the Encodable and Decodable protocols. Yet databases have specific requirements:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Properties are always coded according to their preferred database representation, when they have one (all &lt;a href="#values"&gt;values&lt;/a&gt; that adopt the &lt;a href="#custom-value-types"&gt;DatabaseValueConvertible&lt;/a&gt; protocol).&lt;/li&gt;
&lt;li&gt;You can customize the encoding and decoding of dates and uuids.&lt;/li&gt;
&lt;li&gt;Complex properties (arrays, dictionaries, nested structs, etc.) are stored as JSON.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;For more information about Codable records, see:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="#json-columns"&gt;JSON Columns&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#date-and-uuid-coding-strategies"&gt;Date and UUID Coding Strategies&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#the-userinfo-dictionary"&gt;The userInfo Dictionary&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#tip-derive-columns-from-coding-keys"&gt;Tip: Derive Columns from Coding Keys&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;g-emoji class="g-emoji" alias="bulb" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f4a1.png"&gt;💡&lt;/g-emoji&gt; &lt;strong&gt;Tip&lt;/strong&gt;: see the &lt;a href="Documentation/DemoApps/GRDBDemoiOS/README.md"&gt;Demo Application&lt;/a&gt; for a sample app that uses Codable records.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3&gt;&lt;a id="user-content-json-columns" class="anchor" aria-hidden="true" href="#json-columns"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;JSON Columns&lt;/h3&gt;
&lt;p&gt;When a &lt;a href="#codable-records"&gt;Codable record&lt;/a&gt; contains a property that is not a simple &lt;a href="#values"&gt;value&lt;/a&gt; (Bool, Int, String, Date, Swift enums, etc.), that value is encoded and decoded as a &lt;strong&gt;JSON string&lt;/strong&gt;. For example:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;enum&lt;/span&gt; &lt;span class="pl-en"&gt;AchievementColor&lt;/span&gt;: &lt;span class="pl-e"&gt;&lt;span class="pl-c1"&gt;String&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-e"&gt;Codable &lt;/span&gt;{
    &lt;span class="pl-k"&gt;case&lt;/span&gt; &lt;span class="pl-c1"&gt;bronze&lt;/span&gt;, &lt;span class="pl-c1"&gt;silver&lt;/span&gt;, &lt;span class="pl-c1"&gt;gold&lt;/span&gt;
}

&lt;span class="pl-k"&gt;struct&lt;/span&gt; &lt;span class="pl-en"&gt;Achievement&lt;/span&gt;: &lt;span class="pl-e"&gt;Codable &lt;/span&gt;{
    &lt;span class="pl-k"&gt;var&lt;/span&gt; name&lt;span class="pl-k"&gt;:&lt;/span&gt; &lt;span class="pl-c1"&gt;String&lt;/span&gt;
    &lt;span class="pl-k"&gt;var&lt;/span&gt; color&lt;span class="pl-k"&gt;:&lt;/span&gt; AchievementColor
}

&lt;span class="pl-k"&gt;struct&lt;/span&gt; &lt;span class="pl-en"&gt;Player&lt;/span&gt;: &lt;span class="pl-e"&gt;Codable&lt;/span&gt;, &lt;span class="pl-e"&gt;FetchableRecord&lt;/span&gt;, &lt;span class="pl-e"&gt;PersistableRecord &lt;/span&gt;{
    &lt;span class="pl-k"&gt;var&lt;/span&gt; name&lt;span class="pl-k"&gt;:&lt;/span&gt; &lt;span class="pl-c1"&gt;String&lt;/span&gt;
    &lt;span class="pl-k"&gt;var&lt;/span&gt; score&lt;span class="pl-k"&gt;:&lt;/span&gt; &lt;span class="pl-c1"&gt;Int&lt;/span&gt;
    &lt;span class="pl-k"&gt;var&lt;/span&gt; achievements&lt;span class="pl-k"&gt;:&lt;/span&gt; [Achievement] &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; stored in a JSON column&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;}

&lt;span class="pl-k"&gt;try&lt;/span&gt;&lt;span class="pl-k"&gt;!&lt;/span&gt; dbQueue.&lt;span class="pl-smi"&gt;write&lt;/span&gt; { db &lt;span class="pl-k"&gt;in&lt;/span&gt;
    &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; INSERT INTO player (name, score, achievements)&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;    &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; VALUES (&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;    &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt;   'Arthur',&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;    &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt;   100,&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;    &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt;   '[{"color":"gold","name":"Use Codable Records"}]')&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;    &lt;span class="pl-k"&gt;let&lt;/span&gt; achievement &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;Achievement&lt;/span&gt;(&lt;span class="pl-c1"&gt;name&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;Use Codable Records&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-c1"&gt;color&lt;/span&gt;: .&lt;span class="pl-smi"&gt;gold&lt;/span&gt;)
    &lt;span class="pl-k"&gt;let&lt;/span&gt; player &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;Player&lt;/span&gt;(&lt;span class="pl-c1"&gt;name&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;Arthur&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-c1"&gt;score&lt;/span&gt;: &lt;span class="pl-c1"&gt;100&lt;/span&gt;, &lt;span class="pl-c1"&gt;achievements&lt;/span&gt;: [achievement])
    &lt;span class="pl-k"&gt;try&lt;/span&gt; player.&lt;span class="pl-c1"&gt;insert&lt;/span&gt;(db)
}&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;GRDB uses the standard &lt;a href="https://developer.apple.com/documentation/foundation/jsondecoder" rel="nofollow"&gt;JSONDecoder&lt;/a&gt; and &lt;a href="https://developer.apple.com/documentation/foundation/jsonencoder" rel="nofollow"&gt;JSONEncoder&lt;/a&gt; from Foundation. By default, Data values are handled with the &lt;code&gt;.base64&lt;/code&gt; strategy, Date with the &lt;code&gt;.millisecondsSince1970&lt;/code&gt; strategy, and non conforming floats with the &lt;code&gt;.throw&lt;/code&gt; strategy.&lt;/p&gt;
&lt;p&gt;You can customize the JSON format by implementing those methods:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;protocol&lt;/span&gt; &lt;span class="pl-en"&gt;FetchableRecord&lt;/span&gt; {
    &lt;span class="pl-k"&gt;static&lt;/span&gt; &lt;span class="pl-k"&gt;func&lt;/span&gt; &lt;span class="pl-en"&gt;databaseJSONDecoder&lt;/span&gt;(&lt;span class="pl-en"&gt;for&lt;/span&gt; &lt;span class="pl-smi"&gt;column&lt;/span&gt;: &lt;span class="pl-c1"&gt;String&lt;/span&gt;) &lt;span class="pl-k"&gt;-&amp;gt;&lt;/span&gt; JSONDecoder
}

&lt;span class="pl-k"&gt;protocol&lt;/span&gt; &lt;span class="pl-en"&gt;EncodableRecord&lt;/span&gt; {
    &lt;span class="pl-k"&gt;static&lt;/span&gt; &lt;span class="pl-k"&gt;func&lt;/span&gt; &lt;span class="pl-en"&gt;databaseJSONEncoder&lt;/span&gt;(&lt;span class="pl-en"&gt;for&lt;/span&gt; &lt;span class="pl-smi"&gt;column&lt;/span&gt;: &lt;span class="pl-c1"&gt;String&lt;/span&gt;) &lt;span class="pl-k"&gt;-&amp;gt;&lt;/span&gt; JSONEncoder
}&lt;/pre&gt;&lt;/div&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;g-emoji class="g-emoji" alias="bulb" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f4a1.png"&gt;💡&lt;/g-emoji&gt; &lt;strong&gt;Tip&lt;/strong&gt;: Make sure you set the JSONEncoder &lt;code&gt;sortedKeys&lt;/code&gt; option, available from iOS 11.0+, macOS 10.13+, tvOS 9.0+ and watchOS 4.0+. This option makes sure that the JSON output is stable. This stability is required for &lt;a href="#record-comparison"&gt;Record Comparison&lt;/a&gt; to work as expected, and database observation tools such as &lt;a href="#valueobservation"&gt;ValueObservation&lt;/a&gt; to accurately recognize changed records.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3&gt;&lt;a id="user-content-date-and-uuid-coding-strategies" class="anchor" aria-hidden="true" href="#date-and-uuid-coding-strategies"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Date and UUID Coding Strategies&lt;/h3&gt;
&lt;p&gt;By default, &lt;a href="#codable-records"&gt;Codable Records&lt;/a&gt; encode and decode their Date and UUID properties as described in the general &lt;a href="#date-and-datecomponents"&gt;Date and DateComponents&lt;/a&gt; and &lt;a href="#uuid"&gt;UUID&lt;/a&gt; chapters.&lt;/p&gt;
&lt;p&gt;To sum up: dates encode themselves in the "YYYY-MM-DD HH:MM:SS.SSS" format, in the UTC time zone, and decode a variety of date formats and timestamps. UUIDs encode themselves as 16-bytes data blobs, and decode both 16-bytes data blobs and strings such as "E621E1F8-C36C-495A-93FC-0C247A3E6E5F".&lt;/p&gt;
&lt;p&gt;Those behaviors can be overridden:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;protocol&lt;/span&gt; &lt;span class="pl-en"&gt;FetchableRecord&lt;/span&gt; {
    &lt;span class="pl-k"&gt;static&lt;/span&gt; &lt;span class="pl-k"&gt;var&lt;/span&gt; databaseDateDecodingStrategy&lt;span class="pl-k"&gt;:&lt;/span&gt; DatabaseDateDecodingStrategy { &lt;span class="pl-k"&gt;get&lt;/span&gt; }
}

&lt;span class="pl-k"&gt;protocol&lt;/span&gt; &lt;span class="pl-en"&gt;EncodableRecord&lt;/span&gt; {
    &lt;span class="pl-k"&gt;static&lt;/span&gt; &lt;span class="pl-k"&gt;var&lt;/span&gt; databaseDateEncodingStrategy&lt;span class="pl-k"&gt;:&lt;/span&gt; DatabaseDateEncodingStrategy { &lt;span class="pl-k"&gt;get&lt;/span&gt; }
    &lt;span class="pl-k"&gt;static&lt;/span&gt; &lt;span class="pl-k"&gt;var&lt;/span&gt; databaseUUIDEncodingStrategy&lt;span class="pl-k"&gt;:&lt;/span&gt; DatabaseUUIDEncodingStrategy { &lt;span class="pl-k"&gt;get&lt;/span&gt; }
}&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;See &lt;a href="https://groue.github.io/GRDB.swift/docs/4.5/Enums/DatabaseDateDecodingStrategy.html" rel="nofollow"&gt;DatabaseDateDecodingStrategy&lt;/a&gt;, &lt;a href="https://groue.github.io/GRDB.swift/docs/4.5/Enums/DatabaseDateEncodingStrategy.html" rel="nofollow"&gt;DatabaseDateEncodingStrategy&lt;/a&gt;, and &lt;a href="https://groue.github.io/GRDB.swift/docs/4.5/Enums/DatabaseUUIDEncodingStrategy.html" rel="nofollow"&gt;DatabaseUUIDEncodingStrategy&lt;/a&gt; to learn about all available strategies.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;g-emoji class="g-emoji" alias="point_up" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/261d.png"&gt;☝️&lt;/g-emoji&gt; &lt;strong&gt;Note&lt;/strong&gt;: there is no customization of uuid decoding, because UUID can already decode all its encoded variants (16-bytes blobs, and uuid strings).&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3&gt;&lt;a id="user-content-the-userinfo-dictionary" class="anchor" aria-hidden="true" href="#the-userinfo-dictionary"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;The userInfo Dictionary&lt;/h3&gt;
&lt;p&gt;Your &lt;a href="#codable-records"&gt;Codable Records&lt;/a&gt; can be stored in the database, but they may also have other purposes. In this case, you may need to customize their implementations of &lt;code&gt;Decodable.init(from:)&lt;/code&gt; and &lt;code&gt;Encodable.encode(to:)&lt;/code&gt;, depending on the context.&lt;/p&gt;
&lt;p&gt;The standard way to provide such context is the &lt;code&gt;userInfo&lt;/code&gt; dictionary. Implement those properties:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;protocol&lt;/span&gt; &lt;span class="pl-en"&gt;FetchableRecord&lt;/span&gt; {
    &lt;span class="pl-k"&gt;static&lt;/span&gt; &lt;span class="pl-k"&gt;var&lt;/span&gt; databaseDecodingUserInfo&lt;span class="pl-k"&gt;:&lt;/span&gt; [CodingUserInfoKey&lt;span class="pl-k"&gt;:&lt;/span&gt; &lt;span class="pl-c1"&gt;Any&lt;/span&gt;] { &lt;span class="pl-k"&gt;get&lt;/span&gt; }
}

&lt;span class="pl-k"&gt;protocol&lt;/span&gt; &lt;span class="pl-en"&gt;EncodableRecord&lt;/span&gt; {
    &lt;span class="pl-k"&gt;static&lt;/span&gt; &lt;span class="pl-k"&gt;var&lt;/span&gt; databaseEncodingUserInfo&lt;span class="pl-k"&gt;:&lt;/span&gt; [CodingUserInfoKey&lt;span class="pl-k"&gt;:&lt;/span&gt; &lt;span class="pl-c1"&gt;Any&lt;/span&gt;] { &lt;span class="pl-k"&gt;get&lt;/span&gt; }
}&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;For example, here is a Player type that customizes its decoding:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; A key that holds a decoder's name&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;&lt;span class="pl-k"&gt;let&lt;/span&gt; decoderName &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;CodingUserInfoKey&lt;/span&gt;(&lt;span class="pl-c1"&gt;rawValue&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;decoderName&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)&lt;span class="pl-k"&gt;!&lt;/span&gt;

&lt;span class="pl-k"&gt;struct&lt;/span&gt; &lt;span class="pl-en"&gt;Player&lt;/span&gt;: &lt;span class="pl-e"&gt;FetchableRecord&lt;/span&gt;, &lt;span class="pl-e"&gt;Decodable &lt;/span&gt;{
    &lt;span class="pl-k"&gt;init&lt;/span&gt;(&lt;span class="pl-en"&gt;from&lt;/span&gt; &lt;span class="pl-smi"&gt;decoder&lt;/span&gt;: Decoder) &lt;span class="pl-k"&gt;throws&lt;/span&gt; {
        &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Print the decoder name&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;        &lt;span class="pl-k"&gt;let&lt;/span&gt; decoderName &lt;span class="pl-k"&gt;=&lt;/span&gt; decoder.&lt;span class="pl-smi"&gt;userInfo&lt;/span&gt;[decoderName] &lt;span class="pl-k"&gt;as?&lt;/span&gt; &lt;span class="pl-c1"&gt;String&lt;/span&gt;
        &lt;span class="pl-c1"&gt;print&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;Decoded from &lt;span class="pl-pse"&gt;\(&lt;/span&gt;&lt;span class="pl-s1"&gt;decoderName &lt;span class="pl-k"&gt;??&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;unknown decoder&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="pl-pse"&gt;&lt;span class="pl-s1"&gt;)&lt;/span&gt;&lt;/span&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
        &lt;span class="pl-k"&gt;...&lt;/span&gt;
    }
}&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;You can have a specific decoding from JSON...&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; prints "Decoded from JSON"&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;&lt;span class="pl-k"&gt;let&lt;/span&gt; decoder &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;JSONDecoder&lt;/span&gt;()
decoder.&lt;span class="pl-smi"&gt;userInfo&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; [decoderName&lt;span class="pl-k"&gt;:&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;JSON&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;]
&lt;span class="pl-k"&gt;let&lt;/span&gt; player &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-k"&gt;try&lt;/span&gt; decoder.&lt;span class="pl-c1"&gt;decode&lt;/span&gt;(Player.&lt;span class="pl-k"&gt;self&lt;/span&gt;, &lt;span class="pl-c1"&gt;from&lt;/span&gt;: jsonData)&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;... and another one from database rows:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;extension&lt;/span&gt; &lt;span class="pl-en"&gt;Player&lt;/span&gt;: &lt;span class="pl-e"&gt;FetchableRecord &lt;/span&gt;{
    &lt;span class="pl-k"&gt;static&lt;/span&gt; &lt;span class="pl-k"&gt;let&lt;/span&gt; databaseDecodingUserInfo&lt;span class="pl-k"&gt;:&lt;/span&gt; [CodingUserInfoKey&lt;span class="pl-k"&gt;:&lt;/span&gt; &lt;span class="pl-c1"&gt;Any&lt;/span&gt;] &lt;span class="pl-k"&gt;=&lt;/span&gt; [decoderName&lt;span class="pl-k"&gt;:&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;database row&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;]
}

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; prints "Decoded from database row"&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;&lt;span class="pl-k"&gt;let&lt;/span&gt; player &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-k"&gt;try&lt;/span&gt; Player.&lt;span class="pl-c1"&gt;fetchOne&lt;/span&gt;(db, &lt;span class="pl-k"&gt;...&lt;/span&gt;)&lt;/pre&gt;&lt;/div&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;g-emoji class="g-emoji" alias="point_up" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/261d.png"&gt;☝️&lt;/g-emoji&gt; &lt;strong&gt;Note&lt;/strong&gt;: make sure the &lt;code&gt;databaseDecodingUserInfo&lt;/code&gt; and &lt;code&gt;databaseEncodingUserInfo&lt;/code&gt; properties are explicitly declared as &lt;code&gt;[CodingUserInfoKey: Any]&lt;/code&gt;. If they are not, the Swift compiler may silently miss the protocol requirement, resulting in sticky empty userInfo.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3&gt;&lt;a id="user-content-tip-derive-columns-from-coding-keys" class="anchor" aria-hidden="true" href="#tip-derive-columns-from-coding-keys"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Tip: Derive Columns from Coding Keys&lt;/h3&gt;
&lt;p&gt;Codable types are granted with a &lt;a href="https://developer.apple.com/documentation/foundation/archives_and_serialization/encoding_and_decoding_custom_types" rel="nofollow"&gt;CodingKeys&lt;/a&gt; enum. You can use them to safely define database columns:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;struct&lt;/span&gt; &lt;span class="pl-en"&gt;Player&lt;/span&gt;: &lt;span class="pl-e"&gt;Codable &lt;/span&gt;{
    &lt;span class="pl-k"&gt;var&lt;/span&gt; id&lt;span class="pl-k"&gt;:&lt;/span&gt; &lt;span class="pl-c1"&gt;Int64&lt;/span&gt;
    &lt;span class="pl-k"&gt;var&lt;/span&gt; name&lt;span class="pl-k"&gt;:&lt;/span&gt; &lt;span class="pl-c1"&gt;String&lt;/span&gt;
    &lt;span class="pl-k"&gt;var&lt;/span&gt; score&lt;span class="pl-k"&gt;:&lt;/span&gt; &lt;span class="pl-c1"&gt;Int&lt;/span&gt;
}

&lt;span class="pl-k"&gt;extension&lt;/span&gt; &lt;span class="pl-en"&gt;Player&lt;/span&gt;: &lt;span class="pl-e"&gt;FetchableRecord&lt;/span&gt;, &lt;span class="pl-e"&gt;PersistableRecord &lt;/span&gt;{
    &lt;span class="pl-k"&gt;enum&lt;/span&gt; &lt;span class="pl-en"&gt;Columns&lt;/span&gt; {
        &lt;span class="pl-k"&gt;static&lt;/span&gt; &lt;span class="pl-k"&gt;let&lt;/span&gt; id &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;Column&lt;/span&gt;(CodingKeys.&lt;span class="pl-smi"&gt;id&lt;/span&gt;)
        &lt;span class="pl-k"&gt;static&lt;/span&gt; &lt;span class="pl-k"&gt;let&lt;/span&gt; name &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;Column&lt;/span&gt;(CodingKeys.&lt;span class="pl-smi"&gt;name&lt;/span&gt;)
        &lt;span class="pl-k"&gt;static&lt;/span&gt; &lt;span class="pl-k"&gt;let&lt;/span&gt; score &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;Column&lt;/span&gt;(CodingKeys.&lt;span class="pl-smi"&gt;score&lt;/span&gt;)
    }
}&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;See the &lt;a href="#the-query-interface"&gt;query interface&lt;/a&gt; and &lt;a href="Documentation/GoodPracticesForDesigningRecordTypes.md"&gt;Good Practices for Designing Record Types&lt;/a&gt; for further information.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-record-class" class="anchor" aria-hidden="true" href="#record-class"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Record Class&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;Record&lt;/strong&gt; is a class that is designed to be subclassed. It inherits its features from the &lt;a href="#record-protocols-overview"&gt;FetchableRecord, TableRecord, and PersistableRecord&lt;/a&gt; protocols. On top of that, Record instances can compare against previous versions of themselves in order to &lt;a href="#record-comparison"&gt;avoid useless updates&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Record subclasses define their custom database relationship by overriding database methods. For example:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;class&lt;/span&gt; &lt;span class="pl-en"&gt;Place&lt;/span&gt;: &lt;span class="pl-e"&gt;Record &lt;/span&gt;{
    &lt;span class="pl-k"&gt;var&lt;/span&gt; id&lt;span class="pl-k"&gt;:&lt;/span&gt; &lt;span class="pl-c1"&gt;Int64&lt;/span&gt;&lt;span class="pl-k"&gt;?&lt;/span&gt;
    &lt;span class="pl-k"&gt;var&lt;/span&gt; title&lt;span class="pl-k"&gt;:&lt;/span&gt; &lt;span class="pl-c1"&gt;String&lt;/span&gt;
    &lt;span class="pl-k"&gt;var&lt;/span&gt; isFavorite&lt;span class="pl-k"&gt;:&lt;/span&gt; &lt;span class="pl-c1"&gt;Bool&lt;/span&gt;
    &lt;span class="pl-k"&gt;var&lt;/span&gt; coordinate&lt;span class="pl-k"&gt;:&lt;/span&gt; CLLocationCoordinate2D
    
    &lt;span class="pl-k"&gt;init&lt;/span&gt;(&lt;span class="pl-smi"&gt;&lt;span class="pl-en"&gt;id&lt;/span&gt;&lt;/span&gt;: &lt;span class="pl-c1"&gt;Int64&lt;/span&gt;&lt;span class="pl-k"&gt;?&lt;/span&gt;, &lt;span class="pl-smi"&gt;&lt;span class="pl-en"&gt;title&lt;/span&gt;&lt;/span&gt;: &lt;span class="pl-c1"&gt;String&lt;/span&gt;, &lt;span class="pl-smi"&gt;&lt;span class="pl-en"&gt;isFavorite&lt;/span&gt;&lt;/span&gt;: &lt;span class="pl-c1"&gt;Bool&lt;/span&gt;, &lt;span class="pl-smi"&gt;&lt;span class="pl-en"&gt;coordinate&lt;/span&gt;&lt;/span&gt;: CLLocationCoordinate2D) {
        &lt;span class="pl-c1"&gt;self&lt;/span&gt;.&lt;span class="pl-smi"&gt;id&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; id
        &lt;span class="pl-c1"&gt;self&lt;/span&gt;.&lt;span class="pl-smi"&gt;title&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; title
        &lt;span class="pl-c1"&gt;self&lt;/span&gt;.&lt;span class="pl-smi"&gt;isFavorite&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; isFavorite
        &lt;span class="pl-c1"&gt;self&lt;/span&gt;.&lt;span class="pl-smi"&gt;coordinate&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; coordinate
        &lt;span class="pl-c1"&gt;super&lt;/span&gt;.&lt;span class="pl-k"&gt;init&lt;/span&gt;()
    }
    
    &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;///&lt;/span&gt; The table name&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;    &lt;span class="pl-k"&gt;override&lt;/span&gt; &lt;span class="pl-k"&gt;class&lt;/span&gt; &lt;span class="pl-k"&gt;var&lt;/span&gt; databaseTableName&lt;span class="pl-k"&gt;:&lt;/span&gt; &lt;span class="pl-c1"&gt;String&lt;/span&gt; {
        &lt;span class="pl-k"&gt;return&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;place&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;
    }
    
    &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;///&lt;/span&gt; The table columns&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;    &lt;span class="pl-k"&gt;enum&lt;/span&gt; &lt;span class="pl-en"&gt;Columns&lt;/span&gt;: &lt;span class="pl-e"&gt;&lt;span class="pl-c1"&gt;String&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-e"&gt;ColumnExpression &lt;/span&gt;{
        &lt;span class="pl-k"&gt;case&lt;/span&gt; &lt;span class="pl-c1"&gt;id&lt;/span&gt;, &lt;span class="pl-c1"&gt;title&lt;/span&gt;, &lt;span class="pl-c1"&gt;favorite&lt;/span&gt;, &lt;span class="pl-c1"&gt;latitude&lt;/span&gt;, &lt;span class="pl-c1"&gt;longitude&lt;/span&gt;
    }
    
    &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;///&lt;/span&gt; Creates a record from a database row&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;    &lt;span class="pl-k"&gt;required&lt;/span&gt; &lt;span class="pl-k"&gt;init&lt;/span&gt;(&lt;span class="pl-smi"&gt;&lt;span class="pl-en"&gt;row&lt;/span&gt;&lt;/span&gt;: Row) {
        id &lt;span class="pl-k"&gt;=&lt;/span&gt; row[Columns.&lt;span class="pl-smi"&gt;id&lt;/span&gt;]
        title &lt;span class="pl-k"&gt;=&lt;/span&gt; row[Columns.&lt;span class="pl-smi"&gt;title&lt;/span&gt;]
        isFavorite &lt;span class="pl-k"&gt;=&lt;/span&gt; row[Columns.&lt;span class="pl-smi"&gt;favorite&lt;/span&gt;]
        coordinate &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;CLLocationCoordinate2D&lt;/span&gt;(
            &lt;span class="pl-c1"&gt;latitude&lt;/span&gt;: row[Columns.&lt;span class="pl-smi"&gt;latitude&lt;/span&gt;],
            &lt;span class="pl-c1"&gt;longitude&lt;/span&gt;: row[Columns.&lt;span class="pl-smi"&gt;longitude&lt;/span&gt;])
        &lt;span class="pl-c1"&gt;super&lt;/span&gt;.&lt;span class="pl-k"&gt;init&lt;/span&gt;(&lt;span class="pl-c1"&gt;row&lt;/span&gt;: row)
    }
    
    &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;///&lt;/span&gt; The values persisted in the database&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;    &lt;span class="pl-k"&gt;override&lt;/span&gt; &lt;span class="pl-k"&gt;func&lt;/span&gt; &lt;span class="pl-en"&gt;encode&lt;/span&gt;(&lt;span class="pl-en"&gt;to&lt;/span&gt; &lt;span class="pl-smi"&gt;container&lt;/span&gt;: &lt;span class="pl-k"&gt;inout&lt;/span&gt; PersistenceContainer) {
        container[Columns.&lt;span class="pl-smi"&gt;id&lt;/span&gt;] &lt;span class="pl-k"&gt;=&lt;/span&gt; id
        container[Columns.&lt;span class="pl-smi"&gt;title&lt;/span&gt;] &lt;span class="pl-k"&gt;=&lt;/span&gt; title
        container[Columns.&lt;span class="pl-smi"&gt;favorite&lt;/span&gt;] &lt;span class="pl-k"&gt;=&lt;/span&gt; isFavorite
        container[Columns.&lt;span class="pl-smi"&gt;latitude&lt;/span&gt;] &lt;span class="pl-k"&gt;=&lt;/span&gt; coordinate.&lt;span class="pl-smi"&gt;latitude&lt;/span&gt;
        container[Columns.&lt;span class="pl-smi"&gt;longitude&lt;/span&gt;] &lt;span class="pl-k"&gt;=&lt;/span&gt; coordinate.&lt;span class="pl-smi"&gt;longitude&lt;/span&gt;
    }
    
    &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;///&lt;/span&gt; Update record ID after a successful insertion&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;    &lt;span class="pl-k"&gt;override&lt;/span&gt; &lt;span class="pl-k"&gt;func&lt;/span&gt; &lt;span class="pl-en"&gt;didInsert&lt;/span&gt;(&lt;span class="pl-en"&gt;with&lt;/span&gt; &lt;span class="pl-smi"&gt;rowID&lt;/span&gt;: &lt;span class="pl-c1"&gt;Int64&lt;/span&gt;, &lt;span class="pl-en"&gt;for&lt;/span&gt; &lt;span class="pl-smi"&gt;column&lt;/span&gt;: &lt;span class="pl-c1"&gt;String&lt;/span&gt;&lt;span class="pl-k"&gt;?&lt;/span&gt;) {
        id &lt;span class="pl-k"&gt;=&lt;/span&gt; rowID
    }
}&lt;/pre&gt;&lt;/div&gt;
&lt;h2&gt;&lt;a id="user-content-record-comparison" class="anchor" aria-hidden="true" href="#record-comparison"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Record Comparison&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;Records that adopt the &lt;a href="#persistablerecord-protocol"&gt;EncodableRecord&lt;/a&gt; protocol can compare against other records, or against previous versions of themselves.&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;This helps avoiding costly UPDATE statements when a record has not been edited.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="#the-updatechanges-methods"&gt;The &lt;code&gt;updateChanges&lt;/code&gt; Methods&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#the-databaseequals-method"&gt;The &lt;code&gt;databaseEquals&lt;/code&gt; Method&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#the-databasechanges-and-hasdatabasechanges-methods"&gt;The &lt;code&gt;databaseChanges&lt;/code&gt; and &lt;code&gt;hasDatabaseChanges&lt;/code&gt; Methods&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;&lt;a id="user-content-the-updatechanges-methods" class="anchor" aria-hidden="true" href="#the-updatechanges-methods"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;The &lt;code&gt;updateChanges&lt;/code&gt; Methods&lt;/h3&gt;
&lt;p&gt;The &lt;code&gt;updateChanges&lt;/code&gt; methods perform a database update of the changed columns only (and does nothing if record has no change).&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;updateChanges(_:from:)&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;This method lets you compare two records:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;if&lt;/span&gt; &lt;span class="pl-k"&gt;let&lt;/span&gt; oldPlayer &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-k"&gt;try&lt;/span&gt; Player.&lt;span class="pl-c1"&gt;fetchOne&lt;/span&gt;(db, &lt;span class="pl-c1"&gt;key&lt;/span&gt;: &lt;span class="pl-c1"&gt;42&lt;/span&gt;) {
    &lt;span class="pl-k"&gt;var&lt;/span&gt; newPlayer &lt;span class="pl-k"&gt;=&lt;/span&gt; oldPlayer
    newPlayer.&lt;span class="pl-smi"&gt;score&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;100&lt;/span&gt;
    &lt;span class="pl-k"&gt;if&lt;/span&gt; &lt;span class="pl-k"&gt;try&lt;/span&gt; newPlayer.&lt;span class="pl-c1"&gt;updateChanges&lt;/span&gt;(db, &lt;span class="pl-c1"&gt;from&lt;/span&gt;: oldPlayer) {
        &lt;span class="pl-c1"&gt;print&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;player was modified, and updated in the database&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
    } &lt;span class="pl-k"&gt;else&lt;/span&gt; {
        &lt;span class="pl-c1"&gt;print&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;player was not modified, and database was not hit&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
    }
}&lt;/pre&gt;&lt;/div&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;updateChanges(_:with:)&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;This method lets you update a record in place:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;if&lt;/span&gt; &lt;span class="pl-k"&gt;var&lt;/span&gt; player &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-k"&gt;try&lt;/span&gt; Player.&lt;span class="pl-c1"&gt;fetchOne&lt;/span&gt;(db, &lt;span class="pl-c1"&gt;key&lt;/span&gt;: &lt;span class="pl-c1"&gt;42&lt;/span&gt;) {
    &lt;span class="pl-k"&gt;let&lt;/span&gt; modified &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-k"&gt;try&lt;/span&gt; player.&lt;span class="pl-c1"&gt;updateChanges&lt;/span&gt;(db) {
        &lt;span class="pl-c1"&gt;$0&lt;/span&gt;.&lt;span class="pl-smi"&gt;score&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;100&lt;/span&gt;
    }
    &lt;span class="pl-k"&gt;if&lt;/span&gt; modified {
        &lt;span class="pl-c1"&gt;print&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;player was modified, and updated in the database&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
    } &lt;span class="pl-k"&gt;else&lt;/span&gt; {
        &lt;span class="pl-c1"&gt;print&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;player was not modified, and database was not hit&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
    }
}&lt;/pre&gt;&lt;/div&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;updateChanges(_:)&lt;/code&gt; (Record class only)&lt;/p&gt;
&lt;p&gt;Instances of the &lt;a href="#record-class"&gt;Record&lt;/a&gt; class are able to compare against themselves, and know if they have changes that have not been saved since the last fetch or saving:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Record class only&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;&lt;span class="pl-k"&gt;if&lt;/span&gt; &lt;span class="pl-k"&gt;let&lt;/span&gt; player &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-k"&gt;try&lt;/span&gt; Player.&lt;span class="pl-c1"&gt;fetchOne&lt;/span&gt;(db, &lt;span class="pl-c1"&gt;key&lt;/span&gt;: &lt;span class="pl-c1"&gt;42&lt;/span&gt;) {
    player.&lt;span class="pl-smi"&gt;score&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;100&lt;/span&gt;
    &lt;span class="pl-k"&gt;if&lt;/span&gt; &lt;span class="pl-k"&gt;try&lt;/span&gt; player.&lt;span class="pl-c1"&gt;updateChanges&lt;/span&gt;(db) {
        &lt;span class="pl-c1"&gt;print&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;player was modified, and updated in the database&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
    } &lt;span class="pl-k"&gt;else&lt;/span&gt; {
        &lt;span class="pl-c1"&gt;print&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;player was not modified, and database was not hit&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
    }
}&lt;/pre&gt;&lt;/div&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;&lt;a id="user-content-the-databaseequals-method" class="anchor" aria-hidden="true" href="#the-databaseequals-method"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;The &lt;code&gt;databaseEquals&lt;/code&gt; Method&lt;/h3&gt;
&lt;p&gt;This method returns whether two records have the same database representation:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;let&lt;/span&gt; oldPlayer&lt;span class="pl-k"&gt;:&lt;/span&gt; Player &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-k"&gt;...&lt;/span&gt;
&lt;span class="pl-k"&gt;var&lt;/span&gt; newPlayer&lt;span class="pl-k"&gt;:&lt;/span&gt; Player &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-k"&gt;...&lt;/span&gt;
&lt;span class="pl-k"&gt;if&lt;/span&gt; newPlayer.&lt;span class="pl-c1"&gt;databaseEquals&lt;/span&gt;(oldPlayer) &lt;span class="pl-k"&gt;==&lt;/span&gt; &lt;span class="pl-c1"&gt;false&lt;/span&gt; {
    &lt;span class="pl-k"&gt;try&lt;/span&gt; newPlayer.&lt;span class="pl-c1"&gt;save&lt;/span&gt;(db)
}&lt;/pre&gt;&lt;/div&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;g-emoji class="g-emoji" alias="point_up" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/261d.png"&gt;☝️&lt;/g-emoji&gt; &lt;strong&gt;Note&lt;/strong&gt;: The comparison is performed on the database representation of records. As long as your record type adopts the EncodableRecord protocol, you don't need to care about Equatable.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3&gt;&lt;a id="user-content-the-databasechanges-and-hasdatabasechanges-methods" class="anchor" aria-hidden="true" href="#the-databasechanges-and-hasdatabasechanges-methods"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;The &lt;code&gt;databaseChanges&lt;/code&gt; and &lt;code&gt;hasDatabaseChanges&lt;/code&gt; Methods&lt;/h3&gt;
&lt;p&gt;&lt;code&gt;databaseChanges(from:)&lt;/code&gt; returns a dictionary of differences between two records:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;let&lt;/span&gt; oldPlayer &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;Player&lt;/span&gt;(&lt;span class="pl-c1"&gt;id&lt;/span&gt;: &lt;span class="pl-c1"&gt;1&lt;/span&gt;, &lt;span class="pl-c1"&gt;name&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;Arthur&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-c1"&gt;score&lt;/span&gt;: &lt;span class="pl-c1"&gt;100&lt;/span&gt;)
&lt;span class="pl-k"&gt;let&lt;/span&gt; newPlayer &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;Player&lt;/span&gt;(&lt;span class="pl-c1"&gt;id&lt;/span&gt;: &lt;span class="pl-c1"&gt;1&lt;/span&gt;, &lt;span class="pl-c1"&gt;name&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;Arthur&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-c1"&gt;score&lt;/span&gt;: &lt;span class="pl-c1"&gt;1000&lt;/span&gt;)
&lt;span class="pl-k"&gt;for&lt;/span&gt; (column, oldValue) &lt;span class="pl-k"&gt;in&lt;/span&gt; newPlayer.&lt;span class="pl-c1"&gt;databaseChanges&lt;/span&gt;(&lt;span class="pl-c1"&gt;from&lt;/span&gt;: oldPlayer) {
    &lt;span class="pl-c1"&gt;print&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;span class="pl-pse"&gt;\(&lt;/span&gt;&lt;span class="pl-s1"&gt;column&lt;/span&gt;&lt;span class="pl-pse"&gt;&lt;span class="pl-s1"&gt;)&lt;/span&gt;&lt;/span&gt; was &lt;span class="pl-pse"&gt;\(&lt;/span&gt;&lt;span class="pl-s1"&gt;oldValue&lt;/span&gt;&lt;span class="pl-pse"&gt;&lt;span class="pl-s1"&gt;)&lt;/span&gt;&lt;/span&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
}
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; prints "score was 100"&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;The &lt;a href="#record-class"&gt;Record&lt;/a&gt; class is able to compare against itself:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Record class only&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;&lt;span class="pl-k"&gt;let&lt;/span&gt; player &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;Player&lt;/span&gt;(&lt;span class="pl-c1"&gt;id&lt;/span&gt;: &lt;span class="pl-c1"&gt;1&lt;/span&gt;, &lt;span class="pl-c1"&gt;name&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;Arthur&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-c1"&gt;score&lt;/span&gt;: &lt;span class="pl-c1"&gt;100&lt;/span&gt;)
&lt;span class="pl-k"&gt;try&lt;/span&gt; player.&lt;span class="pl-c1"&gt;insert&lt;/span&gt;(db)
player.&lt;span class="pl-smi"&gt;score&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;1000&lt;/span&gt;
&lt;span class="pl-k"&gt;for&lt;/span&gt; (column, oldValue) &lt;span class="pl-k"&gt;in&lt;/span&gt; player.&lt;span class="pl-smi"&gt;databaseChanges&lt;/span&gt; {
    &lt;span class="pl-c1"&gt;print&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;span class="pl-pse"&gt;\(&lt;/span&gt;&lt;span class="pl-s1"&gt;column&lt;/span&gt;&lt;span class="pl-pse"&gt;&lt;span class="pl-s1"&gt;)&lt;/span&gt;&lt;/span&gt; was &lt;span class="pl-pse"&gt;\(&lt;/span&gt;&lt;span class="pl-s1"&gt;oldValue&lt;/span&gt;&lt;span class="pl-pse"&gt;&lt;span class="pl-s1"&gt;)&lt;/span&gt;&lt;/span&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
}
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; prints "score was 100"&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;a href="#record-class"&gt;Record&lt;/a&gt; instances also have a &lt;code&gt;hasDatabaseChanges&lt;/code&gt; property:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Record class only&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;player.&lt;span class="pl-smi"&gt;score&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;1000&lt;/span&gt;
&lt;span class="pl-k"&gt;if&lt;/span&gt; player.&lt;span class="pl-smi"&gt;hasDatabaseChanges&lt;/span&gt; {
    &lt;span class="pl-k"&gt;try&lt;/span&gt; player.&lt;span class="pl-c1"&gt;save&lt;/span&gt;(db)
}&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;code&gt;Record.hasDatabaseChanges&lt;/code&gt; is false after a Record instance has been fetched or saved into the database. Subsequent modifications may set it, or not: &lt;code&gt;hasDatabaseChanges&lt;/code&gt; is based on value comparison. &lt;strong&gt;Setting a property to the same value does not set the changed flag&lt;/strong&gt;:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;let&lt;/span&gt; player &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;Player&lt;/span&gt;(&lt;span class="pl-c1"&gt;name&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;Barbara&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-c1"&gt;score&lt;/span&gt;: &lt;span class="pl-c1"&gt;750&lt;/span&gt;)
player.&lt;span class="pl-smi"&gt;hasDatabaseChanges&lt;/span&gt; &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; true&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;
&lt;span class="pl-k"&gt;try&lt;/span&gt; player.&lt;span class="pl-c1"&gt;insert&lt;/span&gt;(db)
player.&lt;span class="pl-smi"&gt;hasDatabaseChanges&lt;/span&gt; &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; false&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;
player.&lt;span class="pl-smi"&gt;name&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;Barbara&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;
player.&lt;span class="pl-smi"&gt;hasDatabaseChanges&lt;/span&gt; &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; false&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;
player.&lt;span class="pl-smi"&gt;score&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;1000&lt;/span&gt;
player.&lt;span class="pl-smi"&gt;hasDatabaseChanges&lt;/span&gt; &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; true&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;player.&lt;span class="pl-smi"&gt;databaseChanges&lt;/span&gt;    &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; ["score": 750]&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;For an efficient algorithm which synchronizes the content of a database table with a JSON payload, check &lt;a href="Documentation/Playgrounds/JSONSynchronization.playground/Contents.swift"&gt;JSONSynchronization.playground&lt;/a&gt;.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-record-customization-options" class="anchor" aria-hidden="true" href="#record-customization-options"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Record Customization Options&lt;/h2&gt;
&lt;p&gt;GRDB records come with many default behaviors, that are designed to fit most situations. Many of those defaults can be customized for your specific needs:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="#customizing-the-persistence-methods"&gt;Customizing the Persistence Methods&lt;/a&gt;: define what happens when you call a persistance method such as &lt;code&gt;player.insert(db)&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#conflict-resolution"&gt;Conflict Resolution&lt;/a&gt;: Run &lt;code&gt;INSERT OR REPLACE&lt;/code&gt; queries, and generally define what happens when a persistence method violates a unique index.&lt;/li&gt;
&lt;li&gt;&lt;a href="#the-implicit-rowid-primary-key"&gt;The Implicit RowID Primary Key&lt;/a&gt;: all about the special &lt;code&gt;rowid&lt;/code&gt; column.&lt;/li&gt;
&lt;li&gt;&lt;a href="#columns-selected-by-a-request"&gt;Columns Selected by a Request&lt;/a&gt;: define which columns are selected by requests such as &lt;code&gt;Player.fetchAll(db)&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;&lt;a href="#beyond-fetchablerecord"&gt;Beyond FetchableRecord&lt;/a&gt;: the FetchableRecord protocol is not the end of the story.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;a href="#codable-records"&gt;Codable Records&lt;/a&gt; have a few extra options:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="#json-columns"&gt;JSON Columns&lt;/a&gt;: control the format of JSON columns.&lt;/li&gt;
&lt;li&gt;&lt;a href="#date-and-uuid-coding-strategies"&gt;Date and UUID Coding Strategies&lt;/a&gt;: control the format of Date and UUID properties in your Codable records.&lt;/li&gt;
&lt;li&gt;&lt;a href="#the-userinfo-dictionary"&gt;The userInfo Dictionary&lt;/a&gt;: adapt your Codable implementation for the database.&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;&lt;a id="user-content-conflict-resolution" class="anchor" aria-hidden="true" href="#conflict-resolution"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Conflict Resolution&lt;/h3&gt;
&lt;p&gt;&lt;strong&gt;Insertions and updates can create conflicts&lt;/strong&gt;: for example, a query may attempt to insert a duplicate row that violates a unique index.&lt;/p&gt;
&lt;p&gt;Those conflicts normally end with an error. Yet SQLite let you alter the default behavior, and handle conflicts with specific policies. For example, the &lt;code&gt;INSERT OR REPLACE&lt;/code&gt; statement handles conflicts with the "replace" policy which replaces the conflicting row instead of throwing an error.&lt;/p&gt;
&lt;p&gt;The &lt;a href="https://www.sqlite.org/lang_conflict.html" rel="nofollow"&gt;five different policies&lt;/a&gt; are: abort (the default), replace, rollback, fail, and ignore.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;SQLite let you specify conflict policies at two different places:&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;In the definition of the database table:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; CREATE TABLE player (&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt;     id INTEGER PRIMARY KEY AUTOINCREMENT,&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt;     email TEXT UNIQUE ON CONFLICT REPLACE&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; )&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;&lt;span class="pl-k"&gt;try&lt;/span&gt; db.&lt;span class="pl-c1"&gt;create&lt;/span&gt;(&lt;span class="pl-c1"&gt;table&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;player&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;) { t &lt;span class="pl-k"&gt;in&lt;/span&gt;
    t.&lt;span class="pl-c1"&gt;autoIncrementedPrimaryKey&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;id&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
    t.&lt;span class="pl-c1"&gt;column&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;email&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, .&lt;span class="pl-c1"&gt;text&lt;/span&gt;).&lt;span class="pl-c1"&gt;unique&lt;/span&gt;(&lt;span class="pl-c1"&gt;onConflict&lt;/span&gt;: .&lt;span class="pl-smi"&gt;replace&lt;/span&gt;) &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; &amp;lt;--&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;}

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Despite the unique index on email, both inserts succeed.&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; The second insert replaces the first row:&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;&lt;span class="pl-k"&gt;try&lt;/span&gt; db.&lt;span class="pl-c1"&gt;execute&lt;/span&gt;(&lt;span class="pl-c1"&gt;sql&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;INSERT INTO player (email) VALUES (?)&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-c1"&gt;arguments&lt;/span&gt;: [&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;arthur@example.com&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;])
&lt;span class="pl-k"&gt;try&lt;/span&gt; db.&lt;span class="pl-c1"&gt;execute&lt;/span&gt;(&lt;span class="pl-c1"&gt;sql&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;INSERT INTO player (email) VALUES (?)&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-c1"&gt;arguments&lt;/span&gt;: [&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;arthur@example.com&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;])&lt;/pre&gt;&lt;/div&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;In each modification query:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; CREATE TABLE player (&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt;     id INTEGER PRIMARY KEY AUTOINCREMENT,&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt;     email TEXT UNIQUE&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; )&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;&lt;span class="pl-k"&gt;try&lt;/span&gt; db.&lt;span class="pl-c1"&gt;create&lt;/span&gt;(&lt;span class="pl-c1"&gt;table&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;player&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;) { t &lt;span class="pl-k"&gt;in&lt;/span&gt;
    t.&lt;span class="pl-c1"&gt;autoIncrementedPrimaryKey&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;id&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
    t.&lt;span class="pl-c1"&gt;column&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;email&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, .&lt;span class="pl-c1"&gt;text&lt;/span&gt;).&lt;span class="pl-c1"&gt;unique&lt;/span&gt;()
}

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Again, despite the unique index on email, both inserts succeed.&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;&lt;span class="pl-k"&gt;try&lt;/span&gt; db.&lt;span class="pl-c1"&gt;execute&lt;/span&gt;(&lt;span class="pl-c1"&gt;sql&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;INSERT OR REPLACE INTO player (email) VALUES (?)&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-c1"&gt;arguments&lt;/span&gt;: [&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;arthur@example.com&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;])
&lt;span class="pl-k"&gt;try&lt;/span&gt; db.&lt;span class="pl-c1"&gt;execute&lt;/span&gt;(&lt;span class="pl-c1"&gt;sql&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;INSERT OR REPLACE INTO player (email) VALUES (?)&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-c1"&gt;arguments&lt;/span&gt;: [&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;arthur@example.com&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;])&lt;/pre&gt;&lt;/div&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;When you want to handle conflicts at the query level, specify a custom &lt;code&gt;persistenceConflictPolicy&lt;/code&gt; in your type that adopts the PersistableRecord protocol. It will alter the INSERT and UPDATE queries run by the &lt;code&gt;insert&lt;/code&gt;, &lt;code&gt;update&lt;/code&gt; and &lt;code&gt;save&lt;/code&gt; &lt;a href="#persistence-methods"&gt;persistence methods&lt;/a&gt;:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;protocol&lt;/span&gt; &lt;span class="pl-en"&gt;MutablePersistableRecord&lt;/span&gt; {
    &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;///&lt;/span&gt; The policy that handles SQLite conflicts when records are&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;    &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;///&lt;/span&gt; inserted or updated.&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;    &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;///&lt;/span&gt;&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;    &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;///&lt;/span&gt; This property is optional: its default value uses the ABORT&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;    &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;///&lt;/span&gt; policy for both insertions and updates, so that GRDB generate&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;    &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;///&lt;/span&gt; regular INSERT and UPDATE queries.&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;    &lt;span class="pl-k"&gt;static&lt;/span&gt; &lt;span class="pl-k"&gt;var&lt;/span&gt; persistenceConflictPolicy&lt;span class="pl-k"&gt;:&lt;/span&gt; PersistenceConflictPolicy { &lt;span class="pl-k"&gt;get&lt;/span&gt; }
}

&lt;span class="pl-k"&gt;struct&lt;/span&gt; &lt;span class="pl-en"&gt;Player&lt;/span&gt; : &lt;span class="pl-e"&gt;MutablePersistableRecord &lt;/span&gt;{
    &lt;span class="pl-k"&gt;static&lt;/span&gt; &lt;span class="pl-k"&gt;let&lt;/span&gt; persistenceConflictPolicy &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;PersistenceConflictPolicy&lt;/span&gt;(
        &lt;span class="pl-c1"&gt;insert&lt;/span&gt;: .&lt;span class="pl-smi"&gt;replace&lt;/span&gt;,
        &lt;span class="pl-c1"&gt;update&lt;/span&gt;: .&lt;span class="pl-smi"&gt;replace&lt;/span&gt;)
}

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; INSERT OR REPLACE INTO player (...) VALUES (...)&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;&lt;span class="pl-k"&gt;try&lt;/span&gt; player.&lt;span class="pl-c1"&gt;insert&lt;/span&gt;(db)&lt;/pre&gt;&lt;/div&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;g-emoji class="g-emoji" alias="point_up" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/261d.png"&gt;☝️&lt;/g-emoji&gt; &lt;strong&gt;Note&lt;/strong&gt;: the &lt;code&gt;ignore&lt;/code&gt; policy does not play well at all with the &lt;code&gt;didInsert&lt;/code&gt; method which notifies the rowID of inserted records. Choose your poison:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;if you specify the &lt;code&gt;ignore&lt;/code&gt; policy in the database table definition, don't implement the &lt;code&gt;didInsert&lt;/code&gt; method: it will be called with some random id in case of failed insert.&lt;/li&gt;
&lt;li&gt;if you specify the &lt;code&gt;ignore&lt;/code&gt; policy at the query level, the &lt;code&gt;didInsert&lt;/code&gt; method is never called.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;g-emoji class="g-emoji" alias="point_up" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/261d.png"&gt;☝️&lt;/g-emoji&gt; &lt;strong&gt;Note&lt;/strong&gt;: The &lt;code&gt;replace&lt;/code&gt; policy may have to delete rows so that inserts and updates can succeed. Those deletions are not reported to &lt;a href="#transactionobserver-protocol"&gt;transaction observers&lt;/a&gt; (this might change in a future release of SQLite).&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3&gt;&lt;a id="user-content-the-implicit-rowid-primary-key" class="anchor" aria-hidden="true" href="#the-implicit-rowid-primary-key"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;The Implicit RowID Primary Key&lt;/h3&gt;
&lt;p&gt;&lt;strong&gt;All SQLite tables have a primary key.&lt;/strong&gt; Even when the primary key is not explicit:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; No explicit primary key&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;&lt;span class="pl-k"&gt;try&lt;/span&gt; db.&lt;span class="pl-c1"&gt;create&lt;/span&gt;(&lt;span class="pl-c1"&gt;table&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;event&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;) { t &lt;span class="pl-k"&gt;in&lt;/span&gt;
    t.&lt;span class="pl-c1"&gt;column&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;message&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, .&lt;span class="pl-c1"&gt;text&lt;/span&gt;)
    t.&lt;span class="pl-c1"&gt;column&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;date&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, .&lt;span class="pl-smi"&gt;datetime&lt;/span&gt;)
}

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; No way to define an explicit primary key&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;&lt;span class="pl-k"&gt;try&lt;/span&gt; db.&lt;span class="pl-c1"&gt;create&lt;/span&gt;(&lt;span class="pl-c1"&gt;virtualTable&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;book&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-c1"&gt;using&lt;/span&gt;: &lt;span class="pl-c1"&gt;FTS4&lt;/span&gt;()) { t &lt;span class="pl-k"&gt;in&lt;/span&gt;
    t.&lt;span class="pl-c1"&gt;column&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;title&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
    t.&lt;span class="pl-c1"&gt;column&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;author&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
    t.&lt;span class="pl-c1"&gt;column&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;body&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
}&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;The implicit primary key is stored in the hidden column &lt;code&gt;rowid&lt;/code&gt;. Hidden means that &lt;code&gt;SELECT *&lt;/code&gt; does not select it, and yet it can be selected and queried: &lt;code&gt;SELECT *, rowid ... WHERE rowid = 1&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;Some GRDB methods will automatically use this hidden column when a table has no explicit primary key:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; SELECT * FROM event WHERE rowid = 1&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;&lt;span class="pl-k"&gt;let&lt;/span&gt; event &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-k"&gt;try&lt;/span&gt; Event.&lt;span class="pl-c1"&gt;fetchOne&lt;/span&gt;(db, &lt;span class="pl-c1"&gt;key&lt;/span&gt;: &lt;span class="pl-c1"&gt;1&lt;/span&gt;)

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; DELETE FROM book WHERE rowid = 1&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;&lt;span class="pl-k"&gt;try&lt;/span&gt; Book.&lt;span class="pl-c1"&gt;deleteOne&lt;/span&gt;(db, &lt;span class="pl-c1"&gt;key&lt;/span&gt;: &lt;span class="pl-c1"&gt;1&lt;/span&gt;)&lt;/pre&gt;&lt;/div&gt;
&lt;h4&gt;&lt;a id="user-content-exposing-the-rowid-column" class="anchor" aria-hidden="true" href="#exposing-the-rowid-column"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Exposing the RowID Column&lt;/h4&gt;
&lt;p&gt;&lt;strong&gt;By default, a record type that wraps a table without any explicit primary key doesn't know about the hidden rowid column.&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Without primary key, records don't have any identity, and the &lt;a href="#persistence-methods"&gt;persistence method&lt;/a&gt; can behave in undesired fashion: &lt;code&gt;update()&lt;/code&gt; throws errors, &lt;code&gt;save()&lt;/code&gt; always performs insertions and may break constraints, &lt;code&gt;exists()&lt;/code&gt; is always false.&lt;/p&gt;
&lt;p&gt;When SQLite won't let you provide an explicit primary key (as in &lt;a href="#full-text-search"&gt;full-text&lt;/a&gt; tables, for example), you may want to make your record type fully aware of the hidden rowid column:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;Have the &lt;code&gt;databaseSelection&lt;/code&gt; static property (from the &lt;a href="#tablerecord-protocol"&gt;TableRecord&lt;/a&gt; protocol) return the hidden rowid column:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;struct&lt;/span&gt; &lt;span class="pl-en"&gt;Event&lt;/span&gt; : &lt;span class="pl-e"&gt;TableRecord &lt;/span&gt;{
    &lt;span class="pl-k"&gt;static&lt;/span&gt; &lt;span class="pl-k"&gt;let&lt;/span&gt; databaseSelection&lt;span class="pl-k"&gt;:&lt;/span&gt; [SQLSelectable] &lt;span class="pl-k"&gt;=&lt;/span&gt; [&lt;span class="pl-c1"&gt;AllColumns&lt;/span&gt;(), Column.&lt;span class="pl-smi"&gt;rowID&lt;/span&gt;]
}

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; When you subclass Record, you need an override:&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;&lt;span class="pl-k"&gt;class&lt;/span&gt; &lt;span class="pl-en"&gt;Book&lt;/span&gt; : &lt;span class="pl-e"&gt;Record &lt;/span&gt;{
    &lt;span class="pl-k"&gt;override&lt;/span&gt; &lt;span class="pl-k"&gt;class&lt;/span&gt; &lt;span class="pl-k"&gt;var&lt;/span&gt; databaseSelection&lt;span class="pl-k"&gt;:&lt;/span&gt; [SQLSelectable] {
        &lt;span class="pl-k"&gt;return&lt;/span&gt; [&lt;span class="pl-c1"&gt;AllColums&lt;/span&gt;(), Column.&lt;span class="pl-smi"&gt;rowID&lt;/span&gt;]
    }
}&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;GRDB will then select the &lt;code&gt;rowid&lt;/code&gt; column by default:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; SELECT *, rowid FROM event&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;&lt;span class="pl-k"&gt;let&lt;/span&gt; events &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-k"&gt;try&lt;/span&gt; Event.&lt;span class="pl-c1"&gt;fetchAll&lt;/span&gt;(db)&lt;/pre&gt;&lt;/div&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Have &lt;code&gt;init(row:)&lt;/code&gt; from the &lt;a href="#fetchablerecord-protocol"&gt;FetchableRecord&lt;/a&gt; protocol consume the "rowid" column:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;struct&lt;/span&gt; &lt;span class="pl-en"&gt;Event&lt;/span&gt; : &lt;span class="pl-e"&gt;FetchableRecord &lt;/span&gt;{
    &lt;span class="pl-k"&gt;var&lt;/span&gt; id&lt;span class="pl-k"&gt;:&lt;/span&gt; &lt;span class="pl-c1"&gt;Int64&lt;/span&gt;&lt;span class="pl-k"&gt;?&lt;/span&gt;
    
    &lt;span class="pl-k"&gt;init&lt;/span&gt;(&lt;span class="pl-smi"&gt;&lt;span class="pl-en"&gt;row&lt;/span&gt;&lt;/span&gt;: Row) {
        id &lt;span class="pl-k"&gt;=&lt;/span&gt; row[Column.&lt;span class="pl-smi"&gt;rowID&lt;/span&gt;]
    }
}&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Your fetched records will then know their ids:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;let&lt;/span&gt; event &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-k"&gt;try&lt;/span&gt; Event.&lt;span class="pl-c1"&gt;fetchOne&lt;/span&gt;(db)&lt;span class="pl-k"&gt;!&lt;/span&gt;
event.&lt;span class="pl-smi"&gt;id&lt;/span&gt; &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; some value&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Encode the rowid in &lt;code&gt;encode(to:)&lt;/code&gt;, and keep it in the &lt;code&gt;didInsert(with:for:)&lt;/code&gt; method (both from the &lt;a href="#persistablerecord-protocol"&gt;PersistableRecord and MutablePersistableRecord&lt;/a&gt; protocols):&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;struct&lt;/span&gt; &lt;span class="pl-en"&gt;Event&lt;/span&gt; : &lt;span class="pl-e"&gt;MutablePersistableRecord &lt;/span&gt;{
    &lt;span class="pl-k"&gt;var&lt;/span&gt; id&lt;span class="pl-k"&gt;:&lt;/span&gt; &lt;span class="pl-c1"&gt;Int64&lt;/span&gt;&lt;span class="pl-k"&gt;?&lt;/span&gt;
    
    &lt;span class="pl-k"&gt;func&lt;/span&gt; &lt;span class="pl-en"&gt;encode&lt;/span&gt;(&lt;span class="pl-en"&gt;to&lt;/span&gt; &lt;span class="pl-smi"&gt;container&lt;/span&gt;: &lt;span class="pl-k"&gt;inout&lt;/span&gt; PersistenceContainer) {
        container[Column.&lt;span class="pl-smi"&gt;rowID&lt;/span&gt;] &lt;span class="pl-k"&gt;=&lt;/span&gt; id
        container[&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;message&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;] &lt;span class="pl-k"&gt;=&lt;/span&gt; message
        container[&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;date&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;] &lt;span class="pl-k"&gt;=&lt;/span&gt; date
    }
    
    &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Update auto-incremented id upon successful insertion&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;    &lt;span class="pl-k"&gt;mutating&lt;/span&gt; &lt;span class="pl-k"&gt;func&lt;/span&gt; &lt;span class="pl-en"&gt;didInsert&lt;/span&gt;(&lt;span class="pl-en"&gt;with&lt;/span&gt; &lt;span class="pl-smi"&gt;rowID&lt;/span&gt;: &lt;span class="pl-c1"&gt;Int64&lt;/span&gt;, &lt;span class="pl-en"&gt;for&lt;/span&gt; &lt;span class="pl-smi"&gt;column&lt;/span&gt;: &lt;span class="pl-c1"&gt;String&lt;/span&gt;&lt;span class="pl-k"&gt;?&lt;/span&gt;) {
        id &lt;span class="pl-k"&gt;=&lt;/span&gt; rowID
    }
}&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;You will then be able to track your record ids, update them, or check for their existence:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;let&lt;/span&gt; event &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;Event&lt;/span&gt;(&lt;span class="pl-c1"&gt;message&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;foo&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-c1"&gt;date&lt;/span&gt;: &lt;span class="pl-c1"&gt;Date&lt;/span&gt;())

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Insertion sets the record id:&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;&lt;span class="pl-k"&gt;try&lt;/span&gt; event.&lt;span class="pl-c1"&gt;insert&lt;/span&gt;(db)
event.&lt;span class="pl-smi"&gt;id&lt;/span&gt; &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; some value&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Record can be updated:&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;event.&lt;span class="pl-smi"&gt;message&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;bar&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;
&lt;span class="pl-k"&gt;try&lt;/span&gt; event.&lt;span class="pl-c1"&gt;update&lt;/span&gt;(db)

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Record knows if it exists:&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;event.&lt;span class="pl-c1"&gt;exists&lt;/span&gt;(db) &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; true&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h3&gt;&lt;a id="user-content-beyond-fetchablerecord" class="anchor" aria-hidden="true" href="#beyond-fetchablerecord"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Beyond FetchableRecord&lt;/h3&gt;
&lt;p&gt;&lt;strong&gt;Some GRDB users eventually discover that the &lt;a href="#fetchablerecord-protocol"&gt;FetchableRecord&lt;/a&gt; protocol does not fit all situations.&lt;/strong&gt; Use cases that are not well handled by FetchableRecord include:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Your application needs polymorphic row decoding: it decodes some type or another, depending on the values contained in a database row.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Your application needs to decode rows with a context: each decoded value should be initialized with some extra value that does not come from the database.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Your application needs a record type that supports untrusted databases, and may fail at decoding database rows (throw an error when a row contains invalid values).&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Since those use cases are not well handled by FetchableRecord, don't try to implement them on top of this protocol: you'll just fight the framework.&lt;/p&gt;
&lt;p&gt;Instead, please have a look at the &lt;a href="Documentation/Playgrounds/CustomizedDecodingOfDatabaseRows.playground/Contents.swift"&gt;CustomizedDecodingOfDatabaseRows&lt;/a&gt; playground. You'll run some sample code, and learn how to escape FetchableRecord when you need. And remember that leaving FetchableRecord will not deprive you of &lt;a href="#requests"&gt;query interface requests&lt;/a&gt; and generally all SQL generation features of the &lt;a href="#tablerecord-protocol"&gt;TableRecord&lt;/a&gt; and &lt;a href="#persistablerecord-protocol"&gt;PersistableRecord&lt;/a&gt; protocols.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-examples-of-record-definitions" class="anchor" aria-hidden="true" href="#examples-of-record-definitions"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Examples of Record Definitions&lt;/h2&gt;
&lt;p&gt;We will show below how to declare a record type for the following database table:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;try&lt;/span&gt; dbQueue.&lt;span class="pl-smi"&gt;write&lt;/span&gt; { db &lt;span class="pl-k"&gt;in&lt;/span&gt;
    &lt;span class="pl-k"&gt;try&lt;/span&gt; db.&lt;span class="pl-c1"&gt;create&lt;/span&gt;(&lt;span class="pl-c1"&gt;table&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;place&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;) { t &lt;span class="pl-k"&gt;in&lt;/span&gt;
        t.&lt;span class="pl-c1"&gt;autoIncrementedPrimaryKey&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;id&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
        t.&lt;span class="pl-c1"&gt;column&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;title&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, .&lt;span class="pl-c1"&gt;text&lt;/span&gt;).&lt;span class="pl-c1"&gt;notNull&lt;/span&gt;()
        t.&lt;span class="pl-c1"&gt;column&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;isFavorite&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, .&lt;span class="pl-smi"&gt;boolean&lt;/span&gt;).&lt;span class="pl-c1"&gt;notNull&lt;/span&gt;().&lt;span class="pl-c1"&gt;defaults&lt;/span&gt;(&lt;span class="pl-c1"&gt;to&lt;/span&gt;: &lt;span class="pl-c1"&gt;false&lt;/span&gt;)
        t.&lt;span class="pl-c1"&gt;column&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;longitude&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, .&lt;span class="pl-c1"&gt;double&lt;/span&gt;).&lt;span class="pl-c1"&gt;notNull&lt;/span&gt;()
        t.&lt;span class="pl-c1"&gt;column&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;latitude&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, .&lt;span class="pl-c1"&gt;double&lt;/span&gt;).&lt;span class="pl-c1"&gt;notNull&lt;/span&gt;()
    }
}&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Each one of the three examples below is correct. You will pick one or the other depending on your personal preferences and the requirements of your application:&lt;/p&gt;
&lt;details&gt;
  &lt;summary&gt;Define a Codable struct, and adopt the record protocols you need&lt;/summary&gt;
&lt;p&gt;This is the shortest way to define a record type.&lt;/p&gt;
&lt;p&gt;See the &lt;a href="#record-protocols-overview"&gt;Record Protocols Overview&lt;/a&gt;, and &lt;a href="#codable-records"&gt;Codable Records&lt;/a&gt; for more information.&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;struct&lt;/span&gt; &lt;span class="pl-en"&gt;Place&lt;/span&gt;: &lt;span class="pl-e"&gt;Codable &lt;/span&gt;{
    &lt;span class="pl-k"&gt;var&lt;/span&gt; id&lt;span class="pl-k"&gt;:&lt;/span&gt; &lt;span class="pl-c1"&gt;Int64&lt;/span&gt;&lt;span class="pl-k"&gt;?&lt;/span&gt;
    &lt;span class="pl-k"&gt;var&lt;/span&gt; title&lt;span class="pl-k"&gt;:&lt;/span&gt; &lt;span class="pl-c1"&gt;String&lt;/span&gt;
    &lt;span class="pl-k"&gt;var&lt;/span&gt; isFavorite&lt;span class="pl-k"&gt;:&lt;/span&gt; &lt;span class="pl-c1"&gt;Bool&lt;/span&gt;
    &lt;span class="pl-k"&gt;private&lt;/span&gt; &lt;span class="pl-k"&gt;var&lt;/span&gt; latitude&lt;span class="pl-k"&gt;:&lt;/span&gt; CLLocationDegrees
    &lt;span class="pl-k"&gt;private&lt;/span&gt; &lt;span class="pl-k"&gt;var&lt;/span&gt; longitude&lt;span class="pl-k"&gt;:&lt;/span&gt; CLLocationDegrees
    
    &lt;span class="pl-k"&gt;var&lt;/span&gt; coordinate&lt;span class="pl-k"&gt;:&lt;/span&gt; CLLocationCoordinate2D {
        &lt;span class="pl-k"&gt;get&lt;/span&gt; {
            &lt;span class="pl-k"&gt;return&lt;/span&gt; &lt;span class="pl-c1"&gt;CLLocationCoordinate2D&lt;/span&gt;(
                &lt;span class="pl-c1"&gt;latitude&lt;/span&gt;: latitude,
                &lt;span class="pl-c1"&gt;longitude&lt;/span&gt;: longitude)
        }
        &lt;span class="pl-k"&gt;set&lt;/span&gt; {
            latitude &lt;span class="pl-k"&gt;=&lt;/span&gt; newValue.&lt;span class="pl-smi"&gt;latitude&lt;/span&gt;
            longitude &lt;span class="pl-k"&gt;=&lt;/span&gt; newValue.&lt;span class="pl-smi"&gt;longitude&lt;/span&gt;
        }
    }
}

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; SQL generation&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;&lt;span class="pl-k"&gt;extension&lt;/span&gt; &lt;span class="pl-en"&gt;Place&lt;/span&gt;: &lt;span class="pl-e"&gt;TableRecord &lt;/span&gt;{
    &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;///&lt;/span&gt; The table columns&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;    &lt;span class="pl-k"&gt;enum&lt;/span&gt; &lt;span class="pl-en"&gt;Columns&lt;/span&gt; {
        &lt;span class="pl-k"&gt;static&lt;/span&gt; &lt;span class="pl-k"&gt;let&lt;/span&gt; id &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;Column&lt;/span&gt;(CodingKeys.&lt;span class="pl-smi"&gt;id&lt;/span&gt;)
        &lt;span class="pl-k"&gt;static&lt;/span&gt; &lt;span class="pl-k"&gt;let&lt;/span&gt; title &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;Column&lt;/span&gt;(CodingKeys.&lt;span class="pl-smi"&gt;title&lt;/span&gt;)
        &lt;span class="pl-k"&gt;static&lt;/span&gt; &lt;span class="pl-k"&gt;let&lt;/span&gt; isFavorite &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;Column&lt;/span&gt;(CodingKeys.&lt;span class="pl-smi"&gt;isFavorite&lt;/span&gt;)
        &lt;span class="pl-k"&gt;static&lt;/span&gt; &lt;span class="pl-k"&gt;let&lt;/span&gt; latitude &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;Column&lt;/span&gt;(CodingKeys.&lt;span class="pl-smi"&gt;latitude&lt;/span&gt;)
        &lt;span class="pl-k"&gt;static&lt;/span&gt; &lt;span class="pl-k"&gt;let&lt;/span&gt; longitude &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;Column&lt;/span&gt;(CodingKeys.&lt;span class="pl-smi"&gt;longitude&lt;/span&gt;)
    }
}

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Fetching methods&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;&lt;span class="pl-k"&gt;extension&lt;/span&gt; &lt;span class="pl-en"&gt;Place&lt;/span&gt;: &lt;span class="pl-e"&gt;FetchableRecord &lt;/span&gt;{ }

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Persistence methods&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;&lt;span class="pl-k"&gt;extension&lt;/span&gt; &lt;span class="pl-en"&gt;Place&lt;/span&gt;: &lt;span class="pl-e"&gt;MutablePersistableRecord &lt;/span&gt;{
    &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Update auto-incremented id upon successful insertion&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;    &lt;span class="pl-k"&gt;mutating&lt;/span&gt; &lt;span class="pl-k"&gt;func&lt;/span&gt; &lt;span class="pl-en"&gt;didInsert&lt;/span&gt;(&lt;span class="pl-en"&gt;with&lt;/span&gt; &lt;span class="pl-smi"&gt;rowID&lt;/span&gt;: &lt;span class="pl-c1"&gt;Int64&lt;/span&gt;, &lt;span class="pl-en"&gt;for&lt;/span&gt; &lt;span class="pl-smi"&gt;column&lt;/span&gt;: &lt;span class="pl-c1"&gt;String&lt;/span&gt;&lt;span class="pl-k"&gt;?&lt;/span&gt;) {
        id &lt;span class="pl-k"&gt;=&lt;/span&gt; rowID
    }
}&lt;/pre&gt;&lt;/div&gt;
&lt;/details&gt;
&lt;details&gt;
  &lt;summary&gt;Define a plain struct, and adopt the record protocols you need&lt;/summary&gt;
&lt;p&gt;See the &lt;a href="#record-protocols-overview"&gt;Record Protocols Overview&lt;/a&gt; for more information.&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;struct&lt;/span&gt; &lt;span class="pl-en"&gt;Place&lt;/span&gt; {
    &lt;span class="pl-k"&gt;var&lt;/span&gt; id&lt;span class="pl-k"&gt;:&lt;/span&gt; &lt;span class="pl-c1"&gt;Int64&lt;/span&gt;&lt;span class="pl-k"&gt;?&lt;/span&gt;
    &lt;span class="pl-k"&gt;var&lt;/span&gt; title&lt;span class="pl-k"&gt;:&lt;/span&gt; &lt;span class="pl-c1"&gt;String&lt;/span&gt;
    &lt;span class="pl-k"&gt;var&lt;/span&gt; isFavorite&lt;span class="pl-k"&gt;:&lt;/span&gt; &lt;span class="pl-c1"&gt;Bool&lt;/span&gt;
    &lt;span class="pl-k"&gt;var&lt;/span&gt; coordinate&lt;span class="pl-k"&gt;:&lt;/span&gt; CLLocationCoordinate2D
}

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; SQL generation&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;&lt;span class="pl-k"&gt;extension&lt;/span&gt; &lt;span class="pl-en"&gt;Place&lt;/span&gt;: &lt;span class="pl-e"&gt;TableRecord &lt;/span&gt;{
    &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;///&lt;/span&gt; The table columns&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;    &lt;span class="pl-k"&gt;enum&lt;/span&gt; &lt;span class="pl-en"&gt;Columns&lt;/span&gt;: &lt;span class="pl-e"&gt;&lt;span class="pl-c1"&gt;String&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-e"&gt;ColumnExpression &lt;/span&gt;{
        &lt;span class="pl-k"&gt;case&lt;/span&gt; &lt;span class="pl-c1"&gt;id&lt;/span&gt;, &lt;span class="pl-c1"&gt;title&lt;/span&gt;, &lt;span class="pl-c1"&gt;isFavorite&lt;/span&gt;, &lt;span class="pl-c1"&gt;latitude&lt;/span&gt;, &lt;span class="pl-c1"&gt;longitude&lt;/span&gt;
    }
}

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Fetching methods&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;&lt;span class="pl-k"&gt;extension&lt;/span&gt; &lt;span class="pl-en"&gt;Place&lt;/span&gt;: &lt;span class="pl-e"&gt;FetchableRecord &lt;/span&gt;{
    &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;///&lt;/span&gt; Creates a record from a database row&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;    &lt;span class="pl-k"&gt;init&lt;/span&gt;(&lt;span class="pl-smi"&gt;&lt;span class="pl-en"&gt;row&lt;/span&gt;&lt;/span&gt;: Row) {
        id &lt;span class="pl-k"&gt;=&lt;/span&gt; row[Columns.&lt;span class="pl-smi"&gt;id&lt;/span&gt;]
        title &lt;span class="pl-k"&gt;=&lt;/span&gt; row[Columns.&lt;span class="pl-smi"&gt;title&lt;/span&gt;]
        isFavorite &lt;span class="pl-k"&gt;=&lt;/span&gt; row[Columns.&lt;span class="pl-smi"&gt;isFavorite&lt;/span&gt;]
        coordinate &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;CLLocationCoordinate2D&lt;/span&gt;(
            &lt;span class="pl-c1"&gt;latitude&lt;/span&gt;: row[Columns.&lt;span class="pl-smi"&gt;latitude&lt;/span&gt;],
            &lt;span class="pl-c1"&gt;longitude&lt;/span&gt;: row[Columns.&lt;span class="pl-smi"&gt;longitude&lt;/span&gt;])
    }
}

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Persistence methods&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;&lt;span class="pl-k"&gt;extension&lt;/span&gt; &lt;span class="pl-en"&gt;Place&lt;/span&gt;: &lt;span class="pl-e"&gt;MutablePersistableRecord &lt;/span&gt;{
    &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;///&lt;/span&gt; The values persisted in the database&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;    &lt;span class="pl-k"&gt;func&lt;/span&gt; &lt;span class="pl-en"&gt;encode&lt;/span&gt;(&lt;span class="pl-en"&gt;to&lt;/span&gt; &lt;span class="pl-smi"&gt;container&lt;/span&gt;: &lt;span class="pl-k"&gt;inout&lt;/span&gt; PersistenceContainer) {
        container[Columns.&lt;span class="pl-smi"&gt;id&lt;/span&gt;] &lt;span class="pl-k"&gt;=&lt;/span&gt; id
        container[Columns.&lt;span class="pl-smi"&gt;title&lt;/span&gt;] &lt;span class="pl-k"&gt;=&lt;/span&gt; title
        container[Columns.&lt;span class="pl-smi"&gt;isFavorite&lt;/span&gt;] &lt;span class="pl-k"&gt;=&lt;/span&gt; isFavorite
        container[Columns.&lt;span class="pl-smi"&gt;latitude&lt;/span&gt;] &lt;span class="pl-k"&gt;=&lt;/span&gt; coordinate.&lt;span class="pl-smi"&gt;latitude&lt;/span&gt;
        container[Columns.&lt;span class="pl-smi"&gt;longitude&lt;/span&gt;] &lt;span class="pl-k"&gt;=&lt;/span&gt; coordinate.&lt;span class="pl-smi"&gt;longitude&lt;/span&gt;
    }
    
    &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Update auto-incremented id upon successful insertion&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;    &lt;span class="pl-k"&gt;mutating&lt;/span&gt; &lt;span class="pl-k"&gt;func&lt;/span&gt; &lt;span class="pl-en"&gt;didInsert&lt;/span&gt;(&lt;span class="pl-en"&gt;with&lt;/span&gt; &lt;span class="pl-smi"&gt;rowID&lt;/span&gt;: &lt;span class="pl-c1"&gt;Int64&lt;/span&gt;, &lt;span class="pl-en"&gt;for&lt;/span&gt; &lt;span class="pl-smi"&gt;column&lt;/span&gt;: &lt;span class="pl-c1"&gt;String&lt;/span&gt;&lt;span class="pl-k"&gt;?&lt;/span&gt;) {
        id &lt;span class="pl-k"&gt;=&lt;/span&gt; rowID
    }
}&lt;/pre&gt;&lt;/div&gt;
&lt;/details&gt;
&lt;details&gt;
  &lt;summary&gt;Define a plain struct optimized for fetching performance&lt;/summary&gt;
&lt;p&gt;This struct derives is persistence methpds from the standard Encodable protocol (see &lt;a href="#codable-records"&gt;Codable Records&lt;/a&gt;), but performs optimized row decoding by accessing database columns with numeric indexes.&lt;/p&gt;
&lt;p&gt;See the &lt;a href="#record-protocols-overview"&gt;Record Protocols Overview&lt;/a&gt; for more information.&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;struct&lt;/span&gt; &lt;span class="pl-en"&gt;Place&lt;/span&gt;: &lt;span class="pl-e"&gt;Encodable &lt;/span&gt;{
    &lt;span class="pl-k"&gt;var&lt;/span&gt; id&lt;span class="pl-k"&gt;:&lt;/span&gt; &lt;span class="pl-c1"&gt;Int64&lt;/span&gt;&lt;span class="pl-k"&gt;?&lt;/span&gt;
    &lt;span class="pl-k"&gt;var&lt;/span&gt; title&lt;span class="pl-k"&gt;:&lt;/span&gt; &lt;span class="pl-c1"&gt;String&lt;/span&gt;
    &lt;span class="pl-k"&gt;var&lt;/span&gt; isFavorite&lt;span class="pl-k"&gt;:&lt;/span&gt; &lt;span class="pl-c1"&gt;Bool&lt;/span&gt;
    &lt;span class="pl-k"&gt;private&lt;/span&gt; &lt;span class="pl-k"&gt;var&lt;/span&gt; latitude&lt;span class="pl-k"&gt;:&lt;/span&gt; CLLocationDegrees
    &lt;span class="pl-k"&gt;private&lt;/span&gt; &lt;span class="pl-k"&gt;var&lt;/span&gt; longitude&lt;span class="pl-k"&gt;:&lt;/span&gt; CLLocationDegrees
    
    &lt;span class="pl-k"&gt;var&lt;/span&gt; coordinate&lt;span class="pl-k"&gt;:&lt;/span&gt; CLLocationCoordinate2D {
        &lt;span class="pl-k"&gt;get&lt;/span&gt; {
            &lt;span class="pl-k"&gt;return&lt;/span&gt; &lt;span class="pl-c1"&gt;CLLocationCoordinate2D&lt;/span&gt;(
                &lt;span class="pl-c1"&gt;latitude&lt;/span&gt;: latitude,
                &lt;span class="pl-c1"&gt;longitude&lt;/span&gt;: longitude)
        }
        &lt;span class="pl-k"&gt;set&lt;/span&gt; {
            latitude &lt;span class="pl-k"&gt;=&lt;/span&gt; newValue.&lt;span class="pl-smi"&gt;latitude&lt;/span&gt;
            longitude &lt;span class="pl-k"&gt;=&lt;/span&gt; newValue.&lt;span class="pl-smi"&gt;longitude&lt;/span&gt;
        }
    }
}

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; SQL generation&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;&lt;span class="pl-k"&gt;extension&lt;/span&gt; &lt;span class="pl-en"&gt;Place&lt;/span&gt;: &lt;span class="pl-e"&gt;TableRecord &lt;/span&gt;{
    &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;///&lt;/span&gt; The table columns&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;    &lt;span class="pl-k"&gt;enum&lt;/span&gt; &lt;span class="pl-en"&gt;Columns&lt;/span&gt; {
        &lt;span class="pl-k"&gt;static&lt;/span&gt; &lt;span class="pl-k"&gt;let&lt;/span&gt; id &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;Column&lt;/span&gt;(CodingKeys.&lt;span class="pl-smi"&gt;id&lt;/span&gt;)
        &lt;span class="pl-k"&gt;static&lt;/span&gt; &lt;span class="pl-k"&gt;let&lt;/span&gt; title &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;Column&lt;/span&gt;(CodingKeys.&lt;span class="pl-smi"&gt;title&lt;/span&gt;)
        &lt;span class="pl-k"&gt;static&lt;/span&gt; &lt;span class="pl-k"&gt;let&lt;/span&gt; isFavorite &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;Column&lt;/span&gt;(CodingKeys.&lt;span class="pl-smi"&gt;isFavorite&lt;/span&gt;)
        &lt;span class="pl-k"&gt;static&lt;/span&gt; &lt;span class="pl-k"&gt;let&lt;/span&gt; latitude &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;Column&lt;/span&gt;(CodingKeys.&lt;span class="pl-smi"&gt;latitude&lt;/span&gt;)
        &lt;span class="pl-k"&gt;static&lt;/span&gt; &lt;span class="pl-k"&gt;let&lt;/span&gt; longitude &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;Column&lt;/span&gt;(CodingKeys.&lt;span class="pl-smi"&gt;longitude&lt;/span&gt;)
    }
    
    &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;///&lt;/span&gt; Arrange the selected columns and lock their order&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;    &lt;span class="pl-k"&gt;static&lt;/span&gt; &lt;span class="pl-k"&gt;let&lt;/span&gt; databaseSelection&lt;span class="pl-k"&gt;:&lt;/span&gt; [SQLSelectable] &lt;span class="pl-k"&gt;=&lt;/span&gt; [
        Columns.&lt;span class="pl-smi"&gt;id&lt;/span&gt;,
        Columns.&lt;span class="pl-smi"&gt;title&lt;/span&gt;,
        Columns.&lt;span class="pl-smi"&gt;favorite&lt;/span&gt;,
        Columns.&lt;span class="pl-smi"&gt;latitude&lt;/span&gt;,
        Columns.&lt;span class="pl-smi"&gt;longitude&lt;/span&gt;]
}

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Fetching methods&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;&lt;span class="pl-k"&gt;extension&lt;/span&gt; &lt;span class="pl-en"&gt;Place&lt;/span&gt;: &lt;span class="pl-e"&gt;FetchableRecord &lt;/span&gt;{
    &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;///&lt;/span&gt; Creates a record from a database row&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;    &lt;span class="pl-k"&gt;init&lt;/span&gt;(&lt;span class="pl-smi"&gt;&lt;span class="pl-en"&gt;row&lt;/span&gt;&lt;/span&gt;: Row) {
        &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; For high performance, use numeric indexes that match the&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;        &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; order of Place.databaseSelection&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;        id &lt;span class="pl-k"&gt;=&lt;/span&gt; row[&lt;span class="pl-c1"&gt;0&lt;/span&gt;]
        title &lt;span class="pl-k"&gt;=&lt;/span&gt; row[&lt;span class="pl-c1"&gt;1&lt;/span&gt;]
        isFavorite &lt;span class="pl-k"&gt;=&lt;/span&gt; row[&lt;span class="pl-c1"&gt;2&lt;/span&gt;]
        coordinate &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;CLLocationCoordinate2D&lt;/span&gt;(
            &lt;span class="pl-c1"&gt;latitude&lt;/span&gt;: row[&lt;span class="pl-c1"&gt;3&lt;/span&gt;],
            &lt;span class="pl-c1"&gt;longitude&lt;/span&gt;: row[&lt;span class="pl-c1"&gt;4&lt;/span&gt;])
    }
}

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Persistence methods&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;&lt;span class="pl-k"&gt;extension&lt;/span&gt; &lt;span class="pl-en"&gt;Place&lt;/span&gt;: &lt;span class="pl-e"&gt;MutablePersistableRecord &lt;/span&gt;{
    &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Update auto-incremented id upon successful insertion&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;    &lt;span class="pl-k"&gt;mutating&lt;/span&gt; &lt;span class="pl-k"&gt;func&lt;/span&gt; &lt;span class="pl-en"&gt;didInsert&lt;/span&gt;(&lt;span class="pl-en"&gt;with&lt;/span&gt; &lt;span class="pl-smi"&gt;rowID&lt;/span&gt;: &lt;span class="pl-c1"&gt;Int64&lt;/span&gt;, &lt;span class="pl-en"&gt;for&lt;/span&gt; &lt;span class="pl-smi"&gt;column&lt;/span&gt;: &lt;span class="pl-c1"&gt;String&lt;/span&gt;&lt;span class="pl-k"&gt;?&lt;/span&gt;) {
        id &lt;span class="pl-k"&gt;=&lt;/span&gt; rowID
    }
}&lt;/pre&gt;&lt;/div&gt;
&lt;/details&gt;
&lt;details&gt;
  &lt;summary&gt;Subclass the &lt;code&gt;Record&lt;/code&gt; class&lt;/summary&gt;
&lt;p&gt;See the &lt;a href="#record-class"&gt;Record class&lt;/a&gt; for more information.&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;class&lt;/span&gt; &lt;span class="pl-en"&gt;Place&lt;/span&gt;: &lt;span class="pl-e"&gt;Record &lt;/span&gt;{
    &lt;span class="pl-k"&gt;var&lt;/span&gt; id&lt;span class="pl-k"&gt;:&lt;/span&gt; &lt;span class="pl-c1"&gt;Int64&lt;/span&gt;&lt;span class="pl-k"&gt;?&lt;/span&gt;
    &lt;span class="pl-k"&gt;var&lt;/span&gt; title&lt;span class="pl-k"&gt;:&lt;/span&gt; &lt;span class="pl-c1"&gt;String&lt;/span&gt;
    &lt;span class="pl-k"&gt;var&lt;/span&gt; isFavorite&lt;span class="pl-k"&gt;:&lt;/span&gt; &lt;span class="pl-c1"&gt;Bool&lt;/span&gt;
    &lt;span class="pl-k"&gt;var&lt;/span&gt; coordinate&lt;span class="pl-k"&gt;:&lt;/span&gt; CLLocationCoordinate2D
    
    &lt;span class="pl-k"&gt;init&lt;/span&gt;(&lt;span class="pl-smi"&gt;&lt;span class="pl-en"&gt;id&lt;/span&gt;&lt;/span&gt;: &lt;span class="pl-c1"&gt;Int64&lt;/span&gt;&lt;span class="pl-k"&gt;?&lt;/span&gt;, &lt;span class="pl-smi"&gt;&lt;span class="pl-en"&gt;title&lt;/span&gt;&lt;/span&gt;: &lt;span class="pl-c1"&gt;String&lt;/span&gt;, &lt;span class="pl-smi"&gt;&lt;span class="pl-en"&gt;isFavorite&lt;/span&gt;&lt;/span&gt;: &lt;span class="pl-c1"&gt;Bool&lt;/span&gt;, &lt;span class="pl-smi"&gt;&lt;span class="pl-en"&gt;coordinate&lt;/span&gt;&lt;/span&gt;: CLLocationCoordinate2D) {
        &lt;span class="pl-c1"&gt;self&lt;/span&gt;.&lt;span class="pl-smi"&gt;id&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; id
        &lt;span class="pl-c1"&gt;self&lt;/span&gt;.&lt;span class="pl-smi"&gt;title&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; title
        &lt;span class="pl-c1"&gt;self&lt;/span&gt;.&lt;span class="pl-smi"&gt;isFavorite&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; isFavorite
        &lt;span class="pl-c1"&gt;self&lt;/span&gt;.&lt;span class="pl-smi"&gt;coordinate&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; coordinate
        &lt;span class="pl-c1"&gt;super&lt;/span&gt;.&lt;span class="pl-k"&gt;init&lt;/span&gt;()
    }
    
    &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;///&lt;/span&gt; The table name&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;    &lt;span class="pl-k"&gt;override&lt;/span&gt; &lt;span class="pl-k"&gt;class&lt;/span&gt; &lt;span class="pl-k"&gt;var&lt;/span&gt; databaseTableName&lt;span class="pl-k"&gt;:&lt;/span&gt; &lt;span class="pl-c1"&gt;String&lt;/span&gt; {
        &lt;span class="pl-k"&gt;return&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;place&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;
    }
    
    &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;///&lt;/span&gt; The table columns&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;    &lt;span class="pl-k"&gt;enum&lt;/span&gt; &lt;span class="pl-en"&gt;Columns&lt;/span&gt;: &lt;span class="pl-e"&gt;&lt;span class="pl-c1"&gt;String&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-e"&gt;ColumnExpression &lt;/span&gt;{
        &lt;span class="pl-k"&gt;case&lt;/span&gt; &lt;span class="pl-c1"&gt;id&lt;/span&gt;, &lt;span class="pl-c1"&gt;title&lt;/span&gt;, &lt;span class="pl-c1"&gt;isFavorite&lt;/span&gt;, &lt;span class="pl-c1"&gt;latitude&lt;/span&gt;, &lt;span class="pl-c1"&gt;longitude&lt;/span&gt;
    }
    
    &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;///&lt;/span&gt; Creates a record from a database row&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;    &lt;span class="pl-k"&gt;required&lt;/span&gt; &lt;span class="pl-k"&gt;init&lt;/span&gt;(&lt;span class="pl-smi"&gt;&lt;span class="pl-en"&gt;row&lt;/span&gt;&lt;/span&gt;: Row) {
        id &lt;span class="pl-k"&gt;=&lt;/span&gt; row[Columns.&lt;span class="pl-smi"&gt;id&lt;/span&gt;]
        title &lt;span class="pl-k"&gt;=&lt;/span&gt; row[Columns.&lt;span class="pl-smi"&gt;title&lt;/span&gt;]
        isFavorite &lt;span class="pl-k"&gt;=&lt;/span&gt; row[Columns.&lt;span class="pl-smi"&gt;isFavorite&lt;/span&gt;]
        coordinate &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;CLLocationCoordinate2D&lt;/span&gt;(
            &lt;span class="pl-c1"&gt;latitude&lt;/span&gt;: row[Columns.&lt;span class="pl-smi"&gt;latitude&lt;/span&gt;],
            &lt;span class="pl-c1"&gt;longitude&lt;/span&gt;: row[Columns.&lt;span class="pl-smi"&gt;longitude&lt;/span&gt;])
        &lt;span class="pl-c1"&gt;super&lt;/span&gt;.&lt;span class="pl-k"&gt;init&lt;/span&gt;(&lt;span class="pl-c1"&gt;row&lt;/span&gt;: row)
    }
    
    &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;///&lt;/span&gt; The values persisted in the database&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;    &lt;span class="pl-k"&gt;override&lt;/span&gt; &lt;span class="pl-k"&gt;func&lt;/span&gt; &lt;span class="pl-en"&gt;encode&lt;/span&gt;(&lt;span class="pl-en"&gt;to&lt;/span&gt; &lt;span class="pl-smi"&gt;container&lt;/span&gt;: &lt;span class="pl-k"&gt;inout&lt;/span&gt; PersistenceContainer) {
        container[Columns.&lt;span class="pl-smi"&gt;id&lt;/span&gt;] &lt;span class="pl-k"&gt;=&lt;/span&gt; id
        container[Columns.&lt;span class="pl-smi"&gt;title&lt;/span&gt;] &lt;span class="pl-k"&gt;=&lt;/span&gt; title
        container[Columns.&lt;span class="pl-smi"&gt;isFavorite&lt;/span&gt;] &lt;span class="pl-k"&gt;=&lt;/span&gt; isFavorite
        container[Columns.&lt;span class="pl-smi"&gt;latitude&lt;/span&gt;] &lt;span class="pl-k"&gt;=&lt;/span&gt; coordinate.&lt;span class="pl-smi"&gt;latitude&lt;/span&gt;
        container[Columns.&lt;span class="pl-smi"&gt;longitude&lt;/span&gt;] &lt;span class="pl-k"&gt;=&lt;/span&gt; coordinate.&lt;span class="pl-smi"&gt;longitude&lt;/span&gt;
    }
    
    &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Update auto-incremented id upon successful insertion&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;    &lt;span class="pl-k"&gt;override&lt;/span&gt; &lt;span class="pl-k"&gt;func&lt;/span&gt; &lt;span class="pl-en"&gt;didInsert&lt;/span&gt;(&lt;span class="pl-en"&gt;with&lt;/span&gt; &lt;span class="pl-smi"&gt;rowID&lt;/span&gt;: &lt;span class="pl-c1"&gt;Int64&lt;/span&gt;, &lt;span class="pl-en"&gt;for&lt;/span&gt; &lt;span class="pl-smi"&gt;column&lt;/span&gt;: &lt;span class="pl-c1"&gt;String&lt;/span&gt;&lt;span class="pl-k"&gt;?&lt;/span&gt;) {
        id &lt;span class="pl-k"&gt;=&lt;/span&gt; rowID
    }
}&lt;/pre&gt;&lt;/div&gt;
&lt;/details&gt;
&lt;h2&gt;&lt;a id="user-content-list-of-record-methods" class="anchor" aria-hidden="true" href="#list-of-record-methods"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;List of Record Methods&lt;/h2&gt;
&lt;p&gt;This is the list of record methods, along with their required protocols. The &lt;a href="#record-class"&gt;Record&lt;/a&gt; class adopts all these protocols, and adds a few extra methods.&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Method&lt;/th&gt;
&lt;th&gt;Protocols&lt;/th&gt;
&lt;th align="center"&gt;Notes&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;Core Methods&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td align="center"&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;init(row:)&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href="#fetchablerecord-protocol"&gt;FetchableRecord&lt;/a&gt;&lt;/td&gt;
&lt;td align="center"&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;Type.databaseTableName&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href="#tablerecord-protocol"&gt;TableRecord&lt;/a&gt;&lt;/td&gt;
&lt;td align="center"&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;Type.databaseSelection&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href="#tablerecord-protocol"&gt;TableRecord&lt;/a&gt;&lt;/td&gt;
&lt;td align="center"&gt;&lt;a href="#columns-selected-by-a-request"&gt;*&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;Type.persistenceConflictPolicy&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href="#persistablerecord-protocol"&gt;PersistableRecord&lt;/a&gt;&lt;/td&gt;
&lt;td align="center"&gt;&lt;a href="#conflict-resolution"&gt;*&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;record.encode(to:)&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href="#persistablerecord-protocol"&gt;EncodableRecord&lt;/a&gt;&lt;/td&gt;
&lt;td align="center"&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;record.didInsert(with:for:)&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href="#persistablerecord-protocol"&gt;PersistableRecord&lt;/a&gt;&lt;/td&gt;
&lt;td align="center"&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;Insert and Update Records&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td align="center"&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;record.insert(db)&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href="#persistablerecord-protocol"&gt;PersistableRecord&lt;/a&gt;&lt;/td&gt;
&lt;td align="center"&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;record.save(db)&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href="#persistablerecord-protocol"&gt;PersistableRecord&lt;/a&gt;&lt;/td&gt;
&lt;td align="center"&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;record.update(db)&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href="#persistablerecord-protocol"&gt;PersistableRecord&lt;/a&gt;&lt;/td&gt;
&lt;td align="center"&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;record.update(db, columns:...)&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href="#persistablerecord-protocol"&gt;PersistableRecord&lt;/a&gt;&lt;/td&gt;
&lt;td align="center"&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;record.updateChanges(db, from:...)&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href="#persistablerecord-protocol"&gt;PersistableRecord&lt;/a&gt;&lt;/td&gt;
&lt;td align="center"&gt;&lt;a href="#record-comparison"&gt;*&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;record.updateChanges(db) { ... }&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href="#persistablerecord-protocol"&gt;PersistableRecord&lt;/a&gt;&lt;/td&gt;
&lt;td align="center"&gt;&lt;a href="#record-comparison"&gt;*&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;record.updateChanges(db)&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href="#record-class"&gt;Record&lt;/a&gt;&lt;/td&gt;
&lt;td align="center"&gt;&lt;a href="#record-comparison"&gt;*&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;Delete Records&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td align="center"&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;record.delete(db)&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href="#persistablerecord-protocol"&gt;PersistableRecord&lt;/a&gt;&lt;/td&gt;
&lt;td align="center"&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;Type.deleteOne(db, key:...)&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href="#persistablerecord-protocol"&gt;PersistableRecord&lt;/a&gt;&lt;/td&gt;
&lt;td align="center"&gt;&lt;a href="#list-of-record-methods-1"&gt;¹&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;Type.deleteAll(db)&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href="#persistablerecord-protocol"&gt;PersistableRecord&lt;/a&gt;&lt;/td&gt;
&lt;td align="center"&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;Type.deleteAll(db, keys:...)&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href="#persistablerecord-protocol"&gt;PersistableRecord&lt;/a&gt;&lt;/td&gt;
&lt;td align="center"&gt;&lt;a href="#list-of-record-methods-1"&gt;¹&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;Type.filter(...).deleteAll(db)&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href="#persistablerecord-protocol"&gt;PersistableRecord&lt;/a&gt;&lt;/td&gt;
&lt;td align="center"&gt;&lt;a href="#list-of-record-methods-2"&gt;²&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;Check Record Existence&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td align="center"&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;record.exists(db)&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href="#persistablerecord-protocol"&gt;PersistableRecord&lt;/a&gt;&lt;/td&gt;
&lt;td align="center"&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;Convert Record to Dictionary&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td align="center"&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;record.databaseDictionary&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href="#persistablerecord-protocol"&gt;EncodableRecord&lt;/a&gt;&lt;/td&gt;
&lt;td align="center"&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;Count Records&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td align="center"&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;Type.fetchCount(db)&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href="#tablerecord-protocol"&gt;TableRecord&lt;/a&gt;&lt;/td&gt;
&lt;td align="center"&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;Type.filter(...).fetchCount(db)&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href="#tablerecord-protocol"&gt;TableRecord&lt;/a&gt;&lt;/td&gt;
&lt;td align="center"&gt;&lt;a href="#list-of-record-methods-2"&gt;²&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;Fetch Record &lt;a href="#cursors"&gt;Cursors&lt;/a&gt;&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td align="center"&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;Type.fetchCursor(db)&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href="#fetchablerecord-protocol"&gt;FetchableRecord&lt;/a&gt; &amp;amp; &lt;a href="#tablerecord-protocol"&gt;TableRecord&lt;/a&gt;&lt;/td&gt;
&lt;td align="center"&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;Type.fetchCursor(db, keys:...)&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href="#fetchablerecord-protocol"&gt;FetchableRecord&lt;/a&gt; &amp;amp; &lt;a href="#tablerecord-protocol"&gt;TableRecord&lt;/a&gt;&lt;/td&gt;
&lt;td align="center"&gt;&lt;a href="#list-of-record-methods-1"&gt;¹&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;Type.fetchCursor(db, sql: sql)&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href="#fetchablerecord-protocol"&gt;FetchableRecord&lt;/a&gt;&lt;/td&gt;
&lt;td align="center"&gt;&lt;a href="#list-of-record-methods-3"&gt;³&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;Type.fetchCursor(statement)&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href="#fetchablerecord-protocol"&gt;FetchableRecord&lt;/a&gt;&lt;/td&gt;
&lt;td align="center"&gt;&lt;a href="#list-of-record-methods-4"&gt;⁴&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;Type.filter(...).fetchCursor(db)&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href="#fetchablerecord-protocol"&gt;FetchableRecord&lt;/a&gt; &amp;amp; &lt;a href="#tablerecord-protocol"&gt;TableRecord&lt;/a&gt;&lt;/td&gt;
&lt;td align="center"&gt;&lt;a href="#list-of-record-methods-2"&gt;²&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;Fetch Record Arrays&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td align="center"&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;Type.fetchAll(db)&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href="#fetchablerecord-protocol"&gt;FetchableRecord&lt;/a&gt; &amp;amp; &lt;a href="#tablerecord-protocol"&gt;TableRecord&lt;/a&gt;&lt;/td&gt;
&lt;td align="center"&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;Type.fetchAll(db, keys:...)&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href="#fetchablerecord-protocol"&gt;FetchableRecord&lt;/a&gt; &amp;amp; &lt;a href="#tablerecord-protocol"&gt;TableRecord&lt;/a&gt;&lt;/td&gt;
&lt;td align="center"&gt;&lt;a href="#list-of-record-methods-1"&gt;¹&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;Type.fetchAll(db, sql: sql)&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href="#fetchablerecord-protocol"&gt;FetchableRecord&lt;/a&gt;&lt;/td&gt;
&lt;td align="center"&gt;&lt;a href="#list-of-record-methods-3"&gt;³&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;Type.fetchAll(statement)&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href="#fetchablerecord-protocol"&gt;FetchableRecord&lt;/a&gt;&lt;/td&gt;
&lt;td align="center"&gt;&lt;a href="#list-of-record-methods-4"&gt;⁴&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;Type.filter(...).fetchAll(db)&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href="#fetchablerecord-protocol"&gt;FetchableRecord&lt;/a&gt; &amp;amp; &lt;a href="#tablerecord-protocol"&gt;TableRecord&lt;/a&gt;&lt;/td&gt;
&lt;td align="center"&gt;&lt;a href="#list-of-record-methods-2"&gt;²&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;Fetch Individual Records&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td align="center"&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;Type.fetchOne(db)&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href="#fetchablerecord-protocol"&gt;FetchableRecord&lt;/a&gt; &amp;amp; &lt;a href="#tablerecord-protocol"&gt;TableRecord&lt;/a&gt;&lt;/td&gt;
&lt;td align="center"&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;Type.fetchOne(db, key:...)&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href="#fetchablerecord-protocol"&gt;FetchableRecord&lt;/a&gt; &amp;amp; &lt;a href="#tablerecord-protocol"&gt;TableRecord&lt;/a&gt;&lt;/td&gt;
&lt;td align="center"&gt;&lt;a href="#list-of-record-methods-1"&gt;¹&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;Type.fetchOne(db, sql: sql)&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href="#fetchablerecord-protocol"&gt;FetchableRecord&lt;/a&gt;&lt;/td&gt;
&lt;td align="center"&gt;&lt;a href="#list-of-record-methods-3"&gt;³&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;Type.fetchOne(statement)&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href="#fetchablerecord-protocol"&gt;FetchableRecord&lt;/a&gt;&lt;/td&gt;
&lt;td align="center"&gt;&lt;a href="#list-of-record-methods-4"&gt;⁴&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;Type.filter(...).fetchOne(db)&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href="#fetchablerecord-protocol"&gt;FetchableRecord&lt;/a&gt; &amp;amp; &lt;a href="#tablerecord-protocol"&gt;TableRecord&lt;/a&gt;&lt;/td&gt;
&lt;td align="center"&gt;&lt;a href="#list-of-record-methods-2"&gt;²&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;&lt;a href="#codable-records"&gt;Codable Records&lt;/a&gt;&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td align="center"&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;Type.databaseDecodingUserInfo&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href="#fetchablerecord-protocol"&gt;FetchableRecord&lt;/a&gt;&lt;/td&gt;
&lt;td align="center"&gt;&lt;a href="#the-userinfo-dictionary"&gt;*&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;Type.databaseJSONDecoder(for:)&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href="#fetchablerecord-protocol"&gt;FetchableRecord&lt;/a&gt;&lt;/td&gt;
&lt;td align="center"&gt;&lt;a href="#json-columns"&gt;*&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;Type.databaseDateDecodingStrategy&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href="#fetchablerecord-protocol"&gt;FetchableRecord&lt;/a&gt;&lt;/td&gt;
&lt;td align="center"&gt;&lt;a href="#date-and-uuid-coding-strategies"&gt;*&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;Type.databaseEncodingUserInfo&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href="#persistablerecord-protocol"&gt;EncodableRecord&lt;/a&gt;&lt;/td&gt;
&lt;td align="center"&gt;&lt;a href="#the-userinfo-dictionary"&gt;*&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;Type.databaseJSONEncoder(for:)&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href="#persistablerecord-protocol"&gt;EncodableRecord&lt;/a&gt;&lt;/td&gt;
&lt;td align="center"&gt;&lt;a href="#json-columns"&gt;*&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;Type.databaseDateEncodingStrategy&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href="#persistablerecord-protocol"&gt;EncodableRecord&lt;/a&gt;&lt;/td&gt;
&lt;td align="center"&gt;&lt;a href="#date-and-uuid-coding-strategies"&gt;*&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;Type.databaseUUIDEncodingStrategy&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href="#persistablerecord-protocol"&gt;EncodableRecord&lt;/a&gt;&lt;/td&gt;
&lt;td align="center"&gt;&lt;a href="#date-and-uuid-coding-strategies"&gt;*&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;Define &lt;a href="Documentation/AssociationsBasics.md"&gt;Associations&lt;/a&gt;&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td align="center"&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;Type.belongsTo(...)&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href="#tablerecord-protocol"&gt;TableRecord&lt;/a&gt;&lt;/td&gt;
&lt;td align="center"&gt;&lt;a href="Documentation/AssociationsBasics.md"&gt;*&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;Type.hasMany(...)&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href="#tablerecord-protocol"&gt;TableRecord&lt;/a&gt;&lt;/td&gt;
&lt;td align="center"&gt;&lt;a href="Documentation/AssociationsBasics.md"&gt;*&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;Type.hasOne(...)&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href="#tablerecord-protocol"&gt;TableRecord&lt;/a&gt;&lt;/td&gt;
&lt;td align="center"&gt;&lt;a href="Documentation/AssociationsBasics.md"&gt;*&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;Type.hasManyThrough(...)&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href="#tablerecord-protocol"&gt;TableRecord&lt;/a&gt;&lt;/td&gt;
&lt;td align="center"&gt;&lt;a href="Documentation/AssociationsBasics.md"&gt;*&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;Type.hasOneThrough(...)&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href="#tablerecord-protocol"&gt;TableRecord&lt;/a&gt;&lt;/td&gt;
&lt;td align="center"&gt;&lt;a href="Documentation/AssociationsBasics.md"&gt;*&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;Building Query Interface &lt;a href="#requests"&gt;Requests&lt;/a&gt;&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td align="center"&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;record.request(for:...)&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href="#tablerecord-protocol"&gt;TableRecord&lt;/a&gt; &amp;amp; &lt;a href="#persistablerecord-protocol"&gt;EncodableRecord&lt;/a&gt;&lt;/td&gt;
&lt;td align="center"&gt;&lt;a href="Documentation/AssociationsBasics.md"&gt;*&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;Type.all()&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href="#tablerecord-protocol"&gt;TableRecord&lt;/a&gt;&lt;/td&gt;
&lt;td align="center"&gt;&lt;a href="#list-of-record-methods-2"&gt;²&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;Type.none()&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href="#tablerecord-protocol"&gt;TableRecord&lt;/a&gt;&lt;/td&gt;
&lt;td align="center"&gt;&lt;a href="#list-of-record-methods-2"&gt;²&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;Type.select(...)&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href="#tablerecord-protocol"&gt;TableRecord&lt;/a&gt;&lt;/td&gt;
&lt;td align="center"&gt;&lt;a href="#list-of-record-methods-2"&gt;²&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;Type.select(..., as:...)&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href="#tablerecord-protocol"&gt;TableRecord&lt;/a&gt;&lt;/td&gt;
&lt;td align="center"&gt;&lt;a href="#list-of-record-methods-2"&gt;²&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;Type.annotated(with:...)&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href="#tablerecord-protocol"&gt;TableRecord&lt;/a&gt;&lt;/td&gt;
&lt;td align="center"&gt;&lt;a href="#list-of-record-methods-2"&gt;²&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;Type.filter(...)&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href="#tablerecord-protocol"&gt;TableRecord&lt;/a&gt;&lt;/td&gt;
&lt;td align="center"&gt;&lt;a href="#list-of-record-methods-2"&gt;²&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;Type.matching(...)&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href="#tablerecord-protocol"&gt;TableRecord&lt;/a&gt;&lt;/td&gt;
&lt;td align="center"&gt;&lt;a href="#list-of-record-methods-2"&gt;²&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;Type.including(all:)&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href="#tablerecord-protocol"&gt;TableRecord&lt;/a&gt;&lt;/td&gt;
&lt;td align="center"&gt;&lt;a href="#list-of-record-methods-2"&gt;²&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;Type.including(optional:)&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href="#tablerecord-protocol"&gt;TableRecord&lt;/a&gt;&lt;/td&gt;
&lt;td align="center"&gt;&lt;a href="#list-of-record-methods-2"&gt;²&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;Type.including(required:)&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href="#tablerecord-protocol"&gt;TableRecord&lt;/a&gt;&lt;/td&gt;
&lt;td align="center"&gt;&lt;a href="#list-of-record-methods-2"&gt;²&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;Type.joining(optional:)&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href="#tablerecord-protocol"&gt;TableRecord&lt;/a&gt;&lt;/td&gt;
&lt;td align="center"&gt;&lt;a href="#list-of-record-methods-2"&gt;²&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;Type.joining(required:)&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href="#tablerecord-protocol"&gt;TableRecord&lt;/a&gt;&lt;/td&gt;
&lt;td align="center"&gt;&lt;a href="#list-of-record-methods-2"&gt;²&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;Type.order(...)&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href="#tablerecord-protocol"&gt;TableRecord&lt;/a&gt;&lt;/td&gt;
&lt;td align="center"&gt;&lt;a href="#list-of-record-methods-2"&gt;²&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;Type.orderByPrimaryKey()&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href="#tablerecord-protocol"&gt;TableRecord&lt;/a&gt;&lt;/td&gt;
&lt;td align="center"&gt;&lt;a href="#list-of-record-methods-2"&gt;²&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;Type.having(...)&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href="#tablerecord-protocol"&gt;TableRecord&lt;/a&gt;&lt;/td&gt;
&lt;td align="center"&gt;&lt;a href="#list-of-record-methods-2"&gt;²&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;Type.limit(...)&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href="#tablerecord-protocol"&gt;TableRecord&lt;/a&gt;&lt;/td&gt;
&lt;td align="center"&gt;&lt;a href="#list-of-record-methods-2"&gt;²&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;&lt;a href="#record-comparison"&gt;Record Comparison&lt;/a&gt;&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td align="center"&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;record.databaseEquals(...)&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href="#persistablerecord-protocol"&gt;EncodableRecord&lt;/a&gt;&lt;/td&gt;
&lt;td align="center"&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;record.databaseChanges(from:...)&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href="#persistablerecord-protocol"&gt;EncodableRecord&lt;/a&gt;&lt;/td&gt;
&lt;td align="center"&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;record.updateChanges(db, from:...)&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href="#persistablerecord-protocol"&gt;PersistableRecord&lt;/a&gt;&lt;/td&gt;
&lt;td align="center"&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;record.updateChanges(db) { ... }&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href="#persistablerecord-protocol"&gt;PersistableRecord&lt;/a&gt;&lt;/td&gt;
&lt;td align="center"&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;record.hasDatabaseChanges&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href="#record-class"&gt;Record&lt;/a&gt;&lt;/td&gt;
&lt;td align="center"&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;record.databaseChanges&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href="#record-class"&gt;Record&lt;/a&gt;&lt;/td&gt;
&lt;td align="center"&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;record.updateChanges(db)&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href="#record-class"&gt;Record&lt;/a&gt;&lt;/td&gt;
&lt;td align="center"&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;&lt;a name="user-content-list-of-record-methods-1"&gt;¹&lt;/a&gt; All unique keys are supported: primary keys (single-column, composite, &lt;a href="#the-implicit-rowid-primary-key"&gt;implicit RowID&lt;/a&gt;) and unique indexes:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;try&lt;/span&gt; Player.&lt;span class="pl-c1"&gt;fetchOne&lt;/span&gt;(db, &lt;span class="pl-c1"&gt;key&lt;/span&gt;: &lt;span class="pl-c1"&gt;1&lt;/span&gt;)                               &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Player?&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;&lt;span class="pl-k"&gt;try&lt;/span&gt; Player.&lt;span class="pl-c1"&gt;fetchOne&lt;/span&gt;(db, &lt;span class="pl-c1"&gt;key&lt;/span&gt;: [&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;email&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;&lt;span class="pl-k"&gt;:&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;arthur@example.com&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;]) &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Player?&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;&lt;span class="pl-k"&gt;try&lt;/span&gt; Country.&lt;span class="pl-c1"&gt;fetchAll&lt;/span&gt;(db, &lt;span class="pl-c1"&gt;keys&lt;/span&gt;: [&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;FR&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;US&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;])                  &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; [Country]&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;a name="user-content-list-of-record-methods-2"&gt;²&lt;/a&gt; See &lt;a href="#requests"&gt;Fetch Requests&lt;/a&gt;:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;let&lt;/span&gt; request &lt;span class="pl-k"&gt;=&lt;/span&gt; Player.&lt;span class="pl-c1"&gt;filter&lt;/span&gt;(emailColumn &lt;span class="pl-k"&gt;!=&lt;/span&gt; &lt;span class="pl-c1"&gt;nil&lt;/span&gt;).&lt;span class="pl-c1"&gt;order&lt;/span&gt;(nameColumn)
&lt;span class="pl-k"&gt;let&lt;/span&gt; players &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-k"&gt;try&lt;/span&gt; request.&lt;span class="pl-c1"&gt;fetchAll&lt;/span&gt;(db)  &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; [Player]&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;&lt;span class="pl-k"&gt;let&lt;/span&gt; count &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-k"&gt;try&lt;/span&gt; request.&lt;span class="pl-c1"&gt;fetchCount&lt;/span&gt;(db)  &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Int&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;a name="user-content-list-of-record-methods-3"&gt;³&lt;/a&gt; See &lt;a href="#fetch-queries"&gt;SQL queries&lt;/a&gt;:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;let&lt;/span&gt; player &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-k"&gt;try&lt;/span&gt; Player.&lt;span class="pl-c1"&gt;fetchOne&lt;/span&gt;(db, &lt;span class="pl-c1"&gt;sql&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;SELECT * FROM player WHERE id = ?&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-c1"&gt;arguments&lt;/span&gt;: [&lt;span class="pl-c1"&gt;1&lt;/span&gt;]) &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Player?&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;a name="user-content-list-of-record-methods-4"&gt;⁴&lt;/a&gt; See &lt;a href="#prepared-statements"&gt;Prepared Statements&lt;/a&gt;:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;let&lt;/span&gt; statement &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-k"&gt;try&lt;/span&gt; db.&lt;span class="pl-c1"&gt;makeSelectStatement&lt;/span&gt;(&lt;span class="pl-c1"&gt;sql&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;SELECT * FROM player WHERE id = ?&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
&lt;span class="pl-k"&gt;let&lt;/span&gt; player &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-k"&gt;try&lt;/span&gt; Player.&lt;span class="pl-c1"&gt;fetchOne&lt;/span&gt;(statement, &lt;span class="pl-c1"&gt;arguments&lt;/span&gt;: [&lt;span class="pl-c1"&gt;1&lt;/span&gt;])  &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Player?&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h1&gt;&lt;a id="user-content-the-query-interface" class="anchor" aria-hidden="true" href="#the-query-interface"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;The Query Interface&lt;/h1&gt;
&lt;p&gt;&lt;strong&gt;The query interface lets you write pure Swift instead of SQL:&lt;/strong&gt;&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;try&lt;/span&gt; dbQueue.&lt;span class="pl-smi"&gt;write&lt;/span&gt; { db &lt;span class="pl-k"&gt;in&lt;/span&gt;
    &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Update database schema&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;    &lt;span class="pl-k"&gt;try&lt;/span&gt; db.&lt;span class="pl-c1"&gt;create&lt;/span&gt;(&lt;span class="pl-c1"&gt;table&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;wine&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;) { t &lt;span class="pl-k"&gt;in&lt;/span&gt; &lt;span class="pl-k"&gt;...&lt;/span&gt; }
    
    &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Fetch records&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;    &lt;span class="pl-k"&gt;let&lt;/span&gt; wines &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-k"&gt;try&lt;/span&gt; Wine.&lt;span class="pl-c1"&gt;filter&lt;/span&gt;(origin &lt;span class="pl-k"&gt;==&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;Burgundy&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;).&lt;span class="pl-c1"&gt;order&lt;/span&gt;(price).&lt;span class="pl-c1"&gt;fetchAll&lt;/span&gt;(db)
    
    &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Count&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;    &lt;span class="pl-k"&gt;let&lt;/span&gt; count &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-k"&gt;try&lt;/span&gt; Wine.&lt;span class="pl-c1"&gt;filter&lt;/span&gt;(color &lt;span class="pl-k"&gt;==&lt;/span&gt; Color.&lt;span class="pl-smi"&gt;red&lt;/span&gt;).&lt;span class="pl-c1"&gt;fetchCount&lt;/span&gt;(db)
    
    &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Delete&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;    &lt;span class="pl-k"&gt;try&lt;/span&gt; Wine.&lt;span class="pl-c1"&gt;filter&lt;/span&gt;(corked &lt;span class="pl-k"&gt;==&lt;/span&gt; &lt;span class="pl-c1"&gt;true&lt;/span&gt;).&lt;span class="pl-c1"&gt;deleteAll&lt;/span&gt;(db)
}&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;You need to open a &lt;a href="#database-connections"&gt;database connection&lt;/a&gt; before you can query the database.&lt;/p&gt;
&lt;p&gt;Please bear in mind that the query interface can not generate all possible SQL queries. You may also &lt;em&gt;prefer&lt;/em&gt; writing SQL, and this is just OK. From little snippets to full queries, your SQL skills are welcome:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;try&lt;/span&gt; dbQueue.&lt;span class="pl-smi"&gt;write&lt;/span&gt; { db &lt;span class="pl-k"&gt;in&lt;/span&gt;
    &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Update database schema (with SQL)&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;    &lt;span class="pl-k"&gt;try&lt;/span&gt; db.&lt;span class="pl-c1"&gt;execute&lt;/span&gt;(&lt;span class="pl-c1"&gt;sql&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;CREATE TABLE wine (...)&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
    
    &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Fetch records (with SQL)&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;    &lt;span class="pl-k"&gt;let&lt;/span&gt; wines &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-k"&gt;try&lt;/span&gt; Wine.&lt;span class="pl-c1"&gt;fetchAll&lt;/span&gt;(db,
        &lt;span class="pl-c1"&gt;sql&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;SELECT * FROM wine WHERE origin = ? ORDER BY price&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;,
        &lt;span class="pl-c1"&gt;arguments&lt;/span&gt;: [&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;Burgundy&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;])
    
    &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Count (with an SQL snippet)&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;    &lt;span class="pl-k"&gt;let&lt;/span&gt; count &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-k"&gt;try&lt;/span&gt; Wine
        .&lt;span class="pl-c1"&gt;filter&lt;/span&gt;(&lt;span class="pl-c1"&gt;sql&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;color = ?&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-c1"&gt;arguments&lt;/span&gt;: [Color.&lt;span class="pl-smi"&gt;red&lt;/span&gt;])
        .&lt;span class="pl-c1"&gt;fetchCount&lt;/span&gt;(db)
    
    &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Delete (with SQL)&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;    &lt;span class="pl-k"&gt;try&lt;/span&gt; db.&lt;span class="pl-c1"&gt;execute&lt;/span&gt;(&lt;span class="pl-c1"&gt;sql&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;DELETE FROM wine WHERE corked&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
}&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;So don't miss the &lt;a href="#sqlite-api"&gt;SQL API&lt;/a&gt;.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;g-emoji class="g-emoji" alias="point_up" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/261d.png"&gt;☝️&lt;/g-emoji&gt; &lt;strong&gt;Note&lt;/strong&gt;: the generated SQL may change between GRDB releases, without notice: don't have your application rely on any specific SQL output.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="#database-schema"&gt;Database Schema&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#requests"&gt;Requests&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#expressions"&gt;Expressions&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="#sql-operators"&gt;SQL Operators&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#sql-functions"&gt;SQL Functions&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="#fetching-from-requests"&gt;Fetching from Requests&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#fetching-by-key"&gt;Fetching by Key&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#fetching-aggregated-values"&gt;Fetching Aggregated Values&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#delete-requests"&gt;Delete Requests&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#custom-requests"&gt;Custom Requests&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="Documentation/AssociationsBasics.md"&gt;Associations and Joins&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-database-schema" class="anchor" aria-hidden="true" href="#database-schema"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Database Schema&lt;/h2&gt;
&lt;p&gt;Once granted with a &lt;a href="#database-connections"&gt;database connection&lt;/a&gt;, you can setup your database schema without writing SQL:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="#create-tables"&gt;Create Tables&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#modify-tables"&gt;Modify Tables&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#drop-tables"&gt;Drop Tables&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#create-indexes"&gt;Create Indexes&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;&lt;a id="user-content-create-tables" class="anchor" aria-hidden="true" href="#create-tables"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Create Tables&lt;/h3&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; CREATE TABLE place (&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt;   id INTEGER PRIMARY KEY AUTOINCREMENT,&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt;   title TEXT,&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt;   favorite BOOLEAN NOT NULL DEFAULT 0,&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt;   latitude DOUBLE NOT NULL,&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt;   longitude DOUBLE NOT NULL&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; )&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;&lt;span class="pl-k"&gt;try&lt;/span&gt; db.&lt;span class="pl-c1"&gt;create&lt;/span&gt;(&lt;span class="pl-c1"&gt;table&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;place&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;) { t &lt;span class="pl-k"&gt;in&lt;/span&gt;
    t.&lt;span class="pl-c1"&gt;autoIncrementedPrimaryKey&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;id&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
    t.&lt;span class="pl-c1"&gt;column&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;title&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, .&lt;span class="pl-c1"&gt;text&lt;/span&gt;)
    t.&lt;span class="pl-c1"&gt;column&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;favorite&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, .&lt;span class="pl-smi"&gt;boolean&lt;/span&gt;).&lt;span class="pl-c1"&gt;notNull&lt;/span&gt;().&lt;span class="pl-c1"&gt;defaults&lt;/span&gt;(&lt;span class="pl-c1"&gt;to&lt;/span&gt;: &lt;span class="pl-c1"&gt;false&lt;/span&gt;)
    t.&lt;span class="pl-c1"&gt;column&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;longitude&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, .&lt;span class="pl-c1"&gt;double&lt;/span&gt;).&lt;span class="pl-c1"&gt;notNull&lt;/span&gt;()
    t.&lt;span class="pl-c1"&gt;column&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;latitude&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, .&lt;span class="pl-c1"&gt;double&lt;/span&gt;).&lt;span class="pl-c1"&gt;notNull&lt;/span&gt;()
}&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;The &lt;code&gt;create(table:)&lt;/code&gt; method covers nearly all SQLite table creation features. For virtual tables, see &lt;a href="#full-text-search"&gt;Full-Text Search&lt;/a&gt;, or use raw SQL.&lt;/p&gt;
&lt;p&gt;SQLite itself has many reference documents about table creation: &lt;a href="https://www.sqlite.org/lang_createtable.html" rel="nofollow"&gt;CREATE TABLE&lt;/a&gt;, &lt;a href="https://www.sqlite.org/datatype3.html" rel="nofollow"&gt;Datatypes In SQLite Version 3&lt;/a&gt;, &lt;a href="https://www.sqlite.org/foreignkeys.html" rel="nofollow"&gt;SQLite Foreign Key Support&lt;/a&gt;, &lt;a href="https://www.sqlite.org/lang_conflict.html" rel="nofollow"&gt;ON CONFLICT&lt;/a&gt;, &lt;a href="https://www.sqlite.org/withoutrowid.html" rel="nofollow"&gt;The WITHOUT ROWID Optimization&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Configure table creation&lt;/strong&gt;:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; CREATE TABLE example ( ... )&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;&lt;span class="pl-k"&gt;try&lt;/span&gt; db.&lt;span class="pl-c1"&gt;create&lt;/span&gt;(&lt;span class="pl-c1"&gt;table&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;example&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;) { t &lt;span class="pl-k"&gt;in&lt;/span&gt; &lt;span class="pl-k"&gt;...&lt;/span&gt; }
    
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; CREATE TEMPORARY TABLE example IF NOT EXISTS (&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;&lt;span class="pl-k"&gt;try&lt;/span&gt; db.&lt;span class="pl-c1"&gt;create&lt;/span&gt;(&lt;span class="pl-c1"&gt;table&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;example&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-c1"&gt;temporary&lt;/span&gt;: &lt;span class="pl-c1"&gt;true&lt;/span&gt;, &lt;span class="pl-c1"&gt;ifNotExists&lt;/span&gt;: &lt;span class="pl-c1"&gt;true&lt;/span&gt;) { t &lt;span class="pl-k"&gt;in&lt;/span&gt; &lt;span class="pl-k"&gt;...&lt;/span&gt; }&lt;/pre&gt;&lt;/div&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;g-emoji class="g-emoji" alias="bulb" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f4a1.png"&gt;💡&lt;/g-emoji&gt; &lt;strong&gt;Tip&lt;/strong&gt;: database table names should be singular, and camel-cased. Make them look like Swift identifiers: &lt;code&gt;place&lt;/code&gt;, &lt;code&gt;country&lt;/code&gt;, &lt;code&gt;postalAddress&lt;/code&gt;, 'httpRequest'.&lt;/p&gt;
&lt;p&gt;This will help you using &lt;a href="Documentation/AssociationsBasics.md"&gt;Associations&lt;/a&gt; when you need them. Database table names that follow another naming convention are totally OK, but you will need to perform extra configuration.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;strong&gt;Add regular columns&lt;/strong&gt; with their name and eventual type (text, integer, double, numeric, boolean, blob, date and datetime) - see &lt;a href="https://www.sqlite.org/datatype3.html" rel="nofollow"&gt;SQLite data types&lt;/a&gt;:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; CREATE TABLE example (&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt;   a,&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt;   name TEXT,&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt;   creationDate DATETIME,&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;&lt;span class="pl-k"&gt;try&lt;/span&gt; db.&lt;span class="pl-c1"&gt;create&lt;/span&gt;(&lt;span class="pl-c1"&gt;table&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;example&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;) { t &lt;span class="pl-k"&gt;in&lt;/span&gt;
    t.&lt;span class="pl-c1"&gt;column&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;a&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
    t.&lt;span class="pl-c1"&gt;column&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;name&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, .&lt;span class="pl-c1"&gt;text&lt;/span&gt;)
    t.&lt;span class="pl-c1"&gt;column&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;creationDate&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, .&lt;span class="pl-smi"&gt;datetime&lt;/span&gt;)&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Define &lt;strong&gt;not null&lt;/strong&gt; columns, and set &lt;strong&gt;default&lt;/strong&gt; values:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;    &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; email TEXT NOT NULL,&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;    t.&lt;span class="pl-c1"&gt;column&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;email&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, .&lt;span class="pl-c1"&gt;text&lt;/span&gt;).&lt;span class="pl-c1"&gt;notNull&lt;/span&gt;()
    
    &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; name TEXT NOT NULL DEFAULT 'Anonymous',&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;    t.&lt;span class="pl-c1"&gt;column&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;name&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, .&lt;span class="pl-c1"&gt;text&lt;/span&gt;).&lt;span class="pl-c1"&gt;notNull&lt;/span&gt;().&lt;span class="pl-c1"&gt;defaults&lt;/span&gt;(&lt;span class="pl-c1"&gt;to&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;Anonymous&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Use an individual column as &lt;strong&gt;primary&lt;/strong&gt;, &lt;strong&gt;unique&lt;/strong&gt;, or &lt;strong&gt;foreign key&lt;/strong&gt;. When defining a foreign key, the referenced column is the primary key of the referenced table (unless you specify otherwise):&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;    &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; id INTEGER PRIMARY KEY AUTOINCREMENT,&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;    t.&lt;span class="pl-c1"&gt;autoIncrementedPrimaryKey&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;id&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
    
    &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; uuid TEXT PRIMARY KEY,&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;    t.&lt;span class="pl-c1"&gt;column&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;uuid&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, .&lt;span class="pl-c1"&gt;text&lt;/span&gt;).&lt;span class="pl-c1"&gt;primaryKey&lt;/span&gt;()
    
    &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; email TEXT UNIQUE,&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;    t.&lt;span class="pl-c1"&gt;column&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;email&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, .&lt;span class="pl-c1"&gt;text&lt;/span&gt;).&lt;span class="pl-c1"&gt;unique&lt;/span&gt;()
    
    &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; countryCode TEXT REFERENCES country(code) ON DELETE CASCADE,&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;    t.&lt;span class="pl-c1"&gt;column&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;countryCode&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, .&lt;span class="pl-c1"&gt;text&lt;/span&gt;).&lt;span class="pl-c1"&gt;references&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;country&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-c1"&gt;onDelete&lt;/span&gt;: .&lt;span class="pl-smi"&gt;cascade&lt;/span&gt;)&lt;/pre&gt;&lt;/div&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;g-emoji class="g-emoji" alias="bulb" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f4a1.png"&gt;💡&lt;/g-emoji&gt; &lt;strong&gt;Tip&lt;/strong&gt;: when you need an integer primary key that automatically generates unique values, it is highly recommended that you use the &lt;code&gt;autoIncrementedPrimaryKey&lt;/code&gt; method:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;try&lt;/span&gt; db.&lt;span class="pl-c1"&gt;create&lt;/span&gt;(&lt;span class="pl-c1"&gt;table&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;example&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;) { t &lt;span class="pl-k"&gt;in&lt;/span&gt;
    t.&lt;span class="pl-c1"&gt;autoIncrementedPrimaryKey&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;id&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
    &lt;span class="pl-k"&gt;...&lt;/span&gt;
}&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;The reason for this recommendation is that auto-incremented primary keys prevent the reuse of ids. This prevents your app or &lt;a href="#database-changes-observation"&gt;database observation tools&lt;/a&gt; to think that a row was updated, when it was actually deleted, then replaced. Depending on your application needs, this may be acceptable. But usually it is not.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;strong&gt;Create an index&lt;/strong&gt; on the column:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;    t.&lt;span class="pl-c1"&gt;column&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;score&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, .&lt;span class="pl-smi"&gt;integer&lt;/span&gt;).&lt;span class="pl-c1"&gt;indexed&lt;/span&gt;()&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;For extra index options, see &lt;a href="#create-indexes"&gt;Create Indexes&lt;/a&gt; below.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Perform integrity checks&lt;/strong&gt; on individual columns, and SQLite will only let conforming rows in. In the example below, the &lt;code&gt;$0&lt;/code&gt; closure variable is a column which lets you build any SQL &lt;a href="#expressions"&gt;expression&lt;/a&gt;.&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;    &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; name TEXT CHECK (LENGTH(name) &amp;gt; 0)&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;    &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; score INTEGER CHECK (score &amp;gt; 0)&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;    t.&lt;span class="pl-c1"&gt;column&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;name&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, .&lt;span class="pl-c1"&gt;text&lt;/span&gt;).&lt;span class="pl-smi"&gt;check&lt;/span&gt; { &lt;span class="pl-c1"&gt;length&lt;/span&gt;(&lt;span class="pl-c1"&gt;$0&lt;/span&gt;) &lt;span class="pl-k"&gt;&amp;gt;&lt;/span&gt; &lt;span class="pl-c1"&gt;0&lt;/span&gt; }
    t.&lt;span class="pl-c1"&gt;column&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;score&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, .&lt;span class="pl-smi"&gt;integer&lt;/span&gt;).&lt;span class="pl-c1"&gt;check&lt;/span&gt;(&lt;span class="pl-c1"&gt;sql&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;score &amp;gt; 0&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Other &lt;strong&gt;table constraints&lt;/strong&gt; can involve several columns:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;    &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; PRIMARY KEY (a, b),&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;    t.&lt;span class="pl-c1"&gt;primaryKey&lt;/span&gt;([&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;a&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;b&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;])
    
    &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; UNIQUE (a, b) ON CONFLICT REPLACE,&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;    t.&lt;span class="pl-c1"&gt;uniqueKey&lt;/span&gt;([&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;a&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;b&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;], &lt;span class="pl-c1"&gt;onConfict&lt;/span&gt;: .&lt;span class="pl-smi"&gt;replace&lt;/span&gt;)
    
    &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; FOREIGN KEY (a, b) REFERENCES parents(c, d),&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;    t.&lt;span class="pl-c1"&gt;foreignKey&lt;/span&gt;([&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;a&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;b&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;], &lt;span class="pl-c1"&gt;references&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;parents&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
    
    &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; CHECK (a + b &amp;lt; 10),&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;    t.&lt;span class="pl-c1"&gt;check&lt;/span&gt;(&lt;span class="pl-c1"&gt;Column&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;a&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;) &lt;span class="pl-k"&gt;+&lt;/span&gt; &lt;span class="pl-c1"&gt;Column&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;b&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;) &lt;span class="pl-k"&gt;&amp;lt;&lt;/span&gt; &lt;span class="pl-c1"&gt;10&lt;/span&gt;)
    
    &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; CHECK (a + b &amp;lt; 10)&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;    t.&lt;span class="pl-c1"&gt;check&lt;/span&gt;(&lt;span class="pl-c1"&gt;sql&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;a + b &amp;lt; 10&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
}&lt;/pre&gt;&lt;/div&gt;
&lt;h3&gt;&lt;a id="user-content-modify-tables" class="anchor" aria-hidden="true" href="#modify-tables"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Modify Tables&lt;/h3&gt;
&lt;p&gt;SQLite lets you rename tables, and add columns to existing tables:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; ALTER TABLE referer RENAME TO referrer&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;&lt;span class="pl-k"&gt;try&lt;/span&gt; db.&lt;span class="pl-c1"&gt;rename&lt;/span&gt;(&lt;span class="pl-c1"&gt;table&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;referer&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-c1"&gt;to&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;referrer&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; ALTER TABLE player ADD COLUMN url TEXT&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;&lt;span class="pl-k"&gt;try&lt;/span&gt; db.&lt;span class="pl-c1"&gt;alter&lt;/span&gt;(&lt;span class="pl-c1"&gt;table&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;player&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;) { t &lt;span class="pl-k"&gt;in&lt;/span&gt;
    t.&lt;span class="pl-c1"&gt;add&lt;/span&gt;(&lt;span class="pl-c1"&gt;column&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;url&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, .&lt;span class="pl-c1"&gt;text&lt;/span&gt;)
}&lt;/pre&gt;&lt;/div&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;g-emoji class="g-emoji" alias="point_up" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/261d.png"&gt;☝️&lt;/g-emoji&gt; &lt;strong&gt;Note&lt;/strong&gt;: SQLite restricts the possible table alterations, and may require you to recreate dependent triggers or views. See the documentation of the &lt;a href="https://www.sqlite.org/lang_altertable.html" rel="nofollow"&gt;ALTER TABLE&lt;/a&gt; for details. See &lt;a href="#advanced-database-schema-changes"&gt;Advanced Database Schema Changes&lt;/a&gt; for a way to lift restrictions.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3&gt;&lt;a id="user-content-drop-tables" class="anchor" aria-hidden="true" href="#drop-tables"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Drop Tables&lt;/h3&gt;
&lt;p&gt;Drop tables with the &lt;code&gt;drop(table:)&lt;/code&gt; method:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;try&lt;/span&gt; db.&lt;span class="pl-c1"&gt;drop&lt;/span&gt;(&lt;span class="pl-c1"&gt;table&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;obsolete&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)&lt;/pre&gt;&lt;/div&gt;
&lt;h3&gt;&lt;a id="user-content-create-indexes" class="anchor" aria-hidden="true" href="#create-indexes"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Create Indexes&lt;/h3&gt;
&lt;p&gt;Create indexes with the &lt;code&gt;create(index:)&lt;/code&gt; method:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; CREATE UNIQUE INDEX byEmail ON users(email)&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;&lt;span class="pl-k"&gt;try&lt;/span&gt; db.&lt;span class="pl-c1"&gt;create&lt;/span&gt;(&lt;span class="pl-c1"&gt;index&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;byEmail&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-c1"&gt;on&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;users&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-c1"&gt;columns&lt;/span&gt;: [&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;email&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;], &lt;span class="pl-c1"&gt;unique&lt;/span&gt;: &lt;span class="pl-c1"&gt;true&lt;/span&gt;)&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Relevant SQLite documentation:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.sqlite.org/lang_createindex.html" rel="nofollow"&gt;CREATE INDEX&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.sqlite.org/expridx.html" rel="nofollow"&gt;Indexes On Expressions&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.sqlite.org/partialindex.html" rel="nofollow"&gt;Partial Indexes&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-requests" class="anchor" aria-hidden="true" href="#requests"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Requests&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;The query interface requests&lt;/strong&gt; let you fetch values from the database:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;let&lt;/span&gt; request &lt;span class="pl-k"&gt;=&lt;/span&gt; Player.&lt;span class="pl-c1"&gt;filter&lt;/span&gt;(emailColumn &lt;span class="pl-k"&gt;!=&lt;/span&gt; &lt;span class="pl-c1"&gt;nil&lt;/span&gt;).&lt;span class="pl-c1"&gt;order&lt;/span&gt;(nameColumn)
&lt;span class="pl-k"&gt;let&lt;/span&gt; players &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-k"&gt;try&lt;/span&gt; request.&lt;span class="pl-c1"&gt;fetchAll&lt;/span&gt;(db)  &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; [Player]&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;&lt;span class="pl-k"&gt;let&lt;/span&gt; count &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-k"&gt;try&lt;/span&gt; request.&lt;span class="pl-c1"&gt;fetchCount&lt;/span&gt;(db)  &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Int&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;All requests start from &lt;strong&gt;a type&lt;/strong&gt; that adopts the &lt;code&gt;TableRecord&lt;/code&gt; protocol, such as a &lt;code&gt;Record&lt;/code&gt; subclass (see &lt;a href="#records"&gt;Records&lt;/a&gt;):&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;class&lt;/span&gt; &lt;span class="pl-en"&gt;Player&lt;/span&gt; : &lt;span class="pl-e"&gt;Record &lt;/span&gt;{ &lt;span class="pl-k"&gt;...&lt;/span&gt; }&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Declare the table &lt;strong&gt;columns&lt;/strong&gt; that you want to use for filtering, or sorting:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;let&lt;/span&gt; idColumn &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;Column&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;id&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
&lt;span class="pl-k"&gt;let&lt;/span&gt; nameColumn &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;Column&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;name&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;You can also declare column enums, if you prefer:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Columns.id and Columns.name can be used just as&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; idColumn and nameColumn declared above.&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;&lt;span class="pl-k"&gt;enum&lt;/span&gt; &lt;span class="pl-en"&gt;Columns&lt;/span&gt;: &lt;span class="pl-e"&gt;&lt;span class="pl-c1"&gt;String&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-e"&gt;ColumnExpression &lt;/span&gt;{
    &lt;span class="pl-k"&gt;case&lt;/span&gt; &lt;span class="pl-c1"&gt;id&lt;/span&gt;
    &lt;span class="pl-k"&gt;case&lt;/span&gt; &lt;span class="pl-c1"&gt;name&lt;/span&gt;
}&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;You can now build requests with the following methods: &lt;code&gt;all&lt;/code&gt;, &lt;code&gt;none&lt;/code&gt;, &lt;code&gt;select&lt;/code&gt;, &lt;code&gt;distinct&lt;/code&gt;, &lt;code&gt;filter&lt;/code&gt;, &lt;code&gt;matching&lt;/code&gt;, &lt;code&gt;group&lt;/code&gt;, &lt;code&gt;having&lt;/code&gt;, &lt;code&gt;order&lt;/code&gt;, &lt;code&gt;reversed&lt;/code&gt;, &lt;code&gt;limit&lt;/code&gt;, &lt;code&gt;joining&lt;/code&gt;, &lt;code&gt;including&lt;/code&gt;. All those methods return another request, which you can further refine by applying another method: &lt;code&gt;Player.select(...).filter(...).order(...)&lt;/code&gt;.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;all()&lt;/code&gt;, &lt;code&gt;none()&lt;/code&gt;: the requests for all rows, or no row.&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; SELECT * FROM player&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;Player.&lt;span class="pl-c1"&gt;all&lt;/span&gt;()&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;The hidden &lt;code&gt;rowid&lt;/code&gt; column can be selected as well &lt;a href="#the-implicit-rowid-primary-key"&gt;when you need it&lt;/a&gt;.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;select(...)&lt;/code&gt; and &lt;code&gt;select(..., as:)&lt;/code&gt; define the selected columns. See &lt;a href="#columns-selected-by-a-request"&gt;Columns Selected by a Request&lt;/a&gt;.&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; SELECT name FROM player&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;Player.&lt;span class="pl-c1"&gt;select&lt;/span&gt;(nameColumn, &lt;span class="pl-c1"&gt;as&lt;/span&gt;: &lt;span class="pl-c1"&gt;String&lt;/span&gt;.&lt;span class="pl-k"&gt;self&lt;/span&gt;)&lt;/pre&gt;&lt;/div&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;annotated(with: ...)&lt;/code&gt; extends the selection with &lt;a href="Documentation/AssociationsBasics.md#association-aggregates"&gt;association aggregates&lt;/a&gt;.&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; SELECT team.*, COUNT(DISTINCT player.rowid) AS playerCount&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; FROM team&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; LEFT JOIN player ON player.teamId = team.id&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; GROUP BY team.id&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;Team.&lt;span class="pl-c1"&gt;annotated&lt;/span&gt;(&lt;span class="pl-c1"&gt;with&lt;/span&gt;: Team.&lt;span class="pl-smi"&gt;players&lt;/span&gt;.&lt;span class="pl-c1"&gt;count&lt;/span&gt;)&lt;/pre&gt;&lt;/div&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;distinct()&lt;/code&gt; performs uniquing.&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; SELECT DISTINCT name FROM player&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;Player.&lt;span class="pl-c1"&gt;select&lt;/span&gt;(nameColumn, &lt;span class="pl-c1"&gt;as&lt;/span&gt;: &lt;span class="pl-c1"&gt;String&lt;/span&gt;.&lt;span class="pl-k"&gt;self&lt;/span&gt;).&lt;span class="pl-c1"&gt;distinct&lt;/span&gt;()&lt;/pre&gt;&lt;/div&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;filter(expression)&lt;/code&gt; applies conditions.&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; SELECT * FROM player WHERE id IN (1, 2, 3)&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;Player.&lt;span class="pl-c1"&gt;filter&lt;/span&gt;([&lt;span class="pl-c1"&gt;1&lt;/span&gt;,&lt;span class="pl-c1"&gt;2&lt;/span&gt;,&lt;span class="pl-c1"&gt;3&lt;/span&gt;].&lt;span class="pl-c1"&gt;contains&lt;/span&gt;(idColumn))

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; SELECT * FROM player WHERE (name IS NOT NULL) AND (height &amp;gt; 1.75)&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;Player.&lt;span class="pl-c1"&gt;filter&lt;/span&gt;(nameColumn &lt;span class="pl-k"&gt;!=&lt;/span&gt; &lt;span class="pl-c1"&gt;nil&lt;/span&gt; &lt;span class="pl-k"&gt;&amp;amp;&amp;amp;&lt;/span&gt; heightColumn &lt;span class="pl-k"&gt;&amp;gt;&lt;/span&gt; &lt;span class="pl-c1"&gt;1.75&lt;/span&gt;)&lt;/pre&gt;&lt;/div&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;filter(key:)&lt;/code&gt; and &lt;code&gt;filter(keys:)&lt;/code&gt; apply conditions on primary keys and unique keys:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; SELECT * FROM player WHERE id = 1&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;Player.&lt;span class="pl-c1"&gt;filter&lt;/span&gt;(&lt;span class="pl-c1"&gt;key&lt;/span&gt;: &lt;span class="pl-c1"&gt;1&lt;/span&gt;)

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; SELECT * FROM country WHERE isoCode IN ('FR', 'US')&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;Country.&lt;span class="pl-c1"&gt;filter&lt;/span&gt;(&lt;span class="pl-c1"&gt;keys&lt;/span&gt;: [&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;FR&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;US&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;])

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; SELECT * FROM citizenship WHERE citizenId = 1 AND countryCode = 'FR'&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;Citizenship.&lt;span class="pl-c1"&gt;filter&lt;/span&gt;(&lt;span class="pl-c1"&gt;key&lt;/span&gt;: [&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;citizenId&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;&lt;span class="pl-k"&gt;:&lt;/span&gt; &lt;span class="pl-c1"&gt;1&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;countryCode&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;&lt;span class="pl-k"&gt;:&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;FR&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;])

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; SELECT * FROM player WHERE email = 'arthur@example.com'&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;Player.&lt;span class="pl-c1"&gt;filter&lt;/span&gt;(&lt;span class="pl-c1"&gt;key&lt;/span&gt;: [&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;email&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;&lt;span class="pl-k"&gt;:&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;arthur@example.com&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;])&lt;/pre&gt;&lt;/div&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;matching(pattern)&lt;/code&gt; performs &lt;a href="#full-text-search"&gt;full-text search&lt;/a&gt;.&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; SELECT * FROM document WHERE document MATCH 'sqlite database'&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;&lt;span class="pl-k"&gt;let&lt;/span&gt; pattern &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;FTS3Pattern&lt;/span&gt;(&lt;span class="pl-c1"&gt;matchingAllTokensIn&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;SQLite database&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
Document.&lt;span class="pl-c1"&gt;matching&lt;/span&gt;(pattern)&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;When the pattern is nil, no row will match.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;group(expression, ...)&lt;/code&gt; groups rows.&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; SELECT name, MAX(score) FROM player GROUP BY name&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;Player
    .&lt;span class="pl-c1"&gt;select&lt;/span&gt;(nameColumn, &lt;span class="pl-c1"&gt;max&lt;/span&gt;(scoreColumn))
    .&lt;span class="pl-c1"&gt;group&lt;/span&gt;(nameColumn)&lt;/pre&gt;&lt;/div&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;having(expression)&lt;/code&gt; applies conditions on grouped rows.&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; SELECT team, MAX(score) FROM player GROUP BY team HAVING MIN(score) &amp;gt;= 1000&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;Player
    .&lt;span class="pl-c1"&gt;select&lt;/span&gt;(teamColumn, &lt;span class="pl-c1"&gt;max&lt;/span&gt;(scoreColumn))
    .&lt;span class="pl-c1"&gt;group&lt;/span&gt;(teamColumn)
    .&lt;span class="pl-c1"&gt;having&lt;/span&gt;(&lt;span class="pl-c1"&gt;min&lt;/span&gt;(scoreColumn) &lt;span class="pl-k"&gt;&amp;gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;1000&lt;/span&gt;)&lt;/pre&gt;&lt;/div&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;having(aggregate)&lt;/code&gt; applies conditions on grouped rows, according to an &lt;a href="Documentation/AssociationsBasics.md#association-aggregates"&gt;association aggregate&lt;/a&gt;.&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; SELECT team.*&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; FROM team&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; LEFT JOIN player ON player.teamId = team.id&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; GROUP BY team.id&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; HAVING COUNT(DISTINCT player.rowid) &amp;gt;= 5&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;Team.&lt;span class="pl-c1"&gt;having&lt;/span&gt;(Team.&lt;span class="pl-smi"&gt;players&lt;/span&gt;.&lt;span class="pl-c1"&gt;count&lt;/span&gt; &lt;span class="pl-k"&gt;&amp;gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;5&lt;/span&gt;)&lt;/pre&gt;&lt;/div&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;order(ordering, ...)&lt;/code&gt; sorts.&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; SELECT * FROM player ORDER BY name&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;Player.&lt;span class="pl-c1"&gt;order&lt;/span&gt;(nameColumn)

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; SELECT * FROM player ORDER BY score DESC, name&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;Player.&lt;span class="pl-c1"&gt;order&lt;/span&gt;(scoreColumn.&lt;span class="pl-smi"&gt;desc&lt;/span&gt;, nameColumn)&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Each &lt;code&gt;order&lt;/code&gt; call clears any previous ordering:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; SELECT * FROM player ORDER BY name&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;Player.&lt;span class="pl-c1"&gt;order&lt;/span&gt;(scoreColumn).&lt;span class="pl-c1"&gt;order&lt;/span&gt;(nameColumn)&lt;/pre&gt;&lt;/div&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;orderByPrimaryKey()&lt;/code&gt; sorts by primary key:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; SELECT * FROM player ORDER BY id&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;Player.&lt;span class="pl-c1"&gt;orderByPrimaryKey&lt;/span&gt;()

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; SELECT * FROM country ORDER BY code&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;Country.&lt;span class="pl-c1"&gt;orderByPrimaryKey&lt;/span&gt;()

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; SELECT * FROM citizenship ORDER BY citizenId, countryCode&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;Citizenship.&lt;span class="pl-c1"&gt;orderByPrimaryKey&lt;/span&gt;()&lt;/pre&gt;&lt;/div&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;reversed()&lt;/code&gt; reverses the eventual orderings.&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; SELECT * FROM player ORDER BY score ASC, name DESC&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;Player.&lt;span class="pl-c1"&gt;order&lt;/span&gt;(scoreColumn.&lt;span class="pl-smi"&gt;desc&lt;/span&gt;, nameColumn).&lt;span class="pl-c1"&gt;reversed&lt;/span&gt;()&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;If no ordering was already specified, this method has no effect:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; SELECT * FROM player&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;Player.&lt;span class="pl-c1"&gt;all&lt;/span&gt;().&lt;span class="pl-c1"&gt;reversed&lt;/span&gt;()&lt;/pre&gt;&lt;/div&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;limit(limit, offset: offset)&lt;/code&gt; limits and pages results.&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; SELECT * FROM player LIMIT 5&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;Player.&lt;span class="pl-c1"&gt;limit&lt;/span&gt;(&lt;span class="pl-c1"&gt;5&lt;/span&gt;)

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; SELECT * FROM player LIMIT 5 OFFSET 10&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;Player.&lt;span class="pl-c1"&gt;limit&lt;/span&gt;(&lt;span class="pl-c1"&gt;5&lt;/span&gt;, &lt;span class="pl-c1"&gt;offset&lt;/span&gt;: &lt;span class="pl-c1"&gt;10&lt;/span&gt;)&lt;/pre&gt;&lt;/div&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;joining(...)&lt;/code&gt; and &lt;code&gt;including(...)&lt;/code&gt; fetch and join records through &lt;a href="Documentation/AssociationsBasics.md"&gt;Associations&lt;/a&gt;.&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; SELECT player.*, team.*&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; FROM player&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; JOIN team ON team.id = player.teamId&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;Player.&lt;span class="pl-c1"&gt;including&lt;/span&gt;(&lt;span class="pl-c1"&gt;required&lt;/span&gt;: Player.&lt;span class="pl-smi"&gt;team&lt;/span&gt;)&lt;/pre&gt;&lt;/div&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;You can refine requests by chaining those methods:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; SELECT * FROM player WHERE (email IS NOT NULL) ORDER BY name&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;Player.&lt;span class="pl-c1"&gt;order&lt;/span&gt;(nameColumn).&lt;span class="pl-c1"&gt;filter&lt;/span&gt;(emailColumn &lt;span class="pl-k"&gt;!=&lt;/span&gt; &lt;span class="pl-c1"&gt;nil&lt;/span&gt;)&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;The &lt;code&gt;select&lt;/code&gt;, &lt;code&gt;order&lt;/code&gt;, &lt;code&gt;group&lt;/code&gt;, and &lt;code&gt;limit&lt;/code&gt; methods ignore and replace previously applied selection, orderings, grouping, and limits. On the opposite, &lt;code&gt;filter&lt;/code&gt;, &lt;code&gt;matching&lt;/code&gt;, and &lt;code&gt;having&lt;/code&gt; methods extend the query:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;Player                          &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; SELECT * FROM player&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;    .&lt;span class="pl-c1"&gt;filter&lt;/span&gt;(nameColumn &lt;span class="pl-k"&gt;!=&lt;/span&gt; &lt;span class="pl-c1"&gt;nil&lt;/span&gt;)  &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; WHERE (name IS NOT NULL)&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;    .&lt;span class="pl-c1"&gt;filter&lt;/span&gt;(emailColumn &lt;span class="pl-k"&gt;!=&lt;/span&gt; &lt;span class="pl-c1"&gt;nil&lt;/span&gt;) &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt;        AND (email IS NOT NULL)&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;    .&lt;span class="pl-c1"&gt;order&lt;/span&gt;(nameColumn)          &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; - ignored -&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;    .&lt;span class="pl-c1"&gt;reversed&lt;/span&gt;()                 &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; - ignored -&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;    .&lt;span class="pl-c1"&gt;order&lt;/span&gt;(scoreColumn)         &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; ORDER BY score&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;    .&lt;span class="pl-c1"&gt;limit&lt;/span&gt;(&lt;span class="pl-c1"&gt;20&lt;/span&gt;, &lt;span class="pl-c1"&gt;offset&lt;/span&gt;: &lt;span class="pl-c1"&gt;40&lt;/span&gt;)      &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; - ignored -&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;    .&lt;span class="pl-c1"&gt;limit&lt;/span&gt;(&lt;span class="pl-c1"&gt;10&lt;/span&gt;)                  &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; LIMIT 10&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Raw SQL snippets are also accepted, with eventual &lt;a href="http://groue.github.io/GRDB.swift/docs/4.5/Structs/StatementArguments.html" rel="nofollow"&gt;arguments&lt;/a&gt;:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; SELECT DATE(creationDate), COUNT(*) FROM player WHERE name = 'Arthur' GROUP BY date(creationDate)&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;Player
    .&lt;span class="pl-c1"&gt;select&lt;/span&gt;(&lt;span class="pl-c1"&gt;sql&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;DATE(creationDate), COUNT(*)&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
    .&lt;span class="pl-c1"&gt;filter&lt;/span&gt;(&lt;span class="pl-c1"&gt;sql&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;name = ?&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-c1"&gt;arguments&lt;/span&gt;: [&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;Arthur&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;])
    .&lt;span class="pl-c1"&gt;group&lt;/span&gt;(&lt;span class="pl-c1"&gt;sql&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;DATE(creationDate)&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)&lt;/pre&gt;&lt;/div&gt;
&lt;h3&gt;&lt;a id="user-content-columns-selected-by-a-request" class="anchor" aria-hidden="true" href="#columns-selected-by-a-request"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Columns Selected by a Request&lt;/h3&gt;
&lt;p&gt;By default, query interface requests select all columns:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; SELECT * FROM player&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;&lt;span class="pl-k"&gt;let&lt;/span&gt; request &lt;span class="pl-k"&gt;=&lt;/span&gt; Player.&lt;span class="pl-c1"&gt;all&lt;/span&gt;()&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;strong&gt;The selection can be changed for each individual requests, or for all requests built from a given type.&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;The &lt;code&gt;select(...)&lt;/code&gt; and &lt;code&gt;select(..., as:)&lt;/code&gt; methods change the selection of a single request (see &lt;a href="#fetching-from-requests"&gt;Fetching from Requests&lt;/a&gt; for detailed information):&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;let&lt;/span&gt; request &lt;span class="pl-k"&gt;=&lt;/span&gt; Player.&lt;span class="pl-c1"&gt;select&lt;/span&gt;(&lt;span class="pl-c1"&gt;max&lt;/span&gt;(&lt;span class="pl-c1"&gt;Column&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;score&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)))
&lt;span class="pl-k"&gt;let&lt;/span&gt; maxScore&lt;span class="pl-k"&gt;:&lt;/span&gt; &lt;span class="pl-c1"&gt;Int&lt;/span&gt;&lt;span class="pl-k"&gt;?&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-k"&gt;try&lt;/span&gt; &lt;span class="pl-c1"&gt;Int&lt;/span&gt;.&lt;span class="pl-c1"&gt;fetchOne&lt;/span&gt;(db, request)&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;The default selection for a record type is controlled by the &lt;code&gt;databaseSelection&lt;/code&gt; property:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;struct&lt;/span&gt; &lt;span class="pl-en"&gt;RestrictedPlayer&lt;/span&gt; : &lt;span class="pl-e"&gt;TableRecord &lt;/span&gt;{
    &lt;span class="pl-k"&gt;static&lt;/span&gt; &lt;span class="pl-k"&gt;let&lt;/span&gt; databaseTableName &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;player&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;
    &lt;span class="pl-k"&gt;static&lt;/span&gt; &lt;span class="pl-k"&gt;let&lt;/span&gt; databaseSelection&lt;span class="pl-k"&gt;:&lt;/span&gt; [SQLSelectable] &lt;span class="pl-k"&gt;=&lt;/span&gt; [&lt;span class="pl-c1"&gt;Column&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;id&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;), &lt;span class="pl-c1"&gt;Column&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;name&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)]
}

&lt;span class="pl-k"&gt;struct&lt;/span&gt; &lt;span class="pl-en"&gt;ExtendedPlayer&lt;/span&gt; : &lt;span class="pl-e"&gt;TableRecord &lt;/span&gt;{
    &lt;span class="pl-k"&gt;static&lt;/span&gt; &lt;span class="pl-k"&gt;let&lt;/span&gt; databaseTableName &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;player&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;
    &lt;span class="pl-k"&gt;static&lt;/span&gt; &lt;span class="pl-k"&gt;let&lt;/span&gt; databaseSelection&lt;span class="pl-k"&gt;:&lt;/span&gt; [SQLSelectable] &lt;span class="pl-k"&gt;=&lt;/span&gt; [&lt;span class="pl-c1"&gt;AllColumns&lt;/span&gt;(), Column.&lt;span class="pl-smi"&gt;rowID&lt;/span&gt;]
}

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; SELECT id, name FROM player&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;&lt;span class="pl-k"&gt;let&lt;/span&gt; request &lt;span class="pl-k"&gt;=&lt;/span&gt; RestrictedPlayer.&lt;span class="pl-c1"&gt;all&lt;/span&gt;()

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; SELECT *, rowid FROM player&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;&lt;span class="pl-k"&gt;let&lt;/span&gt; request &lt;span class="pl-k"&gt;=&lt;/span&gt; ExtendedPlayer.&lt;span class="pl-c1"&gt;all&lt;/span&gt;()&lt;/pre&gt;&lt;/div&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;g-emoji class="g-emoji" alias="point_up" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/261d.png"&gt;☝️&lt;/g-emoji&gt; &lt;strong&gt;Note&lt;/strong&gt;: make sure the &lt;code&gt;databaseSelection&lt;/code&gt; property is explicitly declared as &lt;code&gt;[SQLSelectable]&lt;/code&gt;. If it is not, the Swift compiler may silently miss the protocol requirement, resulting in sticky &lt;code&gt;SELECT *&lt;/code&gt; requests. To verify your setup, see the &lt;a href="#how-do-i-print-a-request-as-sql"&gt;How do I print a request as SQL?&lt;/a&gt; FAQ.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2&gt;&lt;a id="user-content-expressions" class="anchor" aria-hidden="true" href="#expressions"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Expressions&lt;/h2&gt;
&lt;p&gt;Feed &lt;a href="#requests"&gt;requests&lt;/a&gt; with SQL expressions built from your Swift code:&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-sql-operators" class="anchor" aria-hidden="true" href="#sql-operators"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;SQL Operators&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;=&lt;/code&gt;, &lt;code&gt;&amp;lt;&amp;gt;&lt;/code&gt;, &lt;code&gt;&amp;lt;&lt;/code&gt;, &lt;code&gt;&amp;lt;=&lt;/code&gt;, &lt;code&gt;&amp;gt;&lt;/code&gt;, &lt;code&gt;&amp;gt;=&lt;/code&gt;, &lt;code&gt;IS&lt;/code&gt;, &lt;code&gt;IS NOT&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Comparison operators are based on the Swift operators &lt;code&gt;==&lt;/code&gt;, &lt;code&gt;!=&lt;/code&gt;, &lt;code&gt;===&lt;/code&gt;, &lt;code&gt;!==&lt;/code&gt;, &lt;code&gt;&amp;lt;&lt;/code&gt;, &lt;code&gt;&amp;lt;=&lt;/code&gt;, &lt;code&gt;&amp;gt;&lt;/code&gt;, &lt;code&gt;&amp;gt;=&lt;/code&gt;:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; SELECT * FROM player WHERE (name = 'Arthur')&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;Player.&lt;span class="pl-c1"&gt;filter&lt;/span&gt;(nameColumn &lt;span class="pl-k"&gt;==&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;Arthur&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; SELECT * FROM player WHERE (name IS NULL)&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;Player.&lt;span class="pl-c1"&gt;filter&lt;/span&gt;(nameColumn &lt;span class="pl-k"&gt;==&lt;/span&gt; &lt;span class="pl-c1"&gt;nil&lt;/span&gt;)

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; SELECT * FROM player WHERE (score IS 1000)&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;Player.&lt;span class="pl-c1"&gt;filter&lt;/span&gt;(scoreColumn &lt;span class="pl-k"&gt;===&lt;/span&gt; &lt;span class="pl-c1"&gt;1000&lt;/span&gt;)

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; SELECT * FROM rectangle WHERE width &amp;lt; height&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;Rectangle.&lt;span class="pl-c1"&gt;filter&lt;/span&gt;(widthColumn &lt;span class="pl-k"&gt;&amp;lt;&lt;/span&gt; heightColumn)&lt;/pre&gt;&lt;/div&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;g-emoji class="g-emoji" alias="point_up" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/261d.png"&gt;☝️&lt;/g-emoji&gt; &lt;strong&gt;Note&lt;/strong&gt;: SQLite string comparison, by default, is case-sensitive and not Unicode-aware. See &lt;a href="#string-comparison"&gt;string comparison&lt;/a&gt; if you need more control.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;*&lt;/code&gt;, &lt;code&gt;/&lt;/code&gt;, &lt;code&gt;+&lt;/code&gt;, &lt;code&gt;-&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;SQLite arithmetic operators are derived from their Swift equivalent:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; SELECT ((temperature * 1.8) + 32) AS farenheit FROM planet&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;Planet.&lt;span class="pl-c1"&gt;select&lt;/span&gt;((temperatureColumn &lt;span class="pl-k"&gt;*&lt;/span&gt; &lt;span class="pl-c1"&gt;1.8&lt;/span&gt; &lt;span class="pl-k"&gt;+&lt;/span&gt; &lt;span class="pl-c1"&gt;32&lt;/span&gt;).&lt;span class="pl-c1"&gt;forKey&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;farenheit&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;))&lt;/pre&gt;&lt;/div&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;g-emoji class="g-emoji" alias="point_up" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/261d.png"&gt;☝️&lt;/g-emoji&gt; &lt;strong&gt;Note&lt;/strong&gt;: an expression like &lt;code&gt;nameColumn + "rrr"&lt;/code&gt; will be interpreted by SQLite as a numerical addition (with funny results), not as a string concatenation.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;AND&lt;/code&gt;, &lt;code&gt;OR&lt;/code&gt;, &lt;code&gt;NOT&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;The SQL logical operators are derived from the Swift &lt;code&gt;&amp;amp;&amp;amp;&lt;/code&gt;, &lt;code&gt;||&lt;/code&gt; and &lt;code&gt;!&lt;/code&gt;:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; SELECT * FROM player WHERE ((NOT verified) OR (score &amp;lt; 1000))&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;Player.&lt;span class="pl-c1"&gt;filter&lt;/span&gt;(&lt;span class="pl-k"&gt;!&lt;/span&gt;verifiedColumn &lt;span class="pl-k"&gt;||&lt;/span&gt; scoreColumn &lt;span class="pl-k"&gt;&amp;lt;&lt;/span&gt; &lt;span class="pl-c1"&gt;1000&lt;/span&gt;)&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;When you want to join a sequence of expressions with &lt;code&gt;AND&lt;/code&gt; or &lt;code&gt;OR&lt;/code&gt; operators, use &lt;code&gt;joined(operator:)&lt;/code&gt;:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; SELECT * FROM player WHERE (verified AND (score &amp;gt;= 1000) AND (name IS NOT NULL))&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;&lt;span class="pl-k"&gt;let&lt;/span&gt; conditions &lt;span class="pl-k"&gt;=&lt;/span&gt; [
    verifiedColumn,
    scoreColumn &lt;span class="pl-k"&gt;&amp;gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;1000&lt;/span&gt;,
    nameColumn &lt;span class="pl-k"&gt;!=&lt;/span&gt; &lt;span class="pl-c1"&gt;nil&lt;/span&gt;]
Player.&lt;span class="pl-c1"&gt;filter&lt;/span&gt;(conditions.&lt;span class="pl-c1"&gt;joined&lt;/span&gt;(&lt;span class="pl-c1"&gt;operator&lt;/span&gt;: .&lt;span class="pl-smi"&gt;and&lt;/span&gt;))&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;When the sequence is empty, &lt;code&gt;joined(operator: .and)&lt;/code&gt; returns true, and &lt;code&gt;joined(operator: .or)&lt;/code&gt; returns false:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; SELECT * FROM player WHERE 1&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;Player.&lt;span class="pl-c1"&gt;filter&lt;/span&gt;([].&lt;span class="pl-c1"&gt;joined&lt;/span&gt;(&lt;span class="pl-c1"&gt;operator&lt;/span&gt;: .&lt;span class="pl-smi"&gt;and&lt;/span&gt;))

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; SELECT * FROM player WHERE 0&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;Player.&lt;span class="pl-c1"&gt;filter&lt;/span&gt;([].&lt;span class="pl-c1"&gt;joined&lt;/span&gt;(&lt;span class="pl-c1"&gt;operator&lt;/span&gt;: .&lt;span class="pl-smi"&gt;or&lt;/span&gt;))&lt;/pre&gt;&lt;/div&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;BETWEEN&lt;/code&gt;, &lt;code&gt;IN&lt;/code&gt;, &lt;code&gt;NOT IN&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;To check inclusion in a Swift sequence (array, set, range…), call the &lt;code&gt;contains&lt;/code&gt; method:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; SELECT * FROM player WHERE id IN (1, 2, 3)&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;Player.&lt;span class="pl-c1"&gt;filter&lt;/span&gt;([&lt;span class="pl-c1"&gt;1&lt;/span&gt;, &lt;span class="pl-c1"&gt;2&lt;/span&gt;, &lt;span class="pl-c1"&gt;3&lt;/span&gt;].&lt;span class="pl-c1"&gt;contains&lt;/span&gt;(idColumn))

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; SELECT * FROM player WHERE id NOT IN (1, 2, 3)&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;Player.&lt;span class="pl-c1"&gt;filter&lt;/span&gt;(&lt;span class="pl-k"&gt;!&lt;/span&gt;[&lt;span class="pl-c1"&gt;1&lt;/span&gt;, &lt;span class="pl-c1"&gt;2&lt;/span&gt;, &lt;span class="pl-c1"&gt;3&lt;/span&gt;].&lt;span class="pl-c1"&gt;contains&lt;/span&gt;(idColumn))

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; SELECT * FROM player WHERE score BETWEEN 0 AND 1000&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;Player.&lt;span class="pl-c1"&gt;filter&lt;/span&gt;((&lt;span class="pl-c1"&gt;0&lt;/span&gt;&lt;span class="pl-k"&gt;...&lt;/span&gt;&lt;span class="pl-c1"&gt;1000&lt;/span&gt;).&lt;span class="pl-c1"&gt;contains&lt;/span&gt;(scoreColumn))

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; SELECT * FROM player WHERE (score &amp;gt;= 0) AND (score &amp;lt; 1000)&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;Player.&lt;span class="pl-c1"&gt;filter&lt;/span&gt;((&lt;span class="pl-c1"&gt;0&lt;/span&gt;&lt;span class="pl-k"&gt;..&amp;lt;&lt;/span&gt;&lt;span class="pl-c1"&gt;1000&lt;/span&gt;).&lt;span class="pl-c1"&gt;contains&lt;/span&gt;(scoreColumn))

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; SELECT * FROM player WHERE initial BETWEEN 'A' AND 'N'&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;Player.&lt;span class="pl-c1"&gt;filter&lt;/span&gt;((&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;A&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;&lt;span class="pl-k"&gt;...&lt;/span&gt;&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;N&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;).&lt;span class="pl-c1"&gt;contains&lt;/span&gt;(initialColumn))

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; SELECT * FROM player WHERE (initial &amp;gt;= 'A') AND (initial &amp;lt; 'N')&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;Player.&lt;span class="pl-c1"&gt;filter&lt;/span&gt;((&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;A&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;&lt;span class="pl-k"&gt;..&amp;lt;&lt;/span&gt;&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;N&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;).&lt;span class="pl-c1"&gt;contains&lt;/span&gt;(initialColumn))&lt;/pre&gt;&lt;/div&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;g-emoji class="g-emoji" alias="point_up" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/261d.png"&gt;☝️&lt;/g-emoji&gt; &lt;strong&gt;Note&lt;/strong&gt;: SQLite string comparison, by default, is case-sensitive and not Unicode-aware. See &lt;a href="#string-comparison"&gt;string comparison&lt;/a&gt; if you need more control.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;LIKE&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;The SQLite LIKE operator is available as the &lt;code&gt;like&lt;/code&gt; method:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; SELECT * FROM player WHERE (email LIKE '%@example.com')&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;Player.&lt;span class="pl-c1"&gt;filter&lt;/span&gt;(emailColumn.&lt;span class="pl-c1"&gt;like&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;%@example.com&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;))&lt;/pre&gt;&lt;/div&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;g-emoji class="g-emoji" alias="point_up" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/261d.png"&gt;☝️&lt;/g-emoji&gt; &lt;strong&gt;Note&lt;/strong&gt;: the SQLite LIKE operator is case-insensitive but not Unicode-aware. For example, the expression &lt;code&gt;'a' LIKE 'A'&lt;/code&gt; is true but &lt;code&gt;'æ' LIKE 'Æ'&lt;/code&gt; is false.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;MATCH&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;The full-text MATCH operator is available through &lt;a href="#fts3pattern"&gt;FTS3Pattern&lt;/a&gt; (for FTS3 and FTS4 tables) and &lt;a href="#fts5pattern"&gt;FTS5Pattern&lt;/a&gt; (for FTS5):&lt;/p&gt;
&lt;p&gt;FTS3 and FTS4:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;let&lt;/span&gt; pattern &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;FTS3Pattern&lt;/span&gt;(&lt;span class="pl-c1"&gt;matchingAllTokensIn&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;SQLite database&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; SELECT * FROM document WHERE document MATCH 'sqlite database'&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;Document.&lt;span class="pl-c1"&gt;matching&lt;/span&gt;(pattern)

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; SELECT * FROM document WHERE content MATCH 'sqlite database'&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;Document.&lt;span class="pl-c1"&gt;filter&lt;/span&gt;(contentColumn.&lt;span class="pl-c1"&gt;match&lt;/span&gt;(pattern))&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;FTS5:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;let&lt;/span&gt; pattern &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;FTS5Pattern&lt;/span&gt;(&lt;span class="pl-c1"&gt;matchingAllTokensIn&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;SQLite database&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; SELECT * FROM document WHERE document MATCH 'sqlite database'&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;Document.&lt;span class="pl-c1"&gt;matching&lt;/span&gt;(pattern)&lt;/pre&gt;&lt;/div&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;&lt;a id="user-content-sql-functions" class="anchor" aria-hidden="true" href="#sql-functions"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;SQL Functions&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;ABS&lt;/code&gt;, &lt;code&gt;AVG&lt;/code&gt;, &lt;code&gt;COUNT&lt;/code&gt;, &lt;code&gt;LENGTH&lt;/code&gt;, &lt;code&gt;MAX&lt;/code&gt;, &lt;code&gt;MIN&lt;/code&gt;, &lt;code&gt;SUM&lt;/code&gt;:&lt;/p&gt;
&lt;p&gt;Those are based on the &lt;code&gt;abs&lt;/code&gt;, &lt;code&gt;average&lt;/code&gt;, &lt;code&gt;count&lt;/code&gt;, &lt;code&gt;length&lt;/code&gt;, &lt;code&gt;max&lt;/code&gt;, &lt;code&gt;min&lt;/code&gt; and &lt;code&gt;sum&lt;/code&gt; Swift functions:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; SELECT MIN(score), MAX(score) FROM player&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;Player.&lt;span class="pl-c1"&gt;select&lt;/span&gt;(&lt;span class="pl-c1"&gt;min&lt;/span&gt;(scoreColumn), &lt;span class="pl-c1"&gt;max&lt;/span&gt;(scoreColumn))

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; SELECT COUNT(name) FROM player&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;Player.&lt;span class="pl-c1"&gt;select&lt;/span&gt;(&lt;span class="pl-c1"&gt;count&lt;/span&gt;(nameColumn))

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; SELECT COUNT(DISTINCT name) FROM player&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;Player.&lt;span class="pl-c1"&gt;select&lt;/span&gt;(&lt;span class="pl-c1"&gt;count&lt;/span&gt;(&lt;span class="pl-c1"&gt;distinct&lt;/span&gt;: nameColumn))&lt;/pre&gt;&lt;/div&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;IFNULL&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Use the Swift &lt;code&gt;??&lt;/code&gt; operator:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; SELECT IFNULL(name, 'Anonymous') FROM player&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;Player.&lt;span class="pl-c1"&gt;select&lt;/span&gt;(nameColumn &lt;span class="pl-k"&gt;??&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;Anonymous&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; SELECT IFNULL(name, email) FROM player&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;Player.&lt;span class="pl-c1"&gt;select&lt;/span&gt;(nameColumn &lt;span class="pl-k"&gt;??&lt;/span&gt; emailColumn)&lt;/pre&gt;&lt;/div&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;LOWER&lt;/code&gt;, &lt;code&gt;UPPER&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;The query interface does not give access to those SQLite functions. Nothing against them, but they are not unicode aware.&lt;/p&gt;
&lt;p&gt;Instead, GRDB extends SQLite with SQL functions that call the Swift built-in string functions &lt;code&gt;capitalized&lt;/code&gt;, &lt;code&gt;lowercased&lt;/code&gt;, &lt;code&gt;uppercased&lt;/code&gt;, &lt;code&gt;localizedCapitalized&lt;/code&gt;, &lt;code&gt;localizedLowercased&lt;/code&gt; and &lt;code&gt;localizedUppercased&lt;/code&gt;:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;Player.&lt;span class="pl-c1"&gt;select&lt;/span&gt;(nameColumn.&lt;span class="pl-c1"&gt;uppercased&lt;/span&gt;())&lt;/pre&gt;&lt;/div&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;g-emoji class="g-emoji" alias="point_up" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/261d.png"&gt;☝️&lt;/g-emoji&gt; &lt;strong&gt;Note&lt;/strong&gt;: When &lt;em&gt;comparing&lt;/em&gt; strings, you'd rather use a &lt;a href="#string-comparison"&gt;collation&lt;/a&gt;:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;let&lt;/span&gt; name&lt;span class="pl-k"&gt;:&lt;/span&gt; &lt;span class="pl-c1"&gt;String&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-k"&gt;...&lt;/span&gt;

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Not recommended&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;nameColumn.&lt;span class="pl-c1"&gt;uppercased&lt;/span&gt;() &lt;span class="pl-k"&gt;==&lt;/span&gt; name.&lt;span class="pl-c1"&gt;uppercased&lt;/span&gt;()

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Better&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;nameColumn.&lt;span class="pl-c1"&gt;collating&lt;/span&gt;(.&lt;span class="pl-smi"&gt;caseInsensitiveCompare&lt;/span&gt;) &lt;span class="pl-k"&gt;==&lt;/span&gt; name&lt;/pre&gt;&lt;/div&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Custom SQL functions and aggregates&lt;/p&gt;
&lt;p&gt;You can apply your own &lt;a href="#custom-functions-"&gt;custom SQL functions and aggregates&lt;/a&gt;:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;let&lt;/span&gt; f &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;DatabaseFunction&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;f&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-k"&gt;...&lt;/span&gt;)

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; SELECT f(name) FROM player&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;Player.&lt;span class="pl-c1"&gt;select&lt;/span&gt;(f.&lt;span class="pl-c1"&gt;apply&lt;/span&gt;(nameColumn))&lt;/pre&gt;&lt;/div&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-fetching-from-requests" class="anchor" aria-hidden="true" href="#fetching-from-requests"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Fetching from Requests&lt;/h2&gt;
&lt;p&gt;Once you have a request, you can fetch the records at the origin of the request:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Some request based on `Player`&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;&lt;span class="pl-k"&gt;let&lt;/span&gt; request &lt;span class="pl-k"&gt;=&lt;/span&gt; Player.&lt;span class="pl-c1"&gt;filter&lt;/span&gt;(&lt;span class="pl-k"&gt;...&lt;/span&gt;)&lt;span class="pl-k"&gt;...&lt;/span&gt; &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; QueryInterfaceRequest&amp;lt;Player&amp;gt;&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Fetch players:&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;&lt;span class="pl-k"&gt;try&lt;/span&gt; request.&lt;span class="pl-c1"&gt;fetchCursor&lt;/span&gt;(db) &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; A Cursor of Player&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;&lt;span class="pl-k"&gt;try&lt;/span&gt; request.&lt;span class="pl-c1"&gt;fetchAll&lt;/span&gt;(db)    &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; [Player]&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;&lt;span class="pl-k"&gt;try&lt;/span&gt; request.&lt;span class="pl-c1"&gt;fetchOne&lt;/span&gt;(db)    &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Player?&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;For example:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;let&lt;/span&gt; allPlayers &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-k"&gt;try&lt;/span&gt; Player.&lt;span class="pl-c1"&gt;fetchAll&lt;/span&gt;(db)                            &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; [Player]&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;&lt;span class="pl-k"&gt;let&lt;/span&gt; arthur &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-k"&gt;try&lt;/span&gt; Player.&lt;span class="pl-c1"&gt;filter&lt;/span&gt;(nameColumn &lt;span class="pl-k"&gt;==&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;Arthur&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;).&lt;span class="pl-c1"&gt;fetchOne&lt;/span&gt;(db) &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Player?&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;See &lt;a href="#fetching-methods"&gt;fetching methods&lt;/a&gt; for information about the &lt;code&gt;fetchCursor&lt;/code&gt;, &lt;code&gt;fetchAll&lt;/code&gt; and &lt;code&gt;fetchOne&lt;/code&gt; methods.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;You sometimes want to fetch other values&lt;/strong&gt;.&lt;/p&gt;
&lt;p&gt;The simplest way is to use the request as an argument to a fetching method of the desired type:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Fetch an Int&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;&lt;span class="pl-k"&gt;let&lt;/span&gt; request &lt;span class="pl-k"&gt;=&lt;/span&gt; Player.&lt;span class="pl-c1"&gt;select&lt;/span&gt;(&lt;span class="pl-c1"&gt;max&lt;/span&gt;(scoreColumn))
&lt;span class="pl-k"&gt;let&lt;/span&gt; maxScore &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-k"&gt;try&lt;/span&gt; &lt;span class="pl-c1"&gt;Int&lt;/span&gt;.&lt;span class="pl-c1"&gt;fetchOne&lt;/span&gt;(db, request) &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Int?&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Fetch a Row&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;&lt;span class="pl-k"&gt;let&lt;/span&gt; request &lt;span class="pl-k"&gt;=&lt;/span&gt; Player.&lt;span class="pl-c1"&gt;select&lt;/span&gt;(&lt;span class="pl-c1"&gt;min&lt;/span&gt;(scoreColumn), &lt;span class="pl-c1"&gt;max&lt;/span&gt;(scoreColumn))
&lt;span class="pl-k"&gt;let&lt;/span&gt; row &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-k"&gt;try&lt;/span&gt; Row.&lt;span class="pl-c1"&gt;fetchOne&lt;/span&gt;(db, request)&lt;span class="pl-k"&gt;!&lt;/span&gt;     &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Row&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;&lt;span class="pl-k"&gt;let&lt;/span&gt; minScore &lt;span class="pl-k"&gt;=&lt;/span&gt; row[&lt;span class="pl-c1"&gt;0&lt;/span&gt;] &lt;span class="pl-k"&gt;as&lt;/span&gt; &lt;span class="pl-c1"&gt;Int&lt;/span&gt;&lt;span class="pl-k"&gt;?&lt;/span&gt;
&lt;span class="pl-k"&gt;let&lt;/span&gt; maxScore &lt;span class="pl-k"&gt;=&lt;/span&gt; row[&lt;span class="pl-c1"&gt;1&lt;/span&gt;] &lt;span class="pl-k"&gt;as&lt;/span&gt; &lt;span class="pl-c1"&gt;Int&lt;/span&gt;&lt;span class="pl-k"&gt;?&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;You can also change the request so that it knows the type it has to fetch:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;With &lt;code&gt;asRequest(of:)&lt;/code&gt;, useful when you use &lt;a href="Documentation/AssociationsBasics.md"&gt;Associations&lt;/a&gt;:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;struct&lt;/span&gt; &lt;span class="pl-en"&gt;BookInfo&lt;/span&gt;: &lt;span class="pl-e"&gt;FetchableRecord&lt;/span&gt;, &lt;span class="pl-e"&gt;Decodable &lt;/span&gt;{
    &lt;span class="pl-k"&gt;var&lt;/span&gt; book&lt;span class="pl-k"&gt;:&lt;/span&gt; Book
    &lt;span class="pl-k"&gt;var&lt;/span&gt; author&lt;span class="pl-k"&gt;:&lt;/span&gt; Author
}

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; A request of BookInfo&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;&lt;span class="pl-k"&gt;let&lt;/span&gt; request &lt;span class="pl-k"&gt;=&lt;/span&gt; Book
    .&lt;span class="pl-c1"&gt;including&lt;/span&gt;(&lt;span class="pl-c1"&gt;required&lt;/span&gt;: Book.&lt;span class="pl-smi"&gt;author&lt;/span&gt;)
    .&lt;span class="pl-c1"&gt;asRequest&lt;/span&gt;(&lt;span class="pl-c1"&gt;of&lt;/span&gt;: BookInfo.&lt;span class="pl-k"&gt;self&lt;/span&gt;)

&lt;span class="pl-k"&gt;let&lt;/span&gt; bookInfos &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-k"&gt;try&lt;/span&gt; dbQueue.&lt;span class="pl-smi"&gt;read&lt;/span&gt; { db &lt;span class="pl-k"&gt;in&lt;/span&gt;
    &lt;span class="pl-k"&gt;try&lt;/span&gt; request.&lt;span class="pl-c1"&gt;fetchAll&lt;/span&gt;(db) &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; [BookInfo]&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;}&lt;/pre&gt;&lt;/div&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;With &lt;code&gt;select(..., as:)&lt;/code&gt;, which is handy when you change the selection:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; A request of Int&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;&lt;span class="pl-k"&gt;let&lt;/span&gt; request &lt;span class="pl-k"&gt;=&lt;/span&gt; Player.&lt;span class="pl-c1"&gt;select&lt;/span&gt;(&lt;span class="pl-c1"&gt;max&lt;/span&gt;(scoreColumn), &lt;span class="pl-c1"&gt;as&lt;/span&gt;: &lt;span class="pl-c1"&gt;Int&lt;/span&gt;.&lt;span class="pl-k"&gt;self&lt;/span&gt;)

&lt;span class="pl-k"&gt;let&lt;/span&gt; maxScore &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-k"&gt;try&lt;/span&gt; dbQueue.&lt;span class="pl-smi"&gt;read&lt;/span&gt; { db &lt;span class="pl-k"&gt;in&lt;/span&gt;
    &lt;span class="pl-k"&gt;try&lt;/span&gt; request.&lt;span class="pl-c1"&gt;fetchOne&lt;/span&gt;(db) &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Int?&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;}&lt;/pre&gt;&lt;/div&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-fetching-by-key" class="anchor" aria-hidden="true" href="#fetching-by-key"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Fetching By Key&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;Fetching records according to their primary key&lt;/strong&gt; is a very common task. It has a shortcut which accepts any single-column primary key:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; SELECT * FROM player WHERE id = 1&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;&lt;span class="pl-k"&gt;try&lt;/span&gt; Player.&lt;span class="pl-c1"&gt;fetchOne&lt;/span&gt;(db, &lt;span class="pl-c1"&gt;key&lt;/span&gt;: &lt;span class="pl-c1"&gt;1&lt;/span&gt;)              &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Player?&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; SELECT * FROM player WHERE id IN (1, 2, 3)&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;&lt;span class="pl-k"&gt;try&lt;/span&gt; Player.&lt;span class="pl-c1"&gt;fetchAll&lt;/span&gt;(db, &lt;span class="pl-c1"&gt;keys&lt;/span&gt;: [&lt;span class="pl-c1"&gt;1&lt;/span&gt;, &lt;span class="pl-c1"&gt;2&lt;/span&gt;, &lt;span class="pl-c1"&gt;3&lt;/span&gt;])     &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; [Player]&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; SELECT * FROM country WHERE isoCode = 'FR'&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;&lt;span class="pl-k"&gt;try&lt;/span&gt; Country.&lt;span class="pl-c1"&gt;fetchOne&lt;/span&gt;(db, &lt;span class="pl-c1"&gt;key&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;FR&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)          &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Country?&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; SELECT * FROM country WHERE isoCode IN ('FR', 'US')&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;&lt;span class="pl-k"&gt;try&lt;/span&gt; Country.&lt;span class="pl-c1"&gt;fetchAll&lt;/span&gt;(db, &lt;span class="pl-c1"&gt;keys&lt;/span&gt;: [&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;FR&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;US&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;]) &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; [Country]&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;When the table has no explicit primary key, GRDB uses the &lt;a href="#the-implicit-rowid-primary-key"&gt;hidden "rowid" column&lt;/a&gt;:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; SELECT * FROM document WHERE rowid = 1&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;&lt;span class="pl-k"&gt;try&lt;/span&gt; Document.&lt;span class="pl-c1"&gt;fetchOne&lt;/span&gt;(db, &lt;span class="pl-c1"&gt;key&lt;/span&gt;: &lt;span class="pl-c1"&gt;1&lt;/span&gt;)            &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Document?&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;For multiple-column primary keys and unique keys defined by unique indexes, provide a dictionary:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; SELECT * FROM citizenship WHERE citizenId = 1 AND countryCode = 'FR'&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;&lt;span class="pl-k"&gt;try&lt;/span&gt; Citizenship.&lt;span class="pl-c1"&gt;fetchOne&lt;/span&gt;(db, &lt;span class="pl-c1"&gt;key&lt;/span&gt;: [&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;citizenId&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;&lt;span class="pl-k"&gt;:&lt;/span&gt; &lt;span class="pl-c1"&gt;1&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;countryCode&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;&lt;span class="pl-k"&gt;:&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;FR&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;]) &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Citizenship?&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; SELECT * FROM player WHERE email = 'arthur@example.com'&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;&lt;span class="pl-k"&gt;try&lt;/span&gt; Player.&lt;span class="pl-c1"&gt;fetchOne&lt;/span&gt;(db, &lt;span class="pl-c1"&gt;key&lt;/span&gt;: [&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;email&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;&lt;span class="pl-k"&gt;:&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;arthur@example.com&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;])              &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Player?&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;strong&gt;When you want to build a request and plan to fetch from it later&lt;/strong&gt;, use the &lt;code&gt;filter(key:)&lt;/code&gt; and &lt;code&gt;filter(keys:)&lt;/code&gt; methods:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; SELECT * FROM player WHERE id = 1&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;&lt;span class="pl-k"&gt;let&lt;/span&gt; request &lt;span class="pl-k"&gt;=&lt;/span&gt; Player.&lt;span class="pl-c1"&gt;filter&lt;/span&gt;(&lt;span class="pl-c1"&gt;key&lt;/span&gt;: &lt;span class="pl-c1"&gt;1&lt;/span&gt;)
&lt;span class="pl-k"&gt;let&lt;/span&gt; player &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-k"&gt;try&lt;/span&gt; request.&lt;span class="pl-c1"&gt;fetchOne&lt;/span&gt;(db)    &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Player?&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; SELECT * FROM player WHERE id IN (1, 2, 3)&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;&lt;span class="pl-k"&gt;let&lt;/span&gt; request &lt;span class="pl-k"&gt;=&lt;/span&gt; Player.&lt;span class="pl-c1"&gt;filter&lt;/span&gt;(&lt;span class="pl-c1"&gt;keys&lt;/span&gt;: [&lt;span class="pl-c1"&gt;1&lt;/span&gt;, &lt;span class="pl-c1"&gt;2&lt;/span&gt;, &lt;span class="pl-c1"&gt;3&lt;/span&gt;])
&lt;span class="pl-k"&gt;let&lt;/span&gt; players &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-k"&gt;try&lt;/span&gt; request.&lt;span class="pl-c1"&gt;fetchAll&lt;/span&gt;(db)   &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; [Player]&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; SELECT * FROM country WHERE isoCode = 'FR'&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;&lt;span class="pl-k"&gt;let&lt;/span&gt; request &lt;span class="pl-k"&gt;=&lt;/span&gt; Country.&lt;span class="pl-c1"&gt;filter&lt;/span&gt;(&lt;span class="pl-c1"&gt;key&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;FR&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
&lt;span class="pl-k"&gt;let&lt;/span&gt; country &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-k"&gt;try&lt;/span&gt; request.&lt;span class="pl-c1"&gt;fetchOne&lt;/span&gt;(db)   &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Country?&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; SELECT * FROM country WHERE isoCode IN ('FR', 'US')&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;&lt;span class="pl-k"&gt;let&lt;/span&gt; request &lt;span class="pl-k"&gt;=&lt;/span&gt; Country.&lt;span class="pl-c1"&gt;filter&lt;/span&gt;(&lt;span class="pl-c1"&gt;keys&lt;/span&gt;: [&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;FR&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;US&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;])
&lt;span class="pl-k"&gt;let&lt;/span&gt; countries &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-k"&gt;try&lt;/span&gt; request.&lt;span class="pl-c1"&gt;fetchAll&lt;/span&gt;(db) &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; [Country]&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; SELECT * FROM citizenship WHERE citizenId = 1 AND countryCode = 'FR'&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;&lt;span class="pl-k"&gt;let&lt;/span&gt; request &lt;span class="pl-k"&gt;=&lt;/span&gt; Citizenship.&lt;span class="pl-c1"&gt;filter&lt;/span&gt;(&lt;span class="pl-c1"&gt;key&lt;/span&gt;: [&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;citizenId&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;&lt;span class="pl-k"&gt;:&lt;/span&gt; &lt;span class="pl-c1"&gt;1&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;countryCode&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;&lt;span class="pl-k"&gt;:&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;FR&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;])
&lt;span class="pl-k"&gt;let&lt;/span&gt; citizenship &lt;span class="pl-k"&gt;=&lt;/span&gt; request.&lt;span class="pl-c1"&gt;fetchOne&lt;/span&gt;(db)   &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Citizenship?&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; SELECT * FROM player WHERE email = 'arthur@example.com'&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;&lt;span class="pl-k"&gt;let&lt;/span&gt; request &lt;span class="pl-k"&gt;=&lt;/span&gt; Player.&lt;span class="pl-c1"&gt;filter&lt;/span&gt;(&lt;span class="pl-c1"&gt;key&lt;/span&gt;: [&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;email&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;&lt;span class="pl-k"&gt;:&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;arthur@example.com&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;])
&lt;span class="pl-k"&gt;let&lt;/span&gt; player &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-k"&gt;try&lt;/span&gt; request.&lt;span class="pl-c1"&gt;fetchOne&lt;/span&gt;(db)    &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Player?&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h2&gt;&lt;a id="user-content-fetching-aggregated-values" class="anchor" aria-hidden="true" href="#fetching-aggregated-values"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Fetching Aggregated Values&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;Requests can count.&lt;/strong&gt; The &lt;code&gt;fetchCount()&lt;/code&gt; method returns the number of rows that would be returned by a fetch request:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; SELECT COUNT(*) FROM player&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;&lt;span class="pl-k"&gt;let&lt;/span&gt; count &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-k"&gt;try&lt;/span&gt; Player.&lt;span class="pl-c1"&gt;fetchCount&lt;/span&gt;(db) &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Int&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; SELECT COUNT(*) FROM player WHERE email IS NOT NULL&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;&lt;span class="pl-k"&gt;let&lt;/span&gt; count &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-k"&gt;try&lt;/span&gt; Player.&lt;span class="pl-c1"&gt;filter&lt;/span&gt;(emailColumn &lt;span class="pl-k"&gt;!=&lt;/span&gt; &lt;span class="pl-c1"&gt;nil&lt;/span&gt;).&lt;span class="pl-c1"&gt;fetchCount&lt;/span&gt;(db)

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; SELECT COUNT(DISTINCT name) FROM player&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;&lt;span class="pl-k"&gt;let&lt;/span&gt; count &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-k"&gt;try&lt;/span&gt; Player.&lt;span class="pl-c1"&gt;select&lt;/span&gt;(nameColumn).&lt;span class="pl-c1"&gt;distinct&lt;/span&gt;().&lt;span class="pl-c1"&gt;fetchCount&lt;/span&gt;(db)

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; SELECT COUNT(*) FROM (SELECT DISTINCT name, score FROM player)&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;&lt;span class="pl-k"&gt;let&lt;/span&gt; count &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-k"&gt;try&lt;/span&gt; Player.&lt;span class="pl-c1"&gt;select&lt;/span&gt;(nameColumn, scoreColumn).&lt;span class="pl-c1"&gt;distinct&lt;/span&gt;().&lt;span class="pl-c1"&gt;fetchCount&lt;/span&gt;(db)&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;strong&gt;Other aggregated values&lt;/strong&gt; can also be selected and fetched (see &lt;a href="#sql-functions"&gt;SQL Functions&lt;/a&gt;):&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;let&lt;/span&gt; request &lt;span class="pl-k"&gt;=&lt;/span&gt; Player.&lt;span class="pl-c1"&gt;select&lt;/span&gt;(&lt;span class="pl-c1"&gt;max&lt;/span&gt;(scoreColumn))
&lt;span class="pl-k"&gt;let&lt;/span&gt; maxScore &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-k"&gt;try&lt;/span&gt; &lt;span class="pl-c1"&gt;Int&lt;/span&gt;.&lt;span class="pl-c1"&gt;fetchOne&lt;/span&gt;(db, request) &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Int?&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;
&lt;span class="pl-k"&gt;let&lt;/span&gt; request &lt;span class="pl-k"&gt;=&lt;/span&gt; Player.&lt;span class="pl-c1"&gt;select&lt;/span&gt;(&lt;span class="pl-c1"&gt;min&lt;/span&gt;(scoreColumn), &lt;span class="pl-c1"&gt;max&lt;/span&gt;(scoreColumn))
&lt;span class="pl-k"&gt;let&lt;/span&gt; row &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-k"&gt;try&lt;/span&gt; Row.&lt;span class="pl-c1"&gt;fetchOne&lt;/span&gt;(db, request)&lt;span class="pl-k"&gt;!&lt;/span&gt;     &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Row&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;&lt;span class="pl-k"&gt;let&lt;/span&gt; minScore &lt;span class="pl-k"&gt;=&lt;/span&gt; row[&lt;span class="pl-c1"&gt;0&lt;/span&gt;] &lt;span class="pl-k"&gt;as&lt;/span&gt; &lt;span class="pl-c1"&gt;Int&lt;/span&gt;&lt;span class="pl-k"&gt;?&lt;/span&gt;
&lt;span class="pl-k"&gt;let&lt;/span&gt; maxScore &lt;span class="pl-k"&gt;=&lt;/span&gt; row[&lt;span class="pl-c1"&gt;1&lt;/span&gt;] &lt;span class="pl-k"&gt;as&lt;/span&gt; &lt;span class="pl-c1"&gt;Int&lt;/span&gt;&lt;span class="pl-k"&gt;?&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h2&gt;&lt;a id="user-content-delete-requests" class="anchor" aria-hidden="true" href="#delete-requests"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Delete Requests&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;Requests can delete records&lt;/strong&gt;, with the &lt;code&gt;deleteAll()&lt;/code&gt; method:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; DELETE FROM player WHERE email IS NULL&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;&lt;span class="pl-k"&gt;let&lt;/span&gt; request &lt;span class="pl-k"&gt;=&lt;/span&gt; Player.&lt;span class="pl-c1"&gt;filter&lt;/span&gt;(emailColumn &lt;span class="pl-k"&gt;==&lt;/span&gt; &lt;span class="pl-c1"&gt;nil&lt;/span&gt;)
&lt;span class="pl-k"&gt;try&lt;/span&gt; request.&lt;span class="pl-c1"&gt;deleteAll&lt;/span&gt;(db)&lt;/pre&gt;&lt;/div&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;g-emoji class="g-emoji" alias="point_up" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/261d.png"&gt;☝️&lt;/g-emoji&gt; &lt;strong&gt;Note&lt;/strong&gt; Deletion methods are only available for records that adopts the &lt;a href="#persistablerecord-protocol"&gt;PersistableRecord&lt;/a&gt; protocol.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;strong&gt;Deleting records according to their primary key&lt;/strong&gt; is also quite common. It has a shortcut which accepts any single-column primary key:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; DELETE FROM player WHERE id = 1&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;&lt;span class="pl-k"&gt;try&lt;/span&gt; Player.&lt;span class="pl-c1"&gt;deleteOne&lt;/span&gt;(db, &lt;span class="pl-c1"&gt;key&lt;/span&gt;: &lt;span class="pl-c1"&gt;1&lt;/span&gt;)

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; DELETE FROM player WHERE id IN (1, 2, 3)&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;&lt;span class="pl-k"&gt;try&lt;/span&gt; Player.&lt;span class="pl-c1"&gt;deleteAll&lt;/span&gt;(db, &lt;span class="pl-c1"&gt;keys&lt;/span&gt;: [&lt;span class="pl-c1"&gt;1&lt;/span&gt;, &lt;span class="pl-c1"&gt;2&lt;/span&gt;, &lt;span class="pl-c1"&gt;3&lt;/span&gt;])

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; DELETE FROM country WHERE isoCode = 'FR'&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;&lt;span class="pl-k"&gt;try&lt;/span&gt; Country.&lt;span class="pl-c1"&gt;deleteOne&lt;/span&gt;(db, &lt;span class="pl-c1"&gt;key&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;FR&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; DELETE FROM country WHERE isoCode IN ('FR', 'US')&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;&lt;span class="pl-k"&gt;try&lt;/span&gt; Country.&lt;span class="pl-c1"&gt;deleteAll&lt;/span&gt;(db, &lt;span class="pl-c1"&gt;keys&lt;/span&gt;: [&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;FR&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;US&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;])&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;When the table has no explicit primary key, GRDB uses the &lt;a href="#the-implicit-rowid-primary-key"&gt;hidden "rowid" column&lt;/a&gt;:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; DELETE FROM document WHERE rowid = 1&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;&lt;span class="pl-k"&gt;try&lt;/span&gt; Document.&lt;span class="pl-c1"&gt;deleteOne&lt;/span&gt;(db, &lt;span class="pl-c1"&gt;key&lt;/span&gt;: &lt;span class="pl-c1"&gt;1&lt;/span&gt;)&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;For multiple-column primary keys and unique keys defined by unique indexes, provide a dictionary:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; DELETE FROM citizenship WHERE citizenId = 1 AND countryCode = 'FR'&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;&lt;span class="pl-k"&gt;try&lt;/span&gt; Citizenship.&lt;span class="pl-c1"&gt;deleteOne&lt;/span&gt;(db, &lt;span class="pl-c1"&gt;key&lt;/span&gt;: [&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;citizenId&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;&lt;span class="pl-k"&gt;:&lt;/span&gt; &lt;span class="pl-c1"&gt;1&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;countryCode&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;&lt;span class="pl-k"&gt;:&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;FR&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;])

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; DELETE FROM player WHERE email = 'arthur@example.com'&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;Player.&lt;span class="pl-c1"&gt;deleteOne&lt;/span&gt;(db, &lt;span class="pl-c1"&gt;key&lt;/span&gt;: [&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;email&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;&lt;span class="pl-k"&gt;:&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;arthur@example.com&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;])&lt;/pre&gt;&lt;/div&gt;
&lt;h2&gt;&lt;a id="user-content-custom-requests" class="anchor" aria-hidden="true" href="#custom-requests"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Custom Requests&lt;/h2&gt;
&lt;p&gt;Until now, we have seen &lt;a href="#requests"&gt;requests&lt;/a&gt; created from any type that adopts the &lt;a href="#tablerecord-protocol"&gt;TableRecord&lt;/a&gt; protocol:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;let&lt;/span&gt; request &lt;span class="pl-k"&gt;=&lt;/span&gt; Player.&lt;span class="pl-c1"&gt;all&lt;/span&gt;()  &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; QueryInterfaceRequest&amp;lt;Player&amp;gt;&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Those requests of type &lt;code&gt;QueryInterfaceRequest&lt;/code&gt; can fetch and count:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;try&lt;/span&gt; request.&lt;span class="pl-c1"&gt;fetchCursor&lt;/span&gt;(db) &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; A Cursor of Player&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;&lt;span class="pl-k"&gt;try&lt;/span&gt; request.&lt;span class="pl-c1"&gt;fetchAll&lt;/span&gt;(db)    &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; [Player]&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;&lt;span class="pl-k"&gt;try&lt;/span&gt; request.&lt;span class="pl-c1"&gt;fetchOne&lt;/span&gt;(db)    &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Player?&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;&lt;span class="pl-k"&gt;try&lt;/span&gt; request.&lt;span class="pl-c1"&gt;fetchCount&lt;/span&gt;(db)  &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Int&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;strong&gt;When the query interface can not generate the SQL you need&lt;/strong&gt;, you can still fallback to &lt;a href="#fetch-queries"&gt;raw SQL&lt;/a&gt;:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Custom SQL is always welcome&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;&lt;span class="pl-k"&gt;try&lt;/span&gt; Player.&lt;span class="pl-c1"&gt;fetchAll&lt;/span&gt;(db, &lt;span class="pl-c1"&gt;sql&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;SELECT ...&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)   &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; [Player]&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;But you may prefer to bring some elegance back in, and build custom requests:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; No custom SQL in sight&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;&lt;span class="pl-k"&gt;try&lt;/span&gt; Player.&lt;span class="pl-c1"&gt;customRequest&lt;/span&gt;().&lt;span class="pl-c1"&gt;fetchAll&lt;/span&gt;(db) &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; [Player]&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="#fetchrequest-protocol"&gt;FetchRequest Protocol&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#building-custom-requests"&gt;Building Custom Requests&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#fetching-from-custom-requests"&gt;Fetching From Custom Requests&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;&lt;a id="user-content-fetchrequest-protocol" class="anchor" aria-hidden="true" href="#fetchrequest-protocol"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;FetchRequest Protocol&lt;/h3&gt;
&lt;p&gt;&lt;strong&gt;FetchRequest&lt;/strong&gt; is the protocol for all requests that run from a single select statement, and know how fetched rows should be interpreted:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;protocol&lt;/span&gt; &lt;span class="pl-en"&gt;FetchRequest&lt;/span&gt;: &lt;span class="pl-e"&gt;DatabaseRegionConvertible &lt;/span&gt;{
    &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;///&lt;/span&gt; The type that tells how fetched rows should be decoded&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;    &lt;span class="pl-k"&gt;associatedtype&lt;/span&gt; &lt;span class="pl-c1"&gt;RowDecoder&lt;/span&gt;
    
    &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;///&lt;/span&gt; Returns a PreparedRequest made of a prepared statement that is ready to&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;    &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;///&lt;/span&gt; be executed, and an eventual row adapter.&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;    &lt;span class="pl-k"&gt;func&lt;/span&gt; &lt;span class="pl-en"&gt;makePreparedRequest&lt;/span&gt;(&lt;span class="pl-en"&gt;_&lt;/span&gt; &lt;span class="pl-smi"&gt;db&lt;/span&gt;: Database, &lt;span class="pl-en"&gt;forSingleResult&lt;/span&gt; &lt;span class="pl-smi"&gt;singleResult&lt;/span&gt;: &lt;span class="pl-c1"&gt;Bool&lt;/span&gt;) &lt;span class="pl-k"&gt;throws&lt;/span&gt; &lt;span class="pl-k"&gt;-&amp;gt;&lt;/span&gt; PreparedRequest
    
    &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;///&lt;/span&gt; The number of rows fetched by the request.&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;    &lt;span class="pl-k"&gt;func&lt;/span&gt; &lt;span class="pl-en"&gt;fetchCount&lt;/span&gt;(&lt;span class="pl-en"&gt;_&lt;/span&gt; &lt;span class="pl-smi"&gt;db&lt;/span&gt;: Database) &lt;span class="pl-k"&gt;throws&lt;/span&gt; &lt;span class="pl-k"&gt;-&amp;gt;&lt;/span&gt; &lt;span class="pl-c1"&gt;Int&lt;/span&gt;
}&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;When the &lt;code&gt;RowDecoder&lt;/code&gt; associated type is &lt;a href="#fetching-rows"&gt;Row&lt;/a&gt;, or a &lt;a href="#value-queries"&gt;value&lt;/a&gt;, or a type that conforms to &lt;a href="#fetchablerecord-protocol"&gt;FetchableRecord&lt;/a&gt;, the request can fetch: see &lt;a href="#fetching-from-custom-requests"&gt;Fetching From Custom Requests&lt;/a&gt; below.&lt;/p&gt;
&lt;p&gt;The &lt;code&gt;makePreparedRequest(_:forSingleResult:)&lt;/code&gt; method accepts a database connection, a &lt;code&gt;singleResult&lt;/code&gt; hint, and returns a "prepared request" made of a &lt;a href="#prepared-statements"&gt;prepared statement&lt;/a&gt; and an optional &lt;a href="#row-adapters"&gt;row adapter&lt;/a&gt;. Conforming types can use the &lt;code&gt;singleResult&lt;/code&gt; hint as an optimization opportunity, and return a statement that fetches at most one row, with a &lt;code&gt;LIMIT&lt;/code&gt; SQL clause, when possible.&lt;/p&gt;
&lt;p&gt;The &lt;code&gt;fetchCount&lt;/code&gt; method has a default implementation that builds a correct but naive SQL query from the statement returned by &lt;code&gt;prepare&lt;/code&gt;: &lt;code&gt;SELECT COUNT(*) FROM (...)&lt;/code&gt;. Adopting types can refine the counting SQL by customizing their &lt;code&gt;fetchCount&lt;/code&gt; implementation.&lt;/p&gt;
&lt;p&gt;The base &lt;code&gt;DatabaseRegionConvertible&lt;/code&gt; protocol is involved in &lt;a href="#database-changes-observation"&gt;database observation&lt;/a&gt;. For more information, see &lt;a href="#databaseregion"&gt;DatabaseRegion&lt;/a&gt;, &lt;a href="#databaseregionobservation"&gt;DatabaseRegionObservation&lt;/a&gt;, and &lt;a href="#valueobservation"&gt;ValueObservation&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;The FetchRequest protocol is adopted, for example, by &lt;a href="#requests"&gt;query interface requests&lt;/a&gt;:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; A FetchRequest whose RowDecoder associated type is Player:&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;&lt;span class="pl-k"&gt;let&lt;/span&gt; request &lt;span class="pl-k"&gt;=&lt;/span&gt; Player.&lt;span class="pl-c1"&gt;all&lt;/span&gt;()&lt;/pre&gt;&lt;/div&gt;
&lt;h3&gt;&lt;a id="user-content-building-custom-requests" class="anchor" aria-hidden="true" href="#building-custom-requests"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Building Custom Requests&lt;/h3&gt;
&lt;p&gt;&lt;strong&gt;To build custom requests&lt;/strong&gt;, you can use one of the built-in requests, derive requests from other requests, or create your own request type that adopts the &lt;a href="#fetchrequest-protocol"&gt;FetchRequest&lt;/a&gt; protocol.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="http://groue.github.io/GRDB.swift/docs/4.5/Structs/SQLRequest.html" rel="nofollow"&gt;SQLRequest&lt;/a&gt; is a fetch request built from raw SQL. For example:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;extension&lt;/span&gt; &lt;span class="pl-en"&gt;Player&lt;/span&gt; {
    &lt;span class="pl-k"&gt;static&lt;/span&gt; &lt;span class="pl-k"&gt;func&lt;/span&gt; &lt;span class="pl-en"&gt;filter&lt;/span&gt;(&lt;span class="pl-smi"&gt;&lt;span class="pl-en"&gt;color&lt;/span&gt;&lt;/span&gt;: Color) &lt;span class="pl-k"&gt;-&amp;gt;&lt;/span&gt; SQLRequest&amp;lt;Player&amp;gt; {
        &lt;span class="pl-k"&gt;return&lt;/span&gt; SQLRequest&lt;span class="pl-k"&gt;&amp;lt;&lt;/span&gt;Player&lt;span class="pl-k"&gt;&amp;gt;&lt;/span&gt;(
            &lt;span class="pl-c1"&gt;sql&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;SELECT * FROM player WHERE color = ?&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;
            arguments&lt;span class="pl-k"&gt;:&lt;/span&gt; [color])
    }
}

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; [Player]&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;&lt;span class="pl-k"&gt;try&lt;/span&gt; Player.&lt;span class="pl-c1"&gt;filter&lt;/span&gt;(&lt;span class="pl-c1"&gt;color&lt;/span&gt;: .&lt;span class="pl-smi"&gt;red&lt;/span&gt;).&lt;span class="pl-c1"&gt;fetchAll&lt;/span&gt;(db)&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;In Swift 5, you can build SQLRequest with &lt;a href="Documentation/SQLInterpolation.md"&gt;SQL Interpolation&lt;/a&gt;:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Swift 5&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;&lt;span class="pl-k"&gt;extension&lt;/span&gt; &lt;span class="pl-en"&gt;Player&lt;/span&gt; {
    &lt;span class="pl-k"&gt;static&lt;/span&gt; &lt;span class="pl-k"&gt;func&lt;/span&gt; &lt;span class="pl-en"&gt;filter&lt;/span&gt;(&lt;span class="pl-smi"&gt;&lt;span class="pl-en"&gt;color&lt;/span&gt;&lt;/span&gt;: Color) &lt;span class="pl-k"&gt;-&amp;gt;&lt;/span&gt; SQLRequest&amp;lt;Player&amp;gt; {
        &lt;span class="pl-k"&gt;return&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;SELECT * FROM player WHERE color = &lt;span class="pl-pse"&gt;\(&lt;/span&gt;&lt;span class="pl-s1"&gt;color&lt;/span&gt;&lt;span class="pl-pse"&gt;&lt;span class="pl-s1"&gt;)&lt;/span&gt;&lt;/span&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;
    }
}&lt;/pre&gt;&lt;/div&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;The &lt;code&gt;asRequest(of:)&lt;/code&gt; method changes the type fetched by the request. It is useful, for example, when you use &lt;a href="Documentation/AssociationsBasics.md"&gt;Associations&lt;/a&gt;:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;struct&lt;/span&gt; &lt;span class="pl-en"&gt;BookInfo&lt;/span&gt;: &lt;span class="pl-e"&gt;FetchableRecord&lt;/span&gt;, &lt;span class="pl-e"&gt;Decodable &lt;/span&gt;{
    &lt;span class="pl-k"&gt;var&lt;/span&gt; book&lt;span class="pl-k"&gt;:&lt;/span&gt; Book
    &lt;span class="pl-k"&gt;var&lt;/span&gt; author&lt;span class="pl-k"&gt;:&lt;/span&gt; Author
}

&lt;span class="pl-k"&gt;let&lt;/span&gt; request &lt;span class="pl-k"&gt;=&lt;/span&gt; Book
    .&lt;span class="pl-c1"&gt;including&lt;/span&gt;(&lt;span class="pl-c1"&gt;required&lt;/span&gt;: Book.&lt;span class="pl-smi"&gt;author&lt;/span&gt;)
    .&lt;span class="pl-c1"&gt;asRequest&lt;/span&gt;(&lt;span class="pl-c1"&gt;of&lt;/span&gt;: BookInfo.&lt;span class="pl-k"&gt;self&lt;/span&gt;)

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; [BookInfo]&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;&lt;span class="pl-k"&gt;try&lt;/span&gt; request.&lt;span class="pl-c1"&gt;fetchAll&lt;/span&gt;(db)&lt;/pre&gt;&lt;/div&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;The &lt;code&gt;adapted(_:)&lt;/code&gt; method eases the consumption of complex rows with &lt;a href="#row-adapters"&gt;row adapters&lt;/a&gt;. See &lt;a href="#joined-queries-support"&gt;Joined Queries Support&lt;/a&gt; for some sample code that uses this method.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="http://groue.github.io/GRDB.swift/docs/4.5/Structs/AnyFetchRequest.html" rel="nofollow"&gt;AnyFetchRequest&lt;/a&gt;: a &lt;a href="http://chris.eidhof.nl/post/type-erasers-in-swift/" rel="nofollow"&gt;type-erased&lt;/a&gt; request.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;&lt;a id="user-content-fetching-from-custom-requests" class="anchor" aria-hidden="true" href="#fetching-from-custom-requests"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Fetching From Custom Requests&lt;/h3&gt;
&lt;p&gt;A type adopting &lt;a href="#fetchrequest-protocol"&gt;FetchRequest&lt;/a&gt; knows exactly what it has to do when its RowDecoder associated type can decode database rows (&lt;a href="#fetching-rows"&gt;Row&lt;/a&gt; itself, &lt;a href="#value-queries"&gt;values&lt;/a&gt;, or &lt;a href="#fetchablerecord-protocol"&gt;FetchableRecord&lt;/a&gt;):&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;let&lt;/span&gt; rowRequest &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-k"&gt;...&lt;/span&gt;        &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Some FetchRequest that fetches Row&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;&lt;span class="pl-k"&gt;try&lt;/span&gt; request.&lt;span class="pl-c1"&gt;fetchCursor&lt;/span&gt;(db) &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; A cursor of rows&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;
&lt;span class="pl-k"&gt;let&lt;/span&gt; playerRequest &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-k"&gt;...&lt;/span&gt;     &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Some FetchRequest that fetches Player&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;&lt;span class="pl-k"&gt;try&lt;/span&gt; request.&lt;span class="pl-c1"&gt;fetchAll&lt;/span&gt;(db)    &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; [Player]&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;
&lt;span class="pl-k"&gt;let&lt;/span&gt; intRequest &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-k"&gt;...&lt;/span&gt;        &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Some FetchRequest that fetches Int&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;&lt;span class="pl-k"&gt;try&lt;/span&gt; request.&lt;span class="pl-c1"&gt;fetchOne&lt;/span&gt;(db)    &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Int?&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;For example:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;let&lt;/span&gt; playerRequest &lt;span class="pl-k"&gt;=&lt;/span&gt; SQLRequest&lt;span class="pl-k"&gt;&amp;lt;&lt;/span&gt;Player&lt;span class="pl-k"&gt;&amp;gt;&lt;/span&gt;(
    &lt;span class="pl-c1"&gt;sql&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;SELECT * FROM player WHERE color = ?&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;
    arguments&lt;span class="pl-k"&gt;:&lt;/span&gt; [color])
&lt;span class="pl-k"&gt;try&lt;/span&gt; request.&lt;span class="pl-c1"&gt;fetchAll&lt;/span&gt;(db)    &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; [Player]&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;See &lt;a href="#fetching-methods"&gt;fetching methods&lt;/a&gt; for information about the &lt;code&gt;fetchCursor&lt;/code&gt;, &lt;code&gt;fetchAll&lt;/code&gt; and &lt;code&gt;fetchOne&lt;/code&gt; methods.&lt;/p&gt;
&lt;p&gt;The RowDecoder type associated with the FetchRequest does not have to be Row, DatabaseValueConvertible, or FetchableRecord. See the &lt;a href="#beyond-fetchablerecord"&gt;Beyond FetchableRecord&lt;/a&gt; chapter for more information.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-migrations" class="anchor" aria-hidden="true" href="#migrations"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Migrations&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;Migrations&lt;/strong&gt; are a convenient way to alter your database schema over time in a consistent and easy way.&lt;/p&gt;
&lt;p&gt;Migrations run in order, once and only once. When a user upgrades your application, only non-applied migrations are run.&lt;/p&gt;
&lt;p&gt;Inside each migration, you typically &lt;a href="#database-schema"&gt;define and update your database tables&lt;/a&gt; according to your evolving application needs:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;var&lt;/span&gt; migrator &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;DatabaseMigrator&lt;/span&gt;()

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; 1st migration&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;migrator.&lt;span class="pl-c1"&gt;registerMigration&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;v1&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;) { db &lt;span class="pl-k"&gt;in&lt;/span&gt;
    &lt;span class="pl-k"&gt;try&lt;/span&gt; db.&lt;span class="pl-c1"&gt;create&lt;/span&gt;(&lt;span class="pl-c1"&gt;table&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;author&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;) { t &lt;span class="pl-k"&gt;in&lt;/span&gt; &lt;span class="pl-k"&gt;...&lt;/span&gt; }
    &lt;span class="pl-k"&gt;try&lt;/span&gt; db.&lt;span class="pl-c1"&gt;create&lt;/span&gt;(&lt;span class="pl-c1"&gt;table&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;book&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;) { t &lt;span class="pl-k"&gt;in&lt;/span&gt; &lt;span class="pl-k"&gt;...&lt;/span&gt; }
    &lt;span class="pl-k"&gt;try&lt;/span&gt; db.&lt;span class="pl-c1"&gt;create&lt;/span&gt;(&lt;span class="pl-c1"&gt;index&lt;/span&gt;: &lt;span class="pl-k"&gt;...&lt;/span&gt;)
}

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; 2nd migration&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;migrator.&lt;span class="pl-c1"&gt;registerMigration&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;v2&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;) { db &lt;span class="pl-k"&gt;in&lt;/span&gt;
    &lt;span class="pl-k"&gt;try&lt;/span&gt; db.&lt;span class="pl-c1"&gt;alter&lt;/span&gt;(&lt;span class="pl-c1"&gt;table&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;author&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;) { t &lt;span class="pl-k"&gt;in&lt;/span&gt; &lt;span class="pl-k"&gt;...&lt;/span&gt; }
}

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Migrations for future versions will be inserted here:&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt;&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; // 3rd migration&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; migrator.registerMigration("...") { db in&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt;     ...&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; }&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;strong&gt;Each migration runs in a separate transaction.&lt;/strong&gt; Should one throw an error, its transaction is rollbacked, subsequent migrations do not run, and the error is eventually thrown by &lt;code&gt;migrator.migrate(dbQueue)&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;The memory of applied migrations is stored in the database itself&lt;/strong&gt; (in a reserved table).&lt;/p&gt;
&lt;p&gt;You migrate the database up to the latest version with the &lt;code&gt;migrate(_:)&lt;/code&gt; method:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;try&lt;/span&gt; migrator.&lt;span class="pl-c1"&gt;migrate&lt;/span&gt;(dbQueue) &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; or migrator.migrate(dbPool)&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;To migrate a database up to a specific version, use &lt;code&gt;migrate(_:upTo:)&lt;/code&gt;:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;try&lt;/span&gt; migrator.&lt;span class="pl-c1"&gt;migrate&lt;/span&gt;(dbQueue, &lt;span class="pl-c1"&gt;upTo&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;v2&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Migrations can only run forward:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;try&lt;/span&gt; migrator.&lt;span class="pl-c1"&gt;migrate&lt;/span&gt;(dbQueue, &lt;span class="pl-c1"&gt;upTo&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;v2&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
&lt;span class="pl-k"&gt;try&lt;/span&gt; migrator.&lt;span class="pl-c1"&gt;migrate&lt;/span&gt;(dbQueue, &lt;span class="pl-c1"&gt;upTo&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;v1&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; fatal error: database is already migrated beyond migration "v1"&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Check if a migration has been applied:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;let&lt;/span&gt; appliedMigrations &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-k"&gt;try&lt;/span&gt; migrator.&lt;span class="pl-c1"&gt;appliedMigrations&lt;/span&gt;(&lt;span class="pl-c1"&gt;in&lt;/span&gt;: dbQueue)
&lt;span class="pl-k"&gt;if&lt;/span&gt; appliedMigrations.&lt;span class="pl-c1"&gt;contains&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;v2&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;) {
    &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; "v2" migration has been applied&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;}&lt;/pre&gt;&lt;/div&gt;
&lt;h3&gt;&lt;a id="user-content-the-erasedatabaseonschemachange-option" class="anchor" aria-hidden="true" href="#the-erasedatabaseonschemachange-option"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;The &lt;code&gt;eraseDatabaseOnSchemaChange&lt;/code&gt; Option&lt;/h3&gt;
&lt;p&gt;A DatabaseMigrator can automatically wipe out the full database content, and recreate the whole database from scratch, if it detects that a migration has changed its definition:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;var&lt;/span&gt; migrator &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;DatabaseMigrator&lt;/span&gt;()
migrator.&lt;span class="pl-smi"&gt;eraseDatabaseOnSchemaChange&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;true&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Beware! This flag can destroy your precious users' data!&lt;/p&gt;
&lt;p&gt;Yet it may be useful in those two situations:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;During application development, as you are still designing migrations, and the schema changes often.&lt;/p&gt;
&lt;p&gt;In this case, it is recommended that this flag does not ship in the distributed application:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;var&lt;/span&gt; migrator &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;DatabaseMigrator&lt;/span&gt;()
#&lt;span class="pl-k"&gt;if&lt;/span&gt; DEBUG
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Speed up development by nuking the database when migrations change&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;migrator.&lt;span class="pl-smi"&gt;eraseDatabaseOnSchemaChange&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;true&lt;/span&gt;
#&lt;span class="pl-k"&gt;endif&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;When the database content can easily be recreated, such as a cache for some downloaded data.&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;The &lt;code&gt;eraseDatabaseOnSchemaChange&lt;/code&gt; option triggers a recreation of the database if the migrator detects a &lt;em&gt;schema change&lt;/em&gt;. A schema change is any difference in the &lt;code&gt;sqlite_master&lt;/code&gt; table, which contains the SQL used to create database tables, indexes, triggers, and views.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-advanced-database-schema-changes" class="anchor" aria-hidden="true" href="#advanced-database-schema-changes"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Advanced Database Schema Changes&lt;/h3&gt;
&lt;p&gt;SQLite does not support many schema changes, and won't let you drop a table column with "ALTER TABLE ... DROP COLUMN ...", for example.&lt;/p&gt;
&lt;p&gt;Yet any kind of schema change is still possible. The SQLite documentation explains in detail how to do so: &lt;a href="https://www.sqlite.org/lang_altertable.html#otheralter" rel="nofollow"&gt;https://www.sqlite.org/lang_altertable.html#otheralter&lt;/a&gt;. This technique requires the temporary disabling of foreign key checks, and is supported by the &lt;code&gt;registerMigrationWithDeferredForeignKeyCheck&lt;/code&gt; function:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Add a NOT NULL constraint on player.name:&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;migrator.&lt;span class="pl-c1"&gt;registerMigrationWithDeferredForeignKeyCheck&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;AddNotNullCheckOnName&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;) { db &lt;span class="pl-k"&gt;in&lt;/span&gt;
    &lt;span class="pl-k"&gt;try&lt;/span&gt; db.&lt;span class="pl-c1"&gt;create&lt;/span&gt;(&lt;span class="pl-c1"&gt;table&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;new_player&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;) { t &lt;span class="pl-k"&gt;in&lt;/span&gt;
        t.&lt;span class="pl-c1"&gt;autoIncrementedPrimaryKey&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;id&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
        t.&lt;span class="pl-c1"&gt;column&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;name&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, .&lt;span class="pl-c1"&gt;text&lt;/span&gt;).&lt;span class="pl-c1"&gt;notNull&lt;/span&gt;()
    }
    &lt;span class="pl-k"&gt;try&lt;/span&gt; db.&lt;span class="pl-c1"&gt;execute&lt;/span&gt;(&lt;span class="pl-c1"&gt;sql&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;INSERT INTO new_player SELECT * FROM player&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
    &lt;span class="pl-k"&gt;try&lt;/span&gt; db.&lt;span class="pl-c1"&gt;drop&lt;/span&gt;(&lt;span class="pl-c1"&gt;table&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;player&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
    &lt;span class="pl-k"&gt;try&lt;/span&gt; db.&lt;span class="pl-c1"&gt;rename&lt;/span&gt;(&lt;span class="pl-c1"&gt;table&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;new_player&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-c1"&gt;to&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;player&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
}&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;While your migration code runs with disabled foreign key checks, those are re-enabled and checked at the end of the migration, regardless of eventual errors.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-full-text-search" class="anchor" aria-hidden="true" href="#full-text-search"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Full-Text Search&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;Full-Text Search is an efficient way to search a corpus of textual documents.&lt;/strong&gt;&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Create full-text tables&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;&lt;span class="pl-k"&gt;try&lt;/span&gt; db.&lt;span class="pl-c1"&gt;create&lt;/span&gt;(&lt;span class="pl-c1"&gt;virtualTable&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;book&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-c1"&gt;using&lt;/span&gt;: &lt;span class="pl-c1"&gt;FTS4&lt;/span&gt;()) { t &lt;span class="pl-k"&gt;in&lt;/span&gt; &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; or FTS3(), or FTS5()&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;    t.&lt;span class="pl-c1"&gt;column&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;author&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
    t.&lt;span class="pl-c1"&gt;column&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;title&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
    t.&lt;span class="pl-c1"&gt;column&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;body&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
}

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Populate full-text table with records or SQL&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;&lt;span class="pl-k"&gt;try&lt;/span&gt; &lt;span class="pl-c1"&gt;Book&lt;/span&gt;(&lt;span class="pl-k"&gt;...&lt;/span&gt;).&lt;span class="pl-c1"&gt;insert&lt;/span&gt;(db)
&lt;span class="pl-k"&gt;try&lt;/span&gt; db.&lt;span class="pl-c1"&gt;execute&lt;/span&gt;(
    &lt;span class="pl-c1"&gt;sql&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;INSERT INTO book (author, title, body) VALUES (?, ?, ?)&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;,
    &lt;span class="pl-c1"&gt;arguments&lt;/span&gt;: [&lt;span class="pl-k"&gt;...&lt;/span&gt;])

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Build search patterns&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;&lt;span class="pl-k"&gt;let&lt;/span&gt; pattern &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;FTS3Pattern&lt;/span&gt;(&lt;span class="pl-c1"&gt;matchingPhrase&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;Moby-Dick&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Search with the query interface or SQL&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;&lt;span class="pl-k"&gt;let&lt;/span&gt; books &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-k"&gt;try&lt;/span&gt; Book.&lt;span class="pl-c1"&gt;matching&lt;/span&gt;(pattern).&lt;span class="pl-c1"&gt;fetchAll&lt;/span&gt;(db)
&lt;span class="pl-k"&gt;let&lt;/span&gt; books &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-k"&gt;try&lt;/span&gt; Book.&lt;span class="pl-c1"&gt;fetchAll&lt;/span&gt;(db,
    &lt;span class="pl-c1"&gt;sql&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;SELECT * FROM book WHERE book MATCH ?&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;,
    &lt;span class="pl-c1"&gt;arguments&lt;/span&gt;: [pattern])&lt;/pre&gt;&lt;/div&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;&lt;a href="#choosing-the-full-text-engine"&gt;Choosing the Full-Text Engine&lt;/a&gt;&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;&lt;a href="#enabling-fts5-support"&gt;Enabling FTS5 Support&lt;/a&gt;&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Create Full-Text Virtual Tables&lt;/strong&gt;: &lt;a href="#create-fts3-and-fts4-virtual-tables"&gt;FTS3/4&lt;/a&gt;, &lt;a href="#create-fts5-virtual-tables"&gt;FTS5&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Choosing a Tokenizer&lt;/strong&gt;: &lt;a href="#fts3-and-fts4-tokenizers"&gt;FTS3/4&lt;/a&gt;, &lt;a href="#fts5-tokenizers"&gt;FTS5&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Search Patterns&lt;/strong&gt;: &lt;a href="#fts3pattern"&gt;FTS3/4&lt;/a&gt;, &lt;a href="#fts5pattern"&gt;FTS5&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Sorting by Relevance&lt;/strong&gt;: &lt;a href="#fts5-sorting-by-relevance"&gt;FTS5&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;External Content Full-Text Tables&lt;/strong&gt;: &lt;a href="#external-content-full-text-tables"&gt;FTS4/5&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Full-Text Record&lt;/strong&gt;s: &lt;a href="#full-text-records"&gt;FTS3/4/5&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Unicode Full-Text Gotchas&lt;/strong&gt;: &lt;a href="#unicode-full-text-gotchas"&gt;FTS3/4/5&lt;/a&gt;. Unicorns don't exist.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Custom Tokenizers&lt;/strong&gt;: &lt;a href="Documentation/FTS5Tokenizers.md"&gt;FTS5&lt;/a&gt;. Leverage extra full-text features such as synonyms or stop words. Avoid &lt;a href="#unicode-full-text-gotchas"&gt;unicode gotchas&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Sample Code&lt;/strong&gt;: &lt;a href="https://github.com/groue/WWDCCompanion"&gt;WWDC Companion&lt;/a&gt;, an iOS app that stores, displays, and lets the user search the WWDC 2016 sessions.&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;&lt;a id="user-content-choosing-the-full-text-engine" class="anchor" aria-hidden="true" href="#choosing-the-full-text-engine"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Choosing the Full-Text Engine&lt;/h3&gt;
&lt;p&gt;&lt;strong&gt;SQLite supports three full-text engines: &lt;a href="https://www.sqlite.org/fts3.html" rel="nofollow"&gt;FTS3, FTS4&lt;/a&gt; and &lt;a href="https://www.sqlite.org/fts5.html" rel="nofollow"&gt;FTS5&lt;/a&gt;.&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Generally speaking, FTS5 is better than FTS4 which improves on FTS3. But this does not really tell which engine to choose for your application. Instead, make your choice depend on:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;The full-text features needed by the application&lt;/strong&gt;:&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Full-Text Needs&lt;/th&gt;
&lt;th align="center"&gt;FTS3&lt;/th&gt;
&lt;th align="center"&gt;FTS4&lt;/th&gt;
&lt;th align="center"&gt;FTS5&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;g-emoji class="g-emoji" alias="question" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/2753.png"&gt;❓&lt;/g-emoji&gt; Queries&lt;/td&gt;
&lt;td align="center"&gt;&lt;/td&gt;
&lt;td align="center"&gt;&lt;/td&gt;
&lt;td align="center"&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;Words searches&lt;/strong&gt; (documents that contain "database")&lt;/td&gt;
&lt;td align="center"&gt;X&lt;/td&gt;
&lt;td align="center"&gt;X&lt;/td&gt;
&lt;td align="center"&gt;X&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;Prefix searches&lt;/strong&gt; (documents that contain a word starting with "data")&lt;/td&gt;
&lt;td align="center"&gt;X&lt;/td&gt;
&lt;td align="center"&gt;X&lt;/td&gt;
&lt;td align="center"&gt;X&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;Phrases searches&lt;/strong&gt; (documents that contain the phrase "SQLite database")&lt;/td&gt;
&lt;td align="center"&gt;X&lt;/td&gt;
&lt;td align="center"&gt;X&lt;/td&gt;
&lt;td align="center"&gt;X&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;Boolean searches&lt;/strong&gt; (documents that contain "SQLite" or "database")&lt;/td&gt;
&lt;td align="center"&gt;X&lt;/td&gt;
&lt;td align="center"&gt;X&lt;/td&gt;
&lt;td align="center"&gt;X&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;Proximity search&lt;/strong&gt; (documents that contain "SQLite" near "database")&lt;/td&gt;
&lt;td align="center"&gt;X&lt;/td&gt;
&lt;td align="center"&gt;X&lt;/td&gt;
&lt;td align="center"&gt;X&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;g-emoji class="g-emoji" alias="scissors" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/2702.png"&gt;✂️&lt;/g-emoji&gt; Tokenization&lt;/td&gt;
&lt;td align="center"&gt;&lt;/td&gt;
&lt;td align="center"&gt;&lt;/td&gt;
&lt;td align="center"&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;Ascii case insensitivity&lt;/strong&gt; (have "DATABASE" match "database")&lt;/td&gt;
&lt;td align="center"&gt;X&lt;/td&gt;
&lt;td align="center"&gt;X&lt;/td&gt;
&lt;td align="center"&gt;X&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;Unicode case insensitivity&lt;/strong&gt; (have "ÉLÉGANCE" match "élégance")&lt;/td&gt;
&lt;td align="center"&gt;X&lt;/td&gt;
&lt;td align="center"&gt;X&lt;/td&gt;
&lt;td align="center"&gt;X&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;Latin diacritics insensitivity&lt;/strong&gt; (have "elegance" match "élégance")&lt;/td&gt;
&lt;td align="center"&gt;X&lt;/td&gt;
&lt;td align="center"&gt;X&lt;/td&gt;
&lt;td align="center"&gt;X&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;English Stemming&lt;/strong&gt; (have "frustration" match "frustrated")&lt;/td&gt;
&lt;td align="center"&gt;X&lt;/td&gt;
&lt;td align="center"&gt;X&lt;/td&gt;
&lt;td align="center"&gt;X&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;English Stemming and Ascii case insensitivity&lt;/strong&gt;&lt;/td&gt;
&lt;td align="center"&gt;X&lt;/td&gt;
&lt;td align="center"&gt;X&lt;/td&gt;
&lt;td align="center"&gt;X&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;English Stemming and Unicode case insensitivity&lt;/strong&gt;&lt;/td&gt;
&lt;td align="center"&gt;&lt;/td&gt;
&lt;td align="center"&gt;&lt;/td&gt;
&lt;td align="center"&gt;X&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;English Stemming and Latin diacritics insensitivity&lt;/strong&gt;&lt;/td&gt;
&lt;td align="center"&gt;&lt;/td&gt;
&lt;td align="center"&gt;&lt;/td&gt;
&lt;td align="center"&gt;X&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;Synonyms&lt;/strong&gt; (have "1st" match "first")&lt;/td&gt;
&lt;td align="center"&gt;¹&lt;/td&gt;
&lt;td align="center"&gt;¹&lt;/td&gt;
&lt;td align="center"&gt;X ²&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;Pinyin and Romaji&lt;/strong&gt; (have "romaji" match "ローマ字")&lt;/td&gt;
&lt;td align="center"&gt;¹&lt;/td&gt;
&lt;td align="center"&gt;¹&lt;/td&gt;
&lt;td align="center"&gt;X ²&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;Stop words&lt;/strong&gt; (don't index, and don't match words like "and" and "the")&lt;/td&gt;
&lt;td align="center"&gt;¹&lt;/td&gt;
&lt;td align="center"&gt;¹&lt;/td&gt;
&lt;td align="center"&gt;X ²&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;Spell checking&lt;/strong&gt; (have "alamaba" match "alabama")&lt;/td&gt;
&lt;td align="center"&gt;¹&lt;/td&gt;
&lt;td align="center"&gt;¹&lt;/td&gt;
&lt;td align="center"&gt;¹&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;img class="emoji" title=":bowtie:" alt=":bowtie:" src="https://github.githubassets.com/images/icons/emoji/bowtie.png" height="20" width="20" align="absmiddle"&gt; Other Features&lt;/td&gt;
&lt;td align="center"&gt;&lt;/td&gt;
&lt;td align="center"&gt;&lt;/td&gt;
&lt;td align="center"&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;Ranking&lt;/strong&gt; (sort results by relevance)&lt;/td&gt;
&lt;td align="center"&gt;¹&lt;/td&gt;
&lt;td align="center"&gt;¹&lt;/td&gt;
&lt;td align="center"&gt;X&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;Snippets&lt;/strong&gt; (display a few words around a match)&lt;/td&gt;
&lt;td align="center"&gt;X&lt;/td&gt;
&lt;td align="center"&gt;X&lt;/td&gt;
&lt;td align="center"&gt;X&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;¹ Requires extra setup, possibly hard to implement.&lt;/p&gt;
&lt;p&gt;² Requires a &lt;a href="Documentation/FTS5Tokenizers.md"&gt;custom tokenizer&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;For a full feature list, read the SQLite documentation. Some missing features can be achieved with extra application code.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;The speed versus disk space constraints.&lt;/strong&gt; Roughly speaking, FTS4 and FTS5 are faster than FTS3, but use more space. FTS4 only supports content compression.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;The location of the indexed text in your database schema.&lt;/strong&gt; Only FTS4 and FTS5 support "contentless" and "external content" tables.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;The SQLite library integrated in your application.&lt;/strong&gt; The version of SQLite that ships with iOS, macOS, tvOS and watchOS supports FTS3 and FTS4 out of the box, but not always FTS5. To use FTS5, see &lt;a href="#enabling-fts5-support"&gt;Enabling FTS5 Support&lt;/a&gt;.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;See &lt;a href="https://www.sqlite.org/fts3.html#differences_between_fts3_and_fts4" rel="nofollow"&gt;FST3 vs. FTS4&lt;/a&gt; and &lt;a href="https://www.sqlite.org/fts5.html#appendix_a" rel="nofollow"&gt;FTS5 vs. FTS3/4&lt;/a&gt; for more differences.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;g-emoji class="g-emoji" alias="point_up" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/261d.png"&gt;☝️&lt;/g-emoji&gt; &lt;strong&gt;Note&lt;/strong&gt;: In case you were still wondering, it is recommended to read the SQLite documentation: &lt;a href="https://www.sqlite.org/fts3.html" rel="nofollow"&gt;FTS3 &amp;amp; FTS4&lt;/a&gt; and &lt;a href="https://www.sqlite.org/fts5.html" rel="nofollow"&gt;FTS5&lt;/a&gt;.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3&gt;&lt;a id="user-content-create-fts3-and-fts4-virtual-tables" class="anchor" aria-hidden="true" href="#create-fts3-and-fts4-virtual-tables"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Create FTS3 and FTS4 Virtual Tables&lt;/h3&gt;
&lt;p&gt;&lt;strong&gt;FTS3 and FTS4 full-text tables store and index textual content.&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Create tables with the &lt;code&gt;create(virtualTable:using:)&lt;/code&gt; method:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; CREATE VIRTUAL TABLE document USING fts3(content)&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;&lt;span class="pl-k"&gt;try&lt;/span&gt; db.&lt;span class="pl-c1"&gt;create&lt;/span&gt;(&lt;span class="pl-c1"&gt;virtualTable&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;document&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-c1"&gt;using&lt;/span&gt;: &lt;span class="pl-c1"&gt;FTS3&lt;/span&gt;()) { t &lt;span class="pl-k"&gt;in&lt;/span&gt;
    t.&lt;span class="pl-c1"&gt;column&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;content&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
}

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; CREATE VIRTUAL TABLE document USING fts4(content)&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;&lt;span class="pl-k"&gt;try&lt;/span&gt; db.&lt;span class="pl-c1"&gt;create&lt;/span&gt;(&lt;span class="pl-c1"&gt;virtualTable&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;document&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-c1"&gt;using&lt;/span&gt;: &lt;span class="pl-c1"&gt;FTS4&lt;/span&gt;()) { t &lt;span class="pl-k"&gt;in&lt;/span&gt;
    t.&lt;span class="pl-c1"&gt;column&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;content&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
}&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;strong&gt;All columns in a full-text table contain text.&lt;/strong&gt; If you need to index a table that contains other kinds of values, you need an &lt;a href="#external-content-full-text-tables"&gt;"external content" full-text table&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;You can specify a &lt;a href="#fts3-and-fts4-tokenizers"&gt;tokenizer&lt;/a&gt;:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; CREATE VIRTUAL TABLE book USING fts4(&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt;   tokenize=porter,&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt;   author,&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt;   title,&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt;   body&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; )&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;&lt;span class="pl-k"&gt;try&lt;/span&gt; db.&lt;span class="pl-c1"&gt;create&lt;/span&gt;(&lt;span class="pl-c1"&gt;virtualTable&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;book&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-c1"&gt;using&lt;/span&gt;: &lt;span class="pl-c1"&gt;FTS4&lt;/span&gt;()) { t &lt;span class="pl-k"&gt;in&lt;/span&gt;
    t.&lt;span class="pl-smi"&gt;tokenizer&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; .&lt;span class="pl-smi"&gt;porter&lt;/span&gt;
    t.&lt;span class="pl-c1"&gt;column&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;author&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
    t.&lt;span class="pl-c1"&gt;column&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;title&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
    t.&lt;span class="pl-c1"&gt;column&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;body&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
}&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;FTS4 supports &lt;a href="https://www.sqlite.org/fts3.html#fts4_options" rel="nofollow"&gt;options&lt;/a&gt;:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; CREATE VIRTUAL TABLE book USING fts4(&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt;   content,&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt;   uuid,&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt;   content="",&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt;   compress=zip,&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt;   uncompress=unzip,&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt;   prefix="2,4",&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt;   notindexed=uuid,&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt;   languageid=lid&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; )&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;&lt;span class="pl-k"&gt;try&lt;/span&gt; db.&lt;span class="pl-c1"&gt;create&lt;/span&gt;(&lt;span class="pl-c1"&gt;virtualTable&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;document&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-c1"&gt;using&lt;/span&gt;: &lt;span class="pl-c1"&gt;FTS4&lt;/span&gt;()) { t &lt;span class="pl-k"&gt;in&lt;/span&gt;
    t.&lt;span class="pl-smi"&gt;content&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;
    t.&lt;span class="pl-smi"&gt;compress&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;zip&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;
    t.&lt;span class="pl-smi"&gt;uncompress&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;unzip&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;
    t.&lt;span class="pl-smi"&gt;prefixes&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; [&lt;span class="pl-c1"&gt;2&lt;/span&gt;, &lt;span class="pl-c1"&gt;4&lt;/span&gt;]
    t.&lt;span class="pl-c1"&gt;column&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;content&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
    t.&lt;span class="pl-c1"&gt;column&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;uuid&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;).&lt;span class="pl-c1"&gt;notIndexed&lt;/span&gt;()
    t.&lt;span class="pl-c1"&gt;column&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;lid&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;).&lt;span class="pl-c1"&gt;asLanguageId&lt;/span&gt;()
}&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;The &lt;code&gt;content&lt;/code&gt; option is involved in "contentless" and "external content" full-text tables. GRDB can help you defining full-text tables that automatically synchronize with their content table. See &lt;a href="#external-content-full-text-tables"&gt;External Content Full-Text Tables&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;See &lt;a href="https://www.sqlite.org/fts3.html" rel="nofollow"&gt;SQLite documentation&lt;/a&gt; for more information.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-fts3-and-fts4-tokenizers" class="anchor" aria-hidden="true" href="#fts3-and-fts4-tokenizers"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;FTS3 and FTS4 Tokenizers&lt;/h3&gt;
&lt;p&gt;&lt;strong&gt;A tokenizer defines what "matching" means.&lt;/strong&gt; Depending on the tokenizer you choose, full-text searches won't return the same results.&lt;/p&gt;
&lt;p&gt;SQLite ships with three built-in FTS3/4 tokenizers: &lt;code&gt;simple&lt;/code&gt;, &lt;code&gt;porter&lt;/code&gt; and &lt;code&gt;unicode61&lt;/code&gt; that use different algorithms to match queries with indexed content:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;try&lt;/span&gt; db.&lt;span class="pl-c1"&gt;create&lt;/span&gt;(&lt;span class="pl-c1"&gt;virtualTable&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;book&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-c1"&gt;using&lt;/span&gt;: &lt;span class="pl-c1"&gt;FTS4&lt;/span&gt;()) { t &lt;span class="pl-k"&gt;in&lt;/span&gt;
    &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Pick one:&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;    t.&lt;span class="pl-smi"&gt;tokenizer&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; .&lt;span class="pl-smi"&gt;simple&lt;/span&gt; &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; default&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;    t.&lt;span class="pl-smi"&gt;tokenizer&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; .&lt;span class="pl-smi"&gt;porter&lt;/span&gt;
    t.&lt;span class="pl-smi"&gt;tokenizer&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; .&lt;span class="pl-c1"&gt;unicode61&lt;/span&gt;(&lt;span class="pl-k"&gt;...&lt;/span&gt;)
}&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;See below some examples of matches:&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;content&lt;/th&gt;
&lt;th&gt;query&lt;/th&gt;
&lt;th align="center"&gt;simple&lt;/th&gt;
&lt;th align="center"&gt;porter&lt;/th&gt;
&lt;th align="center"&gt;unicode61&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;Foo&lt;/td&gt;
&lt;td&gt;Foo&lt;/td&gt;
&lt;td align="center"&gt;X&lt;/td&gt;
&lt;td align="center"&gt;X&lt;/td&gt;
&lt;td align="center"&gt;X&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Foo&lt;/td&gt;
&lt;td&gt;FOO&lt;/td&gt;
&lt;td align="center"&gt;X&lt;/td&gt;
&lt;td align="center"&gt;X&lt;/td&gt;
&lt;td align="center"&gt;X&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Jérôme&lt;/td&gt;
&lt;td&gt;Jérôme&lt;/td&gt;
&lt;td align="center"&gt;X ¹&lt;/td&gt;
&lt;td align="center"&gt;X ¹&lt;/td&gt;
&lt;td align="center"&gt;X ¹&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Jérôme&lt;/td&gt;
&lt;td&gt;JÉRÔME&lt;/td&gt;
&lt;td align="center"&gt;&lt;/td&gt;
&lt;td align="center"&gt;&lt;/td&gt;
&lt;td align="center"&gt;X ¹&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Jérôme&lt;/td&gt;
&lt;td&gt;Jerome&lt;/td&gt;
&lt;td align="center"&gt;&lt;/td&gt;
&lt;td align="center"&gt;&lt;/td&gt;
&lt;td align="center"&gt;X ¹&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Database&lt;/td&gt;
&lt;td&gt;Databases&lt;/td&gt;
&lt;td align="center"&gt;&lt;/td&gt;
&lt;td align="center"&gt;X&lt;/td&gt;
&lt;td align="center"&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Frustration&lt;/td&gt;
&lt;td&gt;Frustrated&lt;/td&gt;
&lt;td align="center"&gt;&lt;/td&gt;
&lt;td align="center"&gt;X&lt;/td&gt;
&lt;td align="center"&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;¹ Don't miss &lt;a href="#unicode-full-text-gotchas"&gt;Unicode Full-Text Gotchas&lt;/a&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;simple&lt;/strong&gt;&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;try&lt;/span&gt; db.&lt;span class="pl-c1"&gt;create&lt;/span&gt;(&lt;span class="pl-c1"&gt;virtualTable&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;book&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-c1"&gt;using&lt;/span&gt;: &lt;span class="pl-c1"&gt;FTS4&lt;/span&gt;()) { t &lt;span class="pl-k"&gt;in&lt;/span&gt;
    t.&lt;span class="pl-smi"&gt;tokenizer&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; .&lt;span class="pl-smi"&gt;simple&lt;/span&gt;   &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; default&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;}&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;The default "simple" tokenizer is case-insensitive for ASCII characters. It matches "foo" with "FOO", but not "Jérôme" with "JÉRÔME".&lt;/p&gt;
&lt;p&gt;It does not provide stemming, and won't match "databases" with "database".&lt;/p&gt;
&lt;p&gt;It does not strip diacritics from latin script characters, and won't match "jérôme" with "jerome".&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;porter&lt;/strong&gt;&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;try&lt;/span&gt; db.&lt;span class="pl-c1"&gt;create&lt;/span&gt;(&lt;span class="pl-c1"&gt;virtualTable&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;book&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-c1"&gt;using&lt;/span&gt;: &lt;span class="pl-c1"&gt;FTS4&lt;/span&gt;()) { t &lt;span class="pl-k"&gt;in&lt;/span&gt;
    t.&lt;span class="pl-smi"&gt;tokenizer&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; .&lt;span class="pl-smi"&gt;porter&lt;/span&gt;
}&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;The "porter" tokenizer compares English words according to their roots: it matches "database" with "databases", and "frustration" with "frustrated".&lt;/p&gt;
&lt;p&gt;It does not strip diacritics from latin script characters, and won't match "jérôme" with "jerome".&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;unicode61&lt;/strong&gt;&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;try&lt;/span&gt; db.&lt;span class="pl-c1"&gt;create&lt;/span&gt;(&lt;span class="pl-c1"&gt;virtualTable&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;book&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-c1"&gt;using&lt;/span&gt;: &lt;span class="pl-c1"&gt;FTS4&lt;/span&gt;()) { t &lt;span class="pl-k"&gt;in&lt;/span&gt;
    t.&lt;span class="pl-smi"&gt;tokenizer&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; .&lt;span class="pl-c1"&gt;unicode61&lt;/span&gt;()
    t.&lt;span class="pl-smi"&gt;tokenizer&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; .&lt;span class="pl-c1"&gt;unicode61&lt;/span&gt;(&lt;span class="pl-c1"&gt;diacritics&lt;/span&gt;: .&lt;span class="pl-smi"&gt;keep&lt;/span&gt;)
}&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;The "unicode61" tokenizer is case-insensitive for unicode characters. It matches "Jérôme" with "JÉRÔME".&lt;/p&gt;
&lt;p&gt;It strips diacritics from latin script characters by default, and matches "jérôme" with "jerome". This behavior can be disabled, as in the example above.&lt;/p&gt;
&lt;p&gt;It does not provide stemming, and won't match "databases" with "database".&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;See &lt;a href="https://www.sqlite.org/fts3.html#tokenizer" rel="nofollow"&gt;SQLite tokenizers&lt;/a&gt; for more information.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-fts3pattern" class="anchor" aria-hidden="true" href="#fts3pattern"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;FTS3Pattern&lt;/h3&gt;
&lt;p&gt;&lt;strong&gt;Full-text search in FTS3 and FTS4 tables is performed with search patterns:&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;database&lt;/code&gt; matches all documents that contain "database"&lt;/li&gt;
&lt;li&gt;&lt;code&gt;data*&lt;/code&gt; matches all documents that contain a word starting with "data"&lt;/li&gt;
&lt;li&gt;&lt;code&gt;SQLite database&lt;/code&gt; matches all documents that contain both "SQLite" and "database"&lt;/li&gt;
&lt;li&gt;&lt;code&gt;SQLite OR database&lt;/code&gt; matches all documents that contain "SQLite" or "database"&lt;/li&gt;
&lt;li&gt;&lt;code&gt;"SQLite database"&lt;/code&gt; matches all documents that contain the "SQLite database" phrase&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;Not all search patterns are valid&lt;/strong&gt;: they must follow the &lt;a href="https://www.sqlite.org/fts3.html#full_text_index_queries" rel="nofollow"&gt;Full-Text Index Queries Grammar&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;The FTS3Pattern type helps you validating patterns, and building valid patterns from untrusted strings (such as strings typed by users):&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;struct&lt;/span&gt; &lt;span class="pl-en"&gt;FTS3Pattern&lt;/span&gt; {
    &lt;span class="pl-k"&gt;init&lt;/span&gt;(&lt;span class="pl-smi"&gt;&lt;span class="pl-en"&gt;rawPattern&lt;/span&gt;&lt;/span&gt;: &lt;span class="pl-c1"&gt;String&lt;/span&gt;) &lt;span class="pl-k"&gt;throws&lt;/span&gt;
    &lt;span class="pl-k"&gt;init?&lt;/span&gt;(&lt;span class="pl-en"&gt;matchingAnyTokenIn&lt;/span&gt; &lt;span class="pl-smi"&gt;string&lt;/span&gt;: &lt;span class="pl-c1"&gt;String&lt;/span&gt;)
    &lt;span class="pl-k"&gt;init?&lt;/span&gt;(&lt;span class="pl-en"&gt;matchingAllTokensIn&lt;/span&gt; &lt;span class="pl-smi"&gt;string&lt;/span&gt;: &lt;span class="pl-c1"&gt;String&lt;/span&gt;)
    &lt;span class="pl-k"&gt;init?&lt;/span&gt;(&lt;span class="pl-en"&gt;matchingPhrase&lt;/span&gt; &lt;span class="pl-smi"&gt;string&lt;/span&gt;: &lt;span class="pl-c1"&gt;String&lt;/span&gt;)
}&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;The first initializer validates your raw patterns against the query grammar, and may throw a &lt;a href="#databaseerror"&gt;DatabaseError&lt;/a&gt;:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; OK: FTS3Pattern&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;&lt;span class="pl-k"&gt;let&lt;/span&gt; pattern &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-k"&gt;try&lt;/span&gt; &lt;span class="pl-c1"&gt;FTS3Pattern&lt;/span&gt;(&lt;span class="pl-c1"&gt;rawPattern&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;sqlite AND database&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; DatabaseError: malformed MATCH expression: [AND]&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;&lt;span class="pl-k"&gt;let&lt;/span&gt; pattern &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-k"&gt;try&lt;/span&gt; &lt;span class="pl-c1"&gt;FTS3Pattern&lt;/span&gt;(&lt;span class="pl-c1"&gt;rawPattern&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;AND&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;The three other initializers don't throw. They build a valid pattern from any string, &lt;strong&gt;including strings provided by users of your application&lt;/strong&gt;. They let you find documents that match all given words, any given word, or a full phrase, depending on the needs of your application:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;let&lt;/span&gt; query &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;SQLite database&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Matches documents that contain "SQLite" or "database"&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;&lt;span class="pl-k"&gt;let&lt;/span&gt; pattern &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;FTS3Pattern&lt;/span&gt;(&lt;span class="pl-c1"&gt;matchingAnyTokenIn&lt;/span&gt;: query)
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Matches documents that contain both "SQLite" and "database"&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;&lt;span class="pl-k"&gt;let&lt;/span&gt; pattern &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;FTS3Pattern&lt;/span&gt;(&lt;span class="pl-c1"&gt;matchingAllTokensIn&lt;/span&gt;: query)
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Matches documents that contain "SQLite database"&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;&lt;span class="pl-k"&gt;let&lt;/span&gt; pattern &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;FTS3Pattern&lt;/span&gt;(&lt;span class="pl-c1"&gt;matchingPhrase&lt;/span&gt;: query)&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;They return nil when no pattern could be built from the input string:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;let&lt;/span&gt; pattern &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;FTS3Pattern&lt;/span&gt;(&lt;span class="pl-c1"&gt;matchingAnyTokenIn&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)  &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; nil&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;&lt;span class="pl-k"&gt;let&lt;/span&gt; pattern &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;FTS3Pattern&lt;/span&gt;(&lt;span class="pl-c1"&gt;matchingAnyTokenIn&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;*&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;) &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; nil&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;FTS3Pattern are regular &lt;a href="#values"&gt;values&lt;/a&gt;. You can use them as query &lt;a href="http://groue.github.io/GRDB.swift/docs/4.5/Structs/StatementArguments.html" rel="nofollow"&gt;arguments&lt;/a&gt;:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;let&lt;/span&gt; documents &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-k"&gt;try&lt;/span&gt; Document.&lt;span class="pl-c1"&gt;fetchAll&lt;/span&gt;(db,
    &lt;span class="pl-c1"&gt;sql&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;SELECT * FROM document WHERE content MATCH ?&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;,
    &lt;span class="pl-c1"&gt;arguments&lt;/span&gt;: [pattern])&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Use them in the &lt;a href="#the-query-interface"&gt;query interface&lt;/a&gt;:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Search in all columns&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;&lt;span class="pl-k"&gt;let&lt;/span&gt; documents &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-k"&gt;try&lt;/span&gt; Document.&lt;span class="pl-c1"&gt;matching&lt;/span&gt;(pattern).&lt;span class="pl-c1"&gt;fetchAll&lt;/span&gt;(db)

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Search in a specific column:&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;&lt;span class="pl-k"&gt;let&lt;/span&gt; documents &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-k"&gt;try&lt;/span&gt; Document.&lt;span class="pl-c1"&gt;filter&lt;/span&gt;(&lt;span class="pl-c1"&gt;Column&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;content&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;).&lt;span class="pl-c1"&gt;match&lt;/span&gt;(pattern)).&lt;span class="pl-c1"&gt;fetchAll&lt;/span&gt;(db)&lt;/pre&gt;&lt;/div&gt;
&lt;h3&gt;&lt;a id="user-content-enabling-fts5-support" class="anchor" aria-hidden="true" href="#enabling-fts5-support"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Enabling FTS5 Support&lt;/h3&gt;
&lt;p&gt;When the FTS3 and FTS4 full-text engines don't suit your needs, you may want to use FTS5. See &lt;a href="#choosing-the-full-text-engine"&gt;Choosing the Full-Text Engine&lt;/a&gt; to help you make a decision.&lt;/p&gt;
&lt;p&gt;The version of SQLite that ships with iOS, macOS, tvOS and watchOS does not always support the FTS5 engine. To enable FTS5 support, you'll need to install GRDB with one of those installation techniques:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;Use the GRDB.swift CocoaPod with a custom compilation option, as below. It uses the system SQLite, which is compiled with FTS5 support, but only on iOS 11.4+ / macOS 10.13+ / tvOS 11.4+ / watchOS 4.3+:&lt;/p&gt;
&lt;div class="highlight highlight-source-ruby"&gt;&lt;pre&gt;pod &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;GRDB.swift&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;
platform &lt;span class="pl-c1"&gt;:ios&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;11.4&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt; &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; or above&lt;/span&gt;

post_install &lt;span class="pl-k"&gt;do&lt;/span&gt; |&lt;span class="pl-smi"&gt;installer&lt;/span&gt;|
  installer.pods_project.targets.&lt;span class="pl-c1"&gt;select&lt;/span&gt; { |&lt;span class="pl-smi"&gt;target&lt;/span&gt;| target.name &lt;span class="pl-k"&gt;==&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;GRDB.swift&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; }.each &lt;span class="pl-k"&gt;do&lt;/span&gt; |&lt;span class="pl-smi"&gt;target&lt;/span&gt;|
    target.build_configurations.each &lt;span class="pl-k"&gt;do&lt;/span&gt; |&lt;span class="pl-smi"&gt;config&lt;/span&gt;|
      config.build_settings[&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;OTHER_SWIFT_FLAGS&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;] &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;$(inherited) -D SQLITE_ENABLE_FTS5&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;
    &lt;span class="pl-k"&gt;end&lt;/span&gt;
  &lt;span class="pl-k"&gt;end&lt;/span&gt;
&lt;span class="pl-k"&gt;end&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;g-emoji class="g-emoji" alias="warning" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/26a0.png"&gt;⚠️&lt;/g-emoji&gt; &lt;strong&gt;Warning&lt;/strong&gt;: make sure you use the right platform version! You will get runtime errors on devices with a lower version.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;g-emoji class="g-emoji" alias="point_up" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/261d.png"&gt;☝️&lt;/g-emoji&gt; &lt;strong&gt;Note&lt;/strong&gt;: there used to be a GRDBPlus CocoaPod with pre-enabled FTS5 support. This CocoaPod is deprecated: please switch to the above technique.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Use the GRDB.swift/SQLCipher CocoaPod subspec (see &lt;a href="#encryption"&gt;encryption&lt;/a&gt;):&lt;/p&gt;
&lt;div class="highlight highlight-source-ruby"&gt;&lt;pre&gt;pod &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;GRDB.swift/SQLCipher&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Use a &lt;a href="Documentation/CustomSQLiteBuilds.md"&gt;custom SQLite build&lt;/a&gt; and activate the &lt;code&gt;SQLITE_ENABLE_FTS5&lt;/code&gt; compilation option.&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h3&gt;&lt;a id="user-content-create-fts5-virtual-tables" class="anchor" aria-hidden="true" href="#create-fts5-virtual-tables"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Create FTS5 Virtual Tables&lt;/h3&gt;
&lt;p&gt;&lt;strong&gt;FTS5 full-text tables store and index textual content.&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;To use FTS5, you'll need a &lt;a href="Documentation/CustomSQLiteBuilds.md"&gt;custom SQLite build&lt;/a&gt; that activates the &lt;code&gt;SQLITE_ENABLE_FTS5&lt;/code&gt; compilation option.&lt;/p&gt;
&lt;p&gt;Create FTS5 tables with the &lt;code&gt;create(virtualTable:using:)&lt;/code&gt; method:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; CREATE VIRTUAL TABLE document USING fts5(content)&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;&lt;span class="pl-k"&gt;try&lt;/span&gt; db.&lt;span class="pl-c1"&gt;create&lt;/span&gt;(&lt;span class="pl-c1"&gt;virtualTable&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;document&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-c1"&gt;using&lt;/span&gt;: &lt;span class="pl-c1"&gt;FTS5&lt;/span&gt;()) { t &lt;span class="pl-k"&gt;in&lt;/span&gt;
    t.&lt;span class="pl-c1"&gt;column&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;content&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
}&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;strong&gt;All columns in a full-text table contain text.&lt;/strong&gt; If you need to index a table that contains other kinds of values, you need an &lt;a href="#external-content-full-text-tables"&gt;"external content" full-text table&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;You can specify a &lt;a href="#fts5-tokenizers"&gt;tokenizer&lt;/a&gt;:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; CREATE VIRTUAL TABLE book USING fts5(&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt;   tokenize='porter',&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt;   author,&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt;   title,&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt;   body&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; )&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;&lt;span class="pl-k"&gt;try&lt;/span&gt; db.&lt;span class="pl-c1"&gt;create&lt;/span&gt;(&lt;span class="pl-c1"&gt;virtualTable&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;book&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-c1"&gt;using&lt;/span&gt;: &lt;span class="pl-c1"&gt;FTS5&lt;/span&gt;()) { t &lt;span class="pl-k"&gt;in&lt;/span&gt;
    t.&lt;span class="pl-smi"&gt;tokenizer&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; .&lt;span class="pl-c1"&gt;porter&lt;/span&gt;()
    t.&lt;span class="pl-c1"&gt;column&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;author&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
    t.&lt;span class="pl-c1"&gt;column&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;title&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
    t.&lt;span class="pl-c1"&gt;column&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;body&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
}&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;FTS5 supports &lt;a href="https://www.sqlite.org/fts5.html#fts5_table_creation_and_initialization" rel="nofollow"&gt;options&lt;/a&gt;:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; CREATE VIRTUAL TABLE book USING fts5(&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt;   content,&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt;   uuid UNINDEXED,&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt;   content='table',&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt;   content_rowid='id',&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt;   prefix='2 4',&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt;   columnsize=0,&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt;   detail=column&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; )&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;&lt;span class="pl-k"&gt;try&lt;/span&gt; db.&lt;span class="pl-c1"&gt;create&lt;/span&gt;(&lt;span class="pl-c1"&gt;virtualTable&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;document&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-c1"&gt;using&lt;/span&gt;: &lt;span class="pl-c1"&gt;FTS5&lt;/span&gt;()) { t &lt;span class="pl-k"&gt;in&lt;/span&gt;
    t.&lt;span class="pl-c1"&gt;column&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;content&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
    t.&lt;span class="pl-c1"&gt;column&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;uuid&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;).&lt;span class="pl-c1"&gt;notIndexed&lt;/span&gt;()
    t.&lt;span class="pl-smi"&gt;content&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;table&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;
    t.&lt;span class="pl-smi"&gt;contentRowID&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;id&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;
    t.&lt;span class="pl-smi"&gt;prefixes&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; [&lt;span class="pl-c1"&gt;2&lt;/span&gt;, &lt;span class="pl-c1"&gt;4&lt;/span&gt;]
    t.&lt;span class="pl-smi"&gt;columnSize&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;0&lt;/span&gt;
    t.&lt;span class="pl-smi"&gt;detail&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;column&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;
}&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;The &lt;code&gt;content&lt;/code&gt; and &lt;code&gt;contentRowID&lt;/code&gt; options are involved in "contentless" and "external content" full-text tables. GRDB can help you defining full-text tables that automatically synchronize with their content table. See &lt;a href="#external-content-full-text-tables"&gt;External Content Full-Text Tables&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;See &lt;a href="https://www.sqlite.org/fts5.html" rel="nofollow"&gt;SQLite documentation&lt;/a&gt; for more information.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-fts5-tokenizers" class="anchor" aria-hidden="true" href="#fts5-tokenizers"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;FTS5 Tokenizers&lt;/h3&gt;
&lt;p&gt;&lt;strong&gt;A tokenizer defines what "matching" means.&lt;/strong&gt; Depending on the tokenizer you choose, full-text searches won't return the same results.&lt;/p&gt;
&lt;p&gt;SQLite ships with three built-in FTS5 tokenizers: &lt;code&gt;ascii&lt;/code&gt;, &lt;code&gt;porter&lt;/code&gt; and &lt;code&gt;unicode61&lt;/code&gt; that use different algorithms to match queries with indexed content.&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;try&lt;/span&gt; db.&lt;span class="pl-c1"&gt;create&lt;/span&gt;(&lt;span class="pl-c1"&gt;virtualTable&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;book&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-c1"&gt;using&lt;/span&gt;: &lt;span class="pl-c1"&gt;FTS5&lt;/span&gt;()) { t &lt;span class="pl-k"&gt;in&lt;/span&gt;
    &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Pick one:&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;    t.&lt;span class="pl-smi"&gt;tokenizer&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; .&lt;span class="pl-c1"&gt;unicode61&lt;/span&gt;() &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; default&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;    t.&lt;span class="pl-smi"&gt;tokenizer&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; .&lt;span class="pl-c1"&gt;unicode61&lt;/span&gt;(&lt;span class="pl-k"&gt;...&lt;/span&gt;)
    t.&lt;span class="pl-smi"&gt;tokenizer&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; .&lt;span class="pl-smi"&gt;ascii&lt;/span&gt;
    t.&lt;span class="pl-smi"&gt;tokenizer&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; .&lt;span class="pl-c1"&gt;porter&lt;/span&gt;(&lt;span class="pl-k"&gt;...&lt;/span&gt;)
}&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;See below some examples of matches:&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;content&lt;/th&gt;
&lt;th&gt;query&lt;/th&gt;
&lt;th align="center"&gt;ascii&lt;/th&gt;
&lt;th align="center"&gt;unicode61&lt;/th&gt;
&lt;th align="center"&gt;porter on ascii&lt;/th&gt;
&lt;th align="center"&gt;porter on unicode61&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;Foo&lt;/td&gt;
&lt;td&gt;Foo&lt;/td&gt;
&lt;td align="center"&gt;X&lt;/td&gt;
&lt;td align="center"&gt;X&lt;/td&gt;
&lt;td align="center"&gt;X&lt;/td&gt;
&lt;td align="center"&gt;X&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Foo&lt;/td&gt;
&lt;td&gt;FOO&lt;/td&gt;
&lt;td align="center"&gt;X&lt;/td&gt;
&lt;td align="center"&gt;X&lt;/td&gt;
&lt;td align="center"&gt;X&lt;/td&gt;
&lt;td align="center"&gt;X&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Jérôme&lt;/td&gt;
&lt;td&gt;Jérôme&lt;/td&gt;
&lt;td align="center"&gt;X ¹&lt;/td&gt;
&lt;td align="center"&gt;X ¹&lt;/td&gt;
&lt;td align="center"&gt;X ¹&lt;/td&gt;
&lt;td align="center"&gt;X ¹&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Jérôme&lt;/td&gt;
&lt;td&gt;JÉRÔME&lt;/td&gt;
&lt;td align="center"&gt;&lt;/td&gt;
&lt;td align="center"&gt;X ¹&lt;/td&gt;
&lt;td align="center"&gt;&lt;/td&gt;
&lt;td align="center"&gt;X ¹&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Jérôme&lt;/td&gt;
&lt;td&gt;Jerome&lt;/td&gt;
&lt;td align="center"&gt;&lt;/td&gt;
&lt;td align="center"&gt;X ¹&lt;/td&gt;
&lt;td align="center"&gt;&lt;/td&gt;
&lt;td align="center"&gt;X ¹&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Database&lt;/td&gt;
&lt;td&gt;Databases&lt;/td&gt;
&lt;td align="center"&gt;&lt;/td&gt;
&lt;td align="center"&gt;&lt;/td&gt;
&lt;td align="center"&gt;X&lt;/td&gt;
&lt;td align="center"&gt;X&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Frustration&lt;/td&gt;
&lt;td&gt;Frustrated&lt;/td&gt;
&lt;td align="center"&gt;&lt;/td&gt;
&lt;td align="center"&gt;&lt;/td&gt;
&lt;td align="center"&gt;X&lt;/td&gt;
&lt;td align="center"&gt;X&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;¹ Don't miss &lt;a href="#unicode-full-text-gotchas"&gt;Unicode Full-Text Gotchas&lt;/a&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;unicode61&lt;/strong&gt;&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;try&lt;/span&gt; db.&lt;span class="pl-c1"&gt;create&lt;/span&gt;(&lt;span class="pl-c1"&gt;virtualTable&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;book&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-c1"&gt;using&lt;/span&gt;: &lt;span class="pl-c1"&gt;FTS5&lt;/span&gt;()) { t &lt;span class="pl-k"&gt;in&lt;/span&gt;
    t.&lt;span class="pl-smi"&gt;tokenizer&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; .&lt;span class="pl-c1"&gt;unicode61&lt;/span&gt;()
    t.&lt;span class="pl-smi"&gt;tokenizer&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; .&lt;span class="pl-c1"&gt;unicode61&lt;/span&gt;(&lt;span class="pl-c1"&gt;diacritics&lt;/span&gt;: .&lt;span class="pl-smi"&gt;keep&lt;/span&gt;)
}&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;The default "unicode61" tokenizer is case-insensitive for unicode characters. It matches "Jérôme" with "JÉRÔME".&lt;/p&gt;
&lt;p&gt;It strips diacritics from latin script characters by default, and matches "jérôme" with "jerome". This behavior can be disabled, as in the example above.&lt;/p&gt;
&lt;p&gt;It does not provide stemming, and won't match "databases" with "database".&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;ascii&lt;/strong&gt;&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;try&lt;/span&gt; db.&lt;span class="pl-c1"&gt;create&lt;/span&gt;(&lt;span class="pl-c1"&gt;virtualTable&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;book&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-c1"&gt;using&lt;/span&gt;: &lt;span class="pl-c1"&gt;FTS5&lt;/span&gt;()) { t &lt;span class="pl-k"&gt;in&lt;/span&gt;
    t.&lt;span class="pl-smi"&gt;tokenizer&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; .&lt;span class="pl-smi"&gt;ascii&lt;/span&gt;
}&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;The "ascii" tokenizer is case-insensitive for ASCII characters. It matches "foo" with "FOO", but not "Jérôme" with "JÉRÔME".&lt;/p&gt;
&lt;p&gt;It does not provide stemming, and won't match "databases" with "database".&lt;/p&gt;
&lt;p&gt;It does not strip diacritics from latin script characters, and won't match "jérôme" with "jerome".&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;porter&lt;/strong&gt;&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;try&lt;/span&gt; db.&lt;span class="pl-c1"&gt;create&lt;/span&gt;(&lt;span class="pl-c1"&gt;virtualTable&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;book&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-c1"&gt;using&lt;/span&gt;: &lt;span class="pl-c1"&gt;FTS5&lt;/span&gt;()) { t &lt;span class="pl-k"&gt;in&lt;/span&gt;
    t.&lt;span class="pl-smi"&gt;tokenizer&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; .&lt;span class="pl-c1"&gt;porter&lt;/span&gt;()       &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; porter wrapping unicode61 (the default)&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;    t.&lt;span class="pl-smi"&gt;tokenizer&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; .&lt;span class="pl-c1"&gt;porter&lt;/span&gt;(.&lt;span class="pl-smi"&gt;ascii&lt;/span&gt;) &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; porter wrapping ascii&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;    t.&lt;span class="pl-smi"&gt;tokenizer&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; .&lt;span class="pl-c1"&gt;porter&lt;/span&gt;(.&lt;span class="pl-c1"&gt;unicode61&lt;/span&gt;(&lt;span class="pl-c1"&gt;diacritics&lt;/span&gt;: .&lt;span class="pl-smi"&gt;keep&lt;/span&gt;)) &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; porter wrapping unicode61 without diacritics stripping&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;}&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;The porter tokenizer is a wrapper tokenizer which compares English words according to their roots: it matches "database" with "databases", and "frustration" with "frustrated".&lt;/p&gt;
&lt;p&gt;It strips diacritics from latin script characters if it wraps unicode61, and does not if it wraps ascii (see the example above).&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;See &lt;a href="https://www.sqlite.org/fts5.html#tokenizers" rel="nofollow"&gt;SQLite tokenizers&lt;/a&gt; for more information, and &lt;a href="Documentation/FTS5Tokenizers.md"&gt;custom FTS5 tokenizers&lt;/a&gt; in order to add your own tokenizers.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-fts5pattern" class="anchor" aria-hidden="true" href="#fts5pattern"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;FTS5Pattern&lt;/h3&gt;
&lt;p&gt;&lt;strong&gt;Full-text search in FTS5 tables is performed with search patterns:&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;database&lt;/code&gt; matches all documents that contain "database"&lt;/li&gt;
&lt;li&gt;&lt;code&gt;data*&lt;/code&gt; matches all documents that contain a word starting with "data"&lt;/li&gt;
&lt;li&gt;&lt;code&gt;SQLite database&lt;/code&gt; matches all documents that contain both "SQLite" and "database"&lt;/li&gt;
&lt;li&gt;&lt;code&gt;SQLite OR database&lt;/code&gt; matches all documents that contain "SQLite" or "database"&lt;/li&gt;
&lt;li&gt;&lt;code&gt;"SQLite database"&lt;/code&gt; matches all documents that contain the "SQLite database" phrase&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;Not all search patterns are valid&lt;/strong&gt;: they must follow the &lt;a href="https://www.sqlite.org/fts5.html#full_text_query_syntax" rel="nofollow"&gt;Full-Text Query Syntax&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;The FTS5Pattern type helps you validating patterns, and building valid patterns from untrusted strings (such as strings typed by users):&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;extension&lt;/span&gt; &lt;span class="pl-en"&gt;Database&lt;/span&gt; {
    &lt;span class="pl-k"&gt;func&lt;/span&gt; &lt;span class="pl-en"&gt;makeFTS5Pattern&lt;/span&gt;(&lt;span class="pl-smi"&gt;&lt;span class="pl-en"&gt;rawPattern&lt;/span&gt;&lt;/span&gt;: &lt;span class="pl-c1"&gt;String&lt;/span&gt;, &lt;span class="pl-en"&gt;forTable&lt;/span&gt; &lt;span class="pl-smi"&gt;table&lt;/span&gt;: &lt;span class="pl-c1"&gt;String&lt;/span&gt;) &lt;span class="pl-k"&gt;throws&lt;/span&gt; &lt;span class="pl-k"&gt;-&amp;gt;&lt;/span&gt; FTS5Pattern
}

&lt;span class="pl-k"&gt;struct&lt;/span&gt; &lt;span class="pl-en"&gt;FTS5Pattern&lt;/span&gt; {
    &lt;span class="pl-k"&gt;init?&lt;/span&gt;(&lt;span class="pl-en"&gt;matchingAnyTokenIn&lt;/span&gt; &lt;span class="pl-smi"&gt;string&lt;/span&gt;: &lt;span class="pl-c1"&gt;String&lt;/span&gt;)
    &lt;span class="pl-k"&gt;init?&lt;/span&gt;(&lt;span class="pl-en"&gt;matchingAllTokensIn&lt;/span&gt; &lt;span class="pl-smi"&gt;string&lt;/span&gt;: &lt;span class="pl-c1"&gt;String&lt;/span&gt;)
    &lt;span class="pl-k"&gt;init?&lt;/span&gt;(&lt;span class="pl-en"&gt;matchingPhrase&lt;/span&gt; &lt;span class="pl-smi"&gt;string&lt;/span&gt;: &lt;span class="pl-c1"&gt;String&lt;/span&gt;)
}&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;The &lt;code&gt;Database.makeFTS5Pattern(rawPattern:forTable:)&lt;/code&gt; method validates your raw patterns against the query grammar and the columns of the targeted table, and may throw a &lt;a href="#databaseerror"&gt;DatabaseError&lt;/a&gt;:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; OK: FTS5Pattern&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;&lt;span class="pl-k"&gt;try&lt;/span&gt; db.&lt;span class="pl-c1"&gt;makeFTS5Pattern&lt;/span&gt;(&lt;span class="pl-c1"&gt;rawPattern&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;sqlite&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-c1"&gt;forTable&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;book&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; DatabaseError: syntax error near \"AND\"&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;&lt;span class="pl-k"&gt;try&lt;/span&gt; db.&lt;span class="pl-c1"&gt;makeFTS5Pattern&lt;/span&gt;(&lt;span class="pl-c1"&gt;rawPattern&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;AND&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-c1"&gt;forTable&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;book&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; DatabaseError: no such column: missing&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;&lt;span class="pl-k"&gt;try&lt;/span&gt; db.&lt;span class="pl-c1"&gt;makeFTS5Pattern&lt;/span&gt;(&lt;span class="pl-c1"&gt;rawPattern&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;missing: sqlite&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-c1"&gt;forTable&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;book&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;The FTS5Pattern initializers don't throw. They build a valid pattern from any string, &lt;strong&gt;including strings provided by users of your application&lt;/strong&gt;. They let you find documents that match all given words, any given word, or a full phrase, depending on the needs of your application:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;let&lt;/span&gt; query &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;SQLite database&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Matches documents that contain "SQLite" or "database"&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;&lt;span class="pl-k"&gt;let&lt;/span&gt; pattern &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;FTS5Pattern&lt;/span&gt;(&lt;span class="pl-c1"&gt;matchingAnyTokenIn&lt;/span&gt;: query)
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Matches documents that contain both "SQLite" and "database"&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;&lt;span class="pl-k"&gt;let&lt;/span&gt; pattern &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;FTS5Pattern&lt;/span&gt;(&lt;span class="pl-c1"&gt;matchingAllTokensIn&lt;/span&gt;: query)
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Matches documents that contain "SQLite database"&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;&lt;span class="pl-k"&gt;let&lt;/span&gt; pattern &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;FTS5Pattern&lt;/span&gt;(&lt;span class="pl-c1"&gt;matchingPhrase&lt;/span&gt;: query)
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Matches documents that start with "SQLite database"&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;&lt;span class="pl-k"&gt;let&lt;/span&gt; pattern &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;FTS5Pattern&lt;/span&gt;(&lt;span class="pl-c1"&gt;matchingPrefixPhrase&lt;/span&gt;: query)&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;They return nil when no pattern could be built from the input string:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;let&lt;/span&gt; pattern &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;FTS5Pattern&lt;/span&gt;(&lt;span class="pl-c1"&gt;matchingAnyTokenIn&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)  &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; nil&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;&lt;span class="pl-k"&gt;let&lt;/span&gt; pattern &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;FTS5Pattern&lt;/span&gt;(&lt;span class="pl-c1"&gt;matchingAnyTokenIn&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;*&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;) &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; nil&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;FTS5Pattern are regular &lt;a href="#values"&gt;values&lt;/a&gt;. You can use them as query &lt;a href="http://groue.github.io/GRDB.swift/docs/4.5/Structs/StatementArguments.html" rel="nofollow"&gt;arguments&lt;/a&gt;:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;let&lt;/span&gt; documents &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-k"&gt;try&lt;/span&gt; Document.&lt;span class="pl-c1"&gt;fetchAll&lt;/span&gt;(db,
    &lt;span class="pl-c1"&gt;sql&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;SELECT * FROM document WHERE document MATCH ?&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;,
    &lt;span class="pl-c1"&gt;arguments&lt;/span&gt;: [pattern])&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Use them in the &lt;a href="#the-query-interface"&gt;query interface&lt;/a&gt;:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;let&lt;/span&gt; documents &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-k"&gt;try&lt;/span&gt; Document.&lt;span class="pl-c1"&gt;matching&lt;/span&gt;(pattern).&lt;span class="pl-c1"&gt;fetchAll&lt;/span&gt;(db)&lt;/pre&gt;&lt;/div&gt;
&lt;h3&gt;&lt;a id="user-content-fts5-sorting-by-relevance" class="anchor" aria-hidden="true" href="#fts5-sorting-by-relevance"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;FTS5: Sorting by Relevance&lt;/h3&gt;
&lt;p&gt;&lt;strong&gt;FTS5 can sort results by relevance&lt;/strong&gt; (most to least relevant):&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; SQL&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;&lt;span class="pl-k"&gt;let&lt;/span&gt; documents &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-k"&gt;try&lt;/span&gt; Document.&lt;span class="pl-c1"&gt;fetchAll&lt;/span&gt;(db,
    &lt;span class="pl-c1"&gt;sql&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;SELECT * FROM document WHERE document MATCH ? ORDER BY rank&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;,
    &lt;span class="pl-c1"&gt;arguments&lt;/span&gt;: [pattern])

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Query Interface&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;&lt;span class="pl-k"&gt;let&lt;/span&gt; documents &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-k"&gt;try&lt;/span&gt; Document.&lt;span class="pl-c1"&gt;matching&lt;/span&gt;(pattern).&lt;span class="pl-c1"&gt;order&lt;/span&gt;(Column.&lt;span class="pl-smi"&gt;rank&lt;/span&gt;).&lt;span class="pl-c1"&gt;fetchAll&lt;/span&gt;(db)&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;For more information about the ranking algorithm, as well as extra options, read &lt;a href="https://www.sqlite.org/fts5.html#sorting_by_auxiliary_function_results" rel="nofollow"&gt;Sorting by Auxiliary Function Results&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;GRDB does not provide any ranking for FTS3 and FTS4. See SQLite's &lt;a href="https://www.sqlite.org/fts3.html#appendix_a" rel="nofollow"&gt;Search Application Tips&lt;/a&gt; if you really need it.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-external-content-full-text-tables" class="anchor" aria-hidden="true" href="#external-content-full-text-tables"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;External Content Full-Text Tables&lt;/h3&gt;
&lt;p&gt;&lt;strong&gt;An external content table does not store the indexed text.&lt;/strong&gt; Instead, it indexes the text stored in another table.&lt;/p&gt;
&lt;p&gt;This is very handy when you want to index a table that can not be declared as a full-text table (because it contains non-textual values, for example). You just have to define an external content full-text table that refers to the regular table.&lt;/p&gt;
&lt;p&gt;The two tables must be kept up-to-date, so that the full-text index matches the content of the regular table. This synchronization happens automatically if you use the &lt;code&gt;synchronize(withTable:)&lt;/code&gt; method in your full-text table definition:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; A regular table&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;&lt;span class="pl-k"&gt;try&lt;/span&gt; db.&lt;span class="pl-c1"&gt;create&lt;/span&gt;(&lt;span class="pl-c1"&gt;table&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;book&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;) { t &lt;span class="pl-k"&gt;in&lt;/span&gt;
    t.&lt;span class="pl-c1"&gt;column&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;author&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, .&lt;span class="pl-c1"&gt;text&lt;/span&gt;)
    t.&lt;span class="pl-c1"&gt;column&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;title&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, .&lt;span class="pl-c1"&gt;text&lt;/span&gt;)
    t.&lt;span class="pl-c1"&gt;column&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;content&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, .&lt;span class="pl-c1"&gt;text&lt;/span&gt;)
    &lt;span class="pl-k"&gt;...&lt;/span&gt;
}

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; A full-text table synchronized with the regular table&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;&lt;span class="pl-k"&gt;try&lt;/span&gt; db.&lt;span class="pl-c1"&gt;create&lt;/span&gt;(&lt;span class="pl-c1"&gt;virtualTable&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;book_ft&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-c1"&gt;using&lt;/span&gt;: &lt;span class="pl-c1"&gt;FTS4&lt;/span&gt;()) { t &lt;span class="pl-k"&gt;in&lt;/span&gt; &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; or FTS5()&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;    t.&lt;span class="pl-c1"&gt;synchronize&lt;/span&gt;(&lt;span class="pl-c1"&gt;withTable&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;book&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
    t.&lt;span class="pl-c1"&gt;column&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;author&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
    t.&lt;span class="pl-c1"&gt;column&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;title&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
    t.&lt;span class="pl-c1"&gt;column&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;content&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
}&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;The eventual content already present in the regular table is indexed, and every insert, update or delete that happens in the regular table is automatically applied to the full-text index.&lt;/p&gt;
&lt;p&gt;For more information, see the SQLite documentation about external content tables: &lt;a href="https://www.sqlite.org/fts3.html#_external_content_fts4_tables_" rel="nofollow"&gt;FTS4&lt;/a&gt;, &lt;a href="https://sqlite.org/fts5.html#external_content_tables" rel="nofollow"&gt;FTS5&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;See also &lt;a href="https://github.com/groue/WWDCCompanion"&gt;WWDC Companion&lt;/a&gt;, a sample app that uses external content tables to store, display, and let the user search the WWDC sessions.&lt;/p&gt;
&lt;h4&gt;&lt;a id="user-content-deleting-synchronized-full-text-tables" class="anchor" aria-hidden="true" href="#deleting-synchronized-full-text-tables"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Deleting Synchronized Full-Text Tables&lt;/h4&gt;
&lt;p&gt;Synchronization of full-text tables with their content table happens by the mean of SQL triggers.&lt;/p&gt;
&lt;p&gt;SQLite automatically deletes those triggers when the content (not full-text) table is dropped.&lt;/p&gt;
&lt;p&gt;However, those triggers remain after the full-text table has been dropped. Unless they are dropped too, they will prevent future insertion, updates, and deletions in the content table, and the creation of a new full-text table.&lt;/p&gt;
&lt;p&gt;To drop those triggers, use the &lt;code&gt;dropFTS4SynchronizationTriggers&lt;/code&gt; or &lt;code&gt;dropFTS5SynchronizationTriggers&lt;/code&gt; methods:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Create tables&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;&lt;span class="pl-k"&gt;try&lt;/span&gt; db.&lt;span class="pl-c1"&gt;create&lt;/span&gt;(&lt;span class="pl-c1"&gt;table&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;book&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;) { t &lt;span class="pl-k"&gt;in&lt;/span&gt;
    &lt;span class="pl-k"&gt;...&lt;/span&gt;
}
&lt;span class="pl-k"&gt;try&lt;/span&gt; db.&lt;span class="pl-c1"&gt;create&lt;/span&gt;(&lt;span class="pl-c1"&gt;virtualTable&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;book_ft&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-c1"&gt;using&lt;/span&gt;: &lt;span class="pl-c1"&gt;FTS4&lt;/span&gt;()) { t &lt;span class="pl-k"&gt;in&lt;/span&gt;
    t.&lt;span class="pl-c1"&gt;synchronize&lt;/span&gt;(&lt;span class="pl-c1"&gt;withTable&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;book&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
    &lt;span class="pl-k"&gt;...&lt;/span&gt;
}

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Drop full-text table&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;&lt;span class="pl-k"&gt;try&lt;/span&gt; db.&lt;span class="pl-c1"&gt;drop&lt;/span&gt;(&lt;span class="pl-c1"&gt;table&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;book_ft&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
&lt;span class="pl-k"&gt;try&lt;/span&gt; db.&lt;span class="pl-c1"&gt;dropFTS4SynchronizationTriggers&lt;/span&gt;(&lt;span class="pl-c1"&gt;forTable&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;book_ft&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)&lt;/pre&gt;&lt;/div&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;g-emoji class="g-emoji" alias="warning" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/26a0.png"&gt;⚠️&lt;/g-emoji&gt; &lt;strong&gt;Warning&lt;/strong&gt;: there was a bug in GRDB up to version 2.3.1 included, which created triggers with a wrong name. If it is possible that the full-text table was created by an old version of GRDB, then delete the synchronization triggers &lt;strong&gt;twice&lt;/strong&gt;: once with the name of the deleted full-text table, and once with the name of the content table:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Drop full-text table&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;&lt;span class="pl-k"&gt;try&lt;/span&gt; db.&lt;span class="pl-c1"&gt;drop&lt;/span&gt;(&lt;span class="pl-c1"&gt;table&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;book_ft&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
&lt;span class="pl-k"&gt;try&lt;/span&gt; db.&lt;span class="pl-c1"&gt;dropFTS4SynchronizationTriggers&lt;/span&gt;(&lt;span class="pl-c1"&gt;forTable&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;book_ft&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
&lt;span class="pl-k"&gt;try&lt;/span&gt; db.&lt;span class="pl-c1"&gt;dropFTS4SynchronizationTriggers&lt;/span&gt;(&lt;span class="pl-c1"&gt;forTable&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;book&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;) &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Support for GRDB &amp;lt;= 2.3.1&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;/blockquote&gt;
&lt;h4&gt;&lt;a id="user-content-querying-external-content-full-text-tables" class="anchor" aria-hidden="true" href="#querying-external-content-full-text-tables"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Querying External Content Full-Text Tables&lt;/h4&gt;
&lt;p&gt;When you need to perform a full-text search, and the external content table contains all the data you need, you can simply query the full-text table.&lt;/p&gt;
&lt;p&gt;But if you need to load columns from the regular table, and in the same time perform a full-text search, then you will need to query both tables at the same time.&lt;/p&gt;
&lt;p&gt;That is because SQLite will throw an error when you try to perform a full-text search on a regular table:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; SQLite error 1: unable to use function MATCH in the requested context&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; SELECT * FROM book WHERE book MATCH '...'&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;&lt;span class="pl-k"&gt;let&lt;/span&gt; books &lt;span class="pl-k"&gt;=&lt;/span&gt; Book.&lt;span class="pl-c1"&gt;matching&lt;/span&gt;(pattern).&lt;span class="pl-c1"&gt;fetchAll&lt;/span&gt;(db)&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;The solution is to perform a joined request, using raw SQL:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;let&lt;/span&gt; sql &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"""&lt;/span&gt;&lt;/span&gt;
&lt;span class="pl-s"&gt;    SELECT book.*&lt;/span&gt;
&lt;span class="pl-s"&gt;    FROM book&lt;/span&gt;
&lt;span class="pl-s"&gt;    JOIN book_ft&lt;/span&gt;
&lt;span class="pl-s"&gt;        ON book_ft.rowid = book.rowid&lt;/span&gt;
&lt;span class="pl-s"&gt;        AND book_ft MATCH ?&lt;/span&gt;
&lt;span class="pl-s"&gt;    &lt;span class="pl-pds"&gt;"""&lt;/span&gt;&lt;/span&gt;
&lt;span class="pl-k"&gt;let&lt;/span&gt; books &lt;span class="pl-k"&gt;=&lt;/span&gt; Book.&lt;span class="pl-c1"&gt;fetchAll&lt;/span&gt;(db, &lt;span class="pl-c1"&gt;sql&lt;/span&gt;: sql, &lt;span class="pl-c1"&gt;arguments&lt;/span&gt;: [pattern])&lt;/pre&gt;&lt;/div&gt;
&lt;h3&gt;&lt;a id="user-content-full-text-records" class="anchor" aria-hidden="true" href="#full-text-records"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Full-Text Records&lt;/h3&gt;
&lt;p&gt;&lt;strong&gt;You can define &lt;a href="#records"&gt;record&lt;/a&gt; types around the full-text virtual tables.&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;However these tables don't have any explicit primary key. Instead, they use the &lt;a href="#the-implicit-rowid-primary-key"&gt;implicit rowid primary key&lt;/a&gt;: a special hidden column named &lt;code&gt;rowid&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;You will have to &lt;a href="#exposing-the-rowid-column"&gt;expose this hidden column&lt;/a&gt; in order to fetch, delete, and update full-text records by primary key.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-unicode-full-text-gotchas" class="anchor" aria-hidden="true" href="#unicode-full-text-gotchas"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Unicode Full-Text Gotchas&lt;/h3&gt;
&lt;p&gt;The SQLite built-in tokenizers for &lt;a href="#fts3-and-fts4-tokenizers"&gt;FTS3, FTS4&lt;/a&gt; and &lt;a href="#fts5-tokenizers"&gt;FTS5&lt;/a&gt; are generally unicode-aware, with a few caveats, and limitations.&lt;/p&gt;
&lt;p&gt;Generally speaking, matches may fail when content and query don't use the same &lt;a href="http://unicode.org/reports/tr15/" rel="nofollow"&gt;unicode normalization&lt;/a&gt;. SQLite actually exhibits inconsistent behavior in this regard.&lt;/p&gt;
&lt;p&gt;For example, for "aimé" to match "aimé", they better have the same normalization: the NFC "aim\u{00E9}" form may not match its NFD "aime\u{0301}" equivalent. Most strings that you get from Swift, UIKit and Cocoa use NFC, so be careful with NFD inputs (such as strings from the HFS+ file system, or strings that you can't trust like network inputs). Use &lt;a href="https://developer.apple.com/reference/swift/string/1407210-precomposedstringwithcanonicalma" rel="nofollow"&gt;String.precomposedStringWithCanonicalMapping&lt;/a&gt; to turn a string into NFC.&lt;/p&gt;
&lt;p&gt;Besides, if you want "fi" to match the ligature "ﬁ" (U+FB01), then you need to normalize your indexed contents and inputs to NFKC or NFKD. Use &lt;a href="https://developer.apple.com/reference/swift/string/1407834-precomposedstringwithcompatibili" rel="nofollow"&gt;String.precomposedStringWithCompatibilityMapping&lt;/a&gt; to turn a string into NFKC.&lt;/p&gt;
&lt;p&gt;Unicode normalization is not the end of the story, because it won't help "Encyclopaedia" match "Encyclopædia", "Mueller", "Müller", "Grossmann", "Großmann", or "Diyarbakır", "DIYARBAKIR". The &lt;a href="https://developer.apple.com/reference/swift/string/1643133-applyingtransform" rel="nofollow"&gt;String.applyingTransform&lt;/a&gt; method can help.&lt;/p&gt;
&lt;p&gt;GRDB lets you write &lt;a href="Documentation/FTS5Tokenizers.md"&gt;custom FTS5 tokenizers&lt;/a&gt; that can transparently deal with all these issues. For FTS3 and FTS4, you'll need to pre-process your strings before injecting them in the full-text engine.&lt;/p&gt;
&lt;p&gt;Happy indexing!&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-joined-queries-support" class="anchor" aria-hidden="true" href="#joined-queries-support"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Joined Queries Support&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;GRDB helps consuming joined queries with complex selection.&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;In this chapter, we will focus on the extraction of information from complex rows, such as the ones fetched by the query below:&lt;/p&gt;
&lt;div class="highlight highlight-source-sql"&gt;&lt;pre&gt;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;--&lt;/span&gt; How to consume the left, middle, and right parts of those rows?&lt;/span&gt;
&lt;span class="pl-k"&gt;SELECT&lt;/span&gt; player.&lt;span class="pl-k"&gt;*&lt;/span&gt;, team.&lt;span class="pl-k"&gt;*&lt;/span&gt;, &lt;span class="pl-c1"&gt;MAX&lt;/span&gt;(&lt;span class="pl-c1"&gt;round&lt;/span&gt;.&lt;span class="pl-c1"&gt;score&lt;/span&gt;) &lt;span class="pl-k"&gt;AS&lt;/span&gt; maxScore
&lt;span class="pl-k"&gt;FROM&lt;/span&gt; player
&lt;span class="pl-k"&gt;LEFT JOIN&lt;/span&gt; team &lt;span class="pl-k"&gt;ON&lt;/span&gt; ...
&lt;span class="pl-k"&gt;LEFT JOIN&lt;/span&gt; round &lt;span class="pl-k"&gt;ON&lt;/span&gt; ...
&lt;span class="pl-k"&gt;GROUP BY&lt;/span&gt; ...&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;We will not talk about the &lt;em&gt;generation&lt;/em&gt; of joined queries, which is covered in &lt;a href="Documentation/AssociationsBasics.md"&gt;Associations&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;So what are we talking about?&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;It is difficult to consume rows fetched from complex joined queries, because they often contain several columns with the same name: &lt;code&gt;id&lt;/code&gt; from table &lt;code&gt;player&lt;/code&gt;, &lt;code&gt;id&lt;/code&gt; from table &lt;code&gt;team&lt;/code&gt;, etc.&lt;/p&gt;
&lt;p&gt;When such ambiguity happens, GRDB row accessors always favor the leftmost matching column. This means that &lt;code&gt;row["id"]&lt;/code&gt; would give a player id, whithout any obvious way to access the team id.&lt;/p&gt;
&lt;p&gt;A classical technique to avoid this ambiguity is to give each column a unique name. For example:&lt;/p&gt;
&lt;div class="highlight highlight-source-sql"&gt;&lt;pre&gt;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;--&lt;/span&gt; A classical technique&lt;/span&gt;
&lt;span class="pl-k"&gt;SELECT&lt;/span&gt; &lt;span class="pl-c1"&gt;player&lt;/span&gt;.&lt;span class="pl-c1"&gt;id&lt;/span&gt; &lt;span class="pl-k"&gt;AS&lt;/span&gt; player_id, &lt;span class="pl-c1"&gt;player&lt;/span&gt;.&lt;span class="pl-c1"&gt;name&lt;/span&gt; &lt;span class="pl-k"&gt;AS&lt;/span&gt; player_name, &lt;span class="pl-c1"&gt;team&lt;/span&gt;.&lt;span class="pl-c1"&gt;id&lt;/span&gt; &lt;span class="pl-k"&gt;AS&lt;/span&gt; team_id, &lt;span class="pl-c1"&gt;team&lt;/span&gt;.&lt;span class="pl-c1"&gt;name&lt;/span&gt; &lt;span class="pl-k"&gt;AS&lt;/span&gt; team_name, &lt;span class="pl-c1"&gt;team&lt;/span&gt;.&lt;span class="pl-c1"&gt;color&lt;/span&gt; &lt;span class="pl-k"&gt;AS&lt;/span&gt; team_color, &lt;span class="pl-c1"&gt;MAX&lt;/span&gt;(&lt;span class="pl-c1"&gt;round&lt;/span&gt;.&lt;span class="pl-c1"&gt;score&lt;/span&gt;) &lt;span class="pl-k"&gt;AS&lt;/span&gt; maxScore
&lt;span class="pl-k"&gt;FROM&lt;/span&gt; player
&lt;span class="pl-k"&gt;LEFT JOIN&lt;/span&gt; team &lt;span class="pl-k"&gt;ON&lt;/span&gt; ...
&lt;span class="pl-k"&gt;LEFT JOIN&lt;/span&gt; round &lt;span class="pl-k"&gt;ON&lt;/span&gt; ...
&lt;span class="pl-k"&gt;GROUP BY&lt;/span&gt; ...&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;This technique works pretty well, but it has three drawbacks:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;The selection becomes hard to read and understand.&lt;/li&gt;
&lt;li&gt;Such queries are difficult to write by hand.&lt;/li&gt;
&lt;li&gt;The mangled names are a &lt;em&gt;very&lt;/em&gt; bad fit for &lt;a href="#fetchablerecord-protocol"&gt;FetchableRecord&lt;/a&gt; types that expect specific column names. After all, if the &lt;code&gt;Team&lt;/code&gt; record type can read &lt;code&gt;SELECT * FROM team ...&lt;/code&gt;, it should be able to read &lt;code&gt;SELECT ..., team.*, ...&lt;/code&gt; as well.&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;We thus need another technique. &lt;strong&gt;Below we'll see how to split rows into slices, and preserve column names.&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;code&gt;SELECT player.*, team.*, MAX(round.score) AS maxScore FROM ...&lt;/code&gt; will be splitted into three slices: one that contains player's columns, one that contains team's columns, and a remaining slice that contains remaining column(s). The Player record type will be able to read the first slice, which contains the colums expected by the &lt;code&gt;Player.init(row:)&lt;/code&gt; initializer. In the same way, the Team record type could read the second slice.&lt;/p&gt;
&lt;p&gt;Unlike the name-mangling technique, splitting rows keeps SQL legible, accepts your hand-crafted SQL queries, and plays as nicely as possible with your existing &lt;a href="#records"&gt;record types&lt;/a&gt;.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="#splitting-rows-an-introduction"&gt;Splitting Rows, an Introduction&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#splitting-rows-the-record-way"&gt;Splitting Rows, the Record Way&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#splitting-rows-the-request-way"&gt;Splitting Rows, the Request Way&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#splitting-rows-the-codable-way"&gt;Splitting Rows, the Codable Way&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;&lt;a id="user-content-splitting-rows-an-introduction" class="anchor" aria-hidden="true" href="#splitting-rows-an-introduction"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Splitting Rows, an Introduction&lt;/h3&gt;
&lt;p&gt;Let's first write some introductory code, hoping that this chapter will make you understand how pieces fall together. We'll see &lt;a href="#splitting-rows-the-record-way"&gt;later&lt;/a&gt; how records will help us streamline the initial approach, how to track changes in joined requests, and how we can use the standard Decodable protocol.&lt;/p&gt;
&lt;p&gt;To split rows, we will use &lt;a href="#row-adapters"&gt;row adapters&lt;/a&gt;. Row adapters adapt rows so that row consumers see exactly the columns they want. Among other things, row adapters can define several &lt;em&gt;row scopes&lt;/em&gt; that give access to as many &lt;em&gt;row slices&lt;/em&gt;. Sounds like a perfect match.&lt;/p&gt;
&lt;p&gt;At the very beginning, there is an SQL query:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;try&lt;/span&gt; dbQueue.&lt;span class="pl-smi"&gt;read&lt;/span&gt; { db &lt;span class="pl-k"&gt;in&lt;/span&gt;
    &lt;span class="pl-k"&gt;let&lt;/span&gt; sql &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"""&lt;/span&gt;&lt;/span&gt;
&lt;span class="pl-s"&gt;        SELECT player.*, team.*, MAX(round.score) AS maxScore&lt;/span&gt;
&lt;span class="pl-s"&gt;        FROM player&lt;/span&gt;
&lt;span class="pl-s"&gt;        LEFT JOIN team ON ...&lt;/span&gt;
&lt;span class="pl-s"&gt;        LEFT JOIN round ON ...&lt;/span&gt;
&lt;span class="pl-s"&gt;        GROUP BY ...&lt;/span&gt;
&lt;span class="pl-s"&gt;        &lt;span class="pl-pds"&gt;"""&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;We need an adapter that extracts player columns, in a slice that has as many columns as there are columns in the player table. That's &lt;a href="#rangerowadapter"&gt;RangeRowAdapter&lt;/a&gt;:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;    &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; SELECT player.*, team.*, ...&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;    &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt;        &amp;lt;------&amp;gt;&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;    &lt;span class="pl-k"&gt;let&lt;/span&gt; playerWidth &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-k"&gt;try&lt;/span&gt; db.&lt;span class="pl-c1"&gt;columns&lt;/span&gt;(&lt;span class="pl-c1"&gt;in&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;player&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;).&lt;span class="pl-c1"&gt;count&lt;/span&gt;
    &lt;span class="pl-k"&gt;let&lt;/span&gt; playerAdapter &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;RangeRowAdapter&lt;/span&gt;(&lt;span class="pl-c1"&gt;0&lt;/span&gt; &lt;span class="pl-k"&gt;..&amp;lt;&lt;/span&gt; playerWidth)&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;We also need an adapter that extracts team columns:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;    &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; SELECT player.*, team.*, ...&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;    &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt;                  &amp;lt;----&amp;gt;&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;    &lt;span class="pl-k"&gt;let&lt;/span&gt; teamWidth &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-k"&gt;try&lt;/span&gt; db.&lt;span class="pl-c1"&gt;columns&lt;/span&gt;(&lt;span class="pl-c1"&gt;in&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;team&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;).&lt;span class="pl-c1"&gt;count&lt;/span&gt;
    &lt;span class="pl-k"&gt;let&lt;/span&gt; teamAdapter &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;RangeRowAdapter&lt;/span&gt;(playerWidth &lt;span class="pl-k"&gt;..&amp;lt;&lt;/span&gt; (playerWidth &lt;span class="pl-k"&gt;+&lt;/span&gt; teamWidth))&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;We merge those two adapters in a single &lt;a href="#scopeadapter"&gt;ScopeAdapter&lt;/a&gt; that will allow us to access both sliced rows:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;    &lt;span class="pl-k"&gt;let&lt;/span&gt; playerScope &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;player&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;
    &lt;span class="pl-k"&gt;let&lt;/span&gt; teamScope &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;team&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;
    &lt;span class="pl-k"&gt;let&lt;/span&gt; adapter &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;ScopeAdapter&lt;/span&gt;([
        playerScope&lt;span class="pl-k"&gt;:&lt;/span&gt; playerAdapter,
        &lt;span class="pl-c1"&gt;teamScope&lt;/span&gt;: teamAdapter])&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;And now we can fetch, and start consuming our rows. You already know &lt;a href="#fetching-rows"&gt;row cursors&lt;/a&gt;:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;    &lt;span class="pl-k"&gt;let&lt;/span&gt; rows &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-k"&gt;try&lt;/span&gt; Row.&lt;span class="pl-c1"&gt;fetchCursor&lt;/span&gt;(db, &lt;span class="pl-c1"&gt;sql&lt;/span&gt;: sql, &lt;span class="pl-c1"&gt;adapter&lt;/span&gt;: adapter)
    &lt;span class="pl-k"&gt;while&lt;/span&gt; &lt;span class="pl-k"&gt;let&lt;/span&gt; row &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-k"&gt;try&lt;/span&gt; rows.&lt;span class="pl-c1"&gt;next&lt;/span&gt;() {&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;From a fetched row, we can build a player:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;        &lt;span class="pl-k"&gt;let&lt;/span&gt; player&lt;span class="pl-k"&gt;:&lt;/span&gt; Player &lt;span class="pl-k"&gt;=&lt;/span&gt; row[playerScope]&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;In the SQL query, the team is joined with the &lt;code&gt;LEFT JOIN&lt;/code&gt; operator. This means that the team may be missing: its slice may contain team values, or it may only contain NULLs. When this happens, we don't want to build a Team record, and we thus load an &lt;em&gt;optional&lt;/em&gt; Team:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;        &lt;span class="pl-k"&gt;let&lt;/span&gt; team&lt;span class="pl-k"&gt;:&lt;/span&gt; Team&lt;span class="pl-k"&gt;?&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; row[teamScope]&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;And finally, we can load the maximum score, assuming that the "maxScore" column is not ambiguous:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;        &lt;span class="pl-k"&gt;let&lt;/span&gt; maxScore&lt;span class="pl-k"&gt;:&lt;/span&gt; &lt;span class="pl-c1"&gt;Int&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; row[&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;maxScore&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;]
        
        &lt;span class="pl-c1"&gt;print&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;player: &lt;span class="pl-pse"&gt;\(&lt;/span&gt;&lt;span class="pl-s1"&gt;player&lt;/span&gt;&lt;span class="pl-pse"&gt;&lt;span class="pl-s1"&gt;)&lt;/span&gt;&lt;/span&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
        &lt;span class="pl-c1"&gt;print&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;team: &lt;span class="pl-pse"&gt;\(&lt;/span&gt;&lt;span class="pl-s1"&gt;team&lt;/span&gt;&lt;span class="pl-pse"&gt;&lt;span class="pl-s1"&gt;)&lt;/span&gt;&lt;/span&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
        &lt;span class="pl-c1"&gt;print&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;maxScore: &lt;span class="pl-pse"&gt;\(&lt;/span&gt;&lt;span class="pl-s1"&gt;maxScore&lt;/span&gt;&lt;span class="pl-pse"&gt;&lt;span class="pl-s1"&gt;)&lt;/span&gt;&lt;/span&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
    }
}&lt;/pre&gt;&lt;/div&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;g-emoji class="g-emoji" alias="bulb" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f4a1.png"&gt;💡&lt;/g-emoji&gt; In this chapter, we have learned:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;how to use &lt;code&gt;RangeRowAdapter&lt;/code&gt; to extract a specific table's columns into a &lt;em&gt;row slice&lt;/em&gt;.&lt;/li&gt;
&lt;li&gt;how to use &lt;code&gt;ScopeAdapter&lt;/code&gt; to gives access to several row slices through named scopes.&lt;/li&gt;
&lt;li&gt;how to use Row subscripting to extract records from rows, or optional records in order to deal with left joins.&lt;/li&gt;
&lt;/ul&gt;
&lt;/blockquote&gt;
&lt;h3&gt;&lt;a id="user-content-splitting-rows-the-record-way" class="anchor" aria-hidden="true" href="#splitting-rows-the-record-way"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Splitting Rows, the Record Way&lt;/h3&gt;
&lt;p&gt;Our introduction above has introduced important techniques. It uses &lt;a href="#row-adapters"&gt;row adapters&lt;/a&gt; in order to split rows. It uses Row subscripting in order to extract records from row slices.&lt;/p&gt;
&lt;p&gt;But we may want to make it more usable and robust:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;It's generally easier to consume records than raw rows.&lt;/li&gt;
&lt;li&gt;Joined records not always need all columns from a table (see &lt;code&gt;TableRecord.databaseSelection&lt;/code&gt; in &lt;a href="#columns-selected-by-a-request"&gt;Columns Selected by a Request&lt;/a&gt;).&lt;/li&gt;
&lt;li&gt;Building row adapters is long and error prone.&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;To address the first bullet, let's define a record that holds our player, optional team, and maximum score. Since it can decode database rows, it adopts the &lt;a href="#fetchablerecord-protocol"&gt;FetchableRecord&lt;/a&gt; protocol:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;struct&lt;/span&gt; &lt;span class="pl-en"&gt;PlayerInfo&lt;/span&gt; {
    &lt;span class="pl-k"&gt;var&lt;/span&gt; player&lt;span class="pl-k"&gt;:&lt;/span&gt; Player
    &lt;span class="pl-k"&gt;var&lt;/span&gt; team&lt;span class="pl-k"&gt;:&lt;/span&gt; Team&lt;span class="pl-k"&gt;?&lt;/span&gt;
    &lt;span class="pl-k"&gt;var&lt;/span&gt; maxScore&lt;span class="pl-k"&gt;:&lt;/span&gt; &lt;span class="pl-c1"&gt;Int&lt;/span&gt;
}

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;///&lt;/span&gt; PlayerInfo can decode rows:&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;&lt;span class="pl-k"&gt;extension&lt;/span&gt; &lt;span class="pl-en"&gt;PlayerInfo&lt;/span&gt;: &lt;span class="pl-e"&gt;FetchableRecord &lt;/span&gt;{
    &lt;span class="pl-k"&gt;private&lt;/span&gt; &lt;span class="pl-k"&gt;enum&lt;/span&gt; &lt;span class="pl-en"&gt;Scopes&lt;/span&gt; {
        &lt;span class="pl-k"&gt;static&lt;/span&gt; &lt;span class="pl-k"&gt;let&lt;/span&gt; player &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;player&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;
        &lt;span class="pl-k"&gt;static&lt;/span&gt; &lt;span class="pl-k"&gt;let&lt;/span&gt; team &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;team&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;
    }
    
    &lt;span class="pl-k"&gt;init&lt;/span&gt;(&lt;span class="pl-smi"&gt;&lt;span class="pl-en"&gt;row&lt;/span&gt;&lt;/span&gt;: Row) {
        player &lt;span class="pl-k"&gt;=&lt;/span&gt; row[Scopes.&lt;span class="pl-smi"&gt;player&lt;/span&gt;]
        team &lt;span class="pl-k"&gt;=&lt;/span&gt; row[Scopes.&lt;span class="pl-smi"&gt;team&lt;/span&gt;]
        maxScore &lt;span class="pl-k"&gt;=&lt;/span&gt; row[&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;maxScore&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;]
    }
}&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Let's now write the method that fetches PlayerInfo records:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;extension&lt;/span&gt; &lt;span class="pl-en"&gt;PlayerInfo&lt;/span&gt; {
    &lt;span class="pl-k"&gt;static&lt;/span&gt; &lt;span class="pl-k"&gt;func&lt;/span&gt; &lt;span class="pl-en"&gt;fetchAll&lt;/span&gt;(&lt;span class="pl-en"&gt;_&lt;/span&gt; &lt;span class="pl-smi"&gt;db&lt;/span&gt;: Database) &lt;span class="pl-k"&gt;throws&lt;/span&gt; &lt;span class="pl-k"&gt;-&amp;gt;&lt;/span&gt; [PlayerInfo] {&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;To acknowledge that both Player and Team records may customize their selection of the "player" and "team" columns, we'll write our SQL in a slightly different way:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;        &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Let Player and Team customize their selection:&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;        &lt;span class="pl-k"&gt;let&lt;/span&gt; sql &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"""&lt;/span&gt;&lt;/span&gt;
&lt;span class="pl-s"&gt;            SELECT&lt;/span&gt;
&lt;span class="pl-s"&gt;                &lt;span class="pl-pse"&gt;\(&lt;/span&gt;&lt;span class="pl-s1"&gt;Player.&lt;span class="pl-c1"&gt;selectionSQL&lt;/span&gt;()&lt;/span&gt;&lt;span class="pl-pse"&gt;&lt;span class="pl-s1"&gt;)&lt;/span&gt;&lt;/span&gt;, -- instead of player.*&lt;/span&gt;
&lt;span class="pl-s"&gt;                &lt;span class="pl-pse"&gt;\(&lt;/span&gt;&lt;span class="pl-s1"&gt;Team.&lt;span class="pl-c1"&gt;selectionSQL&lt;/span&gt;()&lt;/span&gt;&lt;span class="pl-pse"&gt;&lt;span class="pl-s1"&gt;)&lt;/span&gt;&lt;/span&gt;,   -- instead of team.*&lt;/span&gt;
&lt;span class="pl-s"&gt;                MAX(round.score) AS maxScore&lt;/span&gt;
&lt;span class="pl-s"&gt;            FROM player&lt;/span&gt;
&lt;span class="pl-s"&gt;            LEFT JOIN team ON ...&lt;/span&gt;
&lt;span class="pl-s"&gt;            LEFT JOIN round ON ...&lt;/span&gt;
&lt;span class="pl-s"&gt;            GROUP BY ...&lt;/span&gt;
&lt;span class="pl-s"&gt;            &lt;span class="pl-pds"&gt;"""&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;code&gt;Player.selectionSQL()&lt;/code&gt; will output &lt;code&gt;player.*&lt;/code&gt;, unless Player defines a &lt;a href="#columns-selected-by-a-request"&gt;customized selection&lt;/a&gt;.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;g-emoji class="g-emoji" alias="point_up" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/261d.png"&gt;☝️&lt;/g-emoji&gt; &lt;strong&gt;Note&lt;/strong&gt;: you may also use SQL table aliases:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;let&lt;/span&gt; sql &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"""&lt;/span&gt;&lt;/span&gt;
&lt;span class="pl-s"&gt;    SELECT&lt;/span&gt;
&lt;span class="pl-s"&gt;        &lt;span class="pl-pse"&gt;\(&lt;/span&gt;&lt;span class="pl-s1"&gt;Player.&lt;span class="pl-c1"&gt;selectionSQL&lt;/span&gt;(&lt;span class="pl-c1"&gt;alias&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;p&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)&lt;/span&gt;&lt;span class="pl-pse"&gt;&lt;span class="pl-s1"&gt;)&lt;/span&gt;&lt;/span&gt;,&lt;/span&gt;
&lt;span class="pl-s"&gt;        &lt;span class="pl-pse"&gt;\(&lt;/span&gt;&lt;span class="pl-s1"&gt;Team.&lt;span class="pl-c1"&gt;selectionSQL&lt;/span&gt;(&lt;span class="pl-c1"&gt;alias&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;t&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)&lt;/span&gt;&lt;span class="pl-pse"&gt;&lt;span class="pl-s1"&gt;)&lt;/span&gt;&lt;/span&gt;,&lt;/span&gt;
&lt;span class="pl-s"&gt;        MAX(r.score) AS maxScore&lt;/span&gt;
&lt;span class="pl-s"&gt;    FROM player p&lt;/span&gt;
&lt;span class="pl-s"&gt;    LEFT JOIN team t ON ...&lt;/span&gt;
&lt;span class="pl-s"&gt;    LEFT JOIN round r ON ...&lt;/span&gt;
&lt;span class="pl-s"&gt;    GROUP BY ...&lt;/span&gt;
&lt;span class="pl-s"&gt;    &lt;span class="pl-pds"&gt;"""&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;/blockquote&gt;
&lt;p&gt;Now is the time to build adapters (taking in account the customized selection of both player and team). We use the &lt;code&gt;splittingRowAdapters&lt;/code&gt; global function, which builds row adapters of desired widths:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;        &lt;span class="pl-k"&gt;let&lt;/span&gt; adapters &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-k"&gt;try&lt;/span&gt; &lt;span class="pl-c1"&gt;splittingRowAdapters&lt;/span&gt;(&lt;span class="pl-c1"&gt;columnCounts&lt;/span&gt;: [
            Player.&lt;span class="pl-c1"&gt;numberOfSelectedColumns&lt;/span&gt;(db),
            Team.&lt;span class="pl-c1"&gt;numberOfSelectedColumns&lt;/span&gt;(db)])
    
        &lt;span class="pl-k"&gt;let&lt;/span&gt; adapter &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;ScopeAdapter&lt;/span&gt;([
            Scopes.&lt;span class="pl-smi"&gt;player&lt;/span&gt;&lt;span class="pl-k"&gt;:&lt;/span&gt; adapters[&lt;span class="pl-c1"&gt;0&lt;/span&gt;],
            Scopes.&lt;span class="pl-smi"&gt;team&lt;/span&gt;&lt;span class="pl-k"&gt;:&lt;/span&gt; adapters[&lt;span class="pl-c1"&gt;1&lt;/span&gt;]])&lt;/pre&gt;&lt;/div&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;g-emoji class="g-emoji" alias="point_up" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/261d.png"&gt;☝️&lt;/g-emoji&gt; &lt;strong&gt;Note&lt;/strong&gt;: &lt;code&gt;splittingRowAdapters&lt;/code&gt; returns as many adapters as necessary to fully split a row. In the example above, it returns &lt;em&gt;three&lt;/em&gt; adapters: one for player, one for team, and one for the remaining columns.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;And finally, we can fetch player infos:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;        &lt;span class="pl-k"&gt;return&lt;/span&gt; &lt;span class="pl-k"&gt;try&lt;/span&gt; PlayerInfo.&lt;span class="pl-c1"&gt;fetchAll&lt;/span&gt;(db, &lt;span class="pl-c1"&gt;sql&lt;/span&gt;: sql, &lt;span class="pl-c1"&gt;adapter&lt;/span&gt;: adapter)
    }
}&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;And when your app needs to fetch player infos, it now reads:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Fetch player infos&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;&lt;span class="pl-k"&gt;let&lt;/span&gt; playerInfos &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-k"&gt;try&lt;/span&gt; dbQueue.&lt;span class="pl-smi"&gt;read&lt;/span&gt; { db &lt;span class="pl-k"&gt;in&lt;/span&gt;
    &lt;span class="pl-k"&gt;try&lt;/span&gt; PlayerInfo.&lt;span class="pl-c1"&gt;fetchAll&lt;/span&gt;(db)
}&lt;/pre&gt;&lt;/div&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;g-emoji class="g-emoji" alias="bulb" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f4a1.png"&gt;💡&lt;/g-emoji&gt; In this chapter, we have learned:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;how to define a &lt;code&gt;FetchableRecord&lt;/code&gt; record that consumes rows fetched from a joined query.&lt;/li&gt;
&lt;li&gt;how to use &lt;code&gt;selectionSQL&lt;/code&gt; and &lt;code&gt;numberOfSelectedColumns&lt;/code&gt; in order to deal with nested record types that define custom selection.&lt;/li&gt;
&lt;li&gt;how to use &lt;code&gt;splittingRowAdapters&lt;/code&gt; in order to streamline the definition of row slices.&lt;/li&gt;
&lt;li&gt;how to gather all relevant methods and constants in a record type, fully responsible of its relationship with the database.&lt;/li&gt;
&lt;/ul&gt;
&lt;/blockquote&gt;
&lt;h3&gt;&lt;a id="user-content-splitting-rows-the-request-way" class="anchor" aria-hidden="true" href="#splitting-rows-the-request-way"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Splitting Rows, the Request Way&lt;/h3&gt;
&lt;p&gt;The &lt;code&gt;PlayerInfo.fetchAll&lt;/code&gt; method &lt;a href="#splitting-rows-the-record-way"&gt;above&lt;/a&gt; directly fetches records. It's all good, but in order to profit from &lt;a href="#database-changes-observation"&gt;database observation&lt;/a&gt;, you'll need a &lt;a href="#custom-requests"&gt;custom request&lt;/a&gt; that defines a database query.&lt;/p&gt;
&lt;p&gt;It is recommended that you read the previous paragraphs before you dive in this sample code. We start with the same PlayerInfo record as above:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;struct&lt;/span&gt; &lt;span class="pl-en"&gt;PlayerInfo&lt;/span&gt; {
    &lt;span class="pl-k"&gt;var&lt;/span&gt; player&lt;span class="pl-k"&gt;:&lt;/span&gt; Player
    &lt;span class="pl-k"&gt;var&lt;/span&gt; team&lt;span class="pl-k"&gt;:&lt;/span&gt; Team&lt;span class="pl-k"&gt;?&lt;/span&gt;
    &lt;span class="pl-k"&gt;var&lt;/span&gt; maxScore&lt;span class="pl-k"&gt;:&lt;/span&gt; &lt;span class="pl-c1"&gt;Int&lt;/span&gt;
}

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;///&lt;/span&gt; PlayerInfo can decode rows:&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;&lt;span class="pl-k"&gt;extension&lt;/span&gt; &lt;span class="pl-en"&gt;PlayerInfo&lt;/span&gt;: &lt;span class="pl-e"&gt;FetchableRecord &lt;/span&gt;{
    &lt;span class="pl-k"&gt;private&lt;/span&gt; &lt;span class="pl-k"&gt;enum&lt;/span&gt; &lt;span class="pl-en"&gt;Scopes&lt;/span&gt; {
        &lt;span class="pl-k"&gt;static&lt;/span&gt; &lt;span class="pl-k"&gt;let&lt;/span&gt; player &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;player&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;
        &lt;span class="pl-k"&gt;static&lt;/span&gt; &lt;span class="pl-k"&gt;let&lt;/span&gt; team &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;team&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;
    }
    
    &lt;span class="pl-k"&gt;init&lt;/span&gt;(&lt;span class="pl-smi"&gt;&lt;span class="pl-en"&gt;row&lt;/span&gt;&lt;/span&gt;: Row) {
        player &lt;span class="pl-k"&gt;=&lt;/span&gt; row[Scopes.&lt;span class="pl-smi"&gt;player&lt;/span&gt;]
        team &lt;span class="pl-k"&gt;=&lt;/span&gt; row[Scopes.&lt;span class="pl-smi"&gt;team&lt;/span&gt;]
        maxScore &lt;span class="pl-k"&gt;=&lt;/span&gt; row[&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;maxScore&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;]
    }
}&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Now we write a method that returns a request, and build the fetching method on top of that request:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;extension&lt;/span&gt; &lt;span class="pl-en"&gt;PlayerInfo&lt;/span&gt; {
    &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;///&lt;/span&gt; The request for all player infos&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;    &lt;span class="pl-k"&gt;static&lt;/span&gt; &lt;span class="pl-k"&gt;func&lt;/span&gt; &lt;span class="pl-en"&gt;all&lt;/span&gt;() &lt;span class="pl-k"&gt;-&amp;gt;&lt;/span&gt; AdaptedFetchRequest&amp;lt;SQLRequest&amp;lt;PlayerInfo&amp;gt;&amp;gt; {
        &lt;span class="pl-k"&gt;let&lt;/span&gt; sql &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"""&lt;/span&gt;&lt;/span&gt;
&lt;span class="pl-s"&gt;            SELECT&lt;/span&gt;
&lt;span class="pl-s"&gt;                &lt;span class="pl-pse"&gt;\(&lt;/span&gt;&lt;span class="pl-s1"&gt;Player.&lt;span class="pl-c1"&gt;selectionSQL&lt;/span&gt;()&lt;/span&gt;&lt;span class="pl-pse"&gt;&lt;span class="pl-s1"&gt;)&lt;/span&gt;&lt;/span&gt;,&lt;/span&gt;
&lt;span class="pl-s"&gt;                &lt;span class="pl-pse"&gt;\(&lt;/span&gt;&lt;span class="pl-s1"&gt;Team.&lt;span class="pl-c1"&gt;selectionSQL&lt;/span&gt;()&lt;/span&gt;&lt;span class="pl-pse"&gt;&lt;span class="pl-s1"&gt;)&lt;/span&gt;&lt;/span&gt;,&lt;/span&gt;
&lt;span class="pl-s"&gt;                MAX(round.score) AS maxScore&lt;/span&gt;
&lt;span class="pl-s"&gt;            FROM player&lt;/span&gt;
&lt;span class="pl-s"&gt;            LEFT JOIN team ON ...&lt;/span&gt;
&lt;span class="pl-s"&gt;            LEFT JOIN round ON ...&lt;/span&gt;
&lt;span class="pl-s"&gt;            GROUP BY ...&lt;/span&gt;
&lt;span class="pl-s"&gt;            &lt;span class="pl-pds"&gt;"""&lt;/span&gt;&lt;/span&gt;
        &lt;span class="pl-k"&gt;return&lt;/span&gt; SQLRequest&lt;span class="pl-k"&gt;&amp;lt;&lt;/span&gt;PlayerInfo&lt;span class="pl-k"&gt;&amp;gt;&lt;/span&gt;(&lt;span class="pl-c1"&gt;sql&lt;/span&gt;: sql).&lt;span class="pl-smi"&gt;adapted&lt;/span&gt; { db &lt;span class="pl-k"&gt;in&lt;/span&gt;
            &lt;span class="pl-k"&gt;let&lt;/span&gt; adapters &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-k"&gt;try&lt;/span&gt; &lt;span class="pl-c1"&gt;splittingRowAdapters&lt;/span&gt;(&lt;span class="pl-c1"&gt;columnCounts&lt;/span&gt;: [
                Player.&lt;span class="pl-c1"&gt;numberOfSelectedColumns&lt;/span&gt;(db),
                Team.&lt;span class="pl-c1"&gt;numberOfSelectedColumns&lt;/span&gt;(db)])
            &lt;span class="pl-k"&gt;return&lt;/span&gt; &lt;span class="pl-c1"&gt;ScopeAdapter&lt;/span&gt;([
                Scopes.&lt;span class="pl-smi"&gt;player&lt;/span&gt;&lt;span class="pl-k"&gt;:&lt;/span&gt; adapters[&lt;span class="pl-c1"&gt;0&lt;/span&gt;],
                Scopes.&lt;span class="pl-smi"&gt;team&lt;/span&gt;&lt;span class="pl-k"&gt;:&lt;/span&gt; adapters[&lt;span class="pl-c1"&gt;1&lt;/span&gt;]])
        }
    }
    
    &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;///&lt;/span&gt; Fetches all player infos&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;    &lt;span class="pl-k"&gt;static&lt;/span&gt; &lt;span class="pl-k"&gt;func&lt;/span&gt; &lt;span class="pl-en"&gt;fetchAll&lt;/span&gt;(&lt;span class="pl-en"&gt;_&lt;/span&gt; &lt;span class="pl-smi"&gt;db&lt;/span&gt;: Database) &lt;span class="pl-k"&gt;throws&lt;/span&gt; &lt;span class="pl-k"&gt;-&amp;gt;&lt;/span&gt; [PlayerInfo] {
        &lt;span class="pl-k"&gt;return&lt;/span&gt; &lt;span class="pl-k"&gt;try&lt;/span&gt; &lt;span class="pl-c1"&gt;all&lt;/span&gt;().&lt;span class="pl-c1"&gt;fetchAll&lt;/span&gt;(db)
    }
}&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;It is now time to use our request:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Fetch player infos&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;&lt;span class="pl-k"&gt;let&lt;/span&gt; playerInfos &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-k"&gt;try&lt;/span&gt; dbQueue.&lt;span class="pl-smi"&gt;read&lt;/span&gt; { db &lt;span class="pl-k"&gt;in&lt;/span&gt;
    &lt;span class="pl-k"&gt;try&lt;/span&gt; PlayerInfo.&lt;span class="pl-c1"&gt;fetchAll&lt;/span&gt;(db)
}

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Track player infos with RxRGDB:&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;PlayerInfo.&lt;span class="pl-c1"&gt;all&lt;/span&gt;()
    .&lt;span class="pl-smi"&gt;rx&lt;/span&gt;.&lt;span class="pl-c1"&gt;fetchAll&lt;/span&gt;(&lt;span class="pl-c1"&gt;in&lt;/span&gt;: dbQueue)
    .&lt;span class="pl-c1"&gt;subscribe&lt;/span&gt;(&lt;span class="pl-c1"&gt;onNext&lt;/span&gt;: { (&lt;span class="pl-c1"&gt;playerInfos&lt;/span&gt;: [PlayerInfo]) &lt;span class="pl-k"&gt;in&lt;/span&gt;
        &lt;span class="pl-c1"&gt;print&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;Player infos have changed&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
    })&lt;/pre&gt;&lt;/div&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;g-emoji class="g-emoji" alias="bulb" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f4a1.png"&gt;💡&lt;/g-emoji&gt; In this chapter, we have learned how to define a custom request that can both fetch records from joined queries, and feed database observation tools.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3&gt;&lt;a id="user-content-splitting-rows-the-codable-way" class="anchor" aria-hidden="true" href="#splitting-rows-the-codable-way"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Splitting Rows, the Codable Way&lt;/h3&gt;
&lt;p&gt;&lt;a href="#codable-records"&gt;Codable Records&lt;/a&gt; build on top of the standard Decodable protocol in order to decode database rows.&lt;/p&gt;
&lt;p&gt;You can consume complex joined queries with Codable records as well. As a demonstration, we'll rewrite the &lt;a href="#splitting-rows-the-request-way"&gt;above&lt;/a&gt; sample code:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;struct&lt;/span&gt; &lt;span class="pl-en"&gt;Player&lt;/span&gt;: &lt;span class="pl-e"&gt;Decodable&lt;/span&gt;, &lt;span class="pl-e"&gt;FetchableRecord&lt;/span&gt;, &lt;span class="pl-e"&gt;TableRecord &lt;/span&gt;{
    &lt;span class="pl-k"&gt;var&lt;/span&gt; id&lt;span class="pl-k"&gt;:&lt;/span&gt; &lt;span class="pl-c1"&gt;Int64&lt;/span&gt;
    &lt;span class="pl-k"&gt;var&lt;/span&gt; name&lt;span class="pl-k"&gt;:&lt;/span&gt; &lt;span class="pl-c1"&gt;String&lt;/span&gt;
}
&lt;span class="pl-k"&gt;struct&lt;/span&gt; &lt;span class="pl-en"&gt;Team&lt;/span&gt;: &lt;span class="pl-e"&gt;Decodable&lt;/span&gt;, &lt;span class="pl-e"&gt;FetchableRecord&lt;/span&gt;, &lt;span class="pl-e"&gt;TableRecord &lt;/span&gt;{
    &lt;span class="pl-k"&gt;var&lt;/span&gt; id&lt;span class="pl-k"&gt;:&lt;/span&gt; &lt;span class="pl-c1"&gt;Int64&lt;/span&gt;
    &lt;span class="pl-k"&gt;var&lt;/span&gt; name&lt;span class="pl-k"&gt;:&lt;/span&gt; &lt;span class="pl-c1"&gt;String&lt;/span&gt;
    &lt;span class="pl-k"&gt;var&lt;/span&gt; color&lt;span class="pl-k"&gt;:&lt;/span&gt; Color
}
&lt;span class="pl-k"&gt;struct&lt;/span&gt; &lt;span class="pl-en"&gt;PlayerInfo&lt;/span&gt;: &lt;span class="pl-e"&gt;Decodable&lt;/span&gt;, &lt;span class="pl-e"&gt;FetchableRecord &lt;/span&gt;{
    &lt;span class="pl-k"&gt;var&lt;/span&gt; player&lt;span class="pl-k"&gt;:&lt;/span&gt; Player
    &lt;span class="pl-k"&gt;var&lt;/span&gt; team&lt;span class="pl-k"&gt;:&lt;/span&gt; Team&lt;span class="pl-k"&gt;?&lt;/span&gt;
    &lt;span class="pl-k"&gt;var&lt;/span&gt; maxScore&lt;span class="pl-k"&gt;:&lt;/span&gt; &lt;span class="pl-c1"&gt;Int&lt;/span&gt;
}

&lt;span class="pl-k"&gt;extension&lt;/span&gt; &lt;span class="pl-en"&gt;PlayerInfo&lt;/span&gt; {
    &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;///&lt;/span&gt; The request for all player infos&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;    &lt;span class="pl-k"&gt;static&lt;/span&gt; &lt;span class="pl-k"&gt;func&lt;/span&gt; &lt;span class="pl-en"&gt;all&lt;/span&gt;() &lt;span class="pl-k"&gt;-&amp;gt;&lt;/span&gt; AdaptedFetchRequest&amp;lt;SQLRequest&amp;lt;PlayerInfo&amp;gt;&amp;gt; {
        &lt;span class="pl-k"&gt;let&lt;/span&gt; sql &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"""&lt;/span&gt;&lt;/span&gt;
&lt;span class="pl-s"&gt;            SELECT&lt;/span&gt;
&lt;span class="pl-s"&gt;                &lt;span class="pl-pse"&gt;\(&lt;/span&gt;&lt;span class="pl-s1"&gt;Player.&lt;span class="pl-c1"&gt;selectionSQL&lt;/span&gt;()&lt;/span&gt;&lt;span class="pl-pse"&gt;&lt;span class="pl-s1"&gt;)&lt;/span&gt;&lt;/span&gt;,&lt;/span&gt;
&lt;span class="pl-s"&gt;                &lt;span class="pl-pse"&gt;\(&lt;/span&gt;&lt;span class="pl-s1"&gt;Team.&lt;span class="pl-c1"&gt;selectionSQL&lt;/span&gt;()&lt;/span&gt;&lt;span class="pl-pse"&gt;&lt;span class="pl-s1"&gt;)&lt;/span&gt;&lt;/span&gt;,&lt;/span&gt;
&lt;span class="pl-s"&gt;                MAX(round.score) AS maxScore&lt;/span&gt;
&lt;span class="pl-s"&gt;            FROM player&lt;/span&gt;
&lt;span class="pl-s"&gt;            LEFT JOIN team ON ...&lt;/span&gt;
&lt;span class="pl-s"&gt;            LEFT JOIN round ON ...&lt;/span&gt;
&lt;span class="pl-s"&gt;            GROUP BY ...&lt;/span&gt;
&lt;span class="pl-s"&gt;            &lt;span class="pl-pds"&gt;"""&lt;/span&gt;&lt;/span&gt;
        &lt;span class="pl-k"&gt;return&lt;/span&gt; SQLRequest&lt;span class="pl-k"&gt;&amp;lt;&lt;/span&gt;PlayerInfo&lt;span class="pl-k"&gt;&amp;gt;&lt;/span&gt;(&lt;span class="pl-c1"&gt;sql&lt;/span&gt;: sql).&lt;span class="pl-smi"&gt;adapted&lt;/span&gt; { db &lt;span class="pl-k"&gt;in&lt;/span&gt;
            &lt;span class="pl-k"&gt;let&lt;/span&gt; adapters &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-k"&gt;try&lt;/span&gt; &lt;span class="pl-c1"&gt;splittingRowAdapters&lt;/span&gt;(&lt;span class="pl-c1"&gt;columnCounts&lt;/span&gt;: [
                Player.&lt;span class="pl-c1"&gt;numberOfSelectedColumns&lt;/span&gt;(db),
                Team.&lt;span class="pl-c1"&gt;numberOfSelectedColumns&lt;/span&gt;(db)])
            &lt;span class="pl-k"&gt;return&lt;/span&gt; &lt;span class="pl-c1"&gt;ScopeAdapter&lt;/span&gt;([
                CodingKeys.&lt;span class="pl-smi"&gt;player&lt;/span&gt;.&lt;span class="pl-c1"&gt;stringValue&lt;/span&gt;&lt;span class="pl-k"&gt;:&lt;/span&gt; adapters[&lt;span class="pl-c1"&gt;0&lt;/span&gt;],
                CodingKeys.&lt;span class="pl-smi"&gt;team&lt;/span&gt;.&lt;span class="pl-c1"&gt;stringValue&lt;/span&gt;&lt;span class="pl-k"&gt;:&lt;/span&gt; adapters[&lt;span class="pl-c1"&gt;1&lt;/span&gt;]])
        }
    }
    
    &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;///&lt;/span&gt; Fetches all player infos&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;    &lt;span class="pl-k"&gt;static&lt;/span&gt; &lt;span class="pl-k"&gt;func&lt;/span&gt; &lt;span class="pl-en"&gt;fetchAll&lt;/span&gt;(&lt;span class="pl-en"&gt;_&lt;/span&gt; &lt;span class="pl-smi"&gt;db&lt;/span&gt;: Database) &lt;span class="pl-k"&gt;throws&lt;/span&gt; &lt;span class="pl-k"&gt;-&amp;gt;&lt;/span&gt; [PlayerInfo] {
        &lt;span class="pl-k"&gt;return&lt;/span&gt; &lt;span class="pl-k"&gt;try&lt;/span&gt; &lt;span class="pl-c1"&gt;all&lt;/span&gt;().&lt;span class="pl-c1"&gt;fetchAll&lt;/span&gt;(db)
    }
}

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Fetch player infos&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;&lt;span class="pl-k"&gt;let&lt;/span&gt; playerInfos &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-k"&gt;try&lt;/span&gt; dbQueue.&lt;span class="pl-smi"&gt;read&lt;/span&gt; { db &lt;span class="pl-k"&gt;in&lt;/span&gt;
    &lt;span class="pl-k"&gt;try&lt;/span&gt; PlayerInfo.&lt;span class="pl-c1"&gt;fetchAll&lt;/span&gt;(db)
}

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Track player infos with RxRGDB:&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;PlayerInfo.&lt;span class="pl-c1"&gt;all&lt;/span&gt;()
    .&lt;span class="pl-smi"&gt;rx&lt;/span&gt;.&lt;span class="pl-c1"&gt;fetchAll&lt;/span&gt;(&lt;span class="pl-c1"&gt;in&lt;/span&gt;: dbQueue)
    .&lt;span class="pl-c1"&gt;subscribe&lt;/span&gt;(&lt;span class="pl-c1"&gt;onNext&lt;/span&gt;: { (&lt;span class="pl-c1"&gt;playerInfos&lt;/span&gt;: [PlayerInfo]) &lt;span class="pl-k"&gt;in&lt;/span&gt;
        &lt;span class="pl-c1"&gt;print&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;Player infos have changed&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
    })&lt;/pre&gt;&lt;/div&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;g-emoji class="g-emoji" alias="bulb" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f4a1.png"&gt;💡&lt;/g-emoji&gt; In this chapter, we have learned how to use the &lt;code&gt;Decodable&lt;/code&gt; protocol and its associated &lt;code&gt;CodingKeys&lt;/code&gt; enum in order to dry up our code.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h1&gt;&lt;a id="user-content-database-changes-observation" class="anchor" aria-hidden="true" href="#database-changes-observation"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Database Changes Observation&lt;/h1&gt;
&lt;p&gt;&lt;strong&gt;SQLite notifies its host application of changes performed to the database, as well of transaction commits and rollbacks.&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;GRDB puts this SQLite feature to some good use, and lets you observe the database in various ways:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="#after-commit-hook"&gt;After Commit Hook&lt;/a&gt;: Handle successful transactions one by one.&lt;/li&gt;
&lt;li&gt;&lt;a href="#valueobservation-and-databaseregionobservation"&gt;ValueObservation and DatabaseRegionObservation&lt;/a&gt;: Automated tracking of database requests.&lt;/li&gt;
&lt;li&gt;&lt;a href="#transactionobserver-protocol"&gt;TransactionObserver Protocol&lt;/a&gt;: Low-level database observation.&lt;/li&gt;
&lt;li&gt;&lt;a href="http://github.com/groue/GRDBCombine"&gt;GRDBCombine&lt;/a&gt;: Automated tracking of database changes, with &lt;a href="https://developer.apple.com/documentation/combine" rel="nofollow"&gt;Combine&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;&lt;a href="http://github.com/RxSwiftCommunity/RxGRDB"&gt;RxGRDB&lt;/a&gt;: Automated tracking of database changes, with &lt;a href="https://github.com/ReactiveX/RxSwift"&gt;RxSwift&lt;/a&gt;.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Database observation requires that a single &lt;a href="#database-queues"&gt;database queue&lt;/a&gt; or &lt;a href="#database-pools"&gt;pool&lt;/a&gt; is kept open for all the duration of the database usage.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-after-commit-hook" class="anchor" aria-hidden="true" href="#after-commit-hook"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;After Commit Hook&lt;/h2&gt;
&lt;p&gt;When your application needs to make sure a specific database transaction has been successfully committed before it executes some work, use the &lt;code&gt;Database.afterNextTransactionCommit(_:)&lt;/code&gt; method.&lt;/p&gt;
&lt;p&gt;Its closure argument is called right after database changes have been successfully written to disk:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;try&lt;/span&gt; dbQueue.&lt;span class="pl-smi"&gt;write&lt;/span&gt; { db &lt;span class="pl-k"&gt;in&lt;/span&gt;
    db.&lt;span class="pl-smi"&gt;afterNextTransactionCommit&lt;/span&gt; { db &lt;span class="pl-k"&gt;in&lt;/span&gt;
        &lt;span class="pl-c1"&gt;print&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;success&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
    }
    &lt;span class="pl-k"&gt;...&lt;/span&gt;
} &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; prints "success"&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;The closure runs in a protected dispatch queue, serialized with all database updates.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;This "after commit hook" helps synchronizing the database with other resources, such as files, or system sensors.&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;In the example below, a &lt;a href="https://developer.apple.com/documentation/corelocation/cllocationmanager" rel="nofollow"&gt;location manager&lt;/a&gt; starts monitoring a CLRegion if and only if it has successfully been stored in the database:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;///&lt;/span&gt; Inserts a region in the database, and start monitoring upon&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;///&lt;/span&gt; successful insertion.&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;&lt;span class="pl-k"&gt;func&lt;/span&gt; &lt;span class="pl-en"&gt;startMonitoring&lt;/span&gt;(&lt;span class="pl-en"&gt;_&lt;/span&gt; &lt;span class="pl-smi"&gt;db&lt;/span&gt;: Database, &lt;span class="pl-smi"&gt;&lt;span class="pl-en"&gt;region&lt;/span&gt;&lt;/span&gt;: CLRegion) &lt;span class="pl-k"&gt;throws&lt;/span&gt; {
    &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Make sure database is inside a transaction&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;    &lt;span class="pl-k"&gt;try&lt;/span&gt; db.&lt;span class="pl-smi"&gt;inSavepoint&lt;/span&gt; {
        
        &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Save the region in the database&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;        &lt;span class="pl-k"&gt;try&lt;/span&gt; &lt;span class="pl-c1"&gt;insert&lt;/span&gt;(&lt;span class="pl-k"&gt;...&lt;/span&gt;)
        
        &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Start monitoring if and only if the insertion is&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;        &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; eventually committed&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;        db.&lt;span class="pl-smi"&gt;afterNextTransactionCommit&lt;/span&gt; { &lt;span class="pl-c1"&gt;_&lt;/span&gt; &lt;span class="pl-k"&gt;in&lt;/span&gt;
            &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; locationManager prefers the main queue:&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;            DispatchQueue.&lt;span class="pl-smi"&gt;main&lt;/span&gt;.&lt;span class="pl-smi"&gt;async&lt;/span&gt; {
                locationManager.&lt;span class="pl-c1"&gt;startMonitoring&lt;/span&gt;(&lt;span class="pl-c1"&gt;for&lt;/span&gt;: region)
            }
        }
        
        &lt;span class="pl-k"&gt;return&lt;/span&gt; .&lt;span class="pl-smi"&gt;commit&lt;/span&gt;
    }
}&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;The method above won't trigger the location manager if the transaction is eventually rollbacked (explicitly, or because of an error), as in the sample code below:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;try&lt;/span&gt; dbQueue.&lt;span class="pl-smi"&gt;write&lt;/span&gt; { db &lt;span class="pl-k"&gt;in&lt;/span&gt;
    &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; success&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;    &lt;span class="pl-k"&gt;try&lt;/span&gt; &lt;span class="pl-c1"&gt;startMonitoring&lt;/span&gt;(db, region)
    
    &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; On error, the transaction is rollbacked, the region is not inserted, and&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;    &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; the location manager is not invoked.&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;    &lt;span class="pl-k"&gt;try&lt;/span&gt; &lt;span class="pl-c1"&gt;failableMethod&lt;/span&gt;(db)
}&lt;/pre&gt;&lt;/div&gt;
&lt;h2&gt;&lt;a id="user-content-valueobservation-and-databaseregionobservation" class="anchor" aria-hidden="true" href="#valueobservation-and-databaseregionobservation"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;ValueObservation and DatabaseRegionObservation&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;ValueObservation and DatabaseRegionObservation&lt;/strong&gt; are two database observations tools that track changes in database &lt;a href="#requests"&gt;requests&lt;/a&gt;.&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Let's observe all players!&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;&lt;span class="pl-k"&gt;let&lt;/span&gt; request &lt;span class="pl-k"&gt;=&lt;/span&gt; Player.&lt;span class="pl-c1"&gt;all&lt;/span&gt;()&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;a href="#valueobservation"&gt;ValueObservation&lt;/a&gt; notifies your application with &lt;strong&gt;fresh values&lt;/strong&gt; (this is what most applications need &lt;g-emoji class="g-emoji" alias="+1" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f44d.png"&gt;👍&lt;/g-emoji&gt;):&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;let&lt;/span&gt; observation &lt;span class="pl-k"&gt;=&lt;/span&gt; ValueObservation.&lt;span class="pl-smi"&gt;tracking&lt;/span&gt; { db &lt;span class="pl-k"&gt;in&lt;/span&gt;
    &lt;span class="pl-k"&gt;try&lt;/span&gt; request.&lt;span class="pl-c1"&gt;fetchAll&lt;/span&gt;(db)
}
&lt;span class="pl-k"&gt;let&lt;/span&gt; observer &lt;span class="pl-k"&gt;=&lt;/span&gt; observation.&lt;span class="pl-c1"&gt;start&lt;/span&gt;(
    &lt;span class="pl-c1"&gt;in&lt;/span&gt;: dbQueue,
    &lt;span class="pl-c1"&gt;onError&lt;/span&gt;: { error &lt;span class="pl-k"&gt;in&lt;/span&gt;
        &lt;span class="pl-c1"&gt;print&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;fresh players could not be fetched&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
    },
    &lt;span class="pl-c1"&gt;onChange&lt;/span&gt;: { (&lt;span class="pl-c1"&gt;players&lt;/span&gt;: [Player]) &lt;span class="pl-k"&gt;in&lt;/span&gt;
        &lt;span class="pl-k"&gt;let&lt;/span&gt; names &lt;span class="pl-k"&gt;=&lt;/span&gt; players.&lt;span class="pl-c1"&gt;map&lt;/span&gt; { &lt;span class="pl-c1"&gt;$0&lt;/span&gt;.&lt;span class="pl-smi"&gt;name&lt;/span&gt; }.&lt;span class="pl-c1"&gt;joined&lt;/span&gt;(&lt;span class="pl-c1"&gt;separator&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;, &lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
        &lt;span class="pl-c1"&gt;print&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;Fresh players: &lt;span class="pl-pse"&gt;\(&lt;/span&gt;&lt;span class="pl-s1"&gt;names&lt;/span&gt;&lt;span class="pl-pse"&gt;&lt;span class="pl-s1"&gt;)&lt;/span&gt;&lt;/span&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
    })

&lt;span class="pl-k"&gt;try&lt;/span&gt; dbQueue.&lt;span class="pl-smi"&gt;write&lt;/span&gt; { db &lt;span class="pl-k"&gt;in&lt;/span&gt;
    &lt;span class="pl-k"&gt;try&lt;/span&gt; &lt;span class="pl-c1"&gt;Player&lt;/span&gt;(&lt;span class="pl-c1"&gt;name&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;Arthur&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;).&lt;span class="pl-c1"&gt;insert&lt;/span&gt;(db)
}
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Prints "Fresh players: Arthur, ..."&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;a href="#databaseregionobservation"&gt;DatabaseRegionObservation&lt;/a&gt; notifies your application with &lt;strong&gt;database connections&lt;/strong&gt;, right after an impactful database transaction has been committed (reserved for more advanced use cases &lt;g-emoji class="g-emoji" alias="nerd_face" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f913.png"&gt;🤓&lt;/g-emoji&gt;):&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;let&lt;/span&gt; observation &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;DatabaseRegionObservation&lt;/span&gt;(&lt;span class="pl-c1"&gt;tracking&lt;/span&gt;: request)
&lt;span class="pl-k"&gt;let&lt;/span&gt; observer &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-k"&gt;try&lt;/span&gt; observation.&lt;span class="pl-c1"&gt;start&lt;/span&gt;(&lt;span class="pl-c1"&gt;in&lt;/span&gt;: dbQueue) { (&lt;span class="pl-c1"&gt;db&lt;/span&gt;: Database) &lt;span class="pl-k"&gt;in&lt;/span&gt;
    &lt;span class="pl-c1"&gt;print&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;Players have changed.&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
}

&lt;span class="pl-k"&gt;try&lt;/span&gt; dbQueue.&lt;span class="pl-smi"&gt;write&lt;/span&gt; { db &lt;span class="pl-k"&gt;in&lt;/span&gt;
    &lt;span class="pl-k"&gt;try&lt;/span&gt; &lt;span class="pl-c1"&gt;Player&lt;/span&gt;(&lt;span class="pl-c1"&gt;name&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;Barbara&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;).&lt;span class="pl-c1"&gt;insert&lt;/span&gt;(db)
}
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Prints "Players have changed."&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="#valueobservation"&gt;ValueObservation&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#databaseregionobservation"&gt;DatabaseRegionObservation&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-valueobservation" class="anchor" aria-hidden="true" href="#valueobservation"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;ValueObservation&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;ValueObservation tracks changes in the results of database &lt;a href="#requests"&gt;requests&lt;/a&gt;, and notifies fresh values whenever the database changes.&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Changes are only notified after they have been committed in the database. No insertion, update, or deletion in tracked tables is missed. This includes indirect changes triggered by &lt;a href="https://www.sqlite.org/foreignkeys.html#fk_actions" rel="nofollow"&gt;foreign keys&lt;/a&gt; or &lt;a href="https://www.sqlite.org/lang_createtrigger.html" rel="nofollow"&gt;SQL triggers&lt;/a&gt;.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;&lt;a href="#valueobservation-usage"&gt;ValueObservation Usage&lt;/a&gt;&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#valueobservationtrackingvalue"&gt;ValueObservation.tracking(value:)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#valueobservationtracking_fetch"&gt;ValueObservation.tracking(_:fetch:)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#observationforcount-observationforall-observationforfirst"&gt;observationForCount, observationForAll, observationForFirst&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#valueobservation-transformations"&gt;ValueObservation Transformations&lt;/a&gt;: &lt;a href="#valueobservationmap"&gt;map&lt;/a&gt;, &lt;a href="#valueobservationcompactmap"&gt;compactMap&lt;/a&gt;, ...&lt;/li&gt;
&lt;li&gt;&lt;a href="#valueobservation-error-handling"&gt;ValueObservation Error Handling&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#valueobservation-options"&gt;ValueObservation Options&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#advanced-valueobservationtracking_reducer"&gt;Advanced: ValueObservation.tracking(_:reducer:)&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;&lt;a id="user-content-valueobservation-usage" class="anchor" aria-hidden="true" href="#valueobservation-usage"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;ValueObservation Usage&lt;/h3&gt;
&lt;p&gt;Here is a typical UIViewController which observes the database in order to keep its view up-to-date:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;class&lt;/span&gt; &lt;span class="pl-en"&gt;PlayerViewController&lt;/span&gt;: &lt;span class="pl-e"&gt;UIViewController &lt;/span&gt;{
    &lt;span class="pl-k"&gt;@IBOutlet&lt;/span&gt; &lt;span class="pl-k"&gt;weak&lt;/span&gt; &lt;span class="pl-k"&gt;var&lt;/span&gt; nameLabel&lt;span class="pl-k"&gt;:&lt;/span&gt; UILabel&lt;span class="pl-k"&gt;!&lt;/span&gt;
    &lt;span class="pl-k"&gt;private&lt;/span&gt; &lt;span class="pl-k"&gt;var&lt;/span&gt; observer&lt;span class="pl-k"&gt;:&lt;/span&gt; TransactionObserver&lt;span class="pl-k"&gt;?&lt;/span&gt;
    
    &lt;span class="pl-k"&gt;override&lt;/span&gt; &lt;span class="pl-k"&gt;func&lt;/span&gt; &lt;span class="pl-en"&gt;viewWillAppear&lt;/span&gt;(&lt;span class="pl-en"&gt;_&lt;/span&gt; &lt;span class="pl-smi"&gt;animated&lt;/span&gt;: &lt;span class="pl-c1"&gt;Bool&lt;/span&gt;) {
        &lt;span class="pl-c1"&gt;super&lt;/span&gt;.&lt;span class="pl-c1"&gt;viewWillAppear&lt;/span&gt;(animated)
        
        &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Define a ValueObservation which tracks a player&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;        &lt;span class="pl-k"&gt;let&lt;/span&gt; observation &lt;span class="pl-k"&gt;=&lt;/span&gt; ValueObservation.&lt;span class="pl-smi"&gt;tracking&lt;/span&gt; { db &lt;span class="pl-k"&gt;in&lt;/span&gt;
            &lt;span class="pl-k"&gt;try&lt;/span&gt; Player.&lt;span class="pl-c1"&gt;fetchOne&lt;/span&gt;(db, &lt;span class="pl-c1"&gt;key&lt;/span&gt;: &lt;span class="pl-c1"&gt;42&lt;/span&gt;)
        }
        
        &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Start observing the database&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;        observer &lt;span class="pl-k"&gt;=&lt;/span&gt; observation.&lt;span class="pl-c1"&gt;start&lt;/span&gt;(
            &lt;span class="pl-c1"&gt;in&lt;/span&gt;: dbQueue,
            &lt;span class="pl-c1"&gt;onError&lt;/span&gt;: { error &lt;span class="pl-k"&gt;in&lt;/span&gt;
                &lt;span class="pl-c1"&gt;print&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;player could not be fetched&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
            },
            &lt;span class="pl-c1"&gt;onChange&lt;/span&gt;: { [&lt;span class="pl-k"&gt;weak&lt;/span&gt; &lt;span class="pl-c1"&gt;self&lt;/span&gt;] (&lt;span class="pl-c1"&gt;player&lt;/span&gt;: Player&lt;span class="pl-k"&gt;?&lt;/span&gt;) &lt;span class="pl-k"&gt;in&lt;/span&gt;
                &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Player has been refreshed: update view&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;                &lt;span class="pl-k"&gt;guard&lt;/span&gt; &lt;span class="pl-k"&gt;let&lt;/span&gt; &lt;span class="pl-c1"&gt;self&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;self&lt;/span&gt; &lt;span class="pl-k"&gt;else&lt;/span&gt; { &lt;span class="pl-k"&gt;return&lt;/span&gt; }
                &lt;span class="pl-c1"&gt;self&lt;/span&gt;.&lt;span class="pl-smi"&gt;nameLabel&lt;/span&gt;.&lt;span class="pl-c1"&gt;text&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; player&lt;span class="pl-k"&gt;?&lt;/span&gt;.&lt;span class="pl-smi"&gt;name&lt;/span&gt;
            })
    }
    
    &lt;span class="pl-k"&gt;override&lt;/span&gt; &lt;span class="pl-k"&gt;func&lt;/span&gt; &lt;span class="pl-en"&gt;viewWillDisappear&lt;/span&gt;(&lt;span class="pl-en"&gt;_&lt;/span&gt; &lt;span class="pl-smi"&gt;animated&lt;/span&gt;: &lt;span class="pl-c1"&gt;Bool&lt;/span&gt;) {
        &lt;span class="pl-c1"&gt;super&lt;/span&gt;.&lt;span class="pl-c1"&gt;viewWillDisappear&lt;/span&gt;(animated)
        
        &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Stop observing the database&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;        observer &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;nil&lt;/span&gt;
    }
}&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;By default, all values and errors are notified on the main queue. Views can be updated right from the &lt;code&gt;onChange&lt;/code&gt; callback.&lt;/p&gt;
&lt;p&gt;By default, an initial fetch is performed as soon as the observation starts: the view is set up and ready when the &lt;code&gt;viewWillAppear&lt;/code&gt; method returns.&lt;/p&gt;
&lt;p&gt;The observer returned by the &lt;code&gt;start&lt;/code&gt; method is stored in a property of the view controller. This allows the view controller to control the duration of the observation. When the observer is deallocated, the observation stops. Meanwhile, all transactions that modify the observed player are notified, and the &lt;code&gt;nameLabel&lt;/code&gt; is kept up-to-date.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;g-emoji class="g-emoji" alias="bulb" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f4a1.png"&gt;💡&lt;/g-emoji&gt; &lt;strong&gt;Tip&lt;/strong&gt;: see the &lt;a href="Documentation/DemoApps/GRDBDemoiOS/README.md"&gt;Demo Application&lt;/a&gt; for a sample app that uses ValueObservation.&lt;/p&gt;
&lt;p&gt;&lt;g-emoji class="g-emoji" alias="bulb" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f4a1.png"&gt;💡&lt;/g-emoji&gt; &lt;strong&gt;Tip&lt;/strong&gt;: When fetching values is slow, and should never ever block the main queue, opt in for async notifications:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;override&lt;/span&gt; &lt;span class="pl-k"&gt;func&lt;/span&gt; &lt;span class="pl-en"&gt;viewWillAppear&lt;/span&gt;(&lt;span class="pl-en"&gt;_&lt;/span&gt; &lt;span class="pl-smi"&gt;animated&lt;/span&gt;: &lt;span class="pl-c1"&gt;Bool&lt;/span&gt;) {
    &lt;span class="pl-c1"&gt;super&lt;/span&gt;.&lt;span class="pl-c1"&gt;viewWillAppear&lt;/span&gt;(animated)
    
    &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Define a ValueObservation which tracks a player&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;    &lt;span class="pl-k"&gt;let&lt;/span&gt; observation &lt;span class="pl-k"&gt;=&lt;/span&gt; ValueObservation.&lt;span class="pl-smi"&gt;tracking&lt;/span&gt; { db &lt;span class="pl-k"&gt;in&lt;/span&gt;
        &lt;span class="pl-k"&gt;try&lt;/span&gt; Player.&lt;span class="pl-c1"&gt;fetchOne&lt;/span&gt;(db, &lt;span class="pl-c1"&gt;key&lt;/span&gt;: &lt;span class="pl-c1"&gt;42&lt;/span&gt;)
    }

    &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Observation is asynchronous&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;    observation.&lt;span class="pl-smi"&gt;scheduling&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; .&lt;span class="pl-c1"&gt;async&lt;/span&gt;(&lt;span class="pl-c1"&gt;onQueue&lt;/span&gt;: .&lt;span class="pl-smi"&gt;main&lt;/span&gt;, &lt;span class="pl-c1"&gt;startImmediately&lt;/span&gt;: &lt;span class="pl-c1"&gt;true&lt;/span&gt;)

    &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Start observing the database&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;    observer &lt;span class="pl-k"&gt;=&lt;/span&gt; observation.&lt;span class="pl-c1"&gt;start&lt;/span&gt;(
        &lt;span class="pl-c1"&gt;in&lt;/span&gt;: dbQueue,
        &lt;span class="pl-c1"&gt;onError&lt;/span&gt;: { error &lt;span class="pl-k"&gt;in&lt;/span&gt;
            &lt;span class="pl-c1"&gt;print&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;player could not be fetched&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
        },
        &lt;span class="pl-c1"&gt;onChange&lt;/span&gt;: { [&lt;span class="pl-k"&gt;weak&lt;/span&gt; &lt;span class="pl-c1"&gt;self&lt;/span&gt;] (&lt;span class="pl-c1"&gt;player&lt;/span&gt;: Player&lt;span class="pl-k"&gt;?&lt;/span&gt;) &lt;span class="pl-k"&gt;in&lt;/span&gt;
            &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Player has been refreshed: update view&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;            &lt;span class="pl-k"&gt;guard&lt;/span&gt; &lt;span class="pl-k"&gt;let&lt;/span&gt; &lt;span class="pl-c1"&gt;self&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;self&lt;/span&gt; &lt;span class="pl-k"&gt;else&lt;/span&gt; { &lt;span class="pl-k"&gt;return&lt;/span&gt; }
            &lt;span class="pl-c1"&gt;self&lt;/span&gt;.&lt;span class="pl-smi"&gt;activityIndicator&lt;/span&gt;.&lt;span class="pl-c1"&gt;stopAnimating&lt;/span&gt;()
            &lt;span class="pl-c1"&gt;self&lt;/span&gt;.&lt;span class="pl-smi"&gt;nameLabel&lt;/span&gt;.&lt;span class="pl-c1"&gt;text&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; player&lt;span class="pl-k"&gt;?&lt;/span&gt;.&lt;span class="pl-smi"&gt;name&lt;/span&gt;
        })

    &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Wait for player&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;    activityIndicator.&lt;span class="pl-c1"&gt;startAnimating&lt;/span&gt;()
    nameLabel.&lt;span class="pl-c1"&gt;text&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;nil&lt;/span&gt;
}&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;See &lt;a href="#valueobservationscheduling"&gt;ValueObservation.scheduling&lt;/a&gt; for more information.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3&gt;&lt;a id="user-content-valueobservationtrackingvalue" class="anchor" aria-hidden="true" href="#valueobservationtrackingvalue"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;ValueObservation.tracking(value:)&lt;/h3&gt;
&lt;p&gt;In order to observe database values, you will generally define a &lt;strong&gt;ValueObservation&lt;/strong&gt; which tracks the value you are interested in, and then start the observation.&lt;/p&gt;
&lt;p&gt;For example:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Track changes in a single player&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;&lt;span class="pl-k"&gt;let&lt;/span&gt; observation &lt;span class="pl-k"&gt;=&lt;/span&gt; ValueObservation.&lt;span class="pl-smi"&gt;tracking&lt;/span&gt; { db &lt;span class="pl-k"&gt;in&lt;/span&gt;
    &lt;span class="pl-k"&gt;try&lt;/span&gt; Player.&lt;span class="pl-c1"&gt;fetchOne&lt;/span&gt;(db, &lt;span class="pl-c1"&gt;key&lt;/span&gt;: &lt;span class="pl-c1"&gt;42&lt;/span&gt;)
}

observer &lt;span class="pl-k"&gt;=&lt;/span&gt; observation.&lt;span class="pl-c1"&gt;start&lt;/span&gt;(
    &lt;span class="pl-c1"&gt;in&lt;/span&gt;: dbQueue,
    &lt;span class="pl-c1"&gt;onError&lt;/span&gt;: { error &lt;span class="pl-k"&gt;in&lt;/span&gt; &lt;span class="pl-k"&gt;...&lt;/span&gt; },
    &lt;span class="pl-c1"&gt;onChange&lt;/span&gt;: { (&lt;span class="pl-c1"&gt;player&lt;/span&gt;: Player&lt;span class="pl-k"&gt;?&lt;/span&gt;) &lt;span class="pl-k"&gt;in&lt;/span&gt;
        &lt;span class="pl-c1"&gt;print&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;Fresh player: &lt;span class="pl-pse"&gt;\(&lt;/span&gt;&lt;span class="pl-s1"&gt;player&lt;/span&gt;&lt;span class="pl-pse"&gt;&lt;span class="pl-s1"&gt;)&lt;/span&gt;&lt;/span&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
    })&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;strong&gt;You can observe several requests and several tables if you need&lt;/strong&gt;: all writes that have an impact on the fetched values will trigger the observation, and call the &lt;code&gt;onChange&lt;/code&gt; function.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;It may happen that such an observation notifies identical consecutive values.&lt;/strong&gt; This is because it will fetch a fresh value whenever a change &lt;em&gt;could&lt;/em&gt; happen. For example, the observation for the maximum player score will notify a fresh value everytime a score is changed, inserted, or deleted, even if the maximum score is unchanged:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Track changes in the maximum player score&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; This observation may notify duplicate values&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;&lt;span class="pl-k"&gt;let&lt;/span&gt; observation &lt;span class="pl-k"&gt;=&lt;/span&gt; ValueObservation.&lt;span class="pl-smi"&gt;tracking&lt;/span&gt; { db &lt;span class="pl-k"&gt;in&lt;/span&gt;
    &lt;span class="pl-k"&gt;try&lt;/span&gt; Player.&lt;span class="pl-c1"&gt;select&lt;/span&gt;(&lt;span class="pl-c1"&gt;max&lt;/span&gt;(&lt;span class="pl-c1"&gt;Column&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;score&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)), &lt;span class="pl-c1"&gt;as&lt;/span&gt;: &lt;span class="pl-c1"&gt;Int&lt;/span&gt;.&lt;span class="pl-k"&gt;self&lt;/span&gt;).&lt;span class="pl-c1"&gt;fetchOne&lt;/span&gt;(db)
}&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;You can filter out those duplicates with the &lt;a href="#valueobservationremoveduplicates"&gt;ValueObservation.removeDuplicates&lt;/a&gt; method. It requires the observed value to adopt the Equatable protocol:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;let&lt;/span&gt; observation &lt;span class="pl-k"&gt;=&lt;/span&gt; ValueObservation
    .&lt;span class="pl-smi"&gt;tracking&lt;/span&gt; { db &lt;span class="pl-k"&gt;in&lt;/span&gt;
        &lt;span class="pl-k"&gt;try&lt;/span&gt; Player.&lt;span class="pl-c1"&gt;select&lt;/span&gt;(&lt;span class="pl-c1"&gt;max&lt;/span&gt;(&lt;span class="pl-c1"&gt;Column&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;score&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)), &lt;span class="pl-c1"&gt;as&lt;/span&gt;: &lt;span class="pl-c1"&gt;Int&lt;/span&gt;.&lt;span class="pl-k"&gt;self&lt;/span&gt;).&lt;span class="pl-c1"&gt;fetchOne&lt;/span&gt;(db)
    }
    .&lt;span class="pl-c1"&gt;removeDuplicates&lt;/span&gt;()&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;We will see below other ways to define observations. They all add a little convenience, or optimization.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-valueobservationtracking_fetch" class="anchor" aria-hidden="true" href="#valueobservationtracking_fetch"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;ValueObservation.tracking(_:fetch:)&lt;/h3&gt;
&lt;p&gt;The &lt;code&gt;ValueObservation.tracking(_:fetch:)&lt;/code&gt; method is an &lt;strong&gt;optimized&lt;/strong&gt; version of the &lt;a href="#valueobservationtrackingvalue"&gt;&lt;code&gt;ValueObservation.tracking(value:)&lt;/code&gt;&lt;/a&gt; method seen above.&lt;/p&gt;
&lt;p&gt;The returned observation ouputs exactly the same results, but it can perform better when you use a &lt;a href="#database-pools"&gt;database pool&lt;/a&gt;, and the fetch is slow. It reduces write contention by fetching fresh values without blocking write accesses. When you use a &lt;a href="#database-queues"&gt;database queue&lt;/a&gt;, no optimization is applied.&lt;/p&gt;
&lt;p&gt;It accepts two arguments:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;A list of observed requests.&lt;/li&gt;
&lt;li&gt;A closure that fetches a fresh value whenever one of the observed requests are modified.&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;Changes that happen outside of the observed requests are ignored, so make sure you fully cover the database region you want to observe. This is the price you pay for the optimization.&lt;/p&gt;
&lt;p&gt;Let's give a practical example, and observe the "Hall of Fame":&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;struct&lt;/span&gt; &lt;span class="pl-en"&gt;HallOfFame&lt;/span&gt; {
    &lt;span class="pl-k"&gt;var&lt;/span&gt; totalPlayerCount&lt;span class="pl-k"&gt;:&lt;/span&gt; &lt;span class="pl-c1"&gt;Int&lt;/span&gt;
    &lt;span class="pl-k"&gt;var&lt;/span&gt; bestPlayers&lt;span class="pl-k"&gt;:&lt;/span&gt; [Player]
}

&lt;span class="pl-k"&gt;extension&lt;/span&gt; &lt;span class="pl-en"&gt;HallOfFame&lt;/span&gt; {
    &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;///&lt;/span&gt; Fetch the HallOfFame&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;    &lt;span class="pl-k"&gt;static&lt;/span&gt; &lt;span class="pl-c1"&gt;fetch&lt;/span&gt;(&lt;span class="pl-c1"&gt;_&lt;/span&gt; db&lt;span class="pl-k"&gt;:&lt;/span&gt; Database) &lt;span class="pl-k"&gt;throws&lt;/span&gt; &lt;span class="pl-k"&gt;-&amp;gt;&lt;/span&gt; HallOfFame {
        &lt;span class="pl-k"&gt;let&lt;/span&gt; totalPlayerCount &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-k"&gt;try&lt;/span&gt; Player.&lt;span class="pl-c1"&gt;fetchCount&lt;/span&gt;(db)
        &lt;span class="pl-k"&gt;let&lt;/span&gt; bestPlayers &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-k"&gt;try&lt;/span&gt; Player
            .&lt;span class="pl-c1"&gt;order&lt;/span&gt;(&lt;span class="pl-c1"&gt;Column&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;score&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;).&lt;span class="pl-smi"&gt;desc&lt;/span&gt;)
            .&lt;span class="pl-c1"&gt;limit&lt;/span&gt;(&lt;span class="pl-c1"&gt;10&lt;/span&gt;)
            .&lt;span class="pl-c1"&gt;fetchAll&lt;/span&gt;(db)
        &lt;span class="pl-k"&gt;return&lt;/span&gt; &lt;span class="pl-c1"&gt;HallOfFame&lt;/span&gt;(
            &lt;span class="pl-c1"&gt;totalPlayerCount&lt;/span&gt;: totalPlayerCount,
            &lt;span class="pl-c1"&gt;bestPlayers&lt;/span&gt;: bestPlayers)
    }
}&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;In order to track changes in the Hall of Fame in an optimized way, we see that any change to the &lt;code&gt;player&lt;/code&gt; table can impact the Hall of Fame. We thus track the request for all players, &lt;code&gt;Player.all()&lt;/code&gt;, and fetch a new Hall of Fame whenever players change:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;let&lt;/span&gt; observation &lt;span class="pl-k"&gt;=&lt;/span&gt; ValueObservation.&lt;span class="pl-c1"&gt;tracking&lt;/span&gt;(Player.&lt;span class="pl-c1"&gt;all&lt;/span&gt;(), &lt;span class="pl-c1"&gt;fetch&lt;/span&gt;: { db &lt;span class="pl-k"&gt;in&lt;/span&gt;
    &lt;span class="pl-k"&gt;try&lt;/span&gt; HallOfFame.&lt;span class="pl-c1"&gt;fetch&lt;/span&gt;(db)
})&lt;/pre&gt;&lt;/div&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;g-emoji class="g-emoji" alias="point_up" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/261d.png"&gt;☝️&lt;/g-emoji&gt; &lt;strong&gt;Note&lt;/strong&gt;: the initial parameter of &lt;code&gt;ValueObservation.tracking(_:fetch:)&lt;/code&gt; can be fed with requests, and generally speaking, values that adopt the &lt;a href="#the-databaseregionconvertible-protocol"&gt;DatabaseRegionConvertible&lt;/a&gt; protocol.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3&gt;&lt;a id="user-content-observationforcount-observationforall-observationforfirst" class="anchor" aria-hidden="true" href="#observationforcount-observationforall-observationforfirst"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;observationForCount, observationForAll, observationForFirst&lt;/h3&gt;
&lt;p&gt;Given a &lt;a href="#requests"&gt;request&lt;/a&gt;, even a &lt;a href="#custom-requests"&gt;custom request&lt;/a&gt;, you can observe its number of results, all results, or the first one:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;request.&lt;span class="pl-c1"&gt;observationForCount&lt;/span&gt;()
request.&lt;span class="pl-c1"&gt;observationForAll&lt;/span&gt;()
request.&lt;span class="pl-c1"&gt;observationForFirst&lt;/span&gt;()&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Those observations are equivalent to the following ones, defined with &lt;a href="#valueobservationtrackingvalue"&gt;&lt;code&gt;ValueObservation.tracking(value:)&lt;/code&gt;&lt;/a&gt;:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;ValueObservation.&lt;span class="pl-smi"&gt;tracking&lt;/span&gt; { db &lt;span class="pl-k"&gt;in&lt;/span&gt; &lt;span class="pl-k"&gt;try&lt;/span&gt; request.&lt;span class="pl-c1"&gt;fetchCount&lt;/span&gt;(db) }
ValueObservation.&lt;span class="pl-smi"&gt;tracking&lt;/span&gt; { db &lt;span class="pl-k"&gt;in&lt;/span&gt; &lt;span class="pl-k"&gt;try&lt;/span&gt; request.&lt;span class="pl-c1"&gt;fetchAll&lt;/span&gt;(db) }
ValueObservation.&lt;span class="pl-smi"&gt;tracking&lt;/span&gt; { db &lt;span class="pl-k"&gt;in&lt;/span&gt; &lt;span class="pl-k"&gt;try&lt;/span&gt; request.&lt;span class="pl-c1"&gt;fetchOne&lt;/span&gt;(db) }&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Yet they are &lt;strong&gt;optimized&lt;/strong&gt;:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;They perform a filtering of consecutive identical values, based on raw database values, so that you are not notified of database changes that do not impact the result of the request.&lt;/li&gt;
&lt;li&gt;They can perform better when you use a &lt;a href="#database-pools"&gt;database pool&lt;/a&gt;, and the fetch is slow.&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;&lt;a id="user-content-valueobservation-transformations" class="anchor" aria-hidden="true" href="#valueobservation-transformations"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;ValueObservation Transformations&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="#valueobservationmap"&gt;ValueObservation.map&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#valueobservationcompactmap"&gt;ValueObservation.compactMap&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#valueobservationremoveduplicates"&gt;ValueObservation.removeDuplicates&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#valueobservationcombine"&gt;ValueObservation.combine(...)&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h4&gt;&lt;a id="user-content-valueobservationmap" class="anchor" aria-hidden="true" href="#valueobservationmap"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;ValueObservation.map&lt;/h4&gt;
&lt;p&gt;The &lt;code&gt;map&lt;/code&gt; method lets you transform the values notified by a ValueObservation.&lt;/p&gt;
&lt;p&gt;For example:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Observe a player's profile image&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;&lt;span class="pl-k"&gt;let&lt;/span&gt; observation &lt;span class="pl-k"&gt;=&lt;/span&gt; ValueObservation
    .&lt;span class="pl-smi"&gt;tracking&lt;/span&gt; { db &lt;span class="pl-k"&gt;in&lt;/span&gt; &lt;span class="pl-k"&gt;try&lt;/span&gt; Player.&lt;span class="pl-c1"&gt;fetchOne&lt;/span&gt;(db, &lt;span class="pl-c1"&gt;key&lt;/span&gt;: &lt;span class="pl-c1"&gt;42&lt;/span&gt;) }
    .&lt;span class="pl-c1"&gt;map&lt;/span&gt; { player &lt;span class="pl-k"&gt;in&lt;/span&gt; player&lt;span class="pl-k"&gt;?&lt;/span&gt;.&lt;span class="pl-c1"&gt;image&lt;/span&gt; }

&lt;span class="pl-k"&gt;let&lt;/span&gt; observer &lt;span class="pl-k"&gt;=&lt;/span&gt; observation.&lt;span class="pl-c1"&gt;start&lt;/span&gt;(
    &lt;span class="pl-c1"&gt;in&lt;/span&gt;: dbQueue,
    &lt;span class="pl-c1"&gt;onError&lt;/span&gt;: { error &lt;span class="pl-k"&gt;in&lt;/span&gt; &lt;span class="pl-k"&gt;...&lt;/span&gt; },
    &lt;span class="pl-c1"&gt;onChange&lt;/span&gt;: { (&lt;span class="pl-c1"&gt;image&lt;/span&gt;: UIImage&lt;span class="pl-k"&gt;?&lt;/span&gt;) &lt;span class="pl-k"&gt;in&lt;/span&gt;
        &lt;span class="pl-c1"&gt;print&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;Player picture has changed&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
    })&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;The transformation closure does not run on the main queue, and is suitable for heavy computations.&lt;/p&gt;
&lt;h4&gt;&lt;a id="user-content-valueobservationcompactmap" class="anchor" aria-hidden="true" href="#valueobservationcompactmap"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;ValueObservation.compactMap&lt;/h4&gt;
&lt;p&gt;The &lt;code&gt;compactMap&lt;/code&gt; method lets you transform and filter the values notified by a ValueObservation. Only non-nil transformed values are notified.&lt;/p&gt;
&lt;p&gt;For example:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Observe a player&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;&lt;span class="pl-k"&gt;let&lt;/span&gt; observation &lt;span class="pl-k"&gt;=&lt;/span&gt; ValueObservation
    .&lt;span class="pl-smi"&gt;tracking&lt;/span&gt; { db &lt;span class="pl-k"&gt;in&lt;/span&gt; &lt;span class="pl-k"&gt;try&lt;/span&gt; Player.&lt;span class="pl-c1"&gt;fetchOne&lt;/span&gt;(db, &lt;span class="pl-c1"&gt;key&lt;/span&gt;: &lt;span class="pl-c1"&gt;42&lt;/span&gt;) }
    .&lt;span class="pl-smi"&gt;compactMap&lt;/span&gt; { &lt;span class="pl-c1"&gt;$0&lt;/span&gt; }
    
&lt;span class="pl-k"&gt;let&lt;/span&gt; observer &lt;span class="pl-k"&gt;=&lt;/span&gt; observation.&lt;span class="pl-c1"&gt;start&lt;/span&gt;(
    &lt;span class="pl-c1"&gt;in&lt;/span&gt;: dbQueue,
    &lt;span class="pl-c1"&gt;onError&lt;/span&gt;: { error &lt;span class="pl-k"&gt;in&lt;/span&gt; &lt;span class="pl-k"&gt;...&lt;/span&gt; },
    &lt;span class="pl-c1"&gt;onChange&lt;/span&gt;: { (&lt;span class="pl-c1"&gt;player&lt;/span&gt;: Player) &lt;span class="pl-k"&gt;in&lt;/span&gt;
        &lt;span class="pl-c1"&gt;print&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;Player name: &lt;span class="pl-pse"&gt;\(&lt;/span&gt;&lt;span class="pl-s1"&gt;player.&lt;span class="pl-smi"&gt;name&lt;/span&gt;&lt;/span&gt;&lt;span class="pl-pse"&gt;&lt;span class="pl-s1"&gt;)&lt;/span&gt;&lt;/span&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
    })&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;The transformation closure does not run on the main queue, and is suitable for heavy computations.&lt;/p&gt;
&lt;h4&gt;&lt;a id="user-content-valueobservationremoveduplicates" class="anchor" aria-hidden="true" href="#valueobservationremoveduplicates"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;ValueObservation.removeDuplicates&lt;/h4&gt;
&lt;p&gt;The &lt;code&gt;removeDuplicates&lt;/code&gt; method filters out the consecutive equal values notified by a ValueObservation. The observed values must adopt the standard Equatable protocol.&lt;/p&gt;
&lt;p&gt;For example:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;let&lt;/span&gt; observation &lt;span class="pl-k"&gt;=&lt;/span&gt; ValueObservation
    .&lt;span class="pl-smi"&gt;tracking&lt;/span&gt; { db &lt;span class="pl-k"&gt;in&lt;/span&gt; &lt;span class="pl-k"&gt;try&lt;/span&gt; Player.&lt;span class="pl-c1"&gt;fetchOne&lt;/span&gt;(db, &lt;span class="pl-c1"&gt;key&lt;/span&gt;: &lt;span class="pl-c1"&gt;42&lt;/span&gt;) }
    .&lt;span class="pl-c1"&gt;removeDuplicates&lt;/span&gt;()

&lt;span class="pl-k"&gt;let&lt;/span&gt; observer &lt;span class="pl-k"&gt;=&lt;/span&gt; observation.&lt;span class="pl-c1"&gt;start&lt;/span&gt;(
    &lt;span class="pl-c1"&gt;in&lt;/span&gt;: dbQueue,
    &lt;span class="pl-c1"&gt;onError&lt;/span&gt;: { error &lt;span class="pl-k"&gt;in&lt;/span&gt; &lt;span class="pl-k"&gt;...&lt;/span&gt; },
    &lt;span class="pl-c1"&gt;onChange&lt;/span&gt;: { (&lt;span class="pl-c1"&gt;player&lt;/span&gt;: Player) &lt;span class="pl-k"&gt;in&lt;/span&gt;
        &lt;span class="pl-c1"&gt;print&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;Player: &lt;span class="pl-pse"&gt;\(&lt;/span&gt;&lt;span class="pl-s1"&gt;player&lt;/span&gt;&lt;span class="pl-pse"&gt;&lt;span class="pl-s1"&gt;)&lt;/span&gt;&lt;/span&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
    })&lt;/pre&gt;&lt;/div&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;g-emoji class="g-emoji" alias="point_up" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/261d.png"&gt;☝️&lt;/g-emoji&gt; &lt;strong&gt;Note&lt;/strong&gt;: the observations returned by the &lt;a href="#observationforcount-observationforall-observationforfirst"&gt;observationForCount, observationForAll, observationForFirst&lt;/a&gt; methods already perform a similar filtering, based on raw database values.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h4&gt;&lt;a id="user-content-valueobservationcombine" class="anchor" aria-hidden="true" href="#valueobservationcombine"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;ValueObservation.combine(...)&lt;/h4&gt;
&lt;p&gt;The &lt;code&gt;ValueObservation.combine(...)&lt;/code&gt; method builds a single observation from several:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Two base observations&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;&lt;span class="pl-k"&gt;let&lt;/span&gt; playerCountObservation &lt;span class="pl-k"&gt;=&lt;/span&gt; ValueObservation.&lt;span class="pl-smi"&gt;tracking&lt;/span&gt; { db &lt;span class="pl-k"&gt;in&lt;/span&gt;
    &lt;span class="pl-k"&gt;try&lt;/span&gt; Player.&lt;span class="pl-c1"&gt;fetchCount&lt;/span&gt;(db)
}
&lt;span class="pl-k"&gt;let&lt;/span&gt; bestPlayersObservation &lt;span class="pl-k"&gt;=&lt;/span&gt; ValueObservation.&lt;span class="pl-smi"&gt;tracking&lt;/span&gt; { db &lt;span class="pl-k"&gt;in&lt;/span&gt;
    &lt;span class="pl-k"&gt;try&lt;/span&gt; Player
        .&lt;span class="pl-c1"&gt;limit&lt;/span&gt;(&lt;span class="pl-c1"&gt;10&lt;/span&gt;)
        .&lt;span class="pl-c1"&gt;order&lt;/span&gt;(&lt;span class="pl-c1"&gt;Column&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;score&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;).&lt;span class="pl-smi"&gt;desc&lt;/span&gt;)
        .&lt;span class="pl-c1"&gt;fetchAll&lt;/span&gt;(db)
}

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; The combined observation&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;&lt;span class="pl-k"&gt;let&lt;/span&gt; observation &lt;span class="pl-k"&gt;=&lt;/span&gt; ValueObservation.&lt;span class="pl-c1"&gt;combine&lt;/span&gt;(
    playerCountObservation, 
    bestPlayersObservation)
    
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Start tracking the hall of fame&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;&lt;span class="pl-k"&gt;let&lt;/span&gt; observer &lt;span class="pl-k"&gt;=&lt;/span&gt; observation.&lt;span class="pl-c1"&gt;start&lt;/span&gt;(
    &lt;span class="pl-c1"&gt;in&lt;/span&gt;: dbQueue,
    &lt;span class="pl-c1"&gt;onError&lt;/span&gt;: { error &lt;span class="pl-k"&gt;in&lt;/span&gt; &lt;span class="pl-k"&gt;...&lt;/span&gt; },
    &lt;span class="pl-c1"&gt;onChange&lt;/span&gt;: { (totalPlayerCount, bestPlayers) &lt;span class="pl-k"&gt;in&lt;/span&gt;
        &lt;span class="pl-c1"&gt;print&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"""&lt;/span&gt;&lt;/span&gt;
&lt;span class="pl-s"&gt;            Best players out of &lt;span class="pl-pse"&gt;\(&lt;/span&gt;&lt;span class="pl-s1"&gt;totalPlayerCount&lt;/span&gt;&lt;span class="pl-pse"&gt;&lt;span class="pl-s1"&gt;)&lt;/span&gt;&lt;/span&gt;:&lt;/span&gt;
&lt;span class="pl-s"&gt;            &lt;span class="pl-pse"&gt;\(&lt;/span&gt;&lt;span class="pl-s1"&gt;bestPlayers&lt;/span&gt;&lt;span class="pl-pse"&gt;&lt;span class="pl-s1"&gt;)&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;
&lt;span class="pl-s"&gt;            &lt;span class="pl-pds"&gt;"""&lt;/span&gt;&lt;/span&gt;)
    })&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;code&gt;combine&lt;/code&gt; also exists as an instance method:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;struct&lt;/span&gt; &lt;span class="pl-en"&gt;HallOfFame&lt;/span&gt; {
    &lt;span class="pl-k"&gt;var&lt;/span&gt; totalPlayerCount&lt;span class="pl-k"&gt;:&lt;/span&gt; &lt;span class="pl-c1"&gt;Int&lt;/span&gt;
    &lt;span class="pl-k"&gt;var&lt;/span&gt; bestPlayers&lt;span class="pl-k"&gt;:&lt;/span&gt; [Player]
}

&lt;span class="pl-k"&gt;let&lt;/span&gt; observation &lt;span class="pl-k"&gt;=&lt;/span&gt; playerCountObservation.&lt;span class="pl-c1"&gt;combine&lt;/span&gt;(bestPlayersObservation) {
    &lt;span class="pl-c1"&gt;HallOfFame&lt;/span&gt;(&lt;span class="pl-c1"&gt;totalPlayerCount&lt;/span&gt;: &lt;span class="pl-c1"&gt;$0&lt;/span&gt;, &lt;span class="pl-c1"&gt;bestPlayers&lt;/span&gt;: &lt;span class="pl-c1"&gt;$1&lt;/span&gt;)
}&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;You can combine up to eight observations together. They can feed from as many database tables as needed.&lt;/p&gt;
&lt;p&gt;Combining observations provides the guarantee that notified values are &lt;a href="https://en.wikipedia.org/wiki/Consistency_(database_systems)" rel="nofollow"&gt;&lt;strong&gt;consistent&lt;/strong&gt;&lt;/a&gt;.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;g-emoji class="g-emoji" alias="point_up" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/261d.png"&gt;☝️&lt;/g-emoji&gt; &lt;strong&gt;Note&lt;/strong&gt;: readers who are familiar with Reactive Programming will recognize the &lt;a href="http://reactivex.io/documentation/operators/combinelatest.html" rel="nofollow"&gt;CombineLatest&lt;/a&gt; operator in the ValueObservation &lt;code&gt;combine&lt;/code&gt; method. The reactive operator does not care about data consistency, though: if you use a Reactive layer such as &lt;a href="http://github.com/groue/GRDBCombine"&gt;GRDBCombine&lt;/a&gt; or &lt;a href="http://github.com/RxSwiftCommunity/RxGRDB"&gt;RxGRDB&lt;/a&gt;, make sure you compose observations with &lt;code&gt;ValueObservation.combine&lt;/code&gt;, not with the CombineLatest operator.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3&gt;&lt;a id="user-content-valueobservation-error-handling" class="anchor" aria-hidden="true" href="#valueobservation-error-handling"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;ValueObservation Error Handling&lt;/h3&gt;
&lt;p&gt;When you start an observation, the &lt;code&gt;onError&lt;/code&gt; callback is called whenever fresh values could not be fetched. It is scheduled just like values (see &lt;a href="#valueobservationscheduling"&gt;ValueObservation.scheduling&lt;/a&gt;):&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;let&lt;/span&gt; observer &lt;span class="pl-k"&gt;=&lt;/span&gt; observation.&lt;span class="pl-c1"&gt;start&lt;/span&gt;(
    &lt;span class="pl-c1"&gt;in&lt;/span&gt;: dbQueue,
    &lt;span class="pl-c1"&gt;onError&lt;/span&gt;: { error &lt;span class="pl-k"&gt;in&lt;/span&gt;
        &lt;span class="pl-c1"&gt;print&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;fresh value could not be fetched&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
    },
    &lt;span class="pl-c1"&gt;onChange&lt;/span&gt;: { value &lt;span class="pl-k"&gt;in&lt;/span&gt;
        &lt;span class="pl-c1"&gt;print&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;fresh value: &lt;span class="pl-pse"&gt;\(&lt;/span&gt;&lt;span class="pl-s1"&gt;value&lt;/span&gt;&lt;span class="pl-pse"&gt;&lt;span class="pl-s1"&gt;)&lt;/span&gt;&lt;/span&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
    })&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;An error does not stop the observation. After an error has been received, subsequent transactions may succeed in notifying fresh values. You may witness such temporary errors when the database becomes temporarily unreachable, for example due to &lt;a href="#data-protection"&gt;data protection&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Depending on the way your application wants to deal with such errors, you may want to tighten your control on the scheduling of database accesses with &lt;a href="#databaseregionobservation"&gt;DatabaseRegionObservation&lt;/a&gt;. See also the reactive companion libraries &lt;a href="http://github.com/groue/GRDBCombine"&gt;GRDBCombine&lt;/a&gt; and &lt;a href="http://github.com/RxSwiftCommunity/RxGRDB"&gt;RxGRDB&lt;/a&gt;, which stop observation whenever a ValueObservation error happens.&lt;/p&gt;
&lt;p&gt;The &lt;code&gt;onError&lt;/code&gt; callback can be omitted, but this is &lt;strong&gt;not recommended&lt;/strong&gt;:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Not recommended: omitting the onError callback&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;&lt;span class="pl-k"&gt;let&lt;/span&gt; observer &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-k"&gt;try&lt;/span&gt; observation.&lt;span class="pl-c1"&gt;start&lt;/span&gt;(&lt;span class="pl-c1"&gt;in&lt;/span&gt;: dbQueue) { value &lt;span class="pl-k"&gt;in&lt;/span&gt;
    &lt;span class="pl-c1"&gt;print&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;fresh value: &lt;span class="pl-pse"&gt;\(&lt;/span&gt;&lt;span class="pl-s1"&gt;value&lt;/span&gt;&lt;span class="pl-pse"&gt;&lt;span class="pl-s1"&gt;)&lt;/span&gt;&lt;/span&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
}&lt;/pre&gt;&lt;/div&gt;
&lt;h3&gt;&lt;a id="user-content-valueobservation-options" class="anchor" aria-hidden="true" href="#valueobservation-options"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;ValueObservation Options&lt;/h3&gt;
&lt;p&gt;Some behaviors of value observations can be configured:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="#valueobservationscheduling"&gt;ValueObservation.scheduling&lt;/a&gt;: Control the dispatching of notified values.&lt;/li&gt;
&lt;li&gt;&lt;a href="#valueobservationrequireswriteaccess"&gt;ValueObservation.requiresWriteAccess&lt;/a&gt;: Allow observations to write in the database.&lt;/li&gt;
&lt;/ul&gt;
&lt;h4&gt;&lt;a id="user-content-valueobservationscheduling" class="anchor" aria-hidden="true" href="#valueobservationscheduling"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;ValueObservation.scheduling&lt;/h4&gt;
&lt;p&gt;The &lt;code&gt;scheduling&lt;/code&gt; property lets you control how fresh values are notified:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;.mainQueue&lt;/code&gt; (the default): all values are notified on the main queue.&lt;/p&gt;
&lt;p&gt;If the observation starts on the main queue, an initial value is notified right upon subscription, synchronously:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; On main queue&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;&lt;span class="pl-k"&gt;let&lt;/span&gt; observer &lt;span class="pl-k"&gt;=&lt;/span&gt; observation.&lt;span class="pl-c1"&gt;start&lt;/span&gt;(
    &lt;span class="pl-c1"&gt;in&lt;/span&gt;: dbQueue,
    &lt;span class="pl-c1"&gt;onError&lt;/span&gt;: { error &lt;span class="pl-k"&gt;in&lt;/span&gt; &lt;span class="pl-k"&gt;...&lt;/span&gt; },
    &lt;span class="pl-c1"&gt;onChange&lt;/span&gt;: { value &lt;span class="pl-k"&gt;in&lt;/span&gt;
        &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; On main queue&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;        &lt;span class="pl-c1"&gt;print&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;fresh value: &lt;span class="pl-pse"&gt;\(&lt;/span&gt;&lt;span class="pl-s1"&gt;value&lt;/span&gt;&lt;span class="pl-pse"&gt;&lt;span class="pl-s1"&gt;)&lt;/span&gt;&lt;/span&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
    })
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; &amp;lt;- Here "fresh value" is already printed.&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;If the observation does not start on the main queue, an initial value is also notified on the main queue, but asynchronously:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Not on the main queue&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;&lt;span class="pl-k"&gt;let&lt;/span&gt; observer &lt;span class="pl-k"&gt;=&lt;/span&gt; observation.&lt;span class="pl-c1"&gt;start&lt;/span&gt;(
    &lt;span class="pl-c1"&gt;in&lt;/span&gt;: dbQueue,
    &lt;span class="pl-c1"&gt;onError&lt;/span&gt;: { error &lt;span class="pl-k"&gt;in&lt;/span&gt; &lt;span class="pl-k"&gt;...&lt;/span&gt; },
    &lt;span class="pl-c1"&gt;onChange&lt;/span&gt;: { value &lt;span class="pl-k"&gt;in&lt;/span&gt;
        &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; On main queue&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;        &lt;span class="pl-c1"&gt;print&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;fresh value: &lt;span class="pl-pse"&gt;\(&lt;/span&gt;&lt;span class="pl-s1"&gt;value&lt;/span&gt;&lt;span class="pl-pse"&gt;&lt;span class="pl-s1"&gt;)&lt;/span&gt;&lt;/span&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
    })&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;After the initial value has been notified, all subsequent values are notified asynchronously:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;try&lt;/span&gt; dbQueue.&lt;span class="pl-smi"&gt;write&lt;/span&gt; { db &lt;span class="pl-k"&gt;in&lt;/span&gt; &lt;span class="pl-k"&gt;...&lt;/span&gt; }
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; &amp;lt;- Eventually prints "fresh value" on the main queue&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;.async(onQueue:startImmediately:)&lt;/code&gt;: all values are asychronously notified on the specified queue.&lt;/p&gt;
&lt;p&gt;An initial value is fetched and notified if &lt;code&gt;startImmediately&lt;/code&gt; is true.&lt;/p&gt;
&lt;p&gt;For example:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; On main queue&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;&lt;span class="pl-k"&gt;var&lt;/span&gt; observation &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-k"&gt;...&lt;/span&gt;
observation.&lt;span class="pl-smi"&gt;scheduling&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; .&lt;span class="pl-c1"&gt;async&lt;/span&gt;(&lt;span class="pl-c1"&gt;onQueue&lt;/span&gt;: .&lt;span class="pl-smi"&gt;main&lt;/span&gt;, &lt;span class="pl-c1"&gt;startImmediately&lt;/span&gt;: &lt;span class="pl-c1"&gt;true&lt;/span&gt;)
&lt;span class="pl-k"&gt;let&lt;/span&gt; observer &lt;span class="pl-k"&gt;=&lt;/span&gt; observation.&lt;span class="pl-c1"&gt;start&lt;/span&gt;(
    &lt;span class="pl-c1"&gt;in&lt;/span&gt;: dbQueue,
    &lt;span class="pl-c1"&gt;onError&lt;/span&gt;: { error &lt;span class="pl-k"&gt;in&lt;/span&gt; &lt;span class="pl-k"&gt;...&lt;/span&gt; },
    &lt;span class="pl-c1"&gt;onChange&lt;/span&gt;: { value &lt;span class="pl-k"&gt;in&lt;/span&gt;
        &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; On main queue&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;        &lt;span class="pl-c1"&gt;print&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;fresh value: &lt;span class="pl-pse"&gt;\(&lt;/span&gt;&lt;span class="pl-s1"&gt;value&lt;/span&gt;&lt;span class="pl-pse"&gt;&lt;span class="pl-s1"&gt;)&lt;/span&gt;&lt;/span&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
    })
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; &amp;lt;- Eventually prints "fresh value"&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;unsafe(startImmediately:)&lt;/code&gt;: values are not all notified on the same dispatch queue.&lt;/p&gt;
&lt;p&gt;If &lt;code&gt;startImmediately&lt;/code&gt; is true, an initial value is notified right upon subscription, synchronously, on the dispatch queue which starts the observation.&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; On any queue&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;&lt;span class="pl-k"&gt;var&lt;/span&gt; observation &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-k"&gt;...&lt;/span&gt;
observation.&lt;span class="pl-smi"&gt;scheduling&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; .&lt;span class="pl-c1"&gt;unsafe&lt;/span&gt;(&lt;span class="pl-c1"&gt;startImmediately&lt;/span&gt;: &lt;span class="pl-c1"&gt;true&lt;/span&gt;)
&lt;span class="pl-k"&gt;let&lt;/span&gt; observer &lt;span class="pl-k"&gt;=&lt;/span&gt; observation.&lt;span class="pl-c1"&gt;start&lt;/span&gt;(
    &lt;span class="pl-c1"&gt;in&lt;/span&gt;: dbQueue,
    &lt;span class="pl-c1"&gt;onError&lt;/span&gt;: { error &lt;span class="pl-k"&gt;in&lt;/span&gt; &lt;span class="pl-k"&gt;...&lt;/span&gt; },
    &lt;span class="pl-c1"&gt;onChange&lt;/span&gt;: { value &lt;span class="pl-k"&gt;in&lt;/span&gt;
        &lt;span class="pl-c1"&gt;print&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;fresh value: &lt;span class="pl-pse"&gt;\(&lt;/span&gt;&lt;span class="pl-s1"&gt;value&lt;/span&gt;&lt;span class="pl-pse"&gt;&lt;span class="pl-s1"&gt;)&lt;/span&gt;&lt;/span&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
    })
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; &amp;lt;- Here "fresh value" is already printed.&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;After the initial value has been notified, all subsequent values are notified on unspecified queues.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;g-emoji class="g-emoji" alias="point_up" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/261d.png"&gt;☝️&lt;/g-emoji&gt; &lt;strong&gt;Note&lt;/strong&gt;: this unsafe mode is intended for third-party libraries that provide their own scheduling engine.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h4&gt;&lt;a id="user-content-valueobservationrequireswriteaccess" class="anchor" aria-hidden="true" href="#valueobservationrequireswriteaccess"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;ValueObservation.requiresWriteAccess&lt;/h4&gt;
&lt;p&gt;The &lt;code&gt;requiresWriteAccess&lt;/code&gt; property is false by default. When true, a ValueObservation has a write access to the database, and its fetches are automatically wrapped in a &lt;a href="#transactions-and-savepoints"&gt;savepoint&lt;/a&gt;:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;var&lt;/span&gt; observation &lt;span class="pl-k"&gt;=&lt;/span&gt; ValueObservation.&lt;span class="pl-smi"&gt;tracking&lt;/span&gt; { db &lt;span class="pl-k"&gt;in&lt;/span&gt;
    &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; write access allowed&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;    &lt;span class="pl-k"&gt;...&lt;/span&gt;
}
observation.&lt;span class="pl-smi"&gt;requiresWriteAccess&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;true&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;When you use a &lt;a href="#database-pools"&gt;database pool&lt;/a&gt;, don't use this flag unless you really need it. Observations with write access are less efficient because they block all writes for the whole duration of a fetch.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-advanced-valueobservationtracking_reducer" class="anchor" aria-hidden="true" href="#advanced-valueobservationtracking_reducer"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Advanced: ValueObservation.tracking(_:reducer:)&lt;/h3&gt;
&lt;p&gt;The most low-level way to define a ValueObservation is to create one from an observed database region (see above), and a &lt;strong&gt;reducer&lt;/strong&gt; that adopts the &lt;strong&gt;ValueReducer&lt;/strong&gt; protocol (&lt;a href="#what-are-experimental-features"&gt;&lt;strong&gt;&lt;g-emoji class="g-emoji" alias="fire" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f525.png"&gt;🔥&lt;/g-emoji&gt; EXPERIMENTAL&lt;/strong&gt;&lt;/a&gt;):&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;protocol&lt;/span&gt; &lt;span class="pl-en"&gt;ValueReducer&lt;/span&gt; {
    &lt;span class="pl-k"&gt;associatedtype&lt;/span&gt; &lt;span class="pl-c1"&gt;Fetched&lt;/span&gt;
    &lt;span class="pl-k"&gt;associatedtype&lt;/span&gt; &lt;span class="pl-c1"&gt;Value&lt;/span&gt;
    
    &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;///&lt;/span&gt; Fetches a database value&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;    &lt;span class="pl-k"&gt;func&lt;/span&gt; &lt;span class="pl-en"&gt;fetch&lt;/span&gt;(&lt;span class="pl-en"&gt;_&lt;/span&gt; &lt;span class="pl-smi"&gt;db&lt;/span&gt;: Database) &lt;span class="pl-k"&gt;throws&lt;/span&gt; &lt;span class="pl-k"&gt;-&amp;gt;&lt;/span&gt; Fetched
    
    &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;///&lt;/span&gt; Returns a notified value&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;    &lt;span class="pl-k"&gt;mutating&lt;/span&gt; &lt;span class="pl-k"&gt;func&lt;/span&gt; &lt;span class="pl-en"&gt;value&lt;/span&gt;(&lt;span class="pl-en"&gt;_&lt;/span&gt; &lt;span class="pl-smi"&gt;fetched&lt;/span&gt;: Fetched) &lt;span class="pl-k"&gt;-&amp;gt;&lt;/span&gt; &lt;span class="pl-c1"&gt;Value&lt;/span&gt;&lt;span class="pl-k"&gt;?&lt;/span&gt;
}&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;The &lt;code&gt;fetch&lt;/code&gt; method is called upon changes in the observed &lt;a href="#databaseregion"&gt;database region&lt;/a&gt;. It runs inside a protected dispatch queue and is guaranteed an immutable view of the last committed state of the database.&lt;/p&gt;
&lt;p&gt;The &lt;code&gt;value&lt;/code&gt; method transforms a fetched value into a notified value. It returns nil if the observer should not be notified. It runs inside a dispatch queue called the "reduce queue", which is not the main queue, and not a database queue.&lt;/p&gt;
&lt;p&gt;The sample code below counts the number of times the player table is modified:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;var&lt;/span&gt; count &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;0&lt;/span&gt;
&lt;span class="pl-k"&gt;let&lt;/span&gt; reducer &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;AnyValueReducer&lt;/span&gt;(
    &lt;span class="pl-c1"&gt;fetch&lt;/span&gt;: { &lt;span class="pl-c1"&gt;_&lt;/span&gt; &lt;span class="pl-k"&gt;in&lt;/span&gt; &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;/*&lt;/span&gt; don't fetch anything &lt;span class="pl-c"&gt;*/&lt;/span&gt;&lt;/span&gt; },
    &lt;span class="pl-c1"&gt;value&lt;/span&gt;: { &lt;span class="pl-c1"&gt;_&lt;/span&gt; &lt;span class="pl-k"&gt;-&amp;gt;&lt;/span&gt; &lt;span class="pl-c1"&gt;Int&lt;/span&gt;&lt;span class="pl-k"&gt;?&lt;/span&gt; &lt;span class="pl-k"&gt;in&lt;/span&gt;
        &lt;span class="pl-k"&gt;defer&lt;/span&gt; { count &lt;span class="pl-k"&gt;+=&lt;/span&gt; &lt;span class="pl-c1"&gt;1&lt;/span&gt; }
        &lt;span class="pl-k"&gt;return&lt;/span&gt; count })
&lt;span class="pl-k"&gt;let&lt;/span&gt; observation &lt;span class="pl-k"&gt;=&lt;/span&gt; ValueObservation.&lt;span class="pl-c1"&gt;tracking&lt;/span&gt;(Player.&lt;span class="pl-c1"&gt;all&lt;/span&gt;(), &lt;span class="pl-c1"&gt;reducer&lt;/span&gt;: { &lt;span class="pl-c1"&gt;_&lt;/span&gt; &lt;span class="pl-k"&gt;in&lt;/span&gt; reducer })
&lt;span class="pl-k"&gt;let&lt;/span&gt; observer &lt;span class="pl-k"&gt;=&lt;/span&gt; observation.&lt;span class="pl-c1"&gt;start&lt;/span&gt;(
    &lt;span class="pl-c1"&gt;in&lt;/span&gt;: dbQueue,
    &lt;span class="pl-c1"&gt;onError&lt;/span&gt;: { error &lt;span class="pl-k"&gt;in&lt;/span&gt; &lt;span class="pl-k"&gt;...&lt;/span&gt; },
    &lt;span class="pl-c1"&gt;onChange&lt;/span&gt;: { (&lt;span class="pl-c1"&gt;count&lt;/span&gt;: &lt;span class="pl-c1"&gt;Int&lt;/span&gt;) &lt;span class="pl-k"&gt;in&lt;/span&gt;
        &lt;span class="pl-c1"&gt;print&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;Number of transactions that have modified players: &lt;span class="pl-pse"&gt;\(&lt;/span&gt;&lt;span class="pl-s1"&gt;count&lt;/span&gt;&lt;span class="pl-pse"&gt;&lt;span class="pl-s1"&gt;)&lt;/span&gt;&lt;/span&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
    })
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Prints "Number of transactions that have modified players: 0"&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;
&lt;span class="pl-k"&gt;try&lt;/span&gt; dbQueue.&lt;span class="pl-smi"&gt;write&lt;/span&gt; { db &lt;span class="pl-k"&gt;in&lt;/span&gt;
    &lt;span class="pl-k"&gt;try&lt;/span&gt; &lt;span class="pl-c1"&gt;Player&lt;/span&gt;(&lt;span class="pl-k"&gt;...&lt;/span&gt;).&lt;span class="pl-c1"&gt;insert&lt;/span&gt;(db)
}
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Prints "Number of transactions that have modified players: 1"&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h2&gt;&lt;a id="user-content-databaseregionobservation" class="anchor" aria-hidden="true" href="#databaseregionobservation"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;DatabaseRegionObservation&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;DatabaseRegionObservation tracks changes in database &lt;a href="#requests"&gt;requests&lt;/a&gt;, and notifies each impactful &lt;a href="#transactions-and-savepoints"&gt;transaction&lt;/a&gt;.&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;No insertion, update, or deletion in the tracked tables is missed. This includes indirect changes triggered by &lt;a href="https://www.sqlite.org/foreignkeys.html#fk_actions" rel="nofollow"&gt;foreign keys&lt;/a&gt; or &lt;a href="https://www.sqlite.org/lang_createtrigger.html" rel="nofollow"&gt;SQL triggers&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;DatabaseRegionObservation calls your application right after changes have been committed in the database, and before any other thread had any opportunity to perform further changes. &lt;em&gt;This is a pretty strong guarantee, that most applications do not really need.&lt;/em&gt; Instead, most applications prefer to be notified with fresh values: make sure you check &lt;a href="#valueobservation"&gt;ValueObservation&lt;/a&gt; before using DatabaseRegionObservation.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-databaseregionobservation-usage" class="anchor" aria-hidden="true" href="#databaseregionobservation-usage"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;DatabaseRegionObservation Usage&lt;/h3&gt;
&lt;p&gt;Define an observation by providing one or several requests to track:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Track all players&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;&lt;span class="pl-k"&gt;let&lt;/span&gt; observation &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;DatabaseRegionObservation&lt;/span&gt;(&lt;span class="pl-c1"&gt;tracking&lt;/span&gt;: Player.&lt;span class="pl-c1"&gt;all&lt;/span&gt;())&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Then start the observation from a &lt;a href="#database-queues"&gt;database queue&lt;/a&gt; or &lt;a href="#database-pools"&gt;pool&lt;/a&gt;:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;let&lt;/span&gt; observer &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-k"&gt;try&lt;/span&gt; observation.&lt;span class="pl-c1"&gt;start&lt;/span&gt;(&lt;span class="pl-c1"&gt;in&lt;/span&gt;: dbQueue) { (&lt;span class="pl-c1"&gt;db&lt;/span&gt;: Database) &lt;span class="pl-k"&gt;in&lt;/span&gt;
    &lt;span class="pl-c1"&gt;print&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;Players were changed&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
}&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;And enjoy the changes notifications:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;try&lt;/span&gt; dbQueue.&lt;span class="pl-smi"&gt;write&lt;/span&gt; { db &lt;span class="pl-k"&gt;in&lt;/span&gt;
    &lt;span class="pl-k"&gt;try&lt;/span&gt; &lt;span class="pl-c1"&gt;Player&lt;/span&gt;(&lt;span class="pl-c1"&gt;name&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;Arthur&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;).&lt;span class="pl-c1"&gt;insert&lt;/span&gt;(db)
}
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Prints "Players were changed"&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;By default, the observation lasts until the observer returned by the &lt;code&gt;start&lt;/code&gt; method is deallocated. See &lt;a href="#databaseregionobservationextent"&gt;DatabaseRegionObservation.extent&lt;/a&gt; for more details.&lt;/p&gt;
&lt;p&gt;You can also feed DatabaseRegionObservation with &lt;a href="#databaseregion"&gt;DatabaseRegion&lt;/a&gt;, or any type which conforms to the &lt;a href="#the-databaseregionconvertible-protocol"&gt;DatabaseRegionConvertible&lt;/a&gt; protocol. For example:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Observe the full database&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;&lt;span class="pl-k"&gt;let&lt;/span&gt; observation &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;DatabaseRegionObservation&lt;/span&gt;(&lt;span class="pl-c1"&gt;tracking&lt;/span&gt;: DatabaseRegion.&lt;span class="pl-smi"&gt;fullDatabase&lt;/span&gt;)
&lt;span class="pl-k"&gt;let&lt;/span&gt; observer &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-k"&gt;try&lt;/span&gt; observation.&lt;span class="pl-c1"&gt;start&lt;/span&gt;(&lt;span class="pl-c1"&gt;in&lt;/span&gt;: dbQueue) { (&lt;span class="pl-c1"&gt;db&lt;/span&gt;: Database) &lt;span class="pl-k"&gt;in&lt;/span&gt;
    &lt;span class="pl-c1"&gt;print&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;Database was changed&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
}&lt;/pre&gt;&lt;/div&gt;
&lt;h3&gt;&lt;a id="user-content-databaseregionobservation-use-cases" class="anchor" aria-hidden="true" href="#databaseregionobservation-use-cases"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;DatabaseRegionObservation Use Cases&lt;/h3&gt;
&lt;p&gt;&lt;strong&gt;There are very few use cases for DatabaseRegionObservation&lt;/strong&gt;.&lt;/p&gt;
&lt;p&gt;For example:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;One needs to write in the database after an impactful transaction.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;One needs to synchronize the content of the database file with some external resources, like other files, or system sensors like CLRegion monitoring.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;On iOS, one needs to process a database transaction before the operating system had any opportunity to put the application in the suspended state.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;One want to build a &lt;a href="#database-snapshots"&gt;database snapshot&lt;/a&gt; with a guaranteed snapshot content.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Outside of those use cases, it is much likely &lt;em&gt;wrong&lt;/em&gt; to use a DatabaseRegionObservation. Please check other &lt;a href="#database-changes-observation"&gt;Database Observation&lt;/a&gt; options.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-databaseregionobservationextent" class="anchor" aria-hidden="true" href="#databaseregionobservationextent"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;DatabaseRegionObservation.extent&lt;/h3&gt;
&lt;p&gt;The &lt;code&gt;extent&lt;/code&gt; property lets you specify the duration of the observation. See &lt;a href="#observation-extent"&gt;Observation Extent&lt;/a&gt; for more details:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; This observation lasts until the database connection is closed&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;&lt;span class="pl-k"&gt;var&lt;/span&gt; observation &lt;span class="pl-k"&gt;=&lt;/span&gt; DatabaseRegionObservation&lt;span class="pl-k"&gt;...&lt;/span&gt;
observation.&lt;span class="pl-smi"&gt;extent&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; .&lt;span class="pl-smi"&gt;databaseLifetime&lt;/span&gt;
&lt;span class="pl-c1"&gt;_&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-k"&gt;try&lt;/span&gt; observation.&lt;span class="pl-c1"&gt;start&lt;/span&gt;(&lt;span class="pl-c1"&gt;in&lt;/span&gt;: dbQueue) { db &lt;span class="pl-k"&gt;in&lt;/span&gt; &lt;span class="pl-k"&gt;...&lt;/span&gt; }&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;The default extent is &lt;code&gt;.observerLifetime&lt;/code&gt;: the observation stops when the observer returned by &lt;code&gt;start&lt;/code&gt; is deallocated.&lt;/p&gt;
&lt;p&gt;Regardless of the extent of an observation, you can always stop observation with the &lt;code&gt;remove(transactionObserver:)&lt;/code&gt; method:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Start&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;&lt;span class="pl-k"&gt;let&lt;/span&gt; observer &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-k"&gt;try&lt;/span&gt; observation.&lt;span class="pl-c1"&gt;start&lt;/span&gt;(&lt;span class="pl-c1"&gt;in&lt;/span&gt;: dbQueue) { db &lt;span class="pl-k"&gt;in&lt;/span&gt; &lt;span class="pl-k"&gt;...&lt;/span&gt; }

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Stop&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;dbQueue.&lt;span class="pl-c1"&gt;remove&lt;/span&gt;(&lt;span class="pl-c1"&gt;transactionObserver&lt;/span&gt;: observer)&lt;/pre&gt;&lt;/div&gt;
&lt;h2&gt;&lt;a id="user-content-transactionobserver-protocol" class="anchor" aria-hidden="true" href="#transactionobserver-protocol"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;TransactionObserver Protocol&lt;/h2&gt;
&lt;p&gt;The &lt;code&gt;TransactionObserver&lt;/code&gt; protocol lets you &lt;strong&gt;observe individual database changes and transactions&lt;/strong&gt;:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;protocol&lt;/span&gt; &lt;span class="pl-en"&gt;TransactionObserver&lt;/span&gt; : &lt;span class="pl-k"&gt;class&lt;/span&gt; {
    &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;///&lt;/span&gt; Notifies a database change:&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;    &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;///&lt;/span&gt; - event.kind (insert, update, or delete)&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;    &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;///&lt;/span&gt; - event.tableName&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;    &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;///&lt;/span&gt; - event.rowID&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;    &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;///&lt;/span&gt;&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;    &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;///&lt;/span&gt; For performance reasons, the event is only valid for the duration of&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;    &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;///&lt;/span&gt; this method call. If you need to keep it longer, store a copy:&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;    &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;///&lt;/span&gt; event.copy().&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;    &lt;span class="pl-k"&gt;func&lt;/span&gt; &lt;span class="pl-en"&gt;databaseDidChange&lt;/span&gt;(&lt;span class="pl-en"&gt;with&lt;/span&gt; &lt;span class="pl-smi"&gt;event&lt;/span&gt;: DatabaseEvent)
    
    &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;///&lt;/span&gt; Filters the database changes that should be notified to the&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;    &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;///&lt;/span&gt; `databaseDidChange(with:)` method.&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;    &lt;span class="pl-k"&gt;func&lt;/span&gt; &lt;span class="pl-en"&gt;observes&lt;/span&gt;(&lt;span class="pl-en"&gt;eventsOfKind&lt;/span&gt; &lt;span class="pl-smi"&gt;eventKind&lt;/span&gt;: DatabaseEventKind) &lt;span class="pl-k"&gt;-&amp;gt;&lt;/span&gt; &lt;span class="pl-c1"&gt;Bool&lt;/span&gt;
    
    &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;///&lt;/span&gt; An opportunity to rollback pending changes by throwing an error.&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;    &lt;span class="pl-k"&gt;func&lt;/span&gt; &lt;span class="pl-en"&gt;databaseWillCommit&lt;/span&gt;() &lt;span class="pl-k"&gt;throws&lt;/span&gt;
    
    &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;///&lt;/span&gt; Database changes have been committed.&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;    &lt;span class="pl-k"&gt;func&lt;/span&gt; &lt;span class="pl-en"&gt;databaseDidCommit&lt;/span&gt;(&lt;span class="pl-en"&gt;_&lt;/span&gt; &lt;span class="pl-smi"&gt;db&lt;/span&gt;: Database)
    
    &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;///&lt;/span&gt; Database changes have been rollbacked.&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;    &lt;span class="pl-k"&gt;func&lt;/span&gt; &lt;span class="pl-en"&gt;databaseDidRollback&lt;/span&gt;(&lt;span class="pl-en"&gt;_&lt;/span&gt; &lt;span class="pl-smi"&gt;db&lt;/span&gt;: Database)
}&lt;/pre&gt;&lt;/div&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="#activate-a-transaction-observer"&gt;Activate a Transaction Observer&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#database-changes-and-transactions"&gt;Database Changes And Transactions&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#filtering-database-events"&gt;Filtering Database Events&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#observation-extent"&gt;Observation Extent&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#databaseregion"&gt;DatabaseRegion&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#support-for-sqlite-pre-update-hooks"&gt;Support for SQLite Pre-Update Hooks&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;&lt;a id="user-content-activate-a-transaction-observer" class="anchor" aria-hidden="true" href="#activate-a-transaction-observer"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Activate a Transaction Observer&lt;/h3&gt;
&lt;p&gt;&lt;strong&gt;To activate a transaction observer, add it to the database queue or pool:&lt;/strong&gt;&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;let&lt;/span&gt; observer &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;MyObserver&lt;/span&gt;()
dbQueue.&lt;span class="pl-c1"&gt;add&lt;/span&gt;(&lt;span class="pl-c1"&gt;transactionObserver&lt;/span&gt;: observer)&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;By default, database holds weak references to its transaction observers: they are not retained, and stop getting notifications after they are deallocated. See &lt;a href="#observation-extent"&gt;Observation Extent&lt;/a&gt; for more options.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-database-changes-and-transactions" class="anchor" aria-hidden="true" href="#database-changes-and-transactions"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Database Changes And Transactions&lt;/h3&gt;
&lt;p&gt;&lt;strong&gt;A transaction observer is notified of all database changes&lt;/strong&gt;: inserts, updates and deletes. This includes indirect changes triggered by ON DELETE and ON UPDATE actions associated to &lt;a href="https://www.sqlite.org/foreignkeys.html#fk_actions" rel="nofollow"&gt;foreign keys&lt;/a&gt;, and &lt;a href="https://www.sqlite.org/lang_createtrigger.html" rel="nofollow"&gt;SQL triggers&lt;/a&gt;.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;g-emoji class="g-emoji" alias="point_up" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/261d.png"&gt;☝️&lt;/g-emoji&gt; &lt;strong&gt;Note&lt;/strong&gt;: the changes that are not notified are changes to internal system tables (such as &lt;code&gt;sqlite_master&lt;/code&gt;), changes to &lt;a href="https://www.sqlite.org/withoutrowid.html" rel="nofollow"&gt;&lt;code&gt;WITHOUT ROWID&lt;/code&gt;&lt;/a&gt; tables, and the deletion of duplicate rows triggered by &lt;a href="https://www.sqlite.org/lang_conflict.html" rel="nofollow"&gt;&lt;code&gt;ON CONFLICT REPLACE&lt;/code&gt;&lt;/a&gt; clauses (this last exception might change in a future release of SQLite).&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Notified changes are not actually written to disk until the &lt;a href="#transactions-and-savepoints"&gt;transaction&lt;/a&gt; commits, and the &lt;code&gt;databaseDidCommit&lt;/code&gt; callback is called. On the other side, &lt;code&gt;databaseDidRollback&lt;/code&gt; confirms their invalidation:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;try&lt;/span&gt; dbQueue.&lt;span class="pl-smi"&gt;write&lt;/span&gt; { db &lt;span class="pl-k"&gt;in&lt;/span&gt;
    &lt;span class="pl-k"&gt;try&lt;/span&gt; db.&lt;span class="pl-c1"&gt;execute&lt;/span&gt;(&lt;span class="pl-c1"&gt;sql&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;INSERT ...&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;) &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; 1. didChange&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;    &lt;span class="pl-k"&gt;try&lt;/span&gt; db.&lt;span class="pl-c1"&gt;execute&lt;/span&gt;(&lt;span class="pl-c1"&gt;sql&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;UPDATE ...&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;) &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; 2. didChange&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;}                                     &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; 3. willCommit, 4. didCommit&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;
&lt;span class="pl-k"&gt;try&lt;/span&gt; dbQueue.&lt;span class="pl-smi"&gt;inTransaction&lt;/span&gt; { db &lt;span class="pl-k"&gt;in&lt;/span&gt;
    &lt;span class="pl-k"&gt;try&lt;/span&gt; db.&lt;span class="pl-c1"&gt;execute&lt;/span&gt;(&lt;span class="pl-c1"&gt;sql&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;INSERT ...&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;) &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; 1. didChange&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;    &lt;span class="pl-k"&gt;try&lt;/span&gt; db.&lt;span class="pl-c1"&gt;execute&lt;/span&gt;(&lt;span class="pl-c1"&gt;sql&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;UPDATE ...&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;) &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; 2. didChange&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;    &lt;span class="pl-k"&gt;return&lt;/span&gt; .&lt;span class="pl-smi"&gt;rollback&lt;/span&gt;                  &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; 3. didRollback&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;}

&lt;span class="pl-k"&gt;try&lt;/span&gt; dbQueue.&lt;span class="pl-smi"&gt;write&lt;/span&gt; { db &lt;span class="pl-k"&gt;in&lt;/span&gt;
    &lt;span class="pl-k"&gt;try&lt;/span&gt; db.&lt;span class="pl-c1"&gt;execute&lt;/span&gt;(&lt;span class="pl-c1"&gt;sql&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;INSERT ...&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;) &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; 1. didChange&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;    &lt;span class="pl-k"&gt;throw&lt;/span&gt; &lt;span class="pl-c1"&gt;SomeError&lt;/span&gt;()
}                                     &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; 2. didRollback&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Database statements that are executed outside of any transaction do not drop off the radar:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;try&lt;/span&gt; dbQueue.&lt;span class="pl-smi"&gt;inDatabase&lt;/span&gt; { db &lt;span class="pl-k"&gt;in&lt;/span&gt;
    &lt;span class="pl-k"&gt;try&lt;/span&gt; db.&lt;span class="pl-c1"&gt;execute&lt;/span&gt;(&lt;span class="pl-c1"&gt;sql&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;INSERT ...&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;) &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; 1. didChange, 2. willCommit, 3. didCommit&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;    &lt;span class="pl-k"&gt;try&lt;/span&gt; db.&lt;span class="pl-c1"&gt;execute&lt;/span&gt;(&lt;span class="pl-c1"&gt;sql&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;UPDATE ...&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;) &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; 4. didChange, 5. willCommit, 6. didCommit&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;}&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Changes that are on hold because of a &lt;a href="https://www.sqlite.org/lang_savepoint.html" rel="nofollow"&gt;savepoint&lt;/a&gt; are only notified after the savepoint has been released. This makes sure that notified events are only events that have an opportunity to be committed:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;try&lt;/span&gt; dbQueue.&lt;span class="pl-smi"&gt;inTransaction&lt;/span&gt; { db &lt;span class="pl-k"&gt;in&lt;/span&gt;
    &lt;span class="pl-k"&gt;try&lt;/span&gt; db.&lt;span class="pl-c1"&gt;execute&lt;/span&gt;(&lt;span class="pl-c1"&gt;sql&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;INSERT ...&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)            &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; 1. didChange&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;    
    &lt;span class="pl-k"&gt;try&lt;/span&gt; db.&lt;span class="pl-c1"&gt;execute&lt;/span&gt;(&lt;span class="pl-c1"&gt;sql&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;SAVEPOINT foo&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
    &lt;span class="pl-k"&gt;try&lt;/span&gt; db.&lt;span class="pl-c1"&gt;execute&lt;/span&gt;(&lt;span class="pl-c1"&gt;sql&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;UPDATE ...&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)            &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; delayed&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;    &lt;span class="pl-k"&gt;try&lt;/span&gt; db.&lt;span class="pl-c1"&gt;execute&lt;/span&gt;(&lt;span class="pl-c1"&gt;sql&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;UPDATE ...&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)            &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; delayed&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;    &lt;span class="pl-k"&gt;try&lt;/span&gt; db.&lt;span class="pl-c1"&gt;execute&lt;/span&gt;(&lt;span class="pl-c1"&gt;sql&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;RELEASE SAVEPOINT foo&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;) &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; 2. didChange, 3. didChange&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;    
    &lt;span class="pl-k"&gt;try&lt;/span&gt; db.&lt;span class="pl-c1"&gt;execute&lt;/span&gt;(&lt;span class="pl-c1"&gt;sql&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;SAVEPOINT foo&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
    &lt;span class="pl-k"&gt;try&lt;/span&gt; db.&lt;span class="pl-c1"&gt;execute&lt;/span&gt;(&lt;span class="pl-c1"&gt;sql&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;UPDATE ...&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)            &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; not notified&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;    &lt;span class="pl-k"&gt;try&lt;/span&gt; db.&lt;span class="pl-c1"&gt;execute&lt;/span&gt;(&lt;span class="pl-c1"&gt;sql&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;ROLLBACK TO SAVEPOINT foo&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
    
    &lt;span class="pl-k"&gt;return&lt;/span&gt; .&lt;span class="pl-smi"&gt;commit&lt;/span&gt;                               &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; 4. willCommit, 5. didCommit&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;}&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;strong&gt;Eventual errors&lt;/strong&gt; thrown from &lt;code&gt;databaseWillCommit&lt;/code&gt; are exposed to the application code:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;do&lt;/span&gt; {
    &lt;span class="pl-k"&gt;try&lt;/span&gt; dbQueue.&lt;span class="pl-smi"&gt;inTransaction&lt;/span&gt; { db &lt;span class="pl-k"&gt;in&lt;/span&gt;
        &lt;span class="pl-k"&gt;...&lt;/span&gt;
        &lt;span class="pl-k"&gt;return&lt;/span&gt; .&lt;span class="pl-smi"&gt;commit&lt;/span&gt;           &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; 1. willCommit (throws), 2. didRollback&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;    }
} &lt;span class="pl-k"&gt;catch&lt;/span&gt; {
    &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; 3. The error thrown by the transaction observer.&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;}&lt;/pre&gt;&lt;/div&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;g-emoji class="g-emoji" alias="point_up" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/261d.png"&gt;☝️&lt;/g-emoji&gt; &lt;strong&gt;Note&lt;/strong&gt;: all callbacks are called in a protected dispatch queue, and serialized with all database updates.&lt;/p&gt;
&lt;p&gt;&lt;g-emoji class="g-emoji" alias="point_up" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/261d.png"&gt;☝️&lt;/g-emoji&gt; &lt;strong&gt;Note&lt;/strong&gt;: the databaseDidChange(with:) and databaseWillCommit() callbacks must not touch the SQLite database. This limitation does not apply to databaseDidCommit and databaseDidRollback which can use their database argument.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;a href="#databaseregionobservation"&gt;DatabaseRegionObservation&lt;/a&gt;, &lt;a href="#valueobservation"&gt;ValueObservation&lt;/a&gt;, &lt;a href="http://github.com/groue/GRDBCombine"&gt;GRDBCombine&lt;/a&gt;, and &lt;a href="http://github.com/RxSwiftCommunity/RxGRDB"&gt;RxGRDB&lt;/a&gt; are all based on the TransactionObserver protocol.&lt;/p&gt;
&lt;p&gt;See also &lt;a href="https://gist.github.com/groue/2e21172719e634657dfd"&gt;TableChangeObserver.swift&lt;/a&gt;, which shows a transaction observer that notifies of modified database tables with NSNotificationCenter.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-filtering-database-events" class="anchor" aria-hidden="true" href="#filtering-database-events"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Filtering Database Events&lt;/h3&gt;
&lt;p&gt;&lt;strong&gt;Transaction observers can avoid being notified of database changes they are not interested in.&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;The filtering happens in the &lt;code&gt;observes(eventsOfKind:)&lt;/code&gt; method, which tells whether the observer wants notification of specific kinds of changes, or not. For example, here is how an observer can focus on the changes that happen on the "player" database table:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;class&lt;/span&gt; &lt;span class="pl-en"&gt;PlayerObserver&lt;/span&gt;: &lt;span class="pl-e"&gt;TransactionObserver &lt;/span&gt;{
    &lt;span class="pl-k"&gt;func&lt;/span&gt; &lt;span class="pl-en"&gt;observes&lt;/span&gt;(&lt;span class="pl-en"&gt;eventsOfKind&lt;/span&gt; &lt;span class="pl-smi"&gt;eventKind&lt;/span&gt;: DatabaseEventKind) &lt;span class="pl-k"&gt;-&amp;gt;&lt;/span&gt; &lt;span class="pl-c1"&gt;Bool&lt;/span&gt; {
        &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Only observe changes to the "player" table.&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;        &lt;span class="pl-k"&gt;return&lt;/span&gt; eventKind.&lt;span class="pl-smi"&gt;tableName&lt;/span&gt; &lt;span class="pl-k"&gt;==&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;player&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;
    }
    
    &lt;span class="pl-k"&gt;func&lt;/span&gt; &lt;span class="pl-en"&gt;databaseDidChange&lt;/span&gt;(&lt;span class="pl-en"&gt;with&lt;/span&gt; &lt;span class="pl-smi"&gt;event&lt;/span&gt;: DatabaseEvent) {
        &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; This method is only called for changes that happen to&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;        &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; the "player" table.&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;    }
}&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Generally speaking, the &lt;code&gt;observes(eventsOfKind:)&lt;/code&gt; method can distinguish insertions from deletions and updates, and is also able to inspect the columns that are about to be changed:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;class&lt;/span&gt; &lt;span class="pl-en"&gt;PlayerScoreObserver&lt;/span&gt;: &lt;span class="pl-e"&gt;TransactionObserver &lt;/span&gt;{
    &lt;span class="pl-k"&gt;func&lt;/span&gt; &lt;span class="pl-en"&gt;observes&lt;/span&gt;(&lt;span class="pl-en"&gt;eventsOfKind&lt;/span&gt; &lt;span class="pl-smi"&gt;eventKind&lt;/span&gt;: DatabaseEventKind) &lt;span class="pl-k"&gt;-&amp;gt;&lt;/span&gt; &lt;span class="pl-c1"&gt;Bool&lt;/span&gt; {
        &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Only observe changes to the "score" column of the "player" table.&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;        &lt;span class="pl-k"&gt;switch&lt;/span&gt; eventKind {
        &lt;span class="pl-k"&gt;case&lt;/span&gt; .&lt;span class="pl-c1"&gt;insert&lt;/span&gt;(&lt;span class="pl-k"&gt;let&lt;/span&gt; tableName)&lt;span class="pl-k"&gt;:&lt;/span&gt;
            &lt;span class="pl-k"&gt;return&lt;/span&gt; tableName &lt;span class="pl-k"&gt;==&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;player&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;
        &lt;span class="pl-k"&gt;case&lt;/span&gt; .&lt;span class="pl-c1"&gt;delete&lt;/span&gt;(&lt;span class="pl-k"&gt;let&lt;/span&gt; tableName)&lt;span class="pl-k"&gt;:&lt;/span&gt;
            &lt;span class="pl-k"&gt;return&lt;/span&gt; tableName &lt;span class="pl-k"&gt;==&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;player&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;
        &lt;span class="pl-k"&gt;case&lt;/span&gt; .&lt;span class="pl-c1"&gt;update&lt;/span&gt;(&lt;span class="pl-k"&gt;let&lt;/span&gt; tableName, &lt;span class="pl-k"&gt;let&lt;/span&gt; columnNames)&lt;span class="pl-k"&gt;:&lt;/span&gt;
            &lt;span class="pl-k"&gt;return&lt;/span&gt; tableName &lt;span class="pl-k"&gt;==&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;player&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; &lt;span class="pl-k"&gt;&amp;amp;&amp;amp;&lt;/span&gt; columnNames.&lt;span class="pl-c1"&gt;contains&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;score&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
        }
    }
}&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;When the &lt;code&gt;observes(eventsOfKind:)&lt;/code&gt; method returns false for all event kinds, the observer is still notified of commits and rollbacks:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;class&lt;/span&gt; &lt;span class="pl-en"&gt;PureTransactionObserver&lt;/span&gt;: &lt;span class="pl-e"&gt;TransactionObserver &lt;/span&gt;{
    &lt;span class="pl-k"&gt;func&lt;/span&gt; &lt;span class="pl-en"&gt;observes&lt;/span&gt;(&lt;span class="pl-en"&gt;eventsOfKind&lt;/span&gt; &lt;span class="pl-smi"&gt;eventKind&lt;/span&gt;: DatabaseEventKind) &lt;span class="pl-k"&gt;-&amp;gt;&lt;/span&gt; &lt;span class="pl-c1"&gt;Bool&lt;/span&gt; {
        &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Ignore all individual changes&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;        &lt;span class="pl-k"&gt;return&lt;/span&gt; &lt;span class="pl-c1"&gt;false&lt;/span&gt;
    }
    
    &lt;span class="pl-k"&gt;func&lt;/span&gt; &lt;span class="pl-en"&gt;databaseDidChange&lt;/span&gt;(&lt;span class="pl-en"&gt;with&lt;/span&gt; &lt;span class="pl-smi"&gt;event&lt;/span&gt;: DatabaseEvent) { &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;/*&lt;/span&gt; Never called &lt;span class="pl-c"&gt;*/&lt;/span&gt;&lt;/span&gt; }
    &lt;span class="pl-k"&gt;func&lt;/span&gt; &lt;span class="pl-en"&gt;databaseWillCommit&lt;/span&gt;() &lt;span class="pl-k"&gt;throws&lt;/span&gt; { &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;/*&lt;/span&gt; Called before commit &lt;span class="pl-c"&gt;*/&lt;/span&gt;&lt;/span&gt; }
    &lt;span class="pl-k"&gt;func&lt;/span&gt; &lt;span class="pl-en"&gt;databaseDidRollback&lt;/span&gt;(&lt;span class="pl-en"&gt;_&lt;/span&gt; &lt;span class="pl-smi"&gt;db&lt;/span&gt;: Database) { &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;/*&lt;/span&gt; Called on rollback &lt;span class="pl-c"&gt;*/&lt;/span&gt;&lt;/span&gt; }
    &lt;span class="pl-k"&gt;func&lt;/span&gt; &lt;span class="pl-en"&gt;databaseDidCommit&lt;/span&gt;(&lt;span class="pl-en"&gt;_&lt;/span&gt; &lt;span class="pl-smi"&gt;db&lt;/span&gt;: Database) { &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;/*&lt;/span&gt; Called on commit &lt;span class="pl-c"&gt;*/&lt;/span&gt;&lt;/span&gt; }
}&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;For more information about event filtering, see &lt;a href="#databaseregion"&gt;DatabaseRegion&lt;/a&gt;.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-observation-extent" class="anchor" aria-hidden="true" href="#observation-extent"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Observation Extent&lt;/h3&gt;
&lt;p&gt;&lt;strong&gt;You can specify how long an observer is notified of database changes and transactions.&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;The &lt;code&gt;remove(transactionObserver:)&lt;/code&gt; method explicitly stops notifications, at any time:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; From a database queue or pool:&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;dbQueue.&lt;span class="pl-c1"&gt;remove&lt;/span&gt;(&lt;span class="pl-c1"&gt;transactionObserver&lt;/span&gt;: observer)

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; From a database connection:&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;dbQueue.&lt;span class="pl-smi"&gt;inDatabase&lt;/span&gt; { db &lt;span class="pl-k"&gt;in&lt;/span&gt;
    db.&lt;span class="pl-c1"&gt;remove&lt;/span&gt;(&lt;span class="pl-c1"&gt;transactionObserver&lt;/span&gt;: observer)
}&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Alternatively, use the &lt;code&gt;extent&lt;/code&gt; parameter of the &lt;code&gt;add(transactionObserver:extent:)&lt;/code&gt; method:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;let&lt;/span&gt; observer &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;MyObserver&lt;/span&gt;()

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; On a database queue or pool:&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;dbQueue.&lt;span class="pl-c1"&gt;add&lt;/span&gt;(&lt;span class="pl-c1"&gt;transactionObserver&lt;/span&gt;: observer) &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; default extent&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;dbQueue.&lt;span class="pl-c1"&gt;add&lt;/span&gt;(&lt;span class="pl-c1"&gt;transactionObserver&lt;/span&gt;: observer, &lt;span class="pl-c1"&gt;extent&lt;/span&gt;: .&lt;span class="pl-smi"&gt;observerLifetime&lt;/span&gt;)
dbQueue.&lt;span class="pl-c1"&gt;add&lt;/span&gt;(&lt;span class="pl-c1"&gt;transactionObserver&lt;/span&gt;: observer, &lt;span class="pl-c1"&gt;extent&lt;/span&gt;: .&lt;span class="pl-smi"&gt;nextTransaction&lt;/span&gt;)
dbQueue.&lt;span class="pl-c1"&gt;add&lt;/span&gt;(&lt;span class="pl-c1"&gt;transactionObserver&lt;/span&gt;: observer, &lt;span class="pl-c1"&gt;extent&lt;/span&gt;: .&lt;span class="pl-smi"&gt;databaseLifetime&lt;/span&gt;)

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; On a database connection:&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;dbQueue.&lt;span class="pl-smi"&gt;inDatabase&lt;/span&gt; { db &lt;span class="pl-k"&gt;in&lt;/span&gt;
    db.&lt;span class="pl-c1"&gt;add&lt;/span&gt;(&lt;span class="pl-c1"&gt;transactionObserver&lt;/span&gt;: &lt;span class="pl-k"&gt;...&lt;/span&gt;)
}&lt;/pre&gt;&lt;/div&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;The default extent is &lt;code&gt;.observerLifetime&lt;/code&gt;: the database holds a weak reference to the observer, and the observation automatically ends when the observer is deallocated. Meanwhile, observer is notified of all changes and transactions.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;.nextTransaction&lt;/code&gt; activates the observer until the current or next transaction completes. The database keeps a strong reference to the observer until its &lt;code&gt;databaseDidCommit&lt;/code&gt; or &lt;code&gt;databaseDidRollback&lt;/code&gt; method is eventually called. Hereafter the observer won't get any further notification.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;.databaseLifetime&lt;/code&gt; has the database retain and notify the observer until the database connection is closed.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Finally, an observer may ignore all database changes until the end of the current transaction:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;class&lt;/span&gt; &lt;span class="pl-en"&gt;PlayerObserver&lt;/span&gt;: &lt;span class="pl-e"&gt;TransactionObserver &lt;/span&gt;{
    &lt;span class="pl-k"&gt;var&lt;/span&gt; playerTableWasModified &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;false&lt;/span&gt;
    
    &lt;span class="pl-k"&gt;func&lt;/span&gt; &lt;span class="pl-en"&gt;observes&lt;/span&gt;(&lt;span class="pl-en"&gt;eventsOfKind&lt;/span&gt; &lt;span class="pl-smi"&gt;eventKind&lt;/span&gt;: DatabaseEventKind) &lt;span class="pl-k"&gt;-&amp;gt;&lt;/span&gt; &lt;span class="pl-c1"&gt;Bool&lt;/span&gt; {
        &lt;span class="pl-k"&gt;return&lt;/span&gt; eventKind.&lt;span class="pl-smi"&gt;tableName&lt;/span&gt; &lt;span class="pl-k"&gt;==&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;player&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;
    }
    
    &lt;span class="pl-k"&gt;func&lt;/span&gt; &lt;span class="pl-en"&gt;databaseDidChange&lt;/span&gt;(&lt;span class="pl-en"&gt;with&lt;/span&gt; &lt;span class="pl-smi"&gt;event&lt;/span&gt;: DatabaseEvent) {
        playerTableWasModified &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;true&lt;/span&gt;
        
        &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; It is pointless to keep on tracking further changes:&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;        &lt;span class="pl-c1"&gt;stopObservingDatabaseChangesUntilNextTransaction&lt;/span&gt;()
    }
}&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;After &lt;code&gt;stopObservingDatabaseChangesUntilNextTransaction()&lt;/code&gt;, the &lt;code&gt;databaseDidChange(with:)&lt;/code&gt; method will not be notified of any change for the remaining duration of the current transaction. This helps GRDB optimize database observation.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-databaseregion" class="anchor" aria-hidden="true" href="#databaseregion"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;DatabaseRegion&lt;/h3&gt;
&lt;p&gt;&lt;strong&gt;&lt;a href="https://groue.github.io/GRDB.swift/docs/4.5/Structs/DatabaseRegion.html" rel="nofollow"&gt;DatabaseRegion&lt;/a&gt; is a type that helps observing changes in the results of a database &lt;a href="#requests"&gt;request&lt;/a&gt;&lt;/strong&gt;.&lt;/p&gt;
&lt;p&gt;A request knows which database modifications can impact its results. It can communicate this information to &lt;a href="#transactionobserver-protocol"&gt;transaction observers&lt;/a&gt; by the way of a DatabaseRegion.&lt;/p&gt;
&lt;p&gt;DatabaseRegion fuels, for example, &lt;a href="#valueobservation-and-databaseregionobservation"&gt;ValueObservation and DatabaseRegionObservation&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;A region notifies &lt;em&gt;potential&lt;/em&gt; changes, not &lt;em&gt;actual&lt;/em&gt; changes in the results of a request.&lt;/strong&gt; A change is notified if and only if a statement has actually modified the tracked tables and columns by inserting, updating, or deleting a row.&lt;/p&gt;
&lt;p&gt;For example, if you observe the region of &lt;code&gt;Player.select(max(Column("score")))&lt;/code&gt;, then you'll get be notified of all changes performed on the &lt;code&gt;score&lt;/code&gt; column of the &lt;code&gt;player&lt;/code&gt; table (updates, insertions and deletions), even if they do not modify the value of the maximum score. However, you will not get any notification for changes performed on other database tables, or updates to other columns of the player table.&lt;/p&gt;
&lt;p&gt;For more details, see the &lt;a href="http://groue.github.io/GRDB.swift/docs/4.5/Structs/DatabaseRegion.html#/s:4GRDB14DatabaseRegionV10isModified2bySbAA0B5EventV_tF" rel="nofollow"&gt;reference&lt;/a&gt;.&lt;/p&gt;
&lt;h4&gt;&lt;a id="user-content-the-databaseregionconvertible-protocol" class="anchor" aria-hidden="true" href="#the-databaseregionconvertible-protocol"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;The DatabaseRegionConvertible Protocol&lt;/h4&gt;
&lt;p&gt;&lt;strong&gt;DatabaseRegionConvertible&lt;/strong&gt; is a protocol for all types that can turn into a &lt;a href="#databaseregion"&gt;DatabaseRegion&lt;/a&gt;:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;protocol&lt;/span&gt; &lt;span class="pl-en"&gt;DatabaseRegionConvertible&lt;/span&gt; {
    &lt;span class="pl-k"&gt;func&lt;/span&gt; &lt;span class="pl-en"&gt;databaseRegion&lt;/span&gt;(&lt;span class="pl-en"&gt;_&lt;/span&gt; &lt;span class="pl-smi"&gt;db&lt;/span&gt;: Database) &lt;span class="pl-k"&gt;throws&lt;/span&gt; &lt;span class="pl-k"&gt;-&amp;gt;&lt;/span&gt; DatabaseRegion
}&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;All &lt;a href="#requests"&gt;requests&lt;/a&gt; adopt this protocol, and this allows them to be observed with &lt;a href="#databaseregionobservation"&gt;DatabaseRegionObservation&lt;/a&gt; and &lt;a href="#valueobservation"&gt;ValueObservation&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Use this protocol when you want to encapsulate your complex requests in a dedicated type, and still profit from optimized observation APIs. See &lt;a href="#valueobservationtracking_fetch"&gt;&lt;code&gt;ValueObservation.tracking(_:fetch:)&lt;/code&gt;&lt;/a&gt; for more information.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-support-for-sqlite-pre-update-hooks" class="anchor" aria-hidden="true" href="#support-for-sqlite-pre-update-hooks"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Support for SQLite Pre-Update Hooks&lt;/h3&gt;
&lt;p&gt;When SQLite is built with the SQLITE_ENABLE_PREUPDATE_HOOK option, TransactionObserverType gets an extra callback which lets you observe individual column values in the rows modified by a transaction:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;protocol&lt;/span&gt; &lt;span class="pl-en"&gt;TransactionObserverType&lt;/span&gt; : &lt;span class="pl-k"&gt;class&lt;/span&gt; {
    #&lt;span class="pl-k"&gt;if&lt;/span&gt; SQLITE_ENABLE_PREUPDATE_HOOK
    &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;///&lt;/span&gt; Notifies before a database change (insert, update, or delete)&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;    &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;///&lt;/span&gt; with change information (initial / final values for the row's&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;    &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;///&lt;/span&gt; columns).&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;    &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;///&lt;/span&gt;&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;    &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;///&lt;/span&gt; The event is only valid for the duration of this method call. If you&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;    &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;///&lt;/span&gt; need to keep it longer, store a copy: event.copy().&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;    &lt;span class="pl-k"&gt;func&lt;/span&gt; &lt;span class="pl-en"&gt;databaseWillChange&lt;/span&gt;(&lt;span class="pl-en"&gt;with&lt;/span&gt; &lt;span class="pl-smi"&gt;event&lt;/span&gt;: DatabasePreUpdateEvent)
    #&lt;span class="pl-k"&gt;endif&lt;/span&gt;
}&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;This extra API can be activated in two ways:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;Use the GRDB.swift CocoaPod with a custom compilation option, as below. It uses the system SQLite, which is compiled with SQLITE_ENABLE_PREUPDATE_HOOK support, but only on iOS 11.0+ (we don't know the minimum version of macOS, tvOS, watchOS):&lt;/p&gt;
&lt;div class="highlight highlight-source-ruby"&gt;&lt;pre&gt;pod &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;GRDB.swift&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;
platform &lt;span class="pl-c1"&gt;:ios&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;11.0&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt; &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; or above&lt;/span&gt;

post_install &lt;span class="pl-k"&gt;do&lt;/span&gt; |&lt;span class="pl-smi"&gt;installer&lt;/span&gt;|
  installer.pods_project.targets.&lt;span class="pl-c1"&gt;select&lt;/span&gt; { |&lt;span class="pl-smi"&gt;target&lt;/span&gt;| target.name &lt;span class="pl-k"&gt;==&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;GRDB.swift&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; }.each &lt;span class="pl-k"&gt;do&lt;/span&gt; |&lt;span class="pl-smi"&gt;target&lt;/span&gt;|
    target.build_configurations.each &lt;span class="pl-k"&gt;do&lt;/span&gt; |&lt;span class="pl-smi"&gt;config&lt;/span&gt;|
      &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; Enable extra GRDB APIs&lt;/span&gt;
      config.build_settings[&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;OTHER_SWIFT_FLAGS&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;] &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;$(inherited) -D SQLITE_ENABLE_PREUPDATE_HOOK&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;
      &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; Enable extra SQLite APIs&lt;/span&gt;
      config.build_settings[&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;GCC_PREPROCESSOR_DEFINITIONS&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;] &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;$(inherited) GRDB_SQLITE_ENABLE_PREUPDATE_HOOK=1&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;
    &lt;span class="pl-k"&gt;end&lt;/span&gt;
  &lt;span class="pl-k"&gt;end&lt;/span&gt;
&lt;span class="pl-k"&gt;end&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;g-emoji class="g-emoji" alias="warning" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/26a0.png"&gt;⚠️&lt;/g-emoji&gt; &lt;strong&gt;Warning&lt;/strong&gt;: make sure you use the right platform version! You will get runtime errors on devices with a lower version.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;g-emoji class="g-emoji" alias="point_up" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/261d.png"&gt;☝️&lt;/g-emoji&gt; &lt;strong&gt;Note&lt;/strong&gt;: the &lt;code&gt;GRDB_SQLITE_ENABLE_PREUPDATE_HOOK=1&lt;/code&gt; option in &lt;code&gt;GCC_PREPROCESSOR_DEFINITIONS&lt;/code&gt; defines some C function prototypes that are lacking from the system &lt;code&gt;&amp;lt;sqlite3.h&amp;gt;&lt;/code&gt; header. When Xcode eventually ships with an SDK that includes a complete header, you may get a compiler error about duplicate function definitions. When this happens, just remove this &lt;code&gt;GRDB_SQLITE_ENABLE_PREUPDATE_HOOK=1&lt;/code&gt; option.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Use a &lt;a href="Documentation/CustomSQLiteBuilds.md"&gt;custom SQLite build&lt;/a&gt; and activate the &lt;code&gt;SQLITE_ENABLE_PREUPDATE_HOOK&lt;/code&gt; compilation option.&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h1&gt;&lt;a id="user-content-encryption" class="anchor" aria-hidden="true" href="#encryption"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Encryption&lt;/h1&gt;
&lt;p&gt;&lt;strong&gt;GRDB can encrypt your database with &lt;a href="http://sqlcipher.net" rel="nofollow"&gt;SQLCipher&lt;/a&gt; v3.4+.&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Use &lt;a href="http://cocoapods.org/" rel="nofollow"&gt;CocoaPods&lt;/a&gt;, and specify in your &lt;code&gt;Podfile&lt;/code&gt;:&lt;/p&gt;
&lt;div class="highlight highlight-source-ruby"&gt;&lt;pre&gt;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; GRDB with SQLCipher 4&lt;/span&gt;
pod &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;GRDB.swift/SQLCipher&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;
pod &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;SQLCipher&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;~&amp;gt; 4.0&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; GRDB with SQLCipher 3&lt;/span&gt;
pod &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;GRDB.swift/SQLCipher&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;
pod &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;SQLCipher&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;~&amp;gt; 3.4&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="#creating-or-opening-an-encrypted-database"&gt;Creating or Opening an Encrypted Database&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#changing-the-passphrase-of-an-encrypted-database"&gt;Changing the Passphrase of an Encrypted Database&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#exporting-a-database-to-an-encrypted-database"&gt;Exporting a Database to an Encrypted Database&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#security-considerations"&gt;Security Considerations&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;&lt;a id="user-content-creating-or-opening-an-encrypted-database" class="anchor" aria-hidden="true" href="#creating-or-opening-an-encrypted-database"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Creating or Opening an Encrypted Database&lt;/h3&gt;
&lt;p&gt;&lt;strong&gt;You create and open an encrypted database&lt;/strong&gt; by providing a passphrase to your &lt;a href="#database-connections"&gt;database connection&lt;/a&gt;:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;var&lt;/span&gt; config &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;Configuration&lt;/span&gt;()
config.&lt;span class="pl-smi"&gt;prepareDatabase&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; { db &lt;span class="pl-k"&gt;in&lt;/span&gt;
    &lt;span class="pl-k"&gt;try&lt;/span&gt; db.&lt;span class="pl-c1"&gt;usePassphrase&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;secret&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
}
&lt;span class="pl-k"&gt;let&lt;/span&gt; dbQueue &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-k"&gt;try&lt;/span&gt; &lt;span class="pl-c1"&gt;DatabaseQueue&lt;/span&gt;(&lt;span class="pl-c1"&gt;path&lt;/span&gt;: dbPath, &lt;span class="pl-c1"&gt;configuration&lt;/span&gt;: config)&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;It is also in &lt;code&gt;prepareDatabase&lt;/code&gt; that you perform other &lt;a href="https://www.zetetic.net/sqlcipher/sqlcipher-api/" rel="nofollow"&gt;SQLCipher configuration steps&lt;/a&gt; that must happen early in the lifetime of a SQLCipher connection. For example:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;var&lt;/span&gt; config &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;Configuration&lt;/span&gt;()
config.&lt;span class="pl-smi"&gt;prepareDatabase&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; { db &lt;span class="pl-k"&gt;in&lt;/span&gt;
    &lt;span class="pl-k"&gt;try&lt;/span&gt; db.&lt;span class="pl-c1"&gt;usePassphrase&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;secret&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
    &lt;span class="pl-k"&gt;try&lt;/span&gt; db.&lt;span class="pl-c1"&gt;execute&lt;/span&gt;(&lt;span class="pl-c1"&gt;sql&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;PRAGMA cipher_page_size = ...&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
    &lt;span class="pl-k"&gt;try&lt;/span&gt; db.&lt;span class="pl-c1"&gt;execute&lt;/span&gt;(&lt;span class="pl-c1"&gt;sql&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;PRAGMA kdf_iter = ...&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
}
&lt;span class="pl-k"&gt;let&lt;/span&gt; dbQueue &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-k"&gt;try&lt;/span&gt; &lt;span class="pl-c1"&gt;DatabaseQueue&lt;/span&gt;(&lt;span class="pl-c1"&gt;path&lt;/span&gt;: dbPath, &lt;span class="pl-c1"&gt;configuration&lt;/span&gt;: config)&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;When you want to open an existing SQLCipher 3 database with SQLCipher 4, you may want to run the &lt;code&gt;cipher_compatibility&lt;/code&gt; pragma:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Open an SQLCipher 3 database with SQLCipher 4&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;&lt;span class="pl-k"&gt;var&lt;/span&gt; config &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;Configuration&lt;/span&gt;()
config.&lt;span class="pl-smi"&gt;prepareDatabase&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; { db &lt;span class="pl-k"&gt;in&lt;/span&gt;
    &lt;span class="pl-k"&gt;try&lt;/span&gt; db.&lt;span class="pl-c1"&gt;usePassphrase&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;secret&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
    &lt;span class="pl-k"&gt;try&lt;/span&gt; db.&lt;span class="pl-c1"&gt;execute&lt;/span&gt;(&lt;span class="pl-c1"&gt;sql&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;PRAGMA cipher_compatibility = 3&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
}
&lt;span class="pl-k"&gt;let&lt;/span&gt; dbQueue &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-k"&gt;try&lt;/span&gt; &lt;span class="pl-c1"&gt;DatabaseQueue&lt;/span&gt;(&lt;span class="pl-c1"&gt;path&lt;/span&gt;: dbPath, &lt;span class="pl-c1"&gt;configuration&lt;/span&gt;: config)&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;See &lt;a href="https://www.zetetic.net/blog/2018/11/30/sqlcipher-400-release/" rel="nofollow"&gt;SQLCipher 4.0.0 Release&lt;/a&gt; and &lt;a href="https://discuss.zetetic.net/t/upgrading-to-sqlcipher-4/3283" rel="nofollow"&gt;Upgrading to SQLCipher 4&lt;/a&gt; for more information.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-changing-the-passphrase-of-an-encrypted-database" class="anchor" aria-hidden="true" href="#changing-the-passphrase-of-an-encrypted-database"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Changing the Passphrase of an Encrypted Database&lt;/h3&gt;
&lt;p&gt;&lt;strong&gt;You can change the passphrase&lt;/strong&gt; of an already encrypted database.&lt;/p&gt;
&lt;p&gt;When you use a &lt;a href="#database-queues"&gt;database queue&lt;/a&gt;, open the database with the old passphrase, and then apply the new passphrase:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;try&lt;/span&gt; dbQueue.&lt;span class="pl-smi"&gt;write&lt;/span&gt; { db &lt;span class="pl-k"&gt;in&lt;/span&gt;
    &lt;span class="pl-k"&gt;try&lt;/span&gt; db.&lt;span class="pl-c1"&gt;changePassphrase&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;newSecret&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
}&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;When you use a &lt;a href="#database-pools"&gt;database pool&lt;/a&gt;, make sure that no concurrent read can happen by changing the passphrase within the &lt;code&gt;barrierWriteWithoutTransaction&lt;/code&gt; block. You must also ensure all future reads open a new database connection by calling the &lt;code&gt;invalidateReadOnlyConnections&lt;/code&gt; method:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;try&lt;/span&gt; dbPool.&lt;span class="pl-smi"&gt;barrierWriteWithoutTransaction&lt;/span&gt; { db &lt;span class="pl-k"&gt;in&lt;/span&gt;
    &lt;span class="pl-k"&gt;try&lt;/span&gt; db.&lt;span class="pl-c1"&gt;changePassphrase&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;newSecret&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
    dbPool.&lt;span class="pl-c1"&gt;invalidateReadOnlyConnections&lt;/span&gt;()
}&lt;/pre&gt;&lt;/div&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;g-emoji class="g-emoji" alias="point_up" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/261d.png"&gt;☝️&lt;/g-emoji&gt; &lt;strong&gt;Note&lt;/strong&gt;: When an application wants to keep on using a database queue or pool after the passphrase has changed, it is responsible for providing the correct passphrase to the &lt;code&gt;usePassphrase&lt;/code&gt; method called in the database preparation function. Consider:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; WRONG: this won't work across a passphrase change&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;&lt;span class="pl-k"&gt;let&lt;/span&gt; passphrase &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-k"&gt;try&lt;/span&gt; &lt;span class="pl-c1"&gt;getPassphrase&lt;/span&gt;()
&lt;span class="pl-k"&gt;var&lt;/span&gt; config &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;Configuration&lt;/span&gt;()
config.&lt;span class="pl-smi"&gt;prepareDatabase&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; { db &lt;span class="pl-k"&gt;in&lt;/span&gt;
    &lt;span class="pl-k"&gt;try&lt;/span&gt; db.&lt;span class="pl-c1"&gt;usePassphrase&lt;/span&gt;(passphrase)
}

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; CORRECT: get the latest passphrase when it is needed&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;&lt;span class="pl-k"&gt;var&lt;/span&gt; config &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;Configuration&lt;/span&gt;()
config.&lt;span class="pl-smi"&gt;prepareDatabase&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; { db &lt;span class="pl-k"&gt;in&lt;/span&gt;
    &lt;span class="pl-k"&gt;let&lt;/span&gt; passphrase &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-k"&gt;try&lt;/span&gt; &lt;span class="pl-c1"&gt;getPassphrase&lt;/span&gt;()
    &lt;span class="pl-k"&gt;try&lt;/span&gt; db.&lt;span class="pl-c1"&gt;usePassphrase&lt;/span&gt;(passphrase)
}&lt;/pre&gt;&lt;/div&gt;
&lt;/blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;g-emoji class="g-emoji" alias="point_up" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/261d.png"&gt;☝️&lt;/g-emoji&gt; &lt;strong&gt;Note&lt;/strong&gt;: The &lt;code&gt;DatabasePool.barrierWriteWithoutTransaction&lt;/code&gt; method does not prevent &lt;a href="#database-snapshots"&gt;database snapshots&lt;/a&gt; from accessing the database during the passphrase change, or after the new passphrase has been applied to the database. Those database accesses may throw errors. Applications should provide their own mechanism for invalidating open snapshots before the passphrase is changed.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;g-emoji class="g-emoji" alias="point_up" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/261d.png"&gt;☝️&lt;/g-emoji&gt; &lt;strong&gt;Note&lt;/strong&gt;: Instead of changing the passphrase "in place" as described here, you can also export the database in a new encrypted database that uses the new passphrase. See &lt;a href="#exporting-a-database-to-an-encrypted-database"&gt;Exporting a Database to an Encrypted Database&lt;/a&gt;.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3&gt;&lt;a id="user-content-exporting-a-database-to-an-encrypted-database" class="anchor" aria-hidden="true" href="#exporting-a-database-to-an-encrypted-database"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Exporting a Database to an Encrypted Database&lt;/h3&gt;
&lt;p&gt;Providing a passphrase won't encrypt a clear-text database that already exists, though. SQLCipher can't do that, and you will get an error instead: &lt;code&gt;SQLite error 26: file is encrypted or is not a database&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;Instead, create a new encrypted database, at a distinct location, and export the content of the existing database. This can both encrypt a clear-text database, or change the passphrase of an encrypted databaase.&lt;/p&gt;
&lt;p&gt;The technique to do that is &lt;a href="https://discuss.zetetic.net/t/how-to-encrypt-a-plaintext-sqlite-database-to-use-sqlcipher-and-avoid-file-is-encrypted-or-is-not-a-database-errors/868/1" rel="nofollow"&gt;documented&lt;/a&gt; by SQLCipher.&lt;/p&gt;
&lt;p&gt;With GRDB, it gives:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; The existing database&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;&lt;span class="pl-k"&gt;let&lt;/span&gt; existingDBQueue &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-k"&gt;try&lt;/span&gt; &lt;span class="pl-c1"&gt;DatabaseQueue&lt;/span&gt;(&lt;span class="pl-c1"&gt;path&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;/path/to/existing.db&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; The new encrypted database, at some distinct location:&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;&lt;span class="pl-k"&gt;var&lt;/span&gt; config &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;Configuration&lt;/span&gt;()
config.&lt;span class="pl-smi"&gt;prepareDatabase&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; { db &lt;span class="pl-k"&gt;in&lt;/span&gt;
    &lt;span class="pl-k"&gt;try&lt;/span&gt; db.&lt;span class="pl-c1"&gt;usePassphrase&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;secret&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
}
&lt;span class="pl-k"&gt;let&lt;/span&gt; newDBQueue &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-k"&gt;try&lt;/span&gt; &lt;span class="pl-c1"&gt;DatabaseQueue&lt;/span&gt;(&lt;span class="pl-c1"&gt;path&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;/path/to/new.db&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-c1"&gt;configuration&lt;/span&gt;: config)

&lt;span class="pl-k"&gt;try&lt;/span&gt; existingDBQueue.&lt;span class="pl-smi"&gt;inDatabase&lt;/span&gt; { db &lt;span class="pl-k"&gt;in&lt;/span&gt;
    &lt;span class="pl-k"&gt;try&lt;/span&gt; db.&lt;span class="pl-c1"&gt;execute&lt;/span&gt;(
        &lt;span class="pl-c1"&gt;sql&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"""&lt;/span&gt;&lt;/span&gt;
&lt;span class="pl-s"&gt;            ATTACH DATABASE ? AS encrypted KEY ?;&lt;/span&gt;
&lt;span class="pl-s"&gt;            SELECT sqlcipher_export('encrypted');&lt;/span&gt;
&lt;span class="pl-s"&gt;            DETACH DATABASE encrypted;&lt;/span&gt;
&lt;span class="pl-s"&gt;            &lt;span class="pl-pds"&gt;"""&lt;/span&gt;&lt;/span&gt;,
        &lt;span class="pl-c1"&gt;arguments&lt;/span&gt;: [newDBQueue.&lt;span class="pl-smi"&gt;path&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;secret&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;])
}

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Now the export is completed, and the existing database can be deleted.&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h3&gt;&lt;a id="user-content-security-considerations" class="anchor" aria-hidden="true" href="#security-considerations"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Security Considerations&lt;/h3&gt;
&lt;h4&gt;&lt;a id="user-content-managing-the-lifetime-of-the-passphrase-string" class="anchor" aria-hidden="true" href="#managing-the-lifetime-of-the-passphrase-string"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Managing the lifetime of the passphrase string&lt;/h4&gt;
&lt;p&gt;It is recommended to avoid keeping the passphrase in memory longer than necessary. To do this, make sure you load the passphrase from inside the &lt;code&gt;prepareDatabase&lt;/code&gt; function:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; NOT RECOMMENDED: this keeps the passphrase in memory longer than necessary&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;&lt;span class="pl-k"&gt;let&lt;/span&gt; passphrase &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-k"&gt;try&lt;/span&gt; &lt;span class="pl-c1"&gt;getPassphrase&lt;/span&gt;()
&lt;span class="pl-k"&gt;var&lt;/span&gt; config &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;Configuration&lt;/span&gt;()
config.&lt;span class="pl-smi"&gt;prepareDatabase&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; { db &lt;span class="pl-k"&gt;in&lt;/span&gt;
    &lt;span class="pl-k"&gt;try&lt;/span&gt; db.&lt;span class="pl-c1"&gt;usePassphrase&lt;/span&gt;(passphrase)
}

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; RECOMMENDED: only load the passphrase when it is needed&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;&lt;span class="pl-k"&gt;var&lt;/span&gt; config &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;Configuration&lt;/span&gt;()
config.&lt;span class="pl-smi"&gt;prepareDatabase&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; { db &lt;span class="pl-k"&gt;in&lt;/span&gt;
    &lt;span class="pl-k"&gt;let&lt;/span&gt; passphrase &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-k"&gt;try&lt;/span&gt; &lt;span class="pl-c1"&gt;getPassphrase&lt;/span&gt;()
    &lt;span class="pl-k"&gt;try&lt;/span&gt; db.&lt;span class="pl-c1"&gt;usePassphrase&lt;/span&gt;(passphrase)
}&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;This technique manages the lifetime of the passphrase string. Some demanding users will want to go further, and manage the lifetime of the raw passphrase bytes. See below.&lt;/p&gt;
&lt;h4&gt;&lt;a id="user-content-managing-the-lifetime-of-the-passphrase-bytes" class="anchor" aria-hidden="true" href="#managing-the-lifetime-of-the-passphrase-bytes"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Managing the lifetime of the passphrase bytes&lt;/h4&gt;
&lt;p&gt;GRDB offers convenience methods for providing the database passphrases as Swift strings: &lt;code&gt;usePassphrase(_:)&lt;/code&gt; and &lt;code&gt;changePassphrase(_:)&lt;/code&gt;. Those methods don't keep the passphrase String in memory longer than necessary. But they are as secure as the standard String type: the lifetime of actual passphrase bytes in memory is not under control.&lt;/p&gt;
&lt;p&gt;When you want to precisely manage the passphrase bytes, talk directly to SQLCipher, using its raw C functions.&lt;/p&gt;
&lt;p&gt;For example:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;import&lt;/span&gt; &lt;span class="pl-en"&gt;GRDB&lt;/span&gt;
&lt;span class="pl-k"&gt;import&lt;/span&gt; &lt;span class="pl-en"&gt;SQLCipher&lt;/span&gt;

&lt;span class="pl-k"&gt;var&lt;/span&gt; config &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;Configuration&lt;/span&gt;()
config.&lt;span class="pl-smi"&gt;prepareDatabase&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; { db &lt;span class="pl-k"&gt;in&lt;/span&gt;
    &lt;span class="pl-k"&gt;...&lt;/span&gt; &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Carefully load passphrase bytes&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;    &lt;span class="pl-k"&gt;let&lt;/span&gt; code &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;sqlite3_key&lt;/span&gt;(db.&lt;span class="pl-smi"&gt;sqliteConnection&lt;/span&gt;, &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;/*&lt;/span&gt; passphrase bytes &lt;span class="pl-c"&gt;*/&lt;/span&gt;&lt;/span&gt;)
    &lt;span class="pl-k"&gt;...&lt;/span&gt; &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Carefully dispose passphrase bytes&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;    &lt;span class="pl-k"&gt;guard&lt;/span&gt; code &lt;span class="pl-k"&gt;==&lt;/span&gt; SQLITE_OK &lt;span class="pl-k"&gt;else&lt;/span&gt; {
        &lt;span class="pl-k"&gt;throw&lt;/span&gt; &lt;span class="pl-c1"&gt;DatabaseError&lt;/span&gt;(
            &lt;span class="pl-c1"&gt;resultCode&lt;/span&gt;: &lt;span class="pl-c1"&gt;ResultCode&lt;/span&gt;(&lt;span class="pl-c1"&gt;rawValue&lt;/span&gt;: code), 
            &lt;span class="pl-c1"&gt;message&lt;/span&gt;: db.&lt;span class="pl-smi"&gt;lastErrorMessage&lt;/span&gt;)
    }
}
&lt;span class="pl-k"&gt;let&lt;/span&gt; dbQueue &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-k"&gt;try&lt;/span&gt; &lt;span class="pl-c1"&gt;DatabaseQueue&lt;/span&gt;(&lt;span class="pl-c1"&gt;path&lt;/span&gt;: dbPath, &lt;span class="pl-c1"&gt;configuration&lt;/span&gt;: config)&lt;/pre&gt;&lt;/div&gt;
&lt;h4&gt;&lt;a id="user-content-passphrase-availability-vs-database-availability" class="anchor" aria-hidden="true" href="#passphrase-availability-vs-database-availability"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Passphrase availability vs. Database availability&lt;/h4&gt;
&lt;p&gt;When the passphrase is securely stored in the system keychain, your application can protect it using the &lt;a href="https://developer.apple.com/documentation/security/ksecattraccessible" rel="nofollow"&gt;&lt;code&gt;kSecAttrAccessible&lt;/code&gt;&lt;/a&gt; attribute.&lt;/p&gt;
&lt;p&gt;Such protection prevents GRDB from creating SQLite connections when the passphrase is not available:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;var&lt;/span&gt; config &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;Configuration&lt;/span&gt;()
config.&lt;span class="pl-smi"&gt;prepareDatabase&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; { db &lt;span class="pl-k"&gt;in&lt;/span&gt;
    &lt;span class="pl-k"&gt;let&lt;/span&gt; passphrase &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-k"&gt;try&lt;/span&gt; &lt;span class="pl-c1"&gt;loadPassphraseFromSystemKeychain&lt;/span&gt;()
    &lt;span class="pl-k"&gt;try&lt;/span&gt; db.&lt;span class="pl-c1"&gt;usePassphrase&lt;/span&gt;(passphrase)
}

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Success if and only if the passphrase is available&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;&lt;span class="pl-k"&gt;let&lt;/span&gt; dbQueue &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-k"&gt;try&lt;/span&gt; &lt;span class="pl-c1"&gt;DatabaseQueue&lt;/span&gt;(&lt;span class="pl-c1"&gt;path&lt;/span&gt;: dbPath, &lt;span class="pl-c1"&gt;configuration&lt;/span&gt;: config)&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;For the same reason, &lt;a href="#database-pools"&gt;database pools&lt;/a&gt;, which open SQLite connections on demand, may fail at any time as soon as the passphrase becomes unavailable:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Success if and only if the passphrase is available&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;&lt;span class="pl-k"&gt;let&lt;/span&gt; dbPool &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-k"&gt;try&lt;/span&gt; &lt;span class="pl-c1"&gt;DatabasePool&lt;/span&gt;(&lt;span class="pl-c1"&gt;path&lt;/span&gt;: dbPath, &lt;span class="pl-c1"&gt;configuration&lt;/span&gt;: config)

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; May fail if passphrase has turned unavailable&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;&lt;span class="pl-k"&gt;try&lt;/span&gt; dbPool.&lt;span class="pl-smi"&gt;read&lt;/span&gt; { &lt;span class="pl-k"&gt;...&lt;/span&gt; }

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; May trigger value observation failure if passphrase has turned unavailable&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;&lt;span class="pl-k"&gt;try&lt;/span&gt; dbPool.&lt;span class="pl-smi"&gt;write&lt;/span&gt; { &lt;span class="pl-k"&gt;...&lt;/span&gt; }&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Because DatabasePool maintains a pool of long-lived SQLite connections, some database accesses will use an existing connection, and succeed. And some other database accesses will fail, as soon as the pool wants to open a new connection. It is impossible to predict which accesses will succeed or fail.&lt;/p&gt;
&lt;p&gt;For the same reason, a database queue, which also maintains a long-lived SQLite connection, will remain available even after the passphrase has turned unavailable.&lt;/p&gt;
&lt;p&gt;Applications are thus responsible for protecting database accesses when the passphrase is unavailable. To this end, they can use &lt;a href="#data-protection"&gt;Data Protection&lt;/a&gt;. They can also destroy their instances of database queue or pool when the passphrase becomes unavailable.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-backup" class="anchor" aria-hidden="true" href="#backup"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Backup&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;You can backup (copy) a database into another.&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Backups can for example help you copying an in-memory database to and from a database file when you implement NSDocument subclasses.&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;let&lt;/span&gt; source&lt;span class="pl-k"&gt;:&lt;/span&gt; DatabaseQueue &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-k"&gt;...&lt;/span&gt;      &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; or DatabasePool&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;&lt;span class="pl-k"&gt;let&lt;/span&gt; destination&lt;span class="pl-k"&gt;:&lt;/span&gt; DatabaseQueue &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-k"&gt;...&lt;/span&gt; &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; or DatabasePool&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;&lt;span class="pl-k"&gt;try&lt;/span&gt; source.&lt;span class="pl-c1"&gt;backup&lt;/span&gt;(&lt;span class="pl-c1"&gt;to&lt;/span&gt;: destination)&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;The &lt;code&gt;backup&lt;/code&gt; method blocks the current thread until the destination database contains the same contents as the source database.&lt;/p&gt;
&lt;p&gt;When the source is a &lt;a href="#database-pools"&gt;database pool&lt;/a&gt;, concurrent writes can happen during the backup. Those writes may, or may not, be reflected in the backup, but they won't trigger any error.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-avoiding-sql-injection" class="anchor" aria-hidden="true" href="#avoiding-sql-injection"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Avoiding SQL Injection&lt;/h2&gt;
&lt;p&gt;SQL injection is a technique that lets an attacker nuke your database.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="https://camo.githubusercontent.com/cecf339daf48ee4cfe86f33630c3732cdc2ab0e1/68747470733a2f2f696d67732e786b63642e636f6d2f636f6d6963732f6578706c6f6974735f6f665f615f6d6f6d2e706e67"&gt;&lt;img src="https://camo.githubusercontent.com/cecf339daf48ee4cfe86f33630c3732cdc2ab0e1/68747470733a2f2f696d67732e786b63642e636f6d2f636f6d6963732f6578706c6f6974735f6f665f615f6d6f6d2e706e67" alt="XKCD: Exploits of a Mom" data-canonical-src="https://imgs.xkcd.com/comics/exploits_of_a_mom.png" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href="https://xkcd.com/327/" rel="nofollow"&gt;https://xkcd.com/327/&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Here is an example of code that is vulnerable to SQL injection:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; BAD BAD BAD&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;&lt;span class="pl-k"&gt;let&lt;/span&gt; id &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;1&lt;/span&gt;
&lt;span class="pl-k"&gt;let&lt;/span&gt; name &lt;span class="pl-k"&gt;=&lt;/span&gt; textField.&lt;span class="pl-c1"&gt;text&lt;/span&gt;
&lt;span class="pl-k"&gt;try&lt;/span&gt; dbQueue.&lt;span class="pl-smi"&gt;write&lt;/span&gt; { db &lt;span class="pl-k"&gt;in&lt;/span&gt;
    &lt;span class="pl-k"&gt;try&lt;/span&gt; db.&lt;span class="pl-c1"&gt;execute&lt;/span&gt;(&lt;span class="pl-c1"&gt;sql&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;UPDATE students SET name = '&lt;span class="pl-pse"&gt;\(&lt;/span&gt;&lt;span class="pl-s1"&gt;name&lt;/span&gt;&lt;span class="pl-pse"&gt;&lt;span class="pl-s1"&gt;)&lt;/span&gt;&lt;/span&gt;' WHERE id = &lt;span class="pl-pse"&gt;\(&lt;/span&gt;&lt;span class="pl-s1"&gt;id&lt;/span&gt;&lt;span class="pl-pse"&gt;&lt;span class="pl-s1"&gt;)&lt;/span&gt;&lt;/span&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
}&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;If the user enters a funny string like &lt;code&gt;Robert'; DROP TABLE students; --&lt;/code&gt;, SQLite will see the following SQL, and drop your database table instead of updating a name as intended:&lt;/p&gt;
&lt;div class="highlight highlight-source-sql"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;UPDATE&lt;/span&gt; students &lt;span class="pl-k"&gt;SET&lt;/span&gt; name &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;Robert&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;;
&lt;span class="pl-k"&gt;DROP&lt;/span&gt; &lt;span class="pl-k"&gt;TABLE&lt;/span&gt; students;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;--&lt;/span&gt;' WHERE id = 1&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;To avoid those problems, &lt;strong&gt;never embed raw values in your SQL queries&lt;/strong&gt;. The only correct technique is to provide &lt;a href="#executing-updates"&gt;arguments&lt;/a&gt; to your raw SQL queries:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;let&lt;/span&gt; name &lt;span class="pl-k"&gt;=&lt;/span&gt; textField.&lt;span class="pl-c1"&gt;text&lt;/span&gt;
&lt;span class="pl-k"&gt;try&lt;/span&gt; dbQueue.&lt;span class="pl-smi"&gt;write&lt;/span&gt; { db &lt;span class="pl-k"&gt;in&lt;/span&gt;
    &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Good&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;    &lt;span class="pl-k"&gt;try&lt;/span&gt; db.&lt;span class="pl-c1"&gt;execute&lt;/span&gt;(
        &lt;span class="pl-c1"&gt;sql&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;UPDATE students SET name = ? WHERE id = ?&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;,
        &lt;span class="pl-c1"&gt;arguments&lt;/span&gt;: [name, id])
    
    &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Just as good&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;    &lt;span class="pl-k"&gt;try&lt;/span&gt; db.&lt;span class="pl-c1"&gt;execute&lt;/span&gt;(
        &lt;span class="pl-c1"&gt;sql&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;UPDATE students SET name = :name WHERE id = :id&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;,
        &lt;span class="pl-c1"&gt;arguments&lt;/span&gt;: [&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;name&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;&lt;span class="pl-k"&gt;:&lt;/span&gt; name, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;id&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;&lt;span class="pl-k"&gt;:&lt;/span&gt; id])
}&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;When you use &lt;a href="#records"&gt;records&lt;/a&gt; and the &lt;a href="#the-query-interface"&gt;query interface&lt;/a&gt;, GRDB always prevents SQL injection for you:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;let&lt;/span&gt; id &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;1&lt;/span&gt;
&lt;span class="pl-k"&gt;let&lt;/span&gt; name &lt;span class="pl-k"&gt;=&lt;/span&gt; textField.&lt;span class="pl-c1"&gt;text&lt;/span&gt;
&lt;span class="pl-k"&gt;try&lt;/span&gt; dbQueue.&lt;span class="pl-smi"&gt;write&lt;/span&gt; { db &lt;span class="pl-k"&gt;in&lt;/span&gt;
    &lt;span class="pl-k"&gt;if&lt;/span&gt; &lt;span class="pl-k"&gt;var&lt;/span&gt; student &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-k"&gt;try&lt;/span&gt; Student.&lt;span class="pl-c1"&gt;fetchOne&lt;/span&gt;(db, &lt;span class="pl-c1"&gt;key&lt;/span&gt;: id) {
        student.&lt;span class="pl-smi"&gt;name&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; name
        &lt;span class="pl-k"&gt;try&lt;/span&gt; student.&lt;span class="pl-c1"&gt;update&lt;/span&gt;(db)
    }
}&lt;/pre&gt;&lt;/div&gt;
&lt;h2&gt;&lt;a id="user-content-error-handling" class="anchor" aria-hidden="true" href="#error-handling"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Error Handling&lt;/h2&gt;
&lt;p&gt;GRDB can throw &lt;a href="#databaseerror"&gt;DatabaseError&lt;/a&gt;, &lt;a href="#persistenceerror"&gt;PersistenceError&lt;/a&gt;, or crash your program with a &lt;a href="#fatal-errors"&gt;fatal error&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Considering that a local database is not some JSON loaded from a remote server, GRDB focuses on &lt;strong&gt;trusted databases&lt;/strong&gt;. Dealing with &lt;a href="#how-to-deal-with-untrusted-inputs"&gt;untrusted databases&lt;/a&gt; requires extra care.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="#databaseerror"&gt;DatabaseError&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#persistenceerror"&gt;PersistenceError&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#fatal-errors"&gt;Fatal Errors&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#how-to-deal-with-untrusted-inputs"&gt;How to Deal with Untrusted Inputs&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#error-log"&gt;Error Log&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;&lt;a id="user-content-databaseerror" class="anchor" aria-hidden="true" href="#databaseerror"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;DatabaseError&lt;/h3&gt;
&lt;p&gt;&lt;strong&gt;DatabaseError&lt;/strong&gt; are thrown on SQLite errors:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;do&lt;/span&gt; {
    &lt;span class="pl-k"&gt;try&lt;/span&gt; db.&lt;span class="pl-c1"&gt;execute&lt;/span&gt;(
        &lt;span class="pl-c1"&gt;sql&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;INSERT INTO pet (masterId, name) VALUES (?, ?)&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;,
        &lt;span class="pl-c1"&gt;arguments&lt;/span&gt;: [&lt;span class="pl-c1"&gt;1&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;Bobby&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;])
} &lt;span class="pl-k"&gt;catch&lt;/span&gt; &lt;span class="pl-k"&gt;let&lt;/span&gt; error &lt;span class="pl-k"&gt;as&lt;/span&gt; DatabaseError {
    &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; The SQLite error code: 19 (SQLITE_CONSTRAINT)&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;    error.&lt;span class="pl-smi"&gt;resultCode&lt;/span&gt;
    
    &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; The extended error code: 787 (SQLITE_CONSTRAINT_FOREIGNKEY)&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;    error.&lt;span class="pl-smi"&gt;extendedResultCode&lt;/span&gt;
    
    &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; The eventual SQLite message: FOREIGN KEY constraint failed&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;    error.&lt;span class="pl-smi"&gt;message&lt;/span&gt;
    
    &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; The eventual erroneous SQL query&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;    &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; "INSERT INTO pet (masterId, name) VALUES (?, ?)"&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;    error.&lt;span class="pl-smi"&gt;sql&lt;/span&gt;
    
    &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Full error description:&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;    &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; "SQLite error 19 with statement `INSERT INTO pet (masterId, name)&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;    &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt;  VALUES (?, ?)` arguments [1, "Bobby"]: FOREIGN KEY constraint failed""&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;    error.&lt;span class="pl-c1"&gt;description&lt;/span&gt;
}&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;strong&gt;SQLite uses codes to distinguish between various errors:&lt;/strong&gt;&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;do&lt;/span&gt; {
    &lt;span class="pl-k"&gt;try&lt;/span&gt; &lt;span class="pl-k"&gt;...&lt;/span&gt;
} &lt;span class="pl-k"&gt;catch&lt;/span&gt; &lt;span class="pl-k"&gt;let&lt;/span&gt; error &lt;span class="pl-k"&gt;as&lt;/span&gt; DatabaseError &lt;span class="pl-k"&gt;where&lt;/span&gt; error.&lt;span class="pl-smi"&gt;extendedResultCode&lt;/span&gt; &lt;span class="pl-k"&gt;==&lt;/span&gt; .&lt;span class="pl-smi"&gt;SQLITE_CONSTRAINT_FOREIGNKEY&lt;/span&gt; {
    &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; foreign key constraint error&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;} &lt;span class="pl-k"&gt;catch&lt;/span&gt; &lt;span class="pl-k"&gt;let&lt;/span&gt; error &lt;span class="pl-k"&gt;as&lt;/span&gt; DatabaseError &lt;span class="pl-k"&gt;where&lt;/span&gt; error.&lt;span class="pl-smi"&gt;resultCode&lt;/span&gt; &lt;span class="pl-k"&gt;==&lt;/span&gt; .&lt;span class="pl-smi"&gt;SQLITE_CONSTRAINT&lt;/span&gt; {
    &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; any other constraint error&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;} &lt;span class="pl-k"&gt;catch&lt;/span&gt; &lt;span class="pl-k"&gt;let&lt;/span&gt; error &lt;span class="pl-k"&gt;as&lt;/span&gt; DatabaseError {
    &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; any other database error&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;}&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;In the example above, &lt;code&gt;error.extendedResultCode&lt;/code&gt; is a precise &lt;a href="https://www.sqlite.org/rescode.html#extended_result_code_list" rel="nofollow"&gt;extended result code&lt;/a&gt;, and &lt;code&gt;error.resultCode&lt;/code&gt; is a less precise &lt;a href="https://www.sqlite.org/rescode.html#primary_result_code_list" rel="nofollow"&gt;primary result code&lt;/a&gt;. Extended result codes are refinements of primary result codes, as &lt;code&gt;SQLITE_CONSTRAINT_FOREIGNKEY&lt;/code&gt; is to &lt;code&gt;SQLITE_CONSTRAINT&lt;/code&gt;, for example. See &lt;a href="https://www.sqlite.org/rescode.html" rel="nofollow"&gt;SQLite result codes&lt;/a&gt; for more information.&lt;/p&gt;
&lt;p&gt;As a convenience, extended result codes match their primary result code in a switch statement:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;do&lt;/span&gt; {
    &lt;span class="pl-k"&gt;try&lt;/span&gt; &lt;span class="pl-k"&gt;...&lt;/span&gt;
} &lt;span class="pl-k"&gt;catch&lt;/span&gt; &lt;span class="pl-k"&gt;let&lt;/span&gt; error &lt;span class="pl-k"&gt;as&lt;/span&gt; DatabaseError {
    &lt;span class="pl-k"&gt;switch&lt;/span&gt; error.&lt;span class="pl-smi"&gt;extendedResultCode&lt;/span&gt; {
    &lt;span class="pl-k"&gt;case&lt;/span&gt; ResultCode.&lt;span class="pl-smi"&gt;SQLITE_CONSTRAINT_FOREIGNKEY&lt;/span&gt;&lt;span class="pl-k"&gt;:&lt;/span&gt;
        &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; foreign key constraint error&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;    &lt;span class="pl-k"&gt;case&lt;/span&gt; ResultCode.&lt;span class="pl-smi"&gt;SQLITE_CONSTRAINT&lt;/span&gt;&lt;span class="pl-k"&gt;:&lt;/span&gt;
        &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; any other constraint error&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;    &lt;span class="pl-k"&gt;default&lt;/span&gt;&lt;span class="pl-k"&gt;:&lt;/span&gt;
        &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; any other database error&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;    }
}&lt;/pre&gt;&lt;/div&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;g-emoji class="g-emoji" alias="warning" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/26a0.png"&gt;⚠️&lt;/g-emoji&gt; &lt;strong&gt;Warning&lt;/strong&gt;: SQLite has progressively introduced extended result codes accross its versions. The &lt;a href="http://www.sqlite.org/changes.html" rel="nofollow"&gt;SQLite release notes&lt;/a&gt; are unfortunately not quite clear about that: write your handling of extended result codes with care.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3&gt;&lt;a id="user-content-persistenceerror" class="anchor" aria-hidden="true" href="#persistenceerror"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;PersistenceError&lt;/h3&gt;
&lt;p&gt;&lt;strong&gt;PersistenceError&lt;/strong&gt; is thrown by the &lt;a href="#persistablerecord-protocol"&gt;PersistableRecord&lt;/a&gt; protocol, in a single case: when the &lt;code&gt;update&lt;/code&gt; method could not find any row to update:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;do&lt;/span&gt; {
    &lt;span class="pl-k"&gt;try&lt;/span&gt; player.&lt;span class="pl-c1"&gt;update&lt;/span&gt;(db)
} &lt;span class="pl-k"&gt;catch&lt;/span&gt; &lt;span class="pl-k"&gt;let&lt;/span&gt; PersistenceError.&lt;span class="pl-c1"&gt;recordNotFound&lt;/span&gt;(&lt;span class="pl-c1"&gt;databaseTableName&lt;/span&gt;: table, &lt;span class="pl-c1"&gt;key&lt;/span&gt;: key) {
    &lt;span class="pl-c1"&gt;print&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;Key &lt;span class="pl-pse"&gt;\(&lt;/span&gt;&lt;span class="pl-s1"&gt;key&lt;/span&gt;&lt;span class="pl-pse"&gt;&lt;span class="pl-s1"&gt;)&lt;/span&gt;&lt;/span&gt; was not found in table &lt;span class="pl-pse"&gt;\(&lt;/span&gt;&lt;span class="pl-s1"&gt;table&lt;/span&gt;&lt;span class="pl-pse"&gt;&lt;span class="pl-s1"&gt;)&lt;/span&gt;&lt;/span&gt;.&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
}&lt;/pre&gt;&lt;/div&gt;
&lt;h3&gt;&lt;a id="user-content-fatal-errors" class="anchor" aria-hidden="true" href="#fatal-errors"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Fatal Errors&lt;/h3&gt;
&lt;p&gt;&lt;strong&gt;Fatal errors notify that the program, or the database, has to be changed.&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;They uncover programmer errors, false assumptions, and prevent misuses. Here are a few examples:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;The code asks for a non-optional value, when the database contains NULL:&lt;/strong&gt;&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; fatal error: could not convert NULL to String.&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;&lt;span class="pl-k"&gt;let&lt;/span&gt; name&lt;span class="pl-k"&gt;:&lt;/span&gt; &lt;span class="pl-c1"&gt;String&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; row[&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;name&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;]&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Solution: fix the contents of the database, use &lt;a href="#create-tables"&gt;NOT NULL constraints&lt;/a&gt;, or load an optional:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;let&lt;/span&gt; name&lt;span class="pl-k"&gt;:&lt;/span&gt; &lt;span class="pl-c1"&gt;String&lt;/span&gt;&lt;span class="pl-k"&gt;?&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; row[&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;name&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;]&lt;/pre&gt;&lt;/div&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Conversion from database value to Swift type fails:&lt;/strong&gt;&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; fatal error: could not convert "Mom’s birthday" to Date.&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;&lt;span class="pl-k"&gt;let&lt;/span&gt; date&lt;span class="pl-k"&gt;:&lt;/span&gt; Date &lt;span class="pl-k"&gt;=&lt;/span&gt; row[&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;date&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;]

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; fatal error: could not convert "" to URL.&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;&lt;span class="pl-k"&gt;let&lt;/span&gt; url&lt;span class="pl-k"&gt;:&lt;/span&gt; URL &lt;span class="pl-k"&gt;=&lt;/span&gt; row[&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;url&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;]&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Solution: fix the contents of the database, or use &lt;a href="#databasevalue"&gt;DatabaseValue&lt;/a&gt; to handle all possible cases:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;let&lt;/span&gt; dbValue&lt;span class="pl-k"&gt;:&lt;/span&gt; DatabaseValue &lt;span class="pl-k"&gt;=&lt;/span&gt; row[&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;date&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;]
&lt;span class="pl-k"&gt;if&lt;/span&gt; dbValue.&lt;span class="pl-smi"&gt;isNull&lt;/span&gt; {
    &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Handle NULL&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;} &lt;span class="pl-k"&gt;else&lt;/span&gt; &lt;span class="pl-k"&gt;if&lt;/span&gt; &lt;span class="pl-k"&gt;let&lt;/span&gt; date &lt;span class="pl-k"&gt;=&lt;/span&gt; Date.&lt;span class="pl-c1"&gt;fromDatabaseValue&lt;/span&gt;(dbValue) {
    &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Handle valid date&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;} &lt;span class="pl-k"&gt;else&lt;/span&gt; {
    &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Handle invalid date&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;}&lt;/pre&gt;&lt;/div&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;The database can't guarantee that the code does what it says:&lt;/strong&gt;&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; fatal error: table player has no unique index on column email&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;&lt;span class="pl-k"&gt;try&lt;/span&gt; Player.&lt;span class="pl-c1"&gt;deleteOne&lt;/span&gt;(db, &lt;span class="pl-c1"&gt;key&lt;/span&gt;: [&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;email&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;&lt;span class="pl-k"&gt;:&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;arthur@example.com&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;])&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Solution: add a unique index to the player.email column, or use the &lt;code&gt;deleteAll&lt;/code&gt; method to make it clear that you may delete more than one row:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;try&lt;/span&gt; Player.&lt;span class="pl-c1"&gt;filter&lt;/span&gt;(&lt;span class="pl-c1"&gt;Column&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;email&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;) &lt;span class="pl-k"&gt;==&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;arthur@example.com&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;).&lt;span class="pl-c1"&gt;deleteAll&lt;/span&gt;(db)&lt;/pre&gt;&lt;/div&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Database connections are not reentrant:&lt;/strong&gt;&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; fatal error: Database methods are not reentrant.&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;dbQueue.&lt;span class="pl-smi"&gt;write&lt;/span&gt; { db &lt;span class="pl-k"&gt;in&lt;/span&gt;
    dbQueue.&lt;span class="pl-smi"&gt;write&lt;/span&gt; { db &lt;span class="pl-k"&gt;in&lt;/span&gt;
        &lt;span class="pl-k"&gt;...&lt;/span&gt;
    }
}&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Solution: avoid reentrancy, and instead pass a database connection along.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;&lt;a id="user-content-how-to-deal-with-untrusted-inputs" class="anchor" aria-hidden="true" href="#how-to-deal-with-untrusted-inputs"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;How to Deal with Untrusted Inputs&lt;/h3&gt;
&lt;p&gt;Let's consider the code below:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;let&lt;/span&gt; sql &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;SELECT ...&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Some untrusted arguments for the query&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;&lt;span class="pl-k"&gt;let&lt;/span&gt; arguments&lt;span class="pl-k"&gt;:&lt;/span&gt; [&lt;span class="pl-c1"&gt;String&lt;/span&gt;&lt;span class="pl-k"&gt;:&lt;/span&gt; &lt;span class="pl-c1"&gt;Any&lt;/span&gt;] &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-k"&gt;...&lt;/span&gt;
&lt;span class="pl-k"&gt;let&lt;/span&gt; rows &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-k"&gt;try&lt;/span&gt; Row.&lt;span class="pl-c1"&gt;fetchCursor&lt;/span&gt;(db, &lt;span class="pl-c1"&gt;sql&lt;/span&gt;: sql, &lt;span class="pl-c1"&gt;arguments&lt;/span&gt;: &lt;span class="pl-c1"&gt;StatementArguments&lt;/span&gt;(arguments))

&lt;span class="pl-k"&gt;while&lt;/span&gt; &lt;span class="pl-k"&gt;let&lt;/span&gt; row &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-k"&gt;try&lt;/span&gt; rows.&lt;span class="pl-c1"&gt;next&lt;/span&gt;() {
    &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Some untrusted database value:&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;    &lt;span class="pl-k"&gt;let&lt;/span&gt; date&lt;span class="pl-k"&gt;:&lt;/span&gt; Date&lt;span class="pl-k"&gt;?&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; row[&lt;span class="pl-c1"&gt;0&lt;/span&gt;]
}&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;It has two opportunities to throw fatal errors:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Untrusted arguments&lt;/strong&gt;: The dictionary may contain values that do not conform to the &lt;a href="#values"&gt;DatabaseValueConvertible protocol&lt;/a&gt;, or may miss keys required by the statement.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Untrusted database content&lt;/strong&gt;: The row may contain a non-null value that can't be turned into a date.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;In such a situation, you can still avoid fatal errors by exposing and handling each failure point, one level down in the GRDB API:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Untrusted arguments&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;&lt;span class="pl-k"&gt;if&lt;/span&gt; &lt;span class="pl-k"&gt;let&lt;/span&gt; arguments &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;StatementArguments&lt;/span&gt;(arguments) {
    &lt;span class="pl-k"&gt;let&lt;/span&gt; statement &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-k"&gt;try&lt;/span&gt; db.&lt;span class="pl-c1"&gt;makeSelectStatement&lt;/span&gt;(&lt;span class="pl-c1"&gt;sql&lt;/span&gt;: sql)
    &lt;span class="pl-k"&gt;try&lt;/span&gt; statement.&lt;span class="pl-c1"&gt;validate&lt;/span&gt;(&lt;span class="pl-c1"&gt;arguments&lt;/span&gt;: arguments)
    statement.&lt;span class="pl-c1"&gt;unsafeSetArguments&lt;/span&gt;(arguments)
    
    &lt;span class="pl-k"&gt;var&lt;/span&gt; cursor &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-k"&gt;try&lt;/span&gt; Row.&lt;span class="pl-c1"&gt;fetchCursor&lt;/span&gt;(statement)
    &lt;span class="pl-k"&gt;while&lt;/span&gt; &lt;span class="pl-k"&gt;let&lt;/span&gt; row &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-k"&gt;try&lt;/span&gt; iterator.&lt;span class="pl-c1"&gt;next&lt;/span&gt;() {
        &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Untrusted database content&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;        &lt;span class="pl-k"&gt;let&lt;/span&gt; dbValue&lt;span class="pl-k"&gt;:&lt;/span&gt; DatabaseValue &lt;span class="pl-k"&gt;=&lt;/span&gt; row[&lt;span class="pl-c1"&gt;0&lt;/span&gt;]
        &lt;span class="pl-k"&gt;if&lt;/span&gt; dbValue.&lt;span class="pl-smi"&gt;isNull&lt;/span&gt; {
            &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Handle NULL&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;        &lt;span class="pl-k"&gt;if&lt;/span&gt; &lt;span class="pl-k"&gt;let&lt;/span&gt; date &lt;span class="pl-k"&gt;=&lt;/span&gt; Date.&lt;span class="pl-c1"&gt;fromDatabaseValue&lt;/span&gt;(dbValue) {
            &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Handle valid date&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;        } &lt;span class="pl-k"&gt;else&lt;/span&gt; {
            &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Handle invalid date&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;        }
    }
}&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;See &lt;a href="#prepared-statements"&gt;prepared statements&lt;/a&gt; and &lt;a href="#databasevalue"&gt;DatabaseValue&lt;/a&gt; for more information.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-error-log" class="anchor" aria-hidden="true" href="#error-log"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Error Log&lt;/h3&gt;
&lt;p&gt;&lt;strong&gt;SQLite can be configured to invoke a callback function containing an error code and a terse error message whenever anomalies occur.&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;This global error callback must be configured early in the lifetime of your application:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;Database.&lt;span class="pl-smi"&gt;logError&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; { (resultCode, message) &lt;span class="pl-k"&gt;in&lt;/span&gt;
    &lt;span class="pl-c1"&gt;NSLog&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;%@&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;SQLite error &lt;span class="pl-pse"&gt;\(&lt;/span&gt;&lt;span class="pl-s1"&gt;resultCode&lt;/span&gt;&lt;span class="pl-pse"&gt;&lt;span class="pl-s1"&gt;)&lt;/span&gt;&lt;/span&gt;: &lt;span class="pl-pse"&gt;\(&lt;/span&gt;&lt;span class="pl-s1"&gt;message&lt;/span&gt;&lt;span class="pl-pse"&gt;&lt;span class="pl-s1"&gt;)&lt;/span&gt;&lt;/span&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
}&lt;/pre&gt;&lt;/div&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;g-emoji class="g-emoji" alias="warning" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/26a0.png"&gt;⚠️&lt;/g-emoji&gt; &lt;strong&gt;Warning&lt;/strong&gt;: Database.logError must be set before any database connection is opened. This includes the connections that your application opens with GRDB, but also connections opened by other tools, such as third-party libraries. Setting it after a connection has been opened is an SQLite misuse, and has no effect.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;See &lt;a href="https://sqlite.org/errlog.html" rel="nofollow"&gt;The Error And Warning Log&lt;/a&gt; for more information.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-unicode" class="anchor" aria-hidden="true" href="#unicode"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Unicode&lt;/h2&gt;
&lt;p&gt;SQLite lets you store unicode strings in the database.&lt;/p&gt;
&lt;p&gt;However, SQLite does not provide any unicode-aware string transformations or comparisons.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-unicode-functions" class="anchor" aria-hidden="true" href="#unicode-functions"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Unicode functions&lt;/h3&gt;
&lt;p&gt;The &lt;code&gt;UPPER&lt;/code&gt; and &lt;code&gt;LOWER&lt;/code&gt; built-in SQLite functions are not unicode-aware:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; "JéRôME"&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;&lt;span class="pl-k"&gt;try&lt;/span&gt; &lt;span class="pl-c1"&gt;String&lt;/span&gt;.&lt;span class="pl-c1"&gt;fetchOne&lt;/span&gt;(db, &lt;span class="pl-c1"&gt;sql&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;SELECT UPPER('Jérôme')&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;GRDB extends SQLite with &lt;a href="#custom-sql-functions-and-aggregates"&gt;SQL functions&lt;/a&gt; that call the Swift built-in string functions &lt;code&gt;capitalized&lt;/code&gt;, &lt;code&gt;lowercased&lt;/code&gt;, &lt;code&gt;uppercased&lt;/code&gt;, &lt;code&gt;localizedCapitalized&lt;/code&gt;, &lt;code&gt;localizedLowercased&lt;/code&gt; and &lt;code&gt;localizedUppercased&lt;/code&gt;:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; "JÉRÔME"&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;&lt;span class="pl-k"&gt;let&lt;/span&gt; uppercased &lt;span class="pl-k"&gt;=&lt;/span&gt; DatabaseFunction.&lt;span class="pl-smi"&gt;uppercase&lt;/span&gt;
&lt;span class="pl-k"&gt;try&lt;/span&gt; &lt;span class="pl-c1"&gt;String&lt;/span&gt;.&lt;span class="pl-c1"&gt;fetchOne&lt;/span&gt;(db, &lt;span class="pl-c1"&gt;sql&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;SELECT &lt;span class="pl-pse"&gt;\(&lt;/span&gt;&lt;span class="pl-s1"&gt;uppercased.&lt;span class="pl-smi"&gt;name&lt;/span&gt;&lt;/span&gt;&lt;span class="pl-pse"&gt;&lt;span class="pl-s1"&gt;)&lt;/span&gt;&lt;/span&gt;('Jérôme')&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Those unicode-aware string functions are also readily available in the &lt;a href="#sql-functions"&gt;query interface&lt;/a&gt;:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;Player.&lt;span class="pl-c1"&gt;select&lt;/span&gt;(nameColumn.&lt;span class="pl-smi"&gt;uppercased&lt;/span&gt;)&lt;/pre&gt;&lt;/div&gt;
&lt;h3&gt;&lt;a id="user-content-string-comparison" class="anchor" aria-hidden="true" href="#string-comparison"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;String Comparison&lt;/h3&gt;
&lt;p&gt;SQLite compares strings in many occasions: when you sort rows according to a string column, or when you use a comparison operator such as &lt;code&gt;=&lt;/code&gt; and &lt;code&gt;&amp;lt;=&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;The comparison result comes from a &lt;em&gt;collating function&lt;/em&gt;, or &lt;em&gt;collation&lt;/em&gt;. SQLite comes with three built-in collations that do not support Unicode: &lt;a href="https://www.sqlite.org/datatype3.html#collation" rel="nofollow"&gt;binary, nocase, and rtrim&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;GRDB comes with five extra collations that leverage unicode-aware comparisons based on the standard Swift String comparison functions and operators:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;unicodeCompare&lt;/code&gt; (uses the built-in &lt;code&gt;&amp;lt;=&lt;/code&gt; and &lt;code&gt;==&lt;/code&gt; Swift operators)&lt;/li&gt;
&lt;li&gt;&lt;code&gt;caseInsensitiveCompare&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;localizedCaseInsensitiveCompare&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;localizedCompare&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;localizedStandardCompare&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;A collation can be applied to a table column. All comparisons involving this column will then automatically trigger the comparison function:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;try&lt;/span&gt; db.&lt;span class="pl-c1"&gt;create&lt;/span&gt;(&lt;span class="pl-c1"&gt;table&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;player&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;) { t &lt;span class="pl-k"&gt;in&lt;/span&gt;
    &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Guarantees case-insensitive email unicity&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;    t.&lt;span class="pl-c1"&gt;column&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;email&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, .&lt;span class="pl-c1"&gt;text&lt;/span&gt;).&lt;span class="pl-c1"&gt;unique&lt;/span&gt;().&lt;span class="pl-c1"&gt;collate&lt;/span&gt;(.&lt;span class="pl-smi"&gt;nocase&lt;/span&gt;)
    
    &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Sort names in a localized case insensitive way&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;    t.&lt;span class="pl-c1"&gt;column&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;name&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, .&lt;span class="pl-c1"&gt;text&lt;/span&gt;).&lt;span class="pl-c1"&gt;collate&lt;/span&gt;(.&lt;span class="pl-smi"&gt;localizedCaseInsensitiveCompare&lt;/span&gt;)
}

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Players are sorted in a localized case insensitive way:&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;&lt;span class="pl-k"&gt;let&lt;/span&gt; players &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-k"&gt;try&lt;/span&gt; Player.&lt;span class="pl-c1"&gt;order&lt;/span&gt;(nameColumn).&lt;span class="pl-c1"&gt;fetchAll&lt;/span&gt;(db)&lt;/pre&gt;&lt;/div&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;g-emoji class="g-emoji" alias="warning" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/26a0.png"&gt;⚠️&lt;/g-emoji&gt; &lt;strong&gt;Warning&lt;/strong&gt;: SQLite &lt;em&gt;requires&lt;/em&gt; host applications to provide the definition of any collation other than binary, nocase and rtrim. When a database file has to be shared or migrated to another SQLite library of platform (such as the Android version of your application), make sure you provide a compatible collation.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;If you can't or don't want to define the comparison behavior of a column (see warning above), you can still use an explicit collation in SQL requests and in the &lt;a href="#the-query-interface"&gt;query interface&lt;/a&gt;:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;let&lt;/span&gt; collation &lt;span class="pl-k"&gt;=&lt;/span&gt; DatabaseCollation.&lt;span class="pl-smi"&gt;localizedCaseInsensitiveCompare&lt;/span&gt;
&lt;span class="pl-k"&gt;let&lt;/span&gt; players &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-k"&gt;try&lt;/span&gt; Player.&lt;span class="pl-c1"&gt;fetchAll&lt;/span&gt;(db,
    &lt;span class="pl-c1"&gt;sql&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;SELECT * FROM player ORDER BY name COLLATE &lt;span class="pl-pse"&gt;\(&lt;/span&gt;&lt;span class="pl-s1"&gt;collation.&lt;span class="pl-smi"&gt;name&lt;/span&gt;&lt;/span&gt;&lt;span class="pl-pse"&gt;&lt;span class="pl-s1"&gt;)&lt;/span&gt;&lt;/span&gt;)&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
&lt;span class="pl-k"&gt;let&lt;/span&gt; players &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-k"&gt;try&lt;/span&gt; Player.&lt;span class="pl-c1"&gt;order&lt;/span&gt;(nameColumn.&lt;span class="pl-c1"&gt;collating&lt;/span&gt;(collation)).&lt;span class="pl-c1"&gt;fetchAll&lt;/span&gt;(db)&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;strong&gt;You can also define your own collations&lt;/strong&gt;:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;let&lt;/span&gt; collation &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;DatabaseCollation&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;customCollation&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;) { (lhs, rhs) &lt;span class="pl-k"&gt;-&amp;gt;&lt;/span&gt; NSComparisonResult &lt;span class="pl-k"&gt;in&lt;/span&gt;
    &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; return the comparison of lhs and rhs strings.&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;}
dbQueue.&lt;span class="pl-c1"&gt;add&lt;/span&gt;(&lt;span class="pl-c1"&gt;collation&lt;/span&gt;: collation) &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Or dbPool.add(collation: ...)&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h2&gt;&lt;a id="user-content-memory-management" class="anchor" aria-hidden="true" href="#memory-management"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Memory Management&lt;/h2&gt;
&lt;p&gt;Both SQLite and GRDB use non-essential memory that help them perform better.&lt;/p&gt;
&lt;p&gt;You can reclaim this memory with the &lt;code&gt;releaseMemory&lt;/code&gt; method:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Release as much memory as possible.&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;dbQueue.&lt;span class="pl-c1"&gt;releaseMemory&lt;/span&gt;()
dbPool.&lt;span class="pl-c1"&gt;releaseMemory&lt;/span&gt;()&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;This method blocks the current thread until all current database accesses are completed, and the memory collected.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-memory-management-on-ios" class="anchor" aria-hidden="true" href="#memory-management-on-ios"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Memory Management on iOS&lt;/h3&gt;
&lt;p&gt;&lt;strong&gt;The iOS operating system likes applications that do not consume much memory.&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href="#database-queues"&gt;Database queues&lt;/a&gt; and &lt;a href="#database-pools"&gt;pools&lt;/a&gt; can call the &lt;code&gt;releaseMemory&lt;/code&gt; method for you, when application receives memory warnings, and when application enters background: call the &lt;code&gt;setupMemoryManagement&lt;/code&gt; method after creating the queue or pool instance:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;let dbQueue = try DatabaseQueue(...)
dbQueue.setupMemoryManagement(in: UIApplication.shared)
&lt;/code&gt;&lt;/pre&gt;
&lt;h2&gt;&lt;a id="user-content-data-protection" class="anchor" aria-hidden="true" href="#data-protection"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Data Protection&lt;/h2&gt;
&lt;p&gt;&lt;a href="https://developer.apple.com/library/content/documentation/iPhone/Conceptual/iPhoneOSProgrammingGuide/StrategiesforImplementingYourApp/StrategiesforImplementingYourApp.html#//apple_ref/doc/uid/TP40007072-CH5-SW21" rel="nofollow"&gt;Data Protection&lt;/a&gt; lets you protect files so that they are encrypted and unavailable until the device is unlocked.&lt;/p&gt;
&lt;p&gt;Data protection can be enabled &lt;a href="https://developer.apple.com/library/content/documentation/IDEs/Conceptual/AppDistributionGuide/AddingCapabilities/AddingCapabilities.html#//apple_ref/doc/uid/TP40012582-CH26-SW30" rel="nofollow"&gt;globally&lt;/a&gt; for all files created by an application.&lt;/p&gt;
&lt;p&gt;You can also explicitly protect a database, by configuring its enclosing &lt;em&gt;directory&lt;/em&gt;. This will not only protect the database file, but also all &lt;a href="https://www.sqlite.org/tempfiles.html" rel="nofollow"&gt;temporary files&lt;/a&gt; created by SQLite (including the persistent &lt;code&gt;.shm&lt;/code&gt; and &lt;code&gt;.wal&lt;/code&gt; files created by &lt;a href="#database-pools"&gt;database pools&lt;/a&gt;).&lt;/p&gt;
&lt;p&gt;For example, to explicitly use &lt;a href="https://developer.apple.com/reference/foundation/fileprotectiontype/1616200-complete" rel="nofollow"&gt;complete&lt;/a&gt; protection:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Paths&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;&lt;span class="pl-k"&gt;let&lt;/span&gt; fileManager &lt;span class="pl-k"&gt;=&lt;/span&gt; FileManager.&lt;span class="pl-smi"&gt;default&lt;/span&gt;
&lt;span class="pl-k"&gt;let&lt;/span&gt; directoryURL &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-k"&gt;try&lt;/span&gt; fileManager
    .&lt;span class="pl-c1"&gt;url&lt;/span&gt;(&lt;span class="pl-c1"&gt;for&lt;/span&gt;: .&lt;span class="pl-smi"&gt;applicationSupportDirectory&lt;/span&gt;, &lt;span class="pl-c1"&gt;in&lt;/span&gt;: .&lt;span class="pl-smi"&gt;userDomainMask&lt;/span&gt;, &lt;span class="pl-c1"&gt;appropriateFor&lt;/span&gt;: &lt;span class="pl-c1"&gt;nil&lt;/span&gt;, &lt;span class="pl-c1"&gt;create&lt;/span&gt;: &lt;span class="pl-c1"&gt;true&lt;/span&gt;)
    .&lt;span class="pl-c1"&gt;appendingPathComponent&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;database&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-c1"&gt;isDirectory&lt;/span&gt;: &lt;span class="pl-c1"&gt;true&lt;/span&gt;)
&lt;span class="pl-k"&gt;let&lt;/span&gt; databaseURL &lt;span class="pl-k"&gt;=&lt;/span&gt; directoryURL.&lt;span class="pl-c1"&gt;appendingPathComponent&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;db.sqlite&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Create directory if needed&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;&lt;span class="pl-k"&gt;var&lt;/span&gt; isDirectory&lt;span class="pl-k"&gt;:&lt;/span&gt; ObjCBool &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;false&lt;/span&gt;
&lt;span class="pl-k"&gt;if&lt;/span&gt; &lt;span class="pl-k"&gt;!&lt;/span&gt;fileManager.&lt;span class="pl-c1"&gt;fileExists&lt;/span&gt;(&lt;span class="pl-c1"&gt;atPath&lt;/span&gt;: directoryURL.&lt;span class="pl-smi"&gt;path&lt;/span&gt;, &lt;span class="pl-c1"&gt;isDirectory&lt;/span&gt;: &lt;span class="pl-k"&gt;&amp;amp;&lt;/span&gt;isDirectory) {
    &lt;span class="pl-k"&gt;try&lt;/span&gt; fileManager.&lt;span class="pl-c1"&gt;createDirectory&lt;/span&gt;(&lt;span class="pl-c1"&gt;atPath&lt;/span&gt;: directoryURL.&lt;span class="pl-smi"&gt;path&lt;/span&gt;, &lt;span class="pl-c1"&gt;withIntermediateDirectories&lt;/span&gt;: &lt;span class="pl-c1"&gt;false&lt;/span&gt;)
} &lt;span class="pl-k"&gt;else&lt;/span&gt; &lt;span class="pl-k"&gt;if&lt;/span&gt; &lt;span class="pl-k"&gt;!&lt;/span&gt;isDirectory.&lt;span class="pl-c1"&gt;boolValue&lt;/span&gt; {
    &lt;span class="pl-k"&gt;throw&lt;/span&gt; &lt;span class="pl-c1"&gt;NSError&lt;/span&gt;(&lt;span class="pl-c1"&gt;domain&lt;/span&gt;: NSCocoaErrorDomain, &lt;span class="pl-c1"&gt;code&lt;/span&gt;: NSFileWriteFileExistsError, &lt;span class="pl-c1"&gt;userInfo&lt;/span&gt;: &lt;span class="pl-c1"&gt;nil&lt;/span&gt;)
}

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Enable data protection&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;&lt;span class="pl-k"&gt;try&lt;/span&gt; fileManager.&lt;span class="pl-c1"&gt;setAttributes&lt;/span&gt;([.&lt;span class="pl-smi"&gt;protectionKey&lt;/span&gt; &lt;span class="pl-k"&gt;:&lt;/span&gt; FileProtectionType.&lt;span class="pl-smi"&gt;complete&lt;/span&gt;], &lt;span class="pl-c1"&gt;ofItemAtPath&lt;/span&gt;: directoryURL.&lt;span class="pl-smi"&gt;path&lt;/span&gt;)

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Open database&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;&lt;span class="pl-k"&gt;let&lt;/span&gt; dbQueue &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-k"&gt;try&lt;/span&gt; &lt;span class="pl-c1"&gt;DatabaseQueue&lt;/span&gt;(&lt;span class="pl-c1"&gt;path&lt;/span&gt;: databaseURL.&lt;span class="pl-smi"&gt;path&lt;/span&gt;)&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;When a database is protected, an application that runs in the background on a locked device won't be able to read or write from it. Instead, it will get &lt;a href="#error-handling"&gt;DatabaseError&lt;/a&gt; with code &lt;a href="https://www.sqlite.org/rescode.html#ioerr" rel="nofollow"&gt;&lt;code&gt;SQLITE_IOERR&lt;/code&gt;&lt;/a&gt; (10) "disk I/O error", or &lt;a href="https://www.sqlite.org/rescode.html#auth" rel="nofollow"&gt;&lt;code&gt;SQLITE_AUTH&lt;/code&gt;&lt;/a&gt; (23) "not authorized".&lt;/p&gt;
&lt;p&gt;You can catch those errors and wait for &lt;a href="https://developer.apple.com/reference/uikit/uiapplicationdelegate/1623044-applicationprotecteddatadidbecom" rel="nofollow"&gt;UIApplicationDelegate.applicationProtectedDataDidBecomeAvailable(_:)&lt;/a&gt; or &lt;a href="https://developer.apple.com/reference/uikit/uiapplicationprotecteddatadidbecomeavailable" rel="nofollow"&gt;UIApplicationProtectedDataDidBecomeAvailable&lt;/a&gt; notification in order to retry the failed database operation.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-concurrency" class="anchor" aria-hidden="true" href="#concurrency"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Concurrency&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="#guarantees-and-rules"&gt;Guarantees and Rules&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#differences-between-database-queues-and-pools"&gt;Differences between Database Queues and Pools&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#advanced-databasepool"&gt;Advanced DatabasePool&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#database-snapshots"&gt;Database Snapshots&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#databasewriter-and-databasereader-protocols"&gt;DatabaseWriter and DatabaseReader Protocols&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#asynchronous-apis"&gt;Asynchronous APIs&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#unsafe-concurrency-apis"&gt;Unsafe Concurrency APIs&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#dealing-with-external-connections"&gt;Dealing with External Connections&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;&lt;a id="user-content-guarantees-and-rules" class="anchor" aria-hidden="true" href="#guarantees-and-rules"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Guarantees and Rules&lt;/h3&gt;
&lt;p&gt;GRDB ships with three concurrency modes:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="#database-queues"&gt;DatabaseQueue&lt;/a&gt; opens a single database connection, and serializes all database accesses.&lt;/li&gt;
&lt;li&gt;&lt;a href="#database-pools"&gt;DatabasePool&lt;/a&gt; manages a pool of several database connections, and allows concurrent reads and writes.&lt;/li&gt;
&lt;li&gt;&lt;a href="#database-snapshots"&gt;DatabaseSnapshot&lt;/a&gt; opens a single read-only database connection on an unchanging database content, and (currently) serializes all database accesses&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;All foster application safety&lt;/strong&gt;: regardless of the concurrency mode you choose, GRDB provides you with the same guarantees, as long as you follow three rules.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;img class="emoji" title=":bowtie:" alt=":bowtie:" src="https://github.githubassets.com/images/icons/emoji/bowtie.png" height="20" width="20" align="absmiddle"&gt; &lt;strong&gt;Guarantee 1: writes are always serialized&lt;/strong&gt;. At every moment, there is no more than a single thread that is writing into the database.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Database writes always happen in a unique serial dispatch queue, named the &lt;em&gt;writer protected dispatch queue&lt;/em&gt;.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;img class="emoji" title=":bowtie:" alt=":bowtie:" src="https://github.githubassets.com/images/icons/emoji/bowtie.png" height="20" width="20" align="absmiddle"&gt; &lt;strong&gt;Guarantee 2: reads are always isolated&lt;/strong&gt;. This means that they are guaranteed an immutable view of the database, and that you can perform subsequent fetches without fearing eventual concurrent writes to mess with your application logic:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;try&lt;/span&gt; dbPool.&lt;span class="pl-smi"&gt;read&lt;/span&gt; { db &lt;span class="pl-k"&gt;in&lt;/span&gt; &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; or dbQueue.read&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;    &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Guaranteed to be equal&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;    &lt;span class="pl-k"&gt;let&lt;/span&gt; count1 &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-k"&gt;try&lt;/span&gt; Player.&lt;span class="pl-c1"&gt;fetchCount&lt;/span&gt;(db)
    &lt;span class="pl-k"&gt;let&lt;/span&gt; count2 &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-k"&gt;try&lt;/span&gt; Player.&lt;span class="pl-c1"&gt;fetchCount&lt;/span&gt;(db)
}&lt;/pre&gt;&lt;/div&gt;
&lt;blockquote&gt;
&lt;p&gt;In &lt;a href="#database-queues"&gt;database queues&lt;/a&gt;, reads happen in the same protected dispatch queue as writes: isolation is just a consequence of the serialization of database accesses&lt;/p&gt;
&lt;p&gt;&lt;a href="#database-pools"&gt;Database pools&lt;/a&gt; and &lt;a href="#database-snapshots"&gt;snapshots&lt;/a&gt; both use the "snapshot isolation" made possible by SQLite's WAL mode (see &lt;a href="https://sqlite.org/isolation.html" rel="nofollow"&gt;Isolation In SQLite&lt;/a&gt;).&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;img class="emoji" title=":bowtie:" alt=":bowtie:" src="https://github.githubassets.com/images/icons/emoji/bowtie.png" height="20" width="20" align="absmiddle"&gt; &lt;strong&gt;Guarantee 3: requests don't fail&lt;/strong&gt;, unless a database constraint violation, a &lt;a href="#error-handling"&gt;programmer mistake&lt;/a&gt;, or a very low-level issue such as a disk error or an unreadable database file. GRDB grants &lt;em&gt;correct&lt;/em&gt; use of SQLite, and particularly avoids locking errors and other SQLite misuses.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Those guarantees hold as long as you follow three rules:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;g-emoji class="g-emoji" alias="point_up" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/261d.png"&gt;☝️&lt;/g-emoji&gt; &lt;strong&gt;Rule 1&lt;/strong&gt;: Have a unique instance of DatabaseQueue or DatabasePool connected to any database file.&lt;/p&gt;
&lt;p&gt;This means that opening a new connection each time you access the database is a bad idea. Do share a single connection instead.&lt;/p&gt;
&lt;p&gt;See the &lt;a href="Documentation/DemoApps/GRDBDemoiOS/README.md"&gt;Demo Application&lt;/a&gt; for a sample app that sets up a single database queue that is available throughout the application.&lt;/p&gt;
&lt;p&gt;If there are several instances of database queues or pools that write in the same database, a multi-threaded application will eventually face "database is locked" errors. See &lt;a href="#dealing-with-external-connections"&gt;Dealing with External Connections&lt;/a&gt;.&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; SAFE CONCURRENCY&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;&lt;span class="pl-k"&gt;func&lt;/span&gt; &lt;span class="pl-en"&gt;fetchCurrentUser&lt;/span&gt;(&lt;span class="pl-en"&gt;_&lt;/span&gt; &lt;span class="pl-smi"&gt;db&lt;/span&gt;: Database) &lt;span class="pl-k"&gt;throws&lt;/span&gt; &lt;span class="pl-k"&gt;-&amp;gt;&lt;/span&gt; User&lt;span class="pl-k"&gt;?&lt;/span&gt; {
    &lt;span class="pl-k"&gt;return&lt;/span&gt; &lt;span class="pl-k"&gt;try&lt;/span&gt; User.&lt;span class="pl-c1"&gt;fetchOne&lt;/span&gt;(db)
}
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; dbQueue is a singleton defined somewhere in your app&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;&lt;span class="pl-k"&gt;let&lt;/span&gt; user &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-k"&gt;try&lt;/span&gt; dbQueue.&lt;span class="pl-smi"&gt;read&lt;/span&gt; { db &lt;span class="pl-k"&gt;in&lt;/span&gt; &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; or dbPool.read&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;    &lt;span class="pl-k"&gt;try&lt;/span&gt; &lt;span class="pl-c1"&gt;fetchCurrentUser&lt;/span&gt;(db)
}

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; UNSAFE CONCURRENCY&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; This method fails when some other thread is currently writing into&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; the database.&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;&lt;span class="pl-k"&gt;func&lt;/span&gt; &lt;span class="pl-en"&gt;currentUser&lt;/span&gt;() &lt;span class="pl-k"&gt;throws&lt;/span&gt; &lt;span class="pl-k"&gt;-&amp;gt;&lt;/span&gt; User&lt;span class="pl-k"&gt;?&lt;/span&gt; {
    &lt;span class="pl-k"&gt;let&lt;/span&gt; dbQueue &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-k"&gt;try&lt;/span&gt; &lt;span class="pl-c1"&gt;DatabaseQueue&lt;/span&gt;(&lt;span class="pl-k"&gt;...&lt;/span&gt;)
    &lt;span class="pl-k"&gt;return&lt;/span&gt; &lt;span class="pl-k"&gt;try&lt;/span&gt; dbQueue.&lt;span class="pl-smi"&gt;read&lt;/span&gt; { db &lt;span class="pl-k"&gt;in&lt;/span&gt;
        &lt;span class="pl-k"&gt;try&lt;/span&gt; User.&lt;span class="pl-c1"&gt;fetchOne&lt;/span&gt;(db)
    }
}
&lt;span class="pl-k"&gt;let&lt;/span&gt; user &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-k"&gt;try&lt;/span&gt; &lt;span class="pl-c1"&gt;currentUser&lt;/span&gt;()&lt;/pre&gt;&lt;/div&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;g-emoji class="g-emoji" alias="point_up" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/261d.png"&gt;☝️&lt;/g-emoji&gt; &lt;strong&gt;Rule 2&lt;/strong&gt;: Group related statements within a single call to a DatabaseQueue or DatabasePool database access method (or use &lt;a href="#database-snapshots"&gt;snapshots&lt;/a&gt;).&lt;/p&gt;
&lt;p&gt;Database access methods isolate your groups of related statements against eventual database updates performed by other threads, and guarantee a consistent view of the database. This isolation is only guaranteed &lt;em&gt;inside&lt;/em&gt; the closure argument of those methods. Two consecutive calls &lt;em&gt;do not&lt;/em&gt; guarantee isolation:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; SAFE CONCURRENCY&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;&lt;span class="pl-k"&gt;try&lt;/span&gt; dbPool.&lt;span class="pl-smi"&gt;read&lt;/span&gt; { db &lt;span class="pl-k"&gt;in&lt;/span&gt;  &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; or dbQueue.read&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;    &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Guaranteed to be equal:&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;    &lt;span class="pl-k"&gt;let&lt;/span&gt; count1 &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-k"&gt;try&lt;/span&gt; Place.&lt;span class="pl-c1"&gt;fetchCount&lt;/span&gt;(db)
    &lt;span class="pl-k"&gt;let&lt;/span&gt; count2 &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-k"&gt;try&lt;/span&gt; Place.&lt;span class="pl-c1"&gt;fetchCount&lt;/span&gt;(db)
}

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; UNSAFE CONCURRENCY&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Those two values may be different because some other thread may have&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; modified the database between the two blocks:&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;&lt;span class="pl-k"&gt;let&lt;/span&gt; count1 &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-k"&gt;try&lt;/span&gt; dbPool.&lt;span class="pl-smi"&gt;read&lt;/span&gt; { db &lt;span class="pl-k"&gt;in&lt;/span&gt; &lt;span class="pl-k"&gt;try&lt;/span&gt; Place.&lt;span class="pl-c1"&gt;fetchCount&lt;/span&gt;(db) }
&lt;span class="pl-k"&gt;let&lt;/span&gt; count2 &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-k"&gt;try&lt;/span&gt; dbPool.&lt;span class="pl-smi"&gt;read&lt;/span&gt; { db &lt;span class="pl-k"&gt;in&lt;/span&gt; &lt;span class="pl-k"&gt;try&lt;/span&gt; Place.&lt;span class="pl-c1"&gt;fetchCount&lt;/span&gt;(db) }&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;In the same vein, when you fetch values that depends on some database updates, group them:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; SAFE CONCURRENCY&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;&lt;span class="pl-k"&gt;try&lt;/span&gt; dbPool.&lt;span class="pl-smi"&gt;write&lt;/span&gt; { db &lt;span class="pl-k"&gt;in&lt;/span&gt;
    &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; The count is guaranteed to be non-zero&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;    &lt;span class="pl-k"&gt;try&lt;/span&gt; &lt;span class="pl-c1"&gt;Place&lt;/span&gt;(&lt;span class="pl-k"&gt;...&lt;/span&gt;).&lt;span class="pl-c1"&gt;insert&lt;/span&gt;(db)
    &lt;span class="pl-k"&gt;let&lt;/span&gt; count &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-k"&gt;try&lt;/span&gt; Place.&lt;span class="pl-c1"&gt;fetchCount&lt;/span&gt;(db)
}

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; UNSAFE CONCURRENCY&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; The count may be zero because some other thread may have performed&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; a deletion between the two blocks:&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;&lt;span class="pl-k"&gt;try&lt;/span&gt; dbPool.&lt;span class="pl-smi"&gt;write&lt;/span&gt; { db &lt;span class="pl-k"&gt;in&lt;/span&gt; &lt;span class="pl-k"&gt;try&lt;/span&gt; &lt;span class="pl-c1"&gt;Place&lt;/span&gt;(&lt;span class="pl-k"&gt;...&lt;/span&gt;).&lt;span class="pl-c1"&gt;insert&lt;/span&gt;(db) }
&lt;span class="pl-k"&gt;let&lt;/span&gt; count &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-k"&gt;try&lt;/span&gt; dbPool.&lt;span class="pl-smi"&gt;read&lt;/span&gt; { db &lt;span class="pl-k"&gt;in&lt;/span&gt; &lt;span class="pl-k"&gt;try&lt;/span&gt; Place.&lt;span class="pl-c1"&gt;fetchCount&lt;/span&gt;(db) }&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;On that last example, see &lt;a href="#advanced-databasepool"&gt;Advanced DatabasePool&lt;/a&gt; if you look after extra performance.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;g-emoji class="g-emoji" alias="point_up" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/261d.png"&gt;☝️&lt;/g-emoji&gt; &lt;strong&gt;Rule 3&lt;/strong&gt;: When you perform several modifications of the database that temporarily put the database in an inconsistent state, make sure those modifications are grouped within a &lt;a href="#transactions-and-savepoints"&gt;transaction&lt;/a&gt;.&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; SAFE CONCURRENCY&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;&lt;span class="pl-k"&gt;try&lt;/span&gt; dbPool.&lt;span class="pl-smi"&gt;write&lt;/span&gt; { db &lt;span class="pl-k"&gt;in&lt;/span&gt;               &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; or dbQueue.write&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;    &lt;span class="pl-k"&gt;try&lt;/span&gt; &lt;span class="pl-c1"&gt;Credit&lt;/span&gt;(destinationAccount, amount).&lt;span class="pl-c1"&gt;insert&lt;/span&gt;(db)
    &lt;span class="pl-k"&gt;try&lt;/span&gt; &lt;span class="pl-c1"&gt;Debit&lt;/span&gt;(sourceAccount, amount).&lt;span class="pl-c1"&gt;insert&lt;/span&gt;(db)
}

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; SAFE CONCURRENCY&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;&lt;span class="pl-k"&gt;try&lt;/span&gt; dbPool.&lt;span class="pl-smi"&gt;writeInTransaction&lt;/span&gt; { db &lt;span class="pl-k"&gt;in&lt;/span&gt;  &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; or dbQueue.inTransaction&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;    &lt;span class="pl-k"&gt;try&lt;/span&gt; &lt;span class="pl-c1"&gt;Credit&lt;/span&gt;(destinationAccount, amount).&lt;span class="pl-c1"&gt;insert&lt;/span&gt;(db)
    &lt;span class="pl-k"&gt;try&lt;/span&gt; &lt;span class="pl-c1"&gt;Debit&lt;/span&gt;(sourceAccount, amount).&lt;span class="pl-c1"&gt;insert&lt;/span&gt;(db)
    &lt;span class="pl-k"&gt;return&lt;/span&gt; .&lt;span class="pl-smi"&gt;commit&lt;/span&gt;
}

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; UNSAFE CONCURRENCY&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;&lt;span class="pl-k"&gt;try&lt;/span&gt; dbPool.&lt;span class="pl-smi"&gt;writeWithoutTransaction&lt;/span&gt; { db &lt;span class="pl-k"&gt;in&lt;/span&gt;
    &lt;span class="pl-k"&gt;try&lt;/span&gt; &lt;span class="pl-c1"&gt;Credit&lt;/span&gt;(destinationAccount, amount).&lt;span class="pl-c1"&gt;insert&lt;/span&gt;(db)
    &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; &amp;lt;- Concurrent dbPool.read sees a partial db update here&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;    &lt;span class="pl-k"&gt;try&lt;/span&gt; &lt;span class="pl-c1"&gt;Debit&lt;/span&gt;(sourceAccount, amount).&lt;span class="pl-c1"&gt;insert&lt;/span&gt;(db)
}&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Without transaction, &lt;code&gt;DatabasePool.read { ... }&lt;/code&gt; may see the first statement, but not the second, and access a database where the balance of accounts is not zero. A highly bug-prone situation.&lt;/p&gt;
&lt;p&gt;So do use &lt;a href="#transactions-and-savepoints"&gt;transactions&lt;/a&gt; in order to guarantee database consistency accross your application threads: that's what they are made for.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;&lt;a id="user-content-differences-between-database-queues-and-pools" class="anchor" aria-hidden="true" href="#differences-between-database-queues-and-pools"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Differences between Database Queues and Pools&lt;/h3&gt;
&lt;p&gt;Despite the common &lt;a href="#guarantees-and-rules"&gt;guarantees and rules&lt;/a&gt; shared by &lt;a href="#database-queues"&gt;database queues&lt;/a&gt; and &lt;a href="#database-pools"&gt;pools&lt;/a&gt;, those two database accessors don't have the same behavior.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Database queues&lt;/strong&gt; serialize all database accesses, reads, and writes. There is never more than one thread that uses the database. In the image below, we see how three threads can see the database as time passes:&lt;/p&gt;
&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="https://camo.githubusercontent.com/eb9e0b2b85ee780c5f12797a1e89636a8badefdd/68747470733a2f2f63646e2e7261776769742e636f6d2f67726f75652f475244422e73776966742f6d61737465722f446f63756d656e746174696f6e2f496d616765732f446174616261736551756575655363686564756c696e672e737667"&gt;&lt;img src="https://camo.githubusercontent.com/eb9e0b2b85ee780c5f12797a1e89636a8badefdd/68747470733a2f2f63646e2e7261776769742e636f6d2f67726f75652f475244422e73776966742f6d61737465722f446f63756d656e746174696f6e2f496d616765732f446174616261736551756575655363686564756c696e672e737667" alt="DatabaseQueueScheduling" data-canonical-src="https://cdn.rawgit.com/groue/GRDB.swift/master/Documentation/Images/DatabaseQueueScheduling.svg" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Database pools&lt;/strong&gt; also serialize all writes. But they allow concurrent reads and writes, and isolate reads so that they don't see changes performed by other threads. This gives a very different picture:&lt;/p&gt;
&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="https://camo.githubusercontent.com/9ca1a98ae185a5c052806290122221a743b0ba65/68747470733a2f2f63646e2e7261776769742e636f6d2f67726f75652f475244422e73776966742f6d61737465722f446f63756d656e746174696f6e2f496d616765732f4461746162617365506f6f6c5363686564756c696e672e737667"&gt;&lt;img src="https://camo.githubusercontent.com/9ca1a98ae185a5c052806290122221a743b0ba65/68747470733a2f2f63646e2e7261776769742e636f6d2f67726f75652f475244422e73776966742f6d61737465722f446f63756d656e746174696f6e2f496d616765732f4461746162617365506f6f6c5363686564756c696e672e737667" alt="DatabasePoolScheduling" data-canonical-src="https://cdn.rawgit.com/groue/GRDB.swift/master/Documentation/Images/DatabasePoolScheduling.svg" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;See how, with database pools, two reads can see different database states at the same time.&lt;/p&gt;
&lt;p&gt;For more information about database pools, grab information about SQLite &lt;a href="https://www.sqlite.org/wal.html" rel="nofollow"&gt;WAL mode&lt;/a&gt; and &lt;a href="https://sqlite.org/isolation.html" rel="nofollow"&gt;snapshot isolation&lt;/a&gt;. See &lt;a href="#database-changes-observation"&gt;Database Observation&lt;/a&gt; when you look after automatic notifications of database changes.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-advanced-databasepool" class="anchor" aria-hidden="true" href="#advanced-databasepool"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Advanced DatabasePool&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="#the-concurrenread-method"&gt;The &lt;code&gt;concurrenRead&lt;/code&gt; Method&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#the-barrierwritewithouttransaction-method"&gt;The &lt;code&gt;barrierWriteWithoutTransaction&lt;/code&gt; Method&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h4&gt;&lt;a id="user-content-the-concurrenread-method" class="anchor" aria-hidden="true" href="#the-concurrenread-method"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;The &lt;code&gt;concurrenRead&lt;/code&gt; Method&lt;/h4&gt;
&lt;p&gt;&lt;a href="#database-pools"&gt;Database pools&lt;/a&gt; are very concurrent, since all reads can run in parallel, and can even run during write operations. But writes are still serialized: at any given point in time, there is no more than a single thread that is writing into the database.&lt;/p&gt;
&lt;p&gt;When your application modifies the database, and then reads some value that depends on those modifications, you may want to avoid locking the writer queue longer than necessary:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;try&lt;/span&gt; dbPool.&lt;span class="pl-smi"&gt;write&lt;/span&gt; { db &lt;span class="pl-k"&gt;in&lt;/span&gt;
    &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Increment the number of players&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;    &lt;span class="pl-k"&gt;try&lt;/span&gt; &lt;span class="pl-c1"&gt;Player&lt;/span&gt;(&lt;span class="pl-k"&gt;...&lt;/span&gt;).&lt;span class="pl-c1"&gt;insert&lt;/span&gt;(db)
    
    &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Read the number of players. The writer queue is still locked :-(&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;    &lt;span class="pl-k"&gt;let&lt;/span&gt; count &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-k"&gt;try&lt;/span&gt; Player.&lt;span class="pl-c1"&gt;fetchCount&lt;/span&gt;(db)
}&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;A wrong solution is to chain a write then a read, as below. Don't do that, because another thread may modify the database in between, and make the read unreliable:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; WRONG&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;&lt;span class="pl-k"&gt;try&lt;/span&gt; dbPool.&lt;span class="pl-smi"&gt;write&lt;/span&gt; { db &lt;span class="pl-k"&gt;in&lt;/span&gt;
    &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Increment the number of players&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;    &lt;span class="pl-k"&gt;try&lt;/span&gt; &lt;span class="pl-c1"&gt;Player&lt;/span&gt;(&lt;span class="pl-k"&gt;...&lt;/span&gt;).&lt;span class="pl-c1"&gt;insert&lt;/span&gt;(db)
}
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; &amp;lt;- other threads can write in the database here&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;&lt;span class="pl-k"&gt;try&lt;/span&gt; dbPool.&lt;span class="pl-smi"&gt;read&lt;/span&gt; { db &lt;span class="pl-k"&gt;in&lt;/span&gt;
    &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Read some random value :-(&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;    &lt;span class="pl-k"&gt;let&lt;/span&gt; count &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-k"&gt;try&lt;/span&gt; Player.&lt;span class="pl-c1"&gt;fetchCount&lt;/span&gt;(db)
}&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;The correct solution is the &lt;code&gt;concurrentRead&lt;/code&gt; method, which must be called from within a write block, outside of any transaction.&lt;/p&gt;
&lt;p&gt;&lt;code&gt;concurrentRead&lt;/code&gt; returns a &lt;strong&gt;future value&lt;/strong&gt; which you consume on any dispatch queue, with the &lt;code&gt;wait()&lt;/code&gt; method:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; CORRECT&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;&lt;span class="pl-k"&gt;let&lt;/span&gt; futureCount&lt;span class="pl-k"&gt;:&lt;/span&gt; DatabaseFuture&lt;span class="pl-k"&gt;&amp;lt;&lt;/span&gt;&lt;span class="pl-c1"&gt;Int&lt;/span&gt;&lt;span class="pl-k"&gt;&amp;gt;&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-k"&gt;try&lt;/span&gt; dbPool.&lt;span class="pl-smi"&gt;writeWithoutTransaction&lt;/span&gt; { db &lt;span class="pl-k"&gt;in&lt;/span&gt;
    &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; increment the number of players&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;    &lt;span class="pl-k"&gt;try&lt;/span&gt; &lt;span class="pl-c1"&gt;Player&lt;/span&gt;(&lt;span class="pl-k"&gt;...&lt;/span&gt;).&lt;span class="pl-c1"&gt;insert&lt;/span&gt;(db)
    
    &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; &amp;lt;- not in a transaction here&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;    &lt;span class="pl-k"&gt;let&lt;/span&gt; futureCount &lt;span class="pl-k"&gt;=&lt;/span&gt; dbPool.&lt;span class="pl-smi"&gt;concurrentRead&lt;/span&gt; { db
        &lt;span class="pl-k"&gt;return&lt;/span&gt; &lt;span class="pl-k"&gt;try&lt;/span&gt; Player.&lt;span class="pl-c1"&gt;fetchCount&lt;/span&gt;(db)
    }
    &lt;span class="pl-k"&gt;return&lt;/span&gt; futureCount
}
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; &amp;lt;- The writer queue has been unlocked :-)&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Wait for the player count&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;&lt;span class="pl-k"&gt;let&lt;/span&gt; count&lt;span class="pl-k"&gt;:&lt;/span&gt; &lt;span class="pl-c1"&gt;Int&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-k"&gt;try&lt;/span&gt; futureCount.&lt;span class="pl-c1"&gt;wait&lt;/span&gt;()&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;code&gt;concurrentRead&lt;/code&gt; blocks until it can guarantee its closure argument an isolated access to the last committed state of the database. It then asynchronously executes the closure.&lt;/p&gt;
&lt;p&gt;The closure can run concurrently with eventual updates performed after &lt;code&gt;concurrentRead&lt;/code&gt;: those updates won't be visible from within the closure. In the example below, the number of players is guaranteed to be non-zero, even though it is fetched concurrently with the player deletion:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;try&lt;/span&gt; dbPool.&lt;span class="pl-smi"&gt;writeWithoutTransaction&lt;/span&gt; { db &lt;span class="pl-k"&gt;in&lt;/span&gt;
    &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Increment the number of players&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;    &lt;span class="pl-k"&gt;try&lt;/span&gt; &lt;span class="pl-c1"&gt;Player&lt;/span&gt;(&lt;span class="pl-k"&gt;...&lt;/span&gt;).&lt;span class="pl-c1"&gt;insert&lt;/span&gt;(db)
    
    &lt;span class="pl-k"&gt;let&lt;/span&gt; futureCount &lt;span class="pl-k"&gt;=&lt;/span&gt; dbPool.&lt;span class="pl-smi"&gt;concurrentRead&lt;/span&gt; { db
        &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Guaranteed to be non-zero&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;        &lt;span class="pl-k"&gt;return&lt;/span&gt; &lt;span class="pl-k"&gt;try&lt;/span&gt; Player.&lt;span class="pl-c1"&gt;fetchCount&lt;/span&gt;(db)
    }
    
    &lt;span class="pl-k"&gt;try&lt;/span&gt; Player.&lt;span class="pl-c1"&gt;deleteAll&lt;/span&gt;(db)
}&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;a href="#transactionobserver-protocol"&gt;Transaction Observers&lt;/a&gt; can also use &lt;code&gt;concurrentRead&lt;/code&gt; in their &lt;code&gt;databaseDidCommit&lt;/code&gt; method in order to process database changes without blocking other threads that want to write into the database.&lt;/p&gt;
&lt;h4&gt;&lt;a id="user-content-the-barrierwritewithouttransaction-method" class="anchor" aria-hidden="true" href="#the-barrierwritewithouttransaction-method"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;The &lt;code&gt;barrierWriteWithoutTransaction&lt;/code&gt; Method&lt;/h4&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;try&lt;/span&gt; dbPool.&lt;span class="pl-smi"&gt;barrierWriteWithoutTransaction&lt;/span&gt; { db &lt;span class="pl-k"&gt;in&lt;/span&gt;
    &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Exclusive database access&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;}&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;The barrier write guarantees exclusive access to the database: the method blocks until all concurrent database accesses are completed, reads and writes, and postpones all other accesses until it completes.&lt;/p&gt;
&lt;p&gt;There is a known limitation: reads performed by &lt;a href="#database-snapshots"&gt;database snapshots&lt;/a&gt; are out of scope, and may run concurrently with the barrier.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-database-snapshots" class="anchor" aria-hidden="true" href="#database-snapshots"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Database Snapshots&lt;/h3&gt;
&lt;p&gt;&lt;strong&gt;&lt;a href="#database-pools"&gt;Database pool&lt;/a&gt; can take snapshots.&lt;/strong&gt; A database snapshot sees an unchanging database content, as it existed at the moment it was created.&lt;/p&gt;
&lt;p&gt;"Unchanging" means that a snapshot never sees any database modifications during all its lifetime. And yet it doesn't prevent database updates. This "magic" is made possible by SQLite's WAL mode (see &lt;a href="https://sqlite.org/isolation.html" rel="nofollow"&gt;Isolation In SQLite&lt;/a&gt;).&lt;/p&gt;
&lt;p&gt;You create snapshots from a &lt;a href="#database-pools"&gt;database pool&lt;/a&gt;:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;let&lt;/span&gt; snapshot &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-k"&gt;try&lt;/span&gt; dbPool.&lt;span class="pl-c1"&gt;makeSnapshot&lt;/span&gt;()&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;You can create as many snapshots as you need, regardless of the &lt;a href="#databasepool-configuration"&gt;maximum number of readers&lt;/a&gt; in the pool. A snapshot database connection is closed when the snapshot gets deallocated.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;A snapshot can be used from any thread.&lt;/strong&gt; Its &lt;code&gt;read&lt;/code&gt; methods is synchronous, and blocks the current thread until your database statements are executed:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Read values:&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;&lt;span class="pl-k"&gt;try&lt;/span&gt; snapshot.&lt;span class="pl-smi"&gt;read&lt;/span&gt; { db &lt;span class="pl-k"&gt;in&lt;/span&gt;
    &lt;span class="pl-k"&gt;let&lt;/span&gt; players &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-k"&gt;try&lt;/span&gt; Player.&lt;span class="pl-c1"&gt;fetchAll&lt;/span&gt;(db)
    &lt;span class="pl-k"&gt;let&lt;/span&gt; playerCount &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-k"&gt;try&lt;/span&gt; Player.&lt;span class="pl-c1"&gt;fetchCount&lt;/span&gt;(db)
}

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Extract a value from the database:&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;&lt;span class="pl-k"&gt;let&lt;/span&gt; playerCount &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-k"&gt;try&lt;/span&gt; snapshot.&lt;span class="pl-smi"&gt;read&lt;/span&gt; { db &lt;span class="pl-k"&gt;in&lt;/span&gt;
    &lt;span class="pl-k"&gt;try&lt;/span&gt; Player.&lt;span class="pl-c1"&gt;fetchCount&lt;/span&gt;(db)
}&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;When you want to control the latest committed changes seen by a snapshot, create the snapshot from the pool's writer protected dispatch queue, outside of any transaction:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;let&lt;/span&gt; snapshot1 &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-k"&gt;try&lt;/span&gt; dbPool.&lt;span class="pl-smi"&gt;writeWithoutTransaction&lt;/span&gt; { db &lt;span class="pl-k"&gt;-&amp;gt;&lt;/span&gt; DatabaseSnapshot &lt;span class="pl-k"&gt;in&lt;/span&gt;
    &lt;span class="pl-k"&gt;try&lt;/span&gt; db.&lt;span class="pl-smi"&gt;inTransaction&lt;/span&gt; {
        &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; delete all players&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;        &lt;span class="pl-k"&gt;try&lt;/span&gt; Player.&lt;span class="pl-c1"&gt;deleteAll&lt;/span&gt;()
        &lt;span class="pl-k"&gt;return&lt;/span&gt; .&lt;span class="pl-smi"&gt;commit&lt;/span&gt;
    }
    
    &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; &amp;lt;- not in a transaction here&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;    &lt;span class="pl-k"&gt;return&lt;/span&gt; dbPool.&lt;span class="pl-c1"&gt;makeSnapshot&lt;/span&gt;()
}
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; &amp;lt;- Other threads may modify the database here&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;&lt;span class="pl-k"&gt;let&lt;/span&gt; snapshot2 &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-k"&gt;try&lt;/span&gt; dbPool.&lt;span class="pl-c1"&gt;makeSnapshot&lt;/span&gt;()

&lt;span class="pl-k"&gt;try&lt;/span&gt; snapshot1.&lt;span class="pl-smi"&gt;read&lt;/span&gt; { db &lt;span class="pl-k"&gt;in&lt;/span&gt;
    &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Guaranteed to be zero&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;    &lt;span class="pl-k"&gt;try&lt;/span&gt; Player.&lt;span class="pl-c1"&gt;fetchCount&lt;/span&gt;(db)
}

&lt;span class="pl-k"&gt;try&lt;/span&gt; snapshot2.&lt;span class="pl-smi"&gt;read&lt;/span&gt; { db &lt;span class="pl-k"&gt;in&lt;/span&gt;
    &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Could be anything&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;    &lt;span class="pl-k"&gt;try&lt;/span&gt; Player.&lt;span class="pl-c1"&gt;fetchCount&lt;/span&gt;(db)
}&lt;/pre&gt;&lt;/div&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;g-emoji class="g-emoji" alias="point_up" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/261d.png"&gt;☝️&lt;/g-emoji&gt; &lt;strong&gt;Note&lt;/strong&gt;: snapshots currently serialize all database accesses. In the future, snapshots may allow concurrent reads.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3&gt;&lt;a id="user-content-databasewriter-and-databasereader-protocols" class="anchor" aria-hidden="true" href="#databasewriter-and-databasereader-protocols"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;DatabaseWriter and DatabaseReader Protocols&lt;/h3&gt;
&lt;p&gt;Both DatabaseQueue and DatabasePool adopt the &lt;a href="http://groue.github.io/GRDB.swift/docs/4.5/Protocols/DatabaseReader.html" rel="nofollow"&gt;DatabaseReader&lt;/a&gt; and &lt;a href="http://groue.github.io/GRDB.swift/docs/4.5/Protocols/DatabaseWriter.html" rel="nofollow"&gt;DatabaseWriter&lt;/a&gt; protocols. DatabaseSnapshot adopts DatabaseReader only.&lt;/p&gt;
&lt;p&gt;These protocols provide a unified API that let you write generic code that targets all concurrency modes. They fuel, for example:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="#migrations"&gt;Migrations&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#databaseregionobservation"&gt;DatabaseRegionObservation&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#valueobservation"&gt;ValueObservation&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://github.com/groue/GRDBCombine"&gt;GRDBCombine&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://github.com/RxSwiftCommunity/RxGRDB"&gt;RxGRDB&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Only five types adopt those protocols: DatabaseQueue, DatabasePool, DatabaseSnapshot, AnyDatabaseReader, and AnyDatabaseWriter. Expanding this set is not supported: any future GRDB release may break your custom writers and readers, without notice.&lt;/p&gt;
&lt;p&gt;DatabaseReader and DatabaseWriter provide the &lt;em&gt;smallest&lt;/em&gt; common guarantees: they don't erase the differences between queues, pools, and snapshots. See for example &lt;a href="#differences-between-database-queues-and-pools"&gt;Differences between Database Queues and Pools&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;However, you can prevent some parts of your application from writing in the database by giving them a DatabaseReader:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; This class can read in the database, but can't write into it.&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;&lt;span class="pl-k"&gt;class&lt;/span&gt; &lt;span class="pl-en"&gt;MyReadOnlyComponent&lt;/span&gt; {
    &lt;span class="pl-k"&gt;let&lt;/span&gt; reader&lt;span class="pl-k"&gt;:&lt;/span&gt; DatabaseReader
    
    &lt;span class="pl-k"&gt;init&lt;/span&gt;(&lt;span class="pl-smi"&gt;&lt;span class="pl-en"&gt;reader&lt;/span&gt;&lt;/span&gt;: DatabaseReader) {
        &lt;span class="pl-c1"&gt;self&lt;/span&gt;.&lt;span class="pl-smi"&gt;reader&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; reader
    }
}

&lt;span class="pl-k"&gt;let&lt;/span&gt; dbQueue&lt;span class="pl-k"&gt;:&lt;/span&gt; DatabaseQueue &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-k"&gt;...&lt;/span&gt;
&lt;span class="pl-k"&gt;let&lt;/span&gt; component &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;MyReadOnlyComponent&lt;/span&gt;(&lt;span class="pl-c1"&gt;reader&lt;/span&gt;: dbQueue)&lt;/pre&gt;&lt;/div&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;g-emoji class="g-emoji" alias="point_up" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/261d.png"&gt;☝️&lt;/g-emoji&gt; &lt;strong&gt;Note&lt;/strong&gt;: DatabaseReader is not a &lt;strong&gt;secure&lt;/strong&gt; way to prevent an application component from writing in the database, because write access is just a cast away:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;if&lt;/span&gt; &lt;span class="pl-k"&gt;let&lt;/span&gt; dbQueue &lt;span class="pl-k"&gt;=&lt;/span&gt; reader &lt;span class="pl-k"&gt;as?&lt;/span&gt; DatabaseQueue {
    &lt;span class="pl-k"&gt;try&lt;/span&gt; dbQueue.&lt;span class="pl-smi"&gt;write&lt;/span&gt; { &lt;span class="pl-k"&gt;...&lt;/span&gt; }
}&lt;/pre&gt;&lt;/div&gt;
&lt;/blockquote&gt;
&lt;h3&gt;&lt;a id="user-content-asynchronous-apis" class="anchor" aria-hidden="true" href="#asynchronous-apis"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Asynchronous APIs&lt;/h3&gt;
&lt;p&gt;&lt;strong&gt;Database queues, pools, snapshots, as well as their common protocols &lt;code&gt;DatabaseReader&lt;/code&gt; and &lt;code&gt;DatabaseWriter&lt;/code&gt; provide asynchronous database access methods.&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="#asyncread"&gt;&lt;code&gt;asyncRead&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#asyncwrite"&gt;&lt;code&gt;asyncWrite&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#asyncwritewithouttransaction"&gt;&lt;code&gt;asyncWriteWithoutTransaction&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#asyncconcurrentread"&gt;&lt;code&gt;asyncConcurrentRead&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h4&gt;&lt;a id="user-content-asyncread" class="anchor" aria-hidden="true" href="#asyncread"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;code&gt;asyncRead&lt;/code&gt;&lt;/h4&gt;
&lt;p&gt;The &lt;code&gt;asyncRead&lt;/code&gt; method can be used from any thread. It submits your database statements for asynchronous execution on a protected dispatch queue:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;reader.&lt;span class="pl-smi"&gt;asyncRead&lt;/span&gt; { (&lt;span class="pl-c1"&gt;result&lt;/span&gt;: Result&lt;span class="pl-k"&gt;&amp;lt;&lt;/span&gt;Database&lt;span class="pl-k"&gt;&amp;gt;&lt;/span&gt;) &lt;span class="pl-k"&gt;in&lt;/span&gt;
    &lt;span class="pl-k"&gt;try&lt;/span&gt; {
        &lt;span class="pl-k"&gt;let&lt;/span&gt; db &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-k"&gt;try&lt;/span&gt; result.&lt;span class="pl-c1"&gt;get&lt;/span&gt;()
        &lt;span class="pl-k"&gt;let&lt;/span&gt; players &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-k"&gt;try&lt;/span&gt; Player.&lt;span class="pl-c1"&gt;fetchAll&lt;/span&gt;(db)
    } &lt;span class="pl-k"&gt;catch&lt;/span&gt; {
        &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; handle error&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;    }
}&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;The argument function accepts a standard &lt;code&gt;Result&amp;lt;Database, Error&amp;gt;&lt;/code&gt; which may contain a failure if it was impossible to start a reading access to the database.&lt;/p&gt;
&lt;p&gt;Any attempt at modifying the database throws an error.&lt;/p&gt;
&lt;p&gt;When you use a &lt;a href="#database-queues"&gt;database queue&lt;/a&gt; or a &lt;a href="#database-snapshots"&gt;database snapshot&lt;/a&gt;, the read has to wait for any eventual concurrent database access performed by this queue or snapshot to complete.&lt;/p&gt;
&lt;p&gt;When you use a &lt;a href="#database-pools"&gt;database pool&lt;/a&gt;, reads are generally non-blocking, unless the maximum number of concurrent reads has been reached. In this case, a read has to wait for another read to complete. That maximum number can be &lt;a href="#databasepool-configuration"&gt;configured&lt;/a&gt;.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;g-emoji class="g-emoji" alias="point_up" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/261d.png"&gt;☝️&lt;/g-emoji&gt; &lt;strong&gt;Note&lt;/strong&gt;: because it uses the standard &lt;code&gt;Result&lt;/code&gt; type, &lt;code&gt;asyncRead&lt;/code&gt; is only available with a Swift 5+ compiler, starting Xcode 10.2.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h4&gt;&lt;a id="user-content-asyncwrite" class="anchor" aria-hidden="true" href="#asyncwrite"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;code&gt;asyncWrite&lt;/code&gt;&lt;/h4&gt;
&lt;p&gt;The &lt;code&gt;asyncWrite&lt;/code&gt; method can be used from any thread. It submits your database statements for asynchronous execution on a protected dispatch queue, wrapped inside a &lt;a href="#transactions-and-savepoints"&gt;database transaction&lt;/a&gt;:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;writer.&lt;span class="pl-c1"&gt;asyncWrite&lt;/span&gt;({ (&lt;span class="pl-c1"&gt;db&lt;/span&gt;: Database) &lt;span class="pl-k"&gt;in&lt;/span&gt;
    &lt;span class="pl-k"&gt;try&lt;/span&gt; &lt;span class="pl-c1"&gt;Player&lt;/span&gt;(&lt;span class="pl-k"&gt;...&lt;/span&gt;).&lt;span class="pl-c1"&gt;insert&lt;/span&gt;(db)
}, &lt;span class="pl-c1"&gt;completion&lt;/span&gt;: { (&lt;span class="pl-c1"&gt;db&lt;/span&gt;: Database, &lt;span class="pl-c1"&gt;result&lt;/span&gt;: Result&lt;span class="pl-k"&gt;&amp;lt;&lt;/span&gt;&lt;span class="pl-c1"&gt;Void&lt;/span&gt;, &lt;span class="pl-c1"&gt;Error&lt;/span&gt;&lt;span class="pl-k"&gt;&amp;gt;&lt;/span&gt;) &lt;span class="pl-k"&gt;in&lt;/span&gt;
    &lt;span class="pl-k"&gt;switch&lt;/span&gt; result {
    &lt;span class="pl-k"&gt;case&lt;/span&gt; &lt;span class="pl-k"&gt;let&lt;/span&gt; .&lt;span class="pl-smi"&gt;success&lt;/span&gt;&lt;span class="pl-k"&gt;:&lt;/span&gt;
        &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; handle transaction success&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;    &lt;span class="pl-k"&gt;case&lt;/span&gt; &lt;span class="pl-k"&gt;let&lt;/span&gt; .&lt;span class="pl-c1"&gt;failure&lt;/span&gt;(error)&lt;span class="pl-k"&gt;:&lt;/span&gt;
        &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; handle transaction error&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;    }
})&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;code&gt;asyncWrite&lt;/code&gt; accepts two function arguments. The first one executes your database updates. The second one is a completion function which accepts a database connection and the result of the asynchronous transaction.&lt;/p&gt;
&lt;p&gt;On the first unhandled error during database updates, all changes are reverted, the whole transaction is rollbacked, and the error is passed to the completion function.&lt;/p&gt;
&lt;p&gt;When the transaction completes successfully, the result of the first function is contained in the standard &lt;code&gt;Result&lt;/code&gt; passed to the completion function:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;writer.&lt;span class="pl-c1"&gt;asyncWrite&lt;/span&gt;({ (&lt;span class="pl-c1"&gt;db&lt;/span&gt;: Database) &lt;span class="pl-k"&gt;-&amp;gt;&lt;/span&gt; &lt;span class="pl-c1"&gt;Int&lt;/span&gt; &lt;span class="pl-k"&gt;in&lt;/span&gt;
    &lt;span class="pl-k"&gt;try&lt;/span&gt; &lt;span class="pl-c1"&gt;Player&lt;/span&gt;(&lt;span class="pl-k"&gt;...&lt;/span&gt;).&lt;span class="pl-c1"&gt;insert&lt;/span&gt;(db)
    &lt;span class="pl-k"&gt;return&lt;/span&gt; &lt;span class="pl-k"&gt;try&lt;/span&gt; Player.&lt;span class="pl-c1"&gt;fetchCount&lt;/span&gt;(db)
}, &lt;span class="pl-c1"&gt;completion&lt;/span&gt;: { (&lt;span class="pl-c1"&gt;db&lt;/span&gt;: Database, &lt;span class="pl-c1"&gt;result&lt;/span&gt;: Result&lt;span class="pl-k"&gt;&amp;lt;&lt;/span&gt;&lt;span class="pl-c1"&gt;Int&lt;/span&gt;, &lt;span class="pl-c1"&gt;Error&lt;/span&gt;&lt;span class="pl-k"&gt;&amp;gt;&lt;/span&gt;) &lt;span class="pl-k"&gt;in&lt;/span&gt;
    &lt;span class="pl-k"&gt;switch&lt;/span&gt; result {
    &lt;span class="pl-k"&gt;case&lt;/span&gt; &lt;span class="pl-k"&gt;let&lt;/span&gt; .&lt;span class="pl-c1"&gt;success&lt;/span&gt;(newPlayerCount)&lt;span class="pl-k"&gt;:&lt;/span&gt;
        &lt;span class="pl-c1"&gt;print&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;new player count: &lt;span class="pl-pse"&gt;\(&lt;/span&gt;&lt;span class="pl-s1"&gt;newPlayerCount&lt;/span&gt;&lt;span class="pl-pse"&gt;&lt;span class="pl-s1"&gt;)&lt;/span&gt;&lt;/span&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
    &lt;span class="pl-k"&gt;case&lt;/span&gt; &lt;span class="pl-k"&gt;let&lt;/span&gt; .&lt;span class="pl-c1"&gt;failure&lt;/span&gt;(error)&lt;span class="pl-k"&gt;:&lt;/span&gt;
        &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; handle transaction error&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;    }
})&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;The scheduled asynchronous transaction has to wait for any eventual concurrent database write to complete before it can start.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;g-emoji class="g-emoji" alias="point_up" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/261d.png"&gt;☝️&lt;/g-emoji&gt; &lt;strong&gt;Note&lt;/strong&gt;: because it uses the standard &lt;code&gt;Result&lt;/code&gt; type, &lt;code&gt;asyncWrite&lt;/code&gt; is only available with a Swift 5+ compiler, starting Xcode 10.2.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h4&gt;&lt;a id="user-content-asyncwritewithouttransaction" class="anchor" aria-hidden="true" href="#asyncwritewithouttransaction"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;code&gt;asyncWriteWithoutTransaction&lt;/code&gt;&lt;/h4&gt;
&lt;p&gt;The &lt;code&gt;asyncWriteWithoutTransaction&lt;/code&gt; method can be used from any thread. It submits your database statements for asynchronous execution on a protected dispatch queue, outside of any transaction:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;writer.&lt;span class="pl-smi"&gt;asyncWriteWithoutTransaction&lt;/span&gt; { (&lt;span class="pl-c1"&gt;db&lt;/span&gt;: Database) &lt;span class="pl-k"&gt;in&lt;/span&gt;
    &lt;span class="pl-k"&gt;try&lt;/span&gt; {
        &lt;span class="pl-k"&gt;try&lt;/span&gt; &lt;span class="pl-c1"&gt;Player&lt;/span&gt;(&lt;span class="pl-k"&gt;...&lt;/span&gt;).&lt;span class="pl-c1"&gt;insert&lt;/span&gt;(db)
    } &lt;span class="pl-k"&gt;catch&lt;/span&gt; {
        &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; handle error&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;    }
}&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;strong&gt;Writing outside of any transaction is dangerous.&lt;/strong&gt; You should almost always prefer the &lt;code&gt;asyncWrite&lt;/code&gt; method described above. Please see &lt;a href="#transactions-and-savepoints"&gt;Transactions and Savepoints&lt;/a&gt; for more information.&lt;/p&gt;
&lt;p&gt;The scheduled asynchronous updates have to wait for any eventual concurrent database write to complete before they can start.&lt;/p&gt;
&lt;h4&gt;&lt;a id="user-content-asyncconcurrentread" class="anchor" aria-hidden="true" href="#asyncconcurrentread"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;code&gt;asyncConcurrentRead&lt;/code&gt;&lt;/h4&gt;
&lt;p&gt;The &lt;code&gt;asyncConcurrentRead&lt;/code&gt; method is available on database pools only. It is the asynchronous equivalent of the &lt;code&gt;concurrentRead&lt;/code&gt; described in the &lt;a href="#advanced-databasepool"&gt;Advanced DatabasePool&lt;/a&gt; chapter.&lt;/p&gt;
&lt;p&gt;It must be called from a writing dispatch queue, outside of any transaction. You'll get a fatal error otherwise.&lt;/p&gt;
&lt;p&gt;The closure argument is guaranteed to see the database in the last committed state at the moment this method is called. Eventual concurrent database updates are &lt;em&gt;not visible&lt;/em&gt; inside the block.&lt;/p&gt;
&lt;p&gt;&lt;code&gt;asyncConcurrentRead&lt;/code&gt; blocks until it can guarantee its closure argument an isolated access to the last committed state of the database. It then asynchronously executes the closure.&lt;/p&gt;
&lt;p&gt;In the example below, the number of players is fetched concurrently with the player insertion. Yet the future is guaranteed to return zero:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;try&lt;/span&gt; writer.&lt;span class="pl-smi"&gt;asyncWriteWithoutTransaction&lt;/span&gt; { db &lt;span class="pl-k"&gt;in&lt;/span&gt;
    &lt;span class="pl-k"&gt;do&lt;/span&gt; {
        &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Delete all players&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;        &lt;span class="pl-k"&gt;try&lt;/span&gt; Player.&lt;span class="pl-c1"&gt;deleteAll&lt;/span&gt;()
        
        &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; &amp;lt;- not in a transaction here&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;        &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Count players concurrently&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;        writer.&lt;span class="pl-smi"&gt;asyncConcurrentRead&lt;/span&gt; { (&lt;span class="pl-c1"&gt;result&lt;/span&gt;: Result&lt;span class="pl-k"&gt;&amp;lt;&lt;/span&gt;Database&lt;span class="pl-k"&gt;&amp;gt;&lt;/span&gt;) &lt;span class="pl-k"&gt;in&lt;/span&gt;
            &lt;span class="pl-k"&gt;try&lt;/span&gt; {
                &lt;span class="pl-k"&gt;let&lt;/span&gt; db &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-k"&gt;try&lt;/span&gt; result.&lt;span class="pl-c1"&gt;get&lt;/span&gt;()
                &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Guaranteed to be zero&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;                &lt;span class="pl-k"&gt;let&lt;/span&gt; count &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-k"&gt;try&lt;/span&gt; Player.&lt;span class="pl-c1"&gt;fetchCount&lt;/span&gt;()
            } &lt;span class="pl-k"&gt;catch&lt;/span&gt; {
                &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; handle error&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;            }
        }
        
        &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Insert a player&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;        &lt;span class="pl-k"&gt;try&lt;/span&gt; &lt;span class="pl-c1"&gt;Player&lt;/span&gt;(&lt;span class="pl-k"&gt;...&lt;/span&gt;).&lt;span class="pl-c1"&gt;insert&lt;/span&gt;(db)
    } &lt;span class="pl-k"&gt;catch&lt;/span&gt; {
        &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; handle error&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;    }
}&lt;/pre&gt;&lt;/div&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;g-emoji class="g-emoji" alias="point_up" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/261d.png"&gt;☝️&lt;/g-emoji&gt; &lt;strong&gt;Note&lt;/strong&gt;: because it uses the standard &lt;code&gt;Result&lt;/code&gt; type, &lt;code&gt;asyncWriteWithoutTransaction&lt;/code&gt; is only available with a Swift 5+ compiler, starting Xcode 10.2.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3&gt;&lt;a id="user-content-unsafe-concurrency-apis" class="anchor" aria-hidden="true" href="#unsafe-concurrency-apis"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Unsafe Concurrency APIs&lt;/h3&gt;
&lt;p&gt;&lt;strong&gt;Database queues, pools, snapshots, as well as their common protocols &lt;code&gt;DatabaseReader&lt;/code&gt; and &lt;code&gt;DatabaseWriter&lt;/code&gt; provide &lt;em&gt;unsafe&lt;/em&gt; database access methods.&lt;/strong&gt; Unsafe APIs lift &lt;a href="#guarantees-and-rules"&gt;concurrency guarantees&lt;/a&gt;, and allow advanced yet unsafe patterns.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;&lt;code&gt;unsafeRead&lt;/code&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;The &lt;code&gt;unsafeRead&lt;/code&gt; method is synchronous, and blocks the current thread until your database statements are executed in a protected dispatch queue. GRDB does just the bare minimum to provide a database connection that can read.&lt;/p&gt;
&lt;p&gt;When used on a database pool, reads are no longer isolated:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;dbPool.&lt;span class="pl-smi"&gt;unsafeRead&lt;/span&gt; { db &lt;span class="pl-k"&gt;in&lt;/span&gt;
    &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Those two values may be different because some other thread&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;    &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; may have inserted or deleted a player between the two requests:&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;    &lt;span class="pl-k"&gt;let&lt;/span&gt; count1 &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-k"&gt;try&lt;/span&gt; Player.&lt;span class="pl-c1"&gt;fetchCount&lt;/span&gt;(db)
    &lt;span class="pl-k"&gt;let&lt;/span&gt; count2 &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-k"&gt;try&lt;/span&gt; Player.&lt;span class="pl-c1"&gt;fetchCount&lt;/span&gt;(db)
}&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;When used on a database queue, the closure argument is allowed to write in the database.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;&lt;code&gt;unsafeReentrantRead&lt;/code&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;The &lt;code&gt;unsafeReentrantRead&lt;/code&gt; behaves just as &lt;code&gt;unsafeRead&lt;/code&gt; (see above), and allows reentrant calls:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;dbPool.&lt;span class="pl-smi"&gt;read&lt;/span&gt; { db1 &lt;span class="pl-k"&gt;in&lt;/span&gt;
    &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; No "Database methods are not reentrant" fatal error:&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;    dbPool.&lt;span class="pl-smi"&gt;unsafeReentrantRead&lt;/span&gt; { db2 &lt;span class="pl-k"&gt;in&lt;/span&gt;
        dbPool.&lt;span class="pl-smi"&gt;unsafeReentrantRead&lt;/span&gt; { db3 &lt;span class="pl-k"&gt;in&lt;/span&gt;
            &lt;span class="pl-k"&gt;...&lt;/span&gt;
        }
    }
}&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Reentrant database accesses make it very easy to break the second &lt;a href="#guarantees-and-rules"&gt;safety rule&lt;/a&gt;, which says: "group related statements within a single call to a DatabaseQueue or DatabasePool database access method.". Using a reentrant method is pretty much likely the sign of a wrong application architecture that needs refactoring.&lt;/p&gt;
&lt;p&gt;There is a single valid use case for reentrant methods, which is when you are unable to control database access scheduling.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;&lt;code&gt;unsafeReentrantWrite&lt;/code&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;The &lt;code&gt;unsafeReentrantWrite&lt;/code&gt; method is synchronous, and blocks the current thread until your database statements are executed in a protected dispatch queue. Writes are serialized: eventual concurrent database updates are postponed until the block has executed.&lt;/p&gt;
&lt;p&gt;Reentrant calls are allowed:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;dbQueue.&lt;span class="pl-smi"&gt;write&lt;/span&gt; { db1 &lt;span class="pl-k"&gt;in&lt;/span&gt;
    &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; No "Database methods are not reentrant" fatal error:&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;    dbQueue.&lt;span class="pl-smi"&gt;unsafeReentrantWrite&lt;/span&gt; { db2 &lt;span class="pl-k"&gt;in&lt;/span&gt;
        dbQueue.&lt;span class="pl-smi"&gt;unsafeReentrantWrite&lt;/span&gt; { db3 &lt;span class="pl-k"&gt;in&lt;/span&gt;
            &lt;span class="pl-k"&gt;...&lt;/span&gt;
        }
    }
}&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Reentrant database accesses make it very easy to break the second &lt;a href="#guarantees-and-rules"&gt;safety rule&lt;/a&gt;, which says: "group related statements within a single call to a DatabaseQueue or DatabasePool database access method.". Using a reentrant method is pretty much likely the sign of a wrong application architecture that needs refactoring.&lt;/p&gt;
&lt;p&gt;There is a single valid use case for reentrant methods, which is when you are unable to control database access scheduling.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;&lt;a id="user-content-dealing-with-external-connections" class="anchor" aria-hidden="true" href="#dealing-with-external-connections"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Dealing with External Connections&lt;/h3&gt;
&lt;p&gt;The first rule of GRDB is:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;&lt;a href="#guarantees-and-rules"&gt;Rule 1&lt;/a&gt;&lt;/strong&gt;: Have a unique instance of DatabaseQueue or DatabasePool connected to any database file.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;This means that dealing with external connections is not a focus of GRDB. &lt;a href="#guarantees-and-rules"&gt;Guarantees&lt;/a&gt; of GRDB may or may not hold as soon as some external connection modifies a database.&lt;/p&gt;
&lt;p&gt;If you absolutely need multiple connections, then:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Reconsider your position&lt;/li&gt;
&lt;li&gt;Read about &lt;a href="https://www.sqlite.org/isolation.html" rel="nofollow"&gt;isolation in SQLite&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Learn about &lt;a href="https://www.sqlite.org/lang_transaction.html" rel="nofollow"&gt;locks and transactions&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Become a master of the &lt;a href="https://www.sqlite.org/wal.html" rel="nofollow"&gt;WAL mode&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Prepare to setup a &lt;a href="https://www.sqlite.org/c3ref/busy_handler.html" rel="nofollow"&gt;busy handler&lt;/a&gt; with &lt;a href="http://groue.github.io/GRDB.swift/docs/4.5/Structs/Configuration.html" rel="nofollow"&gt;Configuration.busyMode&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/groue/GRDB.swift/issues"&gt;Ask questions&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-performance" class="anchor" aria-hidden="true" href="#performance"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Performance&lt;/h2&gt;
&lt;p&gt;GRDB is a reasonably fast library, and can deliver quite efficient SQLite access. See &lt;a href="https://github.com/groue/GRDB.swift/wiki/Performance"&gt;Comparing the Performances of Swift SQLite libraries&lt;/a&gt; for an overview.&lt;/p&gt;
&lt;p&gt;You'll find below general advice when you do look after performance:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Focus&lt;/li&gt;
&lt;li&gt;Know your platform&lt;/li&gt;
&lt;li&gt;Use transactions&lt;/li&gt;
&lt;li&gt;Don't do useless work&lt;/li&gt;
&lt;li&gt;Learn about SQL strengths and weaknesses&lt;/li&gt;
&lt;li&gt;Avoid strings &amp;amp; dictionaries&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;&lt;a id="user-content-performance-tip-focus" class="anchor" aria-hidden="true" href="#performance-tip-focus"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Performance tip: focus&lt;/h3&gt;
&lt;p&gt;You don't know which part of your program needs improvement until you have run a benchmarking tool.&lt;/p&gt;
&lt;p&gt;Don't make any assumption, avoid optimizing code too early, and use &lt;a href="https://developer.apple.com/library/ios/documentation/ToolsLanguages/Conceptual/Xcode_Overview/MeasuringPerformance.html" rel="nofollow"&gt;Instruments&lt;/a&gt;.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-performance-tip-know-your-platform" class="anchor" aria-hidden="true" href="#performance-tip-know-your-platform"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Performance tip: know your platform&lt;/h3&gt;
&lt;p&gt;If your application processes a huge JSON file and inserts thousands of rows in the database right from the main thread, it will quite likely become unresponsive, and provide a sub-quality user experience.&lt;/p&gt;
&lt;p&gt;If not done yet, read the &lt;a href="https://developer.apple.com/library/ios/documentation/General/Conceptual/ConcurrencyProgrammingGuide/Introduction/Introduction.html#//apple_ref/doc/uid/TP40008091" rel="nofollow"&gt;Concurrency Programming Guide&lt;/a&gt; and learn how to perform heavy computations without blocking your application.&lt;/p&gt;
&lt;p&gt;Most GRBD APIs are &lt;a href="#database-connections"&gt;synchronous&lt;/a&gt;. Spawning them into parallel queues is as easy as:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;DispatchQueue.&lt;span class="pl-c1"&gt;global&lt;/span&gt;().&lt;span class="pl-smi"&gt;async&lt;/span&gt; { 
    dbQueue.&lt;span class="pl-smi"&gt;write&lt;/span&gt; { db &lt;span class="pl-k"&gt;in&lt;/span&gt;
        &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Perform database work&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;    }
    DispatchQueue.&lt;span class="pl-smi"&gt;main&lt;/span&gt;.&lt;span class="pl-smi"&gt;async&lt;/span&gt; { 
        &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; update your user interface&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;    }
}&lt;/pre&gt;&lt;/div&gt;
&lt;h3&gt;&lt;a id="user-content-performance-tip-use-transactions" class="anchor" aria-hidden="true" href="#performance-tip-use-transactions"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Performance tip: use transactions&lt;/h3&gt;
&lt;p&gt;Performing multiple updates to the database is much faster when executed inside a &lt;a href="#transactions-and-savepoints"&gt;transaction&lt;/a&gt;. This is because a transaction allows SQLite to postpone writing changes to disk until the final commit:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Inefficient&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;&lt;span class="pl-k"&gt;try&lt;/span&gt; dbQueue.&lt;span class="pl-smi"&gt;inDatabase&lt;/span&gt; { db &lt;span class="pl-k"&gt;in&lt;/span&gt; &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; or dbPool.writeWithoutTransaction&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;    &lt;span class="pl-k"&gt;for&lt;/span&gt; player &lt;span class="pl-k"&gt;in&lt;/span&gt; players {
        &lt;span class="pl-k"&gt;try&lt;/span&gt; player.&lt;span class="pl-c1"&gt;insert&lt;/span&gt;(db)
    }
}

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Efficient&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;&lt;span class="pl-k"&gt;try&lt;/span&gt; dbQueue.&lt;span class="pl-smi"&gt;write&lt;/span&gt; { db &lt;span class="pl-k"&gt;in&lt;/span&gt;      &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; or dbPool.write&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;    &lt;span class="pl-k"&gt;for&lt;/span&gt; player &lt;span class="pl-k"&gt;in&lt;/span&gt; players {
        &lt;span class="pl-k"&gt;try&lt;/span&gt; player.&lt;span class="pl-c1"&gt;insert&lt;/span&gt;(db)
    }
}

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Efficient&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;&lt;span class="pl-k"&gt;try&lt;/span&gt; dbQueue.&lt;span class="pl-smi"&gt;inTransaction&lt;/span&gt; { db &lt;span class="pl-k"&gt;in&lt;/span&gt; &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; or dbPool.writeInTransaction&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;    &lt;span class="pl-k"&gt;for&lt;/span&gt; player &lt;span class="pl-k"&gt;in&lt;/span&gt; players {
        &lt;span class="pl-k"&gt;try&lt;/span&gt; player.&lt;span class="pl-c1"&gt;insert&lt;/span&gt;(db)
    }
    &lt;span class="pl-k"&gt;return&lt;/span&gt; .&lt;span class="pl-smi"&gt;commit&lt;/span&gt;
}&lt;/pre&gt;&lt;/div&gt;
&lt;h3&gt;&lt;a id="user-content-performance-tip-dont-do-useless-work" class="anchor" aria-hidden="true" href="#performance-tip-dont-do-useless-work"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Performance tip: don't do useless work&lt;/h3&gt;
&lt;p&gt;Obviously, no code is faster than any code.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Don't fetch columns you don't use&lt;/strong&gt;&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; SELECT * FROM player&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;&lt;span class="pl-k"&gt;try&lt;/span&gt; Player.&lt;span class="pl-c1"&gt;fetchAll&lt;/span&gt;(db)

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; SELECT id, name FROM player&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;&lt;span class="pl-k"&gt;try&lt;/span&gt; Player.&lt;span class="pl-c1"&gt;select&lt;/span&gt;(idColumn, nameColumn).&lt;span class="pl-c1"&gt;fetchAll&lt;/span&gt;(db)&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;If your Player type can't be built without other columns (it has non-optional properties for other columns), &lt;em&gt;do define and use a different type&lt;/em&gt;.&lt;/p&gt;
&lt;p&gt;See &lt;a href="#columns-selected-by-a-request"&gt;Columns Selected by a Request&lt;/a&gt; for more information.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Don't fetch rows you don't use&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Use &lt;a href="#fetching-methods"&gt;fetchOne&lt;/a&gt; when you need a single value, and otherwise limit your queries at the database level:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Wrong way: this code may discard hundreds of useless database rows&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;&lt;span class="pl-k"&gt;let&lt;/span&gt; players &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-k"&gt;try&lt;/span&gt; Player.&lt;span class="pl-c1"&gt;order&lt;/span&gt;(scoreColumn.&lt;span class="pl-smi"&gt;desc&lt;/span&gt;).&lt;span class="pl-c1"&gt;fetchAll&lt;/span&gt;(db)
&lt;span class="pl-k"&gt;let&lt;/span&gt; hallOfFame &lt;span class="pl-k"&gt;=&lt;/span&gt; players.&lt;span class="pl-c1"&gt;prefix&lt;/span&gt;(&lt;span class="pl-c1"&gt;5&lt;/span&gt;)

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Better way&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;&lt;span class="pl-k"&gt;let&lt;/span&gt; hallOfFame &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-k"&gt;try&lt;/span&gt; Player.&lt;span class="pl-c1"&gt;order&lt;/span&gt;(scoreColumn.&lt;span class="pl-smi"&gt;desc&lt;/span&gt;).&lt;span class="pl-c1"&gt;limit&lt;/span&gt;(&lt;span class="pl-c1"&gt;5&lt;/span&gt;).&lt;span class="pl-c1"&gt;fetchAll&lt;/span&gt;(db)&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;strong&gt;Don't copy values unless necessary&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Particularly: the Array returned by the &lt;code&gt;fetchAll&lt;/code&gt; method, and the cursor returned by &lt;code&gt;fetchCursor&lt;/code&gt; aren't the same:&lt;/p&gt;
&lt;p&gt;&lt;code&gt;fetchAll&lt;/code&gt; copies all values from the database into memory, when &lt;code&gt;fetchCursor&lt;/code&gt; iterates database results as they are generated by SQLite, taking profit from SQLite efficiency.&lt;/p&gt;
&lt;p&gt;You should only load arrays if you need to keep them for later use (such as iterating their contents in the main thread). Otherwise, use &lt;code&gt;fetchCursor&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;See &lt;a href="#fetching-methods"&gt;fetching methods&lt;/a&gt; for more information about &lt;code&gt;fetchAll&lt;/code&gt; and &lt;code&gt;fetchCursor&lt;/code&gt;. See also the &lt;a href="#data-and-memory-savings"&gt;Row.dataNoCopy&lt;/a&gt; method.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Don't update rows unless necessary&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;An UPDATE statement is costly: SQLite has to look for the updated row, update values, and write changes to disk.&lt;/p&gt;
&lt;p&gt;When the overwritten values are the same as the existing ones, it's thus better to avoid performing the UPDATE statement:.&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;if&lt;/span&gt; player.&lt;span class="pl-smi"&gt;hasDatabaseChanges&lt;/span&gt; {
    &lt;span class="pl-k"&gt;try&lt;/span&gt; player.&lt;span class="pl-c1"&gt;update&lt;/span&gt;(db)
}&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;See &lt;a href="#record-comparison"&gt;Record Comparison&lt;/a&gt; for more information.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-performance-tip-learn-about-sql-strengths-and-weaknesses" class="anchor" aria-hidden="true" href="#performance-tip-learn-about-sql-strengths-and-weaknesses"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Performance tip: learn about SQL strengths and weaknesses&lt;/h3&gt;
&lt;p&gt;Consider a simple use case: your store application has to display a list of authors with the number of available books:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;J. M. Coetzee (6)&lt;/li&gt;
&lt;li&gt;Herman Melville (1)&lt;/li&gt;
&lt;li&gt;Alice Munro (3)&lt;/li&gt;
&lt;li&gt;Kim Stanley Robinson (7)&lt;/li&gt;
&lt;li&gt;Oliver Sacks (4)&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;The following code is inefficient. It is an example of the &lt;a href="http://stackoverflow.com/questions/97197/what-is-the-n1-selects-issue" rel="nofollow"&gt;N+1 problem&lt;/a&gt;, because it performs one query to load the authors, and then N queries, as many as there are authors. This turns very inefficient as the number of authors grows:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; SELECT * FROM author&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;&lt;span class="pl-k"&gt;let&lt;/span&gt; authors &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-k"&gt;try&lt;/span&gt; Author.&lt;span class="pl-c1"&gt;fetchAll&lt;/span&gt;(db)
&lt;span class="pl-k"&gt;for&lt;/span&gt; author &lt;span class="pl-k"&gt;in&lt;/span&gt; authors {
    &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; SELECT COUNT(*) FROM book WHERE authorId = ...&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;    author.&lt;span class="pl-smi"&gt;bookCount&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-k"&gt;try&lt;/span&gt; Book.&lt;span class="pl-c1"&gt;filter&lt;/span&gt;(authorIdColumn &lt;span class="pl-k"&gt;==&lt;/span&gt; author.&lt;span class="pl-smi"&gt;id&lt;/span&gt;).&lt;span class="pl-c1"&gt;fetchCount&lt;/span&gt;(db)
}&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Instead, perform &lt;em&gt;a single query&lt;/em&gt;:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;let&lt;/span&gt; sql &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"""&lt;/span&gt;&lt;/span&gt;
&lt;span class="pl-s"&gt;    SELECT author.*, COUNT(book.id) AS bookCount&lt;/span&gt;
&lt;span class="pl-s"&gt;    FROM author&lt;/span&gt;
&lt;span class="pl-s"&gt;    LEFT JOIN book ON book.authorId = author.id&lt;/span&gt;
&lt;span class="pl-s"&gt;    GROUP BY author.id&lt;/span&gt;
&lt;span class="pl-s"&gt;    &lt;span class="pl-pds"&gt;"""&lt;/span&gt;&lt;/span&gt;
&lt;span class="pl-k"&gt;let&lt;/span&gt; authors &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-k"&gt;try&lt;/span&gt; Author.&lt;span class="pl-c1"&gt;fetchAll&lt;/span&gt;(db, &lt;span class="pl-c1"&gt;sql&lt;/span&gt;: sql)&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;In the example above, consider extending your Author with an extra bookCount property, or define and use a different type.&lt;/p&gt;
&lt;p&gt;Generally, define indexes on your database tables, and use SQLite's efficient query planning:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.sqlite.org/queryplanner.html" rel="nofollow"&gt;Query Planning&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.sqlite.org/lang_createindex.html" rel="nofollow"&gt;CREATE INDEX&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.sqlite.org/optoverview.html" rel="nofollow"&gt;The SQLite Query Planner&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.sqlite.org/eqp.html" rel="nofollow"&gt;EXPLAIN QUERY PLAN&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;&lt;a id="user-content-performance-tip-avoid-strings--dictionaries" class="anchor" aria-hidden="true" href="#performance-tip-avoid-strings--dictionaries"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Performance tip: avoid strings &amp;amp; dictionaries&lt;/h3&gt;
&lt;p&gt;The String and Dictionary Swift types are better avoided when you look for the best performance.&lt;/p&gt;
&lt;p&gt;Now GRDB &lt;a href="#records"&gt;records&lt;/a&gt;, for your convenience, do use strings and dictionaries:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;class&lt;/span&gt; &lt;span class="pl-en"&gt;Player&lt;/span&gt; : &lt;span class="pl-e"&gt;Record &lt;/span&gt;{
    &lt;span class="pl-k"&gt;var&lt;/span&gt; id&lt;span class="pl-k"&gt;:&lt;/span&gt; &lt;span class="pl-c1"&gt;Int64&lt;/span&gt;&lt;span class="pl-k"&gt;?&lt;/span&gt;
    &lt;span class="pl-k"&gt;var&lt;/span&gt; name&lt;span class="pl-k"&gt;:&lt;/span&gt; &lt;span class="pl-c1"&gt;String&lt;/span&gt;
    &lt;span class="pl-k"&gt;var&lt;/span&gt; email&lt;span class="pl-k"&gt;:&lt;/span&gt; &lt;span class="pl-c1"&gt;String&lt;/span&gt;
    
    &lt;span class="pl-k"&gt;required&lt;/span&gt; &lt;span class="pl-k"&gt;init&lt;/span&gt;(&lt;span class="pl-en"&gt;_&lt;/span&gt; &lt;span class="pl-smi"&gt;row&lt;/span&gt;: Row) {
        id &lt;span class="pl-k"&gt;=&lt;/span&gt; row[&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;id&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;]       &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; String&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;        name &lt;span class="pl-k"&gt;=&lt;/span&gt; row[&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;name&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;]   &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; String&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;        email &lt;span class="pl-k"&gt;=&lt;/span&gt; row[&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;email&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;] &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; String&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;        &lt;span class="pl-c1"&gt;super&lt;/span&gt;.&lt;span class="pl-k"&gt;init&lt;/span&gt;()
    }
    
    &lt;span class="pl-k"&gt;override&lt;/span&gt; &lt;span class="pl-k"&gt;func&lt;/span&gt; &lt;span class="pl-en"&gt;encode&lt;/span&gt;(&lt;span class="pl-en"&gt;to&lt;/span&gt; &lt;span class="pl-smi"&gt;container&lt;/span&gt;: &lt;span class="pl-k"&gt;inout&lt;/span&gt; PersistenceContainer) {
        container[&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;id&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;] &lt;span class="pl-k"&gt;=&lt;/span&gt; id              &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; String&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;        container[&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;name&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;] &lt;span class="pl-k"&gt;=&lt;/span&gt; name          &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; String&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;        container[&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;email&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;] &lt;span class="pl-k"&gt;=&lt;/span&gt; email        &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; String&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;    }
}&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;When convenience hurts performance, you can still use records, but you have better avoiding their string and dictionary-based methods.&lt;/p&gt;
&lt;p&gt;For example, when fetching values, prefer loading columns by index:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Strings &amp;amp; dictionaries&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;&lt;span class="pl-k"&gt;let&lt;/span&gt; players &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-k"&gt;try&lt;/span&gt; Player.&lt;span class="pl-c1"&gt;fetchAll&lt;/span&gt;(db)

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Column indexes&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; SELECT id, name, email FROM player&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;&lt;span class="pl-k"&gt;let&lt;/span&gt; request &lt;span class="pl-k"&gt;=&lt;/span&gt; Player.&lt;span class="pl-c1"&gt;select&lt;/span&gt;(idColumn, nameColumn, emailColumn)
&lt;span class="pl-k"&gt;let&lt;/span&gt; rows &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-k"&gt;try&lt;/span&gt; Row.&lt;span class="pl-c1"&gt;fetchCursor&lt;/span&gt;(db, request)
&lt;span class="pl-k"&gt;while&lt;/span&gt; &lt;span class="pl-k"&gt;let&lt;/span&gt; row &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-k"&gt;try&lt;/span&gt; rows.&lt;span class="pl-c1"&gt;next&lt;/span&gt;() {
    &lt;span class="pl-k"&gt;let&lt;/span&gt; id&lt;span class="pl-k"&gt;:&lt;/span&gt; &lt;span class="pl-c1"&gt;Int64&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; row[&lt;span class="pl-c1"&gt;0&lt;/span&gt;]
    &lt;span class="pl-k"&gt;let&lt;/span&gt; name&lt;span class="pl-k"&gt;:&lt;/span&gt; &lt;span class="pl-c1"&gt;String&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; row[&lt;span class="pl-c1"&gt;1&lt;/span&gt;]
    &lt;span class="pl-k"&gt;let&lt;/span&gt; email&lt;span class="pl-k"&gt;:&lt;/span&gt; &lt;span class="pl-c1"&gt;String&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; row[&lt;span class="pl-c1"&gt;2&lt;/span&gt;]
    &lt;span class="pl-k"&gt;let&lt;/span&gt; player &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;Player&lt;/span&gt;(&lt;span class="pl-c1"&gt;id&lt;/span&gt;: id, &lt;span class="pl-c1"&gt;name&lt;/span&gt;: name, &lt;span class="pl-c1"&gt;email&lt;/span&gt;: email)
    &lt;span class="pl-k"&gt;...&lt;/span&gt;
}&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;When inserting values, use reusable &lt;a href="#prepared-statements"&gt;prepared statements&lt;/a&gt;, and set statements values with an &lt;em&gt;array&lt;/em&gt;:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Strings &amp;amp; dictionaries&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;&lt;span class="pl-k"&gt;for&lt;/span&gt; player &lt;span class="pl-k"&gt;in&lt;/span&gt; players {
    &lt;span class="pl-k"&gt;try&lt;/span&gt; player.&lt;span class="pl-c1"&gt;insert&lt;/span&gt;(db)
}

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Prepared statement&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;&lt;span class="pl-k"&gt;let&lt;/span&gt; insertStatement &lt;span class="pl-k"&gt;=&lt;/span&gt; db.&lt;span class="pl-c1"&gt;prepareStatement&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;INSERT INTO player (name, email) VALUES (?, ?)&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
&lt;span class="pl-k"&gt;for&lt;/span&gt; player &lt;span class="pl-k"&gt;in&lt;/span&gt; players {
    &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Only use the unsafe arguments setter if you are sure that you provide&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;    &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; all statement arguments. A mistake can store unexpected values in&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;    &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; the database.&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;    insertStatement.&lt;span class="pl-c1"&gt;unsafeSetArguments&lt;/span&gt;([player.&lt;span class="pl-smi"&gt;name&lt;/span&gt;, player.&lt;span class="pl-smi"&gt;email&lt;/span&gt;])
    &lt;span class="pl-k"&gt;try&lt;/span&gt; insertStatement.&lt;span class="pl-c1"&gt;execute&lt;/span&gt;()
}&lt;/pre&gt;&lt;/div&gt;
&lt;h1&gt;&lt;a id="user-content-faq" class="anchor" aria-hidden="true" href="#faq"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;FAQ&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="#how-do-i-create-a-database-in-my-application"&gt;How do I create a database in my application?&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#how-do-i-open-a-database-stored-as-a-resource-of-my-application"&gt;How do I open a database stored as a resource of my application?&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#how-do-i-close-a-database-connection"&gt;How do I close a database connection?&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#how-do-i-print-a-request-as-sql"&gt;How do I print a request as SQL?&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#generic-parameter-t-could-not-be-inferred"&gt;Generic parameter 'T' could not be inferred&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#sqlite-error-10-disk-io-error-sqlite-error-23-not-authorized"&gt;SQLite error 10 "disk I/O error", SQLite error 23 "not authorized"&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#sqlite-error-21-wrong-number-of-statement-arguments-with-like-queries"&gt;SQLite error 21 "wrong number of statement arguments" with LIKE queries&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#what-are-experimental-features"&gt;What Are Experimental Features?&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;&lt;a id="user-content-how-do-i-create-a-database-in-my-application" class="anchor" aria-hidden="true" href="#how-do-i-create-a-database-in-my-application"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;How do I create a database in my application?&lt;/h3&gt;
&lt;p&gt;This question assumes that your application has to create a new database from scratch. If your app has to open an existing database that is embedded inside your application as a resource, see &lt;a href="#how-do-i-open-a-database-stored-as-a-resource-of-my-application"&gt;How do I open a database stored as a resource of my application?&lt;/a&gt; instead.&lt;/p&gt;
&lt;p&gt;The database has to be stored in a valid place where it can be created and modified. For example, in the &lt;a href="https://developer.apple.com/library/content/documentation/FileManagement/Conceptual/FileSystemProgrammingGuide/FileSystemOverview/FileSystemOverview.html" rel="nofollow"&gt;Application Support directory&lt;/a&gt;:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;let&lt;/span&gt; databaseURL &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-k"&gt;try&lt;/span&gt; FileManager.&lt;span class="pl-smi"&gt;default&lt;/span&gt;
    .&lt;span class="pl-c1"&gt;url&lt;/span&gt;(&lt;span class="pl-c1"&gt;for&lt;/span&gt;: .&lt;span class="pl-smi"&gt;applicationSupportDirectory&lt;/span&gt;, &lt;span class="pl-c1"&gt;in&lt;/span&gt;: .&lt;span class="pl-smi"&gt;userDomainMask&lt;/span&gt;, &lt;span class="pl-c1"&gt;appropriateFor&lt;/span&gt;: &lt;span class="pl-c1"&gt;nil&lt;/span&gt;, &lt;span class="pl-c1"&gt;create&lt;/span&gt;: &lt;span class="pl-c1"&gt;true&lt;/span&gt;)
    .&lt;span class="pl-c1"&gt;appendingPathComponent&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;db.sqlite&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
&lt;span class="pl-k"&gt;let&lt;/span&gt; dbQueue &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-k"&gt;try&lt;/span&gt; &lt;span class="pl-c1"&gt;DatabaseQueue&lt;/span&gt;(&lt;span class="pl-c1"&gt;path&lt;/span&gt;: databaseURL.&lt;span class="pl-smi"&gt;path&lt;/span&gt;)&lt;/pre&gt;&lt;/div&gt;
&lt;h3&gt;&lt;a id="user-content-how-do-i-open-a-database-stored-as-a-resource-of-my-application" class="anchor" aria-hidden="true" href="#how-do-i-open-a-database-stored-as-a-resource-of-my-application"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;How do I open a database stored as a resource of my application?&lt;/h3&gt;
&lt;p&gt;If your application does not need to modify the database, open a read-only &lt;a href="#database-connections"&gt;connection&lt;/a&gt; to your resource:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;var&lt;/span&gt; config &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;Configuration&lt;/span&gt;()
config.&lt;span class="pl-smi"&gt;readonly&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;true&lt;/span&gt;
&lt;span class="pl-k"&gt;let&lt;/span&gt; dbPath &lt;span class="pl-k"&gt;=&lt;/span&gt; Bundle.&lt;span class="pl-smi"&gt;main&lt;/span&gt;.&lt;span class="pl-c1"&gt;path&lt;/span&gt;(&lt;span class="pl-c1"&gt;forResource&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;db&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-c1"&gt;ofType&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;sqlite&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)&lt;span class="pl-k"&gt;!&lt;/span&gt;
&lt;span class="pl-k"&gt;let&lt;/span&gt; dbQueue &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-k"&gt;try&lt;/span&gt; &lt;span class="pl-c1"&gt;DatabaseQueue&lt;/span&gt;(&lt;span class="pl-c1"&gt;path&lt;/span&gt;: dbPath, &lt;span class="pl-c1"&gt;configuration&lt;/span&gt;: config)&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;If the application should modify the database, you need to copy it to a place where it can be modified. For example, in the &lt;a href="https://developer.apple.com/library/content/documentation/FileManagement/Conceptual/FileSystemProgrammingGuide/FileSystemOverview/FileSystemOverview.html" rel="nofollow"&gt;Application Support directory&lt;/a&gt;. Only then, open a &lt;a href="#database-connections"&gt;connection&lt;/a&gt;:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;let&lt;/span&gt; fileManager &lt;span class="pl-k"&gt;=&lt;/span&gt; FileManager.&lt;span class="pl-smi"&gt;default&lt;/span&gt;
&lt;span class="pl-k"&gt;let&lt;/span&gt; dbPath &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-k"&gt;try&lt;/span&gt; fileManager
    .&lt;span class="pl-c1"&gt;url&lt;/span&gt;(&lt;span class="pl-c1"&gt;for&lt;/span&gt;: .&lt;span class="pl-smi"&gt;applicationSupportDirectory&lt;/span&gt;, &lt;span class="pl-c1"&gt;in&lt;/span&gt;: .&lt;span class="pl-smi"&gt;userDomainMask&lt;/span&gt;, &lt;span class="pl-c1"&gt;appropriateFor&lt;/span&gt;: &lt;span class="pl-c1"&gt;nil&lt;/span&gt;, &lt;span class="pl-c1"&gt;create&lt;/span&gt;: &lt;span class="pl-c1"&gt;true&lt;/span&gt;)
    .&lt;span class="pl-c1"&gt;appendingPathComponent&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;db.sqlite&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
    .&lt;span class="pl-smi"&gt;path&lt;/span&gt;
&lt;span class="pl-k"&gt;if&lt;/span&gt; &lt;span class="pl-k"&gt;!&lt;/span&gt;fileManager.&lt;span class="pl-c1"&gt;fileExists&lt;/span&gt;(&lt;span class="pl-c1"&gt;atPath&lt;/span&gt;: dbPath) {
    &lt;span class="pl-k"&gt;let&lt;/span&gt; dbResourcePath &lt;span class="pl-k"&gt;=&lt;/span&gt; Bundle.&lt;span class="pl-smi"&gt;main&lt;/span&gt;.&lt;span class="pl-c1"&gt;path&lt;/span&gt;(&lt;span class="pl-c1"&gt;forResource&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;db&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-c1"&gt;ofType&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;sqlite&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)&lt;span class="pl-k"&gt;!&lt;/span&gt;
    &lt;span class="pl-k"&gt;try&lt;/span&gt; fileManager.&lt;span class="pl-c1"&gt;copyItem&lt;/span&gt;(&lt;span class="pl-c1"&gt;atPath&lt;/span&gt;: dbResourcePath, &lt;span class="pl-c1"&gt;toPath&lt;/span&gt;: dbPath)
}
&lt;span class="pl-k"&gt;let&lt;/span&gt; dbQueue &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-k"&gt;try&lt;/span&gt; &lt;span class="pl-c1"&gt;DatabaseQueue&lt;/span&gt;(&lt;span class="pl-c1"&gt;path&lt;/span&gt;: dbPath)&lt;/pre&gt;&lt;/div&gt;
&lt;h3&gt;&lt;a id="user-content-how-do-i-close-a-database-connection" class="anchor" aria-hidden="true" href="#how-do-i-close-a-database-connection"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;How do I close a database connection?&lt;/h3&gt;
&lt;p&gt;Database connections are managed by &lt;a href="#database-queues"&gt;database queues&lt;/a&gt; and &lt;a href="#database-pools"&gt;pools&lt;/a&gt;. A connection is closed when its database queue or pool is deallocated, and all usages of this connection are completed.&lt;/p&gt;
&lt;p&gt;Database accesses that run in background threads postpone the closing of connections.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-how-do-i-print-a-request-as-sql" class="anchor" aria-hidden="true" href="#how-do-i-print-a-request-as-sql"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;How do I print a request as SQL?&lt;/h3&gt;
&lt;p&gt;When you want to debug a request that does not deliver the expected results, you may want to print the SQL that is actually executed.&lt;/p&gt;
&lt;p&gt;You can turn your request into a &lt;code&gt;SQLRequest&lt;/code&gt; instance:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;try&lt;/span&gt; dbQueue.&lt;span class="pl-smi"&gt;read&lt;/span&gt; { db &lt;span class="pl-k"&gt;in&lt;/span&gt;
    &lt;span class="pl-k"&gt;let&lt;/span&gt; request &lt;span class="pl-k"&gt;=&lt;/span&gt; Wine
        .&lt;span class="pl-c1"&gt;filter&lt;/span&gt;(&lt;span class="pl-c1"&gt;Column&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;origin&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;) &lt;span class="pl-k"&gt;==&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;Burgundy&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
        .&lt;span class="pl-c1"&gt;order&lt;/span&gt;(&lt;span class="pl-c1"&gt;Column&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;price&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
    
    &lt;span class="pl-k"&gt;let&lt;/span&gt; sqlRequest &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-k"&gt;try&lt;/span&gt; &lt;span class="pl-c1"&gt;SQLRequest&lt;/span&gt;(db, &lt;span class="pl-c1"&gt;request&lt;/span&gt;: request)
    &lt;span class="pl-c1"&gt;print&lt;/span&gt;(sqlRequest.&lt;span class="pl-smi"&gt;sql&lt;/span&gt;)
    &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Prints SELECT * FROM wine WHERE origin = ? ORDER BY price&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;    &lt;span class="pl-c1"&gt;print&lt;/span&gt;(sqlRequest.&lt;span class="pl-smi"&gt;arguments&lt;/span&gt;)
    &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Prints ["Burgundy"]&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;}&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Another option is to setup a tracing function that will print out all SQL requests executed by your application. You provide the trace function when you connect to the database:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;var&lt;/span&gt; config &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;Configuration&lt;/span&gt;()
config.&lt;span class="pl-smi"&gt;trace&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; { &lt;span class="pl-c1"&gt;print&lt;/span&gt;(&lt;span class="pl-c1"&gt;$0&lt;/span&gt;) } &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Prints all SQL statements&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;&lt;span class="pl-k"&gt;let&lt;/span&gt; dbQueue &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-k"&gt;try&lt;/span&gt; &lt;span class="pl-c1"&gt;DatabaseQueue&lt;/span&gt;(&lt;span class="pl-c1"&gt;path&lt;/span&gt;: dbPath, &lt;span class="pl-c1"&gt;configuration&lt;/span&gt;: config)

&lt;span class="pl-k"&gt;try&lt;/span&gt; dbQueue.&lt;span class="pl-smi"&gt;read&lt;/span&gt; { db &lt;span class="pl-k"&gt;in&lt;/span&gt;
    &lt;span class="pl-k"&gt;let&lt;/span&gt; wines &lt;span class="pl-k"&gt;=&lt;/span&gt; Wine
        .&lt;span class="pl-c1"&gt;filter&lt;/span&gt;(&lt;span class="pl-c1"&gt;Column&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;origin&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;) &lt;span class="pl-k"&gt;==&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;Burgundy&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
        .&lt;span class="pl-c1"&gt;order&lt;/span&gt;(&lt;span class="pl-c1"&gt;Column&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;price&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
        .&lt;span class="pl-c1"&gt;fetchAll&lt;/span&gt;(db)
    &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Prints SELECT * FROM wine WHERE origin = 'Burgundy' ORDER BY price&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;}&lt;/pre&gt;&lt;/div&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;g-emoji class="g-emoji" alias="point_up" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/261d.png"&gt;☝️&lt;/g-emoji&gt; &lt;strong&gt;Note&lt;/strong&gt;: the generated SQL may change between GRDB releases, without notice: don't have your application rely on any specific SQL output.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3&gt;&lt;a id="user-content-generic-parameter-t-could-not-be-inferred" class="anchor" aria-hidden="true" href="#generic-parameter-t-could-not-be-inferred"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Generic parameter 'T' could not be inferred&lt;/h3&gt;
&lt;p&gt;You may get this error when using the &lt;code&gt;read&lt;/code&gt; and &lt;code&gt;write&lt;/code&gt; methods of database queues and pools:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Generic parameter 'T' could not be inferred&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;&lt;span class="pl-k"&gt;let&lt;/span&gt; string &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-k"&gt;try&lt;/span&gt; dbQueue.&lt;span class="pl-smi"&gt;read&lt;/span&gt; { db &lt;span class="pl-k"&gt;in&lt;/span&gt;
    &lt;span class="pl-k"&gt;let&lt;/span&gt; result &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-k"&gt;try&lt;/span&gt; &lt;span class="pl-c1"&gt;String&lt;/span&gt;.&lt;span class="pl-c1"&gt;fetchOne&lt;/span&gt;(db, &lt;span class="pl-k"&gt;...&lt;/span&gt;)
    &lt;span class="pl-k"&gt;return&lt;/span&gt; result
}&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;This is a limitation of the Swift compiler.&lt;/p&gt;
&lt;p&gt;The general workaround is to explicitly declare the type of the closure result:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; General Workaround&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;&lt;span class="pl-k"&gt;let&lt;/span&gt; string &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-k"&gt;try&lt;/span&gt; dbQueue.&lt;span class="pl-smi"&gt;read&lt;/span&gt; { db &lt;span class="pl-k"&gt;-&amp;gt;&lt;/span&gt; &lt;span class="pl-c1"&gt;String&lt;/span&gt;&lt;span class="pl-k"&gt;?&lt;/span&gt; &lt;span class="pl-k"&gt;in&lt;/span&gt;
    &lt;span class="pl-k"&gt;let&lt;/span&gt; result &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-k"&gt;try&lt;/span&gt; &lt;span class="pl-c1"&gt;String&lt;/span&gt;.&lt;span class="pl-c1"&gt;fetchOne&lt;/span&gt;(db, &lt;span class="pl-k"&gt;...&lt;/span&gt;)
    &lt;span class="pl-k"&gt;return&lt;/span&gt; result
}&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;You can also, when possible, write a single-line closure:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Single-line closure workaround:&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;&lt;span class="pl-k"&gt;let&lt;/span&gt; string &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-k"&gt;try&lt;/span&gt; dbQueue.&lt;span class="pl-smi"&gt;read&lt;/span&gt; { db &lt;span class="pl-k"&gt;in&lt;/span&gt;
    &lt;span class="pl-k"&gt;try&lt;/span&gt; &lt;span class="pl-c1"&gt;String&lt;/span&gt;.&lt;span class="pl-c1"&gt;fetchOne&lt;/span&gt;(db, &lt;span class="pl-k"&gt;...&lt;/span&gt;)
}&lt;/pre&gt;&lt;/div&gt;
&lt;h3&gt;&lt;a id="user-content-sqlite-error-10-disk-io-error-sqlite-error-23-not-authorized" class="anchor" aria-hidden="true" href="#sqlite-error-10-disk-io-error-sqlite-error-23-not-authorized"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;SQLite error 10 "disk I/O error", SQLite error 23 "not authorized"&lt;/h3&gt;
&lt;p&gt;Those errors may be the sign that SQLite can't access the database due to &lt;a href="#data-protection"&gt;data protection&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;When your application should be able to run in the background on a locked device, it has to catch this error, and, for example, wait for &lt;a href="https://developer.apple.com/reference/uikit/uiapplicationdelegate/1623044-applicationprotecteddatadidbecom" rel="nofollow"&gt;UIApplicationDelegate.applicationProtectedDataDidBecomeAvailable(_:)&lt;/a&gt; or &lt;a href="https://developer.apple.com/reference/uikit/uiapplicationprotecteddatadidbecomeavailable" rel="nofollow"&gt;UIApplicationProtectedDataDidBecomeAvailable&lt;/a&gt; notification and retry the failed database operation.&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;do&lt;/span&gt; {
    &lt;span class="pl-k"&gt;try&lt;/span&gt; &lt;span class="pl-k"&gt;...&lt;/span&gt;
} &lt;span class="pl-k"&gt;catch&lt;/span&gt; &lt;span class="pl-k"&gt;let&lt;/span&gt; error &lt;span class="pl-k"&gt;as&lt;/span&gt; DatabaseError &lt;span class="pl-k"&gt;where&lt;/span&gt;
    error.&lt;span class="pl-smi"&gt;resultCode&lt;/span&gt; &lt;span class="pl-k"&gt;==&lt;/span&gt; .&lt;span class="pl-smi"&gt;SQLITE_IOERR&lt;/span&gt; &lt;span class="pl-k"&gt;||&lt;/span&gt;
    error.&lt;span class="pl-smi"&gt;resultCode&lt;/span&gt; &lt;span class="pl-k"&gt;==&lt;/span&gt; .&lt;span class="pl-smi"&gt;SQLITE_AUTH&lt;/span&gt;
{
    &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Handle possible data protection error&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;}&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;This error can also be prevented altogether by using a more relaxed &lt;a href="https://developer.apple.com/reference/foundation/filemanager/1653059-file_protection_values" rel="nofollow"&gt;file protection&lt;/a&gt;.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-sqlite-error-21-wrong-number-of-statement-arguments-with-like-queries" class="anchor" aria-hidden="true" href="#sqlite-error-21-wrong-number-of-statement-arguments-with-like-queries"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;SQLite error 21 "wrong number of statement arguments" with LIKE queries&lt;/h3&gt;
&lt;p&gt;You may get the error "wrong number of statement arguments" when executing a LIKE query similar to:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;let&lt;/span&gt; name &lt;span class="pl-k"&gt;=&lt;/span&gt; textField.&lt;span class="pl-c1"&gt;text&lt;/span&gt;
&lt;span class="pl-k"&gt;let&lt;/span&gt; players &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-k"&gt;try&lt;/span&gt; dbQueue.&lt;span class="pl-smi"&gt;read&lt;/span&gt; { db &lt;span class="pl-k"&gt;in&lt;/span&gt;
    &lt;span class="pl-k"&gt;try&lt;/span&gt; Player.&lt;span class="pl-c1"&gt;fetchAll&lt;/span&gt;(db, &lt;span class="pl-c1"&gt;sql&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;SELECT * FROM player WHERE name LIKE '%?%'&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-c1"&gt;arguments&lt;/span&gt;: [name])
}&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;The problem lies in the &lt;code&gt;'%?%'&lt;/code&gt; pattern.&lt;/p&gt;
&lt;p&gt;SQLite only interprets &lt;code&gt;?&lt;/code&gt; as a parameter when it is a placeholder for a whole value (int, double, string, blob, null). In this incorrect query, &lt;code&gt;?&lt;/code&gt; is just a character in the &lt;code&gt;'%?%'&lt;/code&gt; string: it is not a query parameter, and is not processed in any way. See &lt;a href="https://www.sqlite.org/lang_expr.html#varparam" rel="nofollow"&gt;https://www.sqlite.org/lang_expr.html#varparam&lt;/a&gt; for more information about SQLite parameters.&lt;/p&gt;
&lt;p&gt;To fix the error, you can feed the request with the pattern itself, instead of the name:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;let&lt;/span&gt; name &lt;span class="pl-k"&gt;=&lt;/span&gt; textField.&lt;span class="pl-c1"&gt;text&lt;/span&gt;
&lt;span class="pl-k"&gt;let&lt;/span&gt; players&lt;span class="pl-k"&gt;:&lt;/span&gt; [Player] &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-k"&gt;try&lt;/span&gt; dbQueue.&lt;span class="pl-smi"&gt;read&lt;/span&gt; { db &lt;span class="pl-k"&gt;in&lt;/span&gt;
    &lt;span class="pl-k"&gt;let&lt;/span&gt; pattern &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;%&lt;span class="pl-pse"&gt;\(&lt;/span&gt;&lt;span class="pl-s1"&gt;name&lt;/span&gt;&lt;span class="pl-pse"&gt;&lt;span class="pl-s1"&gt;)&lt;/span&gt;&lt;/span&gt;%&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;
    &lt;span class="pl-k"&gt;return&lt;/span&gt; &lt;span class="pl-k"&gt;try&lt;/span&gt; Player.&lt;span class="pl-c1"&gt;fetchAll&lt;/span&gt;(db, &lt;span class="pl-c1"&gt;sql&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;SELECT * FROM player WHERE name LIKE ?&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-c1"&gt;arguments&lt;/span&gt;: [pattern])
}&lt;/pre&gt;&lt;/div&gt;
&lt;h3&gt;&lt;a id="user-content-what-are-experimental-features" class="anchor" aria-hidden="true" href="#what-are-experimental-features"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;What Are Experimental Features?&lt;/h3&gt;
&lt;p&gt;Since GRDB 1.0, all backwards compatibility guarantees of &lt;a href="http://semver.org" rel="nofollow"&gt;semantic versioning&lt;/a&gt; apply: no breaking change will happen until the next major version of the library.&lt;/p&gt;
&lt;p&gt;There is an exception, though: &lt;em&gt;experimental features&lt;/em&gt;, marked with the "&lt;strong&gt;&lt;g-emoji class="g-emoji" alias="fire" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f525.png"&gt;🔥&lt;/g-emoji&gt; EXPERIMENTAL&lt;/strong&gt;" badge. Those are advanced features that are too young, or lack user feedback. They are not stabilized yet.&lt;/p&gt;
&lt;p&gt;Those experimental features are not protected by semantic versioning, and may break between two minor releases of the library. To help them becoming stable, &lt;a href="https://github.com/groue/GRDB.swift/issues"&gt;your feedback&lt;/a&gt; is greatly appreciated.&lt;/p&gt;
&lt;h1&gt;&lt;a id="user-content-sample-code" class="anchor" aria-hidden="true" href="#sample-code"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Sample Code&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;The &lt;a href="#documentation"&gt;Documentation&lt;/a&gt; is full of GRDB snippets.&lt;/li&gt;
&lt;li&gt;&lt;a href="Documentation/DemoApps/GRDBDemoiOS/README.md"&gt;Demo Application&lt;/a&gt;: A sample iOS application.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/groue/WWDCCompanion"&gt;WWDC Companion&lt;/a&gt;: A sample iOS application.&lt;/li&gt;
&lt;li&gt;Check &lt;code&gt;GRDB.xcworkspace&lt;/code&gt;: it contains GRDB-enabled playgrounds to play with.&lt;/li&gt;
&lt;li&gt;How to synchronize a database table with a JSON payload: &lt;a href="Documentation/Playgrounds/JSONSynchronization.playground/Contents.swift"&gt;JSONSynchronization.playground&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
&lt;p&gt;&lt;strong&gt;Thanks&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://pierlis.com" rel="nofollow"&gt;Pierlis&lt;/a&gt;, where we write great software.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/alextrob"&gt;@alextrob&lt;/a&gt;, &lt;a href="https://github.com/bellebethcooper"&gt;@bellebethcooper&lt;/a&gt;, &lt;a href="https://github.com/bfad"&gt;@bfad&lt;/a&gt;, &lt;a href="https://github.com/cfilipov"&gt;@cfilipov&lt;/a&gt;, &lt;a href="https://github.com/charlesmchen-signal"&gt;@charlesmchen-signal&lt;/a&gt;, &lt;a href="https://github.com/Chiliec"&gt;@Chiliec&lt;/a&gt;, &lt;a href="https://github.com/chrisballinger"&gt;@chrisballinger&lt;/a&gt;, &lt;a href="https://github.com/darrenclark"&gt;@darrenclark&lt;/a&gt;, &lt;a href="https://github.com/davidkraus"&gt;@davidkraus&lt;/a&gt;, &lt;a href="http://github.com/fpillet"&gt;@fpillet&lt;/a&gt;, &lt;a href="https://github.com/gusrota"&gt;@gusrota&lt;/a&gt;, &lt;a href="https://github.com/hartbit"&gt;@hartbit&lt;/a&gt;, &lt;a href="https://github.com/kdubb"&gt;@kdubb&lt;/a&gt;, &lt;a href="https://github.com/kluufger"&gt;@kluufger&lt;/a&gt;, &lt;a href="https://github.com/KyleLeneau"&gt;@KyleLeneau&lt;/a&gt;, &lt;a href="https://github.com/Marus"&gt;@Marus&lt;/a&gt;, &lt;a href="https://github.com/michaelkirk-signal"&gt;@michaelkirk-signal&lt;/a&gt;, &lt;a href="https://github.com/pakko972"&gt;@pakko972&lt;/a&gt;, &lt;a href="https://github.com/peter-ss"&gt;@peter-ss&lt;/a&gt;, &lt;a href="https://github.com/pierlo"&gt;@pierlo&lt;/a&gt;, &lt;a href="https://github.com/pocketpixels"&gt;@pocketpixels&lt;/a&gt;, &lt;a href="https://github.com/robcas3"&gt;@robcas3&lt;/a&gt;, &lt;a href="https://github.com/runhum"&gt;@runhum&lt;/a&gt;, &lt;a href="https://github.com/schveiguy"&gt;@schveiguy&lt;/a&gt;, &lt;a href="https://github.com/SD10"&gt;@SD10&lt;/a&gt;, &lt;a href="https://github.com/sobri909"&gt;@sobri909&lt;/a&gt;, &lt;a href="https://github.com/sroddy"&gt;@sroddy&lt;/a&gt;, &lt;a href="https://github.com/swiftlyfalling"&gt;@swiftlyfalling&lt;/a&gt;, &lt;a href="https://github.com/Timac"&gt;@Timac&lt;/a&gt;, &lt;a href="https://github.com/valexa"&gt;@valexa&lt;/a&gt;, and &lt;a href="https://github.com/zmeyc"&gt;@zmeyc&lt;/a&gt; for their contributions, help, and feedback on GRDB.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/aymerick"&gt;@aymerick&lt;/a&gt; and &lt;a href="https://github.com/kali"&gt;@kali&lt;/a&gt; because SQL.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/ccgus/fmdb"&gt;ccgus/fmdb&lt;/a&gt; for its excellency.&lt;/li&gt;
&lt;/ul&gt;
&lt;h1&gt;&lt;a id="user-content-legacy" class="anchor" aria-hidden="true" href="#legacy"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Legacy&lt;/h1&gt;
&lt;h4&gt;&lt;a id="user-content-changes-tracking" class="anchor" aria-hidden="true" href="#changes-tracking"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Changes Tracking&lt;/h4&gt;
&lt;p&gt;This chapter has been renamed &lt;a href="#record-comparison"&gt;Record Comparison&lt;/a&gt;.&lt;/p&gt;
&lt;h4&gt;&lt;a id="user-content-fetchedrecordscontroller" class="anchor" aria-hidden="true" href="#fetchedrecordscontroller"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;FetchedRecordsController&lt;/h4&gt;
&lt;p&gt;This chapter has &lt;a href="Documentation/FetchedRecordsController.md"&gt;moved&lt;/a&gt;.&lt;/p&gt;
&lt;h4&gt;&lt;a id="user-content-persistable-protocol" class="anchor" aria-hidden="true" href="#persistable-protocol"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Persistable Protocol&lt;/h4&gt;
&lt;p&gt;This protocol has been renamed &lt;a href="#persistablerecord-protocol"&gt;PersistableRecord&lt;/a&gt; in GRDB 3.0.&lt;/p&gt;
&lt;h4&gt;&lt;a id="user-content-rowconvertible-protocol" class="anchor" aria-hidden="true" href="#rowconvertible-protocol"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;RowConvertible Protocol&lt;/h4&gt;
&lt;p&gt;This protocol has been renamed &lt;a href="#fetchablerecord-protocol"&gt;FetchableRecord&lt;/a&gt; in GRDB 3.0.&lt;/p&gt;
&lt;h4&gt;&lt;a id="user-content-tablemapping-protocol" class="anchor" aria-hidden="true" href="#tablemapping-protocol"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;TableMapping Protocol&lt;/h4&gt;
&lt;p&gt;This protocol has been renamed &lt;a href="#tablerecord-protocol"&gt;TableRecord&lt;/a&gt; in GRDB 3.0.&lt;/p&gt;
&lt;h4&gt;&lt;a id="user-content-customized-decoding-of-database-rows" class="anchor" aria-hidden="true" href="#customized-decoding-of-database-rows"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Customized Decoding of Database Rows&lt;/h4&gt;
&lt;p&gt;This chapter has been renamed &lt;a href="#beyond-fetchablerecord"&gt;Beyond FetchableRecord&lt;/a&gt;.&lt;/p&gt;
&lt;/article&gt;&lt;/div&gt;</description><author>groue</author><guid isPermaLink="false">https://github.com/groue/GRDB.swift</guid><pubDate>Fri, 08 Nov 2019 00:25:00 GMT</pubDate></item></channel></rss>