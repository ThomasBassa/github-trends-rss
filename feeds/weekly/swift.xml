<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0"><channel><title>GitHub Trending: Swift, This week</title><link>https://github.com/trending/swift?since=weekly</link><description>The top repositories on GitHub for swift, measured weekly</description><pubDate>Sat, 25 Jan 2020 01:09:32 GMT</pubDate><lastBuildDate>Sat, 25 Jan 2020 01:09:32 GMT</lastBuildDate><generator>PyRSS2Gen-1.1.0</generator><docs>http://blogs.law.harvard.edu/tech/rss</docs><ttl>720</ttl><item><title>yonaskolb/XcodeGen #1 in Swift, This week</title><link>https://github.com/yonaskolb/XcodeGen</link><description>&lt;p&gt;&lt;i&gt;A Swift command line tool for generating your Xcode project&lt;/i&gt;&lt;/p&gt;&lt;div id="readme" class="md" data-path="README.md"&gt;&lt;article class="markdown-body entry-content p-5" itemprop="text"&gt;&lt;p align="center"&gt;
&lt;a href="https://github.com/yonaskolb/XcodeGen"&gt;
&lt;img src="Assets/Logo_animated.gif" alt="XcodeGen" style="max-width:100%;"&gt;
&lt;/a&gt;
&lt;/p&gt;
&lt;p align="center"&gt;
  &lt;a href="https://swift.org/package-manager" rel="nofollow"&gt;
    &lt;img src="https://camo.githubusercontent.com/6da72e15649e210131bd77310c4789539301a101/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f73706d2d636f6d70617469626c652d627269676874677265656e2e7376673f7374796c653d666f722d7468652d6261646765" alt="Swift Package Manager" data-canonical-src="https://img.shields.io/badge/spm-compatible-brightgreen.svg?style=for-the-badge" style="max-width:100%;"&gt;
  &lt;/a&gt;
  &lt;a href="https://github.com/yonaskolb/XcodeGen/releases"&gt;
    &lt;img src="https://camo.githubusercontent.com/fb2e4308c38f433deead4c1893c637dc318650e4/68747470733a2f2f696d672e736869656c64732e696f2f6769746875622f72656c656173652f796f6e61736b6f6c622f78636f646567656e2e7376673f7374796c653d666f722d7468652d6261646765" data-canonical-src="https://img.shields.io/github/release/yonaskolb/xcodegen.svg?style=for-the-badge" style="max-width:100%;"&gt;
  &lt;/a&gt;
  &lt;a href="https://github.com/yonaskolb/XcodeGen/blob/master/LICENSE"&gt;
    &lt;img src="https://camo.githubusercontent.com/ef15689f8b6f20f4a2db810df9f278ccf99f8815/68747470733a2f2f696d672e736869656c64732e696f2f6769746875622f6c6963656e73652f796f6e61736b6f6c622f58636f646547656e2e7376673f7374796c653d666f722d7468652d6261646765" data-canonical-src="https://img.shields.io/github/license/yonaskolb/XcodeGen.svg?style=for-the-badge" style="max-width:100%;"&gt;
  &lt;/a&gt;
&lt;/p&gt;
&lt;h1&gt;&lt;a id="user-content-xcodegen" class="anchor" aria-hidden="true" href="#xcodegen"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;XcodeGen&lt;/h1&gt;
&lt;p&gt;XcodeGen is a command line tool written in Swift that generates your Xcode project using your folder structure and a project spec.&lt;/p&gt;
&lt;p&gt;The project spec is a YAML or JSON file that defines your targets, configurations, schemes, custom build settings and many other options. All your source directories are automatically parsed and referenced appropriately while preserving your folder structure. Sensible defaults are used in many places, so you only need to customize what is needed. Very complex projects can also be defined using more advanced features.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;g-emoji class="g-emoji" alias="white_check_mark" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/2705.png"&gt;✅&lt;/g-emoji&gt; Generate projects on demand and remove your &lt;code&gt;.xcodeproj&lt;/code&gt; from git, which means &lt;strong&gt;no more merge conflicts&lt;/strong&gt;!&lt;/li&gt;
&lt;li&gt;&lt;g-emoji class="g-emoji" alias="white_check_mark" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/2705.png"&gt;✅&lt;/g-emoji&gt; Groups and files in Xcode are always &lt;strong&gt;synced&lt;/strong&gt; to your directories on disk&lt;/li&gt;
&lt;li&gt;&lt;g-emoji class="g-emoji" alias="white_check_mark" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/2705.png"&gt;✅&lt;/g-emoji&gt; Easy &lt;strong&gt;configuration&lt;/strong&gt; of projects which is human readable and git friendly&lt;/li&gt;
&lt;li&gt;&lt;g-emoji class="g-emoji" alias="white_check_mark" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/2705.png"&gt;✅&lt;/g-emoji&gt; Easily copy and paste &lt;strong&gt;files and directories&lt;/strong&gt; without having to edit anything in Xcode&lt;/li&gt;
&lt;li&gt;&lt;g-emoji class="g-emoji" alias="white_check_mark" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/2705.png"&gt;✅&lt;/g-emoji&gt; Share build settings across multiple targets with &lt;strong&gt;build setting groups&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;g-emoji class="g-emoji" alias="white_check_mark" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/2705.png"&gt;✅&lt;/g-emoji&gt; Automatically generate Schemes for &lt;strong&gt;different environments&lt;/strong&gt; like test and production&lt;/li&gt;
&lt;li&gt;&lt;g-emoji class="g-emoji" alias="white_check_mark" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/2705.png"&gt;✅&lt;/g-emoji&gt; Easily &lt;strong&gt;create new projects&lt;/strong&gt; with complicated setups on demand without messing around with Xcode&lt;/li&gt;
&lt;li&gt;&lt;g-emoji class="g-emoji" alias="white_check_mark" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/2705.png"&gt;✅&lt;/g-emoji&gt; Generate from anywhere including on &lt;strong&gt;CI&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;g-emoji class="g-emoji" alias="white_check_mark" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/2705.png"&gt;✅&lt;/g-emoji&gt; Distribute your spec amongst multiple files for easy &lt;strong&gt;sharing&lt;/strong&gt; and overriding&lt;/li&gt;
&lt;li&gt;&lt;g-emoji class="g-emoji" alias="white_check_mark" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/2705.png"&gt;✅&lt;/g-emoji&gt; Easily create &lt;strong&gt;multi-platform&lt;/strong&gt; frameworks&lt;/li&gt;
&lt;li&gt;&lt;g-emoji class="g-emoji" alias="white_check_mark" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/2705.png"&gt;✅&lt;/g-emoji&gt; Integrate &lt;strong&gt;Carthage&lt;/strong&gt; frameworks without any work&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Given a very simple project spec file like this:&lt;/p&gt;
&lt;div class="highlight highlight-source-yaml"&gt;&lt;pre&gt;&lt;span class="pl-ent"&gt;name&lt;/span&gt;: &lt;span class="pl-s"&gt;MyProject&lt;/span&gt;
&lt;span class="pl-ent"&gt;options&lt;/span&gt;:
  &lt;span class="pl-ent"&gt;bundleIdPrefix&lt;/span&gt;: &lt;span class="pl-s"&gt;com.myapp&lt;/span&gt;
&lt;span class="pl-ent"&gt;packages&lt;/span&gt;:
  &lt;span class="pl-ent"&gt;Yams&lt;/span&gt;:
    &lt;span class="pl-ent"&gt;url&lt;/span&gt;: &lt;span class="pl-s"&gt;https://github.com/jpsim/Yams&lt;/span&gt;
    &lt;span class="pl-ent"&gt;from&lt;/span&gt;: &lt;span class="pl-s"&gt;2.0.0&lt;/span&gt;
&lt;span class="pl-ent"&gt;targets&lt;/span&gt;:
  &lt;span class="pl-ent"&gt;MyApp&lt;/span&gt;:
    &lt;span class="pl-ent"&gt;type&lt;/span&gt;: &lt;span class="pl-s"&gt;application&lt;/span&gt;
    &lt;span class="pl-ent"&gt;platform&lt;/span&gt;: &lt;span class="pl-s"&gt;iOS&lt;/span&gt;
    &lt;span class="pl-ent"&gt;deploymentTarget&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;10.0&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;
    &lt;span class="pl-ent"&gt;sources&lt;/span&gt;: &lt;span class="pl-s"&gt;[MyApp]&lt;/span&gt;
    &lt;span class="pl-ent"&gt;settings&lt;/span&gt;:
      &lt;span class="pl-ent"&gt;configs&lt;/span&gt;:
        &lt;span class="pl-ent"&gt;debug&lt;/span&gt;:
          &lt;span class="pl-ent"&gt;CUSTOM_BUILD_SETTING&lt;/span&gt;: &lt;span class="pl-s"&gt;my_debug_value&lt;/span&gt;
        &lt;span class="pl-ent"&gt;release&lt;/span&gt;:
          &lt;span class="pl-ent"&gt;CUSTOM_BUILD_SETTING&lt;/span&gt;: &lt;span class="pl-s"&gt;my_release_value&lt;/span&gt;
    &lt;span class="pl-ent"&gt;dependencies&lt;/span&gt;:
      - &lt;span class="pl-ent"&gt;target&lt;/span&gt;: &lt;span class="pl-s"&gt;MyFramework&lt;/span&gt;
      - &lt;span class="pl-ent"&gt;carthage&lt;/span&gt;: &lt;span class="pl-s"&gt;Alamofire&lt;/span&gt;
      - &lt;span class="pl-ent"&gt;framework&lt;/span&gt;: &lt;span class="pl-s"&gt;Vendor/MyFramework.framework&lt;/span&gt;
      - &lt;span class="pl-ent"&gt;sdk&lt;/span&gt;: &lt;span class="pl-s"&gt;Contacts.framework&lt;/span&gt;
      - &lt;span class="pl-ent"&gt;sdk&lt;/span&gt;: &lt;span class="pl-s"&gt;libc++.tbd&lt;/span&gt;
      - &lt;span class="pl-ent"&gt;package&lt;/span&gt;: &lt;span class="pl-s"&gt;Yams&lt;/span&gt;
  &lt;span class="pl-ent"&gt;MyFramework&lt;/span&gt;:
    &lt;span class="pl-ent"&gt;type&lt;/span&gt;: &lt;span class="pl-s"&gt;framework&lt;/span&gt;
    &lt;span class="pl-ent"&gt;platform&lt;/span&gt;: &lt;span class="pl-s"&gt;iOS&lt;/span&gt;
    &lt;span class="pl-ent"&gt;sources&lt;/span&gt;: &lt;span class="pl-s"&gt;[MyFramework]&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;A project would be created with 2 connected targets, with all the required configurations and build settings. See the &lt;a href="Docs/ProjectSpec.md"&gt;Project Spec&lt;/a&gt; documentation for all the options you can specify, and &lt;a href="Docs/Usage.md"&gt;Usage&lt;/a&gt; for more general documentation.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-installing" class="anchor" aria-hidden="true" href="#installing"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Installing&lt;/h2&gt;
&lt;p&gt;Make sure Xcode 11 is installed first.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-mint" class="anchor" aria-hidden="true" href="#mint"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;a href="https://github.com/yonaskolb/mint"&gt;Mint&lt;/a&gt;&lt;/h3&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt;mint install yonaskolb/xcodegen&lt;/pre&gt;&lt;/div&gt;
&lt;h3&gt;&lt;a id="user-content-make" class="anchor" aria-hidden="true" href="#make"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Make&lt;/h3&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt;git clone https://github.com/yonaskolb/XcodeGen.git
&lt;span class="pl-c1"&gt;cd&lt;/span&gt; XcodeGen
make install&lt;/pre&gt;&lt;/div&gt;
&lt;h3&gt;&lt;a id="user-content-homebrew" class="anchor" aria-hidden="true" href="#homebrew"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Homebrew&lt;/h3&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt;brew install xcodegen&lt;/pre&gt;&lt;/div&gt;
&lt;h3&gt;&lt;a id="user-content-swift-package-manager" class="anchor" aria-hidden="true" href="#swift-package-manager"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Swift Package Manager&lt;/h3&gt;
&lt;p&gt;&lt;strong&gt;Use as CLI&lt;/strong&gt;&lt;/p&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt;git clone https://github.com/yonaskolb/XcodeGen.git
&lt;span class="pl-c1"&gt;cd&lt;/span&gt; XcodeGen
swift run xcodegen&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;strong&gt;Use as dependency&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Add the following to your Package.swift file's dependencies:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;.&lt;span class="pl-c1"&gt;package&lt;/span&gt;(&lt;span class="pl-c1"&gt;url&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;https://github.com/yonaskolb/XcodeGen.git&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-c1"&gt;from&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;2.11.0&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;),&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;And then import wherever needed: &lt;code&gt;import XcodeGenKit&lt;/code&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-usage" class="anchor" aria-hidden="true" href="#usage"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Usage&lt;/h2&gt;
&lt;p&gt;Simply run:&lt;/p&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt;xcodegen generate&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;This will look for a project spec in the current directory called &lt;code&gt;project.yml&lt;/code&gt; and generate an Xcode project with the name defined in the spec.&lt;/p&gt;
&lt;p&gt;Options:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;--spec&lt;/strong&gt;: An optional path to a &lt;code&gt;.yml&lt;/code&gt; or &lt;code&gt;.json&lt;/code&gt; project spec. Defaults to &lt;code&gt;project.yml&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;--project&lt;/strong&gt;: An optional path to a directory where the project will be generated. By default this is the directory the spec lives in.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;--quiet&lt;/strong&gt;: Suppress informational and success messages.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;--use-cache&lt;/strong&gt;: Used to prevent unnecessarily generating the project. If this is set, then a cache file will be written to when a project is generated. If &lt;code&gt;xcodegen&lt;/code&gt; is later run but the spec and all the files it contains are the same, the project won't be generated.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;--cache-path&lt;/strong&gt;: A custom path to use for your cache file. This defaults to &lt;code&gt;~/.xcodegen/cache/{PROJECT_SPEC_PATH_HASH}&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;There are other commands as well. Use &lt;code&gt;xcodegen help&lt;/code&gt; to see more detailed usage information.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-editing" class="anchor" aria-hidden="true" href="#editing"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Editing&lt;/h2&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt;git clone https://github.com/yonaskolb/XcodeGen.git
&lt;span class="pl-c1"&gt;cd&lt;/span&gt; XcodeGen
swift package generate-xcodeproj&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;This use Swift Project Manager to create an &lt;code&gt;xcodeproj&lt;/code&gt; file that you can open, edit and run in Xcode, which makes editing any code easier.&lt;/p&gt;
&lt;p&gt;If you want to pass any required arguments when running in Xcode, you can edit the scheme to include launch arguments.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-documentation" class="anchor" aria-hidden="true" href="#documentation"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Documentation&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;See &lt;a href="Docs/ProjectSpec.md"&gt;Project Spec&lt;/a&gt; documentation for all the various properties and options that can be set&lt;/li&gt;
&lt;li&gt;See &lt;a href="Docs/Usage.md"&gt;Usage&lt;/a&gt; for more specific usage and use case documentation&lt;/li&gt;
&lt;li&gt;See &lt;a href="Docs/FAQ.md"&gt;FAQ&lt;/a&gt; for a list of some frequently asked questions&lt;/li&gt;
&lt;li&gt;See &lt;a href="Docs/Examples.md"&gt;Examples&lt;/a&gt; for some real world XcodeGen project specs out in the wild&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-attributions" class="anchor" aria-hidden="true" href="#attributions"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Attributions&lt;/h2&gt;
&lt;p&gt;This tool is powered by:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/carambalabs/xcodeproj"&gt;xcodeproj&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/yonaskolb/JSONUtilities"&gt;JSONUtilities&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/kylef/Spectre"&gt;Spectre&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/kylef/PathKit"&gt;PathKit&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/kylef/Commander"&gt;Commander&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/jpsim/Yams"&gt;Yams&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Inspiration for this tool came from:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/workshop/struct"&gt;struct&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/jcampbell05/xcake"&gt;xcake&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/CocoaPods/Xcodeproj"&gt;CocoaPods Xcodeproj&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-contributions" class="anchor" aria-hidden="true" href="#contributions"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Contributions&lt;/h2&gt;
&lt;p&gt;Pull requests and issues are always welcome. Please open any issues and PRs for bugs, features, or documentation.&lt;/p&gt;
&lt;p&gt;&lt;a href="https://sourcerer.io/fame/yonaskolb/yonaskolb/XcodeGen/links/0" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/a8c921e80eccceb652e97f3e3681a06fa684cf23/68747470733a2f2f736f757263657265722e696f2f66616d652f796f6e61736b6f6c622f796f6e61736b6f6c622f58636f646547656e2f696d616765732f30" alt="" data-canonical-src="https://sourcerer.io/fame/yonaskolb/yonaskolb/XcodeGen/images/0" style="max-width:100%;"&gt;&lt;/a&gt;&lt;a href="https://sourcerer.io/fame/yonaskolb/yonaskolb/XcodeGen/links/1" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/b8d80e519bde0d2130dcb2b6a066929f9ee09fb8/68747470733a2f2f736f757263657265722e696f2f66616d652f796f6e61736b6f6c622f796f6e61736b6f6c622f58636f646547656e2f696d616765732f31" alt="" data-canonical-src="https://sourcerer.io/fame/yonaskolb/yonaskolb/XcodeGen/images/1" style="max-width:100%;"&gt;&lt;/a&gt;&lt;a href="https://sourcerer.io/fame/yonaskolb/yonaskolb/XcodeGen/links/2" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/a2d02142a2d35f782cf3915ad92b7ab0115a0eb6/68747470733a2f2f736f757263657265722e696f2f66616d652f796f6e61736b6f6c622f796f6e61736b6f6c622f58636f646547656e2f696d616765732f32" alt="" data-canonical-src="https://sourcerer.io/fame/yonaskolb/yonaskolb/XcodeGen/images/2" style="max-width:100%;"&gt;&lt;/a&gt;&lt;a href="https://sourcerer.io/fame/yonaskolb/yonaskolb/XcodeGen/links/3" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/351562780d4b0a1b7a1dbcfba6fb0ee583ad9c86/68747470733a2f2f736f757263657265722e696f2f66616d652f796f6e61736b6f6c622f796f6e61736b6f6c622f58636f646547656e2f696d616765732f33" alt="" data-canonical-src="https://sourcerer.io/fame/yonaskolb/yonaskolb/XcodeGen/images/3" style="max-width:100%;"&gt;&lt;/a&gt;&lt;a href="https://sourcerer.io/fame/yonaskolb/yonaskolb/XcodeGen/links/4" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/8869bf5b6acfb64ede5c694257c6924acb852aa1/68747470733a2f2f736f757263657265722e696f2f66616d652f796f6e61736b6f6c622f796f6e61736b6f6c622f58636f646547656e2f696d616765732f34" alt="" data-canonical-src="https://sourcerer.io/fame/yonaskolb/yonaskolb/XcodeGen/images/4" style="max-width:100%;"&gt;&lt;/a&gt;&lt;a href="https://sourcerer.io/fame/yonaskolb/yonaskolb/XcodeGen/links/5" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/94b53c088e75969ca41606c9da34ba3b6187baa3/68747470733a2f2f736f757263657265722e696f2f66616d652f796f6e61736b6f6c622f796f6e61736b6f6c622f58636f646547656e2f696d616765732f35" alt="" data-canonical-src="https://sourcerer.io/fame/yonaskolb/yonaskolb/XcodeGen/images/5" style="max-width:100%;"&gt;&lt;/a&gt;&lt;a href="https://sourcerer.io/fame/yonaskolb/yonaskolb/XcodeGen/links/6" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/0a6638c6a0b289b20b7d703dc2860a1c5753ae2c/68747470733a2f2f736f757263657265722e696f2f66616d652f796f6e61736b6f6c622f796f6e61736b6f6c622f58636f646547656e2f696d616765732f36" alt="" data-canonical-src="https://sourcerer.io/fame/yonaskolb/yonaskolb/XcodeGen/images/6" style="max-width:100%;"&gt;&lt;/a&gt;&lt;a href="https://sourcerer.io/fame/yonaskolb/yonaskolb/XcodeGen/links/7" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/5607cdc82657e829a12654a85a7670cfdff5e6fc/68747470733a2f2f736f757263657265722e696f2f66616d652f796f6e61736b6f6c622f796f6e61736b6f6c622f58636f646547656e2f696d616765732f37" alt="" data-canonical-src="https://sourcerer.io/fame/yonaskolb/yonaskolb/XcodeGen/images/7" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-license" class="anchor" aria-hidden="true" href="#license"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;License&lt;/h2&gt;
&lt;p&gt;XcodeGen is licensed under the MIT license. See &lt;a href="LICENSE"&gt;LICENSE&lt;/a&gt; for more info.&lt;/p&gt;
&lt;/article&gt;&lt;/div&gt;</description><author>yonaskolb</author><guid isPermaLink="false">https://github.com/yonaskolb/XcodeGen</guid><pubDate>Sat, 25 Jan 2020 00:01:00 GMT</pubDate></item><item><title>HeroTransitions/Hero #2 in Swift, This week</title><link>https://github.com/HeroTransitions/Hero</link><description>&lt;p&gt;&lt;i&gt;Elegant transition library for iOS &amp; tvOS&lt;/i&gt;&lt;/p&gt;&lt;div id="readme" class="md" data-path="README.md"&gt;&lt;article class="markdown-body entry-content p-5" itemprop="text"&gt;&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="https://camo.githubusercontent.com/dff8b6dffa1dd8feac1646f287ad2a84672cdc1c/68747470733a2f2f63646e2e7261776769742e636f6d2f6c6b7a68616f2f4865726f2f343237643566322f5265736f75726365732f4865726f2e737667"&gt;&lt;img src="https://camo.githubusercontent.com/dff8b6dffa1dd8feac1646f287ad2a84672cdc1c/68747470733a2f2f63646e2e7261776769742e636f6d2f6c6b7a68616f2f4865726f2f343237643566322f5265736f75726365732f4865726f2e737667" width="388" data-canonical-src="https://cdn.rawgit.com/lkzhao/Hero/427d5f2/Resources/Hero.svg" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Hero&lt;/strong&gt; is a library for building iOS view controller transitions. It provides a declarative layer on top of the UIKit's cumbersome transition APIs—making custom transitions an easy task for developers.&lt;/p&gt;
&lt;p&gt;&lt;a href="https://github.com/Carthage/Carthage"&gt;&lt;img src="https://camo.githubusercontent.com/d3b5245fd8c28562b4ed49b00a5260b87c84f63f/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f43617274686167652d436f6d70617469626c652d627269676874677265656e2e7376673f7374796c653d666c6174" alt="Carthage compatible" data-canonical-src="https://img.shields.io/badge/Carthage-Compatible-brightgreen.svg?style=flat" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://github.com/JamitLabs/Accio"&gt;&lt;img src="https://camo.githubusercontent.com/e502cdc2b27c1f2b2590f061d37b984ba3957c26/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f416363696f2d737570706f727465642d3041374346352e7376673f7374796c653d666c6174" alt="Accio supported" data-canonical-src="https://img.shields.io/badge/Accio-supported-0A7CF5.svg?style=flat" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://codecov.io/gh/HeroTransitions/Hero" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/659010d73086f2969103f83e1b145b6179f9a9f8/68747470733a2f2f636f6465636f762e696f2f67682f4865726f5472616e736974696f6e732f4865726f2f6272616e63682f646576656c6f702f67726170682f62616467652e737667" alt="codecov" data-canonical-src="https://codecov.io/gh/HeroTransitions/Hero/branch/develop/graph/badge.svg" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="http://cocoapods.org/pods/Hero" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/bf8389447aeff6e5c60eb9e980dc8c797e85dcec/68747470733a2f2f696d672e736869656c64732e696f2f636f636f61706f64732f762f4865726f2e7376673f7374796c653d666c6174" alt="Version" data-canonical-src="https://img.shields.io/cocoapods/v/Hero.svg?style=flat" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://github.com/lkzhao/Hero/blob/master/LICENSE?raw=true"&gt;&lt;img src="https://camo.githubusercontent.com/17e1f9f731e5bc33f745a0755b2c0f573a621920/68747470733a2f2f696d672e736869656c64732e696f2f636f636f61706f64732f6c2f4865726f2e7376673f7374796c653d666c6174" alt="License" data-canonical-src="https://img.shields.io/cocoapods/l/Hero.svg?style=flat" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a target="_blank" rel="noopener noreferrer" href="https://camo.githubusercontent.com/2acca656fb46139b261ec013b5dad205172fdcd4/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f58636f64652d392e302532422d626c75652e737667"&gt;&lt;img src="https://camo.githubusercontent.com/2acca656fb46139b261ec013b5dad205172fdcd4/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f58636f64652d392e302532422d626c75652e737667" alt="Xcode 9.0+" data-canonical-src="https://img.shields.io/badge/Xcode-9.0%2B-blue.svg" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a target="_blank" rel="noopener noreferrer" href="https://camo.githubusercontent.com/1d276aa371242346c77c3a5b8db34beaa2014722/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f694f532d382e302532422d626c75652e737667"&gt;&lt;img src="https://camo.githubusercontent.com/1d276aa371242346c77c3a5b8db34beaa2014722/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f694f532d382e302532422d626c75652e737667" alt="iOS 8.0+" data-canonical-src="https://img.shields.io/badge/iOS-8.0%2B-blue.svg" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a target="_blank" rel="noopener noreferrer" href="https://camo.githubusercontent.com/988c4fe7435163e2c97239a8c6482771451ffa26/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f53776966742d342e302532422d6f72616e67652e737667"&gt;&lt;img src="https://camo.githubusercontent.com/988c4fe7435163e2c97239a8c6482771451ffa26/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f53776966742d342e302532422d6f72616e67652e737667" alt="Swift 4.0+" data-canonical-src="https://img.shields.io/badge/Swift-4.0%2B-orange.svg" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://github.com/lkzhao/Hero/blob/master/README.zh-cn.md"&gt;&lt;img src="https://camo.githubusercontent.com/c7bf3c5f6156fa70173bbc7ddee4cfae107e746f/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f2545342542382541442545362539362538372d524541444d452d626c75652e7376673f7374796c653d666c6174" alt="中文 README" data-canonical-src="https://img.shields.io/badge/%E4%B8%AD%E6%96%87-README-blue.svg?style=flat" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://www.paypal.com/cgi-bin/webscr?cmd=_s-xclick&amp;amp;hosted_button_id=NT5F7Y2MPV7RE" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/abbdd7bf97ae7919db5962b255f40aded5189c4f/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f446f6e6174652d50617950616c2d626c75652e737667" alt="Donate" data-canonical-src="https://img.shields.io/badge/Donate-PayPal-blue.svg" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="https://camo.githubusercontent.com/ad3b44a1f8c9ad51ba120b6281b03335bd78bb22/68747470733a2f2f63646e2e7261776769742e636f6d2f6c6b7a68616f2f4865726f2f656262336632632f5265736f75726365732f66656174757265732e737667"&gt;&lt;img src="https://camo.githubusercontent.com/ad3b44a1f8c9ad51ba120b6281b03335bd78bb22/68747470733a2f2f63646e2e7261776769742e636f6d2f6c6b7a68616f2f4865726f2f656262336632632f5265736f75726365732f66656174757265732e737667" data-canonical-src="https://cdn.rawgit.com/lkzhao/Hero/ebb3f2c/Resources/features.svg" style="max-width:100%;"&gt;&lt;/a&gt;      
&lt;a target="_blank" rel="noopener noreferrer" href="https://camo.githubusercontent.com/f5211ae92678aa22b6edf2d18e08b0dce63bcaa4/68747470733a2f2f63646e2e7261776769742e636f6d2f6c6b7a68616f2f4865726f2f656262336632632f5265736f75726365732f6665617475726573322e737667"&gt;&lt;img src="https://camo.githubusercontent.com/f5211ae92678aa22b6edf2d18e08b0dce63bcaa4/68747470733a2f2f63646e2e7261776769742e636f6d2f6c6b7a68616f2f4865726f2f656262336632632f5265736f75726365732f6665617475726573322e737667" data-canonical-src="https://cdn.rawgit.com/lkzhao/Hero/ebb3f2c/Resources/features2.svg" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Hero is similar to Keynote's &lt;strong&gt;Magic Move&lt;/strong&gt;. It checks the &lt;code&gt;heroID&lt;/code&gt; property on all source and destination views. Every matched view pair is then automatically transitioned from its old state to its new state.&lt;/p&gt;
&lt;p&gt;Hero can also construct animations for unmatched views. It is easy to define these animations via the &lt;code&gt;heroModifiers&lt;/code&gt; property. Hero will run these animations alongside the &lt;strong&gt;Magic Move&lt;/strong&gt; animations. All of these animations can be &lt;strong&gt;interactively controlled&lt;/strong&gt; by user gestures.&lt;/p&gt;
&lt;p&gt;At view controller level, Hero provides several template transitions that you can set through &lt;code&gt;heroModalAnimationType&lt;/code&gt;, &lt;code&gt;heroNavigationAnimationType&lt;/code&gt;, and &lt;code&gt;heroTabBarAnimationType&lt;/code&gt;. These can be used as the foundation of your custom transitions. Combine with &lt;code&gt;heroID&lt;/code&gt; &amp;amp; &lt;code&gt;heroModifiers&lt;/code&gt; to make your own unique transitions.&lt;/p&gt;
&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="https://camo.githubusercontent.com/737194a3442f67b2066bd1be40d0ced772c158a1/68747470733a2f2f63646e2e7261776769742e636f6d2f6c6b7a68616f2f4865726f2f656262336632632f5265736f75726365732f64656661756c74416e696d6174696f6e732e737667"&gt;&lt;img src="https://camo.githubusercontent.com/737194a3442f67b2066bd1be40d0ced772c158a1/68747470733a2f2f63646e2e7261776769742e636f6d2f6c6b7a68616f2f4865726f2f656262336632632f5265736f75726365732f64656661756c74416e696d6174696f6e732e737667" data-canonical-src="https://cdn.rawgit.com/lkzhao/Hero/ebb3f2c/Resources/defaultAnimations.svg" style="max-width:100%;"&gt;&lt;/a&gt;      
&lt;a target="_blank" rel="noopener noreferrer" href="https://camo.githubusercontent.com/d1829c3cbb5e7c49b109e458ef95ec9079650d69/68747470733a2f2f63646e2e7261776769742e636f6d2f6c6b7a68616f2f4865726f2f656262336632632f5265736f75726365732f64656661756c74416e696d6174696f6e73322e737667"&gt;&lt;img src="https://camo.githubusercontent.com/d1829c3cbb5e7c49b109e458ef95ec9079650d69/68747470733a2f2f63646e2e7261776769742e636f6d2f6c6b7a68616f2f4865726f2f656262336632632f5265736f75726365732f64656661756c74416e696d6174696f6e73322e737667" data-canonical-src="https://cdn.rawgit.com/lkzhao/Hero/ebb3f2c/Resources/defaultAnimations2.svg" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;By default, Hero provides &lt;strong&gt;dynamic duration&lt;/strong&gt; based on the &lt;a href="https://material.io/guidelines/motion/duration-easing.html" rel="nofollow"&gt;Material Design Motion Guide&lt;/a&gt;. Duration is automatically determined by changes to distance and size—saving you the hassle, while providing consistent and delightful animations.&lt;/p&gt;
&lt;p&gt;Hero doesn't make any assumptions about how the view is built or structured. It won't modify any of your views' states other than hiding them during the animation. This makes it work with &lt;strong&gt;Auto Layout&lt;/strong&gt;, &lt;strong&gt;programmatic layout&lt;/strong&gt;, &lt;strong&gt;UICollectionView&lt;/strong&gt; (without modifying its layout object), &lt;strong&gt;UITableView&lt;/strong&gt;, &lt;strong&gt;UINavigationController&lt;/strong&gt;, &lt;strong&gt;UITabBarController&lt;/strong&gt;, etc...&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-example-gallery" class="anchor" aria-hidden="true" href="#example-gallery"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Example Gallery&lt;/h2&gt;
&lt;p&gt;Checkout the &lt;a href="http://lkzhao.com/2016/12/28/hero.html" rel="nofollow"&gt;Example Gallery Blog Post&lt;/a&gt; for a general idea of what you can achieve with &lt;strong&gt;Hero&lt;/strong&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-usage-example-1" class="anchor" aria-hidden="true" href="#usage-example-1"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Usage Example 1&lt;/h2&gt;
&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="https://camo.githubusercontent.com/22d05ffa3ebcdabc0e46885d905a4958313c7a46/68747470733a2f2f63646e2e7261776769742e636f6d2f6c6b7a68616f2f4865726f2f656262336632632f5265736f75726365732f73696d706c652e737667"&gt;&lt;img src="https://camo.githubusercontent.com/22d05ffa3ebcdabc0e46885d905a4958313c7a46/68747470733a2f2f63646e2e7261776769742e636f6d2f6c6b7a68616f2f4865726f2f656262336632632f5265736f75726365732f73696d706c652e737667" data-canonical-src="https://cdn.rawgit.com/lkzhao/Hero/ebb3f2c/Resources/simple.svg" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-view-controller-1" class="anchor" aria-hidden="true" href="#view-controller-1"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;View Controller 1&lt;/h3&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;redView.&lt;span class="pl-smi"&gt;hero&lt;/span&gt;.&lt;span class="pl-smi"&gt;id&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;ironMan&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;
blackView.&lt;span class="pl-smi"&gt;hero&lt;/span&gt;.&lt;span class="pl-smi"&gt;id&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;batMan&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h3&gt;&lt;a id="user-content-view-controller-2" class="anchor" aria-hidden="true" href="#view-controller-2"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;View Controller 2&lt;/h3&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-c1"&gt;self&lt;/span&gt;.&lt;span class="pl-smi"&gt;hero&lt;/span&gt;.&lt;span class="pl-smi"&gt;isEnabled&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;true&lt;/span&gt;
redView.&lt;span class="pl-smi"&gt;hero&lt;/span&gt;.&lt;span class="pl-smi"&gt;id&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;ironMan&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;
blackView.&lt;span class="pl-smi"&gt;hero&lt;/span&gt;.&lt;span class="pl-smi"&gt;id&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;batMan&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;
whiteView.&lt;span class="pl-smi"&gt;hero&lt;/span&gt;.&lt;span class="pl-smi"&gt;modifiers&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; [.&lt;span class="pl-c1"&gt;translate&lt;/span&gt;(&lt;span class="pl-c1"&gt;y&lt;/span&gt;:&lt;span class="pl-c1"&gt;100&lt;/span&gt;)]&lt;/pre&gt;&lt;/div&gt;
&lt;h2&gt;&lt;a id="user-content-usage-example-2" class="anchor" aria-hidden="true" href="#usage-example-2"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Usage Example 2&lt;/h2&gt;
&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="https://camo.githubusercontent.com/c2589bdfe5341efcf64810cf7f10ac93d2670bd4/68747470733a2f2f63646e2e7261776769742e636f6d2f6c6b7a68616f2f4865726f2f656262336632632f5265736f75726365732f616476616e6365642e737667"&gt;&lt;img src="https://camo.githubusercontent.com/c2589bdfe5341efcf64810cf7f10ac93d2670bd4/68747470733a2f2f63646e2e7261776769742e636f6d2f6c6b7a68616f2f4865726f2f656262336632632f5265736f75726365732f616476616e6365642e737667" data-canonical-src="https://cdn.rawgit.com/lkzhao/Hero/ebb3f2c/Resources/advanced.svg" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-view-controller-1-1" class="anchor" aria-hidden="true" href="#view-controller-1-1"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;View Controller 1&lt;/h3&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;greyView.&lt;span class="pl-smi"&gt;hero&lt;/span&gt;.&lt;span class="pl-smi"&gt;id&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;skyWalker&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h3&gt;&lt;a id="user-content-view-controller-2-1" class="anchor" aria-hidden="true" href="#view-controller-2-1"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;View Controller 2&lt;/h3&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-c1"&gt;self&lt;/span&gt;.&lt;span class="pl-smi"&gt;hero&lt;/span&gt;.&lt;span class="pl-smi"&gt;isEnabled&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;true&lt;/span&gt;
greyView.&lt;span class="pl-smi"&gt;hero&lt;/span&gt;.&lt;span class="pl-smi"&gt;id&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;skyWalker&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; collectionView is the parent view of all red cells&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;collectionView.&lt;span class="pl-smi"&gt;hero&lt;/span&gt;.&lt;span class="pl-smi"&gt;modifiers&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; [.&lt;span class="pl-smi"&gt;cascade&lt;/span&gt;]
&lt;span class="pl-k"&gt;for&lt;/span&gt; cell &lt;span class="pl-k"&gt;in&lt;/span&gt; redCells {
    cell.&lt;span class="pl-smi"&gt;hero&lt;/span&gt;.&lt;span class="pl-smi"&gt;modifiers&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; [.&lt;span class="pl-smi"&gt;fade&lt;/span&gt;, .&lt;span class="pl-c1"&gt;scale&lt;/span&gt;(&lt;span class="pl-c1"&gt;0.5&lt;/span&gt;)]
}&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;You can do these in the &lt;strong&gt;storyboard&lt;/strong&gt; too!&lt;/p&gt;
&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="https://camo.githubusercontent.com/2d49bd077657da42c4e1fdad85b13817248a6e0b/68747470733a2f2f63646e2e7261776769742e636f6d2f6c6b7a68616f2f4865726f2f6d61737465722f5265736f75726365732f73746f7279626f617264566965772e706e67"&gt;&lt;img src="https://camo.githubusercontent.com/2d49bd077657da42c4e1fdad85b13817248a6e0b/68747470733a2f2f63646e2e7261776769742e636f6d2f6c6b7a68616f2f4865726f2f6d61737465722f5265736f75726365732f73746f7279626f617264566965772e706e67" width="267px" data-canonical-src="https://cdn.rawgit.com/lkzhao/Hero/master/Resources/storyboardView.png" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="https://camo.githubusercontent.com/0851b58271877dc1ef5a8be2f3143e6713c75fa3/68747470733a2f2f63646e2e7261776769742e636f6d2f6c6b7a68616f2f4865726f2f6d61737465722f5265736f75726365732f73746f7279626f61726456696577436f6e74726f6c6c65722e706e67"&gt;&lt;img src="https://camo.githubusercontent.com/0851b58271877dc1ef5a8be2f3143e6713c75fa3/68747470733a2f2f63646e2e7261776769742e636f6d2f6c6b7a68616f2f4865726f2f6d61737465722f5265736f75726365732f73746f7279626f61726456696577436f6e74726f6c6c65722e706e67" width="267px" data-canonical-src="https://cdn.rawgit.com/lkzhao/Hero/master/Resources/storyboardViewController.png" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-installation" class="anchor" aria-hidden="true" href="#installation"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Installation&lt;/h2&gt;
&lt;h3&gt;&lt;a id="user-content-cocoapods" class="anchor" aria-hidden="true" href="#cocoapods"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;CocoaPods&lt;/h3&gt;
&lt;p&gt;Add the following entry to your Podfile:&lt;/p&gt;
&lt;div class="highlight highlight-source-ruby"&gt;&lt;pre&gt;pod &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;Hero&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Then run &lt;code&gt;pod install&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;Don't forget to &lt;code&gt;import Hero&lt;/code&gt; in every file you'd like to use Hero.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-carthage" class="anchor" aria-hidden="true" href="#carthage"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Carthage&lt;/h3&gt;
&lt;p&gt;Add the following entry to your &lt;code&gt;Cartfile&lt;/code&gt;:&lt;/p&gt;
&lt;pre lang="text"&gt;&lt;code&gt;github "HeroTransitions/Hero"
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Then run &lt;code&gt;carthage update&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;If this is your first time using Carthage in the project, you'll need to go through some additional steps as explained &lt;a href="https://github.com/Carthage/Carthage#adding-frameworks-to-an-application"&gt;over at Carthage&lt;/a&gt;.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-accio" class="anchor" aria-hidden="true" href="#accio"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Accio&lt;/h3&gt;
&lt;p&gt;Add the following to your &lt;code&gt;Package.swift&lt;/code&gt;:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;.&lt;span class="pl-c1"&gt;package&lt;/span&gt;(&lt;span class="pl-c1"&gt;url&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;https://github.com/HeroTransitions/Hero.git&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, .&lt;span class="pl-c1"&gt;upToNextMajor&lt;/span&gt;(&lt;span class="pl-c1"&gt;from&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;1.4.0&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)),&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Next, add &lt;code&gt;Hero&lt;/code&gt; to your App targets dependencies like so:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;.&lt;span class="pl-c1"&gt;target&lt;/span&gt;(
    &lt;span class="pl-c1"&gt;name&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;App&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;,
    &lt;span class="pl-c1"&gt;dependencies&lt;/span&gt;: [
        &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;Hero&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;,
    ]
),&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Then run &lt;code&gt;accio update&lt;/code&gt;.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-swift-package-manager" class="anchor" aria-hidden="true" href="#swift-package-manager"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Swift Package Manager&lt;/h3&gt;
&lt;p&gt;To integrate using Apple's Swift package manager, add the following as a dependency to your &lt;code&gt;Package.swift&lt;/code&gt;:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;.&lt;span class="pl-c1"&gt;package&lt;/span&gt;(&lt;span class="pl-c1"&gt;url&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;https://github.com/HeroTransitions/Hero.git&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, .&lt;span class="pl-c1"&gt;upToNextMajor&lt;/span&gt;(&lt;span class="pl-c1"&gt;from&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;1.3.0&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;))&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;and then specify &lt;code&gt;"Hero"&lt;/code&gt; as a dependency of the Target in which you wish to use Hero.
Here's an example &lt;code&gt;PackageDescription&lt;/code&gt;:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; swift-tools-version:4.0&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;&lt;span class="pl-k"&gt;import&lt;/span&gt; &lt;span class="pl-en"&gt;PackageDescription&lt;/span&gt;

&lt;span class="pl-k"&gt;let&lt;/span&gt; package &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;Package&lt;/span&gt;(
    &lt;span class="pl-c1"&gt;name&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;MyPackage&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;,
    &lt;span class="pl-c1"&gt;products&lt;/span&gt;: [
        .&lt;span class="pl-c1"&gt;library&lt;/span&gt;(
            &lt;span class="pl-c1"&gt;name&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;MyPackage&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;,
            &lt;span class="pl-c1"&gt;targets&lt;/span&gt;: [&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;MyPackage&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;]),
    ],
    &lt;span class="pl-c1"&gt;dependencies&lt;/span&gt;: [
        .&lt;span class="pl-c1"&gt;package&lt;/span&gt;(&lt;span class="pl-c1"&gt;url&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;https://github.com/HeroTransitions/Hero.git&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, .&lt;span class="pl-c1"&gt;upToNextMajor&lt;/span&gt;(&lt;span class="pl-c1"&gt;from&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;1.5.0&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;))
    ],
    &lt;span class="pl-c1"&gt;targets&lt;/span&gt;: [
        .&lt;span class="pl-c1"&gt;target&lt;/span&gt;(
            &lt;span class="pl-c1"&gt;name&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;MyPackage&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;,
            &lt;span class="pl-c1"&gt;dependencies&lt;/span&gt;: [&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;Hero&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;])
    ]
)&lt;/pre&gt;&lt;/div&gt;
&lt;h3&gt;&lt;a id="user-content-manually" class="anchor" aria-hidden="true" href="#manually"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Manually&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;Drag the &lt;strong&gt;Sources&lt;/strong&gt; folder anywhere in your project.&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-documentations" class="anchor" aria-hidden="true" href="#documentations"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Documentations&lt;/h2&gt;
&lt;p&gt;Checkout the &lt;strong&gt;&lt;a href="https://github.com/lkzhao/Hero/wiki/Usage-Guide"&gt;WIKI PAGES (Usage Guide)&lt;/a&gt;&lt;/strong&gt; for documentations.&lt;/p&gt;
&lt;p&gt;For more up-to-date ones, please see the header-doc. (use &lt;strong&gt;alt+click&lt;/strong&gt; in Xcode)
&lt;a target="_blank" rel="noopener noreferrer" href="https://camo.githubusercontent.com/02c17d97708bc697e2f9ce4d6de9f674df21611f/68747470733a2f2f63646e2e7261776769742e636f6d2f6c6b7a68616f2f4865726f2f6d61737465722f5265736f75726365732f686561646572446f632e706e67"&gt;&lt;img src="https://camo.githubusercontent.com/02c17d97708bc697e2f9ce4d6de9f674df21611f/68747470733a2f2f63646e2e7261776769742e636f6d2f6c6b7a68616f2f4865726f2f6d61737465722f5265736f75726365732f686561646572446f632e706e67" width="521px" data-canonical-src="https://cdn.rawgit.com/lkzhao/Hero/master/Resources/headerDoc.png" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-interactive-transition-tutorials" class="anchor" aria-hidden="true" href="#interactive-transition-tutorials"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Interactive Transition Tutorials&lt;/h2&gt;
&lt;p&gt;&lt;a href="http://lkzhao.com/2017/02/05/hero-interactive-transition.html" rel="nofollow"&gt;Interactive transitions with Hero (Part 1)&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-faq" class="anchor" aria-hidden="true" href="#faq"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;FAQ&lt;/h2&gt;
&lt;h3&gt;&lt;a id="user-content-not-able-to-use-hero-transition-even-when-selfheroisenabled-is-set-to-true" class="anchor" aria-hidden="true" href="#not-able-to-use-hero-transition-even-when-selfheroisenabled-is-set-to-true"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Not able to use Hero transition even when &lt;code&gt;self.hero.isEnabled&lt;/code&gt; is set to true&lt;/h3&gt;
&lt;p&gt;Make sure that you have also enabled &lt;code&gt;self.hero.isEnabled&lt;/code&gt; on the navigation controller if you are doing a push/pop inside the navigation controller.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-views-being-covered-by-another-matched-view-during-the-transition" class="anchor" aria-hidden="true" href="#views-being-covered-by-another-matched-view-during-the-transition"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Views being covered by another matched view during the transition&lt;/h3&gt;
&lt;p&gt;Matched views use global coordinate space while unmatched views use local coordinate space by default. Local coordinate spaced views might be covered by other global coordinate spaced views. To solve this, use the &lt;code&gt;useGlobalCoordinateSpace&lt;/code&gt; modifier on the views being covered. Checkout &lt;a href="https://github.com/lkzhao/Hero/wiki/Coordinate-Space"&gt;Coordinate Space Wiki page&lt;/a&gt; for details.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-push-animation-is-shown-along-side-my-custom-animation" class="anchor" aria-hidden="true" href="#push-animation-is-shown-along-side-my-custom-animation"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Push animation is shown along side my custom animation&lt;/h3&gt;
&lt;p&gt;This is the default animation for navigation controller provided by Hero. To disable the push animation, set &lt;code&gt;self.hero.navigationAnimationType&lt;/code&gt; to &lt;code&gt;.fade&lt;/code&gt; or &lt;code&gt;.none&lt;/code&gt; on the navigation controller.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-how-do-i-use-a-different-default-animation-when-dismissing" class="anchor" aria-hidden="true" href="#how-do-i-use-a-different-default-animation-when-dismissing"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;How do I use a different default animation when dismissing&lt;/h3&gt;
&lt;p&gt;You can use the animation type &lt;code&gt;.selectBy(presenting:dismissing)&lt;/code&gt; to specify a different default animation for dismiss.&lt;/p&gt;
&lt;p&gt;For example:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;    &lt;span class="pl-c1"&gt;self&lt;/span&gt;.&lt;span class="pl-smi"&gt;hero&lt;/span&gt;.&lt;span class="pl-smi"&gt;modalAnimationType&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; .&lt;span class="pl-c1"&gt;selectBy&lt;/span&gt;(&lt;span class="pl-c1"&gt;presenting&lt;/span&gt;:.&lt;span class="pl-smi"&gt;zoom&lt;/span&gt;, &lt;span class="pl-c1"&gt;dismissing&lt;/span&gt;:.&lt;span class="pl-smi"&gt;zoomOut&lt;/span&gt;)&lt;/pre&gt;&lt;/div&gt;
&lt;h2&gt;&lt;a id="user-content-contribute" class="anchor" aria-hidden="true" href="#contribute"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Contribute&lt;/h2&gt;
&lt;p&gt;We welcome any contributions. Please read the &lt;a href="https://github.com/lkzhao/Hero/wiki/Contribution-Guide"&gt;Contribution Guide&lt;/a&gt;.&lt;/p&gt;
&lt;/article&gt;&lt;/div&gt;</description><author>HeroTransitions</author><guid isPermaLink="false">https://github.com/HeroTransitions/Hero</guid><pubDate>Sat, 25 Jan 2020 00:02:00 GMT</pubDate></item><item><title>realm/SwiftLint #3 in Swift, This week</title><link>https://github.com/realm/SwiftLint</link><description>&lt;p&gt;&lt;i&gt;A tool to enforce Swift style and conventions.&lt;/i&gt;&lt;/p&gt;&lt;div id="readme" class="md" data-path="README.md"&gt;&lt;article class="markdown-body entry-content p-5" itemprop="text"&gt;&lt;h1&gt;&lt;a id="user-content-swiftlint" class="anchor" aria-hidden="true" href="#swiftlint"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;SwiftLint&lt;/h1&gt;
&lt;p&gt;A tool to enforce Swift style and conventions, loosely based on
&lt;a href="https://github.com/github/swift-style-guide"&gt;GitHub's Swift Style Guide&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;SwiftLint hooks into &lt;a href="http://clang.llvm.org" rel="nofollow"&gt;Clang&lt;/a&gt; and
&lt;a href="http://www.jpsim.com/uncovering-sourcekit" rel="nofollow"&gt;SourceKit&lt;/a&gt; to use the
&lt;a href="http://clang.llvm.org/docs/IntroductionToTheClangAST.html" rel="nofollow"&gt;AST&lt;/a&gt; representation
of your source files for more accurate results.&lt;/p&gt;
&lt;p&gt;&lt;a href="https://dev.azure.com/jpsim/SwiftLint/_build/latest?definitionId=4?branchName=master" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/9a0296a6379b15a4bb08a821efade137d0837d36/68747470733a2f2f6465762e617a7572652e636f6d2f6a7073696d2f53776966744c696e742f5f617069732f6275696c642f7374617475732f7265616c6d2e53776966744c696e743f6272616e63684e616d653d6d6173746572" alt="Build Status" data-canonical-src="https://dev.azure.com/jpsim/SwiftLint/_apis/build/status/realm.SwiftLint?branchName=master" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://codecov.io/github/realm/SwiftLint?branch=master" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/c86f87b309c2e2ed94c56663ab18ce4096d1cd7f/68747470733a2f2f636f6465636f762e696f2f6769746875622f7265616c6d2f53776966744c696e742f636f7665726167652e7376673f6272616e63683d6d6173746572" alt="codecov.io" data-canonical-src="https://codecov.io/github/realm/SwiftLint/coverage.svg?branch=master" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="assets/screenshot.png"&gt;&lt;img src="assets/screenshot.png" alt="" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;This project adheres to the &lt;a href="https://realm.io/conduct" rel="nofollow"&gt;Contributor Covenant Code of Conduct&lt;/a&gt;.
By participating, you are expected to uphold this code. Please report
unacceptable behavior to &lt;a href="mailto:info@realm.io"&gt;info@realm.io&lt;/a&gt;.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Language Switch: &lt;a href="https://github.com/realm/SwiftLint/blob/master/README_CN.md"&gt;中文&lt;/a&gt;, &lt;a href="https://github.com/realm/SwiftLint/blob/master/README_KR.md"&gt;한국어&lt;/a&gt;.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2&gt;&lt;a id="user-content-installation" class="anchor" aria-hidden="true" href="#installation"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Installation&lt;/h2&gt;
&lt;h3&gt;&lt;a id="user-content-using-homebrew" class="anchor" aria-hidden="true" href="#using-homebrew"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Using &lt;a href="http://brew.sh/" rel="nofollow"&gt;Homebrew&lt;/a&gt;:&lt;/h3&gt;
&lt;pre&gt;&lt;code&gt;brew install swiftlint
&lt;/code&gt;&lt;/pre&gt;
&lt;h3&gt;&lt;a id="user-content-using-cocoapods" class="anchor" aria-hidden="true" href="#using-cocoapods"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Using &lt;a href="https://cocoapods.org" rel="nofollow"&gt;CocoaPods&lt;/a&gt;:&lt;/h3&gt;
&lt;p&gt;Simply add the following line to your Podfile:&lt;/p&gt;
&lt;div class="highlight highlight-source-ruby"&gt;&lt;pre&gt;pod &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;SwiftLint&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;This will download the SwiftLint binaries and dependencies in &lt;code&gt;Pods/&lt;/code&gt; during your next
&lt;code&gt;pod install&lt;/code&gt; execution and will allow you to invoke it via &lt;code&gt;${PODS_ROOT}/SwiftLint/swiftlint&lt;/code&gt;
in your Script Build Phases.&lt;/p&gt;
&lt;p&gt;This is the recommended way to install a specific version of SwiftLint since it supports
installing a pinned version rather than simply the latest (which is the case with Homebrew).&lt;/p&gt;
&lt;p&gt;Note that this will add the SwiftLint binaries, its dependencies' binaries and the Swift binary
library distribution to the &lt;code&gt;Pods/&lt;/code&gt; directory, so checking in this directory to SCM such as
git is discouraged.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-using-mint" class="anchor" aria-hidden="true" href="#using-mint"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Using &lt;a href="https://github.com/yonaskolb/mint"&gt;Mint&lt;/a&gt;:&lt;/h3&gt;
&lt;pre&gt;&lt;code&gt;$ mint install realm/SwiftLint
&lt;/code&gt;&lt;/pre&gt;
&lt;h3&gt;&lt;a id="user-content-using-a-pre-built-package" class="anchor" aria-hidden="true" href="#using-a-pre-built-package"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Using a pre-built package:&lt;/h3&gt;
&lt;p&gt;You can also install SwiftLint by downloading &lt;code&gt;SwiftLint.pkg&lt;/code&gt; from the
&lt;a href="https://github.com/realm/SwiftLint/releases/latest"&gt;latest GitHub release&lt;/a&gt; and
running it.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-compiling-from-source" class="anchor" aria-hidden="true" href="#compiling-from-source"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Compiling from source:&lt;/h3&gt;
&lt;p&gt;You can also build from source by cloning this project and running
&lt;code&gt;git submodule update --init --recursive; make install&lt;/code&gt; (Xcode 10.2 or later).&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-known-installation-issues-on-macos-before-10144" class="anchor" aria-hidden="true" href="#known-installation-issues-on-macos-before-10144"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Known Installation Issues On MacOS Before 10.14.4&lt;/h3&gt;
&lt;p&gt;Starting with &lt;a href="https://github.com/realm/SwiftLint/releases/tag/0.32.0"&gt;SwiftLint 0.32.0&lt;/a&gt;, if you get
an error similar to &lt;code&gt;dyld: Symbol not found: _$s11SubSequenceSlTl&lt;/code&gt; when running SwiftLint,
you'll need to install the &lt;a href="https://support.apple.com/kb/DL1998" rel="nofollow"&gt;Swift 5 Runtime Support for Command Line Tools&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Alternatively, you can:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Update to macOS 10.14.4 or later&lt;/li&gt;
&lt;li&gt;Install Xcode 10.2 or later at &lt;code&gt;/Applications/Xcode.app&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Rebuild SwiftLint from source using Xcode 10.2 or later&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-usage" class="anchor" aria-hidden="true" href="#usage"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Usage&lt;/h2&gt;
&lt;h3&gt;&lt;a id="user-content-presentation" class="anchor" aria-hidden="true" href="#presentation"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Presentation&lt;/h3&gt;
&lt;p&gt;To get a high-level overview of recommended ways to integrate SwiftLint into your project,
we encourage you to watch this presentation or read the transcript:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://academy.realm.io/posts/slug-jp-simard-swiftlint/" rel="nofollow"&gt;&lt;img src="assets/presentation.svg" alt="Presentation" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-xcode" class="anchor" aria-hidden="true" href="#xcode"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Xcode&lt;/h3&gt;
&lt;p&gt;Integrate SwiftLint into an Xcode scheme to get warnings and errors displayed
in the IDE. Just add a new "Run Script Phase" with:&lt;/p&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;if&lt;/span&gt; which swiftlint &lt;span class="pl-k"&gt;&amp;gt;&lt;/span&gt;/dev/null&lt;span class="pl-k"&gt;;&lt;/span&gt; &lt;span class="pl-k"&gt;then&lt;/span&gt;
  swiftlint
&lt;span class="pl-k"&gt;else&lt;/span&gt;
  &lt;span class="pl-c1"&gt;echo&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;warning: SwiftLint not installed, download from https://github.com/realm/SwiftLint&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;
&lt;span class="pl-k"&gt;fi&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="assets/runscript.png"&gt;&lt;img src="assets/runscript.png" alt="" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Alternatively, if you've installed SwiftLint via CocoaPods the script should look like this:&lt;/p&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt;&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;span class="pl-smi"&gt;${PODS_ROOT}&lt;/span&gt;/SwiftLint/swiftlint&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h4&gt;&lt;a id="user-content-format-on-save-xcode-plugin" class="anchor" aria-hidden="true" href="#format-on-save-xcode-plugin"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Format on Save Xcode Plugin&lt;/h4&gt;
&lt;p&gt;To run &lt;code&gt;swiftlint autocorrect&lt;/code&gt; on save in Xcode, install the
&lt;a href="https://github.com/ypresto/SwiftLintXcode"&gt;SwiftLintXcode&lt;/a&gt; plugin from Alcatraz.&lt;/p&gt;
&lt;p&gt;&lt;g-emoji class="g-emoji" alias="warning" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/26a0.png"&gt;⚠️&lt;/g-emoji&gt;This plugin will not work with Xcode 8 or later without disabling SIP.
This is not recommended.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-appcode" class="anchor" aria-hidden="true" href="#appcode"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;AppCode&lt;/h3&gt;
&lt;p&gt;To integrate SwiftLint with AppCode, install
&lt;a href="https://plugins.jetbrains.com/plugin/9175" rel="nofollow"&gt;this plugin&lt;/a&gt; and configure
SwiftLint's installed path in the plugin's preferences.
The &lt;code&gt;autocorrect&lt;/code&gt; action is available via &lt;code&gt;⌥⏎&lt;/code&gt;.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-atom" class="anchor" aria-hidden="true" href="#atom"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Atom&lt;/h3&gt;
&lt;p&gt;To integrate SwiftLint with &lt;a href="https://atom.io/" rel="nofollow"&gt;Atom&lt;/a&gt;, install the
&lt;a href="https://atom.io/packages/linter-swiftlint" rel="nofollow"&gt;&lt;code&gt;linter-swiftlint&lt;/code&gt;&lt;/a&gt; package from
APM.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-fastlane" class="anchor" aria-hidden="true" href="#fastlane"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;fastlane&lt;/h3&gt;
&lt;p&gt;You can use the &lt;a href="https://docs.fastlane.tools/actions/swiftlint" rel="nofollow"&gt;official swiftlint fastlane action&lt;/a&gt; to run SwiftLint as part of your fastlane process.&lt;/p&gt;
&lt;div class="highlight highlight-source-ruby"&gt;&lt;pre&gt;swiftlint(
    &lt;span class="pl-c1"&gt;mode:&lt;/span&gt; &lt;span class="pl-c1"&gt;:lint&lt;/span&gt;,                            &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; SwiftLint mode: :lint (default) or :autocorrect&lt;/span&gt;
    &lt;span class="pl-c1"&gt;executable:&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;Pods/SwiftLint/swiftlint&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; The SwiftLint binary path (optional). Important if you've installed it via CocoaPods&lt;/span&gt;
    &lt;span class="pl-c1"&gt;path:&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;/path/to/lint&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;,                  &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; Specify path to lint (optional)&lt;/span&gt;
    &lt;span class="pl-c1"&gt;output_file:&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;swiftlint.result.json&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;,   &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; The path of the output file (optional)&lt;/span&gt;
    &lt;span class="pl-c1"&gt;reporter:&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;json&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;,                       &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; The custom reporter to use (optional)&lt;/span&gt;
    &lt;span class="pl-c1"&gt;config_file:&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;.swiftlint-ci.yml&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;,       &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; The path of the configuration file (optional)&lt;/span&gt;
    &lt;span class="pl-c1"&gt;files:&lt;/span&gt; [                                &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; List of files to process (optional)&lt;/span&gt;
        &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;AppDelegate.swift&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;,
        &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;path/to/project/Model.swift&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;
    ],
    &lt;span class="pl-c1"&gt;ignore_exit_status:&lt;/span&gt; &lt;span class="pl-c1"&gt;true&lt;/span&gt;,               &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; Allow fastlane to continue even if SwiftLint returns a non-zero exit status (Default: false)&lt;/span&gt;
    &lt;span class="pl-c1"&gt;quiet:&lt;/span&gt; &lt;span class="pl-c1"&gt;true&lt;/span&gt;,                            &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; Don't print status logs like 'Linting ' &amp;amp; 'Done linting' (Default: false)&lt;/span&gt;
    &lt;span class="pl-c1"&gt;strict:&lt;/span&gt; &lt;span class="pl-c1"&gt;true&lt;/span&gt;                            &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; Fail on warnings? (Default: false)&lt;/span&gt;
)&lt;/pre&gt;&lt;/div&gt;
&lt;h3&gt;&lt;a id="user-content-command-line" class="anchor" aria-hidden="true" href="#command-line"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Command Line&lt;/h3&gt;
&lt;pre&gt;&lt;code&gt;$ swiftlint help
Available commands:

   analyze         [Experimental] Run analysis rules
   autocorrect     Automatically correct warnings and errors
   generate-docs   Generates markdown documentation for all rules
   help            Display general or command-specific help
   lint            Print lint warnings and errors (default command)
   rules           Display the list of rules and their identifiers
   version         Display the current version of SwiftLint
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Run &lt;code&gt;swiftlint&lt;/code&gt; in the directory containing the Swift files to lint. Directories
will be searched recursively.&lt;/p&gt;
&lt;p&gt;To specify a list of files when using &lt;code&gt;lint&lt;/code&gt;, &lt;code&gt;autocorrect&lt;/code&gt; or &lt;code&gt;analyze&lt;/code&gt;
(like the list of files modified by Xcode specified by the
&lt;a href="https://github.com/norio-nomura/ExtraBuildPhase"&gt;&lt;code&gt;ExtraBuildPhase&lt;/code&gt;&lt;/a&gt; Xcode
plugin, or modified files in the working tree based on &lt;code&gt;git ls-files -m&lt;/code&gt;), you
can do so by passing the option &lt;code&gt;--use-script-input-files&lt;/code&gt; and setting the
following instance variables: &lt;code&gt;SCRIPT_INPUT_FILE_COUNT&lt;/code&gt; and
&lt;code&gt;SCRIPT_INPUT_FILE_0&lt;/code&gt;, &lt;code&gt;SCRIPT_INPUT_FILE_1&lt;/code&gt;...&lt;code&gt;SCRIPT_INPUT_FILE_{SCRIPT_INPUT_FILE_COUNT}&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;These are same environment variables set for input files to
&lt;a href="http://indiestack.com/2014/12/speeding-up-custom-script-phases/" rel="nofollow"&gt;custom Xcode script phases&lt;/a&gt;.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-working-with-multiple-swift-versions" class="anchor" aria-hidden="true" href="#working-with-multiple-swift-versions"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Working With Multiple Swift Versions&lt;/h3&gt;
&lt;p&gt;SwiftLint hooks into SourceKit so it continues working even as Swift evolves!&lt;/p&gt;
&lt;p&gt;This also keeps SwiftLint lean, as it doesn't need to ship with a full Swift
compiler, it just communicates with the official one you already have installed
on your machine.&lt;/p&gt;
&lt;p&gt;You should always run SwiftLint with the same toolchain you use to compile your
code.&lt;/p&gt;
&lt;p&gt;You may want to override SwiftLint's default Swift toolchain if you have
multiple toolchains or Xcodes installed.&lt;/p&gt;
&lt;p&gt;Here's the order in which SwiftLint determines which Swift toolchain to use:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;$XCODE_DEFAULT_TOOLCHAIN_OVERRIDE&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;$TOOLCHAIN_DIR&lt;/code&gt; or &lt;code&gt;$TOOLCHAINS&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;xcrun -find swift&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;/Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;/Applications/Xcode-beta.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;~/Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;~/Applications/Xcode-beta.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;code&gt;sourcekitd.framework&lt;/code&gt; is expected to be found in the &lt;code&gt;usr/lib/&lt;/code&gt; subdirectory of
the value passed in the paths above.&lt;/p&gt;
&lt;p&gt;You may also set the &lt;code&gt;TOOLCHAINS&lt;/code&gt; environment variable to the reverse-DNS
notation that identifies a Swift toolchain version:&lt;/p&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt;$ TOOLCHAINS=com.apple.dt.toolchain.Swift_2_3 swiftlint autocorrect&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;On Linux, SourceKit is expected to be located in
&lt;code&gt;/usr/lib/libsourcekitdInProc.so&lt;/code&gt; or specified by the &lt;code&gt;LINUX_SOURCEKIT_LIB_PATH&lt;/code&gt;
environment variable.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-swift-version-support" class="anchor" aria-hidden="true" href="#swift-version-support"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Swift Version Support&lt;/h3&gt;
&lt;p&gt;Here's a reference of which SwiftLint version to use for a given Swift version.&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th align="left"&gt;Swift version&lt;/th&gt;
&lt;th align="left"&gt;Last supported SwiftLint release&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td align="left"&gt;Swift 1.x&lt;/td&gt;
&lt;td align="left"&gt;SwiftLint 0.1.2&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="left"&gt;Swift 2.x&lt;/td&gt;
&lt;td align="left"&gt;SwiftLint 0.18.1&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="left"&gt;Swift 3.x&lt;/td&gt;
&lt;td align="left"&gt;SwiftLint 0.25.1&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="left"&gt;Swift 4.0-4.1.x&lt;/td&gt;
&lt;td align="left"&gt;SwiftLint 0.28.2&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="left"&gt;Swift 4.2.x&lt;/td&gt;
&lt;td align="left"&gt;SwiftLint 0.35.0&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="left"&gt;Swift 5.x&lt;/td&gt;
&lt;td align="left"&gt;Latest&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h2&gt;&lt;a id="user-content-rules" class="anchor" aria-hidden="true" href="#rules"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Rules&lt;/h2&gt;
&lt;p&gt;Over 75 rules are included in SwiftLint and the Swift community (that's you!)
continues to contribute more over time.
&lt;a href="CONTRIBUTING.md"&gt;Pull requests&lt;/a&gt; are encouraged.&lt;/p&gt;
&lt;p&gt;You can find an updated list of rules and more information about them
&lt;a href="https://realm.github.io/SwiftLint/rule-directory.html" rel="nofollow"&gt;here&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;You can also check &lt;a href="Source/SwiftLintFramework/Rules"&gt;Source/SwiftLintFramework/Rules&lt;/a&gt;
directory to see their implementation.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-opt-in-rules" class="anchor" aria-hidden="true" href="#opt-in-rules"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Opt-In Rules&lt;/h3&gt;
&lt;p&gt;&lt;code&gt;opt_in_rules&lt;/code&gt; are disabled by default (i.e., you have to explicitly enable them
in your configuration file).&lt;/p&gt;
&lt;p&gt;Guidelines on when to mark a rule as opt-in:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;A rule that can have many false positives (e.g. &lt;code&gt;empty_count&lt;/code&gt;)&lt;/li&gt;
&lt;li&gt;A rule that is too slow&lt;/li&gt;
&lt;li&gt;A rule that is not general consensus or is only useful in some cases
(e.g. &lt;code&gt;force_unwrapping&lt;/code&gt;)&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;&lt;a id="user-content-disable-rules-in-code" class="anchor" aria-hidden="true" href="#disable-rules-in-code"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Disable rules in code&lt;/h3&gt;
&lt;p&gt;Rules can be disabled with a comment inside a source file with the following
format:&lt;/p&gt;
&lt;p&gt;&lt;code&gt;// swiftlint:disable &amp;lt;rule1&amp;gt; [&amp;lt;rule2&amp;gt; &amp;lt;rule3&amp;gt;...]&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;The rules will be disabled until the end of the file or until the linter sees a
matching enable comment:&lt;/p&gt;
&lt;p&gt;&lt;code&gt;// swiftlint:enable &amp;lt;rule1&amp;gt; [&amp;lt;rule2&amp;gt; &amp;lt;rule3&amp;gt;...]&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;For example:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; swiftlint:disable colon&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;&lt;span class="pl-k"&gt;let&lt;/span&gt; noWarning &lt;span class="pl-k"&gt;:&lt;/span&gt;&lt;span class="pl-c1"&gt;String&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; No warning about colons immediately after variable names!&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; swiftlint:enable colon&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;&lt;span class="pl-k"&gt;let&lt;/span&gt; hasWarning &lt;span class="pl-k"&gt;:&lt;/span&gt;&lt;span class="pl-c1"&gt;String&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Warning generated about colons immediately after variable names&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Including the &lt;code&gt;all&lt;/code&gt; keyword will disable all rules until the linter sees a matching enable comment:&lt;/p&gt;
&lt;p&gt;&lt;code&gt;// swiftlint:disable all&lt;/code&gt;
&lt;code&gt;// swiftlint:enable all&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;For example:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; swiftlint:disable all&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;&lt;span class="pl-k"&gt;let&lt;/span&gt; noWarning &lt;span class="pl-k"&gt;:&lt;/span&gt;&lt;span class="pl-c1"&gt;String&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; No warning about colons immediately after variable names!&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;&lt;span class="pl-k"&gt;let&lt;/span&gt; i &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Also no warning about short identifier names&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; swiftlint:enable all&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;&lt;span class="pl-k"&gt;let&lt;/span&gt; hasWarning &lt;span class="pl-k"&gt;:&lt;/span&gt;&lt;span class="pl-c1"&gt;String&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Warning generated about colons immediately after variable names&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;&lt;span class="pl-k"&gt;let&lt;/span&gt; y &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Warning generated about short identifier names&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;It's also possible to modify a &lt;code&gt;disable&lt;/code&gt; or &lt;code&gt;enable&lt;/code&gt; command by appending
&lt;code&gt;:previous&lt;/code&gt;, &lt;code&gt;:this&lt;/code&gt; or &lt;code&gt;:next&lt;/code&gt; for only applying the command to the previous,
this (current) or next line respectively.&lt;/p&gt;
&lt;p&gt;For example:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; swiftlint:disable:next force_cast&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;&lt;span class="pl-k"&gt;let&lt;/span&gt; noWarning &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;NSNumber&lt;/span&gt;() &lt;span class="pl-k"&gt;as!&lt;/span&gt; &lt;span class="pl-c1"&gt;Int&lt;/span&gt;
&lt;span class="pl-k"&gt;let&lt;/span&gt; hasWarning &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;NSNumber&lt;/span&gt;() &lt;span class="pl-k"&gt;as!&lt;/span&gt; &lt;span class="pl-c1"&gt;Int&lt;/span&gt;
&lt;span class="pl-k"&gt;let&lt;/span&gt; noWarning2 &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;NSNumber&lt;/span&gt;() &lt;span class="pl-k"&gt;as!&lt;/span&gt; &lt;span class="pl-c1"&gt;Int&lt;/span&gt; &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; swiftlint:disable:this force_cast&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;&lt;span class="pl-k"&gt;let&lt;/span&gt; noWarning3 &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;NSNumber&lt;/span&gt;() &lt;span class="pl-k"&gt;as!&lt;/span&gt; &lt;span class="pl-c1"&gt;Int&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; swiftlint:disable:previous force_cast&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Run &lt;code&gt;swiftlint rules&lt;/code&gt; to print a list of all available rules and their
identifiers.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-configuration" class="anchor" aria-hidden="true" href="#configuration"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Configuration&lt;/h3&gt;
&lt;p&gt;Configure SwiftLint by adding a &lt;code&gt;.swiftlint.yml&lt;/code&gt; file from the directory you'll
run SwiftLint from. The following parameters can be configured:&lt;/p&gt;
&lt;p&gt;Rule inclusion:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;disabled_rules&lt;/code&gt;: Disable rules from the default enabled set.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;opt_in_rules&lt;/code&gt;: Enable rules not from the default set.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;whitelist_rules&lt;/code&gt;: Acts as a whitelist, only the rules specified in this list
will be enabled. Can not be specified alongside &lt;code&gt;disabled_rules&lt;/code&gt; or
&lt;code&gt;opt_in_rules&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;analyzer_rules&lt;/code&gt;: This is an entirely separate list of rules that are only
run by the &lt;code&gt;analyze&lt;/code&gt; command. All analyzer rules are opt-in, so this is the
only configurable rule list (there is no disabled/whitelist equivalent).&lt;/li&gt;
&lt;/ul&gt;
&lt;div class="highlight highlight-source-yaml"&gt;&lt;pre&gt;&lt;span class="pl-ent"&gt;disabled_rules&lt;/span&gt;: &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; rule identifiers to exclude from running&lt;/span&gt;
  - &lt;span class="pl-s"&gt;colon&lt;/span&gt;
  - &lt;span class="pl-s"&gt;comma&lt;/span&gt;
  - &lt;span class="pl-s"&gt;control_statement&lt;/span&gt;
&lt;span class="pl-ent"&gt;opt_in_rules&lt;/span&gt;: &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; some rules are only opt-in&lt;/span&gt;
  - &lt;span class="pl-s"&gt;empty_count&lt;/span&gt;
  &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; Find all the available rules by running:&lt;/span&gt;
  &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; swiftlint rules&lt;/span&gt;
&lt;span class="pl-ent"&gt;included&lt;/span&gt;: &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; paths to include during linting. `--path` is ignored if present.&lt;/span&gt;
  - &lt;span class="pl-s"&gt;Source&lt;/span&gt;
&lt;span class="pl-ent"&gt;excluded&lt;/span&gt;: &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; paths to ignore during linting. Takes precedence over `included`.&lt;/span&gt;
  - &lt;span class="pl-s"&gt;Carthage&lt;/span&gt;
  - &lt;span class="pl-s"&gt;Pods&lt;/span&gt;
  - &lt;span class="pl-s"&gt;Source/ExcludedFolder&lt;/span&gt;
  - &lt;span class="pl-s"&gt;Source/ExcludedFile.swift&lt;/span&gt;
  - &lt;span class="pl-s"&gt;Source/*/ExcludedFile.swift &lt;/span&gt;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; Exclude files with a wildcard&lt;/span&gt;
&lt;span class="pl-ent"&gt;analyzer_rules&lt;/span&gt;: &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; Rules run by `swiftlint analyze` (experimental)&lt;/span&gt;
  - &lt;span class="pl-s"&gt;explicit_self&lt;/span&gt;

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; configurable rules can be customized from this configuration file&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; binary rules can set their severity level&lt;/span&gt;
&lt;span class="pl-ent"&gt;force_cast&lt;/span&gt;: &lt;span class="pl-s"&gt;warning &lt;/span&gt;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; implicitly&lt;/span&gt;
&lt;span class="pl-ent"&gt;force_try&lt;/span&gt;:
  &lt;span class="pl-ent"&gt;severity&lt;/span&gt;: &lt;span class="pl-s"&gt;warning &lt;/span&gt;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; explicitly&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; rules that have both warning and error levels, can set just the warning level&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; implicitly&lt;/span&gt;
&lt;span class="pl-ent"&gt;line_length&lt;/span&gt;: &lt;span class="pl-c1"&gt;110&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; they can set both implicitly with an array&lt;/span&gt;
&lt;span class="pl-ent"&gt;type_body_length&lt;/span&gt;:
  - &lt;span class="pl-c1"&gt;300&lt;/span&gt; &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; warning&lt;/span&gt;
  - &lt;span class="pl-c1"&gt;400&lt;/span&gt; &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; error&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; or they can set both explicitly&lt;/span&gt;
&lt;span class="pl-ent"&gt;file_length&lt;/span&gt;:
  &lt;span class="pl-ent"&gt;warning&lt;/span&gt;: &lt;span class="pl-c1"&gt;500&lt;/span&gt;
  &lt;span class="pl-ent"&gt;error&lt;/span&gt;: &lt;span class="pl-c1"&gt;1200&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; naming rules can set warnings/errors for min_length and max_length&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; additionally they can set excluded names&lt;/span&gt;
&lt;span class="pl-ent"&gt;type_name&lt;/span&gt;:
  &lt;span class="pl-ent"&gt;min_length&lt;/span&gt;: &lt;span class="pl-c1"&gt;4&lt;/span&gt; &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; only warning&lt;/span&gt;
  &lt;span class="pl-ent"&gt;max_length&lt;/span&gt;: &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; warning and error&lt;/span&gt;
    &lt;span class="pl-ent"&gt;warning&lt;/span&gt;: &lt;span class="pl-c1"&gt;40&lt;/span&gt;
    &lt;span class="pl-ent"&gt;error&lt;/span&gt;: &lt;span class="pl-c1"&gt;50&lt;/span&gt;
  &lt;span class="pl-ent"&gt;excluded&lt;/span&gt;: &lt;span class="pl-s"&gt;iPhone &lt;/span&gt;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; excluded via string&lt;/span&gt;
  &lt;span class="pl-ent"&gt;allowed_symbols&lt;/span&gt;: &lt;span class="pl-s"&gt;["_"] &lt;/span&gt;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; these are allowed in type names&lt;/span&gt;
&lt;span class="pl-ent"&gt;identifier_name&lt;/span&gt;:
  &lt;span class="pl-ent"&gt;min_length&lt;/span&gt;: &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; only min_length&lt;/span&gt;
    &lt;span class="pl-ent"&gt;error&lt;/span&gt;: &lt;span class="pl-c1"&gt;4&lt;/span&gt; &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; only error&lt;/span&gt;
  &lt;span class="pl-ent"&gt;excluded&lt;/span&gt;: &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; excluded via string array&lt;/span&gt;
    - &lt;span class="pl-s"&gt;id&lt;/span&gt;
    - &lt;span class="pl-s"&gt;URL&lt;/span&gt;
    - &lt;span class="pl-s"&gt;GlobalAPIKey&lt;/span&gt;
&lt;span class="pl-ent"&gt;reporter&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;xcode&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; reporter type (xcode, json, csv, checkstyle, junit, html, emoji, sonarqube, markdown)&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;You can also use environment variables in your configuration file,
by using &lt;code&gt;${SOME_VARIABLE}&lt;/code&gt; in a string.&lt;/p&gt;
&lt;h4&gt;&lt;a id="user-content-defining-custom-rules" class="anchor" aria-hidden="true" href="#defining-custom-rules"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Defining Custom Rules&lt;/h4&gt;
&lt;p&gt;You can define custom regex-based rules in your configuration file using the
following syntax:&lt;/p&gt;
&lt;div class="highlight highlight-source-yaml"&gt;&lt;pre&gt;&lt;span class="pl-ent"&gt;custom_rules&lt;/span&gt;:
  &lt;span class="pl-ent"&gt;pirates_beat_ninjas&lt;/span&gt;: &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; rule identifier&lt;/span&gt;
    &lt;span class="pl-ent"&gt;included&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;.*&lt;span class="pl-cce"&gt;\\&lt;/span&gt;.swift&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; regex that defines paths to include during linting. optional.&lt;/span&gt;
    &lt;span class="pl-ent"&gt;excluded&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;.*Test&lt;span class="pl-cce"&gt;\\&lt;/span&gt;.swift&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; regex that defines paths to exclude during linting. optional&lt;/span&gt;
    &lt;span class="pl-ent"&gt;name&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;Pirates Beat Ninjas&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; rule name. optional.&lt;/span&gt;
    &lt;span class="pl-ent"&gt;regex&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;([n,N]inja)&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; matching pattern&lt;/span&gt;
    &lt;span class="pl-ent"&gt;capture_group&lt;/span&gt;: &lt;span class="pl-c1"&gt;0&lt;/span&gt; &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; number of regex capture group to highlight the rule violation at. optional.&lt;/span&gt;
    &lt;span class="pl-ent"&gt;match_kinds&lt;/span&gt;: &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; SyntaxKinds to match. optional.&lt;/span&gt;
      - &lt;span class="pl-s"&gt;comment&lt;/span&gt;
      - &lt;span class="pl-s"&gt;identifier&lt;/span&gt;
    &lt;span class="pl-ent"&gt;message&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;Pirates are better than ninjas.&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; violation message. optional.&lt;/span&gt;
    &lt;span class="pl-ent"&gt;severity&lt;/span&gt;: &lt;span class="pl-s"&gt;error &lt;/span&gt;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; violation severity. optional.&lt;/span&gt;
  &lt;span class="pl-ent"&gt;no_hiding_in_strings&lt;/span&gt;:
    &lt;span class="pl-ent"&gt;regex&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;([n,N]inja)&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;
    &lt;span class="pl-ent"&gt;match_kinds&lt;/span&gt;: &lt;span class="pl-s"&gt;string&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;This is what the output would look like:&lt;/p&gt;
&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="assets/custom-rule.png"&gt;&lt;img src="assets/custom-rule.png" alt="" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;You can filter the matches by providing one or more &lt;code&gt;match_kinds&lt;/code&gt;, which will
reject matches that include syntax kinds that are not present in this list. Here
are all the possible syntax kinds:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;argument&lt;/li&gt;
&lt;li&gt;attribute.builtin&lt;/li&gt;
&lt;li&gt;attribute.id&lt;/li&gt;
&lt;li&gt;buildconfig.id&lt;/li&gt;
&lt;li&gt;buildconfig.keyword&lt;/li&gt;
&lt;li&gt;comment&lt;/li&gt;
&lt;li&gt;comment.mark&lt;/li&gt;
&lt;li&gt;comment.url&lt;/li&gt;
&lt;li&gt;doccomment&lt;/li&gt;
&lt;li&gt;doccomment.field&lt;/li&gt;
&lt;li&gt;identifier&lt;/li&gt;
&lt;li&gt;keyword&lt;/li&gt;
&lt;li&gt;number&lt;/li&gt;
&lt;li&gt;objectliteral&lt;/li&gt;
&lt;li&gt;parameter&lt;/li&gt;
&lt;li&gt;placeholder&lt;/li&gt;
&lt;li&gt;string&lt;/li&gt;
&lt;li&gt;string_interpolation_anchor&lt;/li&gt;
&lt;li&gt;typeidentifier&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;If using custom rules alongside a whitelist, make sure to add &lt;code&gt;custom_rules&lt;/code&gt; as an item under &lt;code&gt;whitelist_rules&lt;/code&gt;.&lt;/p&gt;
&lt;h4&gt;&lt;a id="user-content-nested-configurations" class="anchor" aria-hidden="true" href="#nested-configurations"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Nested Configurations&lt;/h4&gt;
&lt;p&gt;SwiftLint supports nesting configuration files for more granular control over
the linting process.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Include additional &lt;code&gt;.swiftlint.yml&lt;/code&gt; files where necessary in your directory
structure.&lt;/li&gt;
&lt;li&gt;Each file will be linted using the configuration file that is in its
directory or at the deepest level of its parent directories. Otherwise the
root configuration will be used.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;included&lt;/code&gt; is ignored for nested configurations.&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;&lt;a id="user-content-auto-correct" class="anchor" aria-hidden="true" href="#auto-correct"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Auto-correct&lt;/h3&gt;
&lt;p&gt;SwiftLint can automatically correct certain violations. Files on disk are
overwritten with a corrected version.&lt;/p&gt;
&lt;p&gt;Please make sure to have backups of these files before running
&lt;code&gt;swiftlint autocorrect&lt;/code&gt;, otherwise important data may be lost.&lt;/p&gt;
&lt;p&gt;Standard linting is disabled while correcting because of the high likelihood of
violations (or their offsets) being incorrect after modifying a file while
applying corrections.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-analyze-experimental" class="anchor" aria-hidden="true" href="#analyze-experimental"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Analyze (experimental)&lt;/h3&gt;
&lt;p&gt;The &lt;em&gt;experimental&lt;/em&gt; &lt;code&gt;swiftlint analyze&lt;/code&gt; command can lint Swift files using the
full type-checked AST. The compiler log path containing the clean &lt;code&gt;swiftc&lt;/code&gt; build
command invocation (incremental builds will fail) must be passed to &lt;code&gt;analyze&lt;/code&gt;
via the &lt;code&gt;--compiler-log-path&lt;/code&gt; flag.
e.g. &lt;code&gt;--compiler-log-path /path/to/xcodebuild.log&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;This can be obtained by running
&lt;code&gt;xcodebuild -workspace {WORKSPACE}.xcworkspace -scheme {SCHEME} &amp;gt; xcodebuild.log&lt;/code&gt;
with a clean &lt;code&gt;DerivedData&lt;/code&gt; folder.&lt;/p&gt;
&lt;p&gt;This command and related code in SwiftLint is subject to substantial changes at
any time while this feature is marked as experimental. Analyzer rules also tend
to be considerably slower than lint rules.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-license" class="anchor" aria-hidden="true" href="#license"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;License&lt;/h2&gt;
&lt;p&gt;&lt;a href="LICENSE"&gt;MIT licensed.&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-about" class="anchor" aria-hidden="true" href="#about"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;About&lt;/h2&gt;
&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="assets/realm.png"&gt;&lt;img src="assets/realm.png" width="184" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;SwiftLint is maintained and funded by Realm Inc. The names and logos for
Realm are trademarks of Realm Inc.&lt;/p&gt;
&lt;p&gt;We &lt;g-emoji class="g-emoji" alias="heart" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/2764.png"&gt;❤️&lt;/g-emoji&gt; open source software!
See &lt;a href="https://github.com/realm"&gt;our other open source projects&lt;/a&gt;,
read &lt;a href="https://realm.io/news" rel="nofollow"&gt;our blog&lt;/a&gt;, or say hi on twitter
(&lt;a href="https://twitter.com/realm" rel="nofollow"&gt;@realm&lt;/a&gt;).&lt;/p&gt;
&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="assets/macstadium.png"&gt;&lt;img src="assets/macstadium.png" width="184" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Our thanks to MacStadium for providing a Mac Mini to run our performance
tests.&lt;/p&gt;
&lt;/article&gt;&lt;/div&gt;</description><author>realm</author><guid isPermaLink="false">https://github.com/realm/SwiftLint</guid><pubDate>Sat, 25 Jan 2020 00:03:00 GMT</pubDate></item><item><title>apple/swift-nio #4 in Swift, This week</title><link>https://github.com/apple/swift-nio</link><description>&lt;p&gt;&lt;i&gt;Event-driven network application framework for high performance protocol servers &amp; clients, non-blocking.&lt;/i&gt;&lt;/p&gt;&lt;div id="readme" class="md" data-path="README.md"&gt;&lt;article class="markdown-body entry-content p-5" itemprop="text"&gt;&lt;h1&gt;&lt;a id="user-content-swiftnio" class="anchor" aria-hidden="true" href="#swiftnio"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;SwiftNIO&lt;/h1&gt;
&lt;p&gt;SwiftNIO is a cross-platform asynchronous event-driven network application framework
for rapid development of maintainable high performance protocol servers &amp;amp; clients.&lt;/p&gt;
&lt;p&gt;It's like &lt;a href="https://netty.io" rel="nofollow"&gt;Netty&lt;/a&gt;, but written for Swift.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-repository-organization" class="anchor" aria-hidden="true" href="#repository-organization"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Repository organization&lt;/h3&gt;
&lt;p&gt;The SwiftNIO project is split across multiple repositories:&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Repository&lt;/th&gt;
&lt;th&gt;NIO 2 (Swift 5+)&lt;/th&gt;
&lt;th&gt;NIO 1 (Swift 4+)&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href="https://github.com/apple/swift-nio"&gt;https://github.com/apple/swift-nio&lt;/a&gt; &lt;br&gt; SwiftNIO core&lt;/td&gt;
&lt;td&gt;&lt;code&gt;from: "2.0.0"&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;from: "1.0.0"&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href="https://github.com/apple/swift-nio-ssl"&gt;https://github.com/apple/swift-nio-ssl&lt;/a&gt; &lt;br&gt; TLS (SSL) support&lt;/td&gt;
&lt;td&gt;&lt;code&gt;from: "2.0.0"&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;from: "1.0.0"&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href="https://github.com/apple/swift-nio-http2"&gt;https://github.com/apple/swift-nio-http2&lt;/a&gt;&lt;br&gt; HTTP/2 support&lt;/td&gt;
&lt;td&gt;&lt;code&gt;from: "1.0.0"&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;from: "0.1.0"&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href="https://github.com/apple/swift-nio-extras"&gt;https://github.com/apple/swift-nio-extras&lt;/a&gt; &lt;br&gt;useful additions around SwiftNIO&lt;/td&gt;
&lt;td&gt;&lt;code&gt;from: "1.0.0"&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;from: "0.1.0"&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href="https://github.com/apple/swift-nio-transport-services"&gt;https://github.com/apple/swift-nio-transport-services&lt;/a&gt; &lt;br&gt; first-class support for macOS, iOS, and tvOS&lt;/td&gt;
&lt;td&gt;&lt;code&gt;from: "1.0.0"&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;from: "0.1.0"&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h3&gt;&lt;a id="user-content-protocol-implementations" class="anchor" aria-hidden="true" href="#protocol-implementations"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Protocol Implementations&lt;/h3&gt;
&lt;p&gt;Below you can find a list of a few protocol implementations that are done with SwiftNIO. This is a non-exhaustive list of protocols that are either part of the SwiftNIO project or are accepted into the &lt;a href="https://swift.org/server" rel="nofollow"&gt;SSWG&lt;/a&gt;'s incubation process. All of the libraries listed below do all of their I/O in a non-blocking fashion using SwiftNIO.&lt;/p&gt;
&lt;h4&gt;&lt;a id="user-content-low-level-protocol-implementations" class="anchor" aria-hidden="true" href="#low-level-protocol-implementations"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Low-level protocol implementations&lt;/h4&gt;
&lt;p&gt;Low-level protocol implementations are often a collection of &lt;a href="https://apple.github.io/swift-nio/docs/current/NIO/Protocols/ChannelHandler.html" rel="nofollow"&gt;&lt;code&gt;ChannelHandler&lt;/code&gt;&lt;/a&gt;s that implement a protocol but still require the user to have a good understanding of SwiftNIO. Often, low-level protocol implementations will then be wrapped in high-level libraries with a nicer, more user-friendly API.&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Protocol&lt;/th&gt;
&lt;th&gt;Client&lt;/th&gt;
&lt;th&gt;Server&lt;/th&gt;
&lt;th&gt;Repository&lt;/th&gt;
&lt;th&gt;Module&lt;/th&gt;
&lt;th&gt;Comment&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;HTTP/1&lt;/td&gt;
&lt;td&gt;&lt;g-emoji class="g-emoji" alias="white_check_mark" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/2705.png"&gt;✅&lt;/g-emoji&gt;&lt;/td&gt;
&lt;td&gt;&lt;g-emoji class="g-emoji" alias="white_check_mark" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/2705.png"&gt;✅&lt;/g-emoji&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href="https://github.com/apple/swift-nio"&gt;apple/swift-nio&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href="https://apple.github.io/swift-nio/docs/current/NIOHTTP1/index.html" rel="nofollow"&gt;&lt;code&gt;NIOHTTP1&lt;/code&gt;&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;official NIO project&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;HTTP/2&lt;/td&gt;
&lt;td&gt;&lt;g-emoji class="g-emoji" alias="white_check_mark" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/2705.png"&gt;✅&lt;/g-emoji&gt;&lt;/td&gt;
&lt;td&gt;&lt;g-emoji class="g-emoji" alias="white_check_mark" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/2705.png"&gt;✅&lt;/g-emoji&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href="https://github.com/apple/swift-nio-http2"&gt;apple/swift-nio-http2&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href="https://apple.github.io/swift-nio-http2/docs/current/NIOHTTP2/index.html" rel="nofollow"&gt;&lt;code&gt;NIOHTTP2&lt;/code&gt;&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;official NIO project&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;WebSocket&lt;/td&gt;
&lt;td&gt;&lt;g-emoji class="g-emoji" alias="white_check_mark" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/2705.png"&gt;✅&lt;/g-emoji&gt;&lt;/td&gt;
&lt;td&gt;&lt;g-emoji class="g-emoji" alias="white_check_mark" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/2705.png"&gt;✅&lt;/g-emoji&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href="https://github.com/apple/swift-nio"&gt;apple/swift-nio&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href="https://apple.github.io/swift-nio/docs/current/NIOWebSocket/index.html" rel="nofollow"&gt;&lt;code&gt;NIOWebSocket&lt;/code&gt;&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;official NIO project&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;TLS&lt;/td&gt;
&lt;td&gt;&lt;g-emoji class="g-emoji" alias="white_check_mark" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/2705.png"&gt;✅&lt;/g-emoji&gt;&lt;/td&gt;
&lt;td&gt;&lt;g-emoji class="g-emoji" alias="white_check_mark" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/2705.png"&gt;✅&lt;/g-emoji&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href="https://github.com/apple/swift-nio-ssl"&gt;apple/swift-nio-ssl&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href="https://apple.github.io/swift-nio-ssl/docs/current/NIOSSL/index.html" rel="nofollow"&gt;&lt;code&gt;NIOSSL&lt;/code&gt;&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;official NIO project&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h4&gt;&lt;a id="user-content-high-level-implementations" class="anchor" aria-hidden="true" href="#high-level-implementations"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;High-level implementations&lt;/h4&gt;
&lt;p&gt;High-level implementations are usually libraries that come with an API that doesn't expose SwiftNIO's &lt;a href="https://apple.github.io/swift-nio/docs/current/NIO/Classes/ChannelPipeline.html" rel="nofollow"&gt;&lt;code&gt;ChannelPipeline&lt;/code&gt;&lt;/a&gt; and can therefore be used with very little (or no) SwiftNIO-specific knowledge. The implementations listed below do still do all of their I/O in SwiftNIO and integrate really well with the SwiftNIO ecosystem.&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Protocol&lt;/th&gt;
&lt;th&gt;Client&lt;/th&gt;
&lt;th&gt;Server&lt;/th&gt;
&lt;th&gt;Repository&lt;/th&gt;
&lt;th&gt;Module&lt;/th&gt;
&lt;th&gt;Comment&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;HTTP&lt;/td&gt;
&lt;td&gt;&lt;g-emoji class="g-emoji" alias="white_check_mark" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/2705.png"&gt;✅&lt;/g-emoji&gt;&lt;/td&gt;
&lt;td&gt;&lt;g-emoji class="g-emoji" alias="x" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/274c.png"&gt;❌&lt;/g-emoji&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href="https://github.com/swift-server/async-http-client"&gt;swift-server/async-http-client&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;AsyncHTTPClient&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;SSWG community project&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;gRPC&lt;/td&gt;
&lt;td&gt;&lt;g-emoji class="g-emoji" alias="white_check_mark" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/2705.png"&gt;✅&lt;/g-emoji&gt;&lt;/td&gt;
&lt;td&gt;&lt;g-emoji class="g-emoji" alias="white_check_mark" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/2705.png"&gt;✅&lt;/g-emoji&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href="https://github.com/grpc/grpc-swift"&gt;grpc/grpc-swift&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;GRPC&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;also offers a low-level API; community project&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;APNS&lt;/td&gt;
&lt;td&gt;&lt;g-emoji class="g-emoji" alias="white_check_mark" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/2705.png"&gt;✅&lt;/g-emoji&gt;&lt;/td&gt;
&lt;td&gt;&lt;g-emoji class="g-emoji" alias="x" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/274c.png"&gt;❌&lt;/g-emoji&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href="https://github.com/kylebrowning/APNSwift"&gt;kylebrowning/APNSwift&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;APNSwift&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;SSWG community project&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;PostgreSQL&lt;/td&gt;
&lt;td&gt;&lt;g-emoji class="g-emoji" alias="white_check_mark" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/2705.png"&gt;✅&lt;/g-emoji&gt;&lt;/td&gt;
&lt;td&gt;&lt;g-emoji class="g-emoji" alias="x" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/274c.png"&gt;❌&lt;/g-emoji&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href="https://github.com/vapor/postgres-nio"&gt;vapor/postgres-nio&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;PostgresNIO&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;SSWG community project&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Redis&lt;/td&gt;
&lt;td&gt;&lt;g-emoji class="g-emoji" alias="white_check_mark" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/2705.png"&gt;✅&lt;/g-emoji&gt;&lt;/td&gt;
&lt;td&gt;&lt;g-emoji class="g-emoji" alias="x" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/274c.png"&gt;❌&lt;/g-emoji&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href="https://gitlab.com/Mordil/swift-redi-stack" rel="nofollow"&gt;mordil/swift-redi-stack&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;RediStack&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;SSWG community project&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h3&gt;&lt;a id="user-content-supported-platforms" class="anchor" aria-hidden="true" href="#supported-platforms"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Supported Platforms&lt;/h3&gt;
&lt;p&gt;SwiftNIO aims to support all of the platforms where Swift is supported. Currently, it is developed and tested on macOS and Linux, and is known to support the following operating system versions:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Ubuntu 14.04+&lt;/li&gt;
&lt;li&gt;macOS 10.12+; (macOS 10.14+, iOS 12+, or tvOS 12+ with &lt;a href="https://github.com/apple/swift-nio-transport-services"&gt;swift-nio-transport-services&lt;/a&gt;)&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;&lt;a id="user-content-swift-versions" class="anchor" aria-hidden="true" href="#swift-versions"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Swift versions&lt;/h3&gt;
&lt;h4&gt;&lt;a id="user-content-swiftnio-1" class="anchor" aria-hidden="true" href="#swiftnio-1"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;SwiftNIO 1&lt;/h4&gt;
&lt;p&gt;The latest released SwiftNIO 1 version supports Swift 4.0, 4.1, 4.2, and 5.0.&lt;/p&gt;
&lt;h4&gt;&lt;a id="user-content-swiftnio-2" class="anchor" aria-hidden="true" href="#swiftnio-2"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;SwiftNIO 2&lt;/h4&gt;
&lt;p&gt;The latest released SwiftNIO 2 version supports only Swift 5.0 &amp;amp; 5.1. If you have a SwiftNIO 1 application or library that you would like to migrate to SwiftNIO 2, please check out the &lt;a href="docs/migration-guide-NIO1-to-NIO2.md"&gt;migration guide&lt;/a&gt; we prepared for you.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-compatibility" class="anchor" aria-hidden="true" href="#compatibility"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Compatibility&lt;/h3&gt;
&lt;p&gt;SwiftNIO follows &lt;a href="https://semver.org/#semantic-versioning-200" rel="nofollow"&gt;SemVer 2.0.0&lt;/a&gt; with a separate document declaring &lt;a href="docs/public-api.md"&gt;SwiftNIO's Public API&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;What this means for you is that you should depend on SwiftNIO with a version range that covers everything from the minimum SwiftNIO version you require up to the next major version.
In SwiftPM that can be easily done specifying for example &lt;code&gt;from: "2.0.0"&lt;/code&gt; meaning that you support SwiftNIO in every version starting from 2.0.0 up to (excluding) 3.0.0.
SemVer and SwiftNIO's Public API guarantees should result in a working program without having to worry about testing every single version for compatibility.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-conceptual-overview" class="anchor" aria-hidden="true" href="#conceptual-overview"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Conceptual Overview&lt;/h2&gt;
&lt;p&gt;SwiftNIO is fundamentally a low-level tool for building high-performance networking applications in Swift. It particularly targets those use-cases where using a "thread-per-connection" model of concurrency is inefficient or untenable. This is a common limitation when building servers that use a large number of relatively low-utilization connections, such as HTTP servers.&lt;/p&gt;
&lt;p&gt;To achieve its goals SwiftNIO extensively uses "non-blocking I/O": hence the name! Non-blocking I/O differs from the more common blocking I/O model because the application does not wait for data to be sent to or received from the network: instead, SwiftNIO asks for the kernel to notify it when I/O operations can be performed without waiting.&lt;/p&gt;
&lt;p&gt;SwiftNIO does not aim to provide high-level solutions like, for example, web frameworks do. Instead, SwiftNIO is focused on providing the low-level building blocks for these higher-level applications. When it comes to building a web application, most users will not want to use SwiftNIO directly: instead, they'll want to use one of the many great web frameworks available in the Swift ecosystem. Those web frameworks, however, may choose to use SwiftNIO under the covers to provide their networking support.&lt;/p&gt;
&lt;p&gt;The following sections will describe the low-level tools that SwiftNIO provides, and provide a quick overview of how to work with them. If you feel comfortable with these concepts, then you can skip right ahead to the other sections of this README.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-basic-architecture" class="anchor" aria-hidden="true" href="#basic-architecture"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Basic Architecture&lt;/h3&gt;
&lt;p&gt;The basic building blocks of SwiftNIO are the following 8 types of objects:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://apple.github.io/swift-nio/docs/current/NIO/Protocols/EventLoopGroup.html" rel="nofollow"&gt;&lt;code&gt;EventLoopGroup&lt;/code&gt;&lt;/a&gt;, a protocol&lt;/li&gt;
&lt;li&gt;&lt;a href="https://apple.github.io/swift-nio/docs/current/NIO/Protocols/EventLoop.html" rel="nofollow"&gt;&lt;code&gt;EventLoop&lt;/code&gt;&lt;/a&gt;, a protocol&lt;/li&gt;
&lt;li&gt;&lt;a href="https://apple.github.io/swift-nio/docs/current/NIO/Protocols/Channel.html" rel="nofollow"&gt;&lt;code&gt;Channel&lt;/code&gt;&lt;/a&gt;, a protocol&lt;/li&gt;
&lt;li&gt;&lt;a href="https://apple.github.io/swift-nio/docs/current/NIO/Protocols/ChannelHandler.html" rel="nofollow"&gt;&lt;code&gt;ChannelHandler&lt;/code&gt;&lt;/a&gt;, a protocol&lt;/li&gt;
&lt;li&gt;&lt;code&gt;Bootstrap&lt;/code&gt;, several related structures&lt;/li&gt;
&lt;li&gt;&lt;a href="https://apple.github.io/swift-nio/docs/current/NIO/Structs/ByteBuffer.html" rel="nofollow"&gt;&lt;code&gt;ByteBuffer&lt;/code&gt;&lt;/a&gt;, a struct&lt;/li&gt;
&lt;li&gt;&lt;a href="https://apple.github.io/swift-nio/docs/current/NIO/Classes/EventLoopFuture.html" rel="nofollow"&gt;&lt;code&gt;EventLoopFuture&lt;/code&gt;&lt;/a&gt;, a generic class&lt;/li&gt;
&lt;li&gt;&lt;a href="https://apple.github.io/swift-nio/docs/current/NIO/Structs/EventLoopPromise.html" rel="nofollow"&gt;&lt;code&gt;EventLoopPromise&lt;/code&gt;&lt;/a&gt;, a generic struct.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;All SwiftNIO applications are ultimately constructed of these various components.&lt;/p&gt;
&lt;h4&gt;&lt;a id="user-content-eventloops-and-eventloopgroups" class="anchor" aria-hidden="true" href="#eventloops-and-eventloopgroups"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;EventLoops and EventLoopGroups&lt;/h4&gt;
&lt;p&gt;The basic I/O primitive of SwiftNIO is the event loop. The event loop is an object that waits for events (usually I/O related events, such as "data received") to happen and then fires some kind of callback when they do. In almost all SwiftNIO applications there will be relatively few event loops: usually only one or two per CPU core the application wants to use. Generally speaking event loops run for the entire lifetime of your application, spinning in an endless loop dispatching events.&lt;/p&gt;
&lt;p&gt;Event loops are gathered together into event loop &lt;em&gt;groups&lt;/em&gt;. These groups provide a mechanism to distribute work around the event loops. For example, when listening for inbound connections the listening socket will be registered on one event loop. However, we don't want all connections that are accepted on that listening socket to be registered with the same event loop, as that would potentially overload one event loop while leaving the others empty. For that reason, the event loop group provides the ability to spread load across multiple event loops.&lt;/p&gt;
&lt;p&gt;In SwiftNIO today there is one &lt;a href="https://apple.github.io/swift-nio/docs/current/NIO/Protocols/EventLoopGroup.html" rel="nofollow"&gt;&lt;code&gt;EventLoopGroup&lt;/code&gt;&lt;/a&gt; implementation, and two &lt;a href="https://apple.github.io/swift-nio/docs/current/NIO/Protocols/EventLoop.html" rel="nofollow"&gt;&lt;code&gt;EventLoop&lt;/code&gt;&lt;/a&gt; implementations. For production applications there is the &lt;a href="https://apple.github.io/swift-nio/docs/current/NIO/Classes/MultiThreadedEventLoopGroup.html" rel="nofollow"&gt;&lt;code&gt;MultiThreadedEventLoopGroup&lt;/code&gt;&lt;/a&gt;, an &lt;a href="https://apple.github.io/swift-nio/docs/current/NIO/Protocols/EventLoopGroup.html" rel="nofollow"&gt;&lt;code&gt;EventLoopGroup&lt;/code&gt;&lt;/a&gt; that creates a number of threads (using the POSIX &lt;a href="https://en.wikipedia.org/wiki/POSIX_Threads" rel="nofollow"&gt;&lt;code&gt;pthreads&lt;/code&gt;&lt;/a&gt; library) and places one &lt;code&gt;SelectableEventLoop&lt;/code&gt; on each one. The &lt;code&gt;SelectableEventLoop&lt;/code&gt; is an event loop that uses a selector (either &lt;a href="https://en.wikipedia.org/wiki/Kqueue" rel="nofollow"&gt;&lt;code&gt;kqueue&lt;/code&gt;&lt;/a&gt; or &lt;a href="https://en.wikipedia.org/wiki/Epoll" rel="nofollow"&gt;&lt;code&gt;epoll&lt;/code&gt;&lt;/a&gt; depending on the target system) to manage I/O events from file descriptors and to dispatch work. Additionally, there is the &lt;a href="https://apple.github.io/swift-nio/docs/current/NIO/Classes/EmbeddedEventLoop.html" rel="nofollow"&gt;&lt;code&gt;EmbeddedEventLoop&lt;/code&gt;&lt;/a&gt;, which is a dummy event loop that is used primarily for testing purposes.&lt;/p&gt;
&lt;p&gt;&lt;a href="https://apple.github.io/swift-nio/docs/current/NIO/Protocols/EventLoop.html" rel="nofollow"&gt;&lt;code&gt;EventLoop&lt;/code&gt;&lt;/a&gt;s have a number of important properties. Most vitally, they are the way all work gets done in SwiftNIO applications. In order to ensure thread-safety, any work that wants to be done on almost any of the other objects in SwiftNIO must be dispatched via an &lt;a href="https://apple.github.io/swift-nio/docs/current/NIO/Protocols/EventLoop.html" rel="nofollow"&gt;&lt;code&gt;EventLoop&lt;/code&gt;&lt;/a&gt;. &lt;a href="https://apple.github.io/swift-nio/docs/current/NIO/Protocols/EventLoop.html" rel="nofollow"&gt;&lt;code&gt;EventLoop&lt;/code&gt;&lt;/a&gt; objects own almost all the other objects in a SwiftNIO application, and understanding their execution model is critical for building high-performance SwiftNIO applications.&lt;/p&gt;
&lt;h4&gt;&lt;a id="user-content-channels-channel-handlers-channel-pipelines-and-channel-contexts" class="anchor" aria-hidden="true" href="#channels-channel-handlers-channel-pipelines-and-channel-contexts"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Channels, Channel Handlers, Channel Pipelines, and Channel Contexts&lt;/h4&gt;
&lt;p&gt;While &lt;a href="https://apple.github.io/swift-nio/docs/current/NIO/Protocols/EventLoop.html" rel="nofollow"&gt;&lt;code&gt;EventLoop&lt;/code&gt;&lt;/a&gt;s are critical to the way SwiftNIO works, most users will not interact with them substantially beyond asking them to create &lt;a href="https://apple.github.io/swift-nio/docs/current/NIO/Structs/EventLoopPromise.html" rel="nofollow"&gt;&lt;code&gt;EventLoopPromise&lt;/code&gt;&lt;/a&gt;s and to schedule work. The parts of a SwiftNIO application most users will spend the most time interacting with are &lt;a href="https://apple.github.io/swift-nio/docs/current/NIO/Protocols/Channel.html" rel="nofollow"&gt;&lt;code&gt;Channel&lt;/code&gt;&lt;/a&gt;s and &lt;a href="https://apple.github.io/swift-nio/docs/current/NIO/Protocols/ChannelHandler.html" rel="nofollow"&gt;&lt;code&gt;ChannelHandler&lt;/code&gt;&lt;/a&gt;s.&lt;/p&gt;
&lt;p&gt;Almost every file descriptor that a user interacts with in a SwiftNIO program is associated with a single &lt;a href="https://apple.github.io/swift-nio/docs/current/NIO/Protocols/Channel.html" rel="nofollow"&gt;&lt;code&gt;Channel&lt;/code&gt;&lt;/a&gt;. The &lt;a href="https://apple.github.io/swift-nio/docs/current/NIO/Protocols/Channel.html" rel="nofollow"&gt;&lt;code&gt;Channel&lt;/code&gt;&lt;/a&gt; owns this file descriptor, and is responsible for managing its lifetime. It is also responsible for processing inbound and outbound events on that file descriptor: whenever the event loop has an event that corresponds to a file descriptor, it will notify the &lt;a href="https://apple.github.io/swift-nio/docs/current/NIO/Protocols/Channel.html" rel="nofollow"&gt;&lt;code&gt;Channel&lt;/code&gt;&lt;/a&gt; that owns that file descriptor.&lt;/p&gt;
&lt;p&gt;&lt;a href="https://apple.github.io/swift-nio/docs/current/NIO/Protocols/Channel.html" rel="nofollow"&gt;&lt;code&gt;Channel&lt;/code&gt;&lt;/a&gt;s by themselves, however, are not useful. After all, it is a rare application that doesn't want to do anything with the data it sends or receives on a socket! So the other important part of the &lt;a href="https://apple.github.io/swift-nio/docs/current/NIO/Protocols/Channel.html" rel="nofollow"&gt;&lt;code&gt;Channel&lt;/code&gt;&lt;/a&gt; is the &lt;a href="https://apple.github.io/swift-nio/docs/current/NIO/Classes/ChannelPipeline.html" rel="nofollow"&gt;&lt;code&gt;ChannelPipeline&lt;/code&gt;&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;A &lt;a href="https://apple.github.io/swift-nio/docs/current/NIO/Classes/ChannelPipeline.html" rel="nofollow"&gt;&lt;code&gt;ChannelPipeline&lt;/code&gt;&lt;/a&gt; is a sequence of objects, called &lt;a href="https://apple.github.io/swift-nio/docs/current/NIO/Protocols/ChannelHandler.html" rel="nofollow"&gt;&lt;code&gt;ChannelHandler&lt;/code&gt;&lt;/a&gt;s, that process events on a &lt;a href="https://apple.github.io/swift-nio/docs/current/NIO/Protocols/Channel.html" rel="nofollow"&gt;&lt;code&gt;Channel&lt;/code&gt;&lt;/a&gt;. The &lt;a href="https://apple.github.io/swift-nio/docs/current/NIO/Protocols/ChannelHandler.html" rel="nofollow"&gt;&lt;code&gt;ChannelHandler&lt;/code&gt;&lt;/a&gt;s process these events one after another, in order, mutating and transforming events as they go. This can be thought of as a data processing pipeline; hence the name &lt;a href="https://apple.github.io/swift-nio/docs/current/NIO/Classes/ChannelPipeline.html" rel="nofollow"&gt;&lt;code&gt;ChannelPipeline&lt;/code&gt;&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;All &lt;a href="https://apple.github.io/swift-nio/docs/current/NIO/Protocols/ChannelHandler.html" rel="nofollow"&gt;&lt;code&gt;ChannelHandler&lt;/code&gt;&lt;/a&gt;s are either Inbound or Outbound handlers, or both. Inbound handlers process "inbound" events: events like reading data from a socket, reading socket close, or other kinds of events initiated by remote peers. Outbound handlers process "outbound" events, such as writes, connection attempts, and local socket closes.&lt;/p&gt;
&lt;p&gt;Each handler processes the events in order. For example, read events are passed from the front of the pipeline to the back, one handler at a time, while write events are passed from the back of the pipeline to the front. Each handler may, at any time, generate either inbound or outbound events that will be sent to the next handler in whichever direction is appropriate. This allows handlers to split up reads, coalesce writes, delay connection attempts, and generally perform arbitrary transformations of events.&lt;/p&gt;
&lt;p&gt;In general, &lt;a href="https://apple.github.io/swift-nio/docs/current/NIO/Protocols/ChannelHandler.html" rel="nofollow"&gt;&lt;code&gt;ChannelHandler&lt;/code&gt;&lt;/a&gt;s are designed to be highly re-usable components. This means they tend to be designed to be as small as possible, performing one specific data transformation. This allows handlers to be composed together in novel and flexible ways, which helps with code reuse and encapsulation.&lt;/p&gt;
&lt;p&gt;&lt;a href="https://apple.github.io/swift-nio/docs/current/NIO/Protocols/ChannelHandler.html" rel="nofollow"&gt;&lt;code&gt;ChannelHandler&lt;/code&gt;&lt;/a&gt;s are able to keep track of where they are in a &lt;a href="https://apple.github.io/swift-nio/docs/current/NIO/Classes/ChannelPipeline.html" rel="nofollow"&gt;&lt;code&gt;ChannelPipeline&lt;/code&gt;&lt;/a&gt; by using a &lt;a href="https://apple.github.io/swift-nio/docs/current/NIO/Classes/ChannelHandlerContext.html" rel="nofollow"&gt;&lt;code&gt;ChannelHandlerContext&lt;/code&gt;&lt;/a&gt;. These objects contain references to the previous and next channel handler in the pipeline, ensuring that it is always possible for a &lt;a href="https://apple.github.io/swift-nio/docs/current/NIO/Protocols/ChannelHandler.html" rel="nofollow"&gt;&lt;code&gt;ChannelHandler&lt;/code&gt;&lt;/a&gt; to emit events while it remains in a pipeline.&lt;/p&gt;
&lt;p&gt;SwiftNIO ships with many &lt;a href="https://apple.github.io/swift-nio/docs/current/NIO/Protocols/ChannelHandler.html" rel="nofollow"&gt;&lt;code&gt;ChannelHandler&lt;/code&gt;&lt;/a&gt;s built in that provide useful functionality, such as HTTP parsing. In addition, high-performance applications will want to provide as much of their logic as possible in &lt;a href="https://apple.github.io/swift-nio/docs/current/NIO/Protocols/ChannelHandler.html" rel="nofollow"&gt;&lt;code&gt;ChannelHandler&lt;/code&gt;&lt;/a&gt;s, as it helps avoid problems with context switching.&lt;/p&gt;
&lt;p&gt;Additionally, SwiftNIO ships with a few &lt;a href="https://apple.github.io/swift-nio/docs/current/NIO/Protocols/Channel.html" rel="nofollow"&gt;&lt;code&gt;Channel&lt;/code&gt;&lt;/a&gt; implementations. In particular, it ships with &lt;code&gt;ServerSocketChannel&lt;/code&gt;, a &lt;a href="https://apple.github.io/swift-nio/docs/current/NIO/Protocols/Channel.html" rel="nofollow"&gt;&lt;code&gt;Channel&lt;/code&gt;&lt;/a&gt; for sockets that accept inbound connections; &lt;code&gt;SocketChannel&lt;/code&gt;, a &lt;a href="https://apple.github.io/swift-nio/docs/current/NIO/Protocols/Channel.html" rel="nofollow"&gt;&lt;code&gt;Channel&lt;/code&gt;&lt;/a&gt; for TCP connections; &lt;code&gt;DatagramChannel&lt;/code&gt;, a &lt;a href="https://apple.github.io/swift-nio/docs/current/NIO/Protocols/Channel.html" rel="nofollow"&gt;&lt;code&gt;Channel&lt;/code&gt;&lt;/a&gt; for UDP sockets; and &lt;a href="https://apple.github.io/swift-nio/docs/current/NIO/Classes/EmbeddedChannel.html" rel="nofollow"&gt;&lt;code&gt;EmbeddedChannel&lt;/code&gt;&lt;/a&gt;, a &lt;a href="https://apple.github.io/swift-nio/docs/current/NIO/Protocols/Channel.html" rel="nofollow"&gt;&lt;code&gt;Channel&lt;/code&gt;&lt;/a&gt; primarily used for testing.&lt;/p&gt;
&lt;h5&gt;&lt;a id="user-content-a-note-on-blocking" class="anchor" aria-hidden="true" href="#a-note-on-blocking"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;A Note on Blocking&lt;/h5&gt;
&lt;p&gt;One of the important notes about &lt;a href="https://apple.github.io/swift-nio/docs/current/NIO/Classes/ChannelPipeline.html" rel="nofollow"&gt;&lt;code&gt;ChannelPipeline&lt;/code&gt;&lt;/a&gt;s is that they are thread-safe. This is very important for writing SwiftNIO applications, as it allows you to write much simpler &lt;a href="https://apple.github.io/swift-nio/docs/current/NIO/Protocols/ChannelHandler.html" rel="nofollow"&gt;&lt;code&gt;ChannelHandler&lt;/code&gt;&lt;/a&gt;s in the knowledge that they will not require synchronization.&lt;/p&gt;
&lt;p&gt;However, this is achieved by dispatching all code on the &lt;a href="https://apple.github.io/swift-nio/docs/current/NIO/Classes/ChannelPipeline.html" rel="nofollow"&gt;&lt;code&gt;ChannelPipeline&lt;/code&gt;&lt;/a&gt; on the same thread as the &lt;a href="https://apple.github.io/swift-nio/docs/current/NIO/Protocols/EventLoop.html" rel="nofollow"&gt;&lt;code&gt;EventLoop&lt;/code&gt;&lt;/a&gt;. This means that, as a general rule, &lt;a href="https://apple.github.io/swift-nio/docs/current/NIO/Protocols/ChannelHandler.html" rel="nofollow"&gt;&lt;code&gt;ChannelHandler&lt;/code&gt;&lt;/a&gt;s &lt;strong&gt;must not&lt;/strong&gt; call blocking code without dispatching it to a background thread. If a &lt;a href="https://apple.github.io/swift-nio/docs/current/NIO/Protocols/ChannelHandler.html" rel="nofollow"&gt;&lt;code&gt;ChannelHandler&lt;/code&gt;&lt;/a&gt; blocks for any reason, all &lt;a href="https://apple.github.io/swift-nio/docs/current/NIO/Protocols/Channel.html" rel="nofollow"&gt;&lt;code&gt;Channel&lt;/code&gt;&lt;/a&gt;s attached to the parent &lt;a href="https://apple.github.io/swift-nio/docs/current/NIO/Protocols/EventLoop.html" rel="nofollow"&gt;&lt;code&gt;EventLoop&lt;/code&gt;&lt;/a&gt; will be unable to progress until the blocking call completes.&lt;/p&gt;
&lt;p&gt;This is a common concern while writing SwiftNIO applications. If it is useful to write code in a blocking style, it is highly recommended that you dispatch work to a different thread when you're done with it in your pipeline.&lt;/p&gt;
&lt;h4&gt;&lt;a id="user-content-bootstrap" class="anchor" aria-hidden="true" href="#bootstrap"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Bootstrap&lt;/h4&gt;
&lt;p&gt;While it is possible to configure and register &lt;a href="https://apple.github.io/swift-nio/docs/current/NIO/Protocols/Channel.html" rel="nofollow"&gt;&lt;code&gt;Channel&lt;/code&gt;&lt;/a&gt;s with &lt;a href="https://apple.github.io/swift-nio/docs/current/NIO/Protocols/EventLoop.html" rel="nofollow"&gt;&lt;code&gt;EventLoop&lt;/code&gt;&lt;/a&gt;s directly, it is generally more useful to have a higher-level abstraction to handle this work.&lt;/p&gt;
&lt;p&gt;For this reason, SwiftNIO ships a number of &lt;code&gt;Bootstrap&lt;/code&gt; objects whose purpose is to streamline the creation of channels. Some &lt;code&gt;Bootstrap&lt;/code&gt; objects also provide other functionality, such as support for Happy Eyeballs for making TCP connection attempts.&lt;/p&gt;
&lt;p&gt;Currently SwiftNIO ships with three &lt;code&gt;Bootstrap&lt;/code&gt; objects: &lt;a href="https://apple.github.io/swift-nio/docs/current/NIO/Classes/ServerBootstrap.html" rel="nofollow"&gt;&lt;code&gt;ServerBootstrap&lt;/code&gt;&lt;/a&gt;, for bootstrapping listening channels; &lt;a href="https://apple.github.io/swift-nio/docs/current/NIO/Classes/ClientBootstrap.html" rel="nofollow"&gt;&lt;code&gt;ClientBootstrap&lt;/code&gt;&lt;/a&gt;, for bootstrapping client TCP channels; and &lt;a href="https://apple.github.io/swift-nio/docs/current/NIO/Classes/DatagramBootstrap.html" rel="nofollow"&gt;&lt;code&gt;DatagramBootstrap&lt;/code&gt;&lt;/a&gt; for bootstrapping UDP channels.&lt;/p&gt;
&lt;h4&gt;&lt;a id="user-content-bytebuffer" class="anchor" aria-hidden="true" href="#bytebuffer"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;ByteBuffer&lt;/h4&gt;
&lt;p&gt;The majority of the work in a SwiftNIO application involves shuffling buffers of bytes around. At the very least, data is sent and received to and from the network in the form of buffers of bytes. For this reason it's very important to have a high-performance data structure that is optimized for the kind of work SwiftNIO applications perform.&lt;/p&gt;
&lt;p&gt;For this reason, SwiftNIO provides &lt;a href="https://apple.github.io/swift-nio/docs/current/NIO/Structs/ByteBuffer.html" rel="nofollow"&gt;&lt;code&gt;ByteBuffer&lt;/code&gt;&lt;/a&gt;, a fast copy-on-write byte buffer that forms a key building block of most SwiftNIO applications.&lt;/p&gt;
&lt;p&gt;&lt;a href="https://apple.github.io/swift-nio/docs/current/NIO/Structs/ByteBuffer.html" rel="nofollow"&gt;&lt;code&gt;ByteBuffer&lt;/code&gt;&lt;/a&gt; provides a number of useful features, and in addition provides a number of hooks to use it in an "unsafe" mode. This turns off bounds checking for improved performance, at the cost of potentially opening your application up to memory correctness problems.&lt;/p&gt;
&lt;p&gt;In general, it is highly recommended that you use the &lt;a href="https://apple.github.io/swift-nio/docs/current/NIO/Structs/ByteBuffer.html" rel="nofollow"&gt;&lt;code&gt;ByteBuffer&lt;/code&gt;&lt;/a&gt; in its safe mode at all times.&lt;/p&gt;
&lt;p&gt;For more details on the API of &lt;a href="https://apple.github.io/swift-nio/docs/current/NIO/Structs/ByteBuffer.html" rel="nofollow"&gt;&lt;code&gt;ByteBuffer&lt;/code&gt;&lt;/a&gt;, please see our API documentation, linked below.&lt;/p&gt;
&lt;h4&gt;&lt;a id="user-content-promises-and-futures" class="anchor" aria-hidden="true" href="#promises-and-futures"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Promises and Futures&lt;/h4&gt;
&lt;p&gt;One major difference between writing concurrent code and writing synchronous code is that not all actions will complete immediately. For example, when you write data on a channel, it is possible that the event loop will not be able to immediately flush that write out to the network. For this reason, SwiftNIO provides &lt;a href="https://apple.github.io/swift-nio/docs/current/NIO/Structs/EventLoopPromise.html" rel="nofollow"&gt;&lt;code&gt;EventLoopPromise&amp;lt;T&amp;gt;&lt;/code&gt;&lt;/a&gt; and &lt;a href="https://apple.github.io/swift-nio/docs/current/NIO/Classes/EventLoopFuture.html" rel="nofollow"&gt;&lt;code&gt;EventLoopFuture&amp;lt;T&amp;gt;&lt;/code&gt;&lt;/a&gt; to manage operations that complete &lt;em&gt;asynchronously&lt;/em&gt;.&lt;/p&gt;
&lt;p&gt;An &lt;a href="https://apple.github.io/swift-nio/docs/current/NIO/Classes/EventLoopFuture.html" rel="nofollow"&gt;&lt;code&gt;EventLoopFuture&amp;lt;T&amp;gt;&lt;/code&gt;&lt;/a&gt; is essentially a container for the return value of a function that will be populated &lt;em&gt;at some time in the future&lt;/em&gt;. Each &lt;a href="https://apple.github.io/swift-nio/docs/current/NIO/Classes/EventLoopFuture.html" rel="nofollow"&gt;&lt;code&gt;EventLoopFuture&amp;lt;T&amp;gt;&lt;/code&gt;&lt;/a&gt; has a corresponding &lt;a href="https://apple.github.io/swift-nio/docs/current/NIO/Structs/EventLoopPromise.html" rel="nofollow"&gt;&lt;code&gt;EventLoopPromise&amp;lt;T&amp;gt;&lt;/code&gt;&lt;/a&gt;, which is the object that the result will be put into. When the promise is succeeded, the future will be fulfilled.&lt;/p&gt;
&lt;p&gt;If you had to poll the future to detect when it completed that would be quite inefficient, so &lt;a href="https://apple.github.io/swift-nio/docs/current/NIO/Classes/EventLoopFuture.html" rel="nofollow"&gt;&lt;code&gt;EventLoopFuture&amp;lt;T&amp;gt;&lt;/code&gt;&lt;/a&gt; is designed to have managed callbacks. Essentially, you can hang callbacks off the future that will be executed when a result is available. The &lt;a href="https://apple.github.io/swift-nio/docs/current/NIO/Classes/EventLoopFuture.html" rel="nofollow"&gt;&lt;code&gt;EventLoopFuture&amp;lt;T&amp;gt;&lt;/code&gt;&lt;/a&gt; will even carefully arrange the scheduling to ensure that these callbacks always execute on the event loop that initially created the promise, which helps ensure that you don't need too much synchronization around &lt;a href="https://apple.github.io/swift-nio/docs/current/NIO/Classes/EventLoopFuture.html" rel="nofollow"&gt;&lt;code&gt;EventLoopFuture&amp;lt;T&amp;gt;&lt;/code&gt;&lt;/a&gt; callbacks.&lt;/p&gt;
&lt;p&gt;Another important topic for consideration is the difference between how the promise passed to &lt;code&gt;close&lt;/code&gt; works as opposed to &lt;code&gt;closeFuture&lt;/code&gt; on a &lt;a href="https://apple.github.io/swift-nio/docs/current/NIO/Protocols/Channel.html" rel="nofollow"&gt;&lt;code&gt;Channel&lt;/code&gt;&lt;/a&gt;. For example, the promise passed into &lt;code&gt;close&lt;/code&gt; will succeed after the &lt;a href="https://apple.github.io/swift-nio/docs/current/NIO/Protocols/Channel.html" rel="nofollow"&gt;&lt;code&gt;Channel&lt;/code&gt;&lt;/a&gt; is closed down but before the &lt;a href="https://apple.github.io/swift-nio/docs/current/NIO/Classes/ChannelPipeline.html" rel="nofollow"&gt;&lt;code&gt;ChannelPipeline&lt;/code&gt;&lt;/a&gt; is completely cleared out. This will allow you to take action on the &lt;a href="https://apple.github.io/swift-nio/docs/current/NIO/Classes/ChannelPipeline.html" rel="nofollow"&gt;&lt;code&gt;ChannelPipeline&lt;/code&gt;&lt;/a&gt; before it is completely cleared out, if needed. If it is desired to wait for the &lt;a href="https://apple.github.io/swift-nio/docs/current/NIO/Protocols/Channel.html" rel="nofollow"&gt;&lt;code&gt;Channel&lt;/code&gt;&lt;/a&gt; to close down and the &lt;a href="https://apple.github.io/swift-nio/docs/current/NIO/Classes/ChannelPipeline.html" rel="nofollow"&gt;&lt;code&gt;ChannelPipeline&lt;/code&gt;&lt;/a&gt; to be cleared out without any further action, then the better option would be to wait for the &lt;code&gt;closeFuture&lt;/code&gt; to succeed.&lt;/p&gt;
&lt;p&gt;There are several functions for applying callbacks to &lt;a href="https://apple.github.io/swift-nio/docs/current/NIO/Classes/EventLoopFuture.html" rel="nofollow"&gt;&lt;code&gt;EventLoopFuture&amp;lt;T&amp;gt;&lt;/code&gt;&lt;/a&gt;, depending on how and when you want them to execute. Details of these functions is left to the API documentation.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-design-philosophy" class="anchor" aria-hidden="true" href="#design-philosophy"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Design Philosophy&lt;/h3&gt;
&lt;p&gt;SwiftNIO is designed to be a powerful tool for building networked applications and frameworks, but it is not intended to be the perfect solution for all levels of abstraction. SwiftNIO is tightly focused on providing the basic I/O primitives and protocol implementations at low levels of abstraction, leaving more expressive but slower abstractions to the wider community to build. The intention is that SwiftNIO will be a building block for server-side applications, not necessarily the framework those applications will use directly.&lt;/p&gt;
&lt;p&gt;Applications that need extremely high performance from their networking stack may choose to use SwiftNIO directly in order to reduce the overhead of their abstractions. These applications should be able to maintain extremely high performance with relatively little maintenance cost. SwiftNIO also focuses on providing useful abstractions for this use-case, such that extremely high performance network servers can be built directly.&lt;/p&gt;
&lt;p&gt;The core SwiftNIO repository will contain a few extremely important protocol implementations, such as HTTP, directly in tree. However, we believe that most protocol implementations should be decoupled from the release cycle of the underlying networking stack, as the release cadence is likely to be very different (either much faster or much slower). For this reason, we actively encourage the community to develop and maintain their protocol implementations out-of-tree. Indeed, some first-party SwiftNIO protocol implementations, including our TLS and HTTP/2 bindings, are developed out-of-tree!&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-documentation" class="anchor" aria-hidden="true" href="#documentation"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Documentation&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://apple.github.io/swift-nio/docs/current/NIO/index.html" rel="nofollow"&gt;API documentation&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-example-usage" class="anchor" aria-hidden="true" href="#example-usage"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Example Usage&lt;/h2&gt;
&lt;p&gt;There are currently several example projects that demonstrate how to use SwiftNIO.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;chat client&lt;/strong&gt; &lt;a href="https://github.com/apple/swift-nio/tree/master/Sources/NIOChatClient"&gt;https://github.com/apple/swift-nio/tree/master/Sources/NIOChatClient&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;chat server&lt;/strong&gt; &lt;a href="https://github.com/apple/swift-nio/tree/master/Sources/NIOChatServer"&gt;https://github.com/apple/swift-nio/tree/master/Sources/NIOChatServer&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;echo client&lt;/strong&gt; &lt;a href="https://github.com/apple/swift-nio/tree/master/Sources/NIOEchoClient"&gt;https://github.com/apple/swift-nio/tree/master/Sources/NIOEchoClient&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;echo server&lt;/strong&gt; &lt;a href="https://github.com/apple/swift-nio/tree/master/Sources/NIOEchoServer"&gt;https://github.com/apple/swift-nio/tree/master/Sources/NIOEchoServer&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;UDP echo client&lt;/strong&gt; &lt;a href="https://github.com/apple/swift-nio/tree/master/Sources/NIOUDPEchoClient"&gt;https://github.com/apple/swift-nio/tree/master/Sources/NIOUDPEchoClient&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;UDP echo server&lt;/strong&gt; &lt;a href="https://github.com/apple/swift-nio/tree/master/Sources/NIOUDPEchoServer"&gt;https://github.com/apple/swift-nio/tree/master/Sources/NIOUDPEchoServer&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;HTTP client&lt;/strong&gt; &lt;a href="https://github.com/apple/swift-nio/tree/master/Sources/NIOHTTP1Client"&gt;https://github.com/apple/swift-nio/tree/master/Sources/NIOHTTP1Client&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;HTTP server&lt;/strong&gt; &lt;a href="https://github.com/apple/swift-nio/tree/master/Sources/NIOHTTP1Server"&gt;https://github.com/apple/swift-nio/tree/master/Sources/NIOHTTP1Server&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;WebSocket client&lt;/strong&gt; &lt;a href="https://github.com/apple/swift-nio/tree/master/Sources/NIOWebSocketClient"&gt;https://github.com/apple/swift-nio/tree/master/Sources/NIOWebSocketClient&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;WebSocket server&lt;/strong&gt; &lt;a href="https://github.com/apple/swift-nio/tree/master/Sources/NIOWebSocketServer"&gt;https://github.com/apple/swift-nio/tree/master/Sources/NIOWebSocketServer&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;To build &amp;amp; run them, run following command, replace TARGET_NAME with the folder name under &lt;code&gt;./Sources&lt;/code&gt;&lt;/p&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt;swift run TARGET_NAME&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;For example, to run NIOHTTP1Server, run following command:&lt;/p&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt;swift run NIOHTTP1Server&lt;/pre&gt;&lt;/div&gt;
&lt;h2&gt;&lt;a id="user-content-getting-started" class="anchor" aria-hidden="true" href="#getting-started"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Getting Started&lt;/h2&gt;
&lt;p&gt;SwiftNIO primarily uses &lt;a href="https://swift.org/package-manager/" rel="nofollow"&gt;SwiftPM&lt;/a&gt; as its build tool, so we recommend using that as well. If you want to depend on SwiftNIO in your own project, it's as simple as adding a &lt;code&gt;dependencies&lt;/code&gt; clause to your &lt;code&gt;Package.swift&lt;/code&gt;:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;dependencies&lt;span class="pl-k"&gt;:&lt;/span&gt; [
    .&lt;span class="pl-c1"&gt;package&lt;/span&gt;(&lt;span class="pl-c1"&gt;url&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;https://github.com/apple/swift-nio.git&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-c1"&gt;from&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;2.0.0&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
]&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;and then adding the appropriate SwiftNIO module(s) to your target dependencies.&lt;/p&gt;
&lt;p&gt;If your project is set up as an Xcode project and you're using Xcode 11+, you can add SwiftNIO as a dependency to your
Xcode project by clicking File -&amp;gt; Swift Packages -&amp;gt; Add Package Dependency. In the upcoming dialog, please enter
&lt;code&gt;https://github.com/apple/swift-nio.git&lt;/code&gt; and click Next twice. Finally, select the targets you are planning to use (for
example &lt;code&gt;NIO&lt;/code&gt;, &lt;code&gt;NIOHTTP1&lt;/code&gt;, and &lt;code&gt;NIOFoundationCompat&lt;/code&gt;) and click finish. Now will be able to &lt;code&gt;import NIO&lt;/code&gt; (as well as all
the other targets you have selected) in your project.&lt;/p&gt;
&lt;p&gt;To work on SwiftNIO itself, or to investigate some of the demonstration applications, you can clone the repository directly and use SwiftPM to help build it. For example, you can run the following commands to compile and run the example echo server:&lt;/p&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt;swift build
swift &lt;span class="pl-c1"&gt;test&lt;/span&gt;
swift run NIOEchoServer&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;To verify that it is working, you can use another shell to attempt to connect to it:&lt;/p&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt;&lt;span class="pl-c1"&gt;echo&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;Hello SwiftNIO&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; &lt;span class="pl-k"&gt;|&lt;/span&gt; nc localhost 9999&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;If all goes well, you'll see the message echoed back to you.&lt;/p&gt;
&lt;p&gt;To work on SwiftNIO in Xcode 11+, you can just open the &lt;code&gt;Package.swift&lt;/code&gt;
file in Xcode and use Xcode's support for SwiftPM Packages.&lt;/p&gt;
&lt;p&gt;If you want to develop SwiftNIO with Xcode 10, you have to generate an Xcode project:&lt;/p&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt;swift package generate-xcodeproj&lt;/pre&gt;&lt;/div&gt;
&lt;h3&gt;&lt;a id="user-content-an-alternative-using-docker-compose" class="anchor" aria-hidden="true" href="#an-alternative-using-docker-compose"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;An alternative: using &lt;code&gt;docker-compose&lt;/code&gt;&lt;/h3&gt;
&lt;p&gt;Alternatively, you may want to develop or test with &lt;code&gt;docker-compose&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;First make sure you have &lt;a href="https://www.docker.com/community-edition" rel="nofollow"&gt;Docker&lt;/a&gt; installed, next run the following commands:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;docker-compose -f docker/docker-compose.yaml run test&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Will create a base image with Swift runtime and other build and test dependencies, compile SwiftNIO and run the unit and integration tests&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;docker-compose -f docker/docker-compose.yaml up echo&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Will create a base image, compile SwiftNIO, and run a sample &lt;code&gt;NIOEchoServer&lt;/code&gt; on
&lt;code&gt;localhost:9999&lt;/code&gt;. Test it by &lt;code&gt;echo Hello SwiftNIO | nc localhost 9999&lt;/code&gt;.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;docker-compose -f docker/docker-compose.yaml up http&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Will create a base image, compile SwiftNIO, and run a sample &lt;code&gt;NIOHTTP1Server&lt;/code&gt; on
&lt;code&gt;localhost:8888&lt;/code&gt;. Test it by &lt;code&gt;curl http://localhost:8888&lt;/code&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-developing-swiftnio" class="anchor" aria-hidden="true" href="#developing-swiftnio"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Developing SwiftNIO&lt;/h2&gt;
&lt;p&gt;&lt;em&gt;Note&lt;/em&gt;: This section is only relevant if you would like to develop SwiftNIO yourself. You can ignore the information here if you just want to use SwiftNIO as a SwiftPM package.&lt;/p&gt;
&lt;p&gt;For the most part, SwiftNIO development is as straightforward as any other SwiftPM project. With that said, we do have a few processes that are worth understanding before you contribute. For details, please see &lt;code&gt;CONTRIBUTING.md&lt;/code&gt; in this repository.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-prerequisites" class="anchor" aria-hidden="true" href="#prerequisites"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Prerequisites&lt;/h3&gt;
&lt;p&gt;SwiftNIO's &lt;code&gt;master&lt;/code&gt; branch is the development branch for the next releases of SwiftNIO 2, it's Swift 5-only.&lt;/p&gt;
&lt;p&gt;To be able to compile and run SwiftNIO and the integration tests, you need to
have a few prerequisites installed on your system.&lt;/p&gt;
&lt;h4&gt;&lt;a id="user-content-macos" class="anchor" aria-hidden="true" href="#macos"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;macOS&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;Xcode 10.2 or newer, Xcode 11 recommended.&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;&lt;a id="user-content-linux" class="anchor" aria-hidden="true" href="#linux"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Linux&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;Swift 5.0 or 5.1 (recommended) from &lt;a href="https://swift.org/download/#releases" rel="nofollow"&gt;swift.org/download&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;netcat (for integration tests only)&lt;/li&gt;
&lt;li&gt;lsof (for integration tests only)&lt;/li&gt;
&lt;li&gt;shasum (for integration tests only)&lt;/li&gt;
&lt;/ul&gt;
&lt;h4&gt;&lt;a id="user-content-ubuntu-1804" class="anchor" aria-hidden="true" href="#ubuntu-1804"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Ubuntu 18.04&lt;/h4&gt;
&lt;pre&gt;&lt;code&gt;# install swift tarball from https://swift.org/downloads
apt-get install -y git curl libatomic1 libxml2 netcat-openbsd lsof perl
&lt;/code&gt;&lt;/pre&gt;
&lt;h3&gt;&lt;a id="user-content-fedora-28" class="anchor" aria-hidden="true" href="#fedora-28"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Fedora 28+&lt;/h3&gt;
&lt;pre&gt;&lt;code&gt;dnf install swift-lang /usr/bin/nc /usr/bin/lsof /usr/bin/shasum
&lt;/code&gt;&lt;/pre&gt;
&lt;/article&gt;&lt;/div&gt;</description><author>apple</author><guid isPermaLink="false">https://github.com/apple/swift-nio</guid><pubDate>Sat, 25 Jan 2020 00:04:00 GMT</pubDate></item><item><title>mxcl/PromiseKit #5 in Swift, This week</title><link>https://github.com/mxcl/PromiseKit</link><description>&lt;p&gt;&lt;i&gt;Promises for Swift &amp; ObjC.&lt;/i&gt;&lt;/p&gt;&lt;div id="readme" class="md" data-path="README.md"&gt;&lt;article class="markdown-body entry-content p-5" itemprop="text"&gt;&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="../gh-pages/public/img/logo-tight.png"&gt;&lt;img src="../gh-pages/public/img/logo-tight.png" alt="PromiseKit" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href="https://cocoapods.org/pods/PromiseKit" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/c15ee18886b7426341e502b764d0a76d81970b57/68747470733a2f2f696d672e736869656c64732e696f2f636f636f61706f64732f762f50726f6d6973654b69742e7376673f6c6162656c3d76657273696f6e" alt="badge-pod" data-canonical-src="https://img.shields.io/cocoapods/v/PromiseKit.svg?label=version" style="max-width:100%;"&gt;&lt;/a&gt; &lt;a target="_blank" rel="noopener noreferrer" href="https://camo.githubusercontent.com/98c220d03f8bf6b21af781b82d06fbf5e755d0be/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f6c616e6775616765732d53776966742532302537432532304f626a432d6f72616e67652e737667"&gt;&lt;img src="https://camo.githubusercontent.com/98c220d03f8bf6b21af781b82d06fbf5e755d0be/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f6c616e6775616765732d53776966742532302537432532304f626a432d6f72616e67652e737667" alt="badge-languages" data-canonical-src="https://img.shields.io/badge/languages-Swift%20%7C%20ObjC-orange.svg" style="max-width:100%;"&gt;&lt;/a&gt; &lt;a target="_blank" rel="noopener noreferrer" href="https://camo.githubusercontent.com/3dd4a24e33f01ed9376e333f35ddd306208eda86/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f737570706f7274732d436f636f61506f64732532302537432532304361727468616765253230253743253230416363696f2532302537432532305377696674504d2d677265656e2e737667"&gt;&lt;img src="https://camo.githubusercontent.com/3dd4a24e33f01ed9376e333f35ddd306208eda86/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f737570706f7274732d436f636f61506f64732532302537432532304361727468616765253230253743253230416363696f2532302537432532305377696674504d2d677265656e2e737667" alt="badge-pms" data-canonical-src="https://img.shields.io/badge/supports-CocoaPods%20%7C%20Carthage%20%7C%20Accio%20%7C%20SwiftPM-green.svg" style="max-width:100%;"&gt;&lt;/a&gt; &lt;a target="_blank" rel="noopener noreferrer" href="https://camo.githubusercontent.com/efcda9fe2c564128d079066be8138688f3f0465f/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f706c6174666f726d732d6d61634f53253230253743253230694f5325323025374325323077617463684f5325323025374325323074764f532532302537432532304c696e75782d6c69676874677265792e737667"&gt;&lt;img src="https://camo.githubusercontent.com/efcda9fe2c564128d079066be8138688f3f0465f/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f706c6174666f726d732d6d61634f53253230253743253230694f5325323025374325323077617463684f5325323025374325323074764f532532302537432532304c696e75782d6c69676874677265792e737667" alt="badge-platforms" data-canonical-src="https://img.shields.io/badge/platforms-macOS%20%7C%20iOS%20%7C%20watchOS%20%7C%20tvOS%20%7C%20Linux-lightgrey.svg" style="max-width:100%;"&gt;&lt;/a&gt; &lt;a href="https://travis-ci.org/mxcl/PromiseKit" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/b9838a922b5c46736da485cc0ff2c06eaf350995/68747470733a2f2f7472617669732d63692e6f72672f6d78636c2f50726f6d6973654b69742e7376673f6272616e63683d6d6173746572" alt="badge-travis" data-canonical-src="https://travis-ci.org/mxcl/PromiseKit.svg?branch=master" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;Promises simplify asynchronous programming, freeing you up to focus on the more
important things. They are easy to learn, easy to master and result in clearer,
more readable code. Your co-workers will thank you.&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;UIApplication.&lt;span class="pl-smi"&gt;shared&lt;/span&gt;.&lt;span class="pl-smi"&gt;isNetworkActivityIndicatorVisible&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;true&lt;/span&gt;

&lt;span class="pl-k"&gt;let&lt;/span&gt; fetchImage &lt;span class="pl-k"&gt;=&lt;/span&gt; URLSession.&lt;span class="pl-smi"&gt;shared&lt;/span&gt;.&lt;span class="pl-c1"&gt;dataTask&lt;/span&gt;(.&lt;span class="pl-smi"&gt;promise&lt;/span&gt;, &lt;span class="pl-c1"&gt;with&lt;/span&gt;: url).&lt;span class="pl-smi"&gt;compactMap&lt;/span&gt;{ &lt;span class="pl-c1"&gt;UIImage&lt;/span&gt;(&lt;span class="pl-c1"&gt;data&lt;/span&gt;: &lt;span class="pl-c1"&gt;$0&lt;/span&gt;.&lt;span class="pl-smi"&gt;data&lt;/span&gt;) }
&lt;span class="pl-k"&gt;let&lt;/span&gt; fetchLocation &lt;span class="pl-k"&gt;=&lt;/span&gt; CLLocationManager.&lt;span class="pl-c1"&gt;requestLocation&lt;/span&gt;().&lt;span class="pl-smi"&gt;lastValue&lt;/span&gt;

firstly {
    &lt;span class="pl-c1"&gt;when&lt;/span&gt;(&lt;span class="pl-c1"&gt;fulfilled&lt;/span&gt;: fetchImage, fetchLocation)
}.&lt;span class="pl-smi"&gt;done&lt;/span&gt; { image, location &lt;span class="pl-k"&gt;in&lt;/span&gt;
    &lt;span class="pl-c1"&gt;self&lt;/span&gt;.&lt;span class="pl-smi"&gt;imageView&lt;/span&gt;.&lt;span class="pl-c1"&gt;image&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; image
    &lt;span class="pl-c1"&gt;self&lt;/span&gt;.&lt;span class="pl-smi"&gt;label&lt;/span&gt;.&lt;span class="pl-c1"&gt;text&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;span class="pl-pse"&gt;\(&lt;/span&gt;&lt;span class="pl-s1"&gt;location&lt;/span&gt;&lt;span class="pl-pse"&gt;&lt;span class="pl-s1"&gt;)&lt;/span&gt;&lt;/span&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;
}.&lt;span class="pl-smi"&gt;ensure&lt;/span&gt; {
    UIApplication.&lt;span class="pl-smi"&gt;shared&lt;/span&gt;.&lt;span class="pl-smi"&gt;isNetworkActivityIndicatorVisible&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;false&lt;/span&gt;
}.&lt;span class="pl-smi"&gt;catch&lt;/span&gt; { error &lt;span class="pl-k"&gt;in&lt;/span&gt;
    &lt;span class="pl-c1"&gt;self&lt;/span&gt;.&lt;span class="pl-c1"&gt;show&lt;/span&gt;(&lt;span class="pl-c1"&gt;UIAlertController&lt;/span&gt;(&lt;span class="pl-c1"&gt;for&lt;/span&gt;: error), &lt;span class="pl-c1"&gt;sender&lt;/span&gt;: &lt;span class="pl-c1"&gt;self&lt;/span&gt;)
}&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;PromiseKit is a thoughtful and complete implementation of promises for any
platform that has a &lt;code&gt;swiftc&lt;/code&gt;. It has &lt;em&gt;excellent&lt;/em&gt; Objective-C bridging and
&lt;em&gt;delightful&lt;/em&gt; specializations for iOS, macOS, tvOS and watchOS. It is a top-100
pod used in many of the most popular apps in the world.&lt;/p&gt;
&lt;p&gt;&lt;a href="https://codecov.io/gh/mxcl/PromiseKit" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/c6e5c784c54f92152d6984a9f5e5b3b5e10549bf/68747470733a2f2f636f6465636f762e696f2f67682f6d78636c2f50726f6d6973654b69742f6272616e63682f6d61737465722f67726170682f62616467652e737667" alt="codecov" data-canonical-src="https://codecov.io/gh/mxcl/PromiseKit/branch/master/graph/badge.svg" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h1&gt;&lt;a id="user-content-promisekit-7-alpha" class="anchor" aria-hidden="true" href="#promisekit-7-alpha"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;PromiseKit 7 Alpha&lt;/h1&gt;
&lt;p&gt;We are testing PromiseKit 7 alpha, it is Swift 5 only. It is tagged and thus
importable in all package managers.&lt;/p&gt;
&lt;h1&gt;&lt;a id="user-content-promisekit-6" class="anchor" aria-hidden="true" href="#promisekit-6"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;PromiseKit 6&lt;/h1&gt;
&lt;p&gt;&lt;a href="http://mxcl.dev/PromiseKit/news/2018/02/PromiseKit-6.0-Released/" rel="nofollow"&gt;Release notes and migration guide&lt;/a&gt;.&lt;/p&gt;
&lt;h1&gt;&lt;a id="user-content-quick-start" class="anchor" aria-hidden="true" href="#quick-start"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Quick Start&lt;/h1&gt;
&lt;p&gt;In your &lt;a href="https://guides.cocoapods.org/syntax/podfile.html" rel="nofollow"&gt;Podfile&lt;/a&gt;:&lt;/p&gt;
&lt;div class="highlight highlight-source-ruby"&gt;&lt;pre&gt;use_frameworks!

target &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;Change Me!&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; &lt;span class="pl-k"&gt;do&lt;/span&gt;
  pod &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;PromiseKit&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;~&amp;gt; 6.8&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;
&lt;span class="pl-k"&gt;end&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;blockquote&gt;
&lt;p&gt;The above gives an Xcode warning? See our &lt;a href="Documentation/Installation.md"&gt;Installation Guide&lt;/a&gt;.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;PromiseKit 6, 5 and 4 support Xcode 8.3, 9.x and 10.0; Swift 3.1,
3.2, 3.3, 3.4, 4.0, 4.1, 4.2, 4.3 and 5.0 (development snapshots); iOS, macOS,
tvOS, watchOS, Linux and Android; CocoaPods, Carthage and SwiftPM;
(&lt;a href="https://travis-ci.org/mxcl/PromiseKit" rel="nofollow"&gt;CI Matrix&lt;/a&gt;).&lt;/p&gt;
&lt;p&gt;For Carthage, SwiftPM, Accio, etc., or for instructions when using older Swifts or Xcodes, see our &lt;a href="Documentation/Installation.md"&gt;Installation Guide&lt;/a&gt;. We recommend
&lt;a href="https://github.com/Carthage/Carthage"&gt;Carthage&lt;/a&gt; or
&lt;a href="https://github.com/JamitLabs/Accio"&gt;Accio&lt;/a&gt;.&lt;/p&gt;
&lt;h1&gt;&lt;a id="user-content-professionally-supported-promisekit-is-now-available" class="anchor" aria-hidden="true" href="#professionally-supported-promisekit-is-now-available"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Professionally Supported PromiseKit is Now Available&lt;/h1&gt;
&lt;p&gt;TideLift gives software development teams a single source for purchasing
and maintaining their software, with professional grade assurances from
the experts who know it best, while seamlessly integrating with existing
tools.&lt;/p&gt;
&lt;p&gt;&lt;a href="https://tidelift.com/subscription/pkg/cocoapods-promisekit?utm_source=cocoapods-promisekit&amp;amp;utm_medium=referral&amp;amp;utm_campaign=readme" rel="nofollow"&gt;Get Professional Support for PromiseKit with TideLift&lt;/a&gt;.&lt;/p&gt;
&lt;h1&gt;&lt;a id="user-content-promisekit-is-thousands-of-hours-of-work" class="anchor" aria-hidden="true" href="#promisekit-is-thousands-of-hours-of-work"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;PromiseKit is Thousands of Hours of Work&lt;/h1&gt;
&lt;p&gt;Hey there, I’m Max Howell. I’m a prolific producer of open source software and
probably you already use some of it (I created &lt;a href="https://brew.sh" rel="nofollow"&gt;&lt;code&gt;brew&lt;/code&gt;&lt;/a&gt;). I work full-time on
open source and it’s hard; currently &lt;em&gt;I earn less than minimum wage&lt;/em&gt;. Please
help me continue my work, I appreciate it 🙏🏻&lt;/p&gt;
&lt;a href="https://www.patreon.com/mxcl" rel="nofollow"&gt;
	&lt;img src="https://camo.githubusercontent.com/c11c9bdf1f6c2a1d80afb11859984a61f0fadfa6/68747470733a2f2f63352e70617472656f6e2e636f6d2f65787465726e616c2f6c6f676f2f6265636f6d655f615f706174726f6e5f627574746f6e4032782e706e67" width="160" data-canonical-src="https://c5.patreon.com/external/logo/become_a_patron_button@2x.png" style="max-width:100%;"&gt;
&lt;/a&gt;
&lt;p&gt;&lt;a href="http://mxcl.dev/#donate" rel="nofollow"&gt;Other ways to say thanks&lt;/a&gt;.&lt;/p&gt;
&lt;h1&gt;&lt;a id="user-content-documentation" class="anchor" aria-hidden="true" href="#documentation"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Documentation&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;Handbook
&lt;ul&gt;
&lt;li&gt;&lt;a href="Documentation/GettingStarted.md"&gt;Getting Started&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="Documentation/CommonPatterns.md"&gt;Promises: Common Patterns&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="Documentation/FAQ.md"&gt;Frequently Asked Questions&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Manual
&lt;ul&gt;
&lt;li&gt;&lt;a href="Documentation/Installation.md"&gt;Installation Guide&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="Documentation/ObjectiveC.md"&gt;Objective-C Guide&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="Documentation/Troubleshooting.md"&gt;Troubleshooting&lt;/a&gt; (e.g., solutions to common compile errors)&lt;/li&gt;
&lt;li&gt;&lt;a href="Documentation/Appendix.md"&gt;Appendix&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="https://mxcl.dev/PromiseKit/reference/v6/Classes/Promise.html" rel="nofollow"&gt;API Reference&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h1&gt;&lt;a id="user-content-extensions" class="anchor" aria-hidden="true" href="#extensions"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Extensions&lt;/h1&gt;
&lt;p&gt;Promises are only as useful as the asynchronous tasks they represent. Thus, we
have converted (almost) all of Apple’s APIs to promises. The default CocoaPod
provides Promises and the extensions for Foundation and UIKit. The other
extensions are available by specifying additional subspecs in your &lt;code&gt;Podfile&lt;/code&gt;,
e.g.:&lt;/p&gt;
&lt;div class="highlight highlight-source-ruby"&gt;&lt;pre&gt;pod &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;PromiseKit/MapKit&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;          &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; MKDirections().calculate().then { /*…*/ }&lt;/span&gt;
pod &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;PromiseKit/CoreLocation&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;    &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; CLLocationManager.requestLocation().then { /*…*/ }&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;All our extensions are separate repositories at the &lt;a href="https://github.com/PromiseKit"&gt;PromiseKit organization&lt;/a&gt;.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-i-dont-want-the-extensions" class="anchor" aria-hidden="true" href="#i-dont-want-the-extensions"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;I don't want the extensions!&lt;/h2&gt;
&lt;p&gt;Then don’t have them:&lt;/p&gt;
&lt;div class="highlight highlight-source-ruby"&gt;&lt;pre&gt;pod &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;PromiseKit/CorePromise&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;~&amp;gt; 6.8&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;em&gt;Note:&lt;/em&gt; Carthage installations come with no extensions by default.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2&gt;&lt;a id="user-content-choose-your-networking-library" class="anchor" aria-hidden="true" href="#choose-your-networking-library"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Choose Your Networking Library&lt;/h2&gt;
&lt;p&gt;Promise chains commonly start with a network operation. Thus, we offer
extensions for &lt;code&gt;URLSession&lt;/code&gt;:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; pod 'PromiseKit/Foundation'  # https://github.com/PromiseKit/Foundation&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;
firstly {
    URLSession.&lt;span class="pl-smi"&gt;shared&lt;/span&gt;.&lt;span class="pl-c1"&gt;dataTask&lt;/span&gt;(.&lt;span class="pl-smi"&gt;promise&lt;/span&gt;, &lt;span class="pl-c1"&gt;with&lt;/span&gt;: &lt;span class="pl-k"&gt;try&lt;/span&gt; &lt;span class="pl-c1"&gt;makeUrlRequest&lt;/span&gt;()).&lt;span class="pl-c1"&gt;validate&lt;/span&gt;()
    &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; ^^ we provide `.validate()` so that eg. 404s get converted to errors&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;}.&lt;span class="pl-c1"&gt;map&lt;/span&gt; {
    &lt;span class="pl-k"&gt;try&lt;/span&gt; &lt;span class="pl-c1"&gt;JSONDecoder&lt;/span&gt;().&lt;span class="pl-c1"&gt;decode&lt;/span&gt;(Foo.&lt;span class="pl-k"&gt;self&lt;/span&gt;, &lt;span class="pl-c1"&gt;with&lt;/span&gt;: &lt;span class="pl-c1"&gt;$0&lt;/span&gt;.&lt;span class="pl-smi"&gt;data&lt;/span&gt;)
}.&lt;span class="pl-smi"&gt;done&lt;/span&gt; { foo &lt;span class="pl-k"&gt;in&lt;/span&gt;
    &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt;…&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;}.&lt;span class="pl-smi"&gt;catch&lt;/span&gt; { error &lt;span class="pl-k"&gt;in&lt;/span&gt;
    &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt;…&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;}

&lt;span class="pl-k"&gt;func&lt;/span&gt; &lt;span class="pl-en"&gt;makeUrlRequest&lt;/span&gt;() &lt;span class="pl-k"&gt;throws&lt;/span&gt; &lt;span class="pl-k"&gt;-&amp;gt;&lt;/span&gt; URLRequest {
    &lt;span class="pl-k"&gt;var&lt;/span&gt; rq &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;URLRequest&lt;/span&gt;(&lt;span class="pl-c1"&gt;url&lt;/span&gt;: url)
    rq.&lt;span class="pl-smi"&gt;httpMethod&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;POST&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;
    rq.&lt;span class="pl-c1"&gt;addValue&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;application/json&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-c1"&gt;forHTTPHeaderField&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;Content-Type&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
    rq.&lt;span class="pl-c1"&gt;addValue&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;application/json&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-c1"&gt;forHTTPHeaderField&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;Accept&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
    rq.&lt;span class="pl-smi"&gt;httpBody&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-k"&gt;try&lt;/span&gt; &lt;span class="pl-c1"&gt;JSONEncoder&lt;/span&gt;().&lt;span class="pl-c1"&gt;encode&lt;/span&gt;(obj)
    &lt;span class="pl-k"&gt;return&lt;/span&gt; rq
}&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;And &lt;a href="http://github.com/PromiseKit/Alamofire-"&gt;Alamofire&lt;/a&gt;:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; pod 'PromiseKit/Alamofire'  # https://github.com/PromiseKit/Alamofire-&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;
firstly {
    Alamofire
        .&lt;span class="pl-c1"&gt;request&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;http://example.com&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-c1"&gt;method&lt;/span&gt;: .&lt;span class="pl-smi"&gt;post&lt;/span&gt;, &lt;span class="pl-c1"&gt;parameters&lt;/span&gt;: params)
        .&lt;span class="pl-c1"&gt;responseDecodable&lt;/span&gt;(Foo.&lt;span class="pl-k"&gt;self&lt;/span&gt;)
}.&lt;span class="pl-smi"&gt;done&lt;/span&gt; { foo &lt;span class="pl-k"&gt;in&lt;/span&gt;
    &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt;…&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;}.&lt;span class="pl-smi"&gt;catch&lt;/span&gt; { error &lt;span class="pl-k"&gt;in&lt;/span&gt;
    &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt;…&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;}&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Nowadays, considering that:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;We almost always POST JSON&lt;/li&gt;
&lt;li&gt;We now have &lt;code&gt;JSONDecoder&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;PromiseKit now has &lt;code&gt;map&lt;/code&gt; and other functional primitives&lt;/li&gt;
&lt;li&gt;PromiseKit (like Alamofire, but not raw-&lt;code&gt;URLSession&lt;/code&gt;) also defaults to having
callbacks go to the main thread&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;We recommend vanilla &lt;code&gt;URLSession&lt;/code&gt;. It uses fewer black boxes and sticks closer to the metal. Alamofire was essential until the three bullet points above
became true, but nowadays it isn’t really necessary.&lt;/p&gt;
&lt;h1&gt;&lt;a id="user-content-support" class="anchor" aria-hidden="true" href="#support"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Support&lt;/h1&gt;
&lt;p&gt;Please check our &lt;a href="Documentation/Troubleshooting.md"&gt;Troubleshooting Guide&lt;/a&gt;, and
if after that you still have a question, ask at our &lt;a href="https://gitter.im/mxcl/PromiseKit" rel="nofollow"&gt;Gitter chat channel&lt;/a&gt; or on &lt;a href="https://github.com/mxcl/PromiseKit/issues/new"&gt;our bug tracker&lt;/a&gt;.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-security--vulnerability-reporting-or-disclosure" class="anchor" aria-hidden="true" href="#security--vulnerability-reporting-or-disclosure"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Security &amp;amp; Vulnerability Reporting or Disclosure&lt;/h2&gt;
&lt;p&gt;&lt;a href="https://tidelift.com/security" rel="nofollow"&gt;https://tidelift.com/security&lt;/a&gt;&lt;/p&gt;
&lt;/article&gt;&lt;/div&gt;</description><author>mxcl</author><guid isPermaLink="false">https://github.com/mxcl/PromiseKit</guid><pubDate>Sat, 25 Jan 2020 00:05:00 GMT</pubDate></item><item><title>kean/Nuke #6 in Swift, This week</title><link>https://github.com/kean/Nuke</link><description>&lt;p&gt;&lt;i&gt;Powerful image loading and caching system&lt;/i&gt;&lt;/p&gt;&lt;div id="readme" class="md" data-path="README.md"&gt;&lt;article class="markdown-body entry-content p-5" itemprop="text"&gt;&lt;br&gt;
&lt;p align="left"&gt;&lt;a target="_blank" rel="noopener noreferrer" href="https://cloud.githubusercontent.com/assets/1567433/13918338/f8670eea-ef7f-11e5-814d-f15bdfd6b2c0.png"&gt;&lt;img src="https://cloud.githubusercontent.com/assets/1567433/13918338/f8670eea-ef7f-11e5-814d-f15bdfd6b2c0.png" height="180" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;/p&gt;&lt;h1&gt;&lt;a id="user-content-powerful-image-loading-system" class="anchor" aria-hidden="true" href="#powerful-image-loading-system"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Powerful Image Loading System&lt;/h1&gt;
&lt;p align="left"&gt;
&lt;a target="_blank" rel="noopener noreferrer" href="https://camo.githubusercontent.com/bc7bfeebcbf831f1a0a133e8ba9a9329468df155/68747470733a2f2f696d672e736869656c64732e696f2f636f636f61706f64732f762f4e756b652e7376673f6c6162656c3d76657273696f6e"&gt;&lt;img src="https://camo.githubusercontent.com/bc7bfeebcbf831f1a0a133e8ba9a9329468df155/68747470733a2f2f696d672e736869656c64732e696f2f636f636f61706f64732f762f4e756b652e7376673f6c6162656c3d76657273696f6e" data-canonical-src="https://img.shields.io/cocoapods/v/Nuke.svg?label=version" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a target="_blank" rel="noopener noreferrer" href="https://camo.githubusercontent.com/2d18aaa85859f5cb5500ab344d2d3098d47b1d0c/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f706c6174666f726d732d694f532532432532306d61634f5325324325323077617463684f5325324325323074764f532d6c69676874677265792e737667"&gt;&lt;img src="https://camo.githubusercontent.com/2d18aaa85859f5cb5500ab344d2d3098d47b1d0c/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f706c6174666f726d732d694f532532432532306d61634f5325324325323077617463684f5325324325323074764f532d6c69676874677265792e737667" data-canonical-src="https://img.shields.io/badge/platforms-iOS%2C%20macOS%2C%20watchOS%2C%20tvOS-lightgrey.svg" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a target="_blank" rel="noopener noreferrer" href="https://camo.githubusercontent.com/5995d17ace22b861f724600cdf4dddbda9b7b173/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f74657374253230636f7665726167652d3130302532352d627269676874677265656e2e737667"&gt;&lt;img src="https://camo.githubusercontent.com/5995d17ace22b861f724600cdf4dddbda9b7b173/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f74657374253230636f7665726167652d3130302532352d627269676874677265656e2e737667" data-canonical-src="https://img.shields.io/badge/test%20coverage-100%25-brightgreen.svg" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://travis-ci.org/kean/Nuke" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/a7841c5e8a7922c27ae4a64bfd9eb936ae978e00/68747470733a2f2f696d672e736869656c64732e696f2f7472617669732f6b65616e2f4e756b652f6d61737465722e737667" data-canonical-src="https://img.shields.io/travis/kean/Nuke/master.svg" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Upgrading from the previous version? Use a &lt;a href="https://github.com/kean/Nuke/blob/master/Documentation/Migrations"&gt;&lt;strong&gt;Migration Guide&lt;/strong&gt;&lt;/a&gt;.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Nuke provides a simple and efficient way to download and display images in your app. Behind its clear and concise API is an advanced architecture which enables its unique features and offers virtually unlimited possibilities for customization.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;Fast LRU memory and disk cache&lt;/strong&gt; · &lt;strong&gt;Smart background decompression&lt;/strong&gt; · &lt;strong&gt;Image processing&lt;/strong&gt; · &lt;strong&gt;Resumable downloads&lt;/strong&gt; · &lt;strong&gt;Intelligent deduplication&lt;/strong&gt; · &lt;strong&gt;Request prioritization&lt;/strong&gt; · &lt;strong&gt;Prefetching&lt;/strong&gt; · &lt;strong&gt;Rate limiting&lt;/strong&gt; · &lt;strong&gt;Progressive JPEG, WebP&lt;/strong&gt; · &lt;strong&gt;Animated images&lt;/strong&gt; · &lt;strong&gt;Alamofire, WebP, Gifu, FLAnimatedImage integrations&lt;/strong&gt; · &lt;strong&gt;Reactive extensions&lt;/strong&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;br&gt;
&lt;h2&gt;&lt;a id="user-content-getting-started" class="anchor" aria-hidden="true" href="#getting-started"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Getting Started&lt;/h2&gt;
&lt;p&gt;Nuke is easy to learn and use. Here is an overview of its APIs and features:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Image View Extensions&lt;/strong&gt; ‣ &lt;a href="#image-view-extensions"&gt;Load and Display Image&lt;/a&gt; | &lt;a href="#placeholders-transitions-content-modes"&gt;Placeholders, Transitions, Content Modes&lt;/a&gt; | &lt;a href="#imagerequest"&gt;&lt;code&gt;ImageRequest&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Image Processing&lt;/strong&gt; ‣ &lt;a href="#resize"&gt;&lt;code&gt;Resize&lt;/code&gt;&lt;/a&gt; | &lt;a href="#gaussianblur-core-image"&gt;&lt;code&gt;GaussianBlur&lt;/code&gt;, Core Image&lt;/a&gt; | &lt;a href="#custom-processors"&gt;Custom Processors&lt;/a&gt; | &lt;a href="#smart-decompression"&gt;Smart Decompression&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Image Pipeline&lt;/strong&gt; ‣ &lt;a href="#image-pipeline"&gt;Load Image&lt;/a&gt; | &lt;a href="#imagetask"&gt;&lt;code&gt;ImageTask&lt;/code&gt;&lt;/a&gt; | &lt;a href="#customize-image-pipeline"&gt;Customize Image Pipeline&lt;/a&gt; | &lt;a href="#default-image-pipeline"&gt;Default Pipeline&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Caching&lt;/strong&gt; ‣ &lt;a href="#lru-memory-cache"&gt;LRU Memory Cache&lt;/a&gt; | &lt;a href="#http-disk-cache"&gt;HTTP Disk Cache&lt;/a&gt; | &lt;a href="#aggressive-lru-disk-cache"&gt;Aggressive LRU Disk Cache&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Advanced Features&lt;/strong&gt; ‣ &lt;a href="#image-preheating"&gt;Preheat Images&lt;/a&gt; | &lt;a href="#progressive-decoding"&gt;Progressive Decoding&lt;/a&gt; | &lt;a href="#animated-images"&gt;Animated Images&lt;/a&gt; | &lt;a href="#webp"&gt;WebP&lt;/a&gt; | &lt;a href="#rxnuke"&gt;RxNuke&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;To learn more see a full &lt;a href="https://kean-org.github.io/docs/nuke/reference/8.0/index.html" rel="nofollow"&gt;&lt;strong&gt;API Reference&lt;/strong&gt;&lt;/a&gt;, and check out the demo project included in the repository. When you are ready to install, follow the &lt;a href="https://github.com/kean/Nuke/blob/master/Documentation/Guides/Installation%20Guide.md"&gt;&lt;strong&gt;Installation Guide&lt;/strong&gt;&lt;/a&gt;. See &lt;a href="#h_requirements"&gt;&lt;strong&gt;Requirements&lt;/strong&gt;&lt;/a&gt; for a list of supported platforms.&lt;/p&gt;
&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="https://camo.githubusercontent.com/945dfe1b45955d2645a7f57045e64a850d2ae28a/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f737570706f7274732d53776966742532305061636b6167652532304d616e61676572253243253230436f636f61506f647325324325323043617274686167652d677265656e2e737667"&gt;&lt;img src="https://camo.githubusercontent.com/945dfe1b45955d2645a7f57045e64a850d2ae28a/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f737570706f7274732d53776966742532305061636b6167652532304d616e61676572253243253230436f636f61506f647325324325323043617274686167652d677265656e2e737667" data-canonical-src="https://img.shields.io/badge/supports-Swift%20Package%20Manager%2C%20CocoaPods%2C%20Carthage-green.svg" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;To learn about the image pipeline itself, see the dedicated section:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Image Pipeline&lt;/strong&gt; ‣ &lt;a href="#h_design"&gt;Overview&lt;/a&gt; | &lt;a href="#data-loading-and-caching"&gt;Data Loading and Caching&lt;/a&gt; | &lt;a href="#resumable-downloads"&gt;Resumable Downloads&lt;/a&gt; | &lt;a href="#memory-cache"&gt;Memory Cache&lt;/a&gt; | &lt;a href="#deduplication"&gt;Deduplication&lt;/a&gt; | &lt;a href="#performance"&gt;Performance&lt;/a&gt; | &lt;a href="#h_plugins"&gt;Extensions&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;If you'd like to contribute to Nuke see &lt;a href="#h_contribute"&gt;&lt;strong&gt;Contributing&lt;/strong&gt;&lt;/a&gt;.&lt;/p&gt;
&lt;br&gt;
&lt;h1&gt;&lt;a id="user-content-image-view-extensions" class="anchor" aria-hidden="true" href="#image-view-extensions"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Image View Extensions&lt;/h1&gt;
&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="https://user-images.githubusercontent.com/1567433/59150381-d34beb80-8a22-11e9-8d9a-6b1527ffc9e1.png"&gt;&lt;img align="right" src="https://user-images.githubusercontent.com/1567433/59150381-d34beb80-8a22-11e9-8d9a-6b1527ffc9e1.png" width="360" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Download and display an image in an image view with a single line of code:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;Nuke.&lt;span class="pl-c1"&gt;loadImage&lt;/span&gt;(&lt;span class="pl-c1"&gt;with&lt;/span&gt;: url, &lt;span class="pl-c1"&gt;into&lt;/span&gt;: imageView)&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Nuke will check if the image exists in the memory cache, and if it does, will instantly display it. If not, the image data will be loaded, decoded, processed, and decompressed in the background.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;See &lt;a href="#h_design"&gt;Image Pipeline Overview&lt;/a&gt; to learn more.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3&gt;&lt;a id="user-content-in-a-list" class="anchor" aria-hidden="true" href="#in-a-list"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;In a List&lt;/h3&gt;
&lt;p&gt;When you request a new image for the existing view, Nuke will prepare it for reuse and cancel any outstanding requests for the view. Mangaging images in lists has never been easier.&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;func&lt;/span&gt; &lt;span class="pl-en"&gt;collectionView&lt;/span&gt;(&lt;span class="pl-en"&gt;_&lt;/span&gt; &lt;span class="pl-smi"&gt;collectionView&lt;/span&gt;: UICollectionView,
                    &lt;span class="pl-en"&gt;cellForItemAt&lt;/span&gt; &lt;span class="pl-smi"&gt;indexPath&lt;/span&gt;: IndexPath)
                    &lt;span class="pl-k"&gt;-&amp;gt;&lt;/span&gt; UICollectionViewCell {
    Nuke.&lt;span class="pl-c1"&gt;loadImage&lt;/span&gt;(&lt;span class="pl-c1"&gt;with&lt;/span&gt;: url, &lt;span class="pl-c1"&gt;into&lt;/span&gt;: cell.&lt;span class="pl-smi"&gt;imageView&lt;/span&gt;)
}&lt;/pre&gt;&lt;/div&gt;
&lt;blockquote&gt;
&lt;p&gt;The requests also get canceled automatically when the views are deallocated. Call &lt;code&gt;Nuke.cancelRequest(for: imageView)&lt;/code&gt; to cancel the request manually.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3&gt;&lt;a id="user-content-placeholders-transitions-content-modes" class="anchor" aria-hidden="true" href="#placeholders-transitions-content-modes"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Placeholders, Transitions, Content Modes&lt;/h3&gt;
&lt;p&gt;Use &lt;code&gt;ImageLoadingOptions&lt;/code&gt; to set a &lt;code&gt;placeholder&lt;/code&gt;, select one of the built-in &lt;code&gt;transitions&lt;/code&gt;, or provide a custom one.&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;let&lt;/span&gt; options &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;ImageLoadingOptions&lt;/span&gt;(
    &lt;span class="pl-c1"&gt;placeholder&lt;/span&gt;: &lt;span class="pl-c1"&gt;UIImage&lt;/span&gt;(&lt;span class="pl-c1"&gt;named&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;placeholder&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;),
    &lt;span class="pl-c1"&gt;transition&lt;/span&gt;: .&lt;span class="pl-c1"&gt;fadeIn&lt;/span&gt;(&lt;span class="pl-c1"&gt;duration&lt;/span&gt;: &lt;span class="pl-c1"&gt;0.33&lt;/span&gt;)
)
Nuke.&lt;span class="pl-c1"&gt;loadImage&lt;/span&gt;(&lt;span class="pl-c1"&gt;with&lt;/span&gt;: url, &lt;span class="pl-c1"&gt;options&lt;/span&gt;: options, &lt;span class="pl-c1"&gt;into&lt;/span&gt;: imageView)&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;You can even customize content modes per image type:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;let&lt;/span&gt; options &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;ImageLoadingOptions&lt;/span&gt;(
    &lt;span class="pl-c1"&gt;placeholder&lt;/span&gt;: &lt;span class="pl-c1"&gt;UIImage&lt;/span&gt;(&lt;span class="pl-c1"&gt;named&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;placeholder&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;),
    &lt;span class="pl-c1"&gt;failureImage&lt;/span&gt;: &lt;span class="pl-c1"&gt;UIImage&lt;/span&gt;(&lt;span class="pl-c1"&gt;named&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;failureImage&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;),
    &lt;span class="pl-c1"&gt;contentModes&lt;/span&gt;: .&lt;span class="pl-k"&gt;init&lt;/span&gt;(&lt;span class="pl-c1"&gt;success&lt;/span&gt;: .&lt;span class="pl-smi"&gt;scaleAspectFill&lt;/span&gt;, &lt;span class="pl-c1"&gt;failure&lt;/span&gt;: .&lt;span class="pl-smi"&gt;center&lt;/span&gt;, &lt;span class="pl-c1"&gt;placeholder&lt;/span&gt;: .&lt;span class="pl-smi"&gt;center&lt;/span&gt;)
)&lt;/pre&gt;&lt;/div&gt;
&lt;blockquote&gt;
&lt;p&gt;In case you want all image views to have the same behavior, you can modify &lt;code&gt;ImageLoadingOptions.shared&lt;/code&gt;.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3&gt;&lt;a id="user-content-imagerequest" class="anchor" aria-hidden="true" href="#imagerequest"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;code&gt;ImageRequest&lt;/code&gt;&lt;/h3&gt;
&lt;p&gt;&lt;code&gt;ImageRequest&lt;/code&gt; allows you to set image processors, change the request priority and more:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;let&lt;/span&gt; request &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;ImageRequest&lt;/span&gt;(
    &lt;span class="pl-c1"&gt;url&lt;/span&gt;: &lt;span class="pl-c1"&gt;URL&lt;/span&gt;(&lt;span class="pl-c1"&gt;string&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;http://...&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;),
    &lt;span class="pl-c1"&gt;processors&lt;/span&gt;: [ImageProcessor.&lt;span class="pl-c1"&gt;Resize&lt;/span&gt;(&lt;span class="pl-c1"&gt;size&lt;/span&gt;: imageView.&lt;span class="pl-smi"&gt;bounds&lt;/span&gt;.&lt;span class="pl-c1"&gt;size&lt;/span&gt;)],
    &lt;span class="pl-c1"&gt;priority&lt;/span&gt;: .&lt;span class="pl-smi"&gt;high&lt;/span&gt;
)&lt;/pre&gt;&lt;/div&gt;
&lt;blockquote&gt;
&lt;p&gt;Another way to apply processors is by setting the default &lt;code&gt;processors&lt;/code&gt; on &lt;code&gt;ImagePipeline.Configuration&lt;/code&gt;. These processors will be applied to all images loaded by the pipeline. If the request has a non-empty array of &lt;code&gt;processors&lt;/code&gt;, they are going to be applied instead.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;The advanced options available via &lt;code&gt;ImageRequestOptions&lt;/code&gt;. For example, you can provide a &lt;code&gt;filteredURL&lt;/code&gt; to be used as a key for caching in case the URL contains transient query parameters.&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;let&lt;/span&gt; request &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;ImageRequest&lt;/span&gt;(
    &lt;span class="pl-c1"&gt;url&lt;/span&gt;: &lt;span class="pl-c1"&gt;URL&lt;/span&gt;(&lt;span class="pl-c1"&gt;string&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;http://example.com/image.jpeg?token=123&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)&lt;span class="pl-k"&gt;!&lt;/span&gt;,
    &lt;span class="pl-c1"&gt;options&lt;/span&gt;: &lt;span class="pl-c1"&gt;ImageRequestOptions&lt;/span&gt;(
        &lt;span class="pl-c1"&gt;filteredURL&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;http://example.com/image.jpeg&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;
    )
)&lt;/pre&gt;&lt;/div&gt;
&lt;blockquote&gt;
&lt;p&gt;There are more options available, to see all of them check the inline documentation for &lt;code&gt;ImageRequestOptions&lt;/code&gt;.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;br&gt;
&lt;h1&gt;&lt;a id="user-content-image-processing" class="anchor" aria-hidden="true" href="#image-processing"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Image Processing&lt;/h1&gt;
&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="https://user-images.githubusercontent.com/1567433/59151404-cb944300-8a32-11e9-9c58-dbed9789080f.png"&gt;&lt;img align="right" src="https://user-images.githubusercontent.com/1567433/59151404-cb944300-8a32-11e9-9c58-dbed9789080f.png" width="360" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Nuke features a powerful and efficient image processing infrastructure with multiple built-in processors including &lt;code&gt;ImageProcessor.Resize&lt;/code&gt;, &lt;code&gt;.Circle&lt;/code&gt;, &lt;code&gt;.RoundedCorners&lt;/code&gt;, &lt;code&gt;.CoreImageFilter&lt;/code&gt;, &lt;code&gt;.GaussianBlur&lt;/code&gt;.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;This and other screenshots are from the demo project included in the repo.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3&gt;&lt;a id="user-content-resize" class="anchor" aria-hidden="true" href="#resize"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;code&gt;Resize&lt;/code&gt;&lt;/h3&gt;
&lt;p&gt;To resize an image, use &lt;code&gt;ImageProcessor.Resize&lt;/code&gt;:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-c1"&gt;ImageRequest&lt;/span&gt;(&lt;span class="pl-c1"&gt;url&lt;/span&gt;: url, &lt;span class="pl-c1"&gt;processors&lt;/span&gt;: [
    ImageProcessor.&lt;span class="pl-c1"&gt;Resize&lt;/span&gt;(&lt;span class="pl-c1"&gt;size&lt;/span&gt;: imageView.&lt;span class="pl-smi"&gt;bounds&lt;/span&gt;.&lt;span class="pl-c1"&gt;size&lt;/span&gt;)
])&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;By default, the target size is in points. When the image is loaded, Nuke will scale it to fill the target area maintaining the aspect ratio. To crop the image set &lt;code&gt;crop&lt;/code&gt; to &lt;code&gt;true&lt;/code&gt;.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;There are a few other options available, see &lt;code&gt;ImageProcessor.Resize&lt;/code&gt; documentation for more info.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3&gt;&lt;a id="user-content-gaussianblur-core-image" class="anchor" aria-hidden="true" href="#gaussianblur-core-image"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;code&gt;GaussianBlur&lt;/code&gt;, Core Image&lt;/h3&gt;
&lt;p&gt;&lt;code&gt;ImageProcessor.GaussianBlur&lt;/code&gt; blurs the input image. It is powered by the native &lt;code&gt;CoreImage&lt;/code&gt; framework. To apply other filters, use &lt;code&gt;ImageProcessor.CoreImageFilter&lt;/code&gt;:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;ImageProcessor.&lt;span class="pl-c1"&gt;CoreImageFilter&lt;/span&gt;(&lt;span class="pl-c1"&gt;name&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;CISepiaTone&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)&lt;/pre&gt;&lt;/div&gt;
&lt;blockquote&gt;
&lt;p&gt;For a complete list of Core Image filters see &lt;a href="https://developer.apple.com/library/archive/documentation/GraphicsImaging/Reference/CoreImageFilterReference/index.html" rel="nofollow"&gt;Core Image Filter Reference&lt;/a&gt;.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3&gt;&lt;a id="user-content-custom-processors" class="anchor" aria-hidden="true" href="#custom-processors"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Custom Processors&lt;/h3&gt;
&lt;p&gt;Custom processors need to conform to &lt;code&gt;ImageProcessing&lt;/code&gt; protocol:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;public&lt;/span&gt; &lt;span class="pl-k"&gt;protocol&lt;/span&gt; &lt;span class="pl-en"&gt;ImageProcessing&lt;/span&gt; {
    &lt;span class="pl-k"&gt;var&lt;/span&gt; identifier&lt;span class="pl-k"&gt;:&lt;/span&gt; &lt;span class="pl-c1"&gt;String&lt;/span&gt; { &lt;span class="pl-k"&gt;get&lt;/span&gt; }
    &lt;span class="pl-k"&gt;var&lt;/span&gt; hashableIdentifier&lt;span class="pl-k"&gt;:&lt;/span&gt; &lt;span class="pl-c1"&gt;AnyHashable&lt;/span&gt; { &lt;span class="pl-k"&gt;get&lt;/span&gt; }

    &lt;span class="pl-k"&gt;func&lt;/span&gt; &lt;span class="pl-en"&gt;process&lt;/span&gt;(&lt;span class="pl-smi"&gt;&lt;span class="pl-en"&gt;image&lt;/span&gt;&lt;/span&gt;: Image, &lt;span class="pl-smi"&gt;&lt;span class="pl-en"&gt;context&lt;/span&gt;&lt;/span&gt;: ImageProcessingContext&lt;span class="pl-k"&gt;?&lt;/span&gt;) &lt;span class="pl-k"&gt;-&amp;gt;&lt;/span&gt; Image&lt;span class="pl-k"&gt;?&lt;/span&gt;
}&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;The &lt;code&gt;process&lt;/code&gt; method is self-explanatory. &lt;code&gt;identifier: String&lt;/code&gt; is used by disk caches, and &lt;code&gt;hashableIdentifier: AnyHashable&lt;/code&gt; is used by memory caches for which string manipulations would be too slow.&lt;/p&gt;
&lt;p&gt;For one-off operations, use &lt;code&gt;ImageProcessor.Anonymous&lt;/code&gt; to create a processor with a closure.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-smart-decompression" class="anchor" aria-hidden="true" href="#smart-decompression"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Smart Decompression&lt;/h3&gt;
&lt;p&gt;When you instantiate &lt;code&gt;UIImage&lt;/code&gt; with &lt;code&gt;Data&lt;/code&gt;, the data can be in a compressed format like &lt;code&gt;JPEG&lt;/code&gt;. &lt;code&gt;UIImage&lt;/code&gt; does &lt;em&gt;not&lt;/em&gt; eagerly decompress this data until you display it. This leads to performance issues like scroll view stuttering. To avoid these it, Nuke automatically decompresses the data in the background. Decompression only runs if needed, it won't run for already processed images.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;See &lt;a href="https://developer.apple.com/videos/play/wwdc2018/219" rel="nofollow"&gt;Image and Graphics Best Practices&lt;/a&gt; to learn more about image decoding and downsampling.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;br&gt;
&lt;h1&gt;&lt;a id="user-content-image-pipeline" class="anchor" aria-hidden="true" href="#image-pipeline"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Image Pipeline&lt;/h1&gt;
&lt;p&gt;At the core of Nuke is the &lt;code&gt;ImagePipeline&lt;/code&gt; class. Use the pipeline directly to load images without displaying them:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;let&lt;/span&gt; task &lt;span class="pl-k"&gt;=&lt;/span&gt; ImagePipeline.&lt;span class="pl-smi"&gt;shared&lt;/span&gt;.&lt;span class="pl-c1"&gt;loadImage&lt;/span&gt;(
    &lt;span class="pl-c1"&gt;with&lt;/span&gt;: url,
    &lt;span class="pl-c1"&gt;progress&lt;/span&gt;: { &lt;span class="pl-c1"&gt;_&lt;/span&gt;, completed, total &lt;span class="pl-k"&gt;in&lt;/span&gt;
        &lt;span class="pl-c1"&gt;print&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;progress updated&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
    },
    &lt;span class="pl-c1"&gt;completion&lt;/span&gt;: { result&lt;span class="pl-k"&gt;:&lt;/span&gt; Result&lt;span class="pl-k"&gt;&amp;lt;&lt;/span&gt;ImageResponse, ImagePipeline.&lt;span class="pl-c1"&gt;Error&lt;/span&gt;&lt;span class="pl-k"&gt;&amp;gt;&lt;/span&gt; &lt;span class="pl-k"&gt;in&lt;/span&gt;
        &lt;span class="pl-c1"&gt;print&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;task completed&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
    }
)&lt;/pre&gt;&lt;/div&gt;
&lt;blockquote&gt;
&lt;p&gt;To download the data without doing any expensive decoding or processing, use &lt;code&gt;loadData(with:progress:completion:)&lt;/code&gt;.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3&gt;&lt;a id="user-content-imagetask" class="anchor" aria-hidden="true" href="#imagetask"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;code&gt;ImageTask&lt;/code&gt;&lt;/h3&gt;
&lt;p&gt;When you start the request, the pipeline returns an &lt;code&gt;ImageTask&lt;/code&gt; object, which can be used for cancelation and more.&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;task.&lt;span class="pl-c1"&gt;cancel&lt;/span&gt;()
task.&lt;span class="pl-smi"&gt;priority&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; .&lt;span class="pl-smi"&gt;high&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h3&gt;&lt;a id="user-content-customize-image-pipeline" class="anchor" aria-hidden="true" href="#customize-image-pipeline"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Customize Image Pipeline&lt;/h3&gt;
&lt;p&gt;If you want to build a system that fits your specific needs, you won't be disappointed. There are a &lt;em&gt;lot of things&lt;/em&gt; to tweak. You can set custom data loaders and caches, configure image encoders and decoders, change the number of concurrent operations for each individual stage, disable and enable features like deduplication and rate limiting, and more.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;To learn more see the inline documentation for &lt;code&gt;ImagePipeline.Configuration&lt;/code&gt; and &lt;a href="#h_design"&gt;Image Pipeline Overview&lt;/a&gt;.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="https://user-images.githubusercontent.com/1567433/59148462-94f60280-8a09-11e9-906a-6c7209b8f8c8.png"&gt;&lt;img align="right" src="https://user-images.githubusercontent.com/1567433/59148462-94f60280-8a09-11e9-906a-6c7209b8f8c8.png" width="360" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Here are the protocols which can be used for customization:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;DataLoading&lt;/code&gt; – Download (or return cached) image data&lt;/li&gt;
&lt;li&gt;&lt;code&gt;DataCaching&lt;/code&gt; – Store image data on disk&lt;/li&gt;
&lt;li&gt;&lt;code&gt;ImageDecoding&lt;/code&gt; – Convert data into images&lt;/li&gt;
&lt;li&gt;&lt;code&gt;ImageEncoding&lt;/code&gt; - Convert images into data&lt;/li&gt;
&lt;li&gt;&lt;code&gt;ImageProcessing&lt;/code&gt; – Apply image transformations&lt;/li&gt;
&lt;li&gt;&lt;code&gt;ImageCaching&lt;/code&gt; – Store images into a memory cache&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;The entire configuration is described by the &lt;code&gt;ImagePipeline.Configuration&lt;/code&gt; struct. To create a pipeline with a custom configuration either call the &lt;code&gt;ImagePipeline(configuration:)&lt;/code&gt; initializer or use the convenience one:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;let&lt;/span&gt; pipeline &lt;span class="pl-k"&gt;=&lt;/span&gt; ImagePipeline {
    &lt;span class="pl-c1"&gt;$0&lt;/span&gt;.&lt;span class="pl-smi"&gt;dataLoader&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-k"&gt;...&lt;/span&gt;
    &lt;span class="pl-c1"&gt;$0&lt;/span&gt;.&lt;span class="pl-smi"&gt;dataLoadingQueue&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-k"&gt;...&lt;/span&gt;
    &lt;span class="pl-c1"&gt;$0&lt;/span&gt;.&lt;span class="pl-smi"&gt;imageCache&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-k"&gt;...&lt;/span&gt;
    &lt;span class="pl-k"&gt;...&lt;/span&gt;
}&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;And then set the new pipeline as default:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;ImagePipeline.&lt;span class="pl-smi"&gt;shared&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; pipeline&lt;/pre&gt;&lt;/div&gt;
&lt;h3&gt;&lt;a id="user-content-default-image-pipeline" class="anchor" aria-hidden="true" href="#default-image-pipeline"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Default Image Pipeline&lt;/h3&gt;
&lt;p&gt;The default image pipeline is initialized with the following dependencies:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Shared image cache with a size limit of ~20% of available RAM.&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;imageCache &lt;span class="pl-k"&gt;=&lt;/span&gt; ImageCache.&lt;span class="pl-smi"&gt;shared&lt;/span&gt;

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Data loader with a default `URLSessionConfiguration` and a custom `URLCache`&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; with memory capacity 0, and disk capacity 150 MB.&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;dataLoader &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;DataLoader&lt;/span&gt;()

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Custom aggressive disk cache is disabled by default.&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;dataCache &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;nil&lt;/span&gt;

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; By default uses the decoder from the global registry and the default encoder.&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;makeImageDecoder &lt;span class="pl-k"&gt;=&lt;/span&gt; { context &lt;span class="pl-k"&gt;in&lt;/span&gt; ImageDecoderRegistry.&lt;span class="pl-smi"&gt;shared&lt;/span&gt;.&lt;span class="pl-c1"&gt;decoder&lt;/span&gt;(&lt;span class="pl-c1"&gt;for&lt;/span&gt;: context) }
makeImageEncoder &lt;span class="pl-k"&gt;=&lt;/span&gt; { &lt;span class="pl-c1"&gt;_&lt;/span&gt; &lt;span class="pl-k"&gt;in&lt;/span&gt; &lt;span class="pl-c1"&gt;ImageEncoder&lt;/span&gt;() }&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Each operation in the pipeline runs on a dedicated queue:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;dataLoadingQueue.&lt;span class="pl-smi"&gt;maxConcurrentOperationCount&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;6&lt;/span&gt;
dataCachingQueue.&lt;span class="pl-smi"&gt;maxConcurrentOperationCount&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;2&lt;/span&gt;
imageDecodingQueue.&lt;span class="pl-smi"&gt;maxConcurrentOperationCount&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;1&lt;/span&gt;
imageEncodingQueue.&lt;span class="pl-smi"&gt;maxConcurrentOperationCount&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;1&lt;/span&gt;
imageProcessingQueue.&lt;span class="pl-smi"&gt;maxConcurrentOperationCount&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;2&lt;/span&gt;
imageDecompressingQueue.&lt;span class="pl-smi"&gt;maxConcurrentOperationCount&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;2&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;There is a list of pipeline settings which you can tweak:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Automatically decompress images in the background by default.&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;isDecompressionEnabled &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;true&lt;/span&gt;

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Configure which images to store in the custom disk cache.&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;isDataCachingForOriginalImageDataEnabled &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;true&lt;/span&gt;
isDataCachingForProcessedImagesEnabled &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;false&lt;/span&gt;

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Avoid doing any duplicated work when loading or processing images.&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;isDeduplicationEnabled &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;true&lt;/span&gt;

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Rate limit the requests to prevent trashing of the subsystems.&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;isRateLimiterEnabled &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;true&lt;/span&gt;

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Progressive decoding is an opt-in feature because it is resource intensive.&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;isProgressiveDecodingEnabled &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;false&lt;/span&gt;

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; If the data task is terminated (either because of a failure or a&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; cancellation) and the image was partially loaded, the next load will&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; resume where it was left off.&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;isResumableDataEnabled &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;true&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;And also a few global options shared between all pipelines:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;ImagePipeline.&lt;span class="pl-smi"&gt;Configuration&lt;/span&gt;.&lt;span class="pl-smi"&gt;isAnimatedImageDataEnabled&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;false&lt;/span&gt;

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Enable to start using `os_signpost` to monitor the pipeline&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; performance using Instruments.&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;ImagePipeline.&lt;span class="pl-smi"&gt;Configuration&lt;/span&gt;.&lt;span class="pl-smi"&gt;isSignpostLoggingEnabled&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;false&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;br&gt;
&lt;h1&gt;&lt;a id="user-content-caching" class="anchor" aria-hidden="true" href="#caching"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Caching&lt;/h1&gt;
&lt;h3&gt;&lt;a id="user-content-lru-memory-cache" class="anchor" aria-hidden="true" href="#lru-memory-cache"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;LRU Memory Cache&lt;/h3&gt;
&lt;p&gt;Nuke's default &lt;code&gt;ImagePipeline&lt;/code&gt; has two cache layers.&lt;/p&gt;
&lt;p&gt;First, there is a memory cache for storing processed images which are ready for display.&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Configure cache&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;ImageCache.&lt;span class="pl-smi"&gt;shared&lt;/span&gt;.&lt;span class="pl-smi"&gt;costLimit&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;1024&lt;/span&gt; &lt;span class="pl-k"&gt;*&lt;/span&gt; &lt;span class="pl-c1"&gt;1024&lt;/span&gt; &lt;span class="pl-k"&gt;*&lt;/span&gt; &lt;span class="pl-c1"&gt;100&lt;/span&gt; &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; 100 MB&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;ImageCache.&lt;span class="pl-smi"&gt;shared&lt;/span&gt;.&lt;span class="pl-smi"&gt;countLimit&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;100&lt;/span&gt;
ImageCache.&lt;span class="pl-smi"&gt;shared&lt;/span&gt;.&lt;span class="pl-smi"&gt;ttl&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;120&lt;/span&gt; &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Invalidate image after 120 sec&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Read and write images&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;&lt;span class="pl-k"&gt;let&lt;/span&gt; request &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;ImageRequest&lt;/span&gt;(&lt;span class="pl-c1"&gt;url&lt;/span&gt;: url)
ImageCache.&lt;span class="pl-smi"&gt;shared&lt;/span&gt;[request] &lt;span class="pl-k"&gt;=&lt;/span&gt; image
&lt;span class="pl-k"&gt;let&lt;/span&gt; image &lt;span class="pl-k"&gt;=&lt;/span&gt; ImageCache.&lt;span class="pl-smi"&gt;shared&lt;/span&gt;[request]

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Clear cache&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;ImageCache.&lt;span class="pl-smi"&gt;shared&lt;/span&gt;.&lt;span class="pl-c1"&gt;removeAll&lt;/span&gt;()&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;code&gt;ImageCache&lt;/code&gt; uses the &lt;a href="https://en.wikipedia.org/wiki/Cache_replacement_policies#Least_recently_used_(LRU)" rel="nofollow"&gt;LRU&lt;/a&gt; algorithm – least recently used entries are removed first during the sweep.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-http-disk-cache" class="anchor" aria-hidden="true" href="#http-disk-cache"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;HTTP Disk Cache&lt;/h3&gt;
&lt;p&gt;Unprocessed image data is stored with &lt;code&gt;URLCache&lt;/code&gt;.&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Configure cache&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;DataLoader.&lt;span class="pl-smi"&gt;sharedUrlCache&lt;/span&gt;.&lt;span class="pl-smi"&gt;diskCapacity&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;100&lt;/span&gt;
DataLoader.&lt;span class="pl-smi"&gt;sharedUrlCache&lt;/span&gt;.&lt;span class="pl-smi"&gt;memoryCapacity&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;0&lt;/span&gt;

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Read and write responses&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;&lt;span class="pl-k"&gt;let&lt;/span&gt; request &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;ImageRequest&lt;/span&gt;(&lt;span class="pl-c1"&gt;url&lt;/span&gt;: url)
&lt;span class="pl-k"&gt;let&lt;/span&gt; &lt;span class="pl-c1"&gt;_&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; DataLoader.&lt;span class="pl-smi"&gt;sharedUrlCache&lt;/span&gt;.&lt;span class="pl-c1"&gt;cachedResponse&lt;/span&gt;(&lt;span class="pl-c1"&gt;for&lt;/span&gt;: request.&lt;span class="pl-smi"&gt;urlRequest&lt;/span&gt;)
DataLoader.&lt;span class="pl-smi"&gt;sharedUrlCache&lt;/span&gt;.&lt;span class="pl-c1"&gt;removeCachedResponse&lt;/span&gt;(&lt;span class="pl-c1"&gt;for&lt;/span&gt;: request.&lt;span class="pl-smi"&gt;urlRequest&lt;/span&gt;)

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Clear cache&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;DataLoader.&lt;span class="pl-smi"&gt;sharedUrlCache&lt;/span&gt;.&lt;span class="pl-c1"&gt;removeAllCachedResponses&lt;/span&gt;()&lt;/pre&gt;&lt;/div&gt;
&lt;h3&gt;&lt;a id="user-content-aggressive-lru-disk-cache" class="anchor" aria-hidden="true" href="#aggressive-lru-disk-cache"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Aggressive LRU Disk Cache&lt;/h3&gt;
&lt;p&gt;If HTTP caching is not your cup of tea, you can try using a custom LRU disk cache for fast and reliable &lt;em&gt;aggressive&lt;/em&gt; data caching (ignores &lt;a href="https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Cache-Control" rel="nofollow"&gt;HTTP cache control&lt;/a&gt;). You can enable it using the pipeline configuration.&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;ImagePipeline {
    &lt;span class="pl-c1"&gt;$0&lt;/span&gt;.&lt;span class="pl-smi"&gt;dataCache&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-k"&gt;try&lt;/span&gt;&lt;span class="pl-k"&gt;!&lt;/span&gt; &lt;span class="pl-c1"&gt;DataCache&lt;/span&gt;(&lt;span class="pl-c1"&gt;name&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;com.myapp.datacache&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)

    &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Also consider disabling the native HTTP cache, see `DataLoader`.&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;}&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;By default, the pipeline stores only the original image data. To store the processed images enable &lt;code&gt;isDataCachingForProcessedImagesEnabled&lt;/code&gt; and also consider disabling &lt;code&gt;isDataCachingForOriginalImageDataEnabled&lt;/code&gt;. Every intermediate processed image will be stored in cache. So in the following scenario, there are going to be two entries in the disk cache (three if original image cache is also enabled):&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;let&lt;/span&gt; request &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;ImageRequest&lt;/span&gt;(&lt;span class="pl-c1"&gt;url&lt;/span&gt;: url, &lt;span class="pl-c1"&gt;processors&lt;/span&gt;: [
    ImageProcessor.&lt;span class="pl-c1"&gt;Resize&lt;/span&gt;(&lt;span class="pl-c1"&gt;size&lt;/span&gt;: imageView.&lt;span class="pl-smi"&gt;bounds&lt;/span&gt;.&lt;span class="pl-c1"&gt;size&lt;/span&gt;),
    ImageProcessor.&lt;span class="pl-c1"&gt;CoreImageFilter&lt;/span&gt;(&lt;span class="pl-c1"&gt;name&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;CISepiaTone&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
])&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;To avoid storing unwanted images, compose the processors, &lt;code&gt;ImageProcessor.Composition&lt;/code&gt; is an easy way to do it.&lt;/p&gt;
&lt;br&gt;
&lt;h1&gt;&lt;a id="user-content-advanced-features" class="anchor" aria-hidden="true" href="#advanced-features"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Advanced Features&lt;/h1&gt;
&lt;h3&gt;&lt;a id="user-content-image-preheating" class="anchor" aria-hidden="true" href="#image-preheating"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Image Preheating&lt;/h3&gt;
&lt;p&gt;Prefetching images in advance can dramatically improve your app's user experience.&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;let&lt;/span&gt; preheater &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;ImagePreheater&lt;/span&gt;()
preheater.&lt;span class="pl-c1"&gt;startPreheating&lt;/span&gt;(&lt;span class="pl-c1"&gt;with&lt;/span&gt;: urls)

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Cancels all of the preheating tasks created for the given requests.&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;preheater.&lt;span class="pl-c1"&gt;stopPreheating&lt;/span&gt;(&lt;span class="pl-c1"&gt;with&lt;/span&gt;: urls)&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Keep in mind that prefetching takes up users' data and puts extra pressure on CPU and memory. To reduce the CPU and memory usage, you have an option to choose only the disk cache as a prefetching destination:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; The preheater with `.diskCache` destination will skip image data decoding&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; entirely to reduce CPU and memory usage. It will still load the image data&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; and store it in disk caches to be used later.&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;&lt;span class="pl-k"&gt;let&lt;/span&gt; preheater &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;ImagePreheater&lt;/span&gt;(&lt;span class="pl-c1"&gt;destination&lt;/span&gt;: .&lt;span class="pl-smi"&gt;diskCache&lt;/span&gt;)&lt;/pre&gt;&lt;/div&gt;
&lt;blockquote&gt;
&lt;p&gt;On iOS, you can use &lt;a href="https://developer.apple.com/reference/uikit/uitableviewdatasourceprefetching" rel="nofollow"&gt;prefetching APIs&lt;/a&gt; in combination with &lt;code&gt;ImagePreheater&lt;/code&gt; to automate the process.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3&gt;&lt;a id="user-content-progressive-decoding" class="anchor" aria-hidden="true" href="#progressive-decoding"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Progressive Decoding&lt;/h3&gt;
&lt;p&gt;To enable progressive image decoding set &lt;code&gt;isProgressiveDecodingEnabled&lt;/code&gt; configuration option to &lt;code&gt;true&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="https://user-images.githubusercontent.com/1567433/59148764-3af73c00-8a0d-11e9-9d49-ded2d509380a.png"&gt;&lt;img align="right" width="360" alt="Progressive JPEG" src="https://user-images.githubusercontent.com/1567433/59148764-3af73c00-8a0d-11e9-9d49-ded2d509380a.png" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;let&lt;/span&gt; pipeline &lt;span class="pl-k"&gt;=&lt;/span&gt; ImagePipeline {
    &lt;span class="pl-c1"&gt;$0&lt;/span&gt;.&lt;span class="pl-smi"&gt;isProgressiveDecodingEnabled&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;true&lt;/span&gt;
}&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;And that's it, the pipeline will automatically do the right thing and deliver the progressive scans via &lt;code&gt;progress&lt;/code&gt; closure as they arrive:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;let&lt;/span&gt; imageView &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;UIImageView&lt;/span&gt;()
&lt;span class="pl-k"&gt;let&lt;/span&gt; task &lt;span class="pl-k"&gt;=&lt;/span&gt; ImagePipeline.&lt;span class="pl-smi"&gt;shared&lt;/span&gt;.&lt;span class="pl-c1"&gt;loadImage&lt;/span&gt;(
    &lt;span class="pl-c1"&gt;with&lt;/span&gt;: url,
    &lt;span class="pl-c1"&gt;progress&lt;/span&gt;: { response, &lt;span class="pl-c1"&gt;_&lt;/span&gt;, &lt;span class="pl-c1"&gt;_&lt;/span&gt; &lt;span class="pl-k"&gt;in&lt;/span&gt;
        &lt;span class="pl-k"&gt;if&lt;/span&gt; &lt;span class="pl-k"&gt;let&lt;/span&gt; response &lt;span class="pl-k"&gt;=&lt;/span&gt; response {
            imageView.&lt;span class="pl-c1"&gt;image&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; response.&lt;span class="pl-c1"&gt;image&lt;/span&gt;
        }
    },
    &lt;span class="pl-c1"&gt;completion&lt;/span&gt;: { result &lt;span class="pl-k"&gt;in&lt;/span&gt;
        &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Display the final image&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;    }
)&lt;/pre&gt;&lt;/div&gt;
&lt;h3&gt;&lt;a id="user-content-animated-images" class="anchor" aria-hidden="true" href="#animated-images"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Animated Images&lt;/h3&gt;
&lt;p&gt;Nuke extends &lt;code&gt;UIImage&lt;/code&gt; with an &lt;code&gt;animatedImageData&lt;/code&gt; property. To enable it, set &lt;code&gt;ImagePipeline.Configuration.isAnimatedImageDataEnabled&lt;/code&gt; to &lt;code&gt;true&lt;/code&gt;. If you do, the pipeline will start attaching the original image data to the animated images.&lt;/p&gt;
&lt;p&gt;There is no built-in way to render those images, but there are two extensions available: &lt;a href="https://github.com/kean/Nuke-FLAnimatedImage-Plugin"&gt;FLAnimatedImage&lt;/a&gt; and &lt;a href="https://github.com/kean/Nuke-Gifu-Plugin"&gt;Gifu&lt;/a&gt; which are both fast and efficient.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;code&gt;GIF&lt;/code&gt; is not the most efficient format for transferring and displaying animated images. The current best practice is to &lt;a href="https://developers.google.com/web/fundamentals/performance/optimizing-content-efficiency/replace-animated-gifs-with-video/" rel="nofollow"&gt;use short videos instead of GIFs&lt;/a&gt; (e.g. &lt;code&gt;MP4&lt;/code&gt;, &lt;code&gt;WebM&lt;/code&gt;). There is a PoC available in the demo project which uses Nuke to load, cache and display an &lt;code&gt;MP4&lt;/code&gt; video.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3&gt;&lt;a id="user-content-webp" class="anchor" aria-hidden="true" href="#webp"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;WebP&lt;/h3&gt;
&lt;p&gt;WebP support is provided by &lt;a href="https://github.com/ryokosuge/Nuke-WebP-Plugin"&gt;Nuke WebP Plugin&lt;/a&gt; built by &lt;a href="https://github.com/ryokosuge"&gt;Ryo Kosuge&lt;/a&gt;. Please follow the instructions from the repo.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-rxnuke" class="anchor" aria-hidden="true" href="#rxnuke"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;RxNuke&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://github.com/kean/RxNuke"&gt;RxNuke&lt;/a&gt; adds &lt;a href="https://github.com/ReactiveX/RxSwift"&gt;RxSwift&lt;/a&gt; extensions for Nuke and enables common use cases: &lt;a href="https://github.com/kean/RxNuke#going-from-low-to-high-resolution"&gt;Going from low to high resolution&lt;/a&gt; | &lt;a href="https://github.com/kean/RxNuke#loading-the-first-available-image"&gt;Loading the first available image&lt;/a&gt; | &lt;a href="https://github.com/kean/RxNuke#showing-stale-image-while-validating-it"&gt;Showing stale image while validating it&lt;/a&gt; | &lt;a href="https://github.com/kean/RxNuke#load-multiple-images-display-all-at-once"&gt;Load multiple images, display all at once&lt;/a&gt; | &lt;a href="https://github.com/kean/RxNuke#auto-retry"&gt;Auto retry on failures&lt;/a&gt; | &lt;a href="https://github.com/kean/RxNuke#use-cases"&gt;And more&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;To get a taste of what you can do with this extension, take a look at how easy it is to load the low resolution image first and then switch to high resolution:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;let&lt;/span&gt; pipeline &lt;span class="pl-k"&gt;=&lt;/span&gt; ImagePipeline.&lt;span class="pl-smi"&gt;shared&lt;/span&gt;
Observable.&lt;span class="pl-c1"&gt;concat&lt;/span&gt;(pipeline.&lt;span class="pl-c1"&gt;loadImage&lt;/span&gt;(&lt;span class="pl-c1"&gt;with&lt;/span&gt;: lowResUrl).&lt;span class="pl-smi"&gt;orEmpty&lt;/span&gt;,
                  pipeline.&lt;span class="pl-c1"&gt;loadImage&lt;/span&gt;(&lt;span class="pl-c1"&gt;with&lt;/span&gt;: highResUtl).&lt;span class="pl-smi"&gt;orEmpty&lt;/span&gt;)
    .&lt;span class="pl-c1"&gt;subscribe&lt;/span&gt;(&lt;span class="pl-c1"&gt;onNext&lt;/span&gt;: { imageView.&lt;span class="pl-c1"&gt;image&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;$0&lt;/span&gt; })
    .&lt;span class="pl-c1"&gt;disposed&lt;/span&gt;(&lt;span class="pl-c1"&gt;by&lt;/span&gt;: disposeBag)&lt;/pre&gt;&lt;/div&gt;
&lt;br&gt;
&lt;p&gt;&lt;a name="user-content-h_design"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h1&gt;&lt;a id="user-content-image-pipeline-overview" class="anchor" aria-hidden="true" href="#image-pipeline-overview"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Image Pipeline Overview&lt;/h1&gt;
&lt;p&gt;This section describes in detail what happens when you perform a call like &lt;code&gt;Nuke.loadImage(with: url, into: view)&lt;/code&gt;.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;As a visual aid, use this &lt;a href="https://github.com/kean/Nuke/blob/8.0/Documentation/Assets/image-pipeline.svg"&gt;Block Diagram&lt;/a&gt;.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;First, Nuke synchronously checks if the image is stored in the memory cache. If the image is not in memory, Nuke calls &lt;code&gt;pipeline.loadImage(with: request)&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;The pipeline first checks if the image or image data exists in any of its caches. It checks if the processed image exists in the memory cache, then if the processed image data exists in the custom data cache (disabled by default), then if the data cache contains the original image data. Only if there is no cached data, the pipeline will start loading the data. When the data is loaded the pipeline decodes it, applies the processors, and decompresses the image in the background.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-data-loading-and-caching" class="anchor" aria-hidden="true" href="#data-loading-and-caching"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Data Loading and Caching&lt;/h3&gt;
&lt;p&gt;A &lt;code&gt;DataLoader&lt;/code&gt; class uses &lt;a href="https://developer.apple.com/reference/foundation/nsurlsession" rel="nofollow"&gt;&lt;code&gt;URLSession&lt;/code&gt;&lt;/a&gt; to load image data. The data is cached on disk using &lt;a href="https://developer.apple.com/reference/foundation/urlcache" rel="nofollow"&gt;&lt;code&gt;URLCache&lt;/code&gt;&lt;/a&gt;, which by default is initialized with memory capacity of 0 MB (only stores processed images in memory) and disk capacity of 150 MB.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;See &lt;a href="https://kean.github.io/post/image-caching" rel="nofollow"&gt;Image Caching Guide&lt;/a&gt; to learn more about HTTP cache.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;The &lt;code&gt;URLSession&lt;/code&gt; class natively supports the following URL schemes: &lt;code&gt;data&lt;/code&gt;, &lt;code&gt;file&lt;/code&gt;, &lt;code&gt;ftp&lt;/code&gt;, &lt;code&gt;http&lt;/code&gt;, and &lt;code&gt;https&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;Most developers either implement their own networking layer or use a third-party framework. Nuke supports both of these workflows. You can integrate your custom networking layer by implementing &lt;code&gt;DataLoading&lt;/code&gt; protocol.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;See &lt;a href="https://github.com/kean/Nuke/blob/8.0/Documentation/Guides/Third%20Party%20Libraries.md#using-other-caching-libraries"&gt;Third Party Libraries&lt;/a&gt; guide to learn more. See also &lt;a href="https://github.com/kean/Nuke-Alamofire-Plugin"&gt;Alamofire Plugin&lt;/a&gt;.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3&gt;&lt;a id="user-content-resumable-downloads" class="anchor" aria-hidden="true" href="#resumable-downloads"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Resumable Downloads&lt;/h3&gt;
&lt;p&gt;If the data task is terminated (either because of a failure or a cancelation) and the image was partially loaded, the next load will resume where it was left off. Resumable downloads require the server to support &lt;a href="https://developer.mozilla.org/en-US/docs/Web/HTTP/Range_requests" rel="nofollow"&gt;HTTP Range Requests&lt;/a&gt;. Nuke supports both validators (&lt;code&gt;ETag&lt;/code&gt; and &lt;code&gt;Last-Modified&lt;/code&gt;). The resumable downloads are enabled by default.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-memory-cache" class="anchor" aria-hidden="true" href="#memory-cache"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Memory Cache&lt;/h3&gt;
&lt;p&gt;The processed images are stored in a fast in-memory cache (&lt;code&gt;ImageCache&lt;/code&gt;). It uses &lt;a href="https://en.wikipedia.org/wiki/Cache_algorithms#Examples" rel="nofollow"&gt;LRU (least recently used)&lt;/a&gt; replacement algorithm and has a limit of ~20% of available RAM. &lt;code&gt;ImageCache&lt;/code&gt; automatically evicts images on memory warnings and removes a portion of its contents when the application enters background mode.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-deduplication" class="anchor" aria-hidden="true" href="#deduplication"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Deduplication&lt;/h3&gt;
&lt;p&gt;The pipeline avoids doing any duplicated work when loading images. For example, let's take these two requests:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;let&lt;/span&gt; url &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;URL&lt;/span&gt;(&lt;span class="pl-c1"&gt;string&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;http://example.com/image&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
pipeline.&lt;span class="pl-c1"&gt;loadImage&lt;/span&gt;(&lt;span class="pl-c1"&gt;with&lt;/span&gt;: &lt;span class="pl-c1"&gt;ImageRequest&lt;/span&gt;(&lt;span class="pl-c1"&gt;url&lt;/span&gt;: url, &lt;span class="pl-c1"&gt;processors&lt;/span&gt;: [
    ImageProcessor.&lt;span class="pl-c1"&gt;Resize&lt;/span&gt;(&lt;span class="pl-c1"&gt;size&lt;/span&gt;: &lt;span class="pl-c1"&gt;CGSize&lt;/span&gt;(&lt;span class="pl-c1"&gt;width&lt;/span&gt;: &lt;span class="pl-c1"&gt;44&lt;/span&gt;, &lt;span class="pl-c1"&gt;height&lt;/span&gt;: &lt;span class="pl-c1"&gt;44&lt;/span&gt;)),
    ImageProcessor.&lt;span class="pl-c1"&gt;GaussianBlur&lt;/span&gt;(&lt;span class="pl-c1"&gt;radius&lt;/span&gt;: &lt;span class="pl-c1"&gt;8&lt;/span&gt;)
]))
pipeline.&lt;span class="pl-c1"&gt;loadImage&lt;/span&gt;(&lt;span class="pl-c1"&gt;with&lt;/span&gt;: &lt;span class="pl-c1"&gt;ImageRequest&lt;/span&gt;(&lt;span class="pl-c1"&gt;url&lt;/span&gt;: url, &lt;span class="pl-c1"&gt;processors&lt;/span&gt;: [
    ImageProcessor.&lt;span class="pl-c1"&gt;Resize&lt;/span&gt;(&lt;span class="pl-c1"&gt;size&lt;/span&gt;: &lt;span class="pl-c1"&gt;CGSize&lt;/span&gt;(&lt;span class="pl-c1"&gt;width&lt;/span&gt;: &lt;span class="pl-c1"&gt;44&lt;/span&gt;, &lt;span class="pl-c1"&gt;height&lt;/span&gt;: &lt;span class="pl-c1"&gt;44&lt;/span&gt;))
]))&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Nuke will load the data only once, resize the image once and blur it also only once. There is no duplicated work done. The work only gets cancelled when all the registered requests are, and the priority is based on the highest priority of the registered requests.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Deduplication can be disabled using &lt;code&gt;isDeduplicationEnabled&lt;/code&gt; configuration option.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3&gt;&lt;a id="user-content-performance" class="anchor" aria-hidden="true" href="#performance"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Performance&lt;/h3&gt;
&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="https://user-images.githubusercontent.com/1567433/59372512-f7bc0680-8d47-11e9-865e-f739f013ad49.png"&gt;&lt;img align="right" src="https://user-images.githubusercontent.com/1567433/59372512-f7bc0680-8d47-11e9-865e-f739f013ad49.png" width="360" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Nuke is tuned to do as little work on the main thread as possible. It uses multiple optimization techniques to achieve that: reducing the number of allocations, reducing dynamic dispatch, CoW, etc.&lt;/p&gt;
&lt;p&gt;Nuke is fully asynchronous and performs well under stress. &lt;code&gt;ImagePipeline&lt;/code&gt; schedules its operations on dedicated queues. Each queue limits the number of concurrent tasks, respects the request priorities, and cancels the work as soon as possible. Under the extreme load, &lt;code&gt;ImagePipeline&lt;/code&gt; will also rate limit the requests to prevent saturation of the underlying systems.&lt;/p&gt;
&lt;p&gt;If you want to see how the system behaves, how long each operation takes, and how many are performed in parallel, enable the &lt;code&gt;isSignpostLoggingEnabled&lt;/code&gt; option and use the &lt;code&gt;os_signpost&lt;/code&gt; Instrument. For more information see &lt;a href="https://developer.apple.com/documentation/os/logging" rel="nofollow"&gt;Apple Documentation: Logging&lt;/a&gt; and &lt;a href="https://developer.apple.com/videos/play/wwdc2018/405/" rel="nofollow"&gt;WWDC 2018: Measuring Performance Using Logging&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;&lt;a name="user-content-h_plugins"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-extensions" class="anchor" aria-hidden="true" href="#extensions"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Extensions&lt;/h3&gt;
&lt;p&gt;There is a variety of extensions available for Nuke:&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Name&lt;/th&gt;
&lt;th&gt;Description&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href="https://github.com/kean/RxNuke"&gt;&lt;strong&gt;RxNuke&lt;/strong&gt;&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href="https://github.com/ReactiveX/RxSwift"&gt;RxSwift&lt;/a&gt; extensions for Nuke with examples of common use cases solved by Rx&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href="https://github.com/kean/Nuke-Alamofire-Plugin"&gt;&lt;strong&gt;Alamofire&lt;/strong&gt;&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;Replace networking layer with &lt;a href="https://github.com/Alamofire/Alamofire"&gt;Alamofire&lt;/a&gt; and combine the power of both frameworks&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href="https://github.com/ryokosuge/Nuke-WebP-Plugin"&gt;&lt;strong&gt;WebP&lt;/strong&gt;&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;strong&gt;[Community]&lt;/strong&gt; &lt;a href="https://developers.google.com/speed/webp/" rel="nofollow"&gt;WebP&lt;/a&gt; support, built by &lt;a href="https://github.com/ryokosuge"&gt;Ryo Kosuge&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href="https://github.com/kean/Nuke-Gifu-Plugin"&gt;&lt;strong&gt;Gifu&lt;/strong&gt;&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;Use &lt;a href="https://github.com/kaishin/Gifu"&gt;Gifu&lt;/a&gt; to load and display animated GIFs&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href="https://github.com/kean/Nuke-AnimatedImage-Plugin"&gt;&lt;strong&gt;FLAnimatedImage&lt;/strong&gt;&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;Use &lt;a href="https://github.com/Flipboard/FLAnimatedImage"&gt;FLAnimatedImage&lt;/a&gt; to load and display animated GIFs&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;br&gt;
&lt;p&gt;&lt;a name="user-content-h_contribute"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h1&gt;&lt;a id="user-content-contribution" class="anchor" aria-hidden="true" href="#contribution"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Contribution&lt;/h1&gt;
&lt;p&gt;&lt;a href="https://trello.com/b/Us4rHryT/nuke" rel="nofollow"&gt;Nuke's roadmap&lt;/a&gt; is managed in Trello and is publicly available. If you'd like to contribute, please feel free to create a PR.&lt;/p&gt;
&lt;p&gt;&lt;a name="user-content-h_requirements"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h1&gt;&lt;a id="user-content-requirements" class="anchor" aria-hidden="true" href="#requirements"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Requirements&lt;/h1&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Nuke&lt;/th&gt;
&lt;th&gt;Swift&lt;/th&gt;
&lt;th&gt;Xcode&lt;/th&gt;
&lt;th&gt;Platforms&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;Nuke 8.0&lt;/td&gt;
&lt;td&gt;Swift 5.0&lt;/td&gt;
&lt;td&gt;Xcode 10.2&lt;/td&gt;
&lt;td&gt;iOS 10.0 / watchOS 3.0 / macOS 10.12 / tvOS 10.0&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Nuke 7.6&lt;/td&gt;
&lt;td&gt;Swift 4.2&lt;/td&gt;
&lt;td&gt;Xcode 10.1&lt;/td&gt;
&lt;td&gt;iOS 10.0 / watchOS 3.0 / macOS 10.12 / tvOS 10.0&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Nuke 7.2&lt;/td&gt;
&lt;td&gt;Swift 4.0&lt;/td&gt;
&lt;td&gt;Xcode 9.2&lt;/td&gt;
&lt;td&gt;iOS 9.0 / watchOS 2.0 / macOS 10.10 / tvOS 9.0&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h1&gt;&lt;a id="user-content-license" class="anchor" aria-hidden="true" href="#license"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;License&lt;/h1&gt;
&lt;p&gt;Nuke is available under the MIT license. See the LICENSE file for more info.&lt;/p&gt;
&lt;/article&gt;&lt;/div&gt;</description><author>kean</author><guid isPermaLink="false">https://github.com/kean/Nuke</guid><pubDate>Sat, 25 Jan 2020 00:06:00 GMT</pubDate></item><item><title>twostraws/HackingWithSwift #7 in Swift, This week</title><link>https://github.com/twostraws/HackingWithSwift</link><description>&lt;p&gt;&lt;i&gt;The project source code for hackingwithswift.com&lt;/i&gt;&lt;/p&gt;&lt;div id="readme" class="md" data-path="README.md"&gt;&lt;article class="markdown-body entry-content p-5" itemprop="text"&gt;&lt;h1&gt;&lt;a id="user-content-hacking-with-swift" class="anchor" aria-hidden="true" href="#hacking-with-swift"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Hacking with Swift&lt;/h1&gt;
&lt;p&gt;This is the source code to accompany Hacking with Swift, &lt;a href="https://www.hackingwithswift.com" rel="nofollow"&gt;a free tutorial series that teaches Swift coding for iOS&lt;/a&gt;. There is one folder for the classic Hacking with Swift course, which teaches UIKit and SpriteKit, and another folder for the SwiftUI edition.&lt;/p&gt;
&lt;p&gt;All projects should be compatible with Xcode 11 and iOS 13. Where appropriate, separate project files have been provided so that you can follow the tutorial from scratch without having to dig around in the completed project folder.&lt;/p&gt;
&lt;p&gt;If you have questions, you can find me on Twitter &lt;a href="https://www.twitter.com/twostraws" rel="nofollow"&gt;@twostraws&lt;/a&gt;.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-recommended-links" class="anchor" aria-hidden="true" href="#recommended-links"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Recommended links&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://gumroad.com/l/hws-book-pack" rel="nofollow"&gt;Buy the Hacking with Swift book and support my work&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;The Hacking with Swift book contains over 1300 pages of tutorials and example code, and makes a great addition to any developer's collection. Thank you to everyone who bought the book – your purchase helps me create more great Swift content in the future!&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://gumroad.com/l/proswift" rel="nofollow"&gt;Buy the Pro Swift book and video course&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Pro Swift is the sequel to Hacking with Swift, and includes a 250-page guide to helping you write faster, more efficient Swift, accompanied by over 70 videos demonstrating each technique. If you want to dive into functional programming, learn more about MVVM, get to grips with @autoclosure and @escaping, or try your hand at protocol-oriented development, Pro Swift is for you.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://gumroad.com/l/swiftcc" rel="nofollow"&gt;Buy Swift Coding Challenges&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Swift Coding Challenges is an all-new book written from the ground up to put your Swift skills to the test. I've written a variety of coding challenges that start off simple but slowly get harder, and it's down to you to solve them. I outline each problem, provide you with sample input and output, add in some hints in case you hit problems, then provide a sample solution and explain how it works.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.hackingwithswift.com/articles/77/whats-new-in-swift-4-2" rel="nofollow"&gt;What's new in Swift 4.2?&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.hackingwithswift.com/articles/50/whats-new-in-swift-4-1" rel="nofollow"&gt;What's new in Swift 4.1?&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.hackingwithswift.com/swift4" rel="nofollow"&gt;What's new in Swift 4?&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.hackingwithswift.com/swift3" rel="nofollow"&gt;What's new in Swift 3?&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.hackingwithswift.com/whats-new-in-ios-11" rel="nofollow"&gt;What's new in iOS 11?&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.hackingwithswift.com/ios10" rel="nofollow"&gt;What's new in iOS 10?&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.hackingwithswift.com/example-code" rel="nofollow"&gt;Free Swift example code&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/article&gt;&lt;/div&gt;</description><author>twostraws</author><guid isPermaLink="false">https://github.com/twostraws/HackingWithSwift</guid><pubDate>Sat, 25 Jan 2020 00:07:00 GMT</pubDate></item><item><title>daltoniam/Starscream #8 in Swift, This week</title><link>https://github.com/daltoniam/Starscream</link><description>&lt;p&gt;&lt;i&gt;Websockets in swift for iOS and OSX&lt;/i&gt;&lt;/p&gt;&lt;div id="readme" class="md" data-path="README.md"&gt;&lt;article class="markdown-body entry-content p-5" itemprop="text"&gt;&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="https://raw.githubusercontent.com/daltoniam/starscream/assets/starscream.jpg"&gt;&lt;img src="https://raw.githubusercontent.com/daltoniam/starscream/assets/starscream.jpg" alt="starscream" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Starscream is a conforming WebSocket (&lt;a href="http://tools.ietf.org/html/rfc6455" rel="nofollow"&gt;RFC 6455&lt;/a&gt;) library in Swift.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-features" class="anchor" aria-hidden="true" href="#features"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Features&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Conforms to all of the base &lt;a href="http://autobahn.ws/testsuite/" rel="nofollow"&gt;Autobahn test suite&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;Nonblocking. Everything happens in the background, thanks to GCD.&lt;/li&gt;
&lt;li&gt;TLS/WSS support.&lt;/li&gt;
&lt;li&gt;Compression Extensions support (&lt;a href="https://tools.ietf.org/html/rfc7692" rel="nofollow"&gt;RFC 7692&lt;/a&gt;)&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;&lt;a id="user-content-import-the-framework" class="anchor" aria-hidden="true" href="#import-the-framework"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Import the framework&lt;/h3&gt;
&lt;p&gt;First thing is to import the framework. See the Installation instructions on how to add the framework to your project.&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;import&lt;/span&gt; &lt;span class="pl-en"&gt;Starscream&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h3&gt;&lt;a id="user-content-connect-to-the-websocket-server" class="anchor" aria-hidden="true" href="#connect-to-the-websocket-server"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Connect to the WebSocket Server&lt;/h3&gt;
&lt;p&gt;Once imported, you can open a connection to your WebSocket server. Note that &lt;code&gt;socket&lt;/code&gt; is probably best as a property, so it doesn't get deallocated right after being setup.&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;socket &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;WebSocket&lt;/span&gt;(&lt;span class="pl-c1"&gt;url&lt;/span&gt;: &lt;span class="pl-c1"&gt;URL&lt;/span&gt;(&lt;span class="pl-c1"&gt;string&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;ws://localhost:8080/&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)&lt;span class="pl-k"&gt;!&lt;/span&gt;)
socket.&lt;span class="pl-smi"&gt;delegate&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;self&lt;/span&gt;
socket.&lt;span class="pl-c1"&gt;connect&lt;/span&gt;()&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;After you are connected, there is either a delegate or closure you can use for process WebSocket events.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-receiving-data-from-a-websocket" class="anchor" aria-hidden="true" href="#receiving-data-from-a-websocket"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Receiving data from a WebSocket&lt;/h3&gt;
&lt;p&gt;&lt;code&gt;didReceive&lt;/code&gt; receives all the WebSocket events in a single easy to handle enum.&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;func&lt;/span&gt; &lt;span class="pl-en"&gt;didReceive&lt;/span&gt;(&lt;span class="pl-smi"&gt;&lt;span class="pl-en"&gt;event&lt;/span&gt;&lt;/span&gt;: WebSocketEvent, &lt;span class="pl-smi"&gt;&lt;span class="pl-en"&gt;client&lt;/span&gt;&lt;/span&gt;: WebSocket) {
	&lt;span class="pl-k"&gt;switch&lt;/span&gt; event {
	&lt;span class="pl-k"&gt;case&lt;/span&gt; .&lt;span class="pl-c1"&gt;connected&lt;/span&gt;(&lt;span class="pl-k"&gt;let&lt;/span&gt; headers)&lt;span class="pl-k"&gt;:&lt;/span&gt;
		isConnected &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;true&lt;/span&gt;
		&lt;span class="pl-c1"&gt;print&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;websocket is connected: &lt;span class="pl-pse"&gt;\(&lt;/span&gt;&lt;span class="pl-s1"&gt;headers&lt;/span&gt;&lt;span class="pl-pse"&gt;&lt;span class="pl-s1"&gt;)&lt;/span&gt;&lt;/span&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
	&lt;span class="pl-k"&gt;case&lt;/span&gt; .&lt;span class="pl-c1"&gt;disconnected&lt;/span&gt;(&lt;span class="pl-k"&gt;let&lt;/span&gt; reason, &lt;span class="pl-k"&gt;let&lt;/span&gt; code)&lt;span class="pl-k"&gt;:&lt;/span&gt;
		isConnected &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;false&lt;/span&gt;
		&lt;span class="pl-c1"&gt;print&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;websocket is disconnected: &lt;span class="pl-pse"&gt;\(&lt;/span&gt;&lt;span class="pl-s1"&gt;reason&lt;/span&gt;&lt;span class="pl-pse"&gt;&lt;span class="pl-s1"&gt;)&lt;/span&gt;&lt;/span&gt; with code: &lt;span class="pl-pse"&gt;\(&lt;/span&gt;&lt;span class="pl-s1"&gt;code&lt;/span&gt;&lt;span class="pl-pse"&gt;&lt;span class="pl-s1"&gt;)&lt;/span&gt;&lt;/span&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
	&lt;span class="pl-k"&gt;case&lt;/span&gt; .&lt;span class="pl-c1"&gt;text&lt;/span&gt;(&lt;span class="pl-k"&gt;let&lt;/span&gt; string)&lt;span class="pl-k"&gt;:&lt;/span&gt;
		&lt;span class="pl-c1"&gt;print&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;Received text: &lt;span class="pl-pse"&gt;\(&lt;/span&gt;&lt;span class="pl-s1"&gt;string&lt;/span&gt;&lt;span class="pl-pse"&gt;&lt;span class="pl-s1"&gt;)&lt;/span&gt;&lt;/span&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
	&lt;span class="pl-k"&gt;case&lt;/span&gt; .&lt;span class="pl-c1"&gt;binary&lt;/span&gt;(&lt;span class="pl-k"&gt;let&lt;/span&gt; data)&lt;span class="pl-k"&gt;:&lt;/span&gt;
		&lt;span class="pl-c1"&gt;print&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;Received data: &lt;span class="pl-pse"&gt;\(&lt;/span&gt;&lt;span class="pl-s1"&gt;data.&lt;span class="pl-c1"&gt;count&lt;/span&gt;&lt;/span&gt;&lt;span class="pl-pse"&gt;&lt;span class="pl-s1"&gt;)&lt;/span&gt;&lt;/span&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
	&lt;span class="pl-k"&gt;case&lt;/span&gt; .&lt;span class="pl-c1"&gt;ping&lt;/span&gt;(&lt;span class="pl-c1"&gt;_&lt;/span&gt;)&lt;span class="pl-k"&gt;:&lt;/span&gt;
		&lt;span class="pl-k"&gt;break&lt;/span&gt;
	&lt;span class="pl-k"&gt;case&lt;/span&gt; .&lt;span class="pl-c1"&gt;pong&lt;/span&gt;(&lt;span class="pl-c1"&gt;_&lt;/span&gt;)&lt;span class="pl-k"&gt;:&lt;/span&gt;
		&lt;span class="pl-k"&gt;break&lt;/span&gt;
	&lt;span class="pl-k"&gt;case&lt;/span&gt; .&lt;span class="pl-c1"&gt;viablityChanged&lt;/span&gt;(&lt;span class="pl-c1"&gt;_&lt;/span&gt;)&lt;span class="pl-k"&gt;:&lt;/span&gt;
		&lt;span class="pl-k"&gt;break&lt;/span&gt;
	&lt;span class="pl-k"&gt;case&lt;/span&gt; .&lt;span class="pl-c1"&gt;reconnectSuggested&lt;/span&gt;(&lt;span class="pl-c1"&gt;_&lt;/span&gt;)&lt;span class="pl-k"&gt;:&lt;/span&gt;
		&lt;span class="pl-k"&gt;break&lt;/span&gt;
	&lt;span class="pl-k"&gt;case&lt;/span&gt; .&lt;span class="pl-smi"&gt;cancelled&lt;/span&gt;&lt;span class="pl-k"&gt;:&lt;/span&gt;
		isConnected &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;false&lt;/span&gt;
	&lt;span class="pl-k"&gt;case&lt;/span&gt; .&lt;span class="pl-c1"&gt;error&lt;/span&gt;(&lt;span class="pl-k"&gt;let&lt;/span&gt; error)&lt;span class="pl-k"&gt;:&lt;/span&gt;
		isConnected &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;false&lt;/span&gt;
		&lt;span class="pl-c1"&gt;handleError&lt;/span&gt;(error)
	}
}&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;The closure of this would be:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;socket.&lt;span class="pl-smi"&gt;onEvent&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; { event &lt;span class="pl-k"&gt;in&lt;/span&gt;
	&lt;span class="pl-k"&gt;switch&lt;/span&gt; event {
		&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; handle events just like above...&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;	}
}&lt;/pre&gt;&lt;/div&gt;
&lt;h3&gt;&lt;a id="user-content-writing-to-a-websocket" class="anchor" aria-hidden="true" href="#writing-to-a-websocket"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Writing to a WebSocket&lt;/h3&gt;
&lt;h3&gt;&lt;a id="user-content-write-a-binary-frame" class="anchor" aria-hidden="true" href="#write-a-binary-frame"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;write a binary frame&lt;/h3&gt;
&lt;p&gt;The writeData method gives you a simple way to send &lt;code&gt;Data&lt;/code&gt; (binary) data to the server.&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;socket.&lt;span class="pl-c1"&gt;write&lt;/span&gt;(&lt;span class="pl-c1"&gt;data&lt;/span&gt;: data) &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt;write some Data over the socket!&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h3&gt;&lt;a id="user-content-write-a-string-frame" class="anchor" aria-hidden="true" href="#write-a-string-frame"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;write a string frame&lt;/h3&gt;
&lt;p&gt;The writeString method is the same as writeData, but sends text/string.&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;socket.&lt;span class="pl-c1"&gt;write&lt;/span&gt;(&lt;span class="pl-c1"&gt;string&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;Hi Server!&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;) &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt;example on how to write text over the socket!&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h3&gt;&lt;a id="user-content-write-a-ping-frame" class="anchor" aria-hidden="true" href="#write-a-ping-frame"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;write a ping frame&lt;/h3&gt;
&lt;p&gt;The writePing method is the same as write, but sends a ping control frame.&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;socket.&lt;span class="pl-c1"&gt;write&lt;/span&gt;(&lt;span class="pl-c1"&gt;ping&lt;/span&gt;: &lt;span class="pl-c1"&gt;Data&lt;/span&gt;()) &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt;example on how to write a ping control frame over the socket!&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h3&gt;&lt;a id="user-content-write-a-pong-frame" class="anchor" aria-hidden="true" href="#write-a-pong-frame"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;write a pong frame&lt;/h3&gt;
&lt;p&gt;the writePong method is the same as writePing, but sends a pong control frame.&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;socket.&lt;span class="pl-c1"&gt;write&lt;/span&gt;(&lt;span class="pl-c1"&gt;pong&lt;/span&gt;: &lt;span class="pl-c1"&gt;Data&lt;/span&gt;()) &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt;example on how to write a pong control frame over the socket!&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Starscream will automatically respond to incoming &lt;code&gt;ping&lt;/code&gt; control frames so you do not need to manually send &lt;code&gt;pong&lt;/code&gt;s.&lt;/p&gt;
&lt;p&gt;However if for some reason you need to control this process you can turn off the automatic &lt;code&gt;ping&lt;/code&gt; response by disabling &lt;code&gt;respondToPingWithPong&lt;/code&gt;.&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;socket.&lt;span class="pl-smi"&gt;respondToPingWithPong&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;false&lt;/span&gt; &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt;Do not automaticaly respond to incoming pings with pongs.&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;In most cases you will not need to do this.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-disconnect" class="anchor" aria-hidden="true" href="#disconnect"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;disconnect&lt;/h3&gt;
&lt;p&gt;The disconnect method does what you would expect and closes the socket.&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;socket.&lt;span class="pl-c1"&gt;disconnect&lt;/span&gt;()&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;The disconnect method can also send a custom close code if desired.&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;socket.&lt;span class="pl-c1"&gt;disconnect&lt;/span&gt;(&lt;span class="pl-c1"&gt;closeCode&lt;/span&gt;: CloseCode.&lt;span class="pl-smi"&gt;normal&lt;/span&gt;.&lt;span class="pl-c1"&gt;rawValue&lt;/span&gt;)&lt;/pre&gt;&lt;/div&gt;
&lt;h3&gt;&lt;a id="user-content-custom-headers-protocols-and-timeout" class="anchor" aria-hidden="true" href="#custom-headers-protocols-and-timeout"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Custom Headers, Protocols and Timeout&lt;/h3&gt;
&lt;p&gt;You can override the default websocket headers, add your own custom ones and set a timeout:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;var&lt;/span&gt; request &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;URLRequest&lt;/span&gt;(&lt;span class="pl-c1"&gt;url&lt;/span&gt;: &lt;span class="pl-c1"&gt;URL&lt;/span&gt;(&lt;span class="pl-c1"&gt;string&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;ws://localhost:8080/&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)&lt;span class="pl-k"&gt;!&lt;/span&gt;)
request.&lt;span class="pl-smi"&gt;timeoutInterval&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;5&lt;/span&gt; &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Sets the timeout for the connection&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;request.&lt;span class="pl-c1"&gt;setValue&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;someother protocols&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-c1"&gt;forHTTPHeaderField&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;Sec-WebSocket-Protocol&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
request.&lt;span class="pl-c1"&gt;setValue&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;14&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-c1"&gt;forHTTPHeaderField&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;Sec-WebSocket-Version&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
request.&lt;span class="pl-c1"&gt;setValue&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;chat,superchat&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-c1"&gt;forHTTPHeaderField&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;Sec-WebSocket-Protocol&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
request.&lt;span class="pl-c1"&gt;setValue&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;Everything is Awesome!&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-c1"&gt;forHTTPHeaderField&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;My-Awesome-Header&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
&lt;span class="pl-k"&gt;let&lt;/span&gt; socket &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;WebSocket&lt;/span&gt;(&lt;span class="pl-c1"&gt;request&lt;/span&gt;: request)&lt;/pre&gt;&lt;/div&gt;
&lt;h3&gt;&lt;a id="user-content-ssl-pinning" class="anchor" aria-hidden="true" href="#ssl-pinning"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;SSL Pinning&lt;/h3&gt;
&lt;p&gt;SSL Pinning is also supported in Starscream.&lt;/p&gt;
&lt;p&gt;TODO: Update docs on how to load certificates and public keys into an app bundle, use the builtin pinner and TrustKit.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-compression-extensions" class="anchor" aria-hidden="true" href="#compression-extensions"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Compression Extensions&lt;/h3&gt;
&lt;p&gt;Compression Extensions (&lt;a href="https://tools.ietf.org/html/rfc7692" rel="nofollow"&gt;RFC 7692&lt;/a&gt;) is supported in Starscream.  Compression is enabled by default, however compression will only be used if it is supported by the server as well.  You may enable or disable compression via the &lt;code&gt;.enableCompression&lt;/code&gt; property:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;socket &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;WebSocket&lt;/span&gt;(&lt;span class="pl-c1"&gt;url&lt;/span&gt;: &lt;span class="pl-c1"&gt;URL&lt;/span&gt;(&lt;span class="pl-c1"&gt;string&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;ws://localhost:8080/&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)&lt;span class="pl-k"&gt;!&lt;/span&gt;)
socket.&lt;span class="pl-smi"&gt;enableCompression&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;false&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Compression should be disabled if your application is transmitting already-compressed, random, or other uncompressable data.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-custom-queue" class="anchor" aria-hidden="true" href="#custom-queue"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Custom Queue&lt;/h3&gt;
&lt;p&gt;A custom queue can be specified when delegate methods are called. By default &lt;code&gt;DispatchQueue.main&lt;/code&gt; is used, thus making all delegate methods calls run on the main thread. It is important to note that all WebSocket processing is done on a background thread, only the delegate method calls are changed when modifying the queue. The actual processing is always on a background thread and will not pause your app.&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;socket &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;WebSocket&lt;/span&gt;(&lt;span class="pl-c1"&gt;url&lt;/span&gt;: &lt;span class="pl-c1"&gt;URL&lt;/span&gt;(&lt;span class="pl-c1"&gt;string&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;ws://localhost:8080/&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)&lt;span class="pl-k"&gt;!&lt;/span&gt;, &lt;span class="pl-c1"&gt;protocols&lt;/span&gt;: [&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;chat&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;,&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;superchat&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;])
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt;create a custom queue&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;socket.&lt;span class="pl-smi"&gt;callbackQueue&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;DispatchQueue&lt;/span&gt;(&lt;span class="pl-c1"&gt;label&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;com.vluxe.starscream.myapp&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)&lt;/pre&gt;&lt;/div&gt;
&lt;h2&gt;&lt;a id="user-content-example-project" class="anchor" aria-hidden="true" href="#example-project"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Example Project&lt;/h2&gt;
&lt;p&gt;Check out the SimpleTest project in the examples directory to see how to setup a simple connection to a WebSocket server.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-requirements" class="anchor" aria-hidden="true" href="#requirements"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Requirements&lt;/h2&gt;
&lt;p&gt;Starscream works with iOS 8/10.10 or above for CocoaPods/framework support. To use Starscream with a project targeting iOS 7, you must include all Swift files directly in your project.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-installation" class="anchor" aria-hidden="true" href="#installation"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Installation&lt;/h2&gt;
&lt;h3&gt;&lt;a id="user-content-cocoapods" class="anchor" aria-hidden="true" href="#cocoapods"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;CocoaPods&lt;/h3&gt;
&lt;p&gt;Check out &lt;a href="http://cocoapods.org/" rel="nofollow"&gt;Get Started&lt;/a&gt; tab on &lt;a href="http://cocoapods.org/" rel="nofollow"&gt;cocoapods.org&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;To use Starscream in your project add the following 'Podfile' to your project&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;source 'https://github.com/CocoaPods/Specs.git'
platform :ios, '9.0'
use_frameworks!

pod 'Starscream', '~&amp;gt; 4.0.0'
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Then run:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;pod install
&lt;/code&gt;&lt;/pre&gt;
&lt;h3&gt;&lt;a id="user-content-carthage" class="anchor" aria-hidden="true" href="#carthage"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Carthage&lt;/h3&gt;
&lt;p&gt;Check out the &lt;a href="https://github.com/Carthage/Carthage"&gt;Carthage&lt;/a&gt; docs on how to add a install. The &lt;code&gt;Starscream&lt;/code&gt; framework is already setup with shared schemes.&lt;/p&gt;
&lt;p&gt;&lt;a href="https://github.com/Carthage/Carthage#adding-frameworks-to-an-application"&gt;Carthage Install&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;You can install Carthage with &lt;a href="http://brew.sh/" rel="nofollow"&gt;Homebrew&lt;/a&gt; using the following command:&lt;/p&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt;$ brew update
$ brew install carthage&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;To integrate Starscream into your Xcode project using Carthage, specify it in your &lt;code&gt;Cartfile&lt;/code&gt;:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;github "daltoniam/Starscream" &amp;gt;= 4.0.0
&lt;/code&gt;&lt;/pre&gt;
&lt;h3&gt;&lt;a id="user-content-accio" class="anchor" aria-hidden="true" href="#accio"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Accio&lt;/h3&gt;
&lt;p&gt;Check out the &lt;a href="https://github.com/JamitLabs/Accio"&gt;Accio&lt;/a&gt; docs on how to add a install.&lt;/p&gt;
&lt;p&gt;Add the following to your Package.swift:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;.&lt;span class="pl-c1"&gt;package&lt;/span&gt;(&lt;span class="pl-c1"&gt;url&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;https://github.com/daltoniam/Starscream.git&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, .&lt;span class="pl-c1"&gt;upToNextMajor&lt;/span&gt;(&lt;span class="pl-c1"&gt;from&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;4.0.0&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)),&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Next, add &lt;code&gt;Starscream&lt;/code&gt; to your App targets dependencies like so:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;.&lt;span class="pl-c1"&gt;target&lt;/span&gt;(
    &lt;span class="pl-c1"&gt;name&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;App&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;,
    &lt;span class="pl-c1"&gt;dependencies&lt;/span&gt;: [
        &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;Starscream&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;,
    ]
),&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Then run &lt;code&gt;accio update&lt;/code&gt;.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-rogue" class="anchor" aria-hidden="true" href="#rogue"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Rogue&lt;/h3&gt;
&lt;p&gt;First see the &lt;a href="https://github.com/acmacalister/Rogue"&gt;installation docs&lt;/a&gt; for how to install Rogue.&lt;/p&gt;
&lt;p&gt;To install Starscream run the command below in the directory you created the rogue file.&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;rogue add https://github.com/daltoniam/Starscream
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Next open the &lt;code&gt;libs&lt;/code&gt; folder and add the &lt;code&gt;Starscream.xcodeproj&lt;/code&gt; to your Xcode project. Once that is complete, in your "Build Phases" add the &lt;code&gt;Starscream.framework&lt;/code&gt; to your "Link Binary with Libraries" phase. Make sure to add the &lt;code&gt;libs&lt;/code&gt; folder to your &lt;code&gt;.gitignore&lt;/code&gt; file.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-swift-package-manager" class="anchor" aria-hidden="true" href="#swift-package-manager"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Swift Package Manager&lt;/h3&gt;
&lt;p&gt;The &lt;a href="https://swift.org/package-manager/" rel="nofollow"&gt;Swift Package Manager&lt;/a&gt; is a tool for automating the distribution of Swift code and is integrated into the &lt;code&gt;swift&lt;/code&gt; compiler.&lt;/p&gt;
&lt;p&gt;Once you have your Swift package set up, adding Starscream as a dependency is as easy as adding it to the &lt;code&gt;dependencies&lt;/code&gt; value of your &lt;code&gt;Package.swift&lt;/code&gt;.&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;dependencies&lt;span class="pl-k"&gt;:&lt;/span&gt; [
    .&lt;span class="pl-c1"&gt;Package&lt;/span&gt;(&lt;span class="pl-c1"&gt;url&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;https://github.com/daltoniam/Starscream.git&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-c1"&gt;majorVersion&lt;/span&gt;: &lt;span class="pl-c1"&gt;4&lt;/span&gt;)
]&lt;/pre&gt;&lt;/div&gt;
&lt;h3&gt;&lt;a id="user-content-other" class="anchor" aria-hidden="true" href="#other"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Other&lt;/h3&gt;
&lt;p&gt;Simply grab the framework (either via git submodule or another package manager).&lt;/p&gt;
&lt;p&gt;Add the &lt;code&gt;Starscream.xcodeproj&lt;/code&gt; to your Xcode project. Once that is complete, in your "Build Phases" add the &lt;code&gt;Starscream.framework&lt;/code&gt; to your "Link Binary with Libraries" phase.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-add-copy-frameworks-phase" class="anchor" aria-hidden="true" href="#add-copy-frameworks-phase"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Add Copy Frameworks Phase&lt;/h3&gt;
&lt;p&gt;If you are running this in an OSX app or on a physical iOS device you will need to make sure you add the &lt;code&gt;Starscream.framework&lt;/code&gt; to be included in your app bundle. To do this, in Xcode, navigate to the target configuration window by clicking on the blue project icon, and selecting the application target under the "Targets" heading in the sidebar. In the tab bar at the top of that window, open the "Build Phases" panel. Expand the "Link Binary with Libraries" group, and add &lt;code&gt;Starscream.framework&lt;/code&gt;. Click on the + button at the top left of the panel and select "New Copy Files Phase". Rename this new phase to "Copy Frameworks", set the "Destination" to "Frameworks", and add &lt;code&gt;Starscream.framework&lt;/code&gt; respectively.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-todos" class="anchor" aria-hidden="true" href="#todos"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;TODOs&lt;/h2&gt;
&lt;ul class="contains-task-list"&gt;
&lt;li class="task-list-item"&gt;&lt;input type="checkbox" id="" disabled="" class="task-list-item-checkbox"&gt; Proxy support&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-license" class="anchor" aria-hidden="true" href="#license"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;License&lt;/h2&gt;
&lt;p&gt;Starscream is licensed under the Apache v2 License.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-contact" class="anchor" aria-hidden="true" href="#contact"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Contact&lt;/h2&gt;
&lt;h3&gt;&lt;a id="user-content-dalton-cherry" class="anchor" aria-hidden="true" href="#dalton-cherry"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Dalton Cherry&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/daltoniam"&gt;https://github.com/daltoniam&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://twitter.com/daltoniam" rel="nofollow"&gt;http://twitter.com/daltoniam&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://daltoniam.com" rel="nofollow"&gt;http://daltoniam.com&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;&lt;a id="user-content-austin-cherry" class="anchor" aria-hidden="true" href="#austin-cherry"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Austin Cherry&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/acmacalister"&gt;https://github.com/acmacalister&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://twitter.com/acmacalister" rel="nofollow"&gt;http://twitter.com/acmacalister&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://austincherry.me" rel="nofollow"&gt;http://austincherry.me&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/article&gt;&lt;/div&gt;</description><author>daltoniam</author><guid isPermaLink="false">https://github.com/daltoniam/Starscream</guid><pubDate>Sat, 25 Jan 2020 00:08:00 GMT</pubDate></item><item><title>apple/swift-protobuf #9 in Swift, This week</title><link>https://github.com/apple/swift-protobuf</link><description>&lt;p&gt;&lt;i&gt;Plugin and runtime library for using protobuf with Swift&lt;/i&gt;&lt;/p&gt;&lt;div id="readme" class="md" data-path="README.md"&gt;&lt;article class="markdown-body entry-content p-5" itemprop="text"&gt;&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="https://camo.githubusercontent.com/de32b354687f1cd9b05a89e4aa03c7f2d311f294/68747470733a2f2f73776966742e6f72672f6173736574732f696d616765732f73776966742e737667"&gt;&lt;img src="https://camo.githubusercontent.com/de32b354687f1cd9b05a89e4aa03c7f2d311f294/68747470733a2f2f73776966742e6f72672f6173736574732f696d616765732f73776966742e737667" alt="Swift logo" height="70" data-canonical-src="https://swift.org/assets/images/swift.svg" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h1&gt;&lt;a id="user-content-swift-protobuf" class="anchor" aria-hidden="true" href="#swift-protobuf"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Swift Protobuf&lt;/h1&gt;
&lt;p&gt;&lt;strong&gt;Welcome to Swift Protobuf!&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href="https://swift.org/" rel="nofollow"&gt;Apple's Swift programming language&lt;/a&gt; is a perfect
complement to &lt;a href="https://developers.google.com/protocol-buffers/" rel="nofollow"&gt;Google's Protocol
Buffer&lt;/a&gt; ("protobuf") serialization
technology.
They both emphasize high performance and programmer safety.&lt;/p&gt;
&lt;p&gt;This project provides both the command-line program that adds Swift
code generation to Google's &lt;code&gt;protoc&lt;/code&gt; and the runtime library that is
necessary for using the generated code.
After using the protoc plugin to generate Swift code from your .proto
files, you will need to add this library to your project.&lt;/p&gt;
&lt;h1&gt;&lt;a id="user-content-features-of-swiftprotobuf" class="anchor" aria-hidden="true" href="#features-of-swiftprotobuf"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Features of SwiftProtobuf&lt;/h1&gt;
&lt;p&gt;SwiftProtobuf offers many advantages over alternative serialization
systems:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Safety: The protobuf code-generation system avoids the
errors that are common with hand-built serialization code.&lt;/li&gt;
&lt;li&gt;Correctness: SwiftProtobuf passes both its own extensive
test suite and Google's full conformance test for protobuf
correctness.&lt;/li&gt;
&lt;li&gt;Schema-driven: Defining your data structures in a separate
&lt;code&gt;.proto&lt;/code&gt; schema file clearly documents your communications
conventions.&lt;/li&gt;
&lt;li&gt;Idiomatic: SwiftProtobuf takes full advantage of the Swift language.
In particular, all generated types provide full Swift copy-on-write
value semantics.&lt;/li&gt;
&lt;li&gt;Efficient binary serialization: The &lt;code&gt;.serializedData()&lt;/code&gt;
method returns a &lt;code&gt;Data&lt;/code&gt; with a compact binary form of your data.
You can deserialize the data using the &lt;code&gt;init(serializedData:)&lt;/code&gt;
initializer.&lt;/li&gt;
&lt;li&gt;Standard JSON serialization: The &lt;code&gt;.jsonUTF8Data()&lt;/code&gt; method returns a JSON
form of your data that can be parsed with the &lt;code&gt;init(jsonUTF8Data:)&lt;/code&gt;
initializer.&lt;/li&gt;
&lt;li&gt;Hashable, Equatable: The generated struct can be put into a
&lt;code&gt;Set&amp;lt;&amp;gt;&lt;/code&gt; or &lt;code&gt;Dictionary&amp;lt;&amp;gt;&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;Performant: The binary and JSON serializers have been
extensively optimized.&lt;/li&gt;
&lt;li&gt;Extensible: You can add your own Swift extensions to any
of the generated types.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Best of all, you can take the same &lt;code&gt;.proto&lt;/code&gt; file and generate
Java, C++, Python, or Objective-C for use on other platforms. The
generated code for those languages will use the exact same
serialization and deserialization conventions as SwiftProtobuf, making
it easy to exchange serialized data in binary or JSON forms, with no
additional effort on your part.&lt;/p&gt;
&lt;h1&gt;&lt;a id="user-content-documentation" class="anchor" aria-hidden="true" href="#documentation"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Documentation&lt;/h1&gt;
&lt;p&gt;More information is available in the associated documentation:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://developers.google.com/protocol-buffers/" rel="nofollow"&gt;Google's protobuf documentation&lt;/a&gt;
provides general information about protocol buffers, the protoc compiler,
and how to use protocol buffers with C++, Java, and other languages.&lt;/li&gt;
&lt;li&gt;&lt;a href="Documentation/PLUGIN.md"&gt;PLUGIN.md&lt;/a&gt; documents the &lt;code&gt;protoc-gen-swift&lt;/code&gt;
plugin that adds Swift support to the &lt;code&gt;protoc&lt;/code&gt; program&lt;/li&gt;
&lt;li&gt;&lt;a href="Documentation/API.md"&gt;API.md&lt;/a&gt; documents how to use the generated code.
This is recommended reading for anyone using SwiftProtobuf in their
project.&lt;/li&gt;
&lt;li&gt;&lt;a href="http://cocoadocs.org/docsets/SwiftProtobuf/" rel="nofollow"&gt;cocoadocs.org&lt;/a&gt; has the generated
API documentation&lt;/li&gt;
&lt;li&gt;&lt;a href="Documentation/INTERNALS.md"&gt;INTERNALS.md&lt;/a&gt; documents the internal structure
of the generated code and the library.  This
should only be needed by folks interested in working on SwiftProtobuf
itself.&lt;/li&gt;
&lt;li&gt;&lt;a href="Documentation/STYLE_GUIDELINES.md"&gt;STYLE_GUIDELINES.md&lt;/a&gt; documents the style
guidelines we have adopted in our codebase if you are interested in
contributing&lt;/li&gt;
&lt;/ul&gt;
&lt;h1&gt;&lt;a id="user-content-getting-started" class="anchor" aria-hidden="true" href="#getting-started"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Getting Started&lt;/h1&gt;
&lt;p&gt;If you've worked with Protocol Buffers before, adding Swift support is very
simple: you just need to build the &lt;code&gt;protoc-gen-swift&lt;/code&gt; program and copy it into
your PATH.
The &lt;code&gt;protoc&lt;/code&gt; program will find and use it automatically, allowing you
to build Swift sources for your proto files.
You will also, of course, need to add the SwiftProtobuf runtime library to
your project as explained below.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-system-requirements" class="anchor" aria-hidden="true" href="#system-requirements"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;System Requirements&lt;/h2&gt;
&lt;p&gt;To use Swift with Protocol buffers, you'll need:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;A Swift 4.0 or later compiler (Xcode 9.1 or later).  Support is included
for the Swift Package Manager; or using the included Xcode project. The Swift
protobuf project is being developed and tested against the latest release
version of Swift available from &lt;a href="https://swift.org" rel="nofollow"&gt;Swift.org&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Google's protoc compiler.  The Swift protoc plugin is being actively
developed and tested against the latest protobuf sources.
The SwiftProtobuf tests need a version of protoc which supports the
&lt;code&gt;swift_prefix&lt;/code&gt; option (introduced in protoc 3.2.0).
It may work with earlier versions of protoc.
You can get recent versions from
&lt;a href="https://github.com/protocolbuffers/protobuf"&gt;Google's github repository&lt;/a&gt;.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-building-and-installing-the-code-generator-plugin" class="anchor" aria-hidden="true" href="#building-and-installing-the-code-generator-plugin"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Building and Installing the Code Generator Plugin&lt;/h2&gt;
&lt;p&gt;To translate &lt;code&gt;.proto&lt;/code&gt; files into Swift, you will need both Google's
protoc compiler and the SwiftProtobuf code generator plugin.&lt;/p&gt;
&lt;p&gt;Building the plugin should be simple on any supported Swift platform:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;$ git clone https://github.com/apple/swift-protobuf.git
$ cd swift-protobuf
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Pick what released version of SwiftProtobuf you are going to use.  You can get
a list of tags with:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;$ git tag -l
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Once you pick the version you will use, set your local state to match, and
build the protoc plugin:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;$ git checkout tags/[tag_name]
$ swift build -c release
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;This will create a binary called &lt;code&gt;protoc-gen-swift&lt;/code&gt; in the &lt;code&gt;.build/release&lt;/code&gt;
directory.&lt;/p&gt;
&lt;p&gt;To install, just copy this one executable into a directory that is
part of your &lt;code&gt;PATH&lt;/code&gt; environment variable.&lt;/p&gt;
&lt;p&gt;NOTE: The Swift runtime support is now included with macOS. If you are
using old Xcode versions or are on older system versions, you might need
to use also use &lt;code&gt;--static-swift-stdlib&lt;/code&gt; with &lt;code&gt;swift build&lt;/code&gt;.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-alternatively-install-via-homebrew" class="anchor" aria-hidden="true" href="#alternatively-install-via-homebrew"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Alternatively install via Homebrew&lt;/h3&gt;
&lt;p&gt;If you prefer using &lt;a href="https://brew.sh" rel="nofollow"&gt;Homebrew&lt;/a&gt;:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;$ brew install swift-protobuf
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;This will install &lt;code&gt;protoc&lt;/code&gt; compiler and Swift code generator plugin.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-converting-proto-files-into-swift" class="anchor" aria-hidden="true" href="#converting-proto-files-into-swift"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Converting .proto files into Swift&lt;/h2&gt;
&lt;p&gt;To generate Swift output for your .proto files, you run the &lt;code&gt;protoc&lt;/code&gt; command as
usual, using the &lt;code&gt;--swift_out=&amp;lt;directory&amp;gt;&lt;/code&gt; option:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;$ protoc --swift_out=. my.proto
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;The &lt;code&gt;protoc&lt;/code&gt; program will automatically look for &lt;code&gt;protoc-gen-swift&lt;/code&gt; in your
&lt;code&gt;PATH&lt;/code&gt; and use it.&lt;/p&gt;
&lt;p&gt;Each &lt;code&gt;.proto&lt;/code&gt; input file will get translated to a corresponding &lt;code&gt;.pb.swift&lt;/code&gt;
file in the output directory.&lt;/p&gt;
&lt;p&gt;More information about building and using &lt;code&gt;protoc-gen-swift&lt;/code&gt; can be found
in the &lt;a href="Documentation/PLUGIN.md"&gt;detailed Plugin documentation&lt;/a&gt;.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-adding-the-swiftprotobuf-library-to-your-project" class="anchor" aria-hidden="true" href="#adding-the-swiftprotobuf-library-to-your-project"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Adding the SwiftProtobuf library to your project...&lt;/h2&gt;
&lt;p&gt;To use the generated code, you need to include the &lt;code&gt;SwiftProtobuf&lt;/code&gt; library
module in your project.  How you do this will vary depending on how
you're building your project.  Note that in all cases, we strongly recommend
that you use the version of the SwiftProtobuf library that corresponds to
the version of &lt;code&gt;protoc-gen-swift&lt;/code&gt; you used to generate the code.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-using-swift-build" class="anchor" aria-hidden="true" href="#using-swift-build"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;...using &lt;code&gt;swift build&lt;/code&gt;&lt;/h3&gt;
&lt;p&gt;After copying the &lt;code&gt;.pb.swift&lt;/code&gt; files into your project, you will need to add the
&lt;a href="https://github.com/apple/swift-protobuf"&gt;SwiftProtobuf library&lt;/a&gt; to your
project to support the generated code.
If you are using the Swift Package Manager, add a dependency to your
&lt;code&gt;Package.swift&lt;/code&gt; file and import the &lt;code&gt;SwiftProtobuf&lt;/code&gt; library into the desired
targets.  Adjust the &lt;code&gt;"1.6.0"&lt;/code&gt; here to match the &lt;code&gt;[tag_name]&lt;/code&gt; you used to build
the plugin above:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;dependencies&lt;span class="pl-k"&gt;:&lt;/span&gt; [
    .&lt;span class="pl-c1"&gt;package&lt;/span&gt;(&lt;span class="pl-c1"&gt;url&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;https://github.com/apple/swift-protobuf.git&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-c1"&gt;from&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;1.6.0&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;),
],
targets&lt;span class="pl-k"&gt;:&lt;/span&gt; [
    .&lt;span class="pl-c1"&gt;target&lt;/span&gt;(&lt;span class="pl-c1"&gt;name&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;MyTarget&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-c1"&gt;dependencies&lt;/span&gt;: [&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;SwiftProtobuf&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;]),
]&lt;/pre&gt;&lt;/div&gt;
&lt;h3&gt;&lt;a id="user-content-using-xcode" class="anchor" aria-hidden="true" href="#using-xcode"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;...using Xcode&lt;/h3&gt;
&lt;p&gt;If you are using Xcode, then you should:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Add the &lt;code&gt;.pb.swift&lt;/code&gt; source files generated from your protos directly to your
project&lt;/li&gt;
&lt;li&gt;Add the appropriate &lt;code&gt;SwiftProtobuf_&amp;lt;platform&amp;gt;&lt;/code&gt; target from the Xcode project
in this package to your project.&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;&lt;a id="user-content-using-cocoapods" class="anchor" aria-hidden="true" href="#using-cocoapods"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;...using CocoaPods&lt;/h3&gt;
&lt;p&gt;If you're using CocoaPods, add this to your &lt;code&gt;Podfile&lt;/code&gt; adjusting the &lt;code&gt;:tag&lt;/code&gt; to
match the &lt;code&gt;[tag_name]&lt;/code&gt; you used to build the plugin above:&lt;/p&gt;
&lt;div class="highlight highlight-source-ruby"&gt;&lt;pre&gt;pod &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;SwiftProtobuf&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;~&amp;gt; 1.0&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;And run &lt;code&gt;pod install&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;NOTE: CocoaPods 1.7 or newer is required.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-using-carthage" class="anchor" aria-hidden="true" href="#using-carthage"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;...using Carthage&lt;/h3&gt;
&lt;p&gt;If you're using Carthage, add this to your &lt;code&gt;Cartfile&lt;/code&gt; but adjust the tag to match the &lt;code&gt;[tag_name]&lt;/code&gt; you used to build the plugin above:&lt;/p&gt;
&lt;div class="highlight highlight-source-ruby"&gt;&lt;pre&gt;github &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;apple/swift-protobuf&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; &lt;span class="pl-k"&gt;~&lt;/span&gt;&lt;span class="pl-k"&gt;&amp;gt;&lt;/span&gt; &lt;span class="pl-c1"&gt;1.0&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Run &lt;code&gt;carthage update&lt;/code&gt; and drag &lt;code&gt;SwiftProtobuf.framework&lt;/code&gt; into your Xcode.project.&lt;/p&gt;
&lt;h1&gt;&lt;a id="user-content-quick-start" class="anchor" aria-hidden="true" href="#quick-start"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Quick Start&lt;/h1&gt;
&lt;p&gt;Once you have installed the code generator, used it to
generate Swift code from your &lt;code&gt;.proto&lt;/code&gt; file, and
added the SwiftProtobuf library to your project, you can
just use the generated types as you would any other Swift
struct.&lt;/p&gt;
&lt;p&gt;For example, you might start with the following very simple
proto file:&lt;/p&gt;
&lt;div class="highlight highlight-source-protobuf"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;syntax&lt;/span&gt; = &lt;span class="pl-s"&gt;"proto3"&lt;/span&gt;;

&lt;span class="pl-k"&gt;message&lt;/span&gt; &lt;span class="pl-en"&gt;BookInfo&lt;/span&gt; {
   &lt;span class="pl-k"&gt;int64&lt;/span&gt; &lt;span class="pl-smi"&gt;id&lt;/span&gt; = &lt;span class="pl-c1"&gt;1&lt;/span&gt;;
   &lt;span class="pl-k"&gt;string&lt;/span&gt; &lt;span class="pl-smi"&gt;title&lt;/span&gt; = &lt;span class="pl-c1"&gt;2&lt;/span&gt;;
   &lt;span class="pl-k"&gt;string&lt;/span&gt; &lt;span class="pl-smi"&gt;author&lt;/span&gt; = &lt;span class="pl-c1"&gt;3&lt;/span&gt;;
}&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Then generate Swift code using:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;$ protoc --swift_out=. DataModel.proto
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;The generated code will expose a Swift property for
each of the proto fields as well as a selection
of serialization and deserialization capabilities:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Create a BookInfo object and populate it:&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;&lt;span class="pl-k"&gt;var&lt;/span&gt; info &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;BookInfo&lt;/span&gt;()
info.&lt;span class="pl-smi"&gt;id&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;1734&lt;/span&gt;
info.&lt;span class="pl-smi"&gt;title&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;Really Interesting Book&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;
info.&lt;span class="pl-smi"&gt;author&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;Jane Smith&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; As above, but generating a read-only value:&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;&lt;span class="pl-k"&gt;let&lt;/span&gt; info2 &lt;span class="pl-k"&gt;=&lt;/span&gt; BookInfo.&lt;span class="pl-smi"&gt;with&lt;/span&gt; {
    &lt;span class="pl-c1"&gt;$0&lt;/span&gt;.&lt;span class="pl-smi"&gt;id&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;1735&lt;/span&gt;
    &lt;span class="pl-c1"&gt;$0&lt;/span&gt;.&lt;span class="pl-smi"&gt;title&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;Even More Interesting&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;
    &lt;span class="pl-c1"&gt;$0&lt;/span&gt;.&lt;span class="pl-smi"&gt;author&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;Jane Q. Smith&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;
  }

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Serialize to binary protobuf format:&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;&lt;span class="pl-k"&gt;let&lt;/span&gt; binaryData&lt;span class="pl-k"&gt;:&lt;/span&gt; Data &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-k"&gt;try&lt;/span&gt; info.&lt;span class="pl-c1"&gt;serializedData&lt;/span&gt;()

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Deserialize a received Data object from `binaryData`&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;&lt;span class="pl-k"&gt;let&lt;/span&gt; decodedInfo &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-k"&gt;try&lt;/span&gt; &lt;span class="pl-c1"&gt;BookInfo&lt;/span&gt;(&lt;span class="pl-c1"&gt;serializedData&lt;/span&gt;: binaryData)

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Serialize to JSON format as a Data object&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;&lt;span class="pl-k"&gt;let&lt;/span&gt; jsonData&lt;span class="pl-k"&gt;:&lt;/span&gt; Data &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-k"&gt;try&lt;/span&gt; info.&lt;span class="pl-c1"&gt;jsonUTF8Data&lt;/span&gt;()

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Deserialize from JSON format from `jsonData`&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;&lt;span class="pl-k"&gt;let&lt;/span&gt; receivedFromJSON &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-k"&gt;try&lt;/span&gt; &lt;span class="pl-c1"&gt;BookInfo&lt;/span&gt;(&lt;span class="pl-c1"&gt;jsonUTF8Data&lt;/span&gt;: jsonData)&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;You can find more information in the detailed
&lt;a href="Documentation/API.md"&gt;API Documentation&lt;/a&gt;.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-report-any-issues" class="anchor" aria-hidden="true" href="#report-any-issues"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Report any issues&lt;/h2&gt;
&lt;p&gt;If you run into problems, please send us a detailed report.
At a minimum, please include:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;The specific operating system and version (for example, "macOS 10.12.1" or
"Ubuntu 16.10")&lt;/li&gt;
&lt;li&gt;The version of Swift you have installed (from &lt;code&gt;swift --version&lt;/code&gt;)&lt;/li&gt;
&lt;li&gt;The version of the protoc compiler you are working with from
&lt;code&gt;protoc --version&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;The specific version of this source code (you can use &lt;code&gt;git log -1&lt;/code&gt; to get the
latest commit ID)&lt;/li&gt;
&lt;li&gt;Any local changes you may have&lt;/li&gt;
&lt;/ul&gt;
&lt;/article&gt;&lt;/div&gt;</description><author>apple</author><guid isPermaLink="false">https://github.com/apple/swift-protobuf</guid><pubDate>Sat, 25 Jan 2020 00:09:00 GMT</pubDate></item><item><title>kishikawakatsumi/KeychainAccess #10 in Swift, This week</title><link>https://github.com/kishikawakatsumi/KeychainAccess</link><description>&lt;p&gt;&lt;i&gt;Simple Swift wrapper for Keychain that works on iOS, watchOS, tvOS and macOS.&lt;/i&gt;&lt;/p&gt;&lt;div id="readme" class="md" data-path="README.md"&gt;&lt;article class="markdown-body entry-content p-5" itemprop="text"&gt;&lt;h1&gt;&lt;a id="user-content-keychainaccess" class="anchor" aria-hidden="true" href="#keychainaccess"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;KeychainAccess&lt;/h1&gt;
&lt;p&gt;&lt;a href="https://travis-ci.org/kishikawakatsumi/KeychainAccess" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/afdbd44171d9bfa54b62c676cb0eb3950338fe39/687474703a2f2f696d672e736869656c64732e696f2f7472617669732f6b697368696b6177616b617473756d692f4b6579636861696e4163636573732e737667" alt="CI Status" data-canonical-src="http://img.shields.io/travis/kishikawakatsumi/KeychainAccess.svg" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://codecov.io/gh/kishikawakatsumi/KeychainAccess" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/97a6fd2a7940f2bb66a4ab96e5dd915937af5127/68747470733a2f2f636f6465636f762e696f2f67682f6b697368696b6177616b617473756d692f4b6579636861696e4163636573732f6272616e63682f6d61737465722f67726170682f62616467652e737667" alt="codecov" data-canonical-src="https://codecov.io/gh/kishikawakatsumi/KeychainAccess/branch/master/graph/badge.svg" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://github.com/Carthage/Carthage"&gt;&lt;img src="https://camo.githubusercontent.com/3dc8a44a2c3f7ccd5418008d1295aae48466c141/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f43617274686167652d636f6d70617469626c652d3442433531442e7376673f7374796c653d666c6174" alt="Carthage compatible" data-canonical-src="https://img.shields.io/badge/Carthage-compatible-4BC51D.svg?style=flat" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://swift.org/package-manager" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/378b1808fd201a4bb4c9a2e8f78ac6322bca15f2/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f53504d2d737570706f727465642d4445354334332e7376673f7374796c653d666c6174" alt="SPM supported" data-canonical-src="https://img.shields.io/badge/SPM-supported-DE5C43.svg?style=flat" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="http://cocoadocs.org/docsets/KeychainAccess" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/f820d6fc06ee07b623567703e759f2a050efe2db/68747470733a2f2f696d672e736869656c64732e696f2f636f636f61706f64732f762f4b6579636861696e4163636573732e737667" alt="Version" data-canonical-src="https://img.shields.io/cocoapods/v/KeychainAccess.svg" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="http://cocoadocs.org/docsets/KeychainAccess" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/059116fbd9f38b9b7deb2a0ab0d98b3dd2c80e14/68747470733a2f2f696d672e736869656c64732e696f2f636f636f61706f64732f702f4b6579636861696e4163636573732e737667" alt="Platform" data-canonical-src="https://img.shields.io/cocoapods/p/KeychainAccess.svg" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;KeychainAccess is a simple Swift wrapper for Keychain that works on iOS and OS X. Makes using Keychain APIs extremely easy and much more palatable to use in Swift.&lt;/p&gt;
&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="https://raw.githubusercontent.com/kishikawakatsumi/KeychainAccess/master/Screenshots/01.png"&gt;&lt;img src="https://raw.githubusercontent.com/kishikawakatsumi/KeychainAccess/master/Screenshots/01.png" width="320px" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="https://raw.githubusercontent.com/kishikawakatsumi/KeychainAccess/master/Screenshots/02.png"&gt;&lt;img src="https://raw.githubusercontent.com/kishikawakatsumi/KeychainAccess/master/Screenshots/02.png" width="320px" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="https://raw.githubusercontent.com/kishikawakatsumi/KeychainAccess/master/Screenshots/03.png"&gt;&lt;img src="https://raw.githubusercontent.com/kishikawakatsumi/KeychainAccess/master/Screenshots/03.png" width="320px" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-bulb-features" class="anchor" aria-hidden="true" href="#bulb-features"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;g-emoji class="g-emoji" alias="bulb" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f4a1.png"&gt;💡&lt;/g-emoji&gt; Features&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Simple interface&lt;/li&gt;
&lt;li&gt;Support access group&lt;/li&gt;
&lt;li&gt;&lt;a href="#accessibility"&gt;Support accessibility&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#icloud_sharing"&gt;Support iCloud sharing&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;&lt;a href="#touch_id_integration"&gt;Support TouchID and Keychain integration (iOS 8+)&lt;/a&gt;&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;&lt;a href="#shared_web_credentials"&gt;Support Shared Web Credentials (iOS 8+)&lt;/a&gt;&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#requirements"&gt;Works on both iOS &amp;amp; macOS&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#requirements"&gt;watchOS and tvOS are supported&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;&lt;a href="#requirements"&gt;Mac Catalyst is supported&lt;/a&gt;&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;&lt;a href="#requirements"&gt;Swift 3, 4 and 5 compatible&lt;/a&gt;&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-book-usage" class="anchor" aria-hidden="true" href="#book-usage"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;g-emoji class="g-emoji" alias="book" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f4d6.png"&gt;📖&lt;/g-emoji&gt; Usage&lt;/h2&gt;
&lt;h5&gt;&lt;a id="user-content-eyes-see-also" class="anchor" aria-hidden="true" href="#eyes-see-also"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;g-emoji class="g-emoji" alias="eyes" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f440.png"&gt;👀&lt;/g-emoji&gt; See also:&lt;/h5&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/kishikawakatsumi/KeychainAccess/tree/master/Examples/Example-iOS"&gt;&lt;g-emoji class="g-emoji" alias="link" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f517.png"&gt;🔗&lt;/g-emoji&gt; iOS Example Project&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;&lt;a id="user-content-key-basics" class="anchor" aria-hidden="true" href="#key-basics"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;g-emoji class="g-emoji" alias="key" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f511.png"&gt;🔑&lt;/g-emoji&gt; Basics&lt;/h3&gt;
&lt;h4&gt;&lt;a id="user-content-saving-application-password" class="anchor" aria-hidden="true" href="#saving-application-password"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Saving Application Password&lt;/h4&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;let&lt;/span&gt; keychain &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;Keychain&lt;/span&gt;(&lt;span class="pl-c1"&gt;service&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;com.example.github-token&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
keychain[&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;kishikawakatsumi&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;] &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;01234567-89ab-cdef-0123-456789abcdef&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h4&gt;&lt;a id="user-content-saving-internet-password" class="anchor" aria-hidden="true" href="#saving-internet-password"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Saving Internet Password&lt;/h4&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;let&lt;/span&gt; keychain &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;Keychain&lt;/span&gt;(&lt;span class="pl-c1"&gt;server&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;https://github.com&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-c1"&gt;protocolType&lt;/span&gt;: .&lt;span class="pl-smi"&gt;https&lt;/span&gt;)
keychain[&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;kishikawakatsumi&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;] &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;01234567-89ab-cdef-0123-456789abcdef&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h3&gt;&lt;a id="user-content-key-instantiation" class="anchor" aria-hidden="true" href="#key-instantiation"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;g-emoji class="g-emoji" alias="key" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f511.png"&gt;🔑&lt;/g-emoji&gt; Instantiation&lt;/h3&gt;
&lt;h4&gt;&lt;a id="user-content-create-keychain-for-application-password" class="anchor" aria-hidden="true" href="#create-keychain-for-application-password"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Create Keychain for Application Password&lt;/h4&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;let&lt;/span&gt; keychain &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;Keychain&lt;/span&gt;(&lt;span class="pl-c1"&gt;service&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;com.example.github-token&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)&lt;/pre&gt;&lt;/div&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;let&lt;/span&gt; keychain &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;Keychain&lt;/span&gt;(&lt;span class="pl-c1"&gt;service&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;com.example.github-token&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-c1"&gt;accessGroup&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;12ABCD3E4F.shared&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)&lt;/pre&gt;&lt;/div&gt;
&lt;h4&gt;&lt;a id="user-content-create-keychain-for-internet-password" class="anchor" aria-hidden="true" href="#create-keychain-for-internet-password"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Create Keychain for Internet Password&lt;/h4&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;let&lt;/span&gt; keychain &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;Keychain&lt;/span&gt;(&lt;span class="pl-c1"&gt;server&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;https://github.com&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-c1"&gt;protocolType&lt;/span&gt;: .&lt;span class="pl-smi"&gt;https&lt;/span&gt;)&lt;/pre&gt;&lt;/div&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;let&lt;/span&gt; keychain &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;Keychain&lt;/span&gt;(&lt;span class="pl-c1"&gt;server&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;https://github.com&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-c1"&gt;protocolType&lt;/span&gt;: .&lt;span class="pl-smi"&gt;https&lt;/span&gt;, &lt;span class="pl-c1"&gt;authenticationType&lt;/span&gt;: .&lt;span class="pl-smi"&gt;htmlForm&lt;/span&gt;)&lt;/pre&gt;&lt;/div&gt;
&lt;h3&gt;&lt;a id="user-content-key-adding-an-item" class="anchor" aria-hidden="true" href="#key-adding-an-item"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;g-emoji class="g-emoji" alias="key" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f511.png"&gt;🔑&lt;/g-emoji&gt; Adding an item&lt;/h3&gt;
&lt;h4&gt;&lt;a id="user-content-subscripting" class="anchor" aria-hidden="true" href="#subscripting"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;subscripting&lt;/h4&gt;
&lt;h5&gt;&lt;a id="user-content-for-string" class="anchor" aria-hidden="true" href="#for-string"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;for String&lt;/h5&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;keychain[&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;kishikawakatsumi&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;] &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;01234567-89ab-cdef-0123-456789abcdef&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;keychain[&lt;span class="pl-c1"&gt;string&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;kishikawakatsumi&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;] &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;01234567-89ab-cdef-0123-456789abcdef&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h5&gt;&lt;a id="user-content-for-nsdata" class="anchor" aria-hidden="true" href="#for-nsdata"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;for NSData&lt;/h5&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;keychain[&lt;span class="pl-c1"&gt;data&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;secret&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;] &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;NSData&lt;/span&gt;(&lt;span class="pl-c1"&gt;contentsOfFile&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;secret.bin&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)&lt;/pre&gt;&lt;/div&gt;
&lt;h4&gt;&lt;a id="user-content-set-method" class="anchor" aria-hidden="true" href="#set-method"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;set method&lt;/h4&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;keychain.&lt;span class="pl-c1"&gt;set&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;01234567-89ab-cdef-0123-456789abcdef&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-c1"&gt;key&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;kishikawakatsumi&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)&lt;/pre&gt;&lt;/div&gt;
&lt;h4&gt;&lt;a id="user-content-error-handling" class="anchor" aria-hidden="true" href="#error-handling"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;error handling&lt;/h4&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;do&lt;/span&gt; {
    &lt;span class="pl-k"&gt;try&lt;/span&gt; keychain.&lt;span class="pl-c1"&gt;set&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;01234567-89ab-cdef-0123-456789abcdef&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-c1"&gt;key&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;kishikawakatsumi&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
}
&lt;span class="pl-k"&gt;catch&lt;/span&gt; &lt;span class="pl-k"&gt;let&lt;/span&gt; error {
    &lt;span class="pl-c1"&gt;print&lt;/span&gt;(error)
}&lt;/pre&gt;&lt;/div&gt;
&lt;h3&gt;&lt;a id="user-content-key-obtaining-an-item" class="anchor" aria-hidden="true" href="#key-obtaining-an-item"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;g-emoji class="g-emoji" alias="key" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f511.png"&gt;🔑&lt;/g-emoji&gt; Obtaining an item&lt;/h3&gt;
&lt;h4&gt;&lt;a id="user-content-subscripting-1" class="anchor" aria-hidden="true" href="#subscripting-1"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;subscripting&lt;/h4&gt;
&lt;h5&gt;&lt;a id="user-content-for-string-if-the-value-is-nsdata-attempt-to-convert-to-string" class="anchor" aria-hidden="true" href="#for-string-if-the-value-is-nsdata-attempt-to-convert-to-string"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;for String (If the value is NSData, attempt to convert to String)&lt;/h5&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;let&lt;/span&gt; token &lt;span class="pl-k"&gt;=&lt;/span&gt; keychain[&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;kishikawakatsumi&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;]&lt;/pre&gt;&lt;/div&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;let&lt;/span&gt; token &lt;span class="pl-k"&gt;=&lt;/span&gt; keychain[&lt;span class="pl-c1"&gt;string&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;kishikawakatsumi&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;]&lt;/pre&gt;&lt;/div&gt;
&lt;h5&gt;&lt;a id="user-content-for-nsdata-1" class="anchor" aria-hidden="true" href="#for-nsdata-1"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;for NSData&lt;/h5&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;let&lt;/span&gt; secretData &lt;span class="pl-k"&gt;=&lt;/span&gt; keychain[&lt;span class="pl-c1"&gt;data&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;secret&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;]&lt;/pre&gt;&lt;/div&gt;
&lt;h4&gt;&lt;a id="user-content-get-methods" class="anchor" aria-hidden="true" href="#get-methods"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;get methods&lt;/h4&gt;
&lt;h5&gt;&lt;a id="user-content-as-string" class="anchor" aria-hidden="true" href="#as-string"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;as String&lt;/h5&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;let&lt;/span&gt; token &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-k"&gt;try&lt;/span&gt;&lt;span class="pl-k"&gt;?&lt;/span&gt; keychain.&lt;span class="pl-c1"&gt;get&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;kishikawakatsumi&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)&lt;/pre&gt;&lt;/div&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;let&lt;/span&gt; token &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-k"&gt;try&lt;/span&gt;&lt;span class="pl-k"&gt;?&lt;/span&gt; keychain.&lt;span class="pl-c1"&gt;getString&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;kishikawakatsumi&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)&lt;/pre&gt;&lt;/div&gt;
&lt;h5&gt;&lt;a id="user-content-as-nsdata" class="anchor" aria-hidden="true" href="#as-nsdata"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;as NSData&lt;/h5&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;let&lt;/span&gt; data &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-k"&gt;try&lt;/span&gt;&lt;span class="pl-k"&gt;?&lt;/span&gt; keychain.&lt;span class="pl-c1"&gt;getData&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;kishikawakatsumi&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)&lt;/pre&gt;&lt;/div&gt;
&lt;h3&gt;&lt;a id="user-content-key-removing-an-item" class="anchor" aria-hidden="true" href="#key-removing-an-item"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;g-emoji class="g-emoji" alias="key" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f511.png"&gt;🔑&lt;/g-emoji&gt; Removing an item&lt;/h3&gt;
&lt;h4&gt;&lt;a id="user-content-subscripting-2" class="anchor" aria-hidden="true" href="#subscripting-2"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;subscripting&lt;/h4&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;keychain[&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;kishikawakatsumi&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;] &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;nil&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h4&gt;&lt;a id="user-content-remove-method" class="anchor" aria-hidden="true" href="#remove-method"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;remove method&lt;/h4&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;do&lt;/span&gt; {
    &lt;span class="pl-k"&gt;try&lt;/span&gt; keychain.&lt;span class="pl-c1"&gt;remove&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;kishikawakatsumi&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
} &lt;span class="pl-k"&gt;catch&lt;/span&gt; &lt;span class="pl-k"&gt;let&lt;/span&gt; error {
    &lt;span class="pl-c1"&gt;print&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;error: &lt;span class="pl-pse"&gt;\(&lt;/span&gt;&lt;span class="pl-s1"&gt;error&lt;/span&gt;&lt;span class="pl-pse"&gt;&lt;span class="pl-s1"&gt;)&lt;/span&gt;&lt;/span&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
}&lt;/pre&gt;&lt;/div&gt;
&lt;h3&gt;&lt;a id="user-content-key-set-label-and-comment" class="anchor" aria-hidden="true" href="#key-set-label-and-comment"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;g-emoji class="g-emoji" alias="key" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f511.png"&gt;🔑&lt;/g-emoji&gt; Set Label and Comment&lt;/h3&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;let&lt;/span&gt; keychain &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;Keychain&lt;/span&gt;(&lt;span class="pl-c1"&gt;server&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;https://github.com&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-c1"&gt;protocolType&lt;/span&gt;: .&lt;span class="pl-smi"&gt;https&lt;/span&gt;)
&lt;span class="pl-k"&gt;do&lt;/span&gt; {
    &lt;span class="pl-k"&gt;try&lt;/span&gt; keychain
        .&lt;span class="pl-c1"&gt;label&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;github.com (kishikawakatsumi)&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
        .&lt;span class="pl-c1"&gt;comment&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;github access token&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
        .&lt;span class="pl-c1"&gt;set&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;01234567-89ab-cdef-0123-456789abcdef&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-c1"&gt;key&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;kishikawakatsumi&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
} &lt;span class="pl-k"&gt;catch&lt;/span&gt; &lt;span class="pl-k"&gt;let&lt;/span&gt; error {
    &lt;span class="pl-c1"&gt;print&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;error: &lt;span class="pl-pse"&gt;\(&lt;/span&gt;&lt;span class="pl-s1"&gt;error&lt;/span&gt;&lt;span class="pl-pse"&gt;&lt;span class="pl-s1"&gt;)&lt;/span&gt;&lt;/span&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
}&lt;/pre&gt;&lt;/div&gt;
&lt;h3&gt;&lt;a id="user-content-key-obtaining-other-attributes" class="anchor" aria-hidden="true" href="#key-obtaining-other-attributes"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;g-emoji class="g-emoji" alias="key" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f511.png"&gt;🔑&lt;/g-emoji&gt; Obtaining Other Attributes&lt;/h3&gt;
&lt;h4&gt;&lt;a id="user-content-persistentref" class="anchor" aria-hidden="true" href="#persistentref"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;PersistentRef&lt;/h4&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;let&lt;/span&gt; keychain &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;Keychain&lt;/span&gt;()
&lt;span class="pl-k"&gt;let&lt;/span&gt; persistentRef &lt;span class="pl-k"&gt;=&lt;/span&gt; keychain[&lt;span class="pl-c1"&gt;attributes&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;kishikawakatsumi&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;]&lt;span class="pl-k"&gt;?&lt;/span&gt;.&lt;span class="pl-smi"&gt;persistentRef&lt;/span&gt;
&lt;span class="pl-k"&gt;...&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h4&gt;&lt;a id="user-content-creation-date" class="anchor" aria-hidden="true" href="#creation-date"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Creation Date&lt;/h4&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;let&lt;/span&gt; keychain &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;Keychain&lt;/span&gt;()
&lt;span class="pl-k"&gt;let&lt;/span&gt; creationDate &lt;span class="pl-k"&gt;=&lt;/span&gt; keychain[&lt;span class="pl-c1"&gt;attributes&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;kishikawakatsumi&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;]&lt;span class="pl-k"&gt;?&lt;/span&gt;.&lt;span class="pl-smi"&gt;creationDate&lt;/span&gt;
&lt;span class="pl-k"&gt;...&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h4&gt;&lt;a id="user-content-all-attributes" class="anchor" aria-hidden="true" href="#all-attributes"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;All Attributes&lt;/h4&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;let&lt;/span&gt; keychain &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;Keychain&lt;/span&gt;()
&lt;span class="pl-k"&gt;do&lt;/span&gt; {
    &lt;span class="pl-k"&gt;let&lt;/span&gt; attributes &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-k"&gt;try&lt;/span&gt; keychain.&lt;span class="pl-c1"&gt;get&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;kishikawakatsumi&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;) { &lt;span class="pl-c1"&gt;$0&lt;/span&gt; }
    &lt;span class="pl-c1"&gt;print&lt;/span&gt;(attributes&lt;span class="pl-k"&gt;?&lt;/span&gt;.&lt;span class="pl-smi"&gt;comment&lt;/span&gt;)
    &lt;span class="pl-c1"&gt;print&lt;/span&gt;(attributes&lt;span class="pl-k"&gt;?&lt;/span&gt;.&lt;span class="pl-smi"&gt;label&lt;/span&gt;)
    &lt;span class="pl-c1"&gt;print&lt;/span&gt;(attributes&lt;span class="pl-k"&gt;?&lt;/span&gt;.&lt;span class="pl-smi"&gt;creator&lt;/span&gt;)
    &lt;span class="pl-k"&gt;...&lt;/span&gt;
} &lt;span class="pl-k"&gt;catch&lt;/span&gt; &lt;span class="pl-k"&gt;let&lt;/span&gt; error {
    &lt;span class="pl-c1"&gt;print&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;error: &lt;span class="pl-pse"&gt;\(&lt;/span&gt;&lt;span class="pl-s1"&gt;error&lt;/span&gt;&lt;span class="pl-pse"&gt;&lt;span class="pl-s1"&gt;)&lt;/span&gt;&lt;/span&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
}&lt;/pre&gt;&lt;/div&gt;
&lt;h5&gt;&lt;a id="user-content-subscripting-3" class="anchor" aria-hidden="true" href="#subscripting-3"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;subscripting&lt;/h5&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;let&lt;/span&gt; keychain &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;Keychain&lt;/span&gt;()
&lt;span class="pl-k"&gt;if&lt;/span&gt; &lt;span class="pl-k"&gt;let&lt;/span&gt; attributes &lt;span class="pl-k"&gt;=&lt;/span&gt; keychain[&lt;span class="pl-c1"&gt;attributes&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;kishikawakatsumi&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;] {
    &lt;span class="pl-c1"&gt;print&lt;/span&gt;(attributes.&lt;span class="pl-smi"&gt;comment&lt;/span&gt;)
    &lt;span class="pl-c1"&gt;print&lt;/span&gt;(attributes.&lt;span class="pl-smi"&gt;label&lt;/span&gt;)
    &lt;span class="pl-c1"&gt;print&lt;/span&gt;(attributes.&lt;span class="pl-smi"&gt;creator&lt;/span&gt;)
}&lt;/pre&gt;&lt;/div&gt;
&lt;h3&gt;&lt;a id="user-content-key-configuration-accessibility-sharing-icloud-sync" class="anchor" aria-hidden="true" href="#key-configuration-accessibility-sharing-icloud-sync"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;g-emoji class="g-emoji" alias="key" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f511.png"&gt;🔑&lt;/g-emoji&gt; Configuration (Accessibility, Sharing, iCloud Sync)&lt;/h3&gt;
&lt;p&gt;&lt;strong&gt;Provides fluent interfaces&lt;/strong&gt;&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;let&lt;/span&gt; keychain &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;Keychain&lt;/span&gt;(&lt;span class="pl-c1"&gt;service&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;com.example.github-token&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
    .&lt;span class="pl-c1"&gt;label&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;github.com (kishikawakatsumi)&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
    .&lt;span class="pl-c1"&gt;synchronizable&lt;/span&gt;(&lt;span class="pl-c1"&gt;true&lt;/span&gt;)
    .&lt;span class="pl-c1"&gt;accessibility&lt;/span&gt;(.&lt;span class="pl-smi"&gt;afterFirstUnlock&lt;/span&gt;)&lt;/pre&gt;&lt;/div&gt;
&lt;h4&gt;&lt;a id="user-content--accessibility" class="anchor" aria-hidden="true" href="#-accessibility"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;a name="user-content-accessibility"&gt; Accessibility&lt;/a&gt;&lt;/h4&gt;&lt;a name="user-content-accessibility"&gt;
&lt;h5&gt;&lt;a id="user-content-default-accessibility-matches-background-application-ksecattraccessibleafterfirstunlock" class="anchor" aria-hidden="true" href="#default-accessibility-matches-background-application-ksecattraccessibleafterfirstunlock"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Default accessibility matches background application (=kSecAttrAccessibleAfterFirstUnlock)&lt;/h5&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;let&lt;/span&gt; keychain &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;Keychain&lt;/span&gt;(&lt;span class="pl-c1"&gt;service&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;com.example.github-token&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)&lt;/pre&gt;&lt;/div&gt;
&lt;h5&gt;&lt;a id="user-content-for-background-application" class="anchor" aria-hidden="true" href="#for-background-application"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;For background application&lt;/h5&gt;
&lt;h6&gt;&lt;a id="user-content-creating-instance" class="anchor" aria-hidden="true" href="#creating-instance"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Creating instance&lt;/h6&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;let&lt;/span&gt; keychain &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;Keychain&lt;/span&gt;(&lt;span class="pl-c1"&gt;service&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;com.example.github-token&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
    .&lt;span class="pl-c1"&gt;accessibility&lt;/span&gt;(.&lt;span class="pl-smi"&gt;afterFirstUnlock&lt;/span&gt;)

keychain[&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;kishikawakatsumi&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;] &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;01234567-89ab-cdef-0123-456789abcdef&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h6&gt;&lt;a id="user-content-one-shot" class="anchor" aria-hidden="true" href="#one-shot"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;One-shot&lt;/h6&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;let&lt;/span&gt; keychain &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;Keychain&lt;/span&gt;(&lt;span class="pl-c1"&gt;service&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;com.example.github-token&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)

&lt;span class="pl-k"&gt;do&lt;/span&gt; {
    &lt;span class="pl-k"&gt;try&lt;/span&gt; keychain
        .&lt;span class="pl-c1"&gt;accessibility&lt;/span&gt;(.&lt;span class="pl-smi"&gt;afterFirstUnlock&lt;/span&gt;)
        .&lt;span class="pl-c1"&gt;set&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;01234567-89ab-cdef-0123-456789abcdef&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-c1"&gt;key&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;kishikawakatsumi&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
} &lt;span class="pl-k"&gt;catch&lt;/span&gt; &lt;span class="pl-k"&gt;let&lt;/span&gt; error {
    &lt;span class="pl-c1"&gt;print&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;error: &lt;span class="pl-pse"&gt;\(&lt;/span&gt;&lt;span class="pl-s1"&gt;error&lt;/span&gt;&lt;span class="pl-pse"&gt;&lt;span class="pl-s1"&gt;)&lt;/span&gt;&lt;/span&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
}&lt;/pre&gt;&lt;/div&gt;
&lt;h5&gt;&lt;a id="user-content-for-foreground-application" class="anchor" aria-hidden="true" href="#for-foreground-application"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;For foreground application&lt;/h5&gt;
&lt;h6&gt;&lt;a id="user-content-creating-instance-1" class="anchor" aria-hidden="true" href="#creating-instance-1"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Creating instance&lt;/h6&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;let&lt;/span&gt; keychain &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;Keychain&lt;/span&gt;(&lt;span class="pl-c1"&gt;service&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;com.example.github-token&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
    .&lt;span class="pl-c1"&gt;accessibility&lt;/span&gt;(.&lt;span class="pl-smi"&gt;whenUnlocked&lt;/span&gt;)

keychain[&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;kishikawakatsumi&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;] &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;01234567-89ab-cdef-0123-456789abcdef&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h6&gt;&lt;a id="user-content-one-shot-1" class="anchor" aria-hidden="true" href="#one-shot-1"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;One-shot&lt;/h6&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;let&lt;/span&gt; keychain &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;Keychain&lt;/span&gt;(&lt;span class="pl-c1"&gt;service&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;com.example.github-token&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)

&lt;span class="pl-k"&gt;do&lt;/span&gt; {
    &lt;span class="pl-k"&gt;try&lt;/span&gt; keychain
        .&lt;span class="pl-c1"&gt;accessibility&lt;/span&gt;(.&lt;span class="pl-smi"&gt;whenUnlocked&lt;/span&gt;)
        .&lt;span class="pl-c1"&gt;set&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;01234567-89ab-cdef-0123-456789abcdef&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-c1"&gt;key&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;kishikawakatsumi&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
} &lt;span class="pl-k"&gt;catch&lt;/span&gt; &lt;span class="pl-k"&gt;let&lt;/span&gt; error {
    &lt;span class="pl-c1"&gt;print&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;error: &lt;span class="pl-pse"&gt;\(&lt;/span&gt;&lt;span class="pl-s1"&gt;error&lt;/span&gt;&lt;span class="pl-pse"&gt;&lt;span class="pl-s1"&gt;)&lt;/span&gt;&lt;/span&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
}&lt;/pre&gt;&lt;/div&gt;
&lt;h4&gt;&lt;a id="user-content-couple-sharing-keychain-items" class="anchor" aria-hidden="true" href="#couple-sharing-keychain-items"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;g-emoji class="g-emoji" alias="couple" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f46b.png"&gt;👫&lt;/g-emoji&gt; Sharing Keychain items&lt;/h4&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;let&lt;/span&gt; keychain &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;Keychain&lt;/span&gt;(&lt;span class="pl-c1"&gt;service&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;com.example.github-token&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-c1"&gt;accessGroup&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;12ABCD3E4F.shared&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)&lt;/pre&gt;&lt;/div&gt;
&lt;/a&gt;&lt;h4&gt;&lt;a id="user-content--arrows_counterclockwise-synchronizing-keychain-items-with-icloud" class="anchor" aria-hidden="true" href="#-arrows_counterclockwise-synchronizing-keychain-items-with-icloud"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;a name="user-content-accessibility"&gt;&lt;/a&gt;&lt;a name="user-content-icloud_sharing"&gt; &lt;g-emoji class="g-emoji" alias="arrows_counterclockwise" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f504.png"&gt;🔄&lt;/g-emoji&gt; Synchronizing Keychain items with iCloud&lt;/a&gt;&lt;/h4&gt;&lt;a name="user-content-icloud_sharing"&gt;
&lt;h6&gt;&lt;a id="user-content-creating-instance-2" class="anchor" aria-hidden="true" href="#creating-instance-2"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Creating instance&lt;/h6&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;let&lt;/span&gt; keychain &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;Keychain&lt;/span&gt;(&lt;span class="pl-c1"&gt;service&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;com.example.github-token&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
    .&lt;span class="pl-c1"&gt;synchronizable&lt;/span&gt;(&lt;span class="pl-c1"&gt;true&lt;/span&gt;)

keychain[&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;kishikawakatsumi&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;] &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;01234567-89ab-cdef-0123-456789abcdef&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h6&gt;&lt;a id="user-content-one-shot-2" class="anchor" aria-hidden="true" href="#one-shot-2"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;One-shot&lt;/h6&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;let&lt;/span&gt; keychain &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;Keychain&lt;/span&gt;(&lt;span class="pl-c1"&gt;service&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;com.example.github-token&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)

&lt;span class="pl-k"&gt;do&lt;/span&gt; {
    &lt;span class="pl-k"&gt;try&lt;/span&gt; keychain
        .&lt;span class="pl-c1"&gt;synchronizable&lt;/span&gt;(&lt;span class="pl-c1"&gt;true&lt;/span&gt;)
        .&lt;span class="pl-c1"&gt;set&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;01234567-89ab-cdef-0123-456789abcdef&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-c1"&gt;key&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;kishikawakatsumi&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
} &lt;span class="pl-k"&gt;catch&lt;/span&gt; &lt;span class="pl-k"&gt;let&lt;/span&gt; error {
    &lt;span class="pl-c1"&gt;print&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;error: &lt;span class="pl-pse"&gt;\(&lt;/span&gt;&lt;span class="pl-s1"&gt;error&lt;/span&gt;&lt;span class="pl-pse"&gt;&lt;span class="pl-s1"&gt;)&lt;/span&gt;&lt;/span&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
}&lt;/pre&gt;&lt;/div&gt;
&lt;/a&gt;&lt;h3&gt;&lt;a id="user-content--fu-touch-id-face-id-integration" class="anchor" aria-hidden="true" href="#-fu-touch-id-face-id-integration"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;a name="user-content-icloud_sharing"&gt;&lt;/a&gt;&lt;a name="user-content-touch_id_integration"&gt; &lt;g-emoji class="g-emoji" alias="middle_finger" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f595.png"&gt;🖕&lt;/g-emoji&gt; Touch ID (Face ID) integration&lt;/a&gt;&lt;/h3&gt;&lt;a name="user-content-touch_id_integration"&gt;
&lt;p&gt;&lt;strong&gt;Any Operation that require authentication must be run in the background thread.&lt;/strong&gt;&lt;br&gt;
&lt;strong&gt;If you run in the main thread, UI thread will lock for the system to try to display the authentication dialog.&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;To use Face ID, add &lt;code&gt;NSFaceIDUsageDescription&lt;/code&gt; key to your &lt;code&gt;Info.plist&lt;/code&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;h4&gt;&lt;a id="user-content-closed_lock_with_key-adding-a-touch-id-face-id-protected-item" class="anchor" aria-hidden="true" href="#closed_lock_with_key-adding-a-touch-id-face-id-protected-item"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;g-emoji class="g-emoji" alias="closed_lock_with_key" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f510.png"&gt;🔐&lt;/g-emoji&gt; Adding a Touch ID (Face ID) protected item&lt;/h4&gt;
&lt;p&gt;If you want to store the Touch ID protected Keychain item, specify &lt;code&gt;accessibility&lt;/code&gt; and &lt;code&gt;authenticationPolicy&lt;/code&gt; attributes.&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;let&lt;/span&gt; keychain &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;Keychain&lt;/span&gt;(&lt;span class="pl-c1"&gt;service&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;com.example.github-token&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)

DispatchQueue.&lt;span class="pl-c1"&gt;global&lt;/span&gt;().&lt;span class="pl-smi"&gt;async&lt;/span&gt; {
    &lt;span class="pl-k"&gt;do&lt;/span&gt; {
        &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Should be the secret invalidated when passcode is removed? If not then use `.WhenUnlocked`&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;        &lt;span class="pl-k"&gt;try&lt;/span&gt; keychain
            .&lt;span class="pl-c1"&gt;accessibility&lt;/span&gt;(.&lt;span class="pl-smi"&gt;whenPasscodeSetThisDeviceOnly&lt;/span&gt;, &lt;span class="pl-c1"&gt;authenticationPolicy&lt;/span&gt;: .&lt;span class="pl-smi"&gt;userPresence&lt;/span&gt;)
            .&lt;span class="pl-c1"&gt;set&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;01234567-89ab-cdef-0123-456789abcdef&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-c1"&gt;key&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;kishikawakatsumi&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
    } &lt;span class="pl-k"&gt;catch&lt;/span&gt; &lt;span class="pl-k"&gt;let&lt;/span&gt; error {
        &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Error handling if needed...&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;    }
}&lt;/pre&gt;&lt;/div&gt;
&lt;h4&gt;&lt;a id="user-content-closed_lock_with_key-updating-a-touch-id-face-id-protected-item" class="anchor" aria-hidden="true" href="#closed_lock_with_key-updating-a-touch-id-face-id-protected-item"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;g-emoji class="g-emoji" alias="closed_lock_with_key" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f510.png"&gt;🔐&lt;/g-emoji&gt; Updating a Touch ID (Face ID) protected item&lt;/h4&gt;
&lt;p&gt;The same way as when adding.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Do not run in the main thread if there is a possibility that the item you are trying to add already exists, and protected.&lt;/strong&gt;
&lt;strong&gt;Because updating protected items requires authentication.&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Additionally, you want to show custom authentication prompt message when updating, specify an &lt;code&gt;authenticationPrompt&lt;/code&gt; attribute.
If the item not protected, the &lt;code&gt;authenticationPrompt&lt;/code&gt; parameter just be ignored.&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;let&lt;/span&gt; keychain &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;Keychain&lt;/span&gt;(&lt;span class="pl-c1"&gt;service&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;com.example.github-token&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)

DispatchQueue.&lt;span class="pl-c1"&gt;global&lt;/span&gt;().&lt;span class="pl-smi"&gt;async&lt;/span&gt; {
    &lt;span class="pl-k"&gt;do&lt;/span&gt; {
        &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Should be the secret invalidated when passcode is removed? If not then use `.WhenUnlocked`&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;        &lt;span class="pl-k"&gt;try&lt;/span&gt; keychain
            .&lt;span class="pl-c1"&gt;accessibility&lt;/span&gt;(.&lt;span class="pl-smi"&gt;whenPasscodeSetThisDeviceOnly&lt;/span&gt;, &lt;span class="pl-c1"&gt;authenticationPolicy&lt;/span&gt;: .&lt;span class="pl-smi"&gt;userPresence&lt;/span&gt;)
            .&lt;span class="pl-c1"&gt;authenticationPrompt&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;Authenticate to update your access token&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
            .&lt;span class="pl-c1"&gt;set&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;01234567-89ab-cdef-0123-456789abcdef&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-c1"&gt;key&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;kishikawakatsumi&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
    } &lt;span class="pl-k"&gt;catch&lt;/span&gt; &lt;span class="pl-k"&gt;let&lt;/span&gt; error {
        &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Error handling if needed...&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;    }
}&lt;/pre&gt;&lt;/div&gt;
&lt;h4&gt;&lt;a id="user-content-closed_lock_with_key-obtaining-a-touch-id-face-id-protected-item" class="anchor" aria-hidden="true" href="#closed_lock_with_key-obtaining-a-touch-id-face-id-protected-item"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;g-emoji class="g-emoji" alias="closed_lock_with_key" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f510.png"&gt;🔐&lt;/g-emoji&gt; Obtaining a Touch ID (Face ID) protected item&lt;/h4&gt;
&lt;p&gt;The same way as when you get a normal item. It will be displayed automatically Touch ID or passcode authentication If the item you try to get is protected.&lt;br&gt;
If you want to show custom authentication prompt message, specify an &lt;code&gt;authenticationPrompt&lt;/code&gt; attribute.
If the item not protected, the &lt;code&gt;authenticationPrompt&lt;/code&gt; parameter just be ignored.&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;let&lt;/span&gt; keychain &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;Keychain&lt;/span&gt;(&lt;span class="pl-c1"&gt;service&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;com.example.github-token&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)

DispatchQueue.&lt;span class="pl-c1"&gt;global&lt;/span&gt;().&lt;span class="pl-smi"&gt;async&lt;/span&gt; {
    &lt;span class="pl-k"&gt;do&lt;/span&gt; {
        &lt;span class="pl-k"&gt;let&lt;/span&gt; password &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-k"&gt;try&lt;/span&gt; keychain
            .&lt;span class="pl-c1"&gt;authenticationPrompt&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;Authenticate to login to server&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
            .&lt;span class="pl-c1"&gt;get&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;kishikawakatsumi&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)

        &lt;span class="pl-c1"&gt;print&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;password: &lt;span class="pl-pse"&gt;\(&lt;/span&gt;&lt;span class="pl-s1"&gt;password&lt;/span&gt;&lt;span class="pl-pse"&gt;&lt;span class="pl-s1"&gt;)&lt;/span&gt;&lt;/span&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
    } &lt;span class="pl-k"&gt;catch&lt;/span&gt; &lt;span class="pl-k"&gt;let&lt;/span&gt; error {
        &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Error handling if needed...&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;    }
}&lt;/pre&gt;&lt;/div&gt;
&lt;h4&gt;&lt;a id="user-content-closed_lock_with_key-removing-a-touch-id-face-id-protected-item" class="anchor" aria-hidden="true" href="#closed_lock_with_key-removing-a-touch-id-face-id-protected-item"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;g-emoji class="g-emoji" alias="closed_lock_with_key" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f510.png"&gt;🔐&lt;/g-emoji&gt; Removing a Touch ID (Face ID) protected item&lt;/h4&gt;
&lt;p&gt;The same way as when you remove a normal item.
There is no way to show Touch ID or passcode authentication when removing Keychain items.&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;let&lt;/span&gt; keychain &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;Keychain&lt;/span&gt;(&lt;span class="pl-c1"&gt;service&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;com.example.github-token&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)

&lt;span class="pl-k"&gt;do&lt;/span&gt; {
    &lt;span class="pl-k"&gt;try&lt;/span&gt; keychain.&lt;span class="pl-c1"&gt;remove&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;kishikawakatsumi&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
} &lt;span class="pl-k"&gt;catch&lt;/span&gt; &lt;span class="pl-k"&gt;let&lt;/span&gt; error {
    &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Error handling if needed...&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;}&lt;/pre&gt;&lt;/div&gt;
&lt;/a&gt;&lt;h3&gt;&lt;a id="user-content--key-shared-web-credentials" class="anchor" aria-hidden="true" href="#-key-shared-web-credentials"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;a name="user-content-touch_id_integration"&gt;&lt;/a&gt;&lt;a name="user-content-shared_web_credentials"&gt; &lt;g-emoji class="g-emoji" alias="key" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f511.png"&gt;🔑&lt;/g-emoji&gt; Shared Web Credentials&lt;/a&gt;&lt;/h3&gt;&lt;a name="user-content-shared_web_credentials"&gt;
&lt;/a&gt;&lt;blockquote&gt;&lt;a name="user-content-shared_web_credentials"&gt;
&lt;/a&gt;&lt;p&gt;&lt;a name="user-content-shared_web_credentials"&gt;Shared web credentials is a programming interface that enables native iOS apps to share credentials with their website counterparts. For example, a user may log in to a website in Safari, entering a user name and password, and save those credentials using the iCloud Keychain. Later, the user may run a native app from the same developer, and instead of the app requiring the user to reenter a user name and password, shared web credentials gives it access to the credentials that were entered earlier in Safari. The user can also create new accounts, update passwords, or delete her account from within the app. These changes are then saved and used by Safari.&lt;br&gt;
&lt;/a&gt;&lt;a href="https://developer.apple.com/library/ios/documentation/Security/Reference/SharedWebCredentialsRef/" rel="nofollow"&gt;https://developer.apple.com/library/ios/documentation/Security/Reference/SharedWebCredentialsRef/&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;let&lt;/span&gt; keychain &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;Keychain&lt;/span&gt;(&lt;span class="pl-c1"&gt;server&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;https://www.kishikawakatsumi.com&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-c1"&gt;protocolType&lt;/span&gt;: .&lt;span class="pl-smi"&gt;HTTPS&lt;/span&gt;)

&lt;span class="pl-k"&gt;let&lt;/span&gt; username &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;kishikawakatsumi@mac.com&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; First, check the credential in the app's Keychain&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;&lt;span class="pl-k"&gt;if&lt;/span&gt; &lt;span class="pl-k"&gt;let&lt;/span&gt; password &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-k"&gt;try&lt;/span&gt;&lt;span class="pl-k"&gt;?&lt;/span&gt; keychain.&lt;span class="pl-c1"&gt;get&lt;/span&gt;(username) {
    &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; If found password in the Keychain,&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;    &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; then log into the server&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;} &lt;span class="pl-k"&gt;else&lt;/span&gt; {
    &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; If not found password in the Keychain,&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;    &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; try to read from Shared Web Credentials&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;    keychain.&lt;span class="pl-c1"&gt;getSharedPassword&lt;/span&gt;(username) { (password, error) &lt;span class="pl-k"&gt;-&amp;gt;&lt;/span&gt; () &lt;span class="pl-k"&gt;in&lt;/span&gt;
        &lt;span class="pl-k"&gt;if&lt;/span&gt; password &lt;span class="pl-k"&gt;!=&lt;/span&gt; &lt;span class="pl-c1"&gt;nil&lt;/span&gt; {
            &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; If found password in the Shared Web Credentials,&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;            &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; then log into the server&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;            &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; and save the password to the Keychain&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;
            keychain[username] &lt;span class="pl-k"&gt;=&lt;/span&gt; password
        } &lt;span class="pl-k"&gt;else&lt;/span&gt; {
            &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; If not found password either in the Keychain also Shared Web Credentials,&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;            &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; prompt for username and password&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;
            &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Log into server&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;
            &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; If the login is successful,&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;            &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; save the credentials to both the Keychain and the Shared Web Credentials.&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;
            keychain[username] &lt;span class="pl-k"&gt;=&lt;/span&gt; inputPassword
            keychain.&lt;span class="pl-c1"&gt;setSharedPassword&lt;/span&gt;(inputPassword, &lt;span class="pl-c1"&gt;account&lt;/span&gt;: username)
        }
    }
}&lt;/pre&gt;&lt;/div&gt;
&lt;h4&gt;&lt;a id="user-content-request-all-associated-domains-credentials" class="anchor" aria-hidden="true" href="#request-all-associated-domains-credentials"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Request all associated domain's credentials&lt;/h4&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;Keychain.&lt;span class="pl-smi"&gt;requestSharedWebCredential&lt;/span&gt; { (credentials, error) &lt;span class="pl-k"&gt;-&amp;gt;&lt;/span&gt; () &lt;span class="pl-k"&gt;in&lt;/span&gt;

}&lt;/pre&gt;&lt;/div&gt;
&lt;h4&gt;&lt;a id="user-content-generate-strong-random-password" class="anchor" aria-hidden="true" href="#generate-strong-random-password"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Generate strong random password&lt;/h4&gt;
&lt;p&gt;Generate strong random password that is in the same format used by Safari autofill (xxx-xxx-xxx-xxx).&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;let&lt;/span&gt; password &lt;span class="pl-k"&gt;=&lt;/span&gt; Keychain.&lt;span class="pl-c1"&gt;generatePassword&lt;/span&gt;() &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; =&amp;gt; Nhu-GKm-s3n-pMx&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h4&gt;&lt;a id="user-content-how-to-set-up-shared-web-credentials" class="anchor" aria-hidden="true" href="#how-to-set-up-shared-web-credentials"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;How to set up Shared Web Credentials&lt;/h4&gt;
&lt;blockquote&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;Add a com.apple.developer.associated-domains entitlement to your app. This entitlement must include all the domains with which you want to share credentials.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Add an apple-app-site-association file to your website. This file must include application identifiers for all the apps with which the site wants to share credentials, and it must be properly signed.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;When the app is installed, the system downloads and verifies the site association file for each of its associated domains. If the verification is successful, the app is associated with the domain.&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;strong&gt;More details:&lt;/strong&gt;&lt;br&gt;
&lt;a href="https://developer.apple.com/library/ios/documentation/Security/Reference/SharedWebCredentialsRef/" rel="nofollow"&gt;https://developer.apple.com/library/ios/documentation/Security/Reference/SharedWebCredentialsRef/&lt;/a&gt;&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-key-debugging" class="anchor" aria-hidden="true" href="#key-debugging"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;g-emoji class="g-emoji" alias="key" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f511.png"&gt;🔑&lt;/g-emoji&gt; Debugging&lt;/h3&gt;
&lt;h4&gt;&lt;a id="user-content-display-all-stored-items-if-print-keychain-object" class="anchor" aria-hidden="true" href="#display-all-stored-items-if-print-keychain-object"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Display all stored items if print keychain object&lt;/h4&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;let&lt;/span&gt; keychain &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;Keychain&lt;/span&gt;(&lt;span class="pl-c1"&gt;server&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;https://github.com&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-c1"&gt;protocolType&lt;/span&gt;: .&lt;span class="pl-smi"&gt;https&lt;/span&gt;)
&lt;span class="pl-c1"&gt;print&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;span class="pl-pse"&gt;\(&lt;/span&gt;&lt;span class="pl-s1"&gt;keychain&lt;/span&gt;&lt;span class="pl-pse"&gt;&lt;span class="pl-s1"&gt;)&lt;/span&gt;&lt;/span&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)&lt;/pre&gt;&lt;/div&gt;
&lt;pre&gt;&lt;code&gt;=&amp;gt;
[
  [authenticationType: default, key: kishikawakatsumi, server: github.com, class: internetPassword, protocol: https]
  [authenticationType: default, key: hirohamada, server: github.com, class: internetPassword, protocol: https]
  [authenticationType: default, key: honeylemon, server: github.com, class: internetPassword, protocol: https]
]
&lt;/code&gt;&lt;/pre&gt;
&lt;h4&gt;&lt;a id="user-content-obtaining-all-stored-keys" class="anchor" aria-hidden="true" href="#obtaining-all-stored-keys"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Obtaining all stored keys&lt;/h4&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;let&lt;/span&gt; keychain &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;Keychain&lt;/span&gt;(&lt;span class="pl-c1"&gt;server&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;https://github.com&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-c1"&gt;protocolType&lt;/span&gt;: .&lt;span class="pl-smi"&gt;https&lt;/span&gt;)

&lt;span class="pl-k"&gt;let&lt;/span&gt; keys &lt;span class="pl-k"&gt;=&lt;/span&gt; keychain.&lt;span class="pl-c1"&gt;allKeys&lt;/span&gt;()
&lt;span class="pl-k"&gt;for&lt;/span&gt; key &lt;span class="pl-k"&gt;in&lt;/span&gt; keys {
  &lt;span class="pl-c1"&gt;print&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;key: &lt;span class="pl-pse"&gt;\(&lt;/span&gt;&lt;span class="pl-s1"&gt;key&lt;/span&gt;&lt;span class="pl-pse"&gt;&lt;span class="pl-s1"&gt;)&lt;/span&gt;&lt;/span&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
}&lt;/pre&gt;&lt;/div&gt;
&lt;pre&gt;&lt;code&gt;=&amp;gt;
key: kishikawakatsumi
key: hirohamada
key: honeylemon
&lt;/code&gt;&lt;/pre&gt;
&lt;h4&gt;&lt;a id="user-content-obtaining-all-stored-items" class="anchor" aria-hidden="true" href="#obtaining-all-stored-items"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Obtaining all stored items&lt;/h4&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;let&lt;/span&gt; keychain &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;Keychain&lt;/span&gt;(&lt;span class="pl-c1"&gt;server&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;https://github.com&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-c1"&gt;protocolType&lt;/span&gt;: .&lt;span class="pl-smi"&gt;https&lt;/span&gt;)

&lt;span class="pl-k"&gt;let&lt;/span&gt; items &lt;span class="pl-k"&gt;=&lt;/span&gt; keychain.&lt;span class="pl-c1"&gt;allItems&lt;/span&gt;()
&lt;span class="pl-k"&gt;for&lt;/span&gt; item &lt;span class="pl-k"&gt;in&lt;/span&gt; items {
  &lt;span class="pl-c1"&gt;print&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;item: &lt;span class="pl-pse"&gt;\(&lt;/span&gt;&lt;span class="pl-s1"&gt;item&lt;/span&gt;&lt;span class="pl-pse"&gt;&lt;span class="pl-s1"&gt;)&lt;/span&gt;&lt;/span&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
}&lt;/pre&gt;&lt;/div&gt;
&lt;pre&gt;&lt;code&gt;=&amp;gt;
item: [authenticationType: Default, key: kishikawakatsumi, server: github.com, class: InternetPassword, protocol: https]
item: [authenticationType: Default, key: hirohamada, server: github.com, class: InternetPassword, protocol: https]
item: [authenticationType: Default, key: honeylemon, server: github.com, class: InternetPassword, protocol: https]
&lt;/code&gt;&lt;/pre&gt;
&lt;h2&gt;&lt;a id="user-content-keychain-sharing-capability" class="anchor" aria-hidden="true" href="#keychain-sharing-capability"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Keychain sharing capability&lt;/h2&gt;
&lt;p&gt;If you encounter the error below, you need to add an &lt;code&gt;Keychain.entitlements&lt;/code&gt;.&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;OSStatus error:[-34018] Internal error when a required entitlement isn't present, client has neither application-identifier nor keychain-access-groups entitlements.
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="https://user-images.githubusercontent.com/40610/67627108-1a7f2f80-f891-11e9-97bc-7f7313cb63d1.png"&gt;&lt;img alt="Screen Shot 2019-10-27 at 8 08 50" src="https://user-images.githubusercontent.com/40610/67627108-1a7f2f80-f891-11e9-97bc-7f7313cb63d1.png" width="500" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="https://user-images.githubusercontent.com/40610/67627072-333b1580-f890-11e9-9feb-bf507abc2724.png"&gt;&lt;img src="https://user-images.githubusercontent.com/40610/67627072-333b1580-f890-11e9-9feb-bf507abc2724.png" width="500" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-requirements" class="anchor" aria-hidden="true" href="#requirements"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Requirements&lt;/h2&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;&lt;/th&gt;
&lt;th&gt;OS&lt;/th&gt;
&lt;th&gt;Swift&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;v1.1.x&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;iOS 7+, macOS 10.9+&lt;/td&gt;
&lt;td&gt;1.1&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;v1.2.x&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;iOS 7+, macOS 10.9+&lt;/td&gt;
&lt;td&gt;1.2&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;v2.0.x&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;iOS 7+, macOS 10.9+, watchOS 2+&lt;/td&gt;
&lt;td&gt;2.0&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;v2.1.x&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;iOS 7+, macOS 10.9+, watchOS 2+&lt;/td&gt;
&lt;td&gt;2.0&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;v2.2.x&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;iOS 8+, macOS 10.9+, watchOS 2+, tvOS 9+&lt;/td&gt;
&lt;td&gt;2.0, 2.1&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;v2.3.x&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;iOS 8+, macOS 10.9+, watchOS 2+, tvOS 9+&lt;/td&gt;
&lt;td&gt;2.0, 2.1, 2.2&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;v2.4.x&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;iOS 8+, macOS 10.9+, watchOS 2+, tvOS 9+&lt;/td&gt;
&lt;td&gt;2.2, 2.3&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;v3.0.x&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;iOS 8+, macOS 10.9+, watchOS 2+, tvOS 9+&lt;/td&gt;
&lt;td&gt;3.x&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;v3.1.x&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;iOS 8+, macOS 10.9+, watchOS 2+, tvOS 9+&lt;/td&gt;
&lt;td&gt;4.0, 4.1, 4.2&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;v3.2.x&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;iOS 8+, macOS 10.9+, watchOS 2+, tvOS 9+&lt;/td&gt;
&lt;td&gt;4.0, 4.1, 4.2, 5.0&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;v4.0.x&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;iOS 8+, macOS 10.9+, watchOS 2+, tvOS 9+&lt;/td&gt;
&lt;td&gt;4.0, 4.1, 4.2, 5.1&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;v4.1.x&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;iOS 8+, macOS 10.9+, watchOS 3+, tvOS 9+, Mac Catalyst 13+&lt;/td&gt;
&lt;td&gt;4.0, 4.1, 4.2, 5.1&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h2&gt;&lt;a id="user-content-installation" class="anchor" aria-hidden="true" href="#installation"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Installation&lt;/h2&gt;
&lt;h3&gt;&lt;a id="user-content-cocoapods" class="anchor" aria-hidden="true" href="#cocoapods"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;CocoaPods&lt;/h3&gt;
&lt;p&gt;KeychainAccess is available through &lt;a href="http://cocoapods.org" rel="nofollow"&gt;CocoaPods&lt;/a&gt;. To install
it, simply add the following lines to your Podfile:&lt;/p&gt;
&lt;div class="highlight highlight-source-ruby"&gt;&lt;pre&gt;use_frameworks!
pod &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;KeychainAccess&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h3&gt;&lt;a id="user-content-carthage" class="anchor" aria-hidden="true" href="#carthage"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Carthage&lt;/h3&gt;
&lt;p&gt;KeychainAccess is available through &lt;a href="https://github.com/Carthage/Carthage"&gt;Carthage&lt;/a&gt;. To install
it, simply add the following line to your Cartfile:&lt;/p&gt;
&lt;p&gt;&lt;code&gt;github "kishikawakatsumi/KeychainAccess"&lt;/code&gt;&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-swift-package-manager" class="anchor" aria-hidden="true" href="#swift-package-manager"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Swift Package Manager&lt;/h3&gt;
&lt;p&gt;KeychainAccess is also available through &lt;a href="https://github.com/apple/swift-package-manager/"&gt;Swift Package Manager&lt;/a&gt;.&lt;/p&gt;
&lt;h4&gt;&lt;a id="user-content-xcode" class="anchor" aria-hidden="true" href="#xcode"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Xcode&lt;/h4&gt;
&lt;p&gt;Select &lt;code&gt;File &amp;gt; Swift Packages &amp;gt; Add Package Dependency...&lt;/code&gt;,&lt;/p&gt;
&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="https://user-images.githubusercontent.com/40610/67627000-2833b580-f88f-11e9-89ef-18819b1a6c67.png"&gt;&lt;img src="https://user-images.githubusercontent.com/40610/67627000-2833b580-f88f-11e9-89ef-18819b1a6c67.png" width="800px" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h4&gt;&lt;a id="user-content-cli" class="anchor" aria-hidden="true" href="#cli"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;CLI&lt;/h4&gt;
&lt;p&gt;First, create &lt;code&gt;Package.swift&lt;/code&gt; that its package declaration includes:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; swift-tools-version:5.0&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;&lt;span class="pl-k"&gt;import&lt;/span&gt; &lt;span class="pl-en"&gt;PackageDescription&lt;/span&gt;

&lt;span class="pl-k"&gt;let&lt;/span&gt; package &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;Package&lt;/span&gt;(
    &lt;span class="pl-c1"&gt;name&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;MyLibrary&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;,
    &lt;span class="pl-c1"&gt;products&lt;/span&gt;: [
        .&lt;span class="pl-c1"&gt;library&lt;/span&gt;(&lt;span class="pl-c1"&gt;name&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;MyLibrary&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-c1"&gt;targets&lt;/span&gt;: [&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;MyLibrary&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;]),
    ],
    &lt;span class="pl-c1"&gt;dependencies&lt;/span&gt;: [
        .&lt;span class="pl-c1"&gt;package&lt;/span&gt;(&lt;span class="pl-c1"&gt;url&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;https://github.com/kishikawakatsumi/KeychainAccess.git&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-c1"&gt;from&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;3.0.0&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;),
    ],
    &lt;span class="pl-c1"&gt;targets&lt;/span&gt;: [
        .&lt;span class="pl-c1"&gt;target&lt;/span&gt;(&lt;span class="pl-c1"&gt;name&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;MyLibrary&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-c1"&gt;dependencies&lt;/span&gt;: [&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;KeychainAccess&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;]),
    ]
)&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Then, type&lt;/p&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt;$ swift build&lt;/pre&gt;&lt;/div&gt;
&lt;h3&gt;&lt;a id="user-content-to-manually-add-to-your-project" class="anchor" aria-hidden="true" href="#to-manually-add-to-your-project"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;To manually add to your project&lt;/h3&gt;
&lt;ol&gt;
&lt;li&gt;Add &lt;code&gt;Lib/KeychainAccess.xcodeproj&lt;/code&gt; to your project&lt;/li&gt;
&lt;li&gt;Link &lt;code&gt;KeychainAccess.framework&lt;/code&gt; with your target&lt;/li&gt;
&lt;li&gt;Add &lt;code&gt;Copy Files Build Phase&lt;/code&gt; to include the framework to your application bundle&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;em&gt;See &lt;a href="https://github.com/kishikawakatsumi/KeychainAccess/tree/master/Examples/Example-iOS"&gt;iOS Example Project&lt;/a&gt; as reference.&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="https://raw.githubusercontent.com/kishikawakatsumi/KeychainAccess/master/Screenshots/Installation.png"&gt;&lt;img src="https://raw.githubusercontent.com/kishikawakatsumi/KeychainAccess/master/Screenshots/Installation.png" width="800px" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-author" class="anchor" aria-hidden="true" href="#author"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Author&lt;/h2&gt;
&lt;p&gt;kishikawa katsumi, &lt;a href="mailto:kishikawakatsumi@mac.com"&gt;kishikawakatsumi@mac.com&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-license" class="anchor" aria-hidden="true" href="#license"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;License&lt;/h2&gt;
&lt;p&gt;KeychainAccess is available under the MIT license. See the LICENSE file for more info.&lt;/p&gt;
&lt;/article&gt;&lt;/div&gt;</description><author>kishikawakatsumi</author><guid isPermaLink="false">https://github.com/kishikawakatsumi/KeychainAccess</guid><pubDate>Sat, 25 Jan 2020 00:10:00 GMT</pubDate></item><item><title>bizz84/SwiftyStoreKit #11 in Swift, This week</title><link>https://github.com/bizz84/SwiftyStoreKit</link><description>&lt;p&gt;&lt;i&gt;Lightweight In App Purchases Swift framework for iOS 8.0+, tvOS 9.0+ and macOS 10.10+ ⛺&lt;/i&gt;&lt;/p&gt;&lt;div id="readme" class="md" data-path="README.md"&gt;&lt;article class="markdown-body entry-content p-5" itemprop="text"&gt;&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="https://github.com/bizz84/SwiftyStoreKit/raw/master/SwiftyStoreKit-logo.png"&gt;&lt;img src="https://github.com/bizz84/SwiftyStoreKit/raw/master/SwiftyStoreKit-logo.png" alt="" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href="http://mit-license.org" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/d0e25b09a82bc4bfde9f1e048a092752eebbb4f3/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f6c6963656e73652d4d49542d626c75652e7376673f7374796c653d666c6174" alt="License" data-canonical-src="https://img.shields.io/badge/license-MIT-blue.svg?style=flat" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://developer.apple.com/resources/" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/87502612c38173fbb802c8972702aa563672eff6/687474703a2f2f696d672e736869656c64732e696f2f62616467652f706c6174666f726d2d696f732532302537432532306d61636f7325323025374325323074766f732d6c69676874677265792e7376673f7374796c653d666c6174" alt="Platform" data-canonical-src="http://img.shields.io/badge/platform-ios%20%7C%20macos%20%7C%20tvos-lightgrey.svg?style=flat" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://developer.apple.com/swift" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/440edeeeb3b2c1b118c6184fd929167587dea9a2/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f73776966742d352e302d6f72616e67652e737667" alt="Language" data-canonical-src="https://img.shields.io/badge/swift-5.0-orange.svg" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://travis-ci.org/bizz84/SwiftyStoreKit" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/11af336c76b68ba40d48196ad0b21c835e894e7e/68747470733a2f2f696d672e736869656c64732e696f2f7472617669732f62697a7a38342f53776966747953746f72654b69742e7376673f7374796c653d666c6174" alt="Build" data-canonical-src="https://img.shields.io/travis/bizz84/SwiftyStoreKit.svg?style=flat" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://github.com/bizz84/SwiftyStoreKit/issues"&gt;&lt;img src="https://camo.githubusercontent.com/79006b70c2f71dd73c470757cf23acdf4e022b0f/68747470733a2f2f696d672e736869656c64732e696f2f6769746875622f6973737565732f62697a7a38342f53776966747953746f72654b69742e7376673f7374796c653d666c6174" alt="Issues" data-canonical-src="https://img.shields.io/github/issues/bizz84/SwiftyStoreKit.svg?style=flat" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://join.slack.com/t/swiftystorekit/shared_invite/enQtNjkzNTg5NTMyMTgwLTcyZGIzMTg0MWFmMTQyMDYxNDcyYWNhOTlmNjUyM2E0OTllNjE2ZDJiNDI0ZDAzMWU2Mzc3Nzk1YzJmMTE2NjI" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/855c26c0525b36c5f372603ba02714923a03bcc6/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f536c61636b2d4a6f696e2d677265656e2e7376673f7374796c653d666c6174" alt="Slack" data-canonical-src="https://img.shields.io/badge/Slack-Join-green.svg?style=flat" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="http://cocoadocs.org/docsets/SwiftyStoreKit/" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/8884a81f121edea92ce9cf66305be896dca38b62/687474703a2f2f696d672e736869656c64732e696f2f636f636f61706f64732f762f53776966747953746f72654b69742e7376673f7374796c653d666c6174" alt="Cocoapod" data-canonical-src="http://img.shields.io/cocoapods/v/SwiftyStoreKit.svg?style=flat" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://github.com/Carthage/Carthage"&gt;&lt;img src="https://camo.githubusercontent.com/3dc8a44a2c3f7ccd5418008d1295aae48466c141/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f43617274686167652d636f6d70617469626c652d3442433531442e7376673f7374796c653d666c6174" alt="Carthage compatible" data-canonical-src="https://img.shields.io/badge/Carthage-compatible-4BC51D.svg?style=flat" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://github.com/JamitLabs/Accio"&gt;&lt;img src="https://camo.githubusercontent.com/e502cdc2b27c1f2b2590f061d37b984ba3957c26/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f416363696f2d737570706f727465642d3041374346352e7376673f7374796c653d666c6174" alt="Accio supported" data-canonical-src="https://img.shields.io/badge/Accio-supported-0A7CF5.svg?style=flat" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="http://twitter.com/biz84" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/e8a92c20aa32e95b5213d670aab53180829342c1/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f747769747465722d4062697a38342d626c75652e7376673f6d61784167653d32353932303030" alt="Twitter" data-canonical-src="https://img.shields.io/badge/twitter-@biz84-blue.svg?maxAge=2592000" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;SwiftyStoreKit is a lightweight In App Purchases framework for iOS 8.0+, tvOS 9.0+ and macOS 10.10+.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-preview" class="anchor" aria-hidden="true" href="#preview"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Preview&lt;/h3&gt;
&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="https://github.com/bizz84/SwiftyStoreKit/raw/master/Screenshots/Preview.jpg"&gt;&lt;img src="https://github.com/bizz84/SwiftyStoreKit/raw/master/Screenshots/Preview.jpg" width="320" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-join-on-slack" class="anchor" aria-hidden="true" href="#join-on-slack"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Join on Slack&lt;/h3&gt;
&lt;p&gt;SwiftyStoreKit is on Slack. &lt;a href="https://join.slack.com/t/swiftystorekit/shared_invite/enQtNjkzNTg5NTMyMTgwLTcyZGIzMTg0MWFmMTQyMDYxNDcyYWNhOTlmNjUyM2E0OTllNjE2ZDJiNDI0ZDAzMWU2Mzc3Nzk1YzJmMTE2NjI" rel="nofollow"&gt;Join here&lt;/a&gt;.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-maintainers-wanted" class="anchor" aria-hidden="true" href="#maintainers-wanted"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Maintainers Wanted&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;The author no longer maintaining this project actively. If you'd like to become a maintainer, &lt;a href="https://join.slack.com/t/swiftystorekit/shared_invite/enQtNjkzNTg5NTMyMTgwLTcyZGIzMTg0MWFmMTQyMDYxNDcyYWNhOTlmNjUyM2E0OTllNjE2ZDJiNDI0ZDAzMWU2Mzc3Nzk1YzJmMTE2NjI" rel="nofollow"&gt;join the Slack workspace&lt;/a&gt; and enter the &lt;a href="https://app.slack.com/client/TL2JYQ458/CLG62K26A/details/" rel="nofollow"&gt;#maintainers&lt;/a&gt; channel.&lt;/li&gt;
&lt;li&gt;Going forward, SwiftyStoreKit should be made for the community, by the community.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;More info here:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://medium.com/@biz84/the-future-of-swiftystorekit-maintainers-needed-f60d01572c91" rel="nofollow"&gt;The Future of SwiftyStoreKit: Maintainers Wanted&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-content" class="anchor" aria-hidden="true" href="#content"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Content&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="#installation"&gt;Installation&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="#cocoapods"&gt;CocoaPods&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#carthage"&gt;Carthage&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="#features"&gt;Features&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#contributing"&gt;Contributing&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#app-startup"&gt;App startup&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="#complete-transactions"&gt;Complete Transactions&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="#purchases"&gt;Purchases&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="#retrieve-products-info"&gt;Retrieve products info&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#purchase-a-product-given-a-product-id"&gt;Purchase a product (given a product id)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#purchase-a-product-given-a-skproduct"&gt;Purchase a product (given a SKProduct)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#handle-purchases-started-on-the-app-store-ios-11"&gt;Handle purchases started on the App Store (iOS 11)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#restore-previous-purchases"&gt;Restore previous purchases&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#downloading-content-hosted-with-apple"&gt;Downloading content hosted with Apple&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="#receipt-verification"&gt;Receipt verification&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="#retrieve-local-receipt-encrypted"&gt;Retrieve local receipt (encrypted)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#fetch-receipt-encrypted"&gt;Fetch receipt (encrypted)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#verify-receipt"&gt;Verify Receipt&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="#verifying-purchases-and-subscriptions"&gt;Verifying purchases and subscriptions&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="#verify-purchase"&gt;Verify Purchase&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#verify-subscription"&gt;Verify Subscription&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#subscription-groups"&gt;Subscription Groups&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="#notes"&gt;Notes&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#change-log"&gt;Change Log&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#sample-code"&gt;Sample Code&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#essential-reading"&gt;Essential Reading&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="#troubleshooting"&gt;Troubleshooting&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="#video-tutorials"&gt;Video Tutorials&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#payment-flows-implementation-details"&gt;Payment flows: implementation details&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#credits"&gt;Credits&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#apps-using-swiftystorekit"&gt;Apps using SwiftyStoreKit&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#license"&gt;License&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-installation" class="anchor" aria-hidden="true" href="#installation"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Installation&lt;/h2&gt;
&lt;h3&gt;&lt;a id="user-content-cocoapods" class="anchor" aria-hidden="true" href="#cocoapods"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;CocoaPods&lt;/h3&gt;
&lt;p&gt;SwiftyStoreKit can be installed as a &lt;a href="https://cocoapods.org/" rel="nofollow"&gt;CocoaPod&lt;/a&gt; and builds as a Swift framework. To install, include this in your Podfile.&lt;/p&gt;
&lt;div class="highlight highlight-source-ruby"&gt;&lt;pre&gt;use_frameworks!

pod &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;SwiftyStoreKit&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Once installed, just &lt;code&gt;import SwiftyStoreKit&lt;/code&gt; in your classes and you're good to go.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-carthage" class="anchor" aria-hidden="true" href="#carthage"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Carthage&lt;/h3&gt;
&lt;p&gt;To integrate SwiftyStoreKit into your Xcode project using &lt;a href="https://github.com/Carthage/Carthage"&gt;Carthage&lt;/a&gt;, specify it in your Cartfile:&lt;/p&gt;
&lt;pre lang="ogdl"&gt;&lt;code&gt;github "bizz84/SwiftyStoreKit"
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;strong&gt;NOTE&lt;/strong&gt;: Please ensure that you have the &lt;a href="https://github.com/Carthage/Carthage/releases"&gt;latest&lt;/a&gt; Carthage installed.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-swift-package-manager" class="anchor" aria-hidden="true" href="#swift-package-manager"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Swift Package Manager&lt;/h3&gt;
&lt;p&gt;You can add SwiftyStoreKit as an SPM dependency using this URL: &lt;code&gt;https://github.com/bizz84/SwiftyStoreKit.git&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;If you are using Xcode 11 or later, click &lt;code&gt;File&lt;/code&gt;, &lt;code&gt;Swift Packages&lt;/code&gt;, &lt;code&gt;Add Package Dependency...&lt;/code&gt; and specify the URL there.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-features" class="anchor" aria-hidden="true" href="#features"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Features&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Super easy to use block based API&lt;/li&gt;
&lt;li&gt;Support for consumable, non-consumable in-app purchases&lt;/li&gt;
&lt;li&gt;Support for free, auto-renewable and non-renewing subscriptions&lt;/li&gt;
&lt;li&gt;Support for in-app purchases started in the App Store (iOS 11)&lt;/li&gt;
&lt;li&gt;Remote receipt verification&lt;/li&gt;
&lt;li&gt;Verify purchases, subscriptions, subscription groups&lt;/li&gt;
&lt;li&gt;Downloading content hosted with Apple&lt;/li&gt;
&lt;li&gt;iOS, tvOS and macOS compatible&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-contributing" class="anchor" aria-hidden="true" href="#contributing"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Contributing&lt;/h2&gt;
&lt;h4&gt;&lt;a id="user-content-got-issues--pull-requests--want-to-contribute-read-here" class="anchor" aria-hidden="true" href="#got-issues--pull-requests--want-to-contribute-read-here"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Got issues / pull requests / want to contribute? &lt;a href="CONTRIBUTING.md"&gt;Read here&lt;/a&gt;.&lt;/h4&gt;
&lt;h2&gt;&lt;a id="user-content-app-startup" class="anchor" aria-hidden="true" href="#app-startup"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;App startup&lt;/h2&gt;
&lt;h3&gt;&lt;a id="user-content-complete-transactions" class="anchor" aria-hidden="true" href="#complete-transactions"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Complete Transactions&lt;/h3&gt;
&lt;p&gt;Apple recommends to register a transaction observer &lt;a href="https://developer.apple.com/library/ios/technotes/tn2387/_index.html" rel="nofollow"&gt;as soon as the app starts&lt;/a&gt;:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Adding your app's observer at launch ensures that it will persist during all launches of your app, thus allowing your app to receive all the payment queue notifications.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;SwiftyStoreKit supports this by calling &lt;code&gt;completeTransactions()&lt;/code&gt; when the app starts:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;func&lt;/span&gt; &lt;span class="pl-en"&gt;application&lt;/span&gt;(&lt;span class="pl-smi"&gt;&lt;span class="pl-en"&gt;application&lt;/span&gt;&lt;/span&gt;: UIApplication, &lt;span class="pl-en"&gt;didFinishLaunchingWithOptions&lt;/span&gt; &lt;span class="pl-smi"&gt;launchOptions&lt;/span&gt;: [NSObject: &lt;span class="pl-c1"&gt;AnyObject&lt;/span&gt;]&lt;span class="pl-k"&gt;?&lt;/span&gt;) &lt;span class="pl-k"&gt;-&amp;gt;&lt;/span&gt; &lt;span class="pl-c1"&gt;Bool&lt;/span&gt; {
	&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; see notes below for the meaning of Atomic / Non-Atomic&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;	SwiftyStoreKit.&lt;span class="pl-c1"&gt;completeTransactions&lt;/span&gt;(&lt;span class="pl-c1"&gt;atomically&lt;/span&gt;: &lt;span class="pl-c1"&gt;true&lt;/span&gt;) { purchases &lt;span class="pl-k"&gt;in&lt;/span&gt;
	    &lt;span class="pl-k"&gt;for&lt;/span&gt; purchase &lt;span class="pl-k"&gt;in&lt;/span&gt; purchases {
	        &lt;span class="pl-k"&gt;switch&lt;/span&gt; purchase.&lt;span class="pl-smi"&gt;transaction&lt;/span&gt;.&lt;span class="pl-smi"&gt;transactionState&lt;/span&gt; {
	        &lt;span class="pl-k"&gt;case&lt;/span&gt; .&lt;span class="pl-smi"&gt;purchased&lt;/span&gt;, .&lt;span class="pl-smi"&gt;restored&lt;/span&gt;&lt;span class="pl-k"&gt;:&lt;/span&gt;
	            &lt;span class="pl-k"&gt;if&lt;/span&gt; purchase.&lt;span class="pl-smi"&gt;needsFinishTransaction&lt;/span&gt; {
	                &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Deliver content from server, then:&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;	                SwiftyStoreKit.&lt;span class="pl-c1"&gt;finishTransaction&lt;/span&gt;(purchase.&lt;span class="pl-smi"&gt;transaction&lt;/span&gt;)
	            }
	            &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Unlock content&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;	        &lt;span class="pl-k"&gt;case&lt;/span&gt; .&lt;span class="pl-smi"&gt;failed&lt;/span&gt;, .&lt;span class="pl-smi"&gt;purchasing&lt;/span&gt;, .&lt;span class="pl-smi"&gt;deferred&lt;/span&gt;&lt;span class="pl-k"&gt;:&lt;/span&gt;
	            &lt;span class="pl-k"&gt;break&lt;/span&gt; &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; do nothing&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;	        }
	    }
	}
    &lt;span class="pl-k"&gt;return&lt;/span&gt; &lt;span class="pl-c1"&gt;true&lt;/span&gt;
}&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;If there are any pending transactions at this point, these will be reported by the completion block so that the app state and UI can be updated.&lt;/p&gt;
&lt;p&gt;If there are no pending transactions, the completion block will &lt;strong&gt;not&lt;/strong&gt; be called.&lt;/p&gt;
&lt;p&gt;Note that &lt;code&gt;completeTransactions()&lt;/code&gt; &lt;strong&gt;should only be called once&lt;/strong&gt; in your code, in &lt;code&gt;application(:didFinishLaunchingWithOptions:)&lt;/code&gt;.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-purchases" class="anchor" aria-hidden="true" href="#purchases"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Purchases&lt;/h2&gt;
&lt;h3&gt;&lt;a id="user-content-retrieve-products-info" class="anchor" aria-hidden="true" href="#retrieve-products-info"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Retrieve products info&lt;/h3&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;SwiftyStoreKit.&lt;span class="pl-c1"&gt;retrieveProductsInfo&lt;/span&gt;([&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;com.musevisions.SwiftyStoreKit.Purchase1&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;]) { result &lt;span class="pl-k"&gt;in&lt;/span&gt;
    &lt;span class="pl-k"&gt;if&lt;/span&gt; &lt;span class="pl-k"&gt;let&lt;/span&gt; product &lt;span class="pl-k"&gt;=&lt;/span&gt; result.&lt;span class="pl-smi"&gt;retrievedProducts&lt;/span&gt;.&lt;span class="pl-c1"&gt;first&lt;/span&gt; {
        &lt;span class="pl-k"&gt;let&lt;/span&gt; priceString &lt;span class="pl-k"&gt;=&lt;/span&gt; product.&lt;span class="pl-smi"&gt;localizedPrice&lt;/span&gt;&lt;span class="pl-k"&gt;!&lt;/span&gt;
        &lt;span class="pl-c1"&gt;print&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;Product: &lt;span class="pl-pse"&gt;\(&lt;/span&gt;&lt;span class="pl-s1"&gt;product.&lt;span class="pl-smi"&gt;localizedDescription&lt;/span&gt;&lt;/span&gt;&lt;span class="pl-pse"&gt;&lt;span class="pl-s1"&gt;)&lt;/span&gt;&lt;/span&gt;, price: &lt;span class="pl-pse"&gt;\(&lt;/span&gt;&lt;span class="pl-s1"&gt;priceString&lt;/span&gt;&lt;span class="pl-pse"&gt;&lt;span class="pl-s1"&gt;)&lt;/span&gt;&lt;/span&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
    }
    &lt;span class="pl-k"&gt;else&lt;/span&gt; &lt;span class="pl-k"&gt;if&lt;/span&gt; &lt;span class="pl-k"&gt;let&lt;/span&gt; invalidProductId &lt;span class="pl-k"&gt;=&lt;/span&gt; result.&lt;span class="pl-smi"&gt;invalidProductIDs&lt;/span&gt;.&lt;span class="pl-c1"&gt;first&lt;/span&gt; {
        &lt;span class="pl-c1"&gt;print&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;Invalid product identifier: &lt;span class="pl-pse"&gt;\(&lt;/span&gt;&lt;span class="pl-s1"&gt;invalidProductId&lt;/span&gt;&lt;span class="pl-pse"&gt;&lt;span class="pl-s1"&gt;)&lt;/span&gt;&lt;/span&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
    }
    &lt;span class="pl-k"&gt;else&lt;/span&gt; {
        &lt;span class="pl-c1"&gt;print&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;Error: &lt;span class="pl-pse"&gt;\(&lt;/span&gt;&lt;span class="pl-s1"&gt;result.&lt;span class="pl-c1"&gt;error&lt;/span&gt;&lt;/span&gt;&lt;span class="pl-pse"&gt;&lt;span class="pl-s1"&gt;)&lt;/span&gt;&lt;/span&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
    }
}&lt;/pre&gt;&lt;/div&gt;
&lt;h3&gt;&lt;a id="user-content-purchase-a-product-given-a-product-id" class="anchor" aria-hidden="true" href="#purchase-a-product-given-a-product-id"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Purchase a product (given a product id)&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Atomic&lt;/strong&gt;: to be used when the content is delivered immediately.&lt;/li&gt;
&lt;/ul&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;SwiftyStoreKit.&lt;span class="pl-c1"&gt;purchaseProduct&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;com.musevisions.SwiftyStoreKit.Purchase1&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-c1"&gt;quantity&lt;/span&gt;: &lt;span class="pl-c1"&gt;1&lt;/span&gt;, &lt;span class="pl-c1"&gt;atomically&lt;/span&gt;: &lt;span class="pl-c1"&gt;true&lt;/span&gt;) { result &lt;span class="pl-k"&gt;in&lt;/span&gt;
    &lt;span class="pl-k"&gt;switch&lt;/span&gt; result {
    &lt;span class="pl-k"&gt;case&lt;/span&gt; .&lt;span class="pl-c1"&gt;success&lt;/span&gt;(&lt;span class="pl-k"&gt;let&lt;/span&gt; purchase)&lt;span class="pl-k"&gt;:&lt;/span&gt;
        &lt;span class="pl-c1"&gt;print&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;Purchase Success: &lt;span class="pl-pse"&gt;\(&lt;/span&gt;&lt;span class="pl-s1"&gt;purchase.&lt;span class="pl-smi"&gt;productId&lt;/span&gt;&lt;/span&gt;&lt;span class="pl-pse"&gt;&lt;span class="pl-s1"&gt;)&lt;/span&gt;&lt;/span&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
    &lt;span class="pl-k"&gt;case&lt;/span&gt; .&lt;span class="pl-c1"&gt;error&lt;/span&gt;(&lt;span class="pl-k"&gt;let&lt;/span&gt; error)&lt;span class="pl-k"&gt;:&lt;/span&gt;
        &lt;span class="pl-k"&gt;switch&lt;/span&gt; error.&lt;span class="pl-smi"&gt;code&lt;/span&gt; {
        &lt;span class="pl-k"&gt;case&lt;/span&gt; .&lt;span class="pl-smi"&gt;unknown&lt;/span&gt;&lt;span class="pl-k"&gt;:&lt;/span&gt; &lt;span class="pl-c1"&gt;print&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;Unknown error. Please contact support&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
        &lt;span class="pl-k"&gt;case&lt;/span&gt; .&lt;span class="pl-smi"&gt;clientInvalid&lt;/span&gt;&lt;span class="pl-k"&gt;:&lt;/span&gt; &lt;span class="pl-c1"&gt;print&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;Not allowed to make the payment&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
        &lt;span class="pl-k"&gt;case&lt;/span&gt; .&lt;span class="pl-smi"&gt;paymentCancelled&lt;/span&gt;&lt;span class="pl-k"&gt;:&lt;/span&gt; &lt;span class="pl-k"&gt;break&lt;/span&gt;
        &lt;span class="pl-k"&gt;case&lt;/span&gt; .&lt;span class="pl-smi"&gt;paymentInvalid&lt;/span&gt;&lt;span class="pl-k"&gt;:&lt;/span&gt; &lt;span class="pl-c1"&gt;print&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;The purchase identifier was invalid&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
        &lt;span class="pl-k"&gt;case&lt;/span&gt; .&lt;span class="pl-smi"&gt;paymentNotAllowed&lt;/span&gt;&lt;span class="pl-k"&gt;:&lt;/span&gt; &lt;span class="pl-c1"&gt;print&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;The device is not allowed to make the payment&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
        &lt;span class="pl-k"&gt;case&lt;/span&gt; .&lt;span class="pl-smi"&gt;storeProductNotAvailable&lt;/span&gt;&lt;span class="pl-k"&gt;:&lt;/span&gt; &lt;span class="pl-c1"&gt;print&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;The product is not available in the current storefront&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
        &lt;span class="pl-k"&gt;case&lt;/span&gt; .&lt;span class="pl-smi"&gt;cloudServicePermissionDenied&lt;/span&gt;&lt;span class="pl-k"&gt;:&lt;/span&gt; &lt;span class="pl-c1"&gt;print&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;Access to cloud service information is not allowed&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
        &lt;span class="pl-k"&gt;case&lt;/span&gt; .&lt;span class="pl-smi"&gt;cloudServiceNetworkConnectionFailed&lt;/span&gt;&lt;span class="pl-k"&gt;:&lt;/span&gt; &lt;span class="pl-c1"&gt;print&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;Could not connect to the network&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
        &lt;span class="pl-k"&gt;case&lt;/span&gt; .&lt;span class="pl-smi"&gt;cloudServiceRevoked&lt;/span&gt;&lt;span class="pl-k"&gt;:&lt;/span&gt; &lt;span class="pl-c1"&gt;print&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;User has revoked permission to use this cloud service&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
        &lt;span class="pl-k"&gt;default&lt;/span&gt;&lt;span class="pl-k"&gt;:&lt;/span&gt; &lt;span class="pl-c1"&gt;print&lt;/span&gt;((error &lt;span class="pl-k"&gt;as&lt;/span&gt; NSError).&lt;span class="pl-smi"&gt;localizedDescription&lt;/span&gt;)
        }
    }
}&lt;/pre&gt;&lt;/div&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Non-Atomic&lt;/strong&gt;: to be used when the content is delivered by the server.&lt;/li&gt;
&lt;/ul&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;SwiftyStoreKit.&lt;span class="pl-c1"&gt;purchaseProduct&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;com.musevisions.SwiftyStoreKit.Purchase1&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-c1"&gt;quantity&lt;/span&gt;: &lt;span class="pl-c1"&gt;1&lt;/span&gt;, &lt;span class="pl-c1"&gt;atomically&lt;/span&gt;: &lt;span class="pl-c1"&gt;false&lt;/span&gt;) { result &lt;span class="pl-k"&gt;in&lt;/span&gt;
    &lt;span class="pl-k"&gt;switch&lt;/span&gt; result {
    &lt;span class="pl-k"&gt;case&lt;/span&gt; .&lt;span class="pl-c1"&gt;success&lt;/span&gt;(&lt;span class="pl-k"&gt;let&lt;/span&gt; product)&lt;span class="pl-k"&gt;:&lt;/span&gt;
        &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; fetch content from your server, then:&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;        &lt;span class="pl-k"&gt;if&lt;/span&gt; product.&lt;span class="pl-smi"&gt;needsFinishTransaction&lt;/span&gt; {
            SwiftyStoreKit.&lt;span class="pl-c1"&gt;finishTransaction&lt;/span&gt;(product.&lt;span class="pl-smi"&gt;transaction&lt;/span&gt;)
        }
        &lt;span class="pl-c1"&gt;print&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;Purchase Success: &lt;span class="pl-pse"&gt;\(&lt;/span&gt;&lt;span class="pl-s1"&gt;product.&lt;span class="pl-smi"&gt;productId&lt;/span&gt;&lt;/span&gt;&lt;span class="pl-pse"&gt;&lt;span class="pl-s1"&gt;)&lt;/span&gt;&lt;/span&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
    &lt;span class="pl-k"&gt;case&lt;/span&gt; .&lt;span class="pl-c1"&gt;error&lt;/span&gt;(&lt;span class="pl-k"&gt;let&lt;/span&gt; error)&lt;span class="pl-k"&gt;:&lt;/span&gt;
        &lt;span class="pl-k"&gt;switch&lt;/span&gt; error.&lt;span class="pl-smi"&gt;code&lt;/span&gt; {
        &lt;span class="pl-k"&gt;case&lt;/span&gt; .&lt;span class="pl-smi"&gt;unknown&lt;/span&gt;&lt;span class="pl-k"&gt;:&lt;/span&gt; &lt;span class="pl-c1"&gt;print&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;Unknown error. Please contact support&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
        &lt;span class="pl-k"&gt;case&lt;/span&gt; .&lt;span class="pl-smi"&gt;clientInvalid&lt;/span&gt;&lt;span class="pl-k"&gt;:&lt;/span&gt; &lt;span class="pl-c1"&gt;print&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;Not allowed to make the payment&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
        &lt;span class="pl-k"&gt;case&lt;/span&gt; .&lt;span class="pl-smi"&gt;paymentCancelled&lt;/span&gt;&lt;span class="pl-k"&gt;:&lt;/span&gt; &lt;span class="pl-k"&gt;break&lt;/span&gt;
        &lt;span class="pl-k"&gt;case&lt;/span&gt; .&lt;span class="pl-smi"&gt;paymentInvalid&lt;/span&gt;&lt;span class="pl-k"&gt;:&lt;/span&gt; &lt;span class="pl-c1"&gt;print&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;The purchase identifier was invalid&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
        &lt;span class="pl-k"&gt;case&lt;/span&gt; .&lt;span class="pl-smi"&gt;paymentNotAllowed&lt;/span&gt;&lt;span class="pl-k"&gt;:&lt;/span&gt; &lt;span class="pl-c1"&gt;print&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;The device is not allowed to make the payment&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
        &lt;span class="pl-k"&gt;case&lt;/span&gt; .&lt;span class="pl-smi"&gt;storeProductNotAvailable&lt;/span&gt;&lt;span class="pl-k"&gt;:&lt;/span&gt; &lt;span class="pl-c1"&gt;print&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;The product is not available in the current storefront&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
        &lt;span class="pl-k"&gt;case&lt;/span&gt; .&lt;span class="pl-smi"&gt;cloudServicePermissionDenied&lt;/span&gt;&lt;span class="pl-k"&gt;:&lt;/span&gt; &lt;span class="pl-c1"&gt;print&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;Access to cloud service information is not allowed&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
        &lt;span class="pl-k"&gt;case&lt;/span&gt; .&lt;span class="pl-smi"&gt;cloudServiceNetworkConnectionFailed&lt;/span&gt;&lt;span class="pl-k"&gt;:&lt;/span&gt; &lt;span class="pl-c1"&gt;print&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;Could not connect to the network&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
        &lt;span class="pl-k"&gt;case&lt;/span&gt; .&lt;span class="pl-smi"&gt;cloudServiceRevoked&lt;/span&gt;&lt;span class="pl-k"&gt;:&lt;/span&gt; &lt;span class="pl-c1"&gt;print&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;User has revoked permission to use this cloud service&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
        &lt;span class="pl-k"&gt;default&lt;/span&gt;&lt;span class="pl-k"&gt;:&lt;/span&gt; &lt;span class="pl-c1"&gt;print&lt;/span&gt;((error &lt;span class="pl-k"&gt;as&lt;/span&gt; NSError).&lt;span class="pl-smi"&gt;localizedDescription&lt;/span&gt;)
        }
    }
}&lt;/pre&gt;&lt;/div&gt;
&lt;h3&gt;&lt;a id="user-content-purchase-a-product-given-a-skproduct" class="anchor" aria-hidden="true" href="#purchase-a-product-given-a-skproduct"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Purchase a product (given a SKProduct)&lt;/h3&gt;
&lt;p&gt;This is a variant of the method above that can be used to purchase a product when the corresponding &lt;code&gt;SKProduct&lt;/code&gt; has already been retrieved with &lt;code&gt;retrieveProductsInfo&lt;/code&gt;:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;SwiftyStoreKit.&lt;span class="pl-c1"&gt;retrieveProductsInfo&lt;/span&gt;([&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;com.musevisions.SwiftyStoreKit.Purchase1&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;]) { result &lt;span class="pl-k"&gt;in&lt;/span&gt;
    &lt;span class="pl-k"&gt;if&lt;/span&gt; &lt;span class="pl-k"&gt;let&lt;/span&gt; product &lt;span class="pl-k"&gt;=&lt;/span&gt; result.&lt;span class="pl-smi"&gt;retrievedProducts&lt;/span&gt;.&lt;span class="pl-c1"&gt;first&lt;/span&gt; {
        SwiftyStoreKit.&lt;span class="pl-c1"&gt;purchaseProduct&lt;/span&gt;(product, &lt;span class="pl-c1"&gt;quantity&lt;/span&gt;: &lt;span class="pl-c1"&gt;1&lt;/span&gt;, &lt;span class="pl-c1"&gt;atomically&lt;/span&gt;: &lt;span class="pl-c1"&gt;true&lt;/span&gt;) { result &lt;span class="pl-k"&gt;in&lt;/span&gt;
            &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; handle result (same as above)&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;        }
    }
}&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Using this &lt;code&gt;purchaseProduct&lt;/code&gt; method guarantees that only one network call is made to StoreKit to perform the purchase, as opposed to one call to get the product and another to perform the purchase.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-handle-purchases-started-on-the-app-store-ios-11" class="anchor" aria-hidden="true" href="#handle-purchases-started-on-the-app-store-ios-11"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Handle purchases started on the App Store (iOS 11)&lt;/h3&gt;
&lt;p&gt;iOS 11 adds a new delegate method on &lt;code&gt;SKPaymentTransactionObserver&lt;/code&gt;:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;@available&lt;/span&gt;(&lt;span class="pl-k"&gt;iOS&lt;/span&gt; &lt;span class="pl-c1"&gt;11.0&lt;/span&gt;, &lt;span class="pl-k"&gt;*&lt;/span&gt;)
&lt;span class="pl-k"&gt;optional&lt;/span&gt; &lt;span class="pl-k"&gt;public&lt;/span&gt; &lt;span class="pl-k"&gt;func&lt;/span&gt; &lt;span class="pl-en"&gt;paymentQueue&lt;/span&gt;(&lt;span class="pl-en"&gt;_&lt;/span&gt; &lt;span class="pl-smi"&gt;queue&lt;/span&gt;: SKPaymentQueue, &lt;span class="pl-en"&gt;shouldAddStorePayment&lt;/span&gt; &lt;span class="pl-smi"&gt;payment&lt;/span&gt;: SKPayment, &lt;span class="pl-en"&gt;for&lt;/span&gt; &lt;span class="pl-smi"&gt;product&lt;/span&gt;: SKProduct) &lt;span class="pl-k"&gt;-&amp;gt;&lt;/span&gt; &lt;span class="pl-c1"&gt;Bool&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;From &lt;a href="https://developer.apple.com/documentation/storekit/skpaymenttransactionobserver/2877502-paymentqueue" rel="nofollow"&gt;Apple Docs&lt;/a&gt;:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;This delegate method is called when the user has started an in-app purchase in the App Store, and is continuing the transaction in your app. Specifically, if your app is already installed, the method is called automatically.
If your app is not yet installed when the user starts the in-app purchase in the App Store, the user gets a notification when the app installation is complete. This method is called when the user taps the notification. Otherwise, if the user opens the app manually, this method is called only if the app is opened soon after the purchase was started.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;SwiftyStoreKit supports this with a new handler, called like this:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;SwiftyStoreKit.&lt;span class="pl-smi"&gt;shouldAddStorePaymentHandler&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; { payment, product &lt;span class="pl-k"&gt;in&lt;/span&gt;
    &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; return true if the content can be delivered by your app&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;    &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; return false otherwise&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;}&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;To test this in sandbox mode, open this URL in Safari:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;itms-services://?action=purchaseIntent&amp;amp;bundleId=com.example.app&amp;amp;productIdentifier=product_name
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;More information on the &lt;a href="https://developer.apple.com/videos/play/wwdc2017/303" rel="nofollow"&gt;WWDC17 session What's New in StoreKit&lt;/a&gt;
(&lt;a href="https://devstreaming-cdn.apple.com/videos/wwdc/2017/303f0u5froddl13/303/303_whats_new_in_storekit.pdf" rel="nofollow"&gt;slide number 165&lt;/a&gt; shows the link above).&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-restore-previous-purchases" class="anchor" aria-hidden="true" href="#restore-previous-purchases"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Restore previous purchases&lt;/h3&gt;
&lt;p&gt;According to &lt;a href="https://developer.apple.com/library/content/documentation/NetworkingInternet/Conceptual/StoreKitGuide/Chapters/Restoring.html#//apple_ref/doc/uid/TP40008267-CH8-SW9" rel="nofollow"&gt;Apple - Restoring Purchased Products&lt;/a&gt;:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;In most cases, all your app needs to do is refresh its receipt and deliver the products in its receipt. The refreshed receipt contains a record of the user’s purchases in this app, on this device or any other device.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;Restoring completed transactions creates a new transaction for every completed transaction the user made, essentially replaying history for your transaction queue observer.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;See the &lt;strong&gt;Receipt Verification&lt;/strong&gt; section below for how to restore previous purchases using the receipt.&lt;/p&gt;
&lt;p&gt;This section shows how to restore completed transactions with the &lt;code&gt;restorePurchases&lt;/code&gt; method instead. When successful, the method returns all non-consumable purchases, as well as all auto-renewable subscription purchases, &lt;strong&gt;regardless of whether they are expired or not&lt;/strong&gt;.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Atomic&lt;/strong&gt;: to be used when the content is delivered immediately.&lt;/li&gt;
&lt;/ul&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;SwiftyStoreKit.&lt;span class="pl-c1"&gt;restorePurchases&lt;/span&gt;(&lt;span class="pl-c1"&gt;atomically&lt;/span&gt;: &lt;span class="pl-c1"&gt;true&lt;/span&gt;) { results &lt;span class="pl-k"&gt;in&lt;/span&gt;
    &lt;span class="pl-k"&gt;if&lt;/span&gt; results.&lt;span class="pl-smi"&gt;restoreFailedPurchases&lt;/span&gt;.&lt;span class="pl-c1"&gt;count&lt;/span&gt; &lt;span class="pl-k"&gt;&amp;gt;&lt;/span&gt; &lt;span class="pl-c1"&gt;0&lt;/span&gt; {
        &lt;span class="pl-c1"&gt;print&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;Restore Failed: &lt;span class="pl-pse"&gt;\(&lt;/span&gt;&lt;span class="pl-s1"&gt;results.&lt;span class="pl-smi"&gt;restoreFailedPurchases&lt;/span&gt;&lt;/span&gt;&lt;span class="pl-pse"&gt;&lt;span class="pl-s1"&gt;)&lt;/span&gt;&lt;/span&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
    }
    &lt;span class="pl-k"&gt;else&lt;/span&gt; &lt;span class="pl-k"&gt;if&lt;/span&gt; results.&lt;span class="pl-smi"&gt;restoredPurchases&lt;/span&gt;.&lt;span class="pl-c1"&gt;count&lt;/span&gt; &lt;span class="pl-k"&gt;&amp;gt;&lt;/span&gt; &lt;span class="pl-c1"&gt;0&lt;/span&gt; {
        &lt;span class="pl-c1"&gt;print&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;Restore Success: &lt;span class="pl-pse"&gt;\(&lt;/span&gt;&lt;span class="pl-s1"&gt;results.&lt;span class="pl-smi"&gt;restoredPurchases&lt;/span&gt;&lt;/span&gt;&lt;span class="pl-pse"&gt;&lt;span class="pl-s1"&gt;)&lt;/span&gt;&lt;/span&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
    }
    &lt;span class="pl-k"&gt;else&lt;/span&gt; {
        &lt;span class="pl-c1"&gt;print&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;Nothing to Restore&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
    }
}&lt;/pre&gt;&lt;/div&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Non-Atomic&lt;/strong&gt;: to be used when the content is delivered by the server.&lt;/li&gt;
&lt;/ul&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;SwiftyStoreKit.&lt;span class="pl-c1"&gt;restorePurchases&lt;/span&gt;(&lt;span class="pl-c1"&gt;atomically&lt;/span&gt;: &lt;span class="pl-c1"&gt;false&lt;/span&gt;) { results &lt;span class="pl-k"&gt;in&lt;/span&gt;
    &lt;span class="pl-k"&gt;if&lt;/span&gt; results.&lt;span class="pl-smi"&gt;restoreFailedPurchases&lt;/span&gt;.&lt;span class="pl-c1"&gt;count&lt;/span&gt; &lt;span class="pl-k"&gt;&amp;gt;&lt;/span&gt; &lt;span class="pl-c1"&gt;0&lt;/span&gt; {
        &lt;span class="pl-c1"&gt;print&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;Restore Failed: &lt;span class="pl-pse"&gt;\(&lt;/span&gt;&lt;span class="pl-s1"&gt;results.&lt;span class="pl-smi"&gt;restoreFailedPurchases&lt;/span&gt;&lt;/span&gt;&lt;span class="pl-pse"&gt;&lt;span class="pl-s1"&gt;)&lt;/span&gt;&lt;/span&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
    }
    &lt;span class="pl-k"&gt;else&lt;/span&gt; &lt;span class="pl-k"&gt;if&lt;/span&gt; results.&lt;span class="pl-smi"&gt;restoredPurchases&lt;/span&gt;.&lt;span class="pl-c1"&gt;count&lt;/span&gt; &lt;span class="pl-k"&gt;&amp;gt;&lt;/span&gt; &lt;span class="pl-c1"&gt;0&lt;/span&gt; {
        &lt;span class="pl-k"&gt;for&lt;/span&gt; purchase &lt;span class="pl-k"&gt;in&lt;/span&gt; results.&lt;span class="pl-smi"&gt;restoredPurchases&lt;/span&gt; {
            &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; fetch content from your server, then:&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;            &lt;span class="pl-k"&gt;if&lt;/span&gt; purchase.&lt;span class="pl-smi"&gt;needsFinishTransaction&lt;/span&gt; {
                SwiftyStoreKit.&lt;span class="pl-c1"&gt;finishTransaction&lt;/span&gt;(purchase.&lt;span class="pl-smi"&gt;transaction&lt;/span&gt;)
            }
        }
        &lt;span class="pl-c1"&gt;print&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;Restore Success: &lt;span class="pl-pse"&gt;\(&lt;/span&gt;&lt;span class="pl-s1"&gt;results.&lt;span class="pl-smi"&gt;restoredPurchases&lt;/span&gt;&lt;/span&gt;&lt;span class="pl-pse"&gt;&lt;span class="pl-s1"&gt;)&lt;/span&gt;&lt;/span&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
    }
    &lt;span class="pl-k"&gt;else&lt;/span&gt; {
        &lt;span class="pl-c1"&gt;print&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;Nothing to Restore&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
    }
}&lt;/pre&gt;&lt;/div&gt;
&lt;h4&gt;&lt;a id="user-content-what-does-atomic--non-atomic-mean" class="anchor" aria-hidden="true" href="#what-does-atomic--non-atomic-mean"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;What does atomic / non-atomic mean?&lt;/h4&gt;
&lt;p&gt;When you purchase a product the following things happen:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;A payment is added to the payment queue for your IAP.&lt;/li&gt;
&lt;li&gt;When the payment has been processed with Apple, the payment queue is updated so that the appropriate transaction can be handled.&lt;/li&gt;
&lt;li&gt;If the transaction state is &lt;strong&gt;purchased&lt;/strong&gt; or &lt;strong&gt;restored&lt;/strong&gt;, the app can unlock the functionality purchased by the user.&lt;/li&gt;
&lt;li&gt;The app should call &lt;code&gt;finishTransaction(_:)&lt;/code&gt; to complete the purchase.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;This is what is &lt;a href="https://developer.apple.com/reference/storekit/skpaymentqueue/1506003-finishtransaction" rel="nofollow"&gt;recommended by Apple&lt;/a&gt;:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Your application should call &lt;code&gt;finishTransaction(_:)&lt;/code&gt; only after it has successfully processed the transaction and unlocked the functionality purchased by the user.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;A purchase is &lt;strong&gt;atomic&lt;/strong&gt; when the app unlocks the functionality purchased by the user immediately and call &lt;code&gt;finishTransaction(_:)&lt;/code&gt; at the same time. This is desirable if you're unlocking functionality that is already inside the app.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;In cases when you need to make a request to your own server in order to unlock the functionality, you can use a &lt;strong&gt;non-atomic&lt;/strong&gt; purchase instead.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Note&lt;/strong&gt;: SwiftyStoreKit doesn't yet support downloading content hosted by Apple for non-consumable products. See &lt;a href="https://github.com/bizz84/SwiftyStoreKit/issues/128"&gt;this feature request&lt;/a&gt;.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;SwiftyStoreKit provides three operations that can be performed &lt;strong&gt;atomically&lt;/strong&gt; or &lt;strong&gt;non-atomically&lt;/strong&gt;:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Making a purchase&lt;/li&gt;
&lt;li&gt;Restoring purchases&lt;/li&gt;
&lt;li&gt;Completing transactions on app launch&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;&lt;a id="user-content-downloading-content-hosted-with-apple" class="anchor" aria-hidden="true" href="#downloading-content-hosted-with-apple"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Downloading content hosted with Apple&lt;/h3&gt;
&lt;p&gt;Quoting Apple Docs:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;When you create a product in iTunes Connect, you can associate one or more pieces of downloadable content with it. At runtime, when a product is purchased by a user, your app uses SKDownload objects to download the content from the App Store.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;Your app never directly creates a SKDownload object. Instead, after a payment is processed, your app reads the transaction object’s downloads property to retrieve an array of SKDownload objects associated with the transaction.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;To download the content, you queue a download object on the payment queue and wait for the content to be downloaded. After a download completes, read the download object’s contentURL property to get a URL to the downloaded content. Your app must process the downloaded file before completing the transaction. For example, it might copy the file into a directory whose contents are persistent. When all downloads are complete, you finish the transaction. After the transaction is finished, the download objects cannot be queued to the payment queue and any URLs to the downloaded content are invalid.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;To start the downloads (this can be done in &lt;code&gt;purchaseProduct()&lt;/code&gt;, &lt;code&gt;completeTransactions()&lt;/code&gt; or &lt;code&gt;restorePurchases()&lt;/code&gt;):&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;SwiftyStoreKit.&lt;span class="pl-c1"&gt;purchaseProduct&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;com.musevisions.SwiftyStoreKit.Purchase1&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-c1"&gt;quantity&lt;/span&gt;: &lt;span class="pl-c1"&gt;1&lt;/span&gt;, &lt;span class="pl-c1"&gt;atomically&lt;/span&gt;: &lt;span class="pl-c1"&gt;false&lt;/span&gt;) { result &lt;span class="pl-k"&gt;in&lt;/span&gt;
    &lt;span class="pl-k"&gt;switch&lt;/span&gt; result {
    &lt;span class="pl-k"&gt;case&lt;/span&gt; .&lt;span class="pl-c1"&gt;success&lt;/span&gt;(&lt;span class="pl-k"&gt;let&lt;/span&gt; product)&lt;span class="pl-k"&gt;:&lt;/span&gt;
        &lt;span class="pl-k"&gt;let&lt;/span&gt; downloads &lt;span class="pl-k"&gt;=&lt;/span&gt; purchase.&lt;span class="pl-smi"&gt;transaction&lt;/span&gt;.&lt;span class="pl-smi"&gt;downloads&lt;/span&gt;
        &lt;span class="pl-k"&gt;if&lt;/span&gt; &lt;span class="pl-k"&gt;!&lt;/span&gt;downloads.&lt;span class="pl-c1"&gt;isEmpty&lt;/span&gt; {
            SwiftyStoreKit.&lt;span class="pl-c1"&gt;start&lt;/span&gt;(downloads)
        }
    &lt;span class="pl-k"&gt;case&lt;/span&gt; .&lt;span class="pl-c1"&gt;error&lt;/span&gt;(&lt;span class="pl-k"&gt;let&lt;/span&gt; error)&lt;span class="pl-k"&gt;:&lt;/span&gt;
        &lt;span class="pl-c1"&gt;print&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;span class="pl-pse"&gt;\(&lt;/span&gt;&lt;span class="pl-s1"&gt;error&lt;/span&gt;&lt;span class="pl-pse"&gt;&lt;span class="pl-s1"&gt;)&lt;/span&gt;&lt;/span&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
    }
}&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;To check the updated downloads, setup a &lt;code&gt;updatedDownloadsHandler&lt;/code&gt; block in your AppDelegate:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;SwiftyStoreKit.&lt;span class="pl-smi"&gt;updatedDownloadsHandler&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; { downloads &lt;span class="pl-k"&gt;in&lt;/span&gt;

    &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; contentURL is not nil if downloadState == .finished&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;    &lt;span class="pl-k"&gt;let&lt;/span&gt; contentURLs &lt;span class="pl-k"&gt;=&lt;/span&gt; downloads.&lt;span class="pl-c1"&gt;flatMap&lt;/span&gt; { &lt;span class="pl-c1"&gt;$0&lt;/span&gt;.&lt;span class="pl-smi"&gt;contentURL&lt;/span&gt; }
    &lt;span class="pl-k"&gt;if&lt;/span&gt; contentURLs.&lt;span class="pl-c1"&gt;count&lt;/span&gt; &lt;span class="pl-k"&gt;==&lt;/span&gt; downloads.&lt;span class="pl-c1"&gt;count&lt;/span&gt; {
        &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; process all downloaded files, then finish the transaction&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;        SwiftyStoreKit.&lt;span class="pl-c1"&gt;finishTransaction&lt;/span&gt;(downloads[&lt;span class="pl-c1"&gt;0&lt;/span&gt;].&lt;span class="pl-smi"&gt;transaction&lt;/span&gt;)
    }
}&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;To control the state of the downloads, SwiftyStoreKit offers &lt;code&gt;start()&lt;/code&gt;, &lt;code&gt;pause()&lt;/code&gt;, &lt;code&gt;resume()&lt;/code&gt;, &lt;code&gt;cancel()&lt;/code&gt; methods.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-receipt-verification" class="anchor" aria-hidden="true" href="#receipt-verification"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Receipt verification&lt;/h2&gt;
&lt;p&gt;According to &lt;a href="https://developer.apple.com/library/content/documentation/NetworkingInternet/Conceptual/StoreKitGuide/Chapters/DeliverProduct.html#//apple_ref/doc/uid/TP40008267-CH5-SW4" rel="nofollow"&gt;Apple - Delivering Products&lt;/a&gt;:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;The app receipt contains a record of the user’s purchases, cryptographically signed by Apple. For more information, see &lt;a href="https://developer.apple.com/library/content/releasenotes/General/ValidateAppStoreReceipt/Introduction.html#//apple_ref/doc/uid/TP40010573" rel="nofollow"&gt;Receipt Validation Programming Guide&lt;/a&gt;.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;Information about consumable products is added to the receipt when they’re paid for and remains in the receipt until you finish the transaction. After you finish the transaction, this information is removed the next time the receipt is updated—for example, the next time the user makes a purchase.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;Information about all other kinds of purchases is added to the receipt when they’re paid for and remains in the receipt indefinitely.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;When an app is first installed, the app receipt is missing.&lt;/p&gt;
&lt;p&gt;As soon as a user completes a purchase or restores purchases, StoreKit creates and stores the receipt locally as a file, located by &lt;code&gt;Bundle.main.appStoreReceiptURL&lt;/code&gt;.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-retrieve-local-receipt-encrypted" class="anchor" aria-hidden="true" href="#retrieve-local-receipt-encrypted"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Retrieve local receipt (encrypted)&lt;/h3&gt;
&lt;p&gt;This helper can be used to retrieve the (encrypted) local receipt data:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;let&lt;/span&gt; receiptData &lt;span class="pl-k"&gt;=&lt;/span&gt; SwiftyStoreKit.&lt;span class="pl-smi"&gt;localReceiptData&lt;/span&gt;
&lt;span class="pl-k"&gt;let&lt;/span&gt; receiptString &lt;span class="pl-k"&gt;=&lt;/span&gt; receiptData.&lt;span class="pl-c1"&gt;base64EncodedString&lt;/span&gt;(&lt;span class="pl-c1"&gt;options&lt;/span&gt;: [])
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; do your receipt validation here&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;However, the receipt file may be missing or outdated.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-fetch-receipt-encrypted" class="anchor" aria-hidden="true" href="#fetch-receipt-encrypted"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Fetch receipt (encrypted)&lt;/h3&gt;
&lt;p&gt;Use this method to get the updated receipt:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;SwiftyStoreKit.&lt;span class="pl-c1"&gt;fetchReceipt&lt;/span&gt;(&lt;span class="pl-c1"&gt;forceRefresh&lt;/span&gt;: &lt;span class="pl-c1"&gt;true&lt;/span&gt;) { result &lt;span class="pl-k"&gt;in&lt;/span&gt;
    &lt;span class="pl-k"&gt;switch&lt;/span&gt; result {
    &lt;span class="pl-k"&gt;case&lt;/span&gt; .&lt;span class="pl-c1"&gt;success&lt;/span&gt;(&lt;span class="pl-k"&gt;let&lt;/span&gt; receiptData)&lt;span class="pl-k"&gt;:&lt;/span&gt;
        &lt;span class="pl-k"&gt;let&lt;/span&gt; encryptedReceipt &lt;span class="pl-k"&gt;=&lt;/span&gt; receiptData.&lt;span class="pl-c1"&gt;base64EncodedString&lt;/span&gt;(&lt;span class="pl-c1"&gt;options&lt;/span&gt;: [])
        &lt;span class="pl-c1"&gt;print&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;Fetch receipt success:&lt;span class="pl-cce"&gt;\n&lt;/span&gt;&lt;span class="pl-pse"&gt;\(&lt;/span&gt;&lt;span class="pl-s1"&gt;encryptedReceipt&lt;/span&gt;&lt;span class="pl-pse"&gt;&lt;span class="pl-s1"&gt;)&lt;/span&gt;&lt;/span&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
    &lt;span class="pl-k"&gt;case&lt;/span&gt; .&lt;span class="pl-c1"&gt;error&lt;/span&gt;(&lt;span class="pl-k"&gt;let&lt;/span&gt; error)&lt;span class="pl-k"&gt;:&lt;/span&gt;
        &lt;span class="pl-c1"&gt;print&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;Fetch receipt failed: &lt;span class="pl-pse"&gt;\(&lt;/span&gt;&lt;span class="pl-s1"&gt;error&lt;/span&gt;&lt;span class="pl-pse"&gt;&lt;span class="pl-s1"&gt;)&lt;/span&gt;&lt;/span&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
    }
}&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;This method works as follows:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;If &lt;code&gt;forceRefresh = false&lt;/code&gt;, it returns the local receipt from file, or refreshes it if missing.&lt;/li&gt;
&lt;li&gt;If &lt;code&gt;forceRefresh = true&lt;/code&gt;, it always refreshes the receipt regardless.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;Notes&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;If the local receipt is missing or &lt;code&gt;forceRefresh = true&lt;/code&gt; when calling &lt;code&gt;fetchReceipt&lt;/code&gt;, a network call is made to refresh it.&lt;/li&gt;
&lt;li&gt;If the user is not logged to the App Store, StoreKit will present a popup asking to &lt;strong&gt;Sign In to the iTunes Store&lt;/strong&gt;.&lt;/li&gt;
&lt;li&gt;If the user enters valid credentials, the receipt will be refreshed.&lt;/li&gt;
&lt;li&gt;If the user cancels, receipt refresh will fail with a &lt;strong&gt;Cannot connect to iTunes Store&lt;/strong&gt; error.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;If &lt;code&gt;fetchReceipt&lt;/code&gt; is successful, it will return the &lt;strong&gt;encrypted&lt;/strong&gt; receipt as a string. For this reason, a &lt;strong&gt;validation&lt;/strong&gt; step is needed to get all the receipt fields in readable form. This can be done in various ways:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Validate with Apple via the &lt;code&gt;AppleReceiptValidator&lt;/code&gt; (see &lt;a href="#verify-receipt"&gt;&lt;code&gt;verifyReceipt&lt;/code&gt;&lt;/a&gt; below).&lt;/li&gt;
&lt;li&gt;Perform local receipt validation (see &lt;a href="https://github.com/bizz84/SwiftyStoreKit/issues/101"&gt;#101&lt;/a&gt;).&lt;/li&gt;
&lt;li&gt;Post the receipt data and validate on server.&lt;/li&gt;
&lt;/ol&gt;
&lt;h3&gt;&lt;a id="user-content-verify-receipt" class="anchor" aria-hidden="true" href="#verify-receipt"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Verify Receipt&lt;/h3&gt;
&lt;p&gt;Use this method to (optionally) refresh the receipt and perform validation in one step.&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;let&lt;/span&gt; appleValidator &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;AppleReceiptValidator&lt;/span&gt;(&lt;span class="pl-c1"&gt;service&lt;/span&gt;: .&lt;span class="pl-smi"&gt;production&lt;/span&gt;, &lt;span class="pl-c1"&gt;sharedSecret&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;your-shared-secret&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
SwiftyStoreKit.&lt;span class="pl-c1"&gt;verifyReceipt&lt;/span&gt;(&lt;span class="pl-c1"&gt;using&lt;/span&gt;: appleValidator, &lt;span class="pl-c1"&gt;forceRefresh&lt;/span&gt;: &lt;span class="pl-c1"&gt;false&lt;/span&gt;) { result &lt;span class="pl-k"&gt;in&lt;/span&gt;
    &lt;span class="pl-k"&gt;switch&lt;/span&gt; result {
    &lt;span class="pl-k"&gt;case&lt;/span&gt; .&lt;span class="pl-c1"&gt;success&lt;/span&gt;(&lt;span class="pl-k"&gt;let&lt;/span&gt; receipt)&lt;span class="pl-k"&gt;:&lt;/span&gt;
        &lt;span class="pl-c1"&gt;print&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;Verify receipt success: &lt;span class="pl-pse"&gt;\(&lt;/span&gt;&lt;span class="pl-s1"&gt;receipt&lt;/span&gt;&lt;span class="pl-pse"&gt;&lt;span class="pl-s1"&gt;)&lt;/span&gt;&lt;/span&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
    &lt;span class="pl-k"&gt;case&lt;/span&gt; .&lt;span class="pl-c1"&gt;error&lt;/span&gt;(&lt;span class="pl-k"&gt;let&lt;/span&gt; error)&lt;span class="pl-k"&gt;:&lt;/span&gt;
        &lt;span class="pl-c1"&gt;print&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;Verify receipt failed: &lt;span class="pl-pse"&gt;\(&lt;/span&gt;&lt;span class="pl-s1"&gt;error&lt;/span&gt;&lt;span class="pl-pse"&gt;&lt;span class="pl-s1"&gt;)&lt;/span&gt;&lt;/span&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
    }
}&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;strong&gt;Notes&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;This method is based on &lt;code&gt;fetchReceipt&lt;/code&gt;, and the same refresh logic discussed above applies.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;AppleReceiptValidator&lt;/code&gt; is a &lt;strong&gt;reference implementation&lt;/strong&gt; that validates the receipt with Apple and results in a network call. &lt;em&gt;This is prone to man-in-the-middle attacks.&lt;/em&gt;&lt;/li&gt;
&lt;li&gt;You should implement your secure logic by validating your receipt locally, or sending the encrypted receipt data and validating it in your server.&lt;/li&gt;
&lt;li&gt;Local receipt validation is not implemented (see &lt;a href="https://github.com/bizz84/SwiftyStoreKit/issues/101"&gt;issue #101&lt;/a&gt; for details).&lt;/li&gt;
&lt;li&gt;You can implement your own receipt validator by conforming to the &lt;code&gt;ReceiptValidator&lt;/code&gt; protocol and passing it to &lt;code&gt;verifyReceipt&lt;/code&gt;.&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-verifying-purchases-and-subscriptions" class="anchor" aria-hidden="true" href="#verifying-purchases-and-subscriptions"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Verifying purchases and subscriptions&lt;/h2&gt;
&lt;p&gt;Once you have retrieved the receipt using the &lt;code&gt;verifyReceipt&lt;/code&gt; method, you can verify your purchases and subscriptions by product identifier.&lt;/p&gt;
&lt;p&gt;Verifying multiple purchases and subscriptions in one call is not yet supported (see &lt;a href="https://github.com/bizz84/SwiftyStoreKit/issues/194"&gt;issue #194&lt;/a&gt; for more details).&lt;/p&gt;
&lt;p&gt;If you need to verify multiple purchases / subscriptions, you can either:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;manually parse the receipt dictionary returned by &lt;code&gt;verifyReceipt&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;call &lt;code&gt;verifyPurchase&lt;/code&gt; or &lt;code&gt;verifySubscription&lt;/code&gt; multiple times with different product identifiers&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;&lt;a id="user-content-verify-purchase" class="anchor" aria-hidden="true" href="#verify-purchase"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Verify Purchase&lt;/h3&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;let&lt;/span&gt; appleValidator &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;AppleReceiptValidator&lt;/span&gt;(&lt;span class="pl-c1"&gt;service&lt;/span&gt;: .&lt;span class="pl-smi"&gt;production&lt;/span&gt;, &lt;span class="pl-c1"&gt;sharedSecret&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;your-shared-secret&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
SwiftyStoreKit.&lt;span class="pl-c1"&gt;verifyReceipt&lt;/span&gt;(&lt;span class="pl-c1"&gt;using&lt;/span&gt;: appleValidator) { result &lt;span class="pl-k"&gt;in&lt;/span&gt;
    &lt;span class="pl-k"&gt;switch&lt;/span&gt; result {
    &lt;span class="pl-k"&gt;case&lt;/span&gt; .&lt;span class="pl-c1"&gt;success&lt;/span&gt;(&lt;span class="pl-k"&gt;let&lt;/span&gt; receipt)&lt;span class="pl-k"&gt;:&lt;/span&gt;
        &lt;span class="pl-k"&gt;let&lt;/span&gt; productId &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;com.musevisions.SwiftyStoreKit.Purchase1&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;
        &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Verify the purchase of Consumable or NonConsumable&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;        &lt;span class="pl-k"&gt;let&lt;/span&gt; purchaseResult &lt;span class="pl-k"&gt;=&lt;/span&gt; SwiftyStoreKit.&lt;span class="pl-c1"&gt;verifyPurchase&lt;/span&gt;(
            &lt;span class="pl-c1"&gt;productId&lt;/span&gt;: productId,
            &lt;span class="pl-c1"&gt;inReceipt&lt;/span&gt;: receipt)
            
        &lt;span class="pl-k"&gt;switch&lt;/span&gt; purchaseResult {
        &lt;span class="pl-k"&gt;case&lt;/span&gt; .&lt;span class="pl-c1"&gt;purchased&lt;/span&gt;(&lt;span class="pl-k"&gt;let&lt;/span&gt; receiptItem)&lt;span class="pl-k"&gt;:&lt;/span&gt;
            &lt;span class="pl-c1"&gt;print&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;span class="pl-pse"&gt;\(&lt;/span&gt;&lt;span class="pl-s1"&gt;productId&lt;/span&gt;&lt;span class="pl-pse"&gt;&lt;span class="pl-s1"&gt;)&lt;/span&gt;&lt;/span&gt; is purchased: &lt;span class="pl-pse"&gt;\(&lt;/span&gt;&lt;span class="pl-s1"&gt;receiptItem&lt;/span&gt;&lt;span class="pl-pse"&gt;&lt;span class="pl-s1"&gt;)&lt;/span&gt;&lt;/span&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
        &lt;span class="pl-k"&gt;case&lt;/span&gt; .&lt;span class="pl-smi"&gt;notPurchased&lt;/span&gt;&lt;span class="pl-k"&gt;:&lt;/span&gt;
            &lt;span class="pl-c1"&gt;print&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;The user has never purchased &lt;span class="pl-pse"&gt;\(&lt;/span&gt;&lt;span class="pl-s1"&gt;productId&lt;/span&gt;&lt;span class="pl-pse"&gt;&lt;span class="pl-s1"&gt;)&lt;/span&gt;&lt;/span&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
        }
    &lt;span class="pl-k"&gt;case&lt;/span&gt; .&lt;span class="pl-c1"&gt;error&lt;/span&gt;(&lt;span class="pl-k"&gt;let&lt;/span&gt; error)&lt;span class="pl-k"&gt;:&lt;/span&gt;
        &lt;span class="pl-c1"&gt;print&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;Receipt verification failed: &lt;span class="pl-pse"&gt;\(&lt;/span&gt;&lt;span class="pl-s1"&gt;error&lt;/span&gt;&lt;span class="pl-pse"&gt;&lt;span class="pl-s1"&gt;)&lt;/span&gt;&lt;/span&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
    }
}&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Note that for consumable products, the receipt will only include the information for a couple of minutes after the purchase.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-verify-subscription" class="anchor" aria-hidden="true" href="#verify-subscription"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Verify Subscription&lt;/h3&gt;
&lt;p&gt;This can be used to check if a subscription was previously purchased, and whether it is still active or if it's expired.&lt;/p&gt;
&lt;p&gt;From &lt;a href="https://developer.apple.com/library/content/documentation/NetworkingInternet/Conceptual/StoreKitGuide/Chapters/Subscriptions.html#//apple_ref/doc/uid/TP40008267-CH7-SW6" rel="nofollow"&gt;Apple - Working with Subscriptions&lt;/a&gt;:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;keep a record of the date that each piece of content is published. Read the Original Purchase Date and Subscription Expiration Date field from each receipt entry to determine the start and end dates of the subscription.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;When one or more subscriptions are found for a given product id, they are returned as a &lt;code&gt;ReceiptItem&lt;/code&gt; array ordered by &lt;code&gt;expiryDate&lt;/code&gt;, with the first one being the newest.&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;let&lt;/span&gt; appleValidator &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;AppleReceiptValidator&lt;/span&gt;(&lt;span class="pl-c1"&gt;service&lt;/span&gt;: .&lt;span class="pl-smi"&gt;production&lt;/span&gt;, &lt;span class="pl-c1"&gt;sharedSecret&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;your-shared-secret&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
SwiftyStoreKit.&lt;span class="pl-c1"&gt;verifyReceipt&lt;/span&gt;(&lt;span class="pl-c1"&gt;using&lt;/span&gt;: appleValidator) { result &lt;span class="pl-k"&gt;in&lt;/span&gt;
    &lt;span class="pl-k"&gt;switch&lt;/span&gt; result {
    &lt;span class="pl-k"&gt;case&lt;/span&gt; .&lt;span class="pl-c1"&gt;success&lt;/span&gt;(&lt;span class="pl-k"&gt;let&lt;/span&gt; receipt)&lt;span class="pl-k"&gt;:&lt;/span&gt;
        &lt;span class="pl-k"&gt;let&lt;/span&gt; productId &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;com.musevisions.SwiftyStoreKit.Subscription&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;
        &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Verify the purchase of a Subscription&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;        &lt;span class="pl-k"&gt;let&lt;/span&gt; purchaseResult &lt;span class="pl-k"&gt;=&lt;/span&gt; SwiftyStoreKit.&lt;span class="pl-c1"&gt;verifySubscription&lt;/span&gt;(
            &lt;span class="pl-c1"&gt;ofType&lt;/span&gt;: .&lt;span class="pl-smi"&gt;autoRenewable&lt;/span&gt;, &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; or .nonRenewing (see below)&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;            &lt;span class="pl-c1"&gt;productId&lt;/span&gt;: productId,
            &lt;span class="pl-c1"&gt;inReceipt&lt;/span&gt;: receipt)
            
        &lt;span class="pl-k"&gt;switch&lt;/span&gt; purchaseResult {
        &lt;span class="pl-k"&gt;case&lt;/span&gt; .&lt;span class="pl-c1"&gt;purchased&lt;/span&gt;(&lt;span class="pl-k"&gt;let&lt;/span&gt; expiryDate, &lt;span class="pl-k"&gt;let&lt;/span&gt; items)&lt;span class="pl-k"&gt;:&lt;/span&gt;
            &lt;span class="pl-c1"&gt;print&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;span class="pl-pse"&gt;\(&lt;/span&gt;&lt;span class="pl-s1"&gt;productId&lt;/span&gt;&lt;span class="pl-pse"&gt;&lt;span class="pl-s1"&gt;)&lt;/span&gt;&lt;/span&gt; is valid until &lt;span class="pl-pse"&gt;\(&lt;/span&gt;&lt;span class="pl-s1"&gt;expiryDate&lt;/span&gt;&lt;span class="pl-pse"&gt;&lt;span class="pl-s1"&gt;)&lt;/span&gt;&lt;/span&gt;&lt;span class="pl-cce"&gt;\n&lt;/span&gt;&lt;span class="pl-pse"&gt;\(&lt;/span&gt;&lt;span class="pl-s1"&gt;items&lt;/span&gt;&lt;span class="pl-pse"&gt;&lt;span class="pl-s1"&gt;)&lt;/span&gt;&lt;/span&gt;&lt;span class="pl-cce"&gt;\n&lt;/span&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
        &lt;span class="pl-k"&gt;case&lt;/span&gt; .&lt;span class="pl-c1"&gt;expired&lt;/span&gt;(&lt;span class="pl-k"&gt;let&lt;/span&gt; expiryDate, &lt;span class="pl-k"&gt;let&lt;/span&gt; items)&lt;span class="pl-k"&gt;:&lt;/span&gt;
            &lt;span class="pl-c1"&gt;print&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;span class="pl-pse"&gt;\(&lt;/span&gt;&lt;span class="pl-s1"&gt;productId&lt;/span&gt;&lt;span class="pl-pse"&gt;&lt;span class="pl-s1"&gt;)&lt;/span&gt;&lt;/span&gt; is expired since &lt;span class="pl-pse"&gt;\(&lt;/span&gt;&lt;span class="pl-s1"&gt;expiryDate&lt;/span&gt;&lt;span class="pl-pse"&gt;&lt;span class="pl-s1"&gt;)&lt;/span&gt;&lt;/span&gt;&lt;span class="pl-cce"&gt;\n&lt;/span&gt;&lt;span class="pl-pse"&gt;\(&lt;/span&gt;&lt;span class="pl-s1"&gt;items&lt;/span&gt;&lt;span class="pl-pse"&gt;&lt;span class="pl-s1"&gt;)&lt;/span&gt;&lt;/span&gt;&lt;span class="pl-cce"&gt;\n&lt;/span&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
        &lt;span class="pl-k"&gt;case&lt;/span&gt; .&lt;span class="pl-smi"&gt;notPurchased&lt;/span&gt;&lt;span class="pl-k"&gt;:&lt;/span&gt;
            &lt;span class="pl-c1"&gt;print&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;The user has never purchased &lt;span class="pl-pse"&gt;\(&lt;/span&gt;&lt;span class="pl-s1"&gt;productId&lt;/span&gt;&lt;span class="pl-pse"&gt;&lt;span class="pl-s1"&gt;)&lt;/span&gt;&lt;/span&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
        }

    &lt;span class="pl-k"&gt;case&lt;/span&gt; .&lt;span class="pl-c1"&gt;error&lt;/span&gt;(&lt;span class="pl-k"&gt;let&lt;/span&gt; error)&lt;span class="pl-k"&gt;:&lt;/span&gt;
        &lt;span class="pl-c1"&gt;print&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;Receipt verification failed: &lt;span class="pl-pse"&gt;\(&lt;/span&gt;&lt;span class="pl-s1"&gt;error&lt;/span&gt;&lt;span class="pl-pse"&gt;&lt;span class="pl-s1"&gt;)&lt;/span&gt;&lt;/span&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
    }
}&lt;/pre&gt;&lt;/div&gt;
&lt;h4&gt;&lt;a id="user-content-auto-renewable" class="anchor" aria-hidden="true" href="#auto-renewable"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Auto-Renewable&lt;/h4&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;let&lt;/span&gt; purchaseResult &lt;span class="pl-k"&gt;=&lt;/span&gt; SwiftyStoreKit.&lt;span class="pl-c1"&gt;verifySubscription&lt;/span&gt;(
            &lt;span class="pl-c1"&gt;ofType&lt;/span&gt;: .&lt;span class="pl-smi"&gt;autoRenewable&lt;/span&gt;,
            &lt;span class="pl-c1"&gt;productId&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;com.musevisions.SwiftyStoreKit.Subscription&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;,
            &lt;span class="pl-c1"&gt;inReceipt&lt;/span&gt;: receipt)&lt;/pre&gt;&lt;/div&gt;
&lt;h4&gt;&lt;a id="user-content-non-renewing" class="anchor" aria-hidden="true" href="#non-renewing"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Non-Renewing&lt;/h4&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; validDuration: time interval in seconds&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;&lt;span class="pl-k"&gt;let&lt;/span&gt; purchaseResult &lt;span class="pl-k"&gt;=&lt;/span&gt; SwiftyStoreKit.&lt;span class="pl-c1"&gt;verifySubscription&lt;/span&gt;(
            &lt;span class="pl-c1"&gt;ofType&lt;/span&gt;: .&lt;span class="pl-c1"&gt;nonRenewing&lt;/span&gt;(&lt;span class="pl-c1"&gt;validDuration&lt;/span&gt;: &lt;span class="pl-c1"&gt;3600&lt;/span&gt; &lt;span class="pl-k"&gt;*&lt;/span&gt; &lt;span class="pl-c1"&gt;24&lt;/span&gt; &lt;span class="pl-k"&gt;*&lt;/span&gt; &lt;span class="pl-c1"&gt;30&lt;/span&gt;),
            &lt;span class="pl-c1"&gt;productId&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;com.musevisions.SwiftyStoreKit.Subscription&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;,
            &lt;span class="pl-c1"&gt;inReceipt&lt;/span&gt;: receipt)&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;strong&gt;Notes&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;The expiration dates are calculated against the receipt date. This is the date of the last successful call to &lt;code&gt;verifyReceipt&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;When purchasing subscriptions in sandbox mode, the expiry dates are set just minutes after the purchase date for testing purposes.&lt;/li&gt;
&lt;/ul&gt;
&lt;h4&gt;&lt;a id="user-content-purchasing-and-verifying-a-subscription" class="anchor" aria-hidden="true" href="#purchasing-and-verifying-a-subscription"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Purchasing and verifying a subscription&lt;/h4&gt;
&lt;p&gt;The &lt;code&gt;verifySubscription&lt;/code&gt; method can be used together with the &lt;code&gt;purchaseProduct&lt;/code&gt; method to purchase a subscription and check its expiration date, like so:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;let&lt;/span&gt; productId &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;your-product-id&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;
SwiftyStoreKit.&lt;span class="pl-c1"&gt;purchaseProduct&lt;/span&gt;(productId, &lt;span class="pl-c1"&gt;atomically&lt;/span&gt;: &lt;span class="pl-c1"&gt;true&lt;/span&gt;) { result &lt;span class="pl-k"&gt;in&lt;/span&gt;
    
    &lt;span class="pl-k"&gt;if&lt;/span&gt; &lt;span class="pl-k"&gt;case&lt;/span&gt; .&lt;span class="pl-c1"&gt;success&lt;/span&gt;(&lt;span class="pl-k"&gt;let&lt;/span&gt; purchase) &lt;span class="pl-k"&gt;=&lt;/span&gt; result {
        &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Deliver content from server, then:&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;        &lt;span class="pl-k"&gt;if&lt;/span&gt; purchase.&lt;span class="pl-smi"&gt;needsFinishTransaction&lt;/span&gt; {
            SwiftyStoreKit.&lt;span class="pl-c1"&gt;finishTransaction&lt;/span&gt;(purchase.&lt;span class="pl-smi"&gt;transaction&lt;/span&gt;)
        }
        
        &lt;span class="pl-k"&gt;let&lt;/span&gt; appleValidator &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;AppleReceiptValidator&lt;/span&gt;(&lt;span class="pl-c1"&gt;service&lt;/span&gt;: .&lt;span class="pl-smi"&gt;production&lt;/span&gt;, &lt;span class="pl-c1"&gt;sharedSecret&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;your-shared-secret&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
        SwiftyStoreKit.&lt;span class="pl-c1"&gt;verifyReceipt&lt;/span&gt;(&lt;span class="pl-c1"&gt;using&lt;/span&gt;: appleValidator) { result &lt;span class="pl-k"&gt;in&lt;/span&gt;
            
            &lt;span class="pl-k"&gt;if&lt;/span&gt; &lt;span class="pl-k"&gt;case&lt;/span&gt; .&lt;span class="pl-c1"&gt;success&lt;/span&gt;(&lt;span class="pl-k"&gt;let&lt;/span&gt; receipt) &lt;span class="pl-k"&gt;=&lt;/span&gt; result {
                &lt;span class="pl-k"&gt;let&lt;/span&gt; purchaseResult &lt;span class="pl-k"&gt;=&lt;/span&gt; SwiftyStoreKit.&lt;span class="pl-c1"&gt;verifySubscription&lt;/span&gt;(
                    &lt;span class="pl-c1"&gt;ofType&lt;/span&gt;: .&lt;span class="pl-smi"&gt;autoRenewable&lt;/span&gt;,
                    &lt;span class="pl-c1"&gt;productId&lt;/span&gt;: productId,
                    &lt;span class="pl-c1"&gt;inReceipt&lt;/span&gt;: receipt)
                
                &lt;span class="pl-k"&gt;switch&lt;/span&gt; purchaseResult {
                &lt;span class="pl-k"&gt;case&lt;/span&gt; .&lt;span class="pl-c1"&gt;purchased&lt;/span&gt;(&lt;span class="pl-k"&gt;let&lt;/span&gt; expiryDate, &lt;span class="pl-k"&gt;let&lt;/span&gt; receiptItems)&lt;span class="pl-k"&gt;:&lt;/span&gt;
                    &lt;span class="pl-c1"&gt;print&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;Product is valid until &lt;span class="pl-pse"&gt;\(&lt;/span&gt;&lt;span class="pl-s1"&gt;expiryDate&lt;/span&gt;&lt;span class="pl-pse"&gt;&lt;span class="pl-s1"&gt;)&lt;/span&gt;&lt;/span&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
                &lt;span class="pl-k"&gt;case&lt;/span&gt; .&lt;span class="pl-c1"&gt;expired&lt;/span&gt;(&lt;span class="pl-k"&gt;let&lt;/span&gt; expiryDate, &lt;span class="pl-k"&gt;let&lt;/span&gt; receiptItems)&lt;span class="pl-k"&gt;:&lt;/span&gt;
                    &lt;span class="pl-c1"&gt;print&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;Product is expired since &lt;span class="pl-pse"&gt;\(&lt;/span&gt;&lt;span class="pl-s1"&gt;expiryDate&lt;/span&gt;&lt;span class="pl-pse"&gt;&lt;span class="pl-s1"&gt;)&lt;/span&gt;&lt;/span&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
                &lt;span class="pl-k"&gt;case&lt;/span&gt; .&lt;span class="pl-smi"&gt;notPurchased&lt;/span&gt;&lt;span class="pl-k"&gt;:&lt;/span&gt;
                    &lt;span class="pl-c1"&gt;print&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;This product has never been purchased&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
                }

            } &lt;span class="pl-k"&gt;else&lt;/span&gt; {
                &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; receipt verification error&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;            }
        }
    } &lt;span class="pl-k"&gt;else&lt;/span&gt; {
        &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; purchase error&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;    }
}&lt;/pre&gt;&lt;/div&gt;
&lt;h3&gt;&lt;a id="user-content-subscription-groups" class="anchor" aria-hidden="true" href="#subscription-groups"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Subscription Groups&lt;/h3&gt;
&lt;p&gt;From &lt;a href="https://developer.apple.com/app-store/subscriptions/" rel="nofollow"&gt;Apple Docs - Offering Subscriptions&lt;/a&gt;:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;A subscription group is a set of in-app purchases that you can create to provide users with a range of content offerings, service levels, or durations to best meet their needs. Users can only buy one subscription within a subscription group at a time. If users would want to buy more that one type of subscription — for example, to subscribe to more than one channel in a streaming app — you can put these in-app purchases in different subscription groups.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;You can verify all subscriptions within the same group with the &lt;code&gt;verifySubscriptions&lt;/code&gt; method:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;let&lt;/span&gt; appleValidator &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;AppleReceiptValidator&lt;/span&gt;(&lt;span class="pl-c1"&gt;service&lt;/span&gt;: .&lt;span class="pl-smi"&gt;production&lt;/span&gt;, &lt;span class="pl-c1"&gt;sharedSecret&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;your-shared-secret&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
SwiftyStoreKit.&lt;span class="pl-c1"&gt;verifyReceipt&lt;/span&gt;(&lt;span class="pl-c1"&gt;using&lt;/span&gt;: appleValidator) { result &lt;span class="pl-k"&gt;in&lt;/span&gt;
    &lt;span class="pl-k"&gt;switch&lt;/span&gt; result {
    &lt;span class="pl-k"&gt;case&lt;/span&gt; .&lt;span class="pl-c1"&gt;success&lt;/span&gt;(&lt;span class="pl-k"&gt;let&lt;/span&gt; receipt)&lt;span class="pl-k"&gt;:&lt;/span&gt;
        &lt;span class="pl-k"&gt;let&lt;/span&gt; productIds &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;Set&lt;/span&gt;([ &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;com.musevisions.SwiftyStoreKit.Weekly&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;,
                               &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;com.musevisions.SwiftyStoreKit.Monthly&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;,
                               &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;com.musevisions.SwiftyStoreKit.Yearly&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; ])
        &lt;span class="pl-k"&gt;let&lt;/span&gt; purchaseResult &lt;span class="pl-k"&gt;=&lt;/span&gt; SwiftyStoreKit.&lt;span class="pl-c1"&gt;verifySubscriptions&lt;/span&gt;(&lt;span class="pl-c1"&gt;productIds&lt;/span&gt;: productIds, &lt;span class="pl-c1"&gt;inReceipt&lt;/span&gt;: receipt)
        &lt;span class="pl-k"&gt;switch&lt;/span&gt; purchaseResult {
        &lt;span class="pl-k"&gt;case&lt;/span&gt; .&lt;span class="pl-c1"&gt;purchased&lt;/span&gt;(&lt;span class="pl-k"&gt;let&lt;/span&gt; expiryDate, &lt;span class="pl-k"&gt;let&lt;/span&gt; items)&lt;span class="pl-k"&gt;:&lt;/span&gt;
            &lt;span class="pl-c1"&gt;print&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;span class="pl-pse"&gt;\(&lt;/span&gt;&lt;span class="pl-s1"&gt;productIds&lt;/span&gt;&lt;span class="pl-pse"&gt;&lt;span class="pl-s1"&gt;)&lt;/span&gt;&lt;/span&gt; are valid until &lt;span class="pl-pse"&gt;\(&lt;/span&gt;&lt;span class="pl-s1"&gt;expiryDate&lt;/span&gt;&lt;span class="pl-pse"&gt;&lt;span class="pl-s1"&gt;)&lt;/span&gt;&lt;/span&gt;&lt;span class="pl-cce"&gt;\n&lt;/span&gt;&lt;span class="pl-pse"&gt;\(&lt;/span&gt;&lt;span class="pl-s1"&gt;items&lt;/span&gt;&lt;span class="pl-pse"&gt;&lt;span class="pl-s1"&gt;)&lt;/span&gt;&lt;/span&gt;&lt;span class="pl-cce"&gt;\n&lt;/span&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
        &lt;span class="pl-k"&gt;case&lt;/span&gt; .&lt;span class="pl-c1"&gt;expired&lt;/span&gt;(&lt;span class="pl-k"&gt;let&lt;/span&gt; expiryDate, &lt;span class="pl-k"&gt;let&lt;/span&gt; items)&lt;span class="pl-k"&gt;:&lt;/span&gt;
            &lt;span class="pl-c1"&gt;print&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;span class="pl-pse"&gt;\(&lt;/span&gt;&lt;span class="pl-s1"&gt;productIds&lt;/span&gt;&lt;span class="pl-pse"&gt;&lt;span class="pl-s1"&gt;)&lt;/span&gt;&lt;/span&gt; are expired since &lt;span class="pl-pse"&gt;\(&lt;/span&gt;&lt;span class="pl-s1"&gt;expiryDate&lt;/span&gt;&lt;span class="pl-pse"&gt;&lt;span class="pl-s1"&gt;)&lt;/span&gt;&lt;/span&gt;&lt;span class="pl-cce"&gt;\n&lt;/span&gt;&lt;span class="pl-pse"&gt;\(&lt;/span&gt;&lt;span class="pl-s1"&gt;items&lt;/span&gt;&lt;span class="pl-pse"&gt;&lt;span class="pl-s1"&gt;)&lt;/span&gt;&lt;/span&gt;&lt;span class="pl-cce"&gt;\n&lt;/span&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
        &lt;span class="pl-k"&gt;case&lt;/span&gt; .&lt;span class="pl-smi"&gt;notPurchased&lt;/span&gt;&lt;span class="pl-k"&gt;:&lt;/span&gt;
            &lt;span class="pl-c1"&gt;print&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;The user has never purchased &lt;span class="pl-pse"&gt;\(&lt;/span&gt;&lt;span class="pl-s1"&gt;productIds&lt;/span&gt;&lt;span class="pl-pse"&gt;&lt;span class="pl-s1"&gt;)&lt;/span&gt;&lt;/span&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
        }
    &lt;span class="pl-k"&gt;case&lt;/span&gt; .&lt;span class="pl-c1"&gt;error&lt;/span&gt;(&lt;span class="pl-k"&gt;let&lt;/span&gt; error)&lt;span class="pl-k"&gt;:&lt;/span&gt;
        &lt;span class="pl-c1"&gt;print&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;Receipt verification failed: &lt;span class="pl-pse"&gt;\(&lt;/span&gt;&lt;span class="pl-s1"&gt;error&lt;/span&gt;&lt;span class="pl-pse"&gt;&lt;span class="pl-s1"&gt;)&lt;/span&gt;&lt;/span&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
    }
}&lt;/pre&gt;&lt;/div&gt;
&lt;h2&gt;&lt;a id="user-content-notes" class="anchor" aria-hidden="true" href="#notes"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Notes&lt;/h2&gt;
&lt;p&gt;The framework provides a simple block based API with robust error handling on top of the existing StoreKit framework. It does &lt;strong&gt;NOT&lt;/strong&gt; persist in app purchases data locally. It is up to clients to do this with a storage solution of choice (i.e. NSUserDefaults, CoreData, Keychain).&lt;/p&gt;
&lt;h4&gt;&lt;a id="user-content-swift-2x--3x--4x--5x" class="anchor" aria-hidden="true" href="#swift-2x--3x--4x--5x"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Swift 2.x / 3.x / 4.x / 5.x&lt;/h4&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Language&lt;/th&gt;
&lt;th&gt;Branch&lt;/th&gt;
&lt;th&gt;Pod version&lt;/th&gt;
&lt;th&gt;Xcode version&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;Swift 5.x&lt;/td&gt;
&lt;td&gt;&lt;a href="https://github.com/bizz84/SwiftyStoreKit/tree/master"&gt;master&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&amp;gt;= 0.15.0&lt;/td&gt;
&lt;td&gt;Xcode 10.2 or greater&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Swift 4.x&lt;/td&gt;
&lt;td&gt;&lt;a href="https://github.com/bizz84/SwiftyStoreKit/tree/master"&gt;master&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&amp;gt;= 0.10.4&lt;/td&gt;
&lt;td&gt;Xcode 9 or greater&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Swift 3.x&lt;/td&gt;
&lt;td&gt;&lt;a href="https://github.com/bizz84/SwiftyStoreKit/tree/master"&gt;master&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&amp;gt;= 0.5.x&lt;/td&gt;
&lt;td&gt;Xcode 8.x&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Swift 2.3&lt;/td&gt;
&lt;td&gt;&lt;a href="https://github.com/bizz84/SwiftyStoreKit/tree/swift-2.3"&gt;swift-2.3&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;0.4.x&lt;/td&gt;
&lt;td&gt;Xcode 8, Xcode 7.3.x&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Swift 2.2&lt;/td&gt;
&lt;td&gt;&lt;a href="https://github.com/bizz84/SwiftyStoreKit/tree/swift-2.2"&gt;swift-2.2&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;0.3.x&lt;/td&gt;
&lt;td&gt;Xcode 7.3.x&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h2&gt;&lt;a id="user-content-change-log" class="anchor" aria-hidden="true" href="#change-log"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Change Log&lt;/h2&gt;
&lt;p&gt;See the &lt;a href="https://github.com/bizz84/SwiftyStoreKit/releases"&gt;Releases Page&lt;/a&gt;.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-sample-code" class="anchor" aria-hidden="true" href="#sample-code"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Sample Code&lt;/h2&gt;
&lt;p&gt;The project includes demo apps &lt;a href="https://github.com/bizz84/SwiftyStoreKit/blob/master/SwiftyStoreKit-iOS-Demo/ViewController.swift"&gt;for iOS&lt;/a&gt; &lt;a href="https://github.com/bizz84/SwiftyStoreKit/blob/master/SwiftyStoreKit-macOS-Demo/ViewController.swift"&gt;and macOS&lt;/a&gt; showing how to use SwiftyStoreKit.
Note that the pre-registered in app purchases in the demo apps are for illustration purposes only and may not work as iTunes Connect may invalidate them.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-essential-reading" class="anchor" aria-hidden="true" href="#essential-reading"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Essential Reading&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://developer.apple.com/videos/play/wwdc2016/702/" rel="nofollow"&gt;Apple - WWDC16, Session 702: Using Store Kit for In-app Purchases with Swift 3&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://developer.apple.com/library/content/technotes/tn2387/_index.html" rel="nofollow"&gt;Apple - TN2387: In-App Purchase Best Practices&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://developer.apple.com/library/content/technotes/tn2413/_index.html" rel="nofollow"&gt;Apple - TN2413: In-App Purchase FAQ&lt;/a&gt; (also see &lt;a href="https://developer.apple.com/library/content/technotes/tn2413/_index.html#//apple_ref/doc/uid/DTS40016228-CH1-ERROR_MESSAGES-CANNOT_CONNECT_TO_ITUNES_STORE" rel="nofollow"&gt;Cannot connect to iTunes Store&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;a href="https://developer.apple.com/library/content/technotes/tn2259/_index.html" rel="nofollow"&gt;Apple - TN2259: Adding In-App Purchase to Your Applications&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://help.apple.com/itunes-connect/developer/#/devb57be10e7" rel="nofollow"&gt;iTunes Connect Developer Help - Workflow for configuring in-app purchases&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://developer.apple.com/library/content/releasenotes/General/ValidateAppStoreReceipt/Introduction.html" rel="nofollow"&gt;Apple - About Receipt Validation&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://developer.apple.com/library/content/releasenotes/General/ValidateAppStoreReceipt/Chapters/ReceiptFields.html#//apple_ref/doc/uid/TP40010573-CH106-SW1" rel="nofollow"&gt;Apple - Receipt Validation Programming Guide&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://developer.apple.com/library/content/releasenotes/General/ValidateAppStoreReceipt/Chapters/ValidateLocally.html" rel="nofollow"&gt;Apple - Validating Receipts Locally&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://developer.apple.com/library/content/documentation/NetworkingInternet/Conceptual/StoreKitGuide/Chapters/Subscriptions.html#//apple_ref/doc/uid/TP40008267-CH7-SW6" rel="nofollow"&gt;Apple - Working with Subscriptions&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://developer.apple.com/app-store/subscriptions/" rel="nofollow"&gt;Apple - Offering Subscriptions&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://developer.apple.com/library/content/documentation/NetworkingInternet/Conceptual/StoreKitGuide/Chapters/Restoring.html#//apple_ref/doc/uid/TP40008267-CH8-SW9" rel="nofollow"&gt;Apple - Restoring Purchased Products&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://developer.apple.com/library/content/documentation/LanguagesUtilities/Conceptual/iTunesConnectInAppPurchase_Guide/Chapters/TestingInAppPurchases.html" rel="nofollow"&gt;Apple - Testing In-App Purchase Products&lt;/a&gt;: includes info on duration of subscriptions in sandbox mode&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.objc.io/issues/17-security/receipt-validation/" rel="nofollow"&gt;objc.io - Receipt Validation&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;I have also written about building SwiftyStoreKit on Medium:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://medium.com/ios-os-x-development/how-i-got-1000-%EF%B8%8F-on-my-github-project-654d3d394ca6#.1idp27olf" rel="nofollow"&gt;How I got 1000 &lt;g-emoji class="g-emoji" alias="star" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/2b50.png"&gt;⭐️&lt;/g-emoji&gt; on my GitHub Project&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://medium.com/@biz84/maintaining-a-growing-open-source-project-1d385ca84c5#.4cv2g7tdc" rel="nofollow"&gt;Maintaining a Growing Open Source Project&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;&lt;a id="user-content-troubleshooting" class="anchor" aria-hidden="true" href="#troubleshooting"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Troubleshooting&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://developer.apple.com/library/content/technotes/tn2413/_index.html#//apple_ref/doc/uid/DTS40016228-CH1-TROUBLESHOOTING-WHY_ARE_MY_PRODUCT_IDENTIFIERS_BEING_RETURNED_IN_THE_INVALIDPRODUCTIDENTIFIERS_ARRAY_" rel="nofollow"&gt;Apple TN 2413 - Why are my product identifiers being returned in the invalidProductIdentifiers array?&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://troybrant.net/blog/2010/01/invalid-product-ids/" rel="nofollow"&gt;Invalid Product IDs&lt;/a&gt;: Checklist of common mistakes&lt;/li&gt;
&lt;li&gt;&lt;a href="http://davidbarnard.com/post/164337147440/testing-auto-renewable-subscriptions-on-ios" rel="nofollow"&gt;Testing Auto-Renewable Subscriptions on iOS&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://forums.developer.apple.com/message/261428#261428" rel="nofollow"&gt;Apple forums - iOS 11 beta sandbox - cannot connect to App Store&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-video-tutorials" class="anchor" aria-hidden="true" href="#video-tutorials"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Video Tutorials&lt;/h2&gt;
&lt;h4&gt;&lt;a id="user-content-jared-davidson-in-app-purchases-swift-3-in-xcode--swifty-store-kit" class="anchor" aria-hidden="true" href="#jared-davidson-in-app-purchases-swift-3-in-xcode--swifty-store-kit"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Jared Davidson: In App Purchases! (Swift 3 in Xcode : Swifty Store Kit)&lt;/h4&gt;
&lt;p&gt;&lt;a href="https://www.youtube.com/watch?v=dwPFtwDJ7tcb" rel="nofollow"&gt;&lt;img src="https://raw.githubusercontent.com/bizz84/SwiftyStoreKit/master/Screenshots/VideoTutorial-JaredDavidson.jpg" width="854" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h4&gt;&lt;a id="user-content-rebeloper-ultimate-in-app-purchases-guide" class="anchor" aria-hidden="true" href="#rebeloper-ultimate-in-app-purchases-guide"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;a href="https://github.com/rebeloper"&gt;@rebeloper&lt;/a&gt;: Ultimate In-app Purchases Guide&lt;/h4&gt;
&lt;p&gt;&lt;a href="https://www.youtube.com/watch?v=bIyj6BZ1-Qw&amp;amp;list=PL_csAAO9PQ8b9kqrltk2_SpYslTwyrwjb" rel="nofollow"&gt;&lt;img src="https://raw.githubusercontent.com/bizz84/SwiftyStoreKit/master/Screenshots/VideoTutorial-Rebeloper.jpg" width="854" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-payment-flows-implementation-details" class="anchor" aria-hidden="true" href="#payment-flows-implementation-details"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Payment flows: implementation details&lt;/h2&gt;
&lt;p&gt;In order to make a purchase, two operations are needed:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Perform a &lt;code&gt;SKProductRequest&lt;/code&gt; to obtain the &lt;code&gt;SKProduct&lt;/code&gt; corresponding to the product identifier.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Submit the payment and listen for updated transactions on the &lt;code&gt;SKPaymentQueue&lt;/code&gt;.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;The framework takes care of caching SKProducts so that future requests for the same &lt;code&gt;SKProduct&lt;/code&gt; don't need to perform a new &lt;code&gt;SKProductRequest&lt;/code&gt;.&lt;/p&gt;
&lt;h4&gt;&lt;a id="user-content-payment-queue" class="anchor" aria-hidden="true" href="#payment-queue"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Payment queue&lt;/h4&gt;
&lt;p&gt;The following list outlines how requests are processed by SwiftyStoreKit.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;SKPaymentQueue&lt;/code&gt; is used to queue payments or restore purchases requests.&lt;/li&gt;
&lt;li&gt;Payments are processed serially and in-order and require user interaction.&lt;/li&gt;
&lt;li&gt;Restore purchases requests don't require user interaction and can jump ahead of the queue.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;SKPaymentQueue&lt;/code&gt; rejects multiple restore purchases calls.&lt;/li&gt;
&lt;li&gt;Failed transactions only ever belong to queued payment requests.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;restoreCompletedTransactionsFailedWithError&lt;/code&gt; is always called when a restore purchases request fails.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;paymentQueueRestoreCompletedTransactionsFinished&lt;/code&gt; is always called following 0 or more update transactions when a restore purchases request succeeds.&lt;/li&gt;
&lt;li&gt;A complete transactions handler is require to catch any transactions that are updated when the app is not running.&lt;/li&gt;
&lt;li&gt;Registering a complete transactions handler when the app launches ensures that any pending transactions can be cleared.&lt;/li&gt;
&lt;li&gt;If a complete transactions handler is missing, pending transactions can be mis-attributed to any new incoming payments or restore purchases.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;The order in which transaction updates are processed is:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;payments (transactionState: &lt;code&gt;.purchased&lt;/code&gt; and &lt;code&gt;.failed&lt;/code&gt; for matching product identifiers)&lt;/li&gt;
&lt;li&gt;restore purchases (transactionState: &lt;code&gt;.restored&lt;/code&gt;, or &lt;code&gt;restoreCompletedTransactionsFailedWithError&lt;/code&gt;, or &lt;code&gt;paymentQueueRestoreCompletedTransactionsFinished&lt;/code&gt;)&lt;/li&gt;
&lt;li&gt;complete transactions (transactionState: &lt;code&gt;.purchased&lt;/code&gt;, &lt;code&gt;.failed&lt;/code&gt;, &lt;code&gt;.restored&lt;/code&gt;, &lt;code&gt;.deferred&lt;/code&gt;)&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;Any transactions where state is &lt;code&gt;.purchasing&lt;/code&gt; are ignored.&lt;/p&gt;
&lt;p&gt;See &lt;a href="https://github.com/bizz84/SwiftyStoreKit/pull/131"&gt;this pull request&lt;/a&gt; for full details about how the payment flows have been implemented.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-credits" class="anchor" aria-hidden="true" href="#credits"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Credits&lt;/h2&gt;
&lt;p&gt;Many thanks to &lt;a href="https://github.com/phimage"&gt;phimage&lt;/a&gt; for adding macOS support and receipt verification.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-apps-using-swiftystorekit" class="anchor" aria-hidden="true" href="#apps-using-swiftystorekit"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Apps using SwiftyStoreKit&lt;/h2&gt;
&lt;p&gt;It would be great to showcase apps using SwiftyStoreKit here. Pull requests welcome :)&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://itunes.apple.com/us/app/every-plant-ever/id1433967019" rel="nofollow"&gt;Every Plant, Ever&lt;/a&gt; - The sticker pack of every plant, ever.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://countdowns.download/ssk" rel="nofollow"&gt;Countdown&lt;/a&gt; - Countdown the days until your next vacation, deadline, or event&lt;/li&gt;
&lt;li&gt;&lt;a href="https://itunes.apple.com/app/id1044050208" rel="nofollow"&gt;MDacne&lt;/a&gt; - Acne analysis and treatment&lt;/li&gt;
&lt;li&gt;&lt;a href="https://itunes.apple.com/app/id930804327" rel="nofollow"&gt;Pixel Picker&lt;/a&gt; - Image Color Picker&lt;/li&gt;
&lt;li&gt;&lt;a href="https://itunes.apple.com/app/id1037000234" rel="nofollow"&gt;KType&lt;/a&gt; - Space shooter game&lt;/li&gt;
&lt;li&gt;&lt;a href="https://itunes.apple.com/app/id1101244278" rel="nofollow"&gt;iPic&lt;/a&gt; - Automatically upload images and save Markdown links&lt;/li&gt;
&lt;li&gt;&lt;a href="https://itunes.apple.com/app/id1102004240" rel="nofollow"&gt;iHosts&lt;/a&gt; - Perfect for editing /etc/hosts&lt;/li&gt;
&lt;li&gt;&lt;a href="http://www.abnehm-app.de/" rel="nofollow"&gt;Arise&lt;/a&gt; - Calorie counter&lt;/li&gt;
&lt;li&gt;&lt;a href="https://itunes.apple.com/app/id1130832864" rel="nofollow"&gt;Truth Truth Lie&lt;/a&gt; - iMessage game, featured by Apple&lt;/li&gt;
&lt;li&gt;&lt;a href="https://itunes.apple.com/app/id557446352" rel="nofollow"&gt;Tactus Music Player&lt;/a&gt; - Alternative music player app&lt;/li&gt;
&lt;li&gt;&lt;a href="https://itunes.apple.com/app/id939540371" rel="nofollow"&gt;Drops&lt;/a&gt; - Language learning app&lt;/li&gt;
&lt;li&gt;&lt;a href="https://itunes.apple.com/app/id1063000470" rel="nofollow"&gt;Fresh Snow&lt;/a&gt; - Colorado Ski Report&lt;/li&gt;
&lt;li&gt;&lt;a href="http://grandcanyon.zmeu.guide/" rel="nofollow"&gt;Zmeu Grand Canyon&lt;/a&gt; - Interactive hiking map &amp;amp; planner&lt;/li&gt;
&lt;li&gt;&lt;a href="https://itunes.apple.com/app/id1073398446" rel="nofollow"&gt;OB Monitor&lt;/a&gt; - The app for Texas Longhorns athletics fans&lt;/li&gt;
&lt;li&gt;&lt;a href="https://itunes.apple.com/us/app/talk-dim-sum/id953929066" rel="nofollow"&gt;Talk Dim Sum&lt;/a&gt; - Your dim sum companion&lt;/li&gt;
&lt;li&gt;&lt;a href="https://itunes.apple.com/app/id1160131071" rel="nofollow"&gt;Sluggard&lt;/a&gt; - Perform simple exercises to reduce the risks of sedentary lifestyle&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;A full list of apps is published &lt;a href="https://www.appsight.io/sdk/574154" rel="nofollow"&gt;on AppSight&lt;/a&gt;.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-license" class="anchor" aria-hidden="true" href="#license"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;License&lt;/h2&gt;
&lt;p&gt;Copyright (c) 2015-2018 Andrea Bizzotto &lt;a href="mailto:bizz84@gmail.com"&gt;bizz84@gmail.com&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the "Software"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions:&lt;/p&gt;
&lt;p&gt;The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.&lt;/p&gt;
&lt;p&gt;THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.&lt;/p&gt;
&lt;/article&gt;&lt;/div&gt;</description><author>bizz84</author><guid isPermaLink="false">https://github.com/bizz84/SwiftyStoreKit</guid><pubDate>Sat, 25 Jan 2020 00:11:00 GMT</pubDate></item><item><title>ioscreator/ioscreator #12 in Swift, This week</title><link>https://github.com/ioscreator/ioscreator</link><description>&lt;p&gt;&lt;i&gt;Tutorials from ioscreator.com&lt;/i&gt;&lt;/p&gt;&lt;div id="readme" class="md" data-path="README.md"&gt;&lt;article class="markdown-body entry-content p-5" itemprop="text"&gt;&lt;h1&gt;&lt;a id="user-content-ioscreator" class="anchor" aria-hidden="true" href="#ioscreator"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;iOScreator&lt;/h1&gt;
&lt;p&gt;Source Code of iOS tutorials at ioscreator.com&lt;/p&gt;
&lt;p&gt;===========================================================================================================
CODE EXAMPLES REPOSITORY&lt;/p&gt;
&lt;p&gt;See &lt;a href="https://ioscreator.com" rel="nofollow"&gt;https://ioscreator.com&lt;/a&gt; for a detailed description&lt;/p&gt;
&lt;h1&gt;&lt;a id="user-content-this-readme-last-updated-01-23-2020" class="anchor" aria-hidden="true" href="#this-readme-last-updated-01-23-2020"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;This README last updated: 01-23-2020&lt;/h1&gt;
&lt;h1&gt;&lt;a id="user-content-index" class="anchor" aria-hidden="true" href="#index"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;INDEX&lt;/h1&gt;
&lt;h3&gt;&lt;a id="user-content-ios13" class="anchor" aria-hidden="true" href="#ios13"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;iOS13&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://ioscreator.com/tutorials/action-sheet-ios-tutorial" rel="nofollow"&gt;IOSActionSheetTutorial&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://ioscreator.com/tutorials/page-control-ios-tutorial" rel="nofollow"&gt;IOSPageControlTutorial&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://ioscreator.com/tutorials/parallax-scrolling-spritekit-tutorial" rel="nofollow"&gt;IOSSpriteKitParallaxScrollingTutorial&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://ioscreator.com/tutorials/fetch-contacts-ios-tutorial" rel="nofollow"&gt;IOSFetchContactsTutorial&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://ioscreator.com/tutorials/ios-split-view-controller-tutorial" rel="nofollow"&gt;IOSSplitViewControllerTutorial&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://ioscreator.com/tutorials/swiftui-circular-progress-bar-tutorial" rel="nofollow"&gt;SwiftUICircularProgressBarTutorial&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://ioscreator.com/tutorials/swiftui-context-menu-tutorial" rel="nofollow"&gt;SwiftUIContextMenuTutorial&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://ioscreator.com/tutorials/swiftui-divider-tutorial" rel="nofollow"&gt;SwiftUIDividerTutorial&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://ioscreator.com/tutorials/swiftui-calculator-tutorial" rel="nofollow"&gt;SwiftUICalculatorTutorial&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://ioscreator.com/tutorials/swiftui-long-press-gesture-tutorial" rel="nofollow"&gt;SwiftUILongPressGestureTutorial&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://ioscreator.com/tutorials/swiftui-scroll-view-tutorial" rel="nofollow"&gt;SwiftUIScrollViewTutorial&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://ioscreator.com/tutorials/swiftui-add-rows-list-tutorial" rel="nofollow"&gt;SwiftUIAddRowsListTutorial&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://ioscreator.com/tutorials/layout-anchors-ios-tutorial" rel="nofollow"&gt;IOSLayoutAnchorsTutorial&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://ioscreator.com/tutorials/swiftui-geometryreader-tutorial" rel="nofollow"&gt;SwiftUIGeometryReaderTutorial&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://ioscreator.com/tutorials/swiftui-delete-rows-list-tutorial" rel="nofollow"&gt;SwiftUIDeleteRowsListTutorial&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://ioscreator.com/tutorials/swiftui-spacer-tutorial" rel="nofollow"&gt;SwiftUISpacerTutorial&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://ioscreator.com/tutorials/swiftui-overlay-views-tutorial" rel="nofollow"&gt;SwiftUIOverlayViewsTutorial&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://ioscreator.com/tutorials/swiftui-header-footer-list-tutorial" rel="nofollow"&gt;SwiftUIHeaderFooterListTutorial&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://ioscreator.com/tutorials/swiftui-spring-animation-tutorial" rel="nofollow"&gt;SwiftUISpringAnimationTutorial&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://ioscreator.com/tutorials/swiftui-mapkit-tutorial" rel="nofollow"&gt;SwiftUIMapKitTutorial&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://ioscreator.com/tutorials/move-rows-list-tutorial" rel="nofollow"&gt;SwiftUIMoveRowsListTutorial&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://ioscreator.com/tutorials/customize-navigation-bar-tutorial" rel="nofollow"&gt;SwiftUICustomizeNavBarTutorial&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://ioscreator.com/tutorials/swiftui-rotation-gesture-tutorial" rel="nofollow"&gt;SwiftUIRotateGestureTutorial&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://ioscreator.com/tutorials/swiftui-draw-gradient-tutorial" rel="nofollow"&gt;SwiftUIDrawGradientTutorial&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://ioscreator.com/tutorials/swiftui-animation-tutorial" rel="nofollow"&gt;SwiftUIAnimationTutorial&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://ioscreator.com/tutorials/swiftui-magnification-gesture-tutorial" rel="nofollow"&gt;SwiftUIMagnificationGestureTutorial&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://ioscreator.com/tutorials/swiftui-secure-textfield-tutorial" rel="nofollow"&gt;SwiftUISecureTextFieldTutorial&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://ioscreator.com/tutorials/swiftui-dark-mode-preview-tutorial" rel="nofollow"&gt;SwiftUIDarkModePreviewTutorial&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://ioscreator.com/tutorials/swiftui-date-picker-tutorial" rel="nofollow"&gt;SwiftUIDatePickerTutorial&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://ioscreator.com/tutorials/swiftui-modal-tutorial" rel="nofollow"&gt;SwiftUIModalTutorial&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://ioscreator.com/tutorials/swiftui-forms-tutorial" rel="nofollow"&gt;SwiftUIFormsTutorial&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://ioscreator.com/tutorials/swiftui-drag-gesture-tutorial" rel="nofollow"&gt;SwiftUIDragGestureTutorial&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://ioscreator.com/tutorials/swiftui-preview-multiple-devices-tutorial" rel="nofollow"&gt;SwiftUIPreviewDevicesTutorial&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://ioscreator.com/tutorials/swiftui-environment-object-tutorial" rel="nofollow"&gt;SwiftUIEnvironmentObjectTutorial&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://ioscreator.com/tutorials/swiftui-tab-view-tutorial" rel="nofollow"&gt;SwiftUITabViewTutorial&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://ioscreator.com/tutorials/swiftui-observable-object-tutorial" rel="nofollow"&gt;SwiftUIObservableObjectTutorial&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://ioscreator.com/tutorials/swiftui-circular-image-tutorial" rel="nofollow"&gt;SwiftUICircularImageTutorial&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://ioscreator.com/tutorials/swiftui-background-color-tutorial" rel="nofollow"&gt;SwiftUIBackgroundColorTutorial&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://ioscreator.com/tutorials/swiftui-basic-shapes-tutorial" rel="nofollow"&gt;SwiftUIBasicShapesTutorial&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://ioscreator.com/tutorials/swiftui-button-tutorial" rel="nofollow"&gt;SwiftUIButtonTutorial&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://ioscreator.com/tutorials/swiftui-scale-image-tutorial" rel="nofollow"&gt;SwiftUIScaleImageTutorial&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://ioscreator.com/tutorials/swiftui-textfield-tutorial" rel="nofollow"&gt;SwiftUITextFieldTutorial&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://ioscreator.com/tutorials/swiftui-rotate-view-tutorial" rel="nofollow"&gt;SwiftUIRotateViewTutorial&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://ioscreator.com/tutorials/swiftui-shadow-tutorial" rel="nofollow"&gt;SwiftUIShadowTutorial&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://ioscreator.com/tutorials/swiftui-gesture-tutorial" rel="nofollow"&gt;SwiftUIGestureTutorial&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://ioscreator.com/tutorials/swiftui-stepper-tutorial" rel="nofollow"&gt;SwiftUIStepperTutorial&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://ioscreator.com/tutorials/swiftui-action-sheet-tutorial" rel="nofollow"&gt;SwiftUIActionSheetTutorial&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://ioscreator.com/tutorials/swiftui-slider-tutorial" rel="nofollow"&gt;SwiftUISliderTutorial&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://ioscreator.com/tutorials/swiftui-picker-tutorial" rel="nofollow"&gt;SwiftUIPickerTutorial&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://ioscreator.com/tutorials/swiftui-segmented-control-tutorial" rel="nofollow"&gt;SwiftUISegmentedControlTutorial&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://ioscreator.com/tutorials/swiftui-integrate-uikit-tutorial" rel="nofollow"&gt;SwiftUIIntegrateUIKitTutorial&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://ioscreator.com/tutorials/swiftui-alert-tutorial" rel="nofollow"&gt;SwiftUIAlertTutorial&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://ioscreator.com/tutorials/swiftui-state-tutorial" rel="nofollow"&gt;SwiftUIStateTutorial&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://ioscreator.com/tutorials/swiftui-list-tutorial" rel="nofollow"&gt;SwiftUIListTutorial&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://ioscreator.com/tutorials/swiftui-text-view-tutorial" rel="nofollow"&gt;SwiftUITextViewTutorial&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://ioscreator.com/tutorials/swiftui-stack-tutorial" rel="nofollow"&gt;SwiftUIStackTutorial&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://ioscreator.com/tutorials/swiftui-getting-started-tutorial" rel="nofollow"&gt;SwiftUIGettingStartedTutorial&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;&lt;a id="user-content-ios12" class="anchor" aria-hidden="true" href="#ios12"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;iOS12&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://ioscreator.com/tutorials/navigation-controller-ios-tutorial" rel="nofollow"&gt;IOSNavigationControllerTutorial&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://ioscreator.com/tutorials/multipeer-connectivity-ios-tutorial" rel="nofollow"&gt;IOSMultipeerConnectivityTutorial&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://ioscreator.com/tutorials/spell-checker-ios-tutorial" rel="nofollow"&gt;IOSSpellingCheckerTutorial&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://ioscreator.com/tutorials/background-fetch-ios-tutorial" rel="nofollow"&gt;IOSBackgroundFetchTutorial&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://ioscreator.com/tutorials/circular-image-view-ios-tutorial" rel="nofollow"&gt;IOSCircularImageTutorial&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://ioscreator.com/tutorials/display-popover-ios-tutorial" rel="nofollow"&gt;IOSPopoverTutorial&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://ioscreator.com/tutorials/delete-item-collection-view-controller-ios-tutorial" rel="nofollow"&gt;IOSDeleteItemsCollectionViewTutorial&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://ioscreator.com/tutorials/mapkit-flyover-ios-tutorial" rel="nofollow"&gt;IOSFlyOverMapKitTutorial&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://ioscreator.com/tutorials/volume-view-ios-tutorial" rel="nofollow"&gt;IOSVolumeViewTutorial&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://ioscreator.com/tutorials/activity-view-controller-ios-tutorial" rel="nofollow"&gt;IOSActivityViewControllerTutorial&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://ioscreator.com/tutorials/swipe-gesture-ios-tutorial" rel="nofollow"&gt;IOSSwipeGestureTutorial&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://ioscreator.com/tutorials/webview-ios-tutorial" rel="nofollow"&gt;IOSWebViewTutorial&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://ioscreator.com/tutorials/uikit-dynamics-attachment-behaviour-ios-tutorial" rel="nofollow"&gt;IOSAttachmentBehaviourTutorial&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://ioscreator.com/tutorials/add-item-collection-view-controller-ios-tutorial" rel="nofollow"&gt;IOSAddItemsCollectionViewTutorial&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://ioscreator.com/tutorials/particle-emitter-ios-tutorial" rel="nofollow"&gt;IOSParticleEmitterTutorial&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://ioscreator.com/tutorials/progress-view-ios-tutorial" rel="nofollow"&gt;IOSProgressViewTutorial&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://ioscreator.com/tutorials/pass-data-view-controller-ios-tutorial" rel="nofollow"&gt;IOSPassDataViewControllerTutorial&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://ioscreator.com/tutorials/mapkit-ios-tutorial" rel="nofollow"&gt;IOSMapKitTutorial&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://ioscreator.com/tutorials/airprint-ios-tutorial" rel="nofollow"&gt;IOSAirPrintTutorial&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://ioscreator.com/tutorials/switch-ios-tutorial" rel="nofollow"&gt;IOSSwitchTutorial&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://ioscreator.com/tutorials/dynamic-types-ios-tutorial" rel="nofollow"&gt;IOSDynamicTypesTutorial&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://ioscreator.com/tutorials/collection-view-controller-ios-tutorial" rel="nofollow"&gt;IOSCollectionViewControllerTutorial&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://ioscreator.com/tutorials/slider-ios-tutorial" rel="nofollow"&gt;IOSSliderTutorial&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://ioscreator.com/tutorials/touch-id-ios-tutorial" rel="nofollow"&gt;IOSTouchIDTutorial&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://ioscreator.com/tutorials/spring-animation-ios-tutorial" rel="nofollow"&gt;IOSSpringAnimationTutorial&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://ioscreator.com/tutorials/long-press-gesture-ios-tutorial" rel="nofollow"&gt;IOSLongPressGestureTutorial&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://ioscreator.com/tutorials/pull-to-refresh-ios-tutorial" rel="nofollow"&gt;IOSPullToRefreshTutorial&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://ioscreator.com/tutorials/swipe-table-view-cell-custom-actions-ios-tutorial" rel="nofollow"&gt;IOSActionsTableViewTutorial&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://ioscreator.com/tutorials/snap-behaviour-ios-tutorial" rel="nofollow"&gt;IOSSnapBehaviourTutorial&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://ioscreator.com/tutorials/blur-effect-ios-tutorial" rel="nofollow"&gt;IOSBlurEffectTutorial&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://ioscreator.com/tutorials/rotate-image-ios-tutorial" rel="nofollow"&gt;IOSRotateImageTutorial&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://ioscreator.com/tutorials/sprite-movement-actions-ios-tutorial" rel="nofollow"&gt;IOSSpriteKitActionsTutorial&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://ioscreator.com/tutorials/picker-ios-tutorial" rel="nofollow"&gt;IOSPickerTutorial&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://ioscreator.com/tutorials/collision-detection-uikit-dynamics-ios-tutorial" rel="nofollow"&gt;IOSCollectionDetectionTutorial&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://ioscreator.com/tutorials/shake-gesture-ios-tutorial" rel="nofollow"&gt;IOSShakeGestureTutorial&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://ioscreator.com/tutorials/attributed-strings-ios-tutorial" rel="nofollow"&gt;IOSAttributedStringsTutorial&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://ioscreator.com/tutorials/customize-navigation-bar-ios-tutorial" rel="nofollow"&gt;IOSDragViewsGesturesTutorial&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://ioscreator.com/tutorials/drag-views-gestures-ios-tutorial" rel="nofollow"&gt;IOSDragViewsGesturesTutorial&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://ioscreator.com/tutorials/scale-images-pinch-gesture-ios-tutorial" rel="nofollow"&gt;IOSScaleImageTutorial&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://ioscreator.com/tutorials/display-date-date-picker-ios-tutorial" rel="nofollow"&gt;IOSDatePickerTutorial&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://ioscreator.com/tutorials/fade-in-fade-out-ios-tutorial" rel="nofollow"&gt;IOSFadeMusicTutorial&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://ioscreator.com/tutorials/prototype-cells-table-view-ios-tutorial" rel="nofollow"&gt;IOSPrototypeCellsTutorial&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://ioscreator.com/tutorials/add-shadow-button-ios-tutorial" rel="nofollow"&gt;IOSShadowButtonTutorial&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://ioscreator.com/tutorials/stepper-ios-tutorial" rel="nofollow"&gt;IOSStepperTutorial&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://ioscreator.com/tutorials/local-notification-ios-tutorial" rel="nofollow"&gt;IOSLocalNotificationTutorial&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://ioscreator.com/tutorials/display-background-spritekit-ios-tutorial" rel="nofollow"&gt;IOSSpriteKitBackgroundTutorial&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://ioscreator.com/tutorials/context-menu-table-view-ios-tutorial" rel="nofollow"&gt;IOSContextMenuTableViewTutorial&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://ioscreator.com/tutorials/display-alert-ios-tutorial" rel="nofollow"&gt;IOSDisplayAlertTutorial&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://ioscreator.com/tutorials/tab-bar-customization-ios-tutorial" rel="nofollow"&gt;IOSTabBarCustomizationTutorial&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://ioscreator.com/tutorials/request-permission-core-location-ios-tutorial" rel="nofollow"&gt;IOSRequestPermissionTutorial&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://ioscreator.com/tutorials/multiple-outlets-ios-tutorial" rel="nofollow"&gt;IOSMultipleOutletsTutorial&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://ioscreator.com/tutorials/change-display-name-ios-tutorial" rel="nofollow"&gt;IOSChangeDisplayNameTutorial&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://ioscreator.com/tutorials/parse-xml-ios-tutorial" rel="nofollow"&gt;IOSParseXMLTutorial&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://ioscreator.com/tutorials/segmented-controller-ios-tutorial" rel="nofollow"&gt;IOSSegmentedControllerTutorial&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://ioscreator.com/tutorials/change-color-status-bar-ios-tutorial" rel="nofollow"&gt;IOSColorStatusBarTutorial&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://ioscreator.com/tutorials/sprite-kit-physics-ios-tutorial" rel="nofollow"&gt;IOSSpriteKitPhysicsTutorial&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://ioscreator.com/tutorials/editable-text-field-alert-controller-ios-tutorial" rel="nofollow"&gt;IOSTextFieldAlertControllerTutorial&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://ioscreator.com/tutorials/play-vibration-ios-tutorial" rel="nofollow"&gt;IOSVibrationTutorial&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://ioscreator.com/tutorials/open-pdf-ios-tutorial" rel="nofollow"&gt;IOSOpenPDFTutorial&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://ioscreator.com/tutorials/disable-apple-transport-security-ios-tutorial" rel="nofollow"&gt;IOSDisableATSTutorial&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://ioscreator.com/tutorials/reorder-collection-view-ios-tutorial" rel="nofollow"&gt;IOSReorderCollectionViewTutorial&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://ioscreator.com/tutorials/draw-shapes-core-graphics-ios-tutorial" rel="nofollow"&gt;IOSDrawShapesTutorial&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://ioscreator.com/tutorials/safari-view-controller-ios-tutorial" rel="nofollow"&gt;IOSSafariViewControllerTutorial&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://ioscreator.com/tutorials/take-photo-ios-tutorial" rel="nofollow"&gt;IOSTakePhotoTutorial&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://ioscreator.com/tutorials/move-sprites-accelerometer-ios-tutorial" rel="nofollow"&gt;IOSMoveSpritesAccelerometerTutorial&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://ioscreator.com/tutorials/customizing-table-view-ios-tutorial" rel="nofollow"&gt;IOSCustomizingTableViewTutorial&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://ioscreator.com/tutorials/json-ios-tutorial" rel="nofollow"&gt;IOSJSONTutorial&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://ioscreator.com/tutorials/scroll-view-paging-ios-tutorial" rel="nofollow"&gt;IOSScrollViewPagingTutorial&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://ioscreator.com/tutorials/add-search-table-view-ios-tutorial" rel="nofollow"&gt;IOSAddSearchTableViewTutorial&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://ioscreator.com/tutorials/pasteboard-ios-tutorial" rel="nofollow"&gt;IOSPasteBoardTutorial&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://ioscreator.com/tutorials/custom-font-ios-tutorial" rel="nofollow"&gt;IOSCustomFontTutorial&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://ioscreator.com/tutorials/screen-edge-pan-gesture-ios-tutorial" rel="nofollow"&gt;IOSScreenEdgePanGestureTutorial&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://ioscreator.com/tutorials/live-rendering-ios-tutorial" rel="nofollow"&gt;IOSLiveRenderingTutorial&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://ioscreator.com/tutorials/load-data-property-list-ios-tutorial" rel="nofollow"&gt;IOSDataLoadPropertyListTutorial&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://ioscreator.com/tutorials/play-music-avaudioplayer-ios-tutorial" rel="nofollow"&gt;IOSPlayMusicAVAudioPlayTutorial&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://ioscreator.com/tutorials/custom-collection-view-cell-ios-tutorial" rel="nofollow"&gt;IOSCustomCollectionViewCellTutorial&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://ioscreator.com/tutorials/cocoapods-ios-tutorial" rel="nofollow"&gt;IOSCocoapodsTutorial&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://ioscreator.com/tutorials/move-view-keyboard-ios-tutorial" rel="nofollow"&gt;IOSMoveViewKeyboardTutorial&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://ioscreator.com/tutorials/spritekit-move-sprite-path-ios-tutorial" rel="nofollow"&gt;IOSSpriteKitMoveSpritePathTutorial&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://ioscreator.com/tutorials/add-event-calendar-ios-tutorial" rel="nofollow"&gt;IOSAddEventTutorial&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://ioscreator.com/tutorials/airdrop-ios-tutorial" rel="nofollow"&gt;IOSAirdropTutorial&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://ioscreator.com/tutorials/user-defaults-ios-tutorial" rel="nofollow"&gt;IOSUserDefaultsTutorial&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://ioscreator.com/tutorials/delete-multiple-rows-table-view-ios-tutorial" rel="nofollow"&gt;IOS12DeleteMultipleRowsTutorial&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://ioscreator.com/tutorials/take-video-ios-tutorial" rel="nofollow"&gt;IOS12TakeVideoTutorial&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://ioscreator.com/tutorials/send-imessage-ios-tutorial" rel="nofollow"&gt;IOS12SendiMessageTutorial&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://ioscreator.com/tutorials/reorder-rows-table-view-ios-tutorial-ios12" rel="nofollow"&gt;IOS12ReorderRowsTutorial&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://ioscreator.com/tutorials/activity-indicator-statusbar-ios-tutorial-ios12" rel="nofollow"&gt;IOS12ActivityStatusBarTutorial&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://ioscreator.com/tutorials/spritekit-scenes-ios-tutorial-ios12" rel="nofollow"&gt;IOS12SpriteKitScenesTutroial&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://ioscreator.com/tutorials/delete-rows-table-view-ios-tutorial-ios12" rel="nofollow"&gt;IOS12DeleteTableViewTutorial&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://ioscreator.com/tutorials/core-image-ios-tutorial-ios12" rel="nofollow"&gt;IOS12CoreImageTutorial&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://ioscreator.com/tutorials/send-mail-ios-tutorial-ios12" rel="nofollow"&gt;IOS12SendEmailTutorial&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://ioscreator.com/tutorials/tab-bar-controller-ios-tutorial-ios12" rel="nofollow"&gt;IOS12TabBarControllerTutorial&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://ioscreatpr.com/tutorials/scroll-view-ios-tutorial-ios12" rel="nofollow"&gt;IOS12ScrollViewTutorial&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://ioscreator.com/tutorials/animate-view-auto-layout-ios-tutorial-ios12" rel="nofollow"&gt;IOS12AnimateViewsTutorial&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://ioscreator.com/tutorials/spritekit-labels-ios-tutorial-ios12" rel="nofollow"&gt;IOS12SpriteKitLabelsTutorial&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://ioscreator.com/tutorials/add-rows-table-view-ios-tutorial-ios12" rel="nofollow"&gt;IOS12AddRowsTableViewTutorial&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://ioscreator.com/tutorials/search-map-kit-ios-tutorial-ios12" rel="nofollow"&gt;IOS12SearchMapKitTutorial&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://ioscreator.com/tutorials/hide-navigation-bar-ios-tutorial-ios12" rel="nofollow"&gt;IOS12HideNavBarTutorial&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://ioscreator.com/tutorials/primitives-scene-kit-ios-tutorial-ios12" rel="nofollow"&gt;IOS12SceneKitTutorial&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://ioscreator.com/tutorials/draw-circles-ios-tutorial-ios12" rel="nofollow"&gt;IOS12DrawCirclesTutorial&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://ioscreator.com/tutorials/activity-indicator-ios-tutorial-ios12" rel="nofollow"&gt;IOS12ActivityIndicatorTutorial&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;&lt;a id="user-content-ios11" class="anchor" aria-hidden="true" href="#ios11"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;iOS11&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://ioscreator.com/tutorials/today-extension-ios-tutorial-ios11" rel="nofollow"&gt;IOS11TodayExtensionTutorial&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://ioscreator.com/tutorials/indexed-table-view-ios-tutorial-ios11" rel="nofollow"&gt;IOS11IndexedTableViewTutorial&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;&lt;a id="user-content-ios10" class="anchor" aria-hidden="true" href="#ios10"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;iOS10&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://ioscreator.com/tutorials/facebook-ios-tutorial-ios10" rel="nofollow"&gt;IOS10FacebookTutorial&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://ioscreator.com/tutorials/twitter-ios-tutorial-ios10" rel="nofollow"&gt;IOS10TwitterTutorial&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://ioscreator.com/tutorials/stopwatch-tutorial" rel="nofollow"&gt;IOS10StopWatchTutorial&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://ioscreator.com/tutorials/draw-gradients-core-graphics-tutorial-ios10" rel="nofollow"&gt;IOS10DrawGradientsTutorial&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;&lt;a id="user-content-ios9" class="anchor" aria-hidden="true" href="#ios9"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;iOS9&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://ioscreator.com/tutorials/persistent-data-property-list-tutorial" rel="nofollow"&gt;IOS9PersistentPropertytutorial&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://ioscreator.com/tutorials/draw-route-mapkit-tutorial" rel="nofollow"&gt;IOS9DrawRouteMapKitTutorial&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://ioscreator.com/tutorials/index-app-content-core-spotlight-tutorial" rel="nofollow"&gt;IOS9CoreSpotlightTutorial&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://ioscreator.com/tutorials/stack-view-tutorial" rel="nofollow"&gt;IOS9StackViewTutorial&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;&lt;a id="user-content-ios8" class="anchor" aria-hidden="true" href="#ios8"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;iOS8&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://ioscreator.com/tutorials/file-management-tutorial-ios8-swift" rel="nofollow"&gt;IOS8SwiftFileManagementTutorial&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://ioscreator.com/tutorials/customizing-header-footer-table-view-ios8-swift" rel="nofollow"&gt;IOS8SWiftHeaderFooterTutorial&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://ioscreator.com/tutorials/positioning-tutorial-watchkit" rel="nofollow"&gt;WatchKitPositioningTutorial&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://ioscreator.com/tutorials/display-label-tutorial-watchkit" rel="nofollow"&gt;WatchKitLabelTutorial&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://ioscreator.com/tutorials/calculator-tutorial-in-ios8-with-swift" rel="nofollow"&gt;iOS8SwiftCalculatorTutorial&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://ioscreator.com/tutorials/tableview-tutorial-in-ios8-with-swift" rel="nofollow"&gt;iOS8SwiftTableViewTutorial&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;&lt;a id="user-content-ios7" class="anchor" aria-hidden="true" href="#ios7"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;iOS7&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://ioscreator.com/tutorials/stretchable-images-ios7-tutorial" rel="nofollow"&gt;iOS7StretchableImageTutorial&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://ioscreator.com/tutorials/add-contacts-to-the-address-book-in-ios7" rel="nofollow"&gt;iOS7AddressBookTutorial&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://ioscreator.com/tutorials/ios-7-views-image-view" rel="nofollow"&gt;iOS7ImageViewTutorial&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://ioscreator.com/tutorials/using-background-fetch-in-ios-7" rel="nofollow"&gt;iOS7BackgroundFetchTutorial&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://ioscreator.com/tutorials/animating-sprites-with-sprite-kit" rel="nofollow"&gt;SpriteAnimationTutorial&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://ioscreator.com/tutorials/using-auto-layout-xcode-5" rel="nofollow"&gt;iOS7AutoLayoutTutorial&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://ioscreator.com/tutorials/ios-7-views-setting-tint-color" rel="nofollow"&gt;iOS7TintColorTutorial&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;&lt;a id="user-content-ios6" class="anchor" aria-hidden="true" href="#ios6"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;iOS6&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://ioscreator.com/tutorials/changing-screens-with-uipagecontrol" rel="nofollow"&gt;ChangeScreensDemo&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://ioscreator.com/tutorials/objective-c-add-a-category" rel="nofollow"&gt;CategoryDemo&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://ioscreator.com/tutorials/auto-layout-in-ios-6-centering-views" rel="nofollow"&gt;CenteringViewsDemo&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://ioscreator.com/tutorials/auto-layout-in-ios-6-keep-aspect-ratio-of-image" rel="nofollow"&gt;ImageAspectRatioDemo&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://ioscreator.com/tutorials/scaling-views" rel="nofollow"&gt;ScalingViewDemo&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://ioscreator.com/tutorials/introduction-to-core-data" rel="nofollow"&gt;CoreDataDemo&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://ioscreator.com/tutorials/customize-tableviewcells-with-storyboards" rel="nofollow"&gt;CustomizingTableviewCell&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://ioscreator.com/tutorials/read-values-of-the-accelerometer" rel="nofollow"&gt;AccelerometerDemo&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/article&gt;&lt;/div&gt;</description><author>ioscreator</author><guid isPermaLink="false">https://github.com/ioscreator/ioscreator</guid><pubDate>Sat, 25 Jan 2020 00:12:00 GMT</pubDate></item><item><title>JohnEstropia/CoreStore #13 in Swift, This week</title><link>https://github.com/JohnEstropia/CoreStore</link><description>&lt;p&gt;&lt;i&gt;Unleashing the real power of Core Data with the elegance and safety of Swift&lt;/i&gt;&lt;/p&gt;&lt;div id="readme" class="md" data-path="README.md"&gt;&lt;article class="markdown-body entry-content p-5" itemprop="text"&gt;&lt;p align="center"&gt;
&lt;a target="_blank" rel="noopener noreferrer" href="https://cloud.githubusercontent.com/assets/3029684/13373932/84daee2a-ddb8-11e5-99db-fdf415620102.png"&gt;&lt;img alt="CoreStore" src="https://cloud.githubusercontent.com/assets/3029684/13373932/84daee2a-ddb8-11e5-99db-fdf415620102.png" width="614" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;br&gt;
&lt;br&gt;
Unleashing the real power of Core Data with the elegance and safety of Swift
&lt;br&gt;
&lt;br&gt;
&lt;a href="https://app.bitrise.io/app/e736852157296019#/builds" rel="nofollow"&gt;&lt;img alt="Build Status" src="https://camo.githubusercontent.com/72f82a5ea24f4a5d18a98cb70a326d148312e4f2/68747470733a2f2f696d672e736869656c64732e696f2f626974726973652f653733363835323135373239363031392f6d61737465722e7376673f6c6162656c3d6275696c6426746f6b656e3d766867416d6169463374575a6f5179464c6b4b4d3767266c6f676f3d62697472697365" data-canonical-src="https://img.shields.io/bitrise/e736852157296019/master.svg?label=build&amp;amp;token=vhgAmaiF3tWZoQyFLkKM7g&amp;amp;logo=bitrise" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://github.com/JohnEstropia/CoreStore/commits"&gt;&lt;img alt="Last Commit" src="https://camo.githubusercontent.com/48d4deebd77021885291f57f301960736918b95f/68747470733a2f2f696d672e736869656c64732e696f2f6769746875622f6c6173742d636f6d6d69742f6a6f686e657374726f7069612f636f726573746f72652e7376673f7374796c653d666c6174" data-canonical-src="https://img.shields.io/github/last-commit/johnestropia/corestore.svg?style=flat" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="http://cocoadocs.org/docsets/CoreStore" rel="nofollow"&gt;&lt;img alt="Platform" src="https://camo.githubusercontent.com/46d2122e9b977b4f9ef348c3c82684d1da102965/68747470733a2f2f696d672e736869656c64732e696f2f636f636f61706f64732f702f436f726553746f72652e7376673f7374796c653d666c6174" data-canonical-src="https://img.shields.io/cocoapods/p/CoreStore.svg?style=flat" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://raw.githubusercontent.com/JohnEstropia/CoreStore/master/LICENSE" rel="nofollow"&gt;&lt;img alt="License" src="https://camo.githubusercontent.com/b400c171223d797c301bc44d75f16eb32a706ba1/68747470733a2f2f696d672e736869656c64732e696f2f636f636f61706f64732f6c2f436f726553746f72652e7376673f7374796c653d666c6174" data-canonical-src="https://img.shields.io/cocoapods/l/CoreStore.svg?style=flat" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;br&gt;&lt;br&gt;Dependency managers&lt;br&gt;
&lt;a href="https://cocoapods.org/pods/CoreStore" rel="nofollow"&gt;&lt;img alt="Cocoapods compatible" src="https://camo.githubusercontent.com/c0a10fd5b08949a07ae1bc7a7da33bd7cde05c9e/68747470733a2f2f696d672e736869656c64732e696f2f636f636f61706f64732f762f436f726553746f72652e7376673f7374796c653d666c6174266c6162656c3d436f636f61706f6473" data-canonical-src="https://img.shields.io/cocoapods/v/CoreStore.svg?style=flat&amp;amp;label=Cocoapods" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://github.com/Carthage/Carthage"&gt;&lt;img alt="Carthage compatible" src="https://camo.githubusercontent.com/a8dfddea631019f7c4c2507f06ae8bc7f9285504/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f43617274686167652d636f6d70617469626c652d3136613038352e7376673f7374796c653d666c6174" data-canonical-src="https://img.shields.io/badge/Carthage-compatible-16a085.svg?style=flat" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://swift.org/source-compatibility/#current-list-of-projects" rel="nofollow"&gt;&lt;img alt="Swift Package Manager compatible" src="https://camo.githubusercontent.com/b883db49fda4c2c6b2e9ac4848140dca3d1b4ef4/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f53776966745f5061636b6167655f4d616e616765722d636f6d70617469626c652d6f72616e67652e7376673f7374796c653d666c6174" data-canonical-src="https://img.shields.io/badge/Swift_Package_Manager-compatible-orange.svg?style=flat" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;br&gt;&lt;br&gt;Contact&lt;br&gt;
&lt;a href="http://swift-corestore-slack.herokuapp.com/" rel="nofollow"&gt;&lt;img alt="Join us on Slack!" src="https://camo.githubusercontent.com/c22cbe6d5d88bc82aa22716473aa56a2c168e21b/687474703a2f2f73776966742d636f726573746f72652d736c61636b2e6865726f6b756170702e636f6d2f62616467652e7376673f6c6f676f3d736c61636b" data-canonical-src="http://swift-corestore-slack.herokuapp.com/badge.svg?logo=slack" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://twitter.com/JohnEstropia" rel="nofollow"&gt;&lt;img alt="Reach me on Twitter!" src="https://camo.githubusercontent.com/d573626e1f8e18eb9a6a55264d4a510be0ae8e0b/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f747769747465722d2534304a6f686e457374726f7069612d3334393864622e7376673f6c6f676f3d74776974746572" data-canonical-src="https://img.shields.io/badge/twitter-%40JohnEstropia-3498db.svg?logo=twitter" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;br&gt;
&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Swift 5.1:&lt;/strong&gt; iOS 10+ / macOS 10.12+ / watchOS 3.0+ / tvOS 10.0+&lt;/li&gt;
&lt;li&gt;Previously supported Swift versions: &lt;a href="https://github.com/JohnEstropia/CoreStore/tree/4.2.3"&gt;Swift 3.2&lt;/a&gt;, &lt;a href="https://github.com/JohnEstropia/CoreStore/tree/6.2.1"&gt;Swift 4.2&lt;/a&gt;, &lt;a href="https://github.com/JohnEstropia/CoreStore/tree/6.3.2"&gt;Swift 5.0&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Upgrading from CoreStore 6.x (swift 5.0) to 7.x (Swift 5.1)? Check out the &lt;a href="#features"&gt;&lt;g-emoji class="g-emoji" alias="new" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f195.png"&gt;🆕&lt;/g-emoji&gt; features&lt;/a&gt; and make sure to read the &lt;a href="https://github.com/JohnEstropia/CoreStore/releases"&gt;Change logs&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;CoreStore is now part of the &lt;a href="https://swift.org/source-compatibility/#current-list-of-projects" rel="nofollow"&gt;Swift Source Compatibility projects&lt;/a&gt;.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-why-use-corestore" class="anchor" aria-hidden="true" href="#why-use-corestore"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Why use CoreStore?&lt;/h2&gt;
&lt;p&gt;CoreStore was (and is) heavily shaped by real-world needs of developing data-dependent apps. It enforces safe and convenient Core Data usage while letting you take advantage of the industry's encouraged best practices.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-features" class="anchor" aria-hidden="true" href="#features"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Features&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;g-emoji class="g-emoji" alias="new" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f195.png"&gt;🆕&lt;/g-emoji&gt;&lt;strong&gt;Backwards-portable DiffableDataSources implementation!&lt;/strong&gt; &lt;code&gt;UITableViews&lt;/code&gt; and &lt;code&gt;UICollectionViews&lt;/code&gt; now have a new ally: &lt;code&gt;ListPublisher&lt;/code&gt;s provide diffable snapshots that make reloading animations very easy and very safe. Say goodbye to &lt;code&gt;UITableViews&lt;/code&gt; and &lt;code&gt;UICollectionViews&lt;/code&gt; reload errors!&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;&lt;g-emoji class="g-emoji" alias="gem" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f48e.png"&gt;💎&lt;/g-emoji&gt;Tight design around Swift’s code elegance and type safety.&lt;/strong&gt; CoreStore fully utilizes Swift's community-driven language features.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;&lt;g-emoji class="g-emoji" alias="vertical_traffic_light" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f6a6.png"&gt;🚦&lt;/g-emoji&gt;Safer concurrency architecture.&lt;/strong&gt; CoreStore makes it hard to fall into common concurrency mistakes. The main &lt;code&gt;NSManagedObjectContext&lt;/code&gt; is strictly read-only, while all updates are done through serial &lt;em&gt;transactions&lt;/em&gt;. &lt;em&gt;(See &lt;a href="#saving-and-processing-transactions"&gt;Saving and processing transactions&lt;/a&gt;)&lt;/em&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;&lt;g-emoji class="g-emoji" alias="mag" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f50d.png"&gt;🔍&lt;/g-emoji&gt;Clean fetching and querying API.&lt;/strong&gt; Fetching objects is easy, but querying for raw aggregates (&lt;code&gt;min&lt;/code&gt;, &lt;code&gt;max&lt;/code&gt;, etc.) and raw property values is now just as convenient. &lt;em&gt;(See &lt;a href="#fetching-and-querying"&gt;Fetching and querying&lt;/a&gt;)&lt;/em&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;&lt;g-emoji class="g-emoji" alias="telescope" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f52d.png"&gt;🔭&lt;/g-emoji&gt;Type-safe, easy to configure observers.&lt;/strong&gt; You don't have to deal with the burden of setting up &lt;code&gt;NSFetchedResultsController&lt;/code&gt;s and KVO. As an added bonus, list and object observable types all support multiple observers. This means you can have multiple view controllers efficiently share a single resource! &lt;em&gt;(See &lt;a href="#observing-changes-and-notifications"&gt;Observing changes and notifications&lt;/a&gt;)&lt;/em&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;&lt;g-emoji class="g-emoji" alias="inbox_tray" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f4e5.png"&gt;📥&lt;/g-emoji&gt;Efficient importing utilities.&lt;/strong&gt; Map your entities once with their corresponding import source (JSON for example), and importing from &lt;em&gt;transactions&lt;/em&gt; becomes elegant. Uniquing is also done with an efficient find-and-replace algorithm. &lt;em&gt;(See &lt;a href="#importing-data"&gt;Importing data&lt;/a&gt;)&lt;/em&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;&lt;g-emoji class="g-emoji" alias="wastebasket" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f5d1.png"&gt;🗑&lt;/g-emoji&gt;Say goodbye to &lt;em&gt;.xcdatamodeld&lt;/em&gt; files!&lt;/strong&gt; While CoreStore supports &lt;code&gt;NSManagedObject&lt;/code&gt;s, it offers &lt;code&gt;CoreStoreObject&lt;/code&gt; whose subclasses can declare type-safe properties all in Swift code without the need to maintain separate resource files for the models. As bonus, these special properties support custom types, and can be used to create type-safe keypaths and queries. &lt;em&gt;(See &lt;a href="#type-safe-corestoreobjects"&gt;Type-safe &lt;code&gt;CoreStoreObject&lt;/code&gt;s&lt;/a&gt;)&lt;/em&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;&lt;g-emoji class="g-emoji" alias="link" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f517.png"&gt;🔗&lt;/g-emoji&gt;Progressive migrations.&lt;/strong&gt; No need to think how to migrate from all previous model versions to your latest model. Just tell the &lt;code&gt;DataStack&lt;/code&gt; the sequence of version strings (&lt;code&gt;MigrationChain&lt;/code&gt;s) and CoreStore will automatically use progressive migrations when needed. &lt;em&gt;(See &lt;a href="#migrations"&gt;Migrations&lt;/a&gt;)&lt;/em&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Easier custom migrations.&lt;/strong&gt; Say goodbye to &lt;em&gt;.xcmappingmodel&lt;/em&gt; files; CoreStore can now infer entity mappings when possible, while still allowing an easy way to write custom mappings. &lt;em&gt;(See &lt;a href="#migrations"&gt;Migrations&lt;/a&gt;)&lt;/em&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;&lt;g-emoji class="g-emoji" alias="memo" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f4dd.png"&gt;📝&lt;/g-emoji&gt;Plug-in your own logging framework.&lt;/strong&gt; Although a default logger is built-in, all logging, asserting, and error reporting can be funneled to &lt;code&gt;CoreStoreLogger&lt;/code&gt; protocol implementations. &lt;em&gt;(See &lt;a href="#logging-and-error-reporting"&gt;Logging and error reporting&lt;/a&gt;)&lt;/em&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;&lt;g-emoji class="g-emoji" alias="chains" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/26d3.png"&gt;⛓&lt;/g-emoji&gt;Heavy support for multiple persistent stores per data stack.&lt;/strong&gt; CoreStore lets you manage separate stores in a single &lt;code&gt;DataStack&lt;/code&gt;, just the way &lt;em&gt;.xcdatamodeld&lt;/em&gt; configurations are designed to. CoreStore will also manage one stack by default, but you can create and manage as many as you need. &lt;em&gt;(See &lt;a href="#setting-up"&gt;Setting up&lt;/a&gt;)&lt;/em&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;&lt;g-emoji class="g-emoji" alias="dart" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f3af.png"&gt;🎯&lt;/g-emoji&gt;Free to name entities and their class names independently.&lt;/strong&gt; CoreStore gets around a restriction with other Core Data wrappers where the entity name should be the same as the &lt;code&gt;NSManagedObject&lt;/code&gt; subclass name. CoreStore loads entity-to-class mappings from the managed object model file, so you can assign independent names for the entities and their class names.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;&lt;g-emoji class="g-emoji" alias="orange_book" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f4d9.png"&gt;📙&lt;/g-emoji&gt;Full Documentation.&lt;/strong&gt; No magic here; all public classes, functions, properties, etc. have detailed &lt;em&gt;Apple Docs&lt;/em&gt;. This &lt;em&gt;README&lt;/em&gt; also introduces a lot of concepts and explains a lot of CoreStore's behavior.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;&lt;g-emoji class="g-emoji" alias="information_source" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/2139.png"&gt;ℹ️&lt;/g-emoji&gt;Informative (and pretty) logs.&lt;/strong&gt; All CoreStore and Core Data-related types now have very informative and pretty print outputs! &lt;em&gt;(See &lt;a href="#logging-and-error-reporting"&gt;Logging and error reporting&lt;/a&gt;)&lt;/em&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;&lt;g-emoji class="g-emoji" alias="reminder_ribbon" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f397.png"&gt;🎗&lt;/g-emoji&gt;Objective-C support!&lt;/strong&gt; Is your project transitioning from Objective-C to Swift but still can't quite fully convert some huge classes to Swift yet? CoreStore adjusts to the ever-increasing Swift adoption. While still written in pure Swift, all CoreStore types have their corresponding Objective-C-visible "bridging classes". &lt;em&gt;(See &lt;a href="#objective-c-support"&gt;Objective-C support&lt;/a&gt;)&lt;/em&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;&lt;g-emoji class="g-emoji" alias="shield" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f6e1.png"&gt;🛡&lt;/g-emoji&gt;More extensive Unit Tests.&lt;/strong&gt; Extending CoreStore is safe without having to worry about breaking old behavior.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;em&gt;Have ideas that may benefit other Core Data users? &lt;a href="https://github.com/JohnEstropia/CoreStore/issues"&gt;Feature Request&lt;/a&gt;s are welcome!&lt;/em&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-contents" class="anchor" aria-hidden="true" href="#contents"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Contents&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="#tldr-aka-sample-codes"&gt;TL;DR (a.k.a. sample codes)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#architecture"&gt;Architecture&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;CoreStore Tutorials (All of these have demos in the &lt;strong&gt;CoreStoreDemo&lt;/strong&gt; app project!)
&lt;ul&gt;
&lt;li&gt;&lt;a href="#setting-up"&gt;Setting up&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="#in-memory-store"&gt;In-memory store&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#local-store"&gt;Local store&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="#migrations"&gt;Migrations&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="#declaring-model-versions"&gt;Declaring model versions&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#starting-migrations"&gt;Starting migrations&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#progressive-migrations"&gt;Progressive migrations&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#forecasting-migrations"&gt;Forecasting migrations&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#custom-migrations"&gt;Custom migrations&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="#saving-and-processing-transactions"&gt;Saving and processing transactions&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="#transaction-types"&gt;Transaction types&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="#asynchronous-transactions"&gt;Asynchronous transactions&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#synchronous-transactions"&gt;Synchronous transactions&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#unsafe-transactions"&gt;Unsafe transactions&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="#creating-objects"&gt;Creating objects&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#updating-objects"&gt;Updating objects&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#deleting-objects"&gt;Deleting objects&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#passing-objects-safely"&gt;Passing objects safely&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="#importing-data"&gt;Importing data&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#fetching-and-querying"&gt;Fetching and querying&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="#from-clause"&gt;&lt;code&gt;From&lt;/code&gt; clause&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#fetching"&gt;Fetching&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="#where-clause"&gt;&lt;code&gt;Where&lt;/code&gt; clause&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#orderby-clause"&gt;&lt;code&gt;OrderBy&lt;/code&gt; clause&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#tweak-clause"&gt;&lt;code&gt;Tweak&lt;/code&gt; clause&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="#querying"&gt;Querying&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="#selectt-clause"&gt;&lt;code&gt;Select&amp;lt;T&amp;gt;&lt;/code&gt; clause&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#groupby-clause"&gt;&lt;code&gt;GroupBy&lt;/code&gt; clause&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="#logging-and-error-reporting"&gt;Logging and error reporting&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#observing-changes-and-notifications"&gt;Observing changes and notifications&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="#observe-a-single-property"&gt;Observe a single property&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;g-emoji class="g-emoji" alias="new" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f195.png"&gt;🆕&lt;/g-emoji&gt;&lt;a href="#observe-a-single-objects-updates"&gt;Observe a single object's updates&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#observe-a-single-objects-per-property-updates"&gt;Observe a single object's per-property updates&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;g-emoji class="g-emoji" alias="new" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f195.png"&gt;🆕&lt;/g-emoji&gt;&lt;a href="#observe-a-diffable-list"&gt;Observe a diffable list&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#observe-detailed-list-changes"&gt;Observe detailed list changes&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="#objective-c-support"&gt;Objective-C support&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#type-safe-corestoreobjects"&gt;Type-safe &lt;code&gt;CoreStoreObject&lt;/code&gt;s&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="#versionlocks"&gt;&lt;code&gt;VersionLock&lt;/code&gt;s&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="#roadmap"&gt;Roadmap&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#installation"&gt;Installation&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#changesets"&gt;Changesets&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#contact"&gt;Contact&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#who-uses-corestore"&gt;Who uses CoreStore?&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#license"&gt;License&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-tldr-aka-sample-codes" class="anchor" aria-hidden="true" href="#tldr-aka-sample-codes"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;TL;DR (a.k.a. sample codes)&lt;/h2&gt;
&lt;p&gt;Setting-up with progressive migration support:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;dataStack &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;DataStack&lt;/span&gt;(
    &lt;span class="pl-c1"&gt;xcodeModelName&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;MyStore&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;,
    &lt;span class="pl-c1"&gt;migrationChain&lt;/span&gt;: [&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;MyStore&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;MyStoreV2&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;MyStoreV3&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;]
)&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Adding a store:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;dataStack.&lt;span class="pl-c1"&gt;addStorage&lt;/span&gt;(
    &lt;span class="pl-c1"&gt;SQLiteStore&lt;/span&gt;(&lt;span class="pl-c1"&gt;fileName&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;MyStore.sqlite&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;),
    &lt;span class="pl-c1"&gt;completion&lt;/span&gt;: { (result) &lt;span class="pl-k"&gt;-&amp;gt;&lt;/span&gt; &lt;span class="pl-c1"&gt;Void&lt;/span&gt; &lt;span class="pl-k"&gt;in&lt;/span&gt;
        &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; ...&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;    }
)&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Starting transactions:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;dataStack.&lt;span class="pl-c1"&gt;perform&lt;/span&gt;(
    &lt;span class="pl-c1"&gt;asynchronous&lt;/span&gt;: { (transaction) &lt;span class="pl-k"&gt;-&amp;gt;&lt;/span&gt; &lt;span class="pl-c1"&gt;Void&lt;/span&gt; &lt;span class="pl-k"&gt;in&lt;/span&gt;
        &lt;span class="pl-k"&gt;let&lt;/span&gt; person &lt;span class="pl-k"&gt;=&lt;/span&gt; transaction.&lt;span class="pl-c1"&gt;create&lt;/span&gt;(Into&lt;span class="pl-k"&gt;&amp;lt;&lt;/span&gt;MyPersonEntity&lt;span class="pl-k"&gt;&amp;gt;&lt;/span&gt;())
        person.&lt;span class="pl-smi"&gt;name&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;John Smith&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;
        person.&lt;span class="pl-smi"&gt;age&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;42&lt;/span&gt;
    },
    &lt;span class="pl-c1"&gt;completion&lt;/span&gt;: { (result) &lt;span class="pl-k"&gt;-&amp;gt;&lt;/span&gt; &lt;span class="pl-c1"&gt;Void&lt;/span&gt; &lt;span class="pl-k"&gt;in&lt;/span&gt;
        &lt;span class="pl-k"&gt;switch&lt;/span&gt; result {
        &lt;span class="pl-k"&gt;case&lt;/span&gt; .&lt;span class="pl-smi"&gt;success&lt;/span&gt;&lt;span class="pl-k"&gt;:&lt;/span&gt; &lt;span class="pl-c1"&gt;print&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;success!&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
        &lt;span class="pl-k"&gt;case&lt;/span&gt; .&lt;span class="pl-c1"&gt;failure&lt;/span&gt;(&lt;span class="pl-k"&gt;let&lt;/span&gt; error)&lt;span class="pl-k"&gt;:&lt;/span&gt; &lt;span class="pl-c1"&gt;print&lt;/span&gt;(error)
        }
    }
)&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Fetching objects (simple):&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;let&lt;/span&gt; people &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-k"&gt;try&lt;/span&gt; dataStack.&lt;span class="pl-c1"&gt;fetchAll&lt;/span&gt;(From&lt;span class="pl-k"&gt;&amp;lt;&lt;/span&gt;MyPersonEntity&lt;span class="pl-k"&gt;&amp;gt;&lt;/span&gt;())&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Fetching objects (complex):&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;let&lt;/span&gt; people &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-k"&gt;try&lt;/span&gt; dataStack.&lt;span class="pl-c1"&gt;fetchAll&lt;/span&gt;(
    From&lt;span class="pl-k"&gt;&amp;lt;&lt;/span&gt;MyPersonEntity&lt;span class="pl-k"&gt;&amp;gt;&lt;/span&gt;()
        .&lt;span class="pl-c1"&gt;where&lt;/span&gt;(\.&lt;span class="pl-smi"&gt;age&lt;/span&gt; &lt;span class="pl-k"&gt;&amp;gt;&lt;/span&gt; &lt;span class="pl-c1"&gt;30&lt;/span&gt;),
        .&lt;span class="pl-c1"&gt;orderBy&lt;/span&gt;(.&lt;span class="pl-c1"&gt;ascending&lt;/span&gt;(\.&lt;span class="pl-smi"&gt;name&lt;/span&gt;), .&lt;span class="pl-c1"&gt;descending&lt;/span&gt;(.\age)),
        .&lt;span class="pl-c1"&gt;tweak&lt;/span&gt;({ &lt;span class="pl-c1"&gt;$0&lt;/span&gt;.&lt;span class="pl-smi"&gt;includesPendingChanges&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;false&lt;/span&gt; })
)&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Querying values:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;let&lt;/span&gt; maxAge &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-k"&gt;try&lt;/span&gt; dataStack.&lt;span class="pl-c1"&gt;queryValue&lt;/span&gt;(
    From&lt;span class="pl-k"&gt;&amp;lt;&lt;/span&gt;MyPersonEntity&lt;span class="pl-k"&gt;&amp;gt;&lt;/span&gt;()
        .&lt;span class="pl-c1"&gt;select&lt;/span&gt;(&lt;span class="pl-c1"&gt;Int&lt;/span&gt;.&lt;span class="pl-k"&gt;self&lt;/span&gt;, .&lt;span class="pl-c1"&gt;maximum&lt;/span&gt;(\.&lt;span class="pl-smi"&gt;age&lt;/span&gt;))
)&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;But really, there's a reason I wrote this huge &lt;em&gt;README&lt;/em&gt;. Read up on the details!&lt;/p&gt;
&lt;p&gt;Check out the &lt;strong&gt;CoreStoreDemo&lt;/strong&gt; app project for sample codes as well!&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-architecture" class="anchor" aria-hidden="true" href="#architecture"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Architecture&lt;/h2&gt;
&lt;p&gt;For maximum safety and performance, CoreStore will enforce coding patterns and practices it was designed for. (Don't worry, it's not as scary as it sounds.) But it is advisable to understand the "magic" of CoreStore before you use it in your apps.&lt;/p&gt;
&lt;p&gt;If you are already familiar with the inner workings of CoreData, here is a mapping of &lt;code&gt;CoreStore&lt;/code&gt; abstractions:&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;&lt;em&gt;Core Data&lt;/em&gt;&lt;/th&gt;
&lt;th&gt;&lt;em&gt;CoreStore&lt;/em&gt;&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;NSPersistentContainer&lt;/code&gt;&lt;br&gt;(.xcdatamodeld file)&lt;/td&gt;
&lt;td&gt;&lt;code&gt;DataStack&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;NSPersistentStoreDescription&lt;/code&gt;&lt;br&gt;("Configuration"s in the .xcdatamodeld file)&lt;/td&gt;
&lt;td&gt;&lt;code&gt;StorageInterface&lt;/code&gt; implementations&lt;br&gt;(&lt;code&gt;InMemoryStore&lt;/code&gt;, &lt;code&gt;SQLiteStore&lt;/code&gt;)&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;NSManagedObjectContext&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;BaseDataTransaction&lt;/code&gt; subclasses&lt;br&gt;(&lt;code&gt;SynchronousDataTransaction&lt;/code&gt;, &lt;code&gt;AsynchronousDataTransaction&lt;/code&gt;, &lt;code&gt;UnsafeDataTransaction&lt;/code&gt;)&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;A lot of Core Data wrapper libraries set up their &lt;code&gt;NSManagedObjectContext&lt;/code&gt;s this way:&lt;/p&gt;
&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="https://cloud.githubusercontent.com/assets/3029684/16707160/984ef25c-4600-11e6-869f-8db7d2c63668.png"&gt;&lt;img src="https://cloud.githubusercontent.com/assets/3029684/16707160/984ef25c-4600-11e6-869f-8db7d2c63668.png" alt="nested contexts" height="380" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Nesting saves from child context to the root context ensures maximum data integrity between contexts without blocking the main queue. But &lt;a href="http://floriankugler.com/2013/04/29/concurrent-core-data-stack-performance-shootout/" rel="nofollow"&gt;in reality&lt;/a&gt;, merging contexts is still by far faster than saving contexts. CoreStore's &lt;code&gt;DataStack&lt;/code&gt; takes the best of both worlds by treating the main &lt;code&gt;NSManagedObjectContext&lt;/code&gt; as a read-only context (or "viewContext"), and only allows changes to be made within &lt;em&gt;transactions&lt;/em&gt; on the child context:&lt;/p&gt;
&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="https://cloud.githubusercontent.com/assets/3029684/16707161/9adeb962-4600-11e6-8bc8-4ec85764dba4.png"&gt;&lt;img src="https://cloud.githubusercontent.com/assets/3029684/16707161/9adeb962-4600-11e6-8bc8-4ec85764dba4.png" alt="nested contexts and merge hybrid" height="292" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;This allows for a butter-smooth main thread, while still taking advantage of safe nested contexts.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-setting-up" class="anchor" aria-hidden="true" href="#setting-up"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Setting up&lt;/h2&gt;
&lt;p&gt;The simplest way to initialize CoreStore is to add a default store to the default stack:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;try&lt;/span&gt; CoreStoreDefaults.&lt;span class="pl-smi"&gt;dataStack&lt;/span&gt;.&lt;span class="pl-c1"&gt;addStorageAndWait&lt;/span&gt;()&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;This one-liner does the following:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Triggers the lazy-initialization of &lt;code&gt;CoreStoreDefaults.dataStack&lt;/code&gt; with a default &lt;code&gt;DataStack&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Sets up the stack's &lt;code&gt;NSPersistentStoreCoordinator&lt;/code&gt;, the root saving &lt;code&gt;NSManagedObjectContext&lt;/code&gt;, and the read-only main &lt;code&gt;NSManagedObjectContext&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Adds an &lt;code&gt;SQLiteStore&lt;/code&gt; in the &lt;em&gt;"Application Support/"&lt;/em&gt; directory (or the &lt;em&gt;"Caches/"&lt;/em&gt; directory on tvOS) with the file name &lt;em&gt;"[App bundle name].sqlite"&lt;/em&gt;&lt;/li&gt;
&lt;li&gt;Creates and returns the &lt;code&gt;NSPersistentStore&lt;/code&gt; instance on success, or an &lt;code&gt;NSError&lt;/code&gt; on failure&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;For most cases, this configuration is enough as it is. But for more hardcore settings, refer to this extensive example:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;let&lt;/span&gt; dataStack &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;DataStack&lt;/span&gt;(
    &lt;span class="pl-c1"&gt;xcodeModelName&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;MyModel&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; loads from the "MyModel.xcdatamodeld" file&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;    &lt;span class="pl-c1"&gt;migrationChain&lt;/span&gt;: [&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;MyStore&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;MyStoreV2&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;MyStoreV3&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;] &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; model versions for progressive migrations&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;)
&lt;span class="pl-k"&gt;let&lt;/span&gt; migrationProgress &lt;span class="pl-k"&gt;=&lt;/span&gt; dataStack.&lt;span class="pl-c1"&gt;addStorage&lt;/span&gt;(
    &lt;span class="pl-c1"&gt;SQLiteStore&lt;/span&gt;(
        &lt;span class="pl-c1"&gt;fileURL&lt;/span&gt;: sqliteFileURL, &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; set the target file URL for the sqlite file&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;        &lt;span class="pl-c1"&gt;configuration&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;Config2&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; use entities from the "Config2" configuration in the .xcdatamodeld file&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;        &lt;span class="pl-c1"&gt;localStorageOptions&lt;/span&gt;: .&lt;span class="pl-smi"&gt;recreateStoreOnModelMismatch&lt;/span&gt; &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; if migration paths cannot be resolved, recreate the sqlite file&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;    ),
    &lt;span class="pl-c1"&gt;completion&lt;/span&gt;: { (result) &lt;span class="pl-k"&gt;-&amp;gt;&lt;/span&gt; &lt;span class="pl-c1"&gt;Void&lt;/span&gt; &lt;span class="pl-k"&gt;in&lt;/span&gt;
        &lt;span class="pl-k"&gt;switch&lt;/span&gt; result {
        &lt;span class="pl-k"&gt;case&lt;/span&gt; .&lt;span class="pl-c1"&gt;success&lt;/span&gt;(&lt;span class="pl-k"&gt;let&lt;/span&gt; storage)&lt;span class="pl-k"&gt;:&lt;/span&gt;
            &lt;span class="pl-c1"&gt;print&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;Successfully added sqlite store: &lt;span class="pl-pse"&gt;\(&lt;/span&gt;&lt;span class="pl-s1"&gt;storage&lt;/span&gt;&lt;span class="pl-pse"&gt;&lt;span class="pl-s1"&gt;)&lt;/span&gt;&lt;/span&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
        &lt;span class="pl-k"&gt;case&lt;/span&gt; .&lt;span class="pl-c1"&gt;failure&lt;/span&gt;(&lt;span class="pl-k"&gt;let&lt;/span&gt; error)&lt;span class="pl-k"&gt;:&lt;/span&gt;
            &lt;span class="pl-c1"&gt;print&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;Failed adding sqlite store with error: &lt;span class="pl-pse"&gt;\(&lt;/span&gt;&lt;span class="pl-s1"&gt;error&lt;/span&gt;&lt;span class="pl-pse"&gt;&lt;span class="pl-s1"&gt;)&lt;/span&gt;&lt;/span&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
        }
    }
)

CoreStoreDefaults.&lt;span class="pl-smi"&gt;dataStack&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; dataStack &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; pass the dataStack to CoreStore for easier access later on&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;g-emoji class="g-emoji" alias="bulb" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f4a1.png"&gt;💡&lt;/g-emoji&gt;If you have never heard of "Configurations", you'll find them in your &lt;em&gt;.xcdatamodeld&lt;/em&gt; file
&lt;a target="_blank" rel="noopener noreferrer" href="https://cloud.githubusercontent.com/assets/3029684/8333192/e52cfaac-1acc-11e5-9902-08724f9f1324.png"&gt;&lt;img src="https://cloud.githubusercontent.com/assets/3029684/8333192/e52cfaac-1acc-11e5-9902-08724f9f1324.png" alt="xcode configurations screenshot" height="212" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;In our sample code above, note that you don't need to do the &lt;code&gt;CoreStoreDefaults.dataStack = dataStack&lt;/code&gt; line. You can just as well hold a reference to the &lt;code&gt;DataStack&lt;/code&gt; like below and call all its instance methods directly:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;class&lt;/span&gt; &lt;span class="pl-en"&gt;MyViewController&lt;/span&gt;: &lt;span class="pl-e"&gt;UIViewController &lt;/span&gt;{
    &lt;span class="pl-k"&gt;let&lt;/span&gt; dataStack &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;DataStack&lt;/span&gt;(&lt;span class="pl-c1"&gt;xcodeModelName&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;MyModel&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;) &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; keep reference to the stack&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;    &lt;span class="pl-k"&gt;override&lt;/span&gt; &lt;span class="pl-k"&gt;func&lt;/span&gt; &lt;span class="pl-en"&gt;viewDidLoad&lt;/span&gt;() {
        &lt;span class="pl-c1"&gt;super&lt;/span&gt;.&lt;span class="pl-c1"&gt;viewDidLoad&lt;/span&gt;()
        &lt;span class="pl-k"&gt;do&lt;/span&gt; {
            &lt;span class="pl-k"&gt;try&lt;/span&gt; &lt;span class="pl-c1"&gt;self&lt;/span&gt;.&lt;span class="pl-smi"&gt;dataStack&lt;/span&gt;.&lt;span class="pl-c1"&gt;addStorageAndWait&lt;/span&gt;(SQLiteStore.&lt;span class="pl-k"&gt;self&lt;/span&gt;)
        }
        &lt;span class="pl-k"&gt;catch&lt;/span&gt; { &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; ...&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;        }
    }
    &lt;span class="pl-k"&gt;func&lt;/span&gt; &lt;span class="pl-en"&gt;methodToBeCalledLaterOn&lt;/span&gt;() {
        &lt;span class="pl-k"&gt;let&lt;/span&gt; objects &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;self&lt;/span&gt;.&lt;span class="pl-smi"&gt;dataStack&lt;/span&gt;.&lt;span class="pl-c1"&gt;fetchAll&lt;/span&gt;(From&lt;span class="pl-k"&gt;&amp;lt;&lt;/span&gt;MyEntity&lt;span class="pl-k"&gt;&amp;gt;&lt;/span&gt;())
        &lt;span class="pl-c1"&gt;print&lt;/span&gt;(objects)
    }
}&lt;/pre&gt;&lt;/div&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;g-emoji class="g-emoji" alias="bulb" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f4a1.png"&gt;💡&lt;/g-emoji&gt;By default, CoreStore will initialize &lt;code&gt;NSManagedObject&lt;/code&gt;s from &lt;em&gt;.xcdatamodeld&lt;/em&gt; files, but you can create models completely from source code using &lt;code&gt;CoreStoreObject&lt;/code&gt;s and &lt;code&gt;CoreStoreSchema&lt;/code&gt;.  To use this feature, refer to &lt;a href="#type-safe-corestoreobjects"&gt;Type-safe &lt;code&gt;CoreStoreObject&lt;/code&gt;s&lt;/a&gt;.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Notice that in our previous examples, &lt;code&gt;addStorageAndWait(_:)&lt;/code&gt; and &lt;code&gt;addStorage(_:completion:)&lt;/code&gt; both accept either &lt;code&gt;InMemoryStore&lt;/code&gt;, or &lt;code&gt;SQLiteStore&lt;/code&gt;. These implement the &lt;code&gt;StorageInterface&lt;/code&gt; protocol.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-in-memory-store" class="anchor" aria-hidden="true" href="#in-memory-store"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;In-memory store&lt;/h3&gt;
&lt;p&gt;The most basic &lt;code&gt;StorageInterface&lt;/code&gt; concrete type is the &lt;code&gt;InMemoryStore&lt;/code&gt;, which just stores objects in memory. Since &lt;code&gt;InMemoryStore&lt;/code&gt;s always start with a fresh empty data, they do not need any migration information.&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;try&lt;/span&gt; dataStack.&lt;span class="pl-c1"&gt;addStorageAndWait&lt;/span&gt;(
    &lt;span class="pl-c1"&gt;InMemoryStore&lt;/span&gt;(
        &lt;span class="pl-c1"&gt;configuration&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;Config2&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; optional. Use entities from the "Config2" configuration in the .xcdatamodeld file&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;    )
)&lt;/pre&gt;&lt;/div&gt;
&lt;h3&gt;&lt;a id="user-content-local-store" class="anchor" aria-hidden="true" href="#local-store"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Local Store&lt;/h3&gt;
&lt;p&gt;The most common &lt;code&gt;StorageInterface&lt;/code&gt; you will probably use is the &lt;code&gt;SQLiteStore&lt;/code&gt;, which saves data in a local SQLite file.&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;let&lt;/span&gt; migrationProgress &lt;span class="pl-k"&gt;=&lt;/span&gt; dataStack.&lt;span class="pl-c1"&gt;addStorage&lt;/span&gt;(
    &lt;span class="pl-c1"&gt;SQLiteStore&lt;/span&gt;(
        &lt;span class="pl-c1"&gt;fileName&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;MyStore.sqlite&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;,
        &lt;span class="pl-c1"&gt;configuration&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;Config2&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; optional. Use entities from the "Config2" configuration in the .xcdatamodeld file&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;        &lt;span class="pl-c1"&gt;migrationMappingProviders&lt;/span&gt;: [Bundle.&lt;span class="pl-smi"&gt;main&lt;/span&gt;], &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; optional. The bundles that contain required .xcmappingmodel files&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;        &lt;span class="pl-c1"&gt;localStorageOptions&lt;/span&gt;: .&lt;span class="pl-smi"&gt;recreateStoreOnModelMismatch&lt;/span&gt; &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; optional. Provides settings that tells the DataStack how to setup the persistent store&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;    ),
    &lt;span class="pl-c1"&gt;completion&lt;/span&gt;: { &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;/*&lt;/span&gt; ... &lt;span class="pl-c"&gt;*/&lt;/span&gt;&lt;/span&gt; }
)&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Refer to the &lt;em&gt;SQLiteStore.swift&lt;/em&gt; source documentation for detailed explanations for each of the default values.&lt;/p&gt;
&lt;p&gt;CoreStore can decide the default values for these properties, so &lt;code&gt;SQLiteStore&lt;/code&gt;s can be initialized with no arguments:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;try&lt;/span&gt; dataStack.&lt;span class="pl-c1"&gt;addStorageAndWait&lt;/span&gt;(&lt;span class="pl-c1"&gt;SQLiteStore&lt;/span&gt;())&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;The file-related properties above are actually requirements of another protocol that &lt;code&gt;SQLiteStore&lt;/code&gt; implements, the &lt;code&gt;LocalStorage&lt;/code&gt; protocol:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;public&lt;/span&gt; &lt;span class="pl-k"&gt;protocol&lt;/span&gt; &lt;span class="pl-en"&gt;LocalStorage&lt;/span&gt;: &lt;span class="pl-e"&gt;StorageInterface &lt;/span&gt;{
    &lt;span class="pl-k"&gt;var&lt;/span&gt; fileURL&lt;span class="pl-k"&gt;:&lt;/span&gt; NSURL { &lt;span class="pl-k"&gt;get&lt;/span&gt; }
    &lt;span class="pl-k"&gt;var&lt;/span&gt; migrationMappingProviders&lt;span class="pl-k"&gt;:&lt;/span&gt; [SchemaMappingProvider] { &lt;span class="pl-k"&gt;get&lt;/span&gt; }
    &lt;span class="pl-k"&gt;var&lt;/span&gt; localStorageOptions&lt;span class="pl-k"&gt;:&lt;/span&gt; LocalStorageOptions { &lt;span class="pl-k"&gt;get&lt;/span&gt; }
    &lt;span class="pl-k"&gt;func&lt;/span&gt; &lt;span class="pl-en"&gt;dictionary&lt;/span&gt;(&lt;span class="pl-smi"&gt;&lt;span class="pl-en"&gt;forOptions&lt;/span&gt;&lt;/span&gt;: LocalStorageOptions) &lt;span class="pl-k"&gt;-&amp;gt;&lt;/span&gt; [&lt;span class="pl-c1"&gt;String&lt;/span&gt;: &lt;span class="pl-c1"&gt;AnyObject&lt;/span&gt;]&lt;span class="pl-k"&gt;?&lt;/span&gt;
    &lt;span class="pl-k"&gt;func&lt;/span&gt; &lt;span class="pl-en"&gt;cs_eraseStorageAndWait&lt;/span&gt;(&lt;span class="pl-smi"&gt;&lt;span class="pl-en"&gt;metadata&lt;/span&gt;&lt;/span&gt;: [&lt;span class="pl-c1"&gt;String&lt;/span&gt;: &lt;span class="pl-c1"&gt;Any&lt;/span&gt;], &lt;span class="pl-smi"&gt;&lt;span class="pl-en"&gt;soureModelHint&lt;/span&gt;&lt;/span&gt;: NSManagedObjectModel&lt;span class="pl-k"&gt;?&lt;/span&gt;) &lt;span class="pl-k"&gt;throws&lt;/span&gt;
}&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;If you have custom &lt;code&gt;NSIncrementalStore&lt;/code&gt; or &lt;code&gt;NSAtomicStore&lt;/code&gt; subclasses, you can implement this protocol and use it similarly to &lt;code&gt;SQLiteStore&lt;/code&gt;.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-migrations" class="anchor" aria-hidden="true" href="#migrations"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Migrations&lt;/h2&gt;
&lt;h3&gt;&lt;a id="user-content-declaring-model-versions" class="anchor" aria-hidden="true" href="#declaring-model-versions"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Declaring model versions&lt;/h3&gt;
&lt;p&gt;Model versions are now expressed as a first-class protocol, &lt;code&gt;DynamicSchema&lt;/code&gt;. CoreStore currently supports the following schema classes:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;&lt;code&gt;XcodeDataModelSchema&lt;/code&gt;&lt;/strong&gt;: a model version with entities loaded from a &lt;em&gt;.xcdatamodeld&lt;/em&gt; file.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;&lt;code&gt;CoreStoreSchema&lt;/code&gt;&lt;/strong&gt;: a model version created with &lt;code&gt;CoreStoreObject&lt;/code&gt; entities. &lt;em&gt;(See &lt;a href="#type-safe-corestore-objects"&gt;Type-safe &lt;code&gt;CoreStoreObject&lt;/code&gt;s&lt;/a&gt;)&lt;/em&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;&lt;code&gt;UnsafeDataModelSchema&lt;/code&gt;&lt;/strong&gt;: a model version created with an existing &lt;code&gt;NSManagedObjectModel&lt;/code&gt; instance.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;All the &lt;code&gt;DynamicSchema&lt;/code&gt; for all model versions are then collected within a single &lt;code&gt;SchemaHistory&lt;/code&gt; instance, which is then handed to the &lt;code&gt;DataStack&lt;/code&gt;. Here are some common use cases:&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Multiple model versions grouped in a &lt;em&gt;.xcdatamodeld&lt;/em&gt; file (Core Data standard method)&lt;/strong&gt;&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;CoreStoreDefaults.&lt;span class="pl-smi"&gt;dataStack&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;DataStack&lt;/span&gt;(
    &lt;span class="pl-c1"&gt;xcodeModelName&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;MyModel&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;,
    &lt;span class="pl-c1"&gt;bundle&lt;/span&gt;: Bundle.&lt;span class="pl-smi"&gt;main&lt;/span&gt;,
    &lt;span class="pl-c1"&gt;migrationChain&lt;/span&gt;: [&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;MyAppModel&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;MyAppModelV2&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;MyAppModelV3&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;MyAppModelV4&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;]
)&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;strong&gt;&lt;code&gt;CoreStoreSchema&lt;/code&gt;-based model version (No &lt;em&gt;.xcdatamodeld&lt;/em&gt; file needed)&lt;/strong&gt;
&lt;em&gt;(For more details, see also &lt;a href="#type-safe-corestore-objects"&gt;Type-safe &lt;code&gt;CoreStoreObject&lt;/code&gt;s&lt;/a&gt;)&lt;/em&gt;&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;class&lt;/span&gt; &lt;span class="pl-en"&gt;Animal&lt;/span&gt;: &lt;span class="pl-e"&gt;CoreStoreObject &lt;/span&gt;{
    &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; ...&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;}
&lt;span class="pl-k"&gt;class&lt;/span&gt; &lt;span class="pl-en"&gt;Dog&lt;/span&gt;: &lt;span class="pl-e"&gt;Animal &lt;/span&gt;{
    &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; ...&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;}
&lt;span class="pl-k"&gt;class&lt;/span&gt; &lt;span class="pl-en"&gt;Person&lt;/span&gt;: &lt;span class="pl-e"&gt;CoreStoreObject &lt;/span&gt;{
    &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; ...&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;}

CoreStoreDefaults.&lt;span class="pl-smi"&gt;dataStack&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;DataStack&lt;/span&gt;(
    &lt;span class="pl-c1"&gt;CoreStoreSchema&lt;/span&gt;(
        &lt;span class="pl-c1"&gt;modelVersion&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;V1&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;,
        &lt;span class="pl-c1"&gt;entities&lt;/span&gt;: [
            Entity&lt;span class="pl-k"&gt;&amp;lt;&lt;/span&gt;Animal&lt;span class="pl-k"&gt;&amp;gt;&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;Animal&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-c1"&gt;isAbstract&lt;/span&gt;: &lt;span class="pl-c1"&gt;true&lt;/span&gt;),
            Entity&lt;span class="pl-k"&gt;&amp;lt;&lt;/span&gt;Dog&lt;span class="pl-k"&gt;&amp;gt;&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;Dog&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;),
            Entity&lt;span class="pl-k"&gt;&amp;lt;&lt;/span&gt;Person&lt;span class="pl-k"&gt;&amp;gt;&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;Person&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
        ]
    )
)&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;strong&gt;Models in a &lt;em&gt;.xcdatamodeld&lt;/em&gt; file during past app versions, but migrated to the new &lt;code&gt;CoreStoreSchema&lt;/code&gt; method&lt;/strong&gt;&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;class&lt;/span&gt; &lt;span class="pl-en"&gt;Animal&lt;/span&gt;: &lt;span class="pl-e"&gt;CoreStoreObject &lt;/span&gt;{
    &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; ...&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;}
&lt;span class="pl-k"&gt;class&lt;/span&gt; &lt;span class="pl-en"&gt;Dog&lt;/span&gt;: &lt;span class="pl-e"&gt;Animal &lt;/span&gt;{
    &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; ...&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;}
&lt;span class="pl-k"&gt;class&lt;/span&gt; &lt;span class="pl-en"&gt;Person&lt;/span&gt;: &lt;span class="pl-e"&gt;CoreStoreObject &lt;/span&gt;{
    &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; ...&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;}

&lt;span class="pl-k"&gt;let&lt;/span&gt; legacySchema &lt;span class="pl-k"&gt;=&lt;/span&gt; XcodeDataModelSchema.&lt;span class="pl-c1"&gt;from&lt;/span&gt;(
    &lt;span class="pl-c1"&gt;modelName&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;MyModel&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; .xcdatamodeld name&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;    &lt;span class="pl-c1"&gt;bundle&lt;/span&gt;: bundle,
    &lt;span class="pl-c1"&gt;migrationChain&lt;/span&gt;: [&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;MyAppModel&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;MyAppModelV2&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;MyAppModelV3&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;MyAppModelV4&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;]
)
&lt;span class="pl-k"&gt;let&lt;/span&gt; newSchema &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;CoreStoreSchema&lt;/span&gt;(
    &lt;span class="pl-c1"&gt;modelVersion&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;V1&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;,
    &lt;span class="pl-c1"&gt;entities&lt;/span&gt;: [
        Entity&lt;span class="pl-k"&gt;&amp;lt;&lt;/span&gt;Animal&lt;span class="pl-k"&gt;&amp;gt;&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;Animal&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-c1"&gt;isAbstract&lt;/span&gt;: &lt;span class="pl-c1"&gt;true&lt;/span&gt;),
        Entity&lt;span class="pl-k"&gt;&amp;lt;&lt;/span&gt;Dog&lt;span class="pl-k"&gt;&amp;gt;&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;Dog&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;),
        Entity&lt;span class="pl-k"&gt;&amp;lt;&lt;/span&gt;Person&lt;span class="pl-k"&gt;&amp;gt;&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;Person&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
    ]
)
CoreStoreDefaults.&lt;span class="pl-smi"&gt;dataStack&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;DataStack&lt;/span&gt;(
    &lt;span class="pl-c1"&gt;schemaHistory&lt;/span&gt;: &lt;span class="pl-c1"&gt;SchemaHistory&lt;/span&gt;(
        legacySchema &lt;span class="pl-k"&gt;+&lt;/span&gt; [newSchema],
        &lt;span class="pl-c1"&gt;migrationChain&lt;/span&gt;: [&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;MyAppModel&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;MyAppModelV2&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;MyAppModelV3&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;MyAppModelV4&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;V1&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;] 
    )
)   &lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;strong&gt;&lt;code&gt;CoreStoreSchema&lt;/code&gt;-based model versions with progressive migration&lt;/strong&gt;&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;typealias&lt;/span&gt; &lt;span class="pl-en"&gt;Animal&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; V2.Animal
&lt;span class="pl-k"&gt;typealias&lt;/span&gt; &lt;span class="pl-en"&gt;Dog&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; V2.Dog
&lt;span class="pl-k"&gt;typealias&lt;/span&gt; &lt;span class="pl-en"&gt;Person&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; V2.Person
&lt;span class="pl-k"&gt;enum&lt;/span&gt; &lt;span class="pl-en"&gt;V2&lt;/span&gt; {
    &lt;span class="pl-k"&gt;class&lt;/span&gt; &lt;span class="pl-en"&gt;Animal&lt;/span&gt;: &lt;span class="pl-e"&gt;CoreStoreObject &lt;/span&gt;{
        &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; ...&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;    }
    &lt;span class="pl-k"&gt;class&lt;/span&gt; &lt;span class="pl-en"&gt;Dog&lt;/span&gt;: &lt;span class="pl-e"&gt;Animal &lt;/span&gt;{
        &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; ...&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;    }
    &lt;span class="pl-k"&gt;class&lt;/span&gt; &lt;span class="pl-en"&gt;Person&lt;/span&gt;: &lt;span class="pl-e"&gt;CoreStoreObject &lt;/span&gt;{
        &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; ...&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;    }
}
&lt;span class="pl-k"&gt;enum&lt;/span&gt; &lt;span class="pl-en"&gt;V1&lt;/span&gt; {
    &lt;span class="pl-k"&gt;class&lt;/span&gt; &lt;span class="pl-en"&gt;Animal&lt;/span&gt;: &lt;span class="pl-e"&gt;CoreStoreObject &lt;/span&gt;{
        &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; ...&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;    }
    &lt;span class="pl-k"&gt;class&lt;/span&gt; &lt;span class="pl-en"&gt;Dog&lt;/span&gt;: &lt;span class="pl-e"&gt;Animal &lt;/span&gt;{
        &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; ...&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;    }
    &lt;span class="pl-k"&gt;class&lt;/span&gt; &lt;span class="pl-en"&gt;Person&lt;/span&gt;: &lt;span class="pl-e"&gt;CoreStoreObject &lt;/span&gt;{
        &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; ...&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;    }
}

CoreStoreDefaults.&lt;span class="pl-smi"&gt;dataStack&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;DataStack&lt;/span&gt;(
    &lt;span class="pl-c1"&gt;CoreStoreSchema&lt;/span&gt;(
        &lt;span class="pl-c1"&gt;modelVersion&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;V1&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;,
        &lt;span class="pl-c1"&gt;entities&lt;/span&gt;: [
            Entity&lt;span class="pl-k"&gt;&amp;lt;&lt;/span&gt;V1.&lt;span class="pl-smi"&gt;Animal&lt;/span&gt;&lt;span class="pl-k"&gt;&amp;gt;&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;Animal&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-c1"&gt;isAbstract&lt;/span&gt;: &lt;span class="pl-c1"&gt;true&lt;/span&gt;),
            Entity&lt;span class="pl-k"&gt;&amp;lt;&lt;/span&gt;V1.&lt;span class="pl-smi"&gt;Dog&lt;/span&gt;&lt;span class="pl-k"&gt;&amp;gt;&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;Dog&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;),
            Entity&lt;span class="pl-k"&gt;&amp;lt;&lt;/span&gt;V1.&lt;span class="pl-smi"&gt;Person&lt;/span&gt;&lt;span class="pl-k"&gt;&amp;gt;&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;Person&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
        ]
    ),
    &lt;span class="pl-c1"&gt;CoreStoreSchema&lt;/span&gt;(
        &lt;span class="pl-c1"&gt;modelVersion&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;V2&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;,
        &lt;span class="pl-c1"&gt;entities&lt;/span&gt;: [
            Entity&lt;span class="pl-k"&gt;&amp;lt;&lt;/span&gt;V2.&lt;span class="pl-smi"&gt;Animal&lt;/span&gt;&lt;span class="pl-k"&gt;&amp;gt;&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;Animal&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-c1"&gt;isAbstract&lt;/span&gt;: &lt;span class="pl-c1"&gt;true&lt;/span&gt;),
            Entity&lt;span class="pl-k"&gt;&amp;lt;&lt;/span&gt;V2.&lt;span class="pl-smi"&gt;Dog&lt;/span&gt;&lt;span class="pl-k"&gt;&amp;gt;&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;Dog&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;),
            Entity&lt;span class="pl-k"&gt;&amp;lt;&lt;/span&gt;V2.&lt;span class="pl-smi"&gt;Person&lt;/span&gt;&lt;span class="pl-k"&gt;&amp;gt;&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;Person&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
        ]
    ),
    &lt;span class="pl-c1"&gt;migrationChain&lt;/span&gt;: [&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;V1&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;V2&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;]
)&lt;/pre&gt;&lt;/div&gt;
&lt;h3&gt;&lt;a id="user-content-starting-migrations" class="anchor" aria-hidden="true" href="#starting-migrations"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Starting migrations&lt;/h3&gt;
&lt;p&gt;We have seen &lt;code&gt;addStorageAndWait(...)&lt;/code&gt; used to initialize our persistent store. As the method name's &lt;em&gt;~AndWait&lt;/em&gt; suffix suggests though, this method blocks so it should not do long tasks such as data migrations. In fact CoreStore will only attempt a synchronous &lt;strong&gt;lightweight&lt;/strong&gt; migration if you explicitly provide the &lt;code&gt;.allowSynchronousLightweightMigration&lt;/code&gt; option:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;try&lt;/span&gt; dataStack.&lt;span class="pl-c1"&gt;addStorageAndWait&lt;/span&gt;(
    &lt;span class="pl-c1"&gt;SQLiteStore&lt;/span&gt;(
        &lt;span class="pl-c1"&gt;fileURL&lt;/span&gt;: sqliteFileURL,
        &lt;span class="pl-c1"&gt;localStorageOptions&lt;/span&gt;: .&lt;span class="pl-smi"&gt;allowSynchronousLightweightMigration&lt;/span&gt;
    )
}&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;if you do so, any model mismatch will be thrown as an error.&lt;/p&gt;
&lt;p&gt;In general though, if migrations are expected the asynchronous variant &lt;code&gt;addStorage(_:completion:)&lt;/code&gt; method is recommended instead:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;let&lt;/span&gt; migrationProgress&lt;span class="pl-k"&gt;:&lt;/span&gt; Progress&lt;span class="pl-k"&gt;?&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-k"&gt;try&lt;/span&gt; dataStack.&lt;span class="pl-c1"&gt;addStorage&lt;/span&gt;(
    &lt;span class="pl-c1"&gt;SQLiteStore&lt;/span&gt;(
        &lt;span class="pl-c1"&gt;fileName&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;MyStore.sqlite&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;,
        &lt;span class="pl-c1"&gt;configuration&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;Config2&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;
    ),
    &lt;span class="pl-c1"&gt;completion&lt;/span&gt;: { (result) &lt;span class="pl-k"&gt;-&amp;gt;&lt;/span&gt; &lt;span class="pl-c1"&gt;Void&lt;/span&gt; &lt;span class="pl-k"&gt;in&lt;/span&gt;
        &lt;span class="pl-k"&gt;switch&lt;/span&gt; result {
        &lt;span class="pl-k"&gt;case&lt;/span&gt; .&lt;span class="pl-c1"&gt;success&lt;/span&gt;(&lt;span class="pl-k"&gt;let&lt;/span&gt; storage)&lt;span class="pl-k"&gt;:&lt;/span&gt;
            &lt;span class="pl-c1"&gt;print&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;Successfully added sqlite store: &lt;span class="pl-pse"&gt;\(&lt;/span&gt;&lt;span class="pl-s1"&gt;storage&lt;/span&gt;&lt;span class="pl-pse"&gt;&lt;span class="pl-s1"&gt;)&lt;/span&gt;&lt;/span&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
        &lt;span class="pl-k"&gt;case&lt;/span&gt; .&lt;span class="pl-c1"&gt;failure&lt;/span&gt;(&lt;span class="pl-k"&gt;let&lt;/span&gt; error)&lt;span class="pl-k"&gt;:&lt;/span&gt;
            &lt;span class="pl-c1"&gt;print&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;Failed adding sqlite store with error: &lt;span class="pl-pse"&gt;\(&lt;/span&gt;&lt;span class="pl-s1"&gt;error&lt;/span&gt;&lt;span class="pl-pse"&gt;&lt;span class="pl-s1"&gt;)&lt;/span&gt;&lt;/span&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
        }
    }
)&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;The &lt;code&gt;completion&lt;/code&gt; block reports a &lt;code&gt;SetupResult&lt;/code&gt; that indicates success or failure.&lt;/p&gt;
&lt;p&gt;Notice that this method also returns an optional &lt;code&gt;Progress&lt;/code&gt;. If &lt;code&gt;nil&lt;/code&gt;, no migrations are needed, thus progress reporting is unnecessary as well. If not &lt;code&gt;nil&lt;/code&gt;, you can use this to track migration progress by using standard KVO on the &lt;code&gt;"fractionCompleted"&lt;/code&gt; key, or by using a closure-based utility exposed in &lt;em&gt;Progress+Convenience.swift&lt;/em&gt;:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;migrationProgress&lt;span class="pl-k"&gt;?&lt;/span&gt;.&lt;span class="pl-smi"&gt;setProgressHandler&lt;/span&gt; { [&lt;span class="pl-k"&gt;weak&lt;/span&gt; &lt;span class="pl-c1"&gt;self&lt;/span&gt;] (progress) &lt;span class="pl-k"&gt;-&amp;gt;&lt;/span&gt; &lt;span class="pl-c1"&gt;Void&lt;/span&gt; &lt;span class="pl-k"&gt;in&lt;/span&gt;
    &lt;span class="pl-c1"&gt;self&lt;/span&gt;&lt;span class="pl-k"&gt;?&lt;/span&gt;.&lt;span class="pl-smi"&gt;progressView&lt;/span&gt;&lt;span class="pl-k"&gt;?&lt;/span&gt;.&lt;span class="pl-c1"&gt;setProgress&lt;/span&gt;(&lt;span class="pl-c1"&gt;Float&lt;/span&gt;(progress.&lt;span class="pl-smi"&gt;fractionCompleted&lt;/span&gt;), &lt;span class="pl-c1"&gt;animated&lt;/span&gt;: &lt;span class="pl-c1"&gt;true&lt;/span&gt;)
    &lt;span class="pl-c1"&gt;self&lt;/span&gt;&lt;span class="pl-k"&gt;?&lt;/span&gt;.&lt;span class="pl-smi"&gt;percentLabel&lt;/span&gt;&lt;span class="pl-k"&gt;?&lt;/span&gt;.&lt;span class="pl-c1"&gt;text&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; progress.&lt;span class="pl-smi"&gt;localizedDescription&lt;/span&gt; &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; "50% completed"&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;    &lt;span class="pl-c1"&gt;self&lt;/span&gt;&lt;span class="pl-k"&gt;?&lt;/span&gt;.&lt;span class="pl-smi"&gt;stepLabel&lt;/span&gt;&lt;span class="pl-k"&gt;?&lt;/span&gt;.&lt;span class="pl-c1"&gt;text&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; progress.&lt;span class="pl-smi"&gt;localizedAdditionalDescription&lt;/span&gt; &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; "0 of 2"&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;}&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;This closure is executed on the main thread so UIKit and AppKit calls can be done safely.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-progressive-migrations" class="anchor" aria-hidden="true" href="#progressive-migrations"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Progressive migrations&lt;/h3&gt;
&lt;p&gt;By default, CoreStore uses Core Data's default automatic migration mechanism. In other words, CoreStore will try to migrate the existing persistent store until it matches the &lt;code&gt;SchemaHistory&lt;/code&gt;'s &lt;code&gt;currentModelVersion&lt;/code&gt;. If no mapping model path is found from the store's version to the data model's version, CoreStore gives up and reports an error.&lt;/p&gt;
&lt;p&gt;The &lt;code&gt;DataStack&lt;/code&gt; lets you specify hints on how to break a migration into several sub-migrations using a &lt;code&gt;MigrationChain&lt;/code&gt;. This is typically passed to the &lt;code&gt;DataStack&lt;/code&gt; initializer and will be applied to all stores added to the &lt;code&gt;DataStack&lt;/code&gt; with &lt;code&gt;addSQLiteStore(...)&lt;/code&gt; and its variants:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;let&lt;/span&gt; dataStack &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;DataStack&lt;/span&gt;(&lt;span class="pl-c1"&gt;migrationChain&lt;/span&gt;: 
    [&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;MyAppModel&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;MyAppModelV2&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;MyAppModelV3&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;MyAppModelV4&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;])&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;The most common usage is to pass in the model version (&lt;em&gt;.xcdatamodeld&lt;/em&gt; version names for &lt;code&gt;NSManagedObject&lt;/code&gt;s, or the &lt;code&gt;modelName&lt;/code&gt; for &lt;code&gt;CoreStoreSchema&lt;/code&gt;s) in increasing order as above.&lt;/p&gt;
&lt;p&gt;For more complex, non-linear migration paths, you can also pass in a version tree that maps the key-values to the source-destination versions:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;let&lt;/span&gt; dataStack &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;DataStack&lt;/span&gt;(&lt;span class="pl-c1"&gt;migrationChain&lt;/span&gt;: [
    &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;MyAppModel&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;&lt;span class="pl-k"&gt;:&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;MyAppModelV3&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;,
    &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;MyAppModelV2&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;&lt;span class="pl-k"&gt;:&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;MyAppModelV4&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;,
    &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;MyAppModelV3&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;&lt;span class="pl-k"&gt;:&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;MyAppModelV4&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;
])&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;This allows for different migration paths depending on the starting version. The example above resolves to the following paths:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;MyAppModel-MyAppModelV3-MyAppModelV4&lt;/li&gt;
&lt;li&gt;MyAppModelV2-MyAppModelV4&lt;/li&gt;
&lt;li&gt;MyAppModelV3-MyAppModelV4&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Initializing with empty values (either &lt;code&gt;nil&lt;/code&gt;, &lt;code&gt;[]&lt;/code&gt;, or &lt;code&gt;[:]&lt;/code&gt;) instructs the &lt;code&gt;DataStack&lt;/code&gt; to disable progressive migrations and revert to the default migration behavior (i.e. use the &lt;em&gt;.xcdatamodeld&lt;/em&gt;'s current version as the final version):&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;let&lt;/span&gt; dataStack &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;DataStack&lt;/span&gt;(&lt;span class="pl-c1"&gt;migrationChain&lt;/span&gt;: &lt;span class="pl-c1"&gt;nil&lt;/span&gt;)&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;The &lt;code&gt;MigrationChain&lt;/code&gt; is validated when passed to the &lt;code&gt;DataStack&lt;/code&gt; and unless it is empty, will raise an assertion if any of the following conditions are met:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;a version appears twice in an array&lt;/li&gt;
&lt;li&gt;a version appears twice as a key in a dictionary literal&lt;/li&gt;
&lt;li&gt;a loop is found in any of the paths&lt;/li&gt;
&lt;/ul&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;g-emoji class="g-emoji" alias="warning" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/26a0.png"&gt;⚠️&lt;/g-emoji&gt;&lt;strong&gt;Important: If a &lt;code&gt;MigrationChain&lt;/code&gt; is specified, the &lt;em&gt;.xcdatamodeld&lt;/em&gt;'s "Current Version" will be bypassed&lt;/strong&gt; and the &lt;code&gt;MigrationChain&lt;/code&gt;'s leafmost version will be the &lt;code&gt;DataStack&lt;/code&gt;'s base model version.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3&gt;&lt;a id="user-content-forecasting-migrations" class="anchor" aria-hidden="true" href="#forecasting-migrations"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Forecasting migrations&lt;/h3&gt;
&lt;p&gt;Sometimes migrations are huge and you may want prior information so your app could display a loading screen, or to display a confirmation dialog to the user. For this, CoreStore provides a &lt;code&gt;requiredMigrationsForStorage(_:)&lt;/code&gt; method you can use to inspect a persistent store before you actually call &lt;code&gt;addStorageAndWait(_:)&lt;/code&gt; or &lt;code&gt;addStorage(_:completion:)&lt;/code&gt;:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;do&lt;/span&gt; {
    &lt;span class="pl-k"&gt;let&lt;/span&gt; storage &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;SQLiteStorage&lt;/span&gt;(&lt;span class="pl-c1"&gt;fileName&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;MyStore.sqlite&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
    &lt;span class="pl-k"&gt;let&lt;/span&gt; migrationTypes&lt;span class="pl-k"&gt;:&lt;/span&gt; [MigrationType] &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-k"&gt;try&lt;/span&gt; dataStack.&lt;span class="pl-c1"&gt;requiredMigrationsForStorage&lt;/span&gt;(storage)
    &lt;span class="pl-k"&gt;if&lt;/span&gt; migrationTypes.&lt;span class="pl-c1"&gt;count&lt;/span&gt; &lt;span class="pl-k"&gt;&amp;gt;&lt;/span&gt; &lt;span class="pl-c1"&gt;1&lt;/span&gt;
        &lt;span class="pl-k"&gt;||&lt;/span&gt; (migrationTypes.&lt;span class="pl-c1"&gt;filter&lt;/span&gt; { &lt;span class="pl-c1"&gt;$0&lt;/span&gt;.&lt;span class="pl-smi"&gt;isHeavyweightMigration&lt;/span&gt; }.&lt;span class="pl-c1"&gt;count&lt;/span&gt;) &lt;span class="pl-k"&gt;&amp;gt;&lt;/span&gt; &lt;span class="pl-c1"&gt;0&lt;/span&gt; {
        &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; ... will migrate more than once. Show special waiting screen&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;    }
    &lt;span class="pl-k"&gt;else&lt;/span&gt; &lt;span class="pl-k"&gt;if&lt;/span&gt; migrationTypes.&lt;span class="pl-c1"&gt;count&lt;/span&gt; &lt;span class="pl-k"&gt;&amp;gt;&lt;/span&gt; &lt;span class="pl-c1"&gt;0&lt;/span&gt; {
        &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; ... will migrate just once. Show simple activity indicator&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;    }
    &lt;span class="pl-k"&gt;else&lt;/span&gt; {
        &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; ... Do nothing&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;    }
    dataStack.&lt;span class="pl-c1"&gt;addStorage&lt;/span&gt;(storage, &lt;span class="pl-c1"&gt;completion&lt;/span&gt;: { &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;/*&lt;/span&gt; ... &lt;span class="pl-c"&gt;*/&lt;/span&gt;&lt;/span&gt; })
}
&lt;span class="pl-k"&gt;catch&lt;/span&gt; {
    &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; ... either inspection of the store failed, or if no mapping model was found/inferred&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;}&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;code&gt;requiredMigrationsForStorage(_:)&lt;/code&gt; returns an array of &lt;code&gt;MigrationType&lt;/code&gt;s, where each item in the array may be either of the following values:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;case&lt;/span&gt; &lt;span class="pl-c1"&gt;lightweight&lt;/span&gt;(&lt;span class="pl-c1"&gt;sourceVersion&lt;/span&gt;: &lt;span class="pl-c1"&gt;String&lt;/span&gt;, &lt;span class="pl-c1"&gt;destinationVersion&lt;/span&gt;: &lt;span class="pl-c1"&gt;String&lt;/span&gt;)
&lt;span class="pl-k"&gt;case&lt;/span&gt; &lt;span class="pl-c1"&gt;heavyweight&lt;/span&gt;(&lt;span class="pl-c1"&gt;sourceVersion&lt;/span&gt;: &lt;span class="pl-c1"&gt;String&lt;/span&gt;, &lt;span class="pl-c1"&gt;destinationVersion&lt;/span&gt;: &lt;span class="pl-c1"&gt;String&lt;/span&gt;)&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Each &lt;code&gt;MigrationType&lt;/code&gt; indicates the migration type for each step in the &lt;code&gt;MigrationChain&lt;/code&gt;. Use these information as fit for your app.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-custom-migrations" class="anchor" aria-hidden="true" href="#custom-migrations"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Custom migrations&lt;/h3&gt;
&lt;p&gt;CoreStore offers several ways to declare migration mappings:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;CustomSchemaMappingProvider&lt;/code&gt;: A mapping provider that infers mapping initially, but also accepts custom mappings for specified entities. This was added to support custom migrations with &lt;code&gt;CoreStoreObject&lt;/code&gt;s as well, but may also be used with &lt;code&gt;NSManagedObject&lt;/code&gt;s.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;XcodeSchemaMappingProvider&lt;/code&gt;: A mapping provider which loads entity mappings from &lt;em&gt;.xcmappingmodel&lt;/em&gt; files in a specified &lt;code&gt;Bundle&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;InferredSchemaMappingProvider&lt;/code&gt;: The default mapping provider which tries to infer model migration between two &lt;code&gt;DynamicSchema&lt;/code&gt; versions either by searching all &lt;em&gt;.xcmappingmodel&lt;/em&gt; files from &lt;code&gt;Bundle.allBundles&lt;/code&gt;, or by relying on lightweight migration if possible.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;These mapping providers conform to &lt;code&gt;SchemaMappingProvider&lt;/code&gt; and can be passed to &lt;code&gt;SQLiteStore&lt;/code&gt;'s initializer:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;let&lt;/span&gt; dataStack &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;DataStack&lt;/span&gt;(&lt;span class="pl-c1"&gt;migrationChain&lt;/span&gt;: [&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;MyAppModel&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;MyAppModelV2&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;MyAppModelV3&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;MyAppModelV4&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;])
&lt;span class="pl-c1"&gt;_&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-k"&gt;try&lt;/span&gt; dataStack.&lt;span class="pl-c1"&gt;addStorage&lt;/span&gt;(
    &lt;span class="pl-c1"&gt;SQLiteStore&lt;/span&gt;(
        &lt;span class="pl-c1"&gt;fileName&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;MyStore.sqlite&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;,
        &lt;span class="pl-c1"&gt;migrationMappingProviders&lt;/span&gt;: [
            &lt;span class="pl-c1"&gt;XcodeSchemaMappingProvider&lt;/span&gt;(&lt;span class="pl-c1"&gt;from&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;V1&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-c1"&gt;to&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;V2&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-c1"&gt;mappingModelBundle&lt;/span&gt;: Bundle.&lt;span class="pl-smi"&gt;main&lt;/span&gt;),
            &lt;span class="pl-c1"&gt;CustomSchemaMappingProvider&lt;/span&gt;(&lt;span class="pl-c1"&gt;from&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;V2&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-c1"&gt;to&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;V3&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-c1"&gt;entityMappings&lt;/span&gt;: [.&lt;span class="pl-c1"&gt;deleteEntity&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;Person&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;) ])
        ]
    ),
    &lt;span class="pl-c1"&gt;completion&lt;/span&gt;: { (result) &lt;span class="pl-k"&gt;-&amp;gt;&lt;/span&gt; &lt;span class="pl-c1"&gt;Void&lt;/span&gt; &lt;span class="pl-k"&gt;in&lt;/span&gt;
        &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; ...&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;    }
)&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;For version migrations present in the &lt;code&gt;DataStack&lt;/code&gt;'s &lt;code&gt;MigrationChain&lt;/code&gt; but not handled by any of the &lt;code&gt;SQLiteStore&lt;/code&gt;'s &lt;code&gt;migrationMappingProviders&lt;/code&gt; array, CoreStore will automatically try to use &lt;code&gt;InferredSchemaMappingProvider&lt;/code&gt; as fallback. Finally if the &lt;code&gt;InferredSchemaMappingProvider&lt;/code&gt; could not resolve any mapping, the migration will fail and the &lt;code&gt;DataStack.addStorage(...)&lt;/code&gt; method will report the failure.&lt;/p&gt;
&lt;p&gt;For &lt;code&gt;CustomSchemaMappingProvider&lt;/code&gt;, more granular updates are supported through the dynamic objects &lt;code&gt;UnsafeSourceObject&lt;/code&gt; and &lt;code&gt;UnsafeDestinationObject&lt;/code&gt;. The example below allows the migration to conditionally ignore some objects:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;let&lt;/span&gt; person_v2_to_v3_mapping &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;CustomSchemaMappingProvider&lt;/span&gt;(
    &lt;span class="pl-c1"&gt;from&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;V2&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;,
    &lt;span class="pl-c1"&gt;to&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;V3&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;,
    &lt;span class="pl-c1"&gt;entityMappings&lt;/span&gt;: [
        .&lt;span class="pl-c1"&gt;transformEntity&lt;/span&gt;(
            &lt;span class="pl-c1"&gt;sourceEntity&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;Person&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;,
            &lt;span class="pl-c1"&gt;destinationEntity&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;Person&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;,
            &lt;span class="pl-c1"&gt;transformer&lt;/span&gt;: { (&lt;span class="pl-c1"&gt;sourceObject&lt;/span&gt;: UnsafeSourceObject, &lt;span class="pl-c1"&gt;createDestinationObject&lt;/span&gt;: () &lt;span class="pl-k"&gt;-&amp;gt;&lt;/span&gt; UnsafeDestinationObject) &lt;span class="pl-k"&gt;in&lt;/span&gt;
                
                &lt;span class="pl-k"&gt;if&lt;/span&gt; (sourceObject[&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;isVeryOldAccount&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;] &lt;span class="pl-k"&gt;as!&lt;/span&gt; &lt;span class="pl-c1"&gt;Bool&lt;/span&gt;&lt;span class="pl-k"&gt;?&lt;/span&gt;) &lt;span class="pl-k"&gt;==&lt;/span&gt; &lt;span class="pl-c1"&gt;true&lt;/span&gt; {
                    &lt;span class="pl-k"&gt;return&lt;/span&gt; &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; this account is too old, don't migrate &lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;                }
                &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; migrate the rest&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;                &lt;span class="pl-k"&gt;let&lt;/span&gt; destinationObject &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;createDestinationObject&lt;/span&gt;()
                destinationObject.&lt;span class="pl-smi"&gt;enumerateAttributes&lt;/span&gt; { (attribute, sourceAttribute) &lt;span class="pl-k"&gt;in&lt;/span&gt;
                
                &lt;span class="pl-k"&gt;if&lt;/span&gt; &lt;span class="pl-k"&gt;let&lt;/span&gt; sourceAttribute &lt;span class="pl-k"&gt;=&lt;/span&gt; sourceAttribute {
                    destinationObject[attribute] &lt;span class="pl-k"&gt;=&lt;/span&gt; sourceObject[sourceAttribute]
                }
            }
        ) 
    ]
)
&lt;span class="pl-c1"&gt;SQLiteStore&lt;/span&gt;(
    &lt;span class="pl-c1"&gt;fileName&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;MyStore.sqlite&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;,
    &lt;span class="pl-c1"&gt;migrationMappingProviders&lt;/span&gt;: [person_v2_to_v3_mapping]
)&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;The &lt;code&gt;UnsafeSourceObject&lt;/code&gt; is a read-only proxy for an object existing in the source model version. The &lt;code&gt;UnsafeDestinationObject&lt;/code&gt; is a read-write object that is inserted (optionally) to the destination model version. Both classes' properties are accessed through key-value-coding.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-saving-and-processing-transactions" class="anchor" aria-hidden="true" href="#saving-and-processing-transactions"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Saving and processing transactions&lt;/h2&gt;
&lt;p&gt;To ensure deterministic state for objects in the read-only &lt;code&gt;NSManagedObjectContext&lt;/code&gt;, CoreStore does not expose API's for updating and saving directly from the main context (or any other context for that matter.) Instead, you spawn &lt;em&gt;transactions&lt;/em&gt; from &lt;code&gt;DataStack&lt;/code&gt; instances:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;let&lt;/span&gt; dataStack &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;self&lt;/span&gt;.&lt;span class="pl-smi"&gt;dataStack&lt;/span&gt;
dataStack.&lt;span class="pl-c1"&gt;perform&lt;/span&gt;(
    &lt;span class="pl-c1"&gt;asynchronous&lt;/span&gt;: { (transaction) &lt;span class="pl-k"&gt;-&amp;gt;&lt;/span&gt; &lt;span class="pl-c1"&gt;Void&lt;/span&gt; &lt;span class="pl-k"&gt;in&lt;/span&gt;
        &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; make changes&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;    },
    &lt;span class="pl-c1"&gt;completion&lt;/span&gt;: { (result) &lt;span class="pl-k"&gt;-&amp;gt;&lt;/span&gt; &lt;span class="pl-c1"&gt;Void&lt;/span&gt; &lt;span class="pl-k"&gt;in&lt;/span&gt;
        &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; ...&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;    }
)&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Transaction closures automatically save changes once the closures completes. To cancel and rollback a transaction, throw a &lt;code&gt;CoreStoreError.userCancelled&lt;/code&gt; from inside the closure by calling &lt;code&gt;try transaction.cancel()&lt;/code&gt;:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;dataStack.&lt;span class="pl-c1"&gt;perform&lt;/span&gt;(
    &lt;span class="pl-c1"&gt;asynchronous&lt;/span&gt;: { (transaction) &lt;span class="pl-k"&gt;-&amp;gt;&lt;/span&gt; &lt;span class="pl-c1"&gt;Void&lt;/span&gt; &lt;span class="pl-k"&gt;in&lt;/span&gt;
        &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; ...&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;        &lt;span class="pl-k"&gt;if&lt;/span&gt; shouldCancel {
            &lt;span class="pl-k"&gt;try&lt;/span&gt; transaction.&lt;span class="pl-c1"&gt;cancel&lt;/span&gt;()
        }
        &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; ...&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;    },
    &lt;span class="pl-c1"&gt;completion&lt;/span&gt;: { (result) &lt;span class="pl-k"&gt;-&amp;gt;&lt;/span&gt; &lt;span class="pl-c1"&gt;Void&lt;/span&gt; &lt;span class="pl-k"&gt;in&lt;/span&gt;
        &lt;span class="pl-k"&gt;if&lt;/span&gt; &lt;span class="pl-k"&gt;case&lt;/span&gt; .&lt;span class="pl-c1"&gt;failure&lt;/span&gt;(.&lt;span class="pl-smi"&gt;userCancelled&lt;/span&gt;) &lt;span class="pl-k"&gt;=&lt;/span&gt; result {
            &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; ... cancelled&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;        }
    }
)&lt;/pre&gt;&lt;/div&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;g-emoji class="g-emoji" alias="warning" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/26a0.png"&gt;⚠️&lt;/g-emoji&gt;&lt;strong&gt;Important:&lt;/strong&gt; Never use &lt;code&gt;try?&lt;/code&gt; or &lt;code&gt;try!&lt;/code&gt; on a &lt;code&gt;transaction.cancel()&lt;/code&gt; call. Always use &lt;code&gt;try&lt;/code&gt;. Using &lt;code&gt;try?&lt;/code&gt; will swallow the cancellation and the transaction will proceed to save as normal. Using &lt;code&gt;try!&lt;/code&gt; will crash the app as &lt;code&gt;transaction.cancel()&lt;/code&gt; will &lt;em&gt;always&lt;/em&gt; throw an error.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;The examples above use &lt;code&gt;perform(asynchronous:...)&lt;/code&gt;, but there are actually 3 types of transactions at your disposal: &lt;em&gt;asynchronous&lt;/em&gt;, &lt;em&gt;synchronous&lt;/em&gt;, and &lt;em&gt;unsafe&lt;/em&gt;.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-transaction-types" class="anchor" aria-hidden="true" href="#transaction-types"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Transaction types&lt;/h3&gt;
&lt;h4&gt;&lt;a id="user-content-asynchronous-transactions" class="anchor" aria-hidden="true" href="#asynchronous-transactions"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Asynchronous transactions&lt;/h4&gt;
&lt;p&gt;are spawned from &lt;code&gt;perform(asynchronous:...)&lt;/code&gt;. This method returns immediately and executes its closure from a background serial queue. The return value for the closure is declared as a generic type, so any value returned from the closure can be passed to the completion result:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;dataStack.&lt;span class="pl-c1"&gt;perform&lt;/span&gt;(
    &lt;span class="pl-c1"&gt;asynchronous&lt;/span&gt;: { (transaction) &lt;span class="pl-k"&gt;-&amp;gt;&lt;/span&gt; &lt;span class="pl-c1"&gt;Bool&lt;/span&gt; &lt;span class="pl-k"&gt;in&lt;/span&gt;
        &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; make changes&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;        &lt;span class="pl-k"&gt;return&lt;/span&gt; transaction.&lt;span class="pl-smi"&gt;hasChanges&lt;/span&gt;
    },
    &lt;span class="pl-c1"&gt;completion&lt;/span&gt;: { (result) &lt;span class="pl-k"&gt;-&amp;gt;&lt;/span&gt; &lt;span class="pl-c1"&gt;Void&lt;/span&gt; &lt;span class="pl-k"&gt;in&lt;/span&gt;
        &lt;span class="pl-k"&gt;switch&lt;/span&gt; result {
        &lt;span class="pl-k"&gt;case&lt;/span&gt; .&lt;span class="pl-c1"&gt;success&lt;/span&gt;(&lt;span class="pl-k"&gt;let&lt;/span&gt; hasChanges)&lt;span class="pl-k"&gt;:&lt;/span&gt; &lt;span class="pl-c1"&gt;print&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;success! Has changes? &lt;span class="pl-pse"&gt;\(&lt;/span&gt;&lt;span class="pl-s1"&gt;hasChanges&lt;/span&gt;&lt;span class="pl-pse"&gt;&lt;span class="pl-s1"&gt;)&lt;/span&gt;&lt;/span&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
        &lt;span class="pl-k"&gt;case&lt;/span&gt; .&lt;span class="pl-c1"&gt;failure&lt;/span&gt;(&lt;span class="pl-k"&gt;let&lt;/span&gt; error)&lt;span class="pl-k"&gt;:&lt;/span&gt; &lt;span class="pl-c1"&gt;print&lt;/span&gt;(error)
        }
    }
)&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;The success and failure can also be declared as separate handlers:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;dataStack.&lt;span class="pl-c1"&gt;perform&lt;/span&gt;(
    &lt;span class="pl-c1"&gt;asynchronous&lt;/span&gt;: { (transaction) &lt;span class="pl-k"&gt;-&amp;gt;&lt;/span&gt; &lt;span class="pl-c1"&gt;Int&lt;/span&gt; &lt;span class="pl-k"&gt;in&lt;/span&gt;
        &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; make changes&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;        &lt;span class="pl-k"&gt;return&lt;/span&gt; transaction.&lt;span class="pl-c1"&gt;delete&lt;/span&gt;(objects)
    },
    &lt;span class="pl-c1"&gt;success&lt;/span&gt;: { (&lt;span class="pl-c1"&gt;numberOfDeletedObjects&lt;/span&gt;: &lt;span class="pl-c1"&gt;Int&lt;/span&gt;) &lt;span class="pl-k"&gt;-&amp;gt;&lt;/span&gt; &lt;span class="pl-c1"&gt;Void&lt;/span&gt; &lt;span class="pl-k"&gt;in&lt;/span&gt;
        &lt;span class="pl-c1"&gt;print&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;success! Deleted &lt;span class="pl-pse"&gt;\(&lt;/span&gt;&lt;span class="pl-s1"&gt;numberOfDeletedObjects&lt;/span&gt;&lt;span class="pl-pse"&gt;&lt;span class="pl-s1"&gt;)&lt;/span&gt;&lt;/span&gt; objects&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
    },
    &lt;span class="pl-c1"&gt;failure&lt;/span&gt;: { (error) &lt;span class="pl-k"&gt;-&amp;gt;&lt;/span&gt; &lt;span class="pl-c1"&gt;Void&lt;/span&gt; &lt;span class="pl-k"&gt;in&lt;/span&gt;
        &lt;span class="pl-c1"&gt;print&lt;/span&gt;(error)
    }
)&lt;/pre&gt;&lt;/div&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;g-emoji class="g-emoji" alias="warning" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/26a0.png"&gt;⚠️&lt;/g-emoji&gt;Be careful when returning &lt;code&gt;NSManagedObject&lt;/code&gt;s or &lt;code&gt;CoreStoreObject&lt;/code&gt;s from the transaction closure. Those instances are for the transaction's use only. See &lt;a href="#passing-objects-safely"&gt;Passing objects safely&lt;/a&gt;.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Transactions created from &lt;code&gt;perform(asynchronous:...)&lt;/code&gt; are instances of &lt;code&gt;AsynchronousDataTransaction&lt;/code&gt;.&lt;/p&gt;
&lt;h4&gt;&lt;a id="user-content-synchronous-transactions" class="anchor" aria-hidden="true" href="#synchronous-transactions"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Synchronous transactions&lt;/h4&gt;
&lt;p&gt;are created from &lt;code&gt;perform(synchronous:...)&lt;/code&gt;. While the syntax is similar to its asynchronous counterpart, &lt;code&gt;perform(synchronous:...)&lt;/code&gt; waits for its transaction block to complete before returning:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;let&lt;/span&gt; hasChanges &lt;span class="pl-k"&gt;=&lt;/span&gt; dataStack.&lt;span class="pl-c1"&gt;perform&lt;/span&gt;(
    &lt;span class="pl-c1"&gt;synchronous&lt;/span&gt;: { (transaction) &lt;span class="pl-k"&gt;-&amp;gt;&lt;/span&gt; &lt;span class="pl-c1"&gt;Bool&lt;/span&gt; &lt;span class="pl-k"&gt;in&lt;/span&gt;
        &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; make changes&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;        &lt;span class="pl-k"&gt;return&lt;/span&gt; transaction.&lt;span class="pl-smi"&gt;hasChanges&lt;/span&gt;
    }
)&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;code&gt;transaction&lt;/code&gt; above is a &lt;code&gt;SynchronousDataTransaction&lt;/code&gt; instance.&lt;/p&gt;
&lt;p&gt;Since &lt;code&gt;perform(synchronous:...)&lt;/code&gt; technically blocks two queues (the caller's queue and the transaction's background queue), it is considered less safe as it's more prone to deadlock. Take special care that the closure does not block on any other external queues.&lt;/p&gt;
&lt;p&gt;By default, &lt;code&gt;perform(synchronous:...)&lt;/code&gt; will wait for observers such as &lt;code&gt;ListMonitor&lt;/code&gt;s to be notified before the method returns. This may cause deadlocks, especially if you are calling this from the main thread. To reduce this risk, you may try to set the &lt;code&gt;waitForAllObservers:&lt;/code&gt; parameter to &lt;code&gt;false&lt;/code&gt;. Doing so tells the &lt;code&gt;SynchronousDataTransaction&lt;/code&gt; to block only until it completes saving. It will not wait for other context's to receive those changes. This reduces deadlock risk but may have surprising side-effects:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;dataStack.&lt;span class="pl-c1"&gt;perform&lt;/span&gt;(
    &lt;span class="pl-c1"&gt;synchronous&lt;/span&gt;: { (transaction) &lt;span class="pl-k"&gt;in&lt;/span&gt;
        &lt;span class="pl-k"&gt;let&lt;/span&gt; person &lt;span class="pl-k"&gt;=&lt;/span&gt; transaction.&lt;span class="pl-c1"&gt;create&lt;/span&gt;(Into&lt;span class="pl-k"&gt;&amp;lt;&lt;/span&gt;Person&lt;span class="pl-k"&gt;&amp;gt;&lt;/span&gt;())
        person.&lt;span class="pl-smi"&gt;name&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;John&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;
    },
    &lt;span class="pl-c1"&gt;waitForAllObservers&lt;/span&gt;: &lt;span class="pl-c1"&gt;false&lt;/span&gt;
)
&lt;span class="pl-k"&gt;let&lt;/span&gt; newPerson &lt;span class="pl-k"&gt;=&lt;/span&gt; dataStack.&lt;span class="pl-c1"&gt;fetchOne&lt;/span&gt;(From&lt;span class="pl-k"&gt;&amp;lt;&lt;/span&gt;Person&lt;span class="pl-k"&gt;&amp;gt;&lt;/span&gt;.&lt;span class="pl-c1"&gt;where&lt;/span&gt;(\.&lt;span class="pl-smi"&gt;name&lt;/span&gt; &lt;span class="pl-k"&gt;==&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;John&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;))
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; newPerson may be nil!&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; The DataStack may have not yet received the update notification.&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Due to this complicated nature of synchronous transactions, if your app has very heavy transaction throughput it is highly recommended to use &lt;a href="#asynchronous-transactions"&gt;asynchronous transactions&lt;/a&gt; instead.&lt;/p&gt;
&lt;h4&gt;&lt;a id="user-content-unsafe-transactions" class="anchor" aria-hidden="true" href="#unsafe-transactions"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Unsafe transactions&lt;/h4&gt;
&lt;p&gt;are special in that they do not enclose updates within a closure:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;let&lt;/span&gt; transaction &lt;span class="pl-k"&gt;=&lt;/span&gt; dataStack.&lt;span class="pl-c1"&gt;beginUnsafe&lt;/span&gt;()
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; make changes&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;&lt;span class="pl-c1"&gt;downloadJSONWithCompletion&lt;/span&gt;({ (json) &lt;span class="pl-k"&gt;-&amp;gt;&lt;/span&gt; &lt;span class="pl-c1"&gt;Void&lt;/span&gt; &lt;span class="pl-k"&gt;in&lt;/span&gt;

    &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; make other changes&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;    transaction.&lt;span class="pl-c1"&gt;commit&lt;/span&gt;()
})
&lt;span class="pl-c1"&gt;downloadAnotherJSONWithCompletion&lt;/span&gt;({ (json) &lt;span class="pl-k"&gt;-&amp;gt;&lt;/span&gt; &lt;span class="pl-c1"&gt;Void&lt;/span&gt; &lt;span class="pl-k"&gt;in&lt;/span&gt;

    &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; make some other changes&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;    transaction.&lt;span class="pl-c1"&gt;commit&lt;/span&gt;()
})&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;This allows for non-contiguous updates. Do note that this flexibility comes with a price: you are now responsible for managing concurrency for the transaction. As uncle Ben said, "with great power comes great race conditions."&lt;/p&gt;
&lt;p&gt;As the above example also shows, with unsafe transactions &lt;code&gt;commit()&lt;/code&gt; can be called multiple times.&lt;/p&gt;
&lt;p&gt;You've seen how to create transactions, but we have yet to see how to make &lt;em&gt;creates&lt;/em&gt;, &lt;em&gt;updates&lt;/em&gt;, and &lt;em&gt;deletes&lt;/em&gt;. The 3 types of transactions above are all subclasses of &lt;code&gt;BaseDataTransaction&lt;/code&gt;, which implements the methods shown below.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-creating-objects" class="anchor" aria-hidden="true" href="#creating-objects"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Creating objects&lt;/h3&gt;
&lt;p&gt;The &lt;code&gt;create(...)&lt;/code&gt; method accepts an &lt;code&gt;Into&lt;/code&gt; clause which specifies the entity for the object you want to create:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;let&lt;/span&gt; person &lt;span class="pl-k"&gt;=&lt;/span&gt; transaction.&lt;span class="pl-c1"&gt;create&lt;/span&gt;(Into&lt;span class="pl-k"&gt;&amp;lt;&lt;/span&gt;MyPersonEntity&lt;span class="pl-k"&gt;&amp;gt;&lt;/span&gt;())&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;While the syntax is straightforward, CoreStore does not just naively insert a new object. This single line does the following:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Checks that the entity type exists in any of the transaction's parent persistent store&lt;/li&gt;
&lt;li&gt;If the entity belongs to only one persistent store, a new object is inserted into that store and returned from &lt;code&gt;create(...)&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;If the entity does not belong to any store, an assertion failure will be raised. &lt;strong&gt;This is a programmer error and should never occur in production code.&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;If the entity belongs to multiple stores, an assertion failure will be raised. &lt;strong&gt;This is also a programmer error and should never occur in production code.&lt;/strong&gt; Normally, with Core Data you can insert an object in this state but saving the &lt;code&gt;NSManagedObjectContext&lt;/code&gt; will always fail. CoreStore checks this for you at creation time when it makes sense (not during save).&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;If the entity exists in multiple configurations, you need to provide the configuration name for the destination persistent store:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;let&lt;/span&gt; person &lt;span class="pl-k"&gt;=&lt;/span&gt; transaction.&lt;span class="pl-c1"&gt;create&lt;/span&gt;(Into&lt;span class="pl-k"&gt;&amp;lt;&lt;/span&gt;MyPersonEntity&lt;span class="pl-k"&gt;&amp;gt;&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;Config1&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;))&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;or if the persistent store is the auto-generated "Default" configuration, specify &lt;code&gt;nil&lt;/code&gt;:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;let&lt;/span&gt; person &lt;span class="pl-k"&gt;=&lt;/span&gt; transaction.&lt;span class="pl-c1"&gt;create&lt;/span&gt;(Into&lt;span class="pl-k"&gt;&amp;lt;&lt;/span&gt;MyPersonEntity&lt;span class="pl-k"&gt;&amp;gt;&lt;/span&gt;(&lt;span class="pl-c1"&gt;nil&lt;/span&gt;))&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Note that if you do explicitly specify the configuration name, CoreStore will only try to insert the created object to that particular store and will fail if that store is not found; it will not fall back to any other configuration that the entity belongs to.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-updating-objects" class="anchor" aria-hidden="true" href="#updating-objects"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Updating objects&lt;/h3&gt;
&lt;p&gt;After creating an object from the transaction, you can simply update its properties as normal:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;dataStack.&lt;span class="pl-c1"&gt;perform&lt;/span&gt;(
    &lt;span class="pl-c1"&gt;asynchronous&lt;/span&gt;: { (transaction) &lt;span class="pl-k"&gt;-&amp;gt;&lt;/span&gt; &lt;span class="pl-c1"&gt;Void&lt;/span&gt; &lt;span class="pl-k"&gt;in&lt;/span&gt;
        &lt;span class="pl-k"&gt;let&lt;/span&gt; person &lt;span class="pl-k"&gt;=&lt;/span&gt; transaction.&lt;span class="pl-c1"&gt;create&lt;/span&gt;(Into&lt;span class="pl-k"&gt;&amp;lt;&lt;/span&gt;MyPersonEntity&lt;span class="pl-k"&gt;&amp;gt;&lt;/span&gt;())
        person.&lt;span class="pl-smi"&gt;name&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;John Smith&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;
        person.&lt;span class="pl-smi"&gt;age&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;30&lt;/span&gt;
    },
    &lt;span class="pl-c1"&gt;completion&lt;/span&gt;: { &lt;span class="pl-c1"&gt;_&lt;/span&gt; &lt;span class="pl-k"&gt;in&lt;/span&gt; }
)&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;To update an existing object, fetch the object's instance from the transaction:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;dataStack.&lt;span class="pl-c1"&gt;perform&lt;/span&gt;(
    &lt;span class="pl-c1"&gt;asynchronous&lt;/span&gt;: { (transaction) &lt;span class="pl-k"&gt;-&amp;gt;&lt;/span&gt; &lt;span class="pl-c1"&gt;Void&lt;/span&gt; &lt;span class="pl-k"&gt;in&lt;/span&gt;
        &lt;span class="pl-k"&gt;let&lt;/span&gt; person &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-k"&gt;try&lt;/span&gt; transaction.&lt;span class="pl-c1"&gt;fetchOne&lt;/span&gt;(
            From&lt;span class="pl-k"&gt;&amp;lt;&lt;/span&gt;MyPersonEntity&lt;span class="pl-k"&gt;&amp;gt;&lt;/span&gt;()
                .&lt;span class="pl-c1"&gt;where&lt;/span&gt;(\.&lt;span class="pl-smi"&gt;name&lt;/span&gt; &lt;span class="pl-k"&gt;==&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;Jane Smith&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
        )
        person.&lt;span class="pl-smi"&gt;age&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; person.&lt;span class="pl-smi"&gt;age&lt;/span&gt; &lt;span class="pl-k"&gt;+&lt;/span&gt; &lt;span class="pl-c1"&gt;1&lt;/span&gt;
    },
    &lt;span class="pl-c1"&gt;completion&lt;/span&gt;: { &lt;span class="pl-c1"&gt;_&lt;/span&gt; &lt;span class="pl-k"&gt;in&lt;/span&gt; }
)&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;em&gt;(For more about fetching, see &lt;a href="#fetching-and-querying"&gt;Fetching and querying&lt;/a&gt;)&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Do not update an instance that was not created/fetched from the transaction.&lt;/strong&gt; If you have a reference to the object already, use the transaction's &lt;code&gt;edit(...)&lt;/code&gt; method to get an editable proxy instance for that object:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;let&lt;/span&gt; jane&lt;span class="pl-k"&gt;:&lt;/span&gt; MyPersonEntity &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; ...&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;
dataStack.&lt;span class="pl-c1"&gt;perform&lt;/span&gt;(
    &lt;span class="pl-c1"&gt;asynchronous&lt;/span&gt;: { (transaction) &lt;span class="pl-k"&gt;-&amp;gt;&lt;/span&gt; &lt;span class="pl-c1"&gt;Void&lt;/span&gt; &lt;span class="pl-k"&gt;in&lt;/span&gt;
        &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; WRONG: jane.age = jane.age + 1&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;        &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; RIGHT:&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;        &lt;span class="pl-k"&gt;let&lt;/span&gt; jane &lt;span class="pl-k"&gt;=&lt;/span&gt; transaction.&lt;span class="pl-c1"&gt;edit&lt;/span&gt;(jane)&lt;span class="pl-k"&gt;!&lt;/span&gt; &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; using the same variable name protects us from misusing the non-transaction instance&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;        jane.&lt;span class="pl-smi"&gt;age&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; jane.&lt;span class="pl-smi"&gt;age&lt;/span&gt; &lt;span class="pl-k"&gt;+&lt;/span&gt; &lt;span class="pl-c1"&gt;1&lt;/span&gt;
    },
    &lt;span class="pl-c1"&gt;completion&lt;/span&gt;: { &lt;span class="pl-c1"&gt;_&lt;/span&gt; &lt;span class="pl-k"&gt;in&lt;/span&gt; }
)&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;This is also true when updating an object's relationships. Make sure that the object assigned to the relationship is also created/fetched from the transaction:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;let&lt;/span&gt; jane&lt;span class="pl-k"&gt;:&lt;/span&gt; MyPersonEntity &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; ...&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;&lt;span class="pl-k"&gt;let&lt;/span&gt; john&lt;span class="pl-k"&gt;:&lt;/span&gt; MyPersonEntity &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; ...&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;
dataStack.&lt;span class="pl-c1"&gt;perform&lt;/span&gt;(
    &lt;span class="pl-c1"&gt;asynchronous&lt;/span&gt;: { (transaction) &lt;span class="pl-k"&gt;-&amp;gt;&lt;/span&gt; &lt;span class="pl-c1"&gt;Void&lt;/span&gt; &lt;span class="pl-k"&gt;in&lt;/span&gt;
        &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; WRONG: jane.friends = [john]&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;        &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; RIGHT:&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;        &lt;span class="pl-k"&gt;let&lt;/span&gt; jane &lt;span class="pl-k"&gt;=&lt;/span&gt; transaction.&lt;span class="pl-c1"&gt;edit&lt;/span&gt;(jane)&lt;span class="pl-k"&gt;!&lt;/span&gt;
        &lt;span class="pl-k"&gt;let&lt;/span&gt; john &lt;span class="pl-k"&gt;=&lt;/span&gt; transaction.&lt;span class="pl-c1"&gt;edit&lt;/span&gt;(john)&lt;span class="pl-k"&gt;!&lt;/span&gt;
        jane.&lt;span class="pl-smi"&gt;friends&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;NSSet&lt;/span&gt;(&lt;span class="pl-c1"&gt;array&lt;/span&gt;: [john])
    },
    &lt;span class="pl-c1"&gt;completion&lt;/span&gt;: { &lt;span class="pl-c1"&gt;_&lt;/span&gt; &lt;span class="pl-k"&gt;in&lt;/span&gt; }
)&lt;/pre&gt;&lt;/div&gt;
&lt;h3&gt;&lt;a id="user-content-deleting-objects" class="anchor" aria-hidden="true" href="#deleting-objects"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Deleting objects&lt;/h3&gt;
&lt;p&gt;Deleting an object is simpler because you can tell a transaction to delete an object directly without fetching an editable proxy (CoreStore does that for you):&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;let&lt;/span&gt; john&lt;span class="pl-k"&gt;:&lt;/span&gt; MyPersonEntity &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; ...&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;
dataStack.&lt;span class="pl-c1"&gt;perform&lt;/span&gt;(
    &lt;span class="pl-c1"&gt;asynchronous&lt;/span&gt;: { (transaction) &lt;span class="pl-k"&gt;-&amp;gt;&lt;/span&gt; &lt;span class="pl-c1"&gt;Void&lt;/span&gt; &lt;span class="pl-k"&gt;in&lt;/span&gt;
        transaction.&lt;span class="pl-c1"&gt;delete&lt;/span&gt;(john)
    },
    &lt;span class="pl-c1"&gt;completion&lt;/span&gt;: { &lt;span class="pl-c1"&gt;_&lt;/span&gt; &lt;span class="pl-k"&gt;in&lt;/span&gt; }
)&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;or several objects at once:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;let&lt;/span&gt; john&lt;span class="pl-k"&gt;:&lt;/span&gt; MyPersonEntity &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; ...&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;&lt;span class="pl-k"&gt;let&lt;/span&gt; jane&lt;span class="pl-k"&gt;:&lt;/span&gt; MyPersonEntity &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; ...&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;
dataStack.&lt;span class="pl-c1"&gt;perform&lt;/span&gt;(
    &lt;span class="pl-c1"&gt;asynchronous&lt;/span&gt;: { (transaction) &lt;span class="pl-k"&gt;-&amp;gt;&lt;/span&gt; &lt;span class="pl-c1"&gt;Void&lt;/span&gt; &lt;span class="pl-k"&gt;in&lt;/span&gt;
        &lt;span class="pl-k"&gt;try&lt;/span&gt; transaction.&lt;span class="pl-c1"&gt;delete&lt;/span&gt;(john, jane)
        &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; try transaction.delete([john, jane]) is also allowed&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;    },
    &lt;span class="pl-c1"&gt;completion&lt;/span&gt;: { &lt;span class="pl-c1"&gt;_&lt;/span&gt; &lt;span class="pl-k"&gt;in&lt;/span&gt; }
)&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;If you do not have references yet to the objects to be deleted, transactions have a &lt;code&gt;deleteAll(...)&lt;/code&gt; method you can pass a query to:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;dataStack.&lt;span class="pl-c1"&gt;perform&lt;/span&gt;(
    &lt;span class="pl-c1"&gt;asynchronous&lt;/span&gt;: { (transaction) &lt;span class="pl-k"&gt;-&amp;gt;&lt;/span&gt; &lt;span class="pl-c1"&gt;Void&lt;/span&gt; &lt;span class="pl-k"&gt;in&lt;/span&gt;
        &lt;span class="pl-k"&gt;try&lt;/span&gt; transaction.&lt;span class="pl-c1"&gt;deleteAll&lt;/span&gt;(
            From&lt;span class="pl-k"&gt;&amp;lt;&lt;/span&gt;MyPersonEntity&lt;span class="pl-k"&gt;&amp;gt;&lt;/span&gt;()
                .&lt;span class="pl-c1"&gt;where&lt;/span&gt;(\.&lt;span class="pl-smi"&gt;age&lt;/span&gt; &lt;span class="pl-k"&gt;&amp;gt;&lt;/span&gt; &lt;span class="pl-c1"&gt;30&lt;/span&gt;)
        )
    },
    &lt;span class="pl-c1"&gt;completion&lt;/span&gt;: { &lt;span class="pl-c1"&gt;_&lt;/span&gt; &lt;span class="pl-k"&gt;in&lt;/span&gt; }
)&lt;/pre&gt;&lt;/div&gt;
&lt;h3&gt;&lt;a id="user-content-passing-objects-safely" class="anchor" aria-hidden="true" href="#passing-objects-safely"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Passing objects safely&lt;/h3&gt;
&lt;p&gt;Always remember that the &lt;code&gt;DataStack&lt;/code&gt; and individual transactions manage different &lt;code&gt;NSManagedObjectContext&lt;/code&gt;s so you cannot just use objects between them. That's why transactions have an &lt;code&gt;edit(...)&lt;/code&gt; method:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;let&lt;/span&gt; jane&lt;span class="pl-k"&gt;:&lt;/span&gt; MyPersonEntity &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; ...&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;
dataStack.&lt;span class="pl-c1"&gt;perform&lt;/span&gt;(
    &lt;span class="pl-c1"&gt;asynchronous&lt;/span&gt;: { (transaction) &lt;span class="pl-k"&gt;-&amp;gt;&lt;/span&gt; &lt;span class="pl-c1"&gt;Void&lt;/span&gt; &lt;span class="pl-k"&gt;in&lt;/span&gt;
        &lt;span class="pl-k"&gt;let&lt;/span&gt; jane &lt;span class="pl-k"&gt;=&lt;/span&gt; transaction.&lt;span class="pl-c1"&gt;edit&lt;/span&gt;(jane)&lt;span class="pl-k"&gt;!&lt;/span&gt;
        jane.&lt;span class="pl-smi"&gt;age&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; jane.&lt;span class="pl-smi"&gt;age&lt;/span&gt; &lt;span class="pl-k"&gt;+&lt;/span&gt; &lt;span class="pl-c1"&gt;1&lt;/span&gt;
    },
    &lt;span class="pl-c1"&gt;completion&lt;/span&gt;: { &lt;span class="pl-c1"&gt;_&lt;/span&gt; &lt;span class="pl-k"&gt;in&lt;/span&gt; }
)&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;But &lt;code&gt;CoreStore&lt;/code&gt;, &lt;code&gt;DataStack&lt;/code&gt; and &lt;code&gt;BaseDataTransaction&lt;/code&gt; have a very flexible &lt;code&gt;fetchExisting(...)&lt;/code&gt; method that you can pass instances back and forth with:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;let&lt;/span&gt; jane&lt;span class="pl-k"&gt;:&lt;/span&gt; MyPersonEntity &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; ...&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;
dataStack.&lt;span class="pl-c1"&gt;perform&lt;/span&gt;(
    &lt;span class="pl-c1"&gt;asynchronous&lt;/span&gt;: { (transaction) &lt;span class="pl-k"&gt;-&amp;gt;&lt;/span&gt; MyPersonEntity &lt;span class="pl-k"&gt;in&lt;/span&gt;
        &lt;span class="pl-k"&gt;let&lt;/span&gt; jane &lt;span class="pl-k"&gt;=&lt;/span&gt; transaction.&lt;span class="pl-c1"&gt;fetchExisting&lt;/span&gt;(jane)&lt;span class="pl-k"&gt;!&lt;/span&gt; &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; instance for transaction&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;        jane.&lt;span class="pl-smi"&gt;age&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; jane.&lt;span class="pl-smi"&gt;age&lt;/span&gt; &lt;span class="pl-k"&gt;+&lt;/span&gt; &lt;span class="pl-c1"&gt;1&lt;/span&gt;
        &lt;span class="pl-k"&gt;return&lt;/span&gt; jane
    },
    &lt;span class="pl-c1"&gt;success&lt;/span&gt;: { (transactionJane) &lt;span class="pl-k"&gt;in&lt;/span&gt;
        &lt;span class="pl-k"&gt;let&lt;/span&gt; jane &lt;span class="pl-k"&gt;=&lt;/span&gt; dataStack.&lt;span class="pl-c1"&gt;fetchExisting&lt;/span&gt;(transactionJane)&lt;span class="pl-k"&gt;!&lt;/span&gt; &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; instance for DataStack&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;        &lt;span class="pl-c1"&gt;print&lt;/span&gt;(jane.&lt;span class="pl-smi"&gt;age&lt;/span&gt;)
    },
    &lt;span class="pl-c1"&gt;failure&lt;/span&gt;: { (error) &lt;span class="pl-k"&gt;in&lt;/span&gt;
        &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; ...&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;    }
)&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;code&gt;fetchExisting(...)&lt;/code&gt; also works with multiple &lt;code&gt;NSManagedObject&lt;/code&gt;s, &lt;code&gt;CoreStoreObject&lt;/code&gt;s, or with &lt;code&gt;NSManagedObjectID&lt;/code&gt;s:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;var&lt;/span&gt; peopleIDs&lt;span class="pl-k"&gt;:&lt;/span&gt; [NSManagedObjectID] &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; ...&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;
dataStack.&lt;span class="pl-c1"&gt;perform&lt;/span&gt;(
    &lt;span class="pl-c1"&gt;asynchronous&lt;/span&gt;: { (transaction) &lt;span class="pl-k"&gt;-&amp;gt;&lt;/span&gt; &lt;span class="pl-c1"&gt;Void&lt;/span&gt; &lt;span class="pl-k"&gt;in&lt;/span&gt;
        &lt;span class="pl-k"&gt;let&lt;/span&gt; jane &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-k"&gt;try&lt;/span&gt; transaction.&lt;span class="pl-c1"&gt;fetchOne&lt;/span&gt;(
            From&lt;span class="pl-k"&gt;&amp;lt;&lt;/span&gt;MyPersonEntity&lt;span class="pl-k"&gt;&amp;gt;&lt;/span&gt;()
                .&lt;span class="pl-c1"&gt;where&lt;/span&gt;(\.&lt;span class="pl-smi"&gt;name&lt;/span&gt; &lt;span class="pl-k"&gt;==&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;Jane Smith&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
        )
        jane.&lt;span class="pl-smi"&gt;friends&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;NSSet&lt;/span&gt;(&lt;span class="pl-c1"&gt;array&lt;/span&gt;: transaction.&lt;span class="pl-c1"&gt;fetchExisting&lt;/span&gt;(peopleIDs)&lt;span class="pl-k"&gt;!&lt;/span&gt;)
        &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; ...&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;    },
    &lt;span class="pl-c1"&gt;completion&lt;/span&gt;: { &lt;span class="pl-c1"&gt;_&lt;/span&gt; &lt;span class="pl-k"&gt;in&lt;/span&gt; }
)&lt;/pre&gt;&lt;/div&gt;
&lt;h2&gt;&lt;a id="user-content-importing-data" class="anchor" aria-hidden="true" href="#importing-data"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Importing data&lt;/h2&gt;
&lt;p&gt;Some times, if not most of the time, the data that we save to Core Data comes from external sources such as web servers or external files. If you have a JSON dictionary for example, you may be extracting values as such:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;let&lt;/span&gt; json&lt;span class="pl-k"&gt;:&lt;/span&gt; [&lt;span class="pl-c1"&gt;String&lt;/span&gt;&lt;span class="pl-k"&gt;:&lt;/span&gt; &lt;span class="pl-c1"&gt;Any&lt;/span&gt;] &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; ...&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;person.&lt;span class="pl-smi"&gt;name&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; json[&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;name&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;] &lt;span class="pl-k"&gt;as?&lt;/span&gt; NSString
person.&lt;span class="pl-smi"&gt;age&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; json[&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;age&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;] &lt;span class="pl-k"&gt;as?&lt;/span&gt; NSNumber
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; ...&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;If you have many attributes, you don't want to keep repeating this mapping everytime you want to import data. CoreStore lets you write the data mapping code just once, and all you have to do is call &lt;code&gt;importObject(...)&lt;/code&gt; or &lt;code&gt;importUniqueObject(...)&lt;/code&gt; through &lt;code&gt;BaseDataTransaction&lt;/code&gt; subclasses:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;dataStack.&lt;span class="pl-c1"&gt;perform&lt;/span&gt;(
    &lt;span class="pl-c1"&gt;asynchronous&lt;/span&gt;: { (transaction) &lt;span class="pl-k"&gt;-&amp;gt;&lt;/span&gt; &lt;span class="pl-c1"&gt;Void&lt;/span&gt; &lt;span class="pl-k"&gt;in&lt;/span&gt;
        &lt;span class="pl-k"&gt;let&lt;/span&gt; json&lt;span class="pl-k"&gt;:&lt;/span&gt; [&lt;span class="pl-c1"&gt;String&lt;/span&gt;&lt;span class="pl-k"&gt;:&lt;/span&gt; &lt;span class="pl-c1"&gt;Any&lt;/span&gt;] &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; ...&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;        &lt;span class="pl-k"&gt;try&lt;/span&gt;&lt;span class="pl-k"&gt;!&lt;/span&gt; transaction.&lt;span class="pl-c1"&gt;importObject&lt;/span&gt;(
            Into&lt;span class="pl-k"&gt;&amp;lt;&lt;/span&gt;MyPersonEntity&lt;span class="pl-k"&gt;&amp;gt;&lt;/span&gt;(),
            &lt;span class="pl-c1"&gt;source&lt;/span&gt;: json
        )
    },
    &lt;span class="pl-c1"&gt;completion&lt;/span&gt;: { &lt;span class="pl-c1"&gt;_&lt;/span&gt; &lt;span class="pl-k"&gt;in&lt;/span&gt; }
)&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;To support data import for an entity, implement either &lt;code&gt;ImportableObject&lt;/code&gt; or &lt;code&gt;ImportableUniqueObject&lt;/code&gt; on the &lt;code&gt;NSManagedObject&lt;/code&gt; or &lt;code&gt;CoreStoreObject&lt;/code&gt; subclass:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;ImportableObject&lt;/code&gt;: Use this protocol if the object have no inherent uniqueness and new objects should always be added when calling &lt;code&gt;importObject(...)&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;ImportableUniqueObject&lt;/code&gt;: Use this protocol to specify a unique ID for an object that will be used to distinguish whether a new object should be created or if an existing object should be updated when calling &lt;code&gt;importUniqueObject(...)&lt;/code&gt;.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Both protocols require implementers to specify an &lt;code&gt;ImportSource&lt;/code&gt; which can be set to any type that the object can extract data from:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;typealias&lt;/span&gt; &lt;span class="pl-en"&gt;ImportSource&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; NSDictionary&lt;/pre&gt;&lt;/div&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;typealias&lt;/span&gt; &lt;span class="pl-en"&gt;ImportSource&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; [&lt;span class="pl-c1"&gt;String&lt;/span&gt;: &lt;span class="pl-c1"&gt;Any&lt;/span&gt;]&lt;/pre&gt;&lt;/div&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;typealias&lt;/span&gt; &lt;span class="pl-en"&gt;ImportSource&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; NSData&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;You can even use external types from popular 3rd-party JSON libraries, or just simple tuples or primitives.&lt;/p&gt;
&lt;h4&gt;&lt;a id="user-content-importableobject" class="anchor" aria-hidden="true" href="#importableobject"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;code&gt;ImportableObject&lt;/code&gt;&lt;/h4&gt;
&lt;p&gt;&lt;code&gt;ImportableObject&lt;/code&gt; is a very simple protocol:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;public&lt;/span&gt; &lt;span class="pl-k"&gt;protocol&lt;/span&gt; &lt;span class="pl-en"&gt;ImportableObject&lt;/span&gt;: &lt;span class="pl-e"&gt;&lt;span class="pl-c1"&gt;AnyObject&lt;/span&gt; &lt;/span&gt;{
    &lt;span class="pl-k"&gt;typealias&lt;/span&gt; &lt;span class="pl-en"&gt;ImportSource&lt;/span&gt;
    &lt;span class="pl-k"&gt;static&lt;/span&gt; &lt;span class="pl-k"&gt;func&lt;/span&gt; &lt;span class="pl-en"&gt;shouldInsert&lt;/span&gt;(&lt;span class="pl-en"&gt;from&lt;/span&gt; &lt;span class="pl-smi"&gt;source&lt;/span&gt;: ImportSource, &lt;span class="pl-en"&gt;in&lt;/span&gt; &lt;span class="pl-smi"&gt;transaction&lt;/span&gt;: BaseDataTransaction) &lt;span class="pl-k"&gt;-&amp;gt;&lt;/span&gt; &lt;span class="pl-c1"&gt;Bool&lt;/span&gt;
    &lt;span class="pl-k"&gt;func&lt;/span&gt; &lt;span class="pl-en"&gt;didInsert&lt;/span&gt;(&lt;span class="pl-en"&gt;from&lt;/span&gt; &lt;span class="pl-smi"&gt;source&lt;/span&gt;: ImportSource, &lt;span class="pl-en"&gt;in&lt;/span&gt; &lt;span class="pl-smi"&gt;transaction&lt;/span&gt;: BaseDataTransaction) &lt;span class="pl-k"&gt;throws&lt;/span&gt;
}&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;First, set &lt;code&gt;ImportSource&lt;/code&gt; to the expected type of the data source:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;typealias&lt;/span&gt; &lt;span class="pl-en"&gt;ImportSource&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; [&lt;span class="pl-c1"&gt;String&lt;/span&gt;: &lt;span class="pl-c1"&gt;Any&lt;/span&gt;]&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;This lets us call &lt;code&gt;importObject(_:source:)&lt;/code&gt; with any &lt;code&gt;[String: Any]&lt;/code&gt; type as the argument to &lt;code&gt;source&lt;/code&gt;:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;dataStack.&lt;span class="pl-c1"&gt;perform&lt;/span&gt;(
    &lt;span class="pl-c1"&gt;asynchronous&lt;/span&gt;: { (transaction) &lt;span class="pl-k"&gt;-&amp;gt;&lt;/span&gt; &lt;span class="pl-c1"&gt;Void&lt;/span&gt; &lt;span class="pl-k"&gt;in&lt;/span&gt;
        &lt;span class="pl-k"&gt;let&lt;/span&gt; json&lt;span class="pl-k"&gt;:&lt;/span&gt; [&lt;span class="pl-c1"&gt;String&lt;/span&gt;&lt;span class="pl-k"&gt;:&lt;/span&gt; &lt;span class="pl-c1"&gt;Any&lt;/span&gt;] &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; ...&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;        &lt;span class="pl-k"&gt;try&lt;/span&gt;&lt;span class="pl-k"&gt;!&lt;/span&gt; transaction.&lt;span class="pl-c1"&gt;importObject&lt;/span&gt;(
            Into&lt;span class="pl-k"&gt;&amp;lt;&lt;/span&gt;MyPersonEntity&lt;span class="pl-k"&gt;&amp;gt;&lt;/span&gt;(),
            &lt;span class="pl-c1"&gt;source&lt;/span&gt;: json
        )
        &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; ...&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;    },
    &lt;span class="pl-c1"&gt;completion&lt;/span&gt;: { &lt;span class="pl-c1"&gt;_&lt;/span&gt; &lt;span class="pl-k"&gt;in&lt;/span&gt; }
)&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;The actual extraction and assignment of values should be implemented in the &lt;code&gt;didInsert(from:in:)&lt;/code&gt; method of the &lt;code&gt;ImportableObject&lt;/code&gt; protocol:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;func&lt;/span&gt; &lt;span class="pl-en"&gt;didInsert&lt;/span&gt;(&lt;span class="pl-en"&gt;from&lt;/span&gt; &lt;span class="pl-smi"&gt;source&lt;/span&gt;: ImportSource, &lt;span class="pl-en"&gt;in&lt;/span&gt; &lt;span class="pl-smi"&gt;transaction&lt;/span&gt;: BaseDataTransaction) &lt;span class="pl-k"&gt;throws&lt;/span&gt; {
    &lt;span class="pl-c1"&gt;self&lt;/span&gt;.&lt;span class="pl-smi"&gt;name&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; source[&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;name&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;] &lt;span class="pl-k"&gt;as?&lt;/span&gt; NSString
    &lt;span class="pl-c1"&gt;self&lt;/span&gt;.&lt;span class="pl-smi"&gt;age&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; source[&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;age&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;] &lt;span class="pl-k"&gt;as?&lt;/span&gt; NSNumber
    &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; ...&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;}&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Transactions also let you import multiple objects at once using the &lt;code&gt;importObjects(_:sourceArray:)&lt;/code&gt; method:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;dataStack.&lt;span class="pl-c1"&gt;perform&lt;/span&gt;(
    &lt;span class="pl-c1"&gt;asynchronous&lt;/span&gt;: { (transaction) &lt;span class="pl-k"&gt;-&amp;gt;&lt;/span&gt; &lt;span class="pl-c1"&gt;Void&lt;/span&gt; &lt;span class="pl-k"&gt;in&lt;/span&gt;
        &lt;span class="pl-k"&gt;let&lt;/span&gt; jsonArray&lt;span class="pl-k"&gt;:&lt;/span&gt; [[&lt;span class="pl-c1"&gt;String&lt;/span&gt;&lt;span class="pl-k"&gt;:&lt;/span&gt; &lt;span class="pl-c1"&gt;Any&lt;/span&gt;]] &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; ...&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;        &lt;span class="pl-k"&gt;try&lt;/span&gt;&lt;span class="pl-k"&gt;!&lt;/span&gt; transaction.&lt;span class="pl-c1"&gt;importObjects&lt;/span&gt;(
            Into&lt;span class="pl-k"&gt;&amp;lt;&lt;/span&gt;MyPersonEntity&lt;span class="pl-k"&gt;&amp;gt;&lt;/span&gt;(),
            &lt;span class="pl-c1"&gt;sourceArray&lt;/span&gt;: jsonArray &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; make sure this is of type Array&amp;lt;MyPersonEntity.ImportSource&amp;gt;&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;        )
        &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; ...&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;    },
    &lt;span class="pl-c1"&gt;completion&lt;/span&gt;: { &lt;span class="pl-c1"&gt;_&lt;/span&gt; &lt;span class="pl-k"&gt;in&lt;/span&gt; }
)&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Doing so tells the transaction to iterate through the array of import sources and calls &lt;code&gt;shouldInsert(from:in:)&lt;/code&gt; on the &lt;code&gt;ImportableObject&lt;/code&gt; to determine which instances should be created. You can do validations and return &lt;code&gt;false&lt;/code&gt; from &lt;code&gt;shouldInsert(from:in:)&lt;/code&gt; if you want to skip importing from a source and continue on with the other sources in the array.&lt;/p&gt;
&lt;p&gt;If on the other hand, your validation in one of the sources failed in such a manner that all other sources should also be rolled back and cancelled, you can &lt;code&gt;throw&lt;/code&gt; from within &lt;code&gt;didInsert(from:in:)&lt;/code&gt;:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;func&lt;/span&gt; &lt;span class="pl-en"&gt;didInsert&lt;/span&gt;(&lt;span class="pl-en"&gt;from&lt;/span&gt; &lt;span class="pl-smi"&gt;source&lt;/span&gt;: ImportSource, &lt;span class="pl-en"&gt;in&lt;/span&gt; &lt;span class="pl-smi"&gt;transaction&lt;/span&gt;: BaseDataTransaction) &lt;span class="pl-k"&gt;throws&lt;/span&gt; {
    &lt;span class="pl-c1"&gt;self&lt;/span&gt;.&lt;span class="pl-smi"&gt;name&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; source[&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;name&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;] &lt;span class="pl-k"&gt;as?&lt;/span&gt; NSString
    &lt;span class="pl-c1"&gt;self&lt;/span&gt;.&lt;span class="pl-smi"&gt;age&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; source[&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;age&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;] &lt;span class="pl-k"&gt;as?&lt;/span&gt; NSNumber
    &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; ...&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;    &lt;span class="pl-k"&gt;if&lt;/span&gt; &lt;span class="pl-c1"&gt;self&lt;/span&gt;.&lt;span class="pl-smi"&gt;name&lt;/span&gt; &lt;span class="pl-k"&gt;==&lt;/span&gt; &lt;span class="pl-c1"&gt;nil&lt;/span&gt; {
        &lt;span class="pl-k"&gt;throw&lt;/span&gt; Errors.&lt;span class="pl-smi"&gt;InvalidNameError&lt;/span&gt;
    }
}&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Doing so can let you abandon an invalid transaction immediately:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;dataStack.&lt;span class="pl-c1"&gt;perform&lt;/span&gt;(
    &lt;span class="pl-c1"&gt;asynchronous&lt;/span&gt;: { (transaction) &lt;span class="pl-k"&gt;-&amp;gt;&lt;/span&gt; &lt;span class="pl-c1"&gt;Void&lt;/span&gt; &lt;span class="pl-k"&gt;in&lt;/span&gt;
        &lt;span class="pl-k"&gt;let&lt;/span&gt; jsonArray&lt;span class="pl-k"&gt;:&lt;/span&gt; [[&lt;span class="pl-c1"&gt;String&lt;/span&gt;&lt;span class="pl-k"&gt;:&lt;/span&gt; &lt;span class="pl-c1"&gt;Any&lt;/span&gt;]] &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; ...&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;
        &lt;span class="pl-k"&gt;try&lt;/span&gt; transaction.&lt;span class="pl-c1"&gt;importObjects&lt;/span&gt;(
            Into&lt;span class="pl-k"&gt;&amp;lt;&lt;/span&gt;MyPersonEntity&lt;span class="pl-k"&gt;&amp;gt;&lt;/span&gt;(),
            &lt;span class="pl-c1"&gt;sourceArray&lt;/span&gt;: jsonArray
        )
    },
    &lt;span class="pl-c1"&gt;success&lt;/span&gt;: {
        &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; ...&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;    },
    &lt;span class="pl-c1"&gt;failure&lt;/span&gt;: { (error) &lt;span class="pl-k"&gt;in&lt;/span&gt;
        &lt;span class="pl-k"&gt;switch&lt;/span&gt; error {
        &lt;span class="pl-k"&gt;case&lt;/span&gt; Errors.&lt;span class="pl-smi"&gt;InvalidNameError&lt;/span&gt;&lt;span class="pl-k"&gt;:&lt;/span&gt; &lt;span class="pl-c1"&gt;print&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;Invalid name&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
        &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; ...&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;        }
    }
)&lt;/pre&gt;&lt;/div&gt;
&lt;h4&gt;&lt;a id="user-content-importableuniqueobject" class="anchor" aria-hidden="true" href="#importableuniqueobject"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;code&gt;ImportableUniqueObject&lt;/code&gt;&lt;/h4&gt;
&lt;p&gt;Typically, we don't just keep creating objects every time we import data. Usually we also need to update already existing objects. Implementing the &lt;code&gt;ImportableUniqueObject&lt;/code&gt; protocol lets you specify a "unique ID" that transactions can use to search existing objects before creating new ones:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;public&lt;/span&gt; &lt;span class="pl-k"&gt;protocol&lt;/span&gt; &lt;span class="pl-en"&gt;ImportableUniqueObject&lt;/span&gt;: &lt;span class="pl-e"&gt;ImportableObject &lt;/span&gt;{
    &lt;span class="pl-k"&gt;typealias&lt;/span&gt; &lt;span class="pl-en"&gt;ImportSource&lt;/span&gt;
    &lt;span class="pl-k"&gt;typealias&lt;/span&gt; &lt;span class="pl-en"&gt;UniqueIDType&lt;/span&gt;: ImportableAttributeType

    &lt;span class="pl-k"&gt;static&lt;/span&gt; &lt;span class="pl-k"&gt;var&lt;/span&gt; uniqueIDKeyPath&lt;span class="pl-k"&gt;:&lt;/span&gt; &lt;span class="pl-c1"&gt;String&lt;/span&gt; { &lt;span class="pl-k"&gt;get&lt;/span&gt; }
    &lt;span class="pl-k"&gt;var&lt;/span&gt; uniqueIDValue&lt;span class="pl-k"&gt;:&lt;/span&gt; UniqueIDType { &lt;span class="pl-k"&gt;get&lt;/span&gt; &lt;span class="pl-k"&gt;set&lt;/span&gt; }

    &lt;span class="pl-k"&gt;static&lt;/span&gt; &lt;span class="pl-k"&gt;func&lt;/span&gt; &lt;span class="pl-en"&gt;shouldInsert&lt;/span&gt;(&lt;span class="pl-en"&gt;from&lt;/span&gt; &lt;span class="pl-smi"&gt;source&lt;/span&gt;: ImportSource, &lt;span class="pl-en"&gt;in&lt;/span&gt; &lt;span class="pl-smi"&gt;transaction&lt;/span&gt;: BaseDataTransaction) &lt;span class="pl-k"&gt;-&amp;gt;&lt;/span&gt; &lt;span class="pl-c1"&gt;Bool&lt;/span&gt;
    &lt;span class="pl-k"&gt;static&lt;/span&gt; &lt;span class="pl-k"&gt;func&lt;/span&gt; &lt;span class="pl-en"&gt;shouldUpdate&lt;/span&gt;(&lt;span class="pl-en"&gt;from&lt;/span&gt; &lt;span class="pl-smi"&gt;source&lt;/span&gt;: ImportSource, &lt;span class="pl-en"&gt;in&lt;/span&gt; &lt;span class="pl-smi"&gt;transaction&lt;/span&gt;: BaseDataTransaction) &lt;span class="pl-k"&gt;-&amp;gt;&lt;/span&gt; &lt;span class="pl-c1"&gt;Bool&lt;/span&gt;
    &lt;span class="pl-k"&gt;static&lt;/span&gt; &lt;span class="pl-k"&gt;func&lt;/span&gt; &lt;span class="pl-en"&gt;uniqueID&lt;/span&gt;(&lt;span class="pl-en"&gt;from&lt;/span&gt; &lt;span class="pl-smi"&gt;source&lt;/span&gt;: ImportSource, &lt;span class="pl-en"&gt;in&lt;/span&gt; &lt;span class="pl-smi"&gt;transaction&lt;/span&gt;: BaseDataTransaction) &lt;span class="pl-k"&gt;throws&lt;/span&gt; &lt;span class="pl-k"&gt;-&amp;gt;&lt;/span&gt; UniqueIDType&lt;span class="pl-k"&gt;?&lt;/span&gt;
    &lt;span class="pl-k"&gt;func&lt;/span&gt; &lt;span class="pl-en"&gt;didInsert&lt;/span&gt;(&lt;span class="pl-en"&gt;from&lt;/span&gt; &lt;span class="pl-smi"&gt;source&lt;/span&gt;: ImportSource, &lt;span class="pl-en"&gt;in&lt;/span&gt; &lt;span class="pl-smi"&gt;transaction&lt;/span&gt;: BaseDataTransaction) &lt;span class="pl-k"&gt;throws&lt;/span&gt;
    &lt;span class="pl-k"&gt;func&lt;/span&gt; &lt;span class="pl-en"&gt;update&lt;/span&gt;(&lt;span class="pl-en"&gt;from&lt;/span&gt; &lt;span class="pl-smi"&gt;source&lt;/span&gt;: ImportSource, &lt;span class="pl-en"&gt;in&lt;/span&gt; &lt;span class="pl-smi"&gt;transaction&lt;/span&gt;: BaseDataTransaction) &lt;span class="pl-k"&gt;throws&lt;/span&gt;
}&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Notice that it has the same insert methods as &lt;code&gt;ImportableObject&lt;/code&gt;, with additional methods for updates and for specifying the unique ID:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;class&lt;/span&gt; &lt;span class="pl-k"&gt;var&lt;/span&gt; uniqueIDKeyPath&lt;span class="pl-k"&gt;:&lt;/span&gt; &lt;span class="pl-c1"&gt;String&lt;/span&gt; {
    &lt;span class="pl-k"&gt;return&lt;/span&gt; &lt;span class="pl-c1"&gt;#keyPath&lt;/span&gt;(MyPersonEntity.&lt;span class="pl-smi"&gt;personID&lt;/span&gt;) 
}
&lt;span class="pl-k"&gt;var&lt;/span&gt; uniqueIDValue&lt;span class="pl-k"&gt;:&lt;/span&gt; &lt;span class="pl-c1"&gt;Int&lt;/span&gt; { 
    &lt;span class="pl-k"&gt;get&lt;/span&gt; { &lt;span class="pl-k"&gt;return&lt;/span&gt; &lt;span class="pl-c1"&gt;self&lt;/span&gt;.&lt;span class="pl-smi"&gt;personID&lt;/span&gt; }
    &lt;span class="pl-k"&gt;set&lt;/span&gt; { &lt;span class="pl-c1"&gt;self&lt;/span&gt;.&lt;span class="pl-smi"&gt;personID&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; newValue }
}
&lt;span class="pl-k"&gt;class&lt;/span&gt; &lt;span class="pl-k"&gt;func&lt;/span&gt; &lt;span class="pl-en"&gt;uniqueID&lt;/span&gt;(&lt;span class="pl-en"&gt;from&lt;/span&gt; &lt;span class="pl-smi"&gt;source&lt;/span&gt;: ImportSource, &lt;span class="pl-en"&gt;in&lt;/span&gt; &lt;span class="pl-smi"&gt;transaction&lt;/span&gt;: BaseDataTransaction) &lt;span class="pl-k"&gt;throws&lt;/span&gt; &lt;span class="pl-k"&gt;-&amp;gt;&lt;/span&gt; &lt;span class="pl-c1"&gt;Int&lt;/span&gt;&lt;span class="pl-k"&gt;?&lt;/span&gt; {
    &lt;span class="pl-k"&gt;return&lt;/span&gt; source[&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;id&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;] &lt;span class="pl-k"&gt;as?&lt;/span&gt; &lt;span class="pl-c1"&gt;Int&lt;/span&gt;
}&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;For &lt;code&gt;ImportableUniqueObject&lt;/code&gt;, the extraction and assignment of values should be implemented from the &lt;code&gt;update(from:in:)&lt;/code&gt; method. The &lt;code&gt;didInsert(from:in:)&lt;/code&gt; by default calls &lt;code&gt;update(from:in:)&lt;/code&gt;, but you can separate the implementation for inserts and updates if needed.&lt;/p&gt;
&lt;p&gt;You can then create/update an object by calling a transaction's &lt;code&gt;importUniqueObject(...)&lt;/code&gt; method:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;dataStack.&lt;span class="pl-c1"&gt;perform&lt;/span&gt;(
    &lt;span class="pl-c1"&gt;asynchronous&lt;/span&gt;: { (transaction) &lt;span class="pl-k"&gt;-&amp;gt;&lt;/span&gt; &lt;span class="pl-c1"&gt;Void&lt;/span&gt; &lt;span class="pl-k"&gt;in&lt;/span&gt;
        &lt;span class="pl-k"&gt;let&lt;/span&gt; json&lt;span class="pl-k"&gt;:&lt;/span&gt; [&lt;span class="pl-c1"&gt;String&lt;/span&gt;&lt;span class="pl-k"&gt;:&lt;/span&gt; &lt;span class="pl-c1"&gt;Any&lt;/span&gt;] &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; ...&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;        &lt;span class="pl-k"&gt;try&lt;/span&gt;&lt;span class="pl-k"&gt;!&lt;/span&gt; transaction.&lt;span class="pl-c1"&gt;importUniqueObject&lt;/span&gt;(
            Into&lt;span class="pl-k"&gt;&amp;lt;&lt;/span&gt;MyPersonEntity&lt;span class="pl-k"&gt;&amp;gt;&lt;/span&gt;(),
            &lt;span class="pl-c1"&gt;source&lt;/span&gt;: json
        )
        &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; ...&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;    },
    &lt;span class="pl-c1"&gt;completion&lt;/span&gt;: { &lt;span class="pl-c1"&gt;_&lt;/span&gt; &lt;span class="pl-k"&gt;in&lt;/span&gt; }
)&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;or multiple objects at once with the &lt;code&gt;importUniqueObjects(...)&lt;/code&gt; method:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;dataStack.&lt;span class="pl-c1"&gt;perform&lt;/span&gt;(
    &lt;span class="pl-c1"&gt;asynchronous&lt;/span&gt;: { (transaction) &lt;span class="pl-k"&gt;-&amp;gt;&lt;/span&gt; &lt;span class="pl-c1"&gt;Void&lt;/span&gt; &lt;span class="pl-k"&gt;in&lt;/span&gt;
        &lt;span class="pl-k"&gt;let&lt;/span&gt; jsonArray&lt;span class="pl-k"&gt;:&lt;/span&gt; [[&lt;span class="pl-c1"&gt;String&lt;/span&gt;&lt;span class="pl-k"&gt;:&lt;/span&gt; &lt;span class="pl-c1"&gt;AnyObject&lt;/span&gt;]] &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; ...&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;        &lt;span class="pl-k"&gt;try&lt;/span&gt;&lt;span class="pl-k"&gt;!&lt;/span&gt; transaction.&lt;span class="pl-c1"&gt;importUniqueObjects&lt;/span&gt;(
            Into&lt;span class="pl-k"&gt;&amp;lt;&lt;/span&gt;MyPersonEntity&lt;span class="pl-k"&gt;&amp;gt;&lt;/span&gt;(),
            &lt;span class="pl-c1"&gt;sourceArray&lt;/span&gt;: jsonArray
        )
        &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; ...&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;    },
    &lt;span class="pl-c1"&gt;completion&lt;/span&gt;: { &lt;span class="pl-c1"&gt;_&lt;/span&gt; &lt;span class="pl-k"&gt;in&lt;/span&gt; }
)&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;As with &lt;code&gt;ImportableObject&lt;/code&gt;, you can control whether to skip importing an object by implementing
&lt;code&gt;shouldInsert(from:in:)&lt;/code&gt; and &lt;code&gt;shouldUpdate(from:in:)&lt;/code&gt;, or to cancel all objects by &lt;code&gt;throw&lt;/code&gt;ing an error from the &lt;code&gt;uniqueID(from:in:)&lt;/code&gt;, &lt;code&gt;didInsert(from:in:)&lt;/code&gt; or &lt;code&gt;update(from:in:)&lt;/code&gt; methods.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-fetching-and-querying" class="anchor" aria-hidden="true" href="#fetching-and-querying"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Fetching and Querying&lt;/h2&gt;
&lt;p&gt;Before we dive in, be aware that CoreStore distinguishes between &lt;em&gt;fetching&lt;/em&gt; and &lt;em&gt;querying&lt;/em&gt;:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;A &lt;em&gt;fetch&lt;/em&gt; executes searches from a specific &lt;em&gt;transaction&lt;/em&gt; or &lt;em&gt;data stack&lt;/em&gt;. This means fetches can include pending objects (i.e. before a transaction calls on &lt;code&gt;commit()&lt;/code&gt;.) Use fetches when:
&lt;ul&gt;
&lt;li&gt;results need to be &lt;code&gt;NSManagedObject&lt;/code&gt; or &lt;code&gt;CoreStoreObject&lt;/code&gt; instances&lt;/li&gt;
&lt;li&gt;unsaved objects should be included in the search (though fetches can be configured to exclude unsaved ones)&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;A &lt;em&gt;query&lt;/em&gt; pulls data straight from the persistent store. This means faster searches when computing aggregates such as &lt;em&gt;count&lt;/em&gt;, &lt;em&gt;min&lt;/em&gt;, &lt;em&gt;max&lt;/em&gt;, etc. Use queries when:
&lt;ul&gt;
&lt;li&gt;you need to compute aggregate functions (see below for a list of supported functions)&lt;/li&gt;
&lt;li&gt;results can be raw values like &lt;code&gt;NSString&lt;/code&gt;s, &lt;code&gt;NSNumber&lt;/code&gt;s, &lt;code&gt;Int&lt;/code&gt;s, &lt;code&gt;NSDate&lt;/code&gt;s, an &lt;code&gt;NSDictionary&lt;/code&gt; of key-values, or any type that conform to &lt;code&gt;QueryableAttributeType&lt;/code&gt;. (See &lt;em&gt;QueryableAttributeType.swift&lt;/em&gt; for a list of built-in types)&lt;/li&gt;
&lt;li&gt;only values for specified attribute keys need to be included in the results&lt;/li&gt;
&lt;li&gt;unsaved objects should be ignored&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h4&gt;&lt;a id="user-content-from-clause" class="anchor" aria-hidden="true" href="#from-clause"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;code&gt;From&lt;/code&gt; clause&lt;/h4&gt;
&lt;p&gt;The search conditions for fetches and queries are specified using &lt;em&gt;clauses&lt;/em&gt;. All fetches and queries require a &lt;code&gt;From&lt;/code&gt; clause that indicates the target entity type:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;let&lt;/span&gt; people &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-k"&gt;try&lt;/span&gt; dataStack.&lt;span class="pl-c1"&gt;fetchAll&lt;/span&gt;(From&lt;span class="pl-k"&gt;&amp;lt;&lt;/span&gt;MyPersonEntity&lt;span class="pl-k"&gt;&amp;gt;&lt;/span&gt;())&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;code&gt;people&lt;/code&gt; in the example above will be of type &lt;code&gt;[MyPersonEntity]&lt;/code&gt;. The &lt;code&gt;From&amp;lt;MyPersonEntity&amp;gt;()&lt;/code&gt; clause indicates a fetch to all persistent stores that &lt;code&gt;MyPersonEntity&lt;/code&gt; belong to.&lt;/p&gt;
&lt;p&gt;If the entity exists in multiple configurations and you need to only search from a particular configuration, indicate in the &lt;code&gt;From&lt;/code&gt; clause the configuration name for the destination persistent store:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;let&lt;/span&gt; people &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-k"&gt;try&lt;/span&gt; dataStack.&lt;span class="pl-c1"&gt;fetchAll&lt;/span&gt;(From&lt;span class="pl-k"&gt;&amp;lt;&lt;/span&gt;MyPersonEntity&lt;span class="pl-k"&gt;&amp;gt;&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;Config1&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)) &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; ignore objects in persistent stores other than the "Config1" configuration&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;or if the persistent store is the auto-generated "Default" configuration, specify &lt;code&gt;nil&lt;/code&gt;:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;let&lt;/span&gt; person &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-k"&gt;try&lt;/span&gt; dataStack.&lt;span class="pl-c1"&gt;fetchAll&lt;/span&gt;(From&lt;span class="pl-k"&gt;&amp;lt;&lt;/span&gt;MyPersonEntity&lt;span class="pl-k"&gt;&amp;gt;&lt;/span&gt;(&lt;span class="pl-c1"&gt;nil&lt;/span&gt;))&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Now we know how to use a &lt;code&gt;From&lt;/code&gt; clause, let's move on to fetching and querying.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-fetching" class="anchor" aria-hidden="true" href="#fetching"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Fetching&lt;/h3&gt;
&lt;p&gt;There are currently 5 fetch methods you can call from &lt;code&gt;CoreStore&lt;/code&gt;, from a &lt;code&gt;DataStack&lt;/code&gt; instance, or from a &lt;code&gt;BaseDataTransaction&lt;/code&gt; instance. All of the methods below accept the same parameters: a required &lt;code&gt;From&lt;/code&gt; clause, and an optional series of &lt;code&gt;Where&lt;/code&gt;, &lt;code&gt;OrderBy&lt;/code&gt;, and/or &lt;code&gt;Tweak&lt;/code&gt; clauses.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;fetchAll(...)&lt;/code&gt; - returns an array of all objects that match the criteria.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;fetchOne(...)&lt;/code&gt; - returns the first object that match the criteria.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;fetchCount(...)&lt;/code&gt; - returns the number of objects that match the criteria.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;fetchObjectIDs(...)&lt;/code&gt; - returns an array of &lt;code&gt;NSManagedObjectID&lt;/code&gt;s for all objects that match the criteria.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;fetchObjectID(...)&lt;/code&gt; - returns the &lt;code&gt;NSManagedObjectID&lt;/code&gt;s for the first objects that match the criteria.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Each method's purpose is straightforward, but we need to understand how to set the clauses for the fetch.&lt;/p&gt;
&lt;h4&gt;&lt;a id="user-content-where-clause" class="anchor" aria-hidden="true" href="#where-clause"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;code&gt;Where&lt;/code&gt; clause&lt;/h4&gt;
&lt;p&gt;The &lt;code&gt;Where&lt;/code&gt; clause is CoreStore's &lt;code&gt;NSPredicate&lt;/code&gt; wrapper. It specifies the search filter to use when fetching (or querying). It implements all initializers that &lt;code&gt;NSPredicate&lt;/code&gt; does (except for &lt;code&gt;-predicateWithBlock:&lt;/code&gt;, which Core Data does not support):&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;var&lt;/span&gt; people &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-k"&gt;try&lt;/span&gt; dataStack.&lt;span class="pl-c1"&gt;fetchAll&lt;/span&gt;(
    From&lt;span class="pl-k"&gt;&amp;lt;&lt;/span&gt;MyPersonEntity&lt;span class="pl-k"&gt;&amp;gt;&lt;/span&gt;(),
    Where&lt;span class="pl-k"&gt;&amp;lt;&lt;/span&gt;MyPersonEntity&lt;span class="pl-k"&gt;&amp;gt;&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;%K &amp;gt; %d&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;age&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-c1"&gt;30&lt;/span&gt;) &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; string format initializer&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;)
people &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-k"&gt;try&lt;/span&gt; dataStack.&lt;span class="pl-c1"&gt;fetchAll&lt;/span&gt;(
    From&lt;span class="pl-k"&gt;&amp;lt;&lt;/span&gt;MyPersonEntity&lt;span class="pl-k"&gt;&amp;gt;&lt;/span&gt;(),
    Where&lt;span class="pl-k"&gt;&amp;lt;&lt;/span&gt;MyPersonEntity&lt;span class="pl-k"&gt;&amp;gt;&lt;/span&gt;(&lt;span class="pl-c1"&gt;true&lt;/span&gt;) &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; boolean initializer&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;)&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;If you do have an existing &lt;code&gt;NSPredicate&lt;/code&gt; instance already, you can pass that to &lt;code&gt;Where&lt;/code&gt; as well:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;let&lt;/span&gt; predicate &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;NSPredicate&lt;/span&gt;(&lt;span class="pl-k"&gt;...&lt;/span&gt;)
&lt;span class="pl-k"&gt;var&lt;/span&gt; people &lt;span class="pl-k"&gt;=&lt;/span&gt; dataStack.&lt;span class="pl-c1"&gt;fetchAll&lt;/span&gt;(
    From&lt;span class="pl-k"&gt;&amp;lt;&lt;/span&gt;MyPersonEntity&lt;span class="pl-k"&gt;&amp;gt;&lt;/span&gt;(),
    Where&lt;span class="pl-k"&gt;&amp;lt;&lt;/span&gt;MyPersonEntity&lt;span class="pl-k"&gt;&amp;gt;&lt;/span&gt;(predicate) &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; predicate initializer&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;)&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;code&gt;Where&lt;/code&gt; clauses are generic types. To avoid verbose repetition of the generic object type, fetch methods support &lt;strong&gt;Fetch Chain builders&lt;/strong&gt;. We can also use Swift's Smart KeyPaths as the &lt;code&gt;Where&lt;/code&gt; clause expression:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;var&lt;/span&gt; people &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-k"&gt;try&lt;/span&gt; dataStack.&lt;span class="pl-c1"&gt;fetchAll&lt;/span&gt;(
    From&lt;span class="pl-k"&gt;&amp;lt;&lt;/span&gt;MyPersonEntity&lt;span class="pl-k"&gt;&amp;gt;&lt;/span&gt;()
        .&lt;span class="pl-c1"&gt;where&lt;/span&gt;(\.&lt;span class="pl-smi"&gt;age&lt;/span&gt; &lt;span class="pl-k"&gt;&amp;gt;&lt;/span&gt; &lt;span class="pl-c1"&gt;30&lt;/span&gt;) &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Type-safe!&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;)&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;code&gt;Where&lt;/code&gt; clauses also implement the &lt;code&gt;&amp;amp;&amp;amp;&lt;/code&gt;, &lt;code&gt;||&lt;/code&gt;, and &lt;code&gt;!&lt;/code&gt; logic operators, so you can provide logical conditions without writing too much &lt;code&gt;AND&lt;/code&gt;, &lt;code&gt;OR&lt;/code&gt;, and &lt;code&gt;NOT&lt;/code&gt; strings:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;var&lt;/span&gt; people &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-k"&gt;try&lt;/span&gt; dataStack.&lt;span class="pl-c1"&gt;fetchAll&lt;/span&gt;(
    From&lt;span class="pl-k"&gt;&amp;lt;&lt;/span&gt;MyPersonEntity&lt;span class="pl-k"&gt;&amp;gt;&lt;/span&gt;()
        .&lt;span class="pl-c1"&gt;where&lt;/span&gt;(\.&lt;span class="pl-smi"&gt;age&lt;/span&gt; &lt;span class="pl-k"&gt;&amp;gt;&lt;/span&gt; &lt;span class="pl-c1"&gt;30&lt;/span&gt; &lt;span class="pl-k"&gt;&amp;amp;&amp;amp;&lt;/span&gt; \.&lt;span class="pl-smi"&gt;gender&lt;/span&gt; &lt;span class="pl-k"&gt;==&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;M&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
)&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;If you do not provide a &lt;code&gt;Where&lt;/code&gt; clause, all objects that belong to the specified &lt;code&gt;From&lt;/code&gt; will be returned.&lt;/p&gt;
&lt;h4&gt;&lt;a id="user-content-orderby-clause" class="anchor" aria-hidden="true" href="#orderby-clause"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;code&gt;OrderBy&lt;/code&gt; clause&lt;/h4&gt;
&lt;p&gt;The &lt;code&gt;OrderBy&lt;/code&gt; clause is CoreStore's &lt;code&gt;NSSortDescriptor&lt;/code&gt; wrapper. Use it to specify attribute keys in which to sort the fetch (or query) results with.&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;var&lt;/span&gt; mostValuablePeople &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-k"&gt;try&lt;/span&gt; dataStack.&lt;span class="pl-c1"&gt;fetchAll&lt;/span&gt;(
    From&lt;span class="pl-k"&gt;&amp;lt;&lt;/span&gt;MyPersonEntity&lt;span class="pl-k"&gt;&amp;gt;&lt;/span&gt;(),
    OrderBy&lt;span class="pl-k"&gt;&amp;lt;&lt;/span&gt;MyPersonEntity&lt;span class="pl-k"&gt;&amp;gt;&lt;/span&gt;(.&lt;span class="pl-c1"&gt;descending&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;rating&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;), .&lt;span class="pl-c1"&gt;ascending&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;surname&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;))
)&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;As seen above, &lt;code&gt;OrderBy&lt;/code&gt; accepts a list of &lt;code&gt;SortKey&lt;/code&gt; enumeration values, which can be either &lt;code&gt;.ascending&lt;/code&gt; or &lt;code&gt;.descending&lt;/code&gt;.
As with &lt;code&gt;Where&lt;/code&gt; clauses, &lt;code&gt;OrderBy&lt;/code&gt; clauses are also generic types. To avoid verbose repetition of the generic object type, fetch methods support &lt;strong&gt;Fetch Chain builders&lt;/strong&gt;. We can also use Swift's Smart KeyPaths as the &lt;code&gt;OrderBy&lt;/code&gt; clause expression:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;var&lt;/span&gt; people &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-k"&gt;try&lt;/span&gt; dataStack.&lt;span class="pl-c1"&gt;fetchAll&lt;/span&gt;(
    From&lt;span class="pl-k"&gt;&amp;lt;&lt;/span&gt;MyPersonEntity&lt;span class="pl-k"&gt;&amp;gt;&lt;/span&gt;()
        .&lt;span class="pl-c1"&gt;orderBy&lt;/span&gt;(.&lt;span class="pl-c1"&gt;descending&lt;/span&gt;(\.&lt;span class="pl-smi"&gt;rating&lt;/span&gt;), .&lt;span class="pl-c1"&gt;ascending&lt;/span&gt;(\.&lt;span class="pl-smi"&gt;surname&lt;/span&gt;)) &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Type-safe!&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;)&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;You can use the &lt;code&gt;+&lt;/code&gt; and &lt;code&gt;+=&lt;/code&gt; operator to append &lt;code&gt;OrderBy&lt;/code&gt;s together. This is useful when sorting conditionally:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;var&lt;/span&gt; orderBy &lt;span class="pl-k"&gt;=&lt;/span&gt; OrderBy&lt;span class="pl-k"&gt;&amp;lt;&lt;/span&gt;MyPersonEntity&lt;span class="pl-k"&gt;&amp;gt;&lt;/span&gt;(.&lt;span class="pl-c1"&gt;descending&lt;/span&gt;(\.&lt;span class="pl-smi"&gt;rating&lt;/span&gt;))
&lt;span class="pl-k"&gt;if&lt;/span&gt; sortFromYoungest {
    orderBy &lt;span class="pl-k"&gt;+=&lt;/span&gt; &lt;span class="pl-c1"&gt;OrderBy&lt;/span&gt;(.&lt;span class="pl-c1"&gt;ascending&lt;/span&gt;(\.&lt;span class="pl-smi"&gt;age&lt;/span&gt;))
}
&lt;span class="pl-k"&gt;var&lt;/span&gt; mostValuablePeople &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-k"&gt;try&lt;/span&gt; dataStack.&lt;span class="pl-c1"&gt;fetchAll&lt;/span&gt;(
    From&lt;span class="pl-k"&gt;&amp;lt;&lt;/span&gt;MyPersonEntity&lt;span class="pl-k"&gt;&amp;gt;&lt;/span&gt;(),
    orderBy
)&lt;/pre&gt;&lt;/div&gt;
&lt;h4&gt;&lt;a id="user-content-tweak-clause" class="anchor" aria-hidden="true" href="#tweak-clause"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;code&gt;Tweak&lt;/code&gt; clause&lt;/h4&gt;
&lt;p&gt;The &lt;code&gt;Tweak&lt;/code&gt; clause lets you, uh, &lt;em&gt;tweak&lt;/em&gt; the fetch (or query). &lt;code&gt;Tweak&lt;/code&gt; exposes the &lt;code&gt;NSFetchRequest&lt;/code&gt; in a closure where you can make changes to its properties:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;var&lt;/span&gt; people &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-k"&gt;try&lt;/span&gt; dataStack.&lt;span class="pl-c1"&gt;fetchAll&lt;/span&gt;(
    From&lt;span class="pl-k"&gt;&amp;lt;&lt;/span&gt;MyPersonEntity&lt;span class="pl-k"&gt;&amp;gt;&lt;/span&gt;(),
    Where&lt;span class="pl-k"&gt;&amp;lt;&lt;/span&gt;MyPersonEntity&lt;span class="pl-k"&gt;&amp;gt;&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;age &amp;gt; %d&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-c1"&gt;30&lt;/span&gt;),
    OrderBy&lt;span class="pl-k"&gt;&amp;lt;&lt;/span&gt;MyPersonEntity&lt;span class="pl-k"&gt;&amp;gt;&lt;/span&gt;(.&lt;span class="pl-c1"&gt;ascending&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;surname&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)),
    Tweak { (fetchRequest) &lt;span class="pl-k"&gt;-&amp;gt;&lt;/span&gt; &lt;span class="pl-c1"&gt;Void&lt;/span&gt; &lt;span class="pl-k"&gt;in&lt;/span&gt;
        fetchRequest.&lt;span class="pl-smi"&gt;includesPendingChanges&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;false&lt;/span&gt;
        fetchRequest.&lt;span class="pl-smi"&gt;returnsObjectsAsFaults&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;false&lt;/span&gt;
        fetchRequest.&lt;span class="pl-smi"&gt;includesSubentities&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;false&lt;/span&gt;
    }
)&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;code&gt;Tweak&lt;/code&gt; also supports &lt;strong&gt;Fetch Chain builders&lt;/strong&gt;:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;var&lt;/span&gt; people &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-k"&gt;try&lt;/span&gt; dataStack.&lt;span class="pl-c1"&gt;fetchAll&lt;/span&gt;(
    From&lt;span class="pl-k"&gt;&amp;lt;&lt;/span&gt;MyPersonEntity&lt;span class="pl-k"&gt;&amp;gt;&lt;/span&gt;(),
        .&lt;span class="pl-c1"&gt;where&lt;/span&gt;(\.&lt;span class="pl-smi"&gt;age&lt;/span&gt; &lt;span class="pl-k"&gt;&amp;gt;&lt;/span&gt; &lt;span class="pl-c1"&gt;30&lt;/span&gt;)
        .&lt;span class="pl-c1"&gt;orderBy&lt;/span&gt;(.&lt;span class="pl-c1"&gt;ascending&lt;/span&gt;(\.&lt;span class="pl-smi"&gt;surname&lt;/span&gt;))
        .&lt;span class="pl-smi"&gt;tweak&lt;/span&gt; {
            &lt;span class="pl-c1"&gt;$0&lt;/span&gt;.&lt;span class="pl-smi"&gt;includesPendingChanges&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;false&lt;/span&gt;
            &lt;span class="pl-c1"&gt;$0&lt;/span&gt;.&lt;span class="pl-smi"&gt;returnsObjectsAsFaults&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;false&lt;/span&gt;
            &lt;span class="pl-c1"&gt;$0&lt;/span&gt;.&lt;span class="pl-smi"&gt;includesSubentities&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;false&lt;/span&gt;
        }
)&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;The clauses are evaluated the order they appear in the fetch/query, so you typically need to set &lt;code&gt;Tweak&lt;/code&gt; as the last clause.
&lt;code&gt;Tweak&lt;/code&gt;'s closure is executed only just before the fetch occurs, so make sure that any values captured by the closure is not prone to race conditions.&lt;/p&gt;
&lt;p&gt;While &lt;code&gt;Tweak&lt;/code&gt; lets you micro-configure the &lt;code&gt;NSFetchRequest&lt;/code&gt;, note that CoreStore already preconfigured that &lt;code&gt;NSFetchRequest&lt;/code&gt; to suitable defaults. Only use &lt;code&gt;Tweak&lt;/code&gt; when you know what you are doing!&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-querying" class="anchor" aria-hidden="true" href="#querying"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Querying&lt;/h3&gt;
&lt;p&gt;One of the functionalities overlooked by other Core Data wrapper libraries is raw properties fetching. If you are familiar with &lt;code&gt;NSDictionaryResultType&lt;/code&gt; and &lt;code&gt;-[NSFetchedRequest propertiesToFetch]&lt;/code&gt;, you probably know how painful it is to setup a query for raw values and aggregate values. CoreStore makes this easy by exposing the 2 methods below:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;queryValue(...)&lt;/code&gt; - returns a single raw value for an attribute or for an aggregate value. If there are multiple results, &lt;code&gt;queryValue(...)&lt;/code&gt; only returns the first item.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;queryAttributes(...)&lt;/code&gt; - returns an array of dictionaries containing attribute keys with their corresponding values.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Both methods above accept the same parameters: a required &lt;code&gt;From&lt;/code&gt; clause, a required &lt;code&gt;Select&amp;lt;T&amp;gt;&lt;/code&gt; clause, and an optional series of &lt;code&gt;Where&lt;/code&gt;, &lt;code&gt;OrderBy&lt;/code&gt;, &lt;code&gt;GroupBy&lt;/code&gt;, and/or &lt;code&gt;Tweak&lt;/code&gt; clauses.&lt;/p&gt;
&lt;p&gt;Setting up the &lt;code&gt;From&lt;/code&gt;, &lt;code&gt;Where&lt;/code&gt;, &lt;code&gt;OrderBy&lt;/code&gt;, and &lt;code&gt;Tweak&lt;/code&gt; clauses is similar to how you would when fetching. For querying, you also need to know how to use the &lt;code&gt;Select&amp;lt;T&amp;gt;&lt;/code&gt; and &lt;code&gt;GroupBy&lt;/code&gt; clauses.&lt;/p&gt;
&lt;h4&gt;&lt;a id="user-content-selectt-clause" class="anchor" aria-hidden="true" href="#selectt-clause"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;code&gt;Select&amp;lt;T&amp;gt;&lt;/code&gt; clause&lt;/h4&gt;
&lt;p&gt;The &lt;code&gt;Select&amp;lt;T&amp;gt;&lt;/code&gt; clause specifies the target attribute/aggregate key, as well as the expected return type:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;let&lt;/span&gt; johnsAge &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-k"&gt;try&lt;/span&gt; dataStack.&lt;span class="pl-c1"&gt;queryValue&lt;/span&gt;(
    From&lt;span class="pl-k"&gt;&amp;lt;&lt;/span&gt;MyPersonEntity&lt;span class="pl-k"&gt;&amp;gt;&lt;/span&gt;(),
    Select&lt;span class="pl-k"&gt;&amp;lt;&lt;/span&gt;&lt;span class="pl-c1"&gt;Int&lt;/span&gt;&lt;span class="pl-k"&gt;&amp;gt;&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;age&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;),
    Where&lt;span class="pl-k"&gt;&amp;lt;&lt;/span&gt;MyPersonEntity&lt;span class="pl-k"&gt;&amp;gt;&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;name == %@&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;John Smith&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
)&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;The example above queries the "age" property for the first object that matches the &lt;code&gt;Where&lt;/code&gt; condition. &lt;code&gt;johnsAge&lt;/code&gt; will be bound to type &lt;code&gt;Int?&lt;/code&gt;, as indicated by the &lt;code&gt;Select&amp;lt;Int&amp;gt;&lt;/code&gt; generic type. For &lt;code&gt;queryValue(...)&lt;/code&gt;, types that conform to &lt;code&gt;QueryableAttributeType&lt;/code&gt; are allowed as the return type (and therefore as the generic type for &lt;code&gt;Select&amp;lt;T&amp;gt;&lt;/code&gt;).&lt;/p&gt;
&lt;p&gt;For &lt;code&gt;queryAttributes(...)&lt;/code&gt;, only &lt;code&gt;NSDictionary&lt;/code&gt; is valid for &lt;code&gt;Select&lt;/code&gt;, thus you are allowed to omit the generic type:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;let&lt;/span&gt; allAges &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-k"&gt;try&lt;/span&gt; dataStack.&lt;span class="pl-c1"&gt;queryAttributes&lt;/span&gt;(
    From&lt;span class="pl-k"&gt;&amp;lt;&lt;/span&gt;MyPersonEntity&lt;span class="pl-k"&gt;&amp;gt;&lt;/span&gt;(),
    &lt;span class="pl-c1"&gt;Select&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;age&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
)&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;query methods also support &lt;strong&gt;Query Chain builders&lt;/strong&gt;. We can also use Swift's Smart KeyPaths to use in the expressions:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;let&lt;/span&gt; johnsAge &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-k"&gt;try&lt;/span&gt; dataStack.&lt;span class="pl-c1"&gt;queryValue&lt;/span&gt;(
    From&lt;span class="pl-k"&gt;&amp;lt;&lt;/span&gt;MyPersonEntity&lt;span class="pl-k"&gt;&amp;gt;&lt;/span&gt;()
        .&lt;span class="pl-c1"&gt;select&lt;/span&gt;(\.&lt;span class="pl-smi"&gt;age&lt;/span&gt;) &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; binds the result to Int&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;        .&lt;span class="pl-c1"&gt;where&lt;/span&gt;(\.&lt;span class="pl-smi"&gt;name&lt;/span&gt; &lt;span class="pl-k"&gt;==&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;John Smith&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
)&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;If you only need a value for a particular attribute, you can just specify the key name (like we did with &lt;code&gt;Select&amp;lt;Int&amp;gt;("age")&lt;/code&gt;), but several aggregate functions can also be used as parameter to &lt;code&gt;Select&lt;/code&gt;:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;.average(...)&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;.count(...)&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;.maximum(...)&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;.minimum(...)&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;.sum(...)&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;let&lt;/span&gt; oldestAge &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-k"&gt;try&lt;/span&gt; dataStack.&lt;span class="pl-c1"&gt;queryValue&lt;/span&gt;(
    From&lt;span class="pl-k"&gt;&amp;lt;&lt;/span&gt;MyPersonEntity&lt;span class="pl-k"&gt;&amp;gt;&lt;/span&gt;(),
    Select&lt;span class="pl-k"&gt;&amp;lt;&lt;/span&gt;&lt;span class="pl-c1"&gt;Int&lt;/span&gt;&lt;span class="pl-k"&gt;&amp;gt;&lt;/span&gt;(.&lt;span class="pl-c1"&gt;maximum&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;age&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;))
)&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;For &lt;code&gt;queryAttributes(...)&lt;/code&gt; which returns an array of dictionaries, you can specify multiple attributes/aggregates to &lt;code&gt;Select&lt;/code&gt;:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;let&lt;/span&gt; personJSON &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-k"&gt;try&lt;/span&gt; dataStack.&lt;span class="pl-c1"&gt;queryAttributes&lt;/span&gt;(
    From&lt;span class="pl-k"&gt;&amp;lt;&lt;/span&gt;MyPersonEntity&lt;span class="pl-k"&gt;&amp;gt;&lt;/span&gt;(),
    &lt;span class="pl-c1"&gt;Select&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;name&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;age&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
)&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;code&gt;personJSON&lt;/code&gt; will then have the value:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;[
    [
        &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;name&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;&lt;span class="pl-k"&gt;:&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;John Smith&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;,
        &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;age&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;&lt;span class="pl-k"&gt;:&lt;/span&gt; &lt;span class="pl-c1"&gt;30&lt;/span&gt;
    ],
    [
        &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;name&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;&lt;span class="pl-k"&gt;:&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;Jane Doe&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;,
        &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;age&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;&lt;span class="pl-k"&gt;:&lt;/span&gt; &lt;span class="pl-c1"&gt;22&lt;/span&gt;
    ]
]&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;You can also include an aggregate as well:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;let&lt;/span&gt; personJSON &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-k"&gt;try&lt;/span&gt; dataStack.&lt;span class="pl-c1"&gt;queryAttributes&lt;/span&gt;(
    From&lt;span class="pl-k"&gt;&amp;lt;&lt;/span&gt;MyPersonEntity&lt;span class="pl-k"&gt;&amp;gt;&lt;/span&gt;(),
    &lt;span class="pl-c1"&gt;Select&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;name&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, .&lt;span class="pl-c1"&gt;count&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;friends&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;))
)&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;which returns:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;[
    [
        &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;name&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;&lt;span class="pl-k"&gt;:&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;John Smith&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;,
        &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;count(friends)&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;&lt;span class="pl-k"&gt;:&lt;/span&gt; &lt;span class="pl-c1"&gt;42&lt;/span&gt;
    ],
    [
        &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;name&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;&lt;span class="pl-k"&gt;:&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;Jane Doe&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;,
        &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;count(friends)&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;&lt;span class="pl-k"&gt;:&lt;/span&gt; &lt;span class="pl-c1"&gt;231&lt;/span&gt;
    ]
]&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;The &lt;code&gt;"count(friends)"&lt;/code&gt; key name was automatically used by CoreStore, but you can specify your own key alias if you need:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;let&lt;/span&gt; personJSON &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-k"&gt;try&lt;/span&gt; dataStack.&lt;span class="pl-c1"&gt;queryAttributes&lt;/span&gt;(
    From&lt;span class="pl-k"&gt;&amp;lt;&lt;/span&gt;MyPersonEntity&lt;span class="pl-k"&gt;&amp;gt;&lt;/span&gt;(),
    &lt;span class="pl-c1"&gt;Select&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;name&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, .&lt;span class="pl-c1"&gt;count&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;friends&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-c1"&gt;as&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;friendsCount&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;))
)&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;which now returns:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;[
    [
        &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;name&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;&lt;span class="pl-k"&gt;:&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;John Smith&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;,
        &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;friendsCount&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;&lt;span class="pl-k"&gt;:&lt;/span&gt; &lt;span class="pl-c1"&gt;42&lt;/span&gt;
    ],
    [
        &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;name&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;&lt;span class="pl-k"&gt;:&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;Jane Doe&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;,
        &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;friendsCount&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;&lt;span class="pl-k"&gt;:&lt;/span&gt; &lt;span class="pl-c1"&gt;231&lt;/span&gt;
    ]
]&lt;/pre&gt;&lt;/div&gt;
&lt;h4&gt;&lt;a id="user-content-groupby-clause" class="anchor" aria-hidden="true" href="#groupby-clause"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;code&gt;GroupBy&lt;/code&gt; clause&lt;/h4&gt;
&lt;p&gt;The &lt;code&gt;GroupBy&lt;/code&gt; clause lets you group results by a specified attribute/aggregate. This is useful only for &lt;code&gt;queryAttributes(...)&lt;/code&gt; since &lt;code&gt;queryValue(...)&lt;/code&gt; just returns the first value.&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;let&lt;/span&gt; personJSON &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-k"&gt;try&lt;/span&gt; dataStack.&lt;span class="pl-c1"&gt;queryAttributes&lt;/span&gt;(
    From&lt;span class="pl-k"&gt;&amp;lt;&lt;/span&gt;MyPersonEntity&lt;span class="pl-k"&gt;&amp;gt;&lt;/span&gt;(),
    &lt;span class="pl-c1"&gt;Select&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;age&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, .&lt;span class="pl-c1"&gt;count&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;age&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-c1"&gt;as&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;count&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)),
    &lt;span class="pl-c1"&gt;GroupBy&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;age&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
)&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;code&gt;GroupBy&lt;/code&gt; clauses are also generic types and support &lt;strong&gt;Query Chain builders&lt;/strong&gt;. We can also use Swift's Smart KeyPaths to use in the expressions:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;let&lt;/span&gt; personJSON &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-k"&gt;try&lt;/span&gt; dataStack.&lt;span class="pl-c1"&gt;queryAttributes&lt;/span&gt;(
    From&lt;span class="pl-k"&gt;&amp;lt;&lt;/span&gt;MyPersonEntity&lt;span class="pl-k"&gt;&amp;gt;&lt;/span&gt;()
        .&lt;span class="pl-c1"&gt;select&lt;/span&gt;(.&lt;span class="pl-c1"&gt;attribute&lt;/span&gt;(\.&lt;span class="pl-smi"&gt;age&lt;/span&gt;), .&lt;span class="pl-c1"&gt;count&lt;/span&gt;(\.&lt;span class="pl-smi"&gt;age&lt;/span&gt;, &lt;span class="pl-c1"&gt;as&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;count&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;))
        .&lt;span class="pl-c1"&gt;groupBy&lt;/span&gt;(\.&lt;span class="pl-smi"&gt;age&lt;/span&gt;)
)&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;this returns dictionaries that shows the count for each &lt;code&gt;"age"&lt;/code&gt;:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;[
    [
        &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;age&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;&lt;span class="pl-k"&gt;:&lt;/span&gt; &lt;span class="pl-c1"&gt;42&lt;/span&gt;,
        &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;count&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;&lt;span class="pl-k"&gt;:&lt;/span&gt; &lt;span class="pl-c1"&gt;1&lt;/span&gt;
    ],
    [
        &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;age&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;&lt;span class="pl-k"&gt;:&lt;/span&gt; &lt;span class="pl-c1"&gt;22&lt;/span&gt;,
        &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;count&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;&lt;span class="pl-k"&gt;:&lt;/span&gt; &lt;span class="pl-c1"&gt;1&lt;/span&gt;
    ]
]&lt;/pre&gt;&lt;/div&gt;
&lt;h2&gt;&lt;a id="user-content-logging-and-error-reporting" class="anchor" aria-hidden="true" href="#logging-and-error-reporting"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Logging and error reporting&lt;/h2&gt;
&lt;p&gt;One unfortunate thing when using some third-party libraries is that they usually pollute the console with their own logging mechanisms. CoreStore provides its own default logging class, but you can plug-in your own favorite logger by implementing the &lt;code&gt;CoreStoreLogger&lt;/code&gt; protocol.&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;public&lt;/span&gt; &lt;span class="pl-k"&gt;protocol&lt;/span&gt; &lt;span class="pl-en"&gt;CoreStoreLogger&lt;/span&gt; {
    &lt;span class="pl-k"&gt;func&lt;/span&gt; &lt;span class="pl-en"&gt;log&lt;/span&gt;(&lt;span class="pl-en"&gt;level&lt;/span&gt; &lt;span class="pl-smi"&gt;level&lt;/span&gt;: LogLevel, &lt;span class="pl-smi"&gt;&lt;span class="pl-en"&gt;message&lt;/span&gt;&lt;/span&gt;: &lt;span class="pl-c1"&gt;String&lt;/span&gt;, &lt;span class="pl-smi"&gt;&lt;span class="pl-en"&gt;fileName&lt;/span&gt;&lt;/span&gt;: &lt;span class="pl-c1"&gt;StaticString&lt;/span&gt;, &lt;span class="pl-smi"&gt;&lt;span class="pl-en"&gt;lineNumber&lt;/span&gt;&lt;/span&gt;: &lt;span class="pl-c1"&gt;Int&lt;/span&gt;, &lt;span class="pl-smi"&gt;&lt;span class="pl-en"&gt;functionName&lt;/span&gt;&lt;/span&gt;: &lt;span class="pl-c1"&gt;StaticString&lt;/span&gt;)
    &lt;span class="pl-k"&gt;func&lt;/span&gt; &lt;span class="pl-en"&gt;log&lt;/span&gt;(&lt;span class="pl-en"&gt;error&lt;/span&gt; &lt;span class="pl-smi"&gt;error&lt;/span&gt;: CoreStoreError, &lt;span class="pl-smi"&gt;&lt;span class="pl-en"&gt;message&lt;/span&gt;&lt;/span&gt;: &lt;span class="pl-c1"&gt;String&lt;/span&gt;, &lt;span class="pl-smi"&gt;&lt;span class="pl-en"&gt;fileName&lt;/span&gt;&lt;/span&gt;: &lt;span class="pl-c1"&gt;StaticString&lt;/span&gt;, &lt;span class="pl-smi"&gt;&lt;span class="pl-en"&gt;lineNumber&lt;/span&gt;&lt;/span&gt;: &lt;span class="pl-c1"&gt;Int&lt;/span&gt;, &lt;span class="pl-smi"&gt;&lt;span class="pl-en"&gt;functionName&lt;/span&gt;&lt;/span&gt;: &lt;span class="pl-c1"&gt;StaticString&lt;/span&gt;)
    &lt;span class="pl-k"&gt;func&lt;/span&gt; &lt;span class="pl-en"&gt;assert&lt;/span&gt;(@&lt;span class="pl-en"&gt;autoclosure&lt;/span&gt; &lt;span class="pl-smi"&gt;condition&lt;/span&gt;: () &lt;span class="pl-k"&gt;-&amp;gt;&lt;/span&gt; &lt;span class="pl-c1"&gt;Bool&lt;/span&gt;, @&lt;span class="pl-en"&gt;autoclosure&lt;/span&gt; &lt;span class="pl-smi"&gt;message&lt;/span&gt;: () &lt;span class="pl-k"&gt;-&amp;gt;&lt;/span&gt; &lt;span class="pl-c1"&gt;String&lt;/span&gt;, &lt;span class="pl-smi"&gt;&lt;span class="pl-en"&gt;fileName&lt;/span&gt;&lt;/span&gt;: &lt;span class="pl-c1"&gt;StaticString&lt;/span&gt;, &lt;span class="pl-smi"&gt;&lt;span class="pl-en"&gt;lineNumber&lt;/span&gt;&lt;/span&gt;: &lt;span class="pl-c1"&gt;Int&lt;/span&gt;, &lt;span class="pl-smi"&gt;&lt;span class="pl-en"&gt;functionName&lt;/span&gt;&lt;/span&gt;: &lt;span class="pl-c1"&gt;StaticString&lt;/span&gt;)
    &lt;span class="pl-k"&gt;func&lt;/span&gt; &lt;span class="pl-en"&gt;abort&lt;/span&gt;(&lt;span class="pl-smi"&gt;&lt;span class="pl-en"&gt;message&lt;/span&gt;&lt;/span&gt;: &lt;span class="pl-c1"&gt;String&lt;/span&gt;, &lt;span class="pl-smi"&gt;&lt;span class="pl-en"&gt;fileName&lt;/span&gt;&lt;/span&gt;: &lt;span class="pl-c1"&gt;StaticString&lt;/span&gt;, &lt;span class="pl-smi"&gt;&lt;span class="pl-en"&gt;lineNumber&lt;/span&gt;&lt;/span&gt;: &lt;span class="pl-c1"&gt;Int&lt;/span&gt;, &lt;span class="pl-smi"&gt;&lt;span class="pl-en"&gt;functionName&lt;/span&gt;&lt;/span&gt;: &lt;span class="pl-c1"&gt;StaticString&lt;/span&gt;)
}&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Implement this protocol with your custom class then pass the instance to &lt;code&gt;CoreStoreDefaults.logger&lt;/code&gt;:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;CoreStoreDefaults.&lt;span class="pl-smi"&gt;logger&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;MyLogger&lt;/span&gt;()&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Doing so channels all logging calls to your logger.&lt;/p&gt;
&lt;p&gt;Note that to keep the call stack information intact, all calls to these methods are &lt;strong&gt;NOT&lt;/strong&gt; thread-managed. Therefore you have to make sure that your logger is thread-safe or you may otherwise have to dispatch your logging implementation to a serial queue.&lt;/p&gt;
&lt;p&gt;Take special care when implementing &lt;code&gt;CoreStoreLogger&lt;/code&gt;'s &lt;code&gt;assert(...)&lt;/code&gt; and &lt;code&gt;abort(...)&lt;/code&gt; functions:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;assert(...)&lt;/code&gt;: The behavior between &lt;code&gt;DEBUG&lt;/code&gt; and release builds, or &lt;code&gt;-O&lt;/code&gt; and &lt;code&gt;-Onone&lt;/code&gt;, are all left to the implementers' responsibility. CoreStore calls &lt;code&gt;CoreStoreLogger.assert(...)&lt;/code&gt; only for invalid but usually recoverable errors (for example, early validation failures that may cause an error thrown and handled somewhere else)&lt;/li&gt;
&lt;li&gt;&lt;code&gt;abort(...)&lt;/code&gt;: This method is &lt;em&gt;the&lt;/em&gt; last-chance for your app to &lt;em&gt;synchronously&lt;/em&gt; log a fatal error within CoreStore. The app will be terminated right after this function is called (CoreStore calls &lt;code&gt;fatalError()&lt;/code&gt; internally)&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;All CoreStore types have very useful (and pretty formatted!) &lt;code&gt;print(...)&lt;/code&gt; outputs.
A couple of examples, &lt;code&gt;ListMonitor&lt;/code&gt;:&lt;/p&gt;
&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="https://cloud.githubusercontent.com/assets/3029684/16713994/ae06e702-46f1-11e6-83a8-dee48b480bab.png"&gt;&lt;img width="369" alt="screen shot 2016-07-10 at 22 56 44" src="https://cloud.githubusercontent.com/assets/3029684/16713994/ae06e702-46f1-11e6-83a8-dee48b480bab.png" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;code&gt;CoreStoreError.mappingModelNotFoundError&lt;/code&gt;:&lt;/p&gt;
&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="https://cloud.githubusercontent.com/assets/3029684/16713962/e021f548-46f0-11e6-8100-f9b5ea6b4a08.png"&gt;&lt;img width="506" alt="MappingModelNotFoundError" src="https://cloud.githubusercontent.com/assets/3029684/16713962/e021f548-46f0-11e6-8100-f9b5ea6b4a08.png" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;These are all implemented with &lt;code&gt;CustomDebugStringConvertible.debugDescription&lt;/code&gt;, so they work with lldb's &lt;code&gt;po&lt;/code&gt; command as well.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-observing-changes-and-notifications" class="anchor" aria-hidden="true" href="#observing-changes-and-notifications"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Observing changes and notifications&lt;/h2&gt;
&lt;p&gt;CoreStore provides type-safe wrappers for observing managed objects:&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;&lt;/th&gt;
&lt;th&gt;&lt;g-emoji class="g-emoji" alias="new" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f195.png"&gt;🆕&lt;/g-emoji&gt;&lt;a href="#observe-a-single-objects-updates"&gt;&lt;em&gt;ObjectPublisher&lt;/em&gt;&lt;/a&gt;&lt;/th&gt;
&lt;th&gt;&lt;a href="#observe-a-single-objects-per-property-updates"&gt;&lt;em&gt;ObjectMonitor&lt;/em&gt;&lt;/a&gt;&lt;/th&gt;
&lt;th&gt;&lt;g-emoji class="g-emoji" alias="new" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f195.png"&gt;🆕&lt;/g-emoji&gt;&lt;a href="#observe-a-diffable-list"&gt;&lt;em&gt;ListPublisher&lt;/em&gt;&lt;/a&gt;&lt;/th&gt;
&lt;th&gt;&lt;a href="#observe-detailed-list-changes"&gt;&lt;em&gt;ListMonitor&lt;/em&gt;&lt;/a&gt;&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;em&gt;Number of objects&lt;/em&gt;&lt;/td&gt;
&lt;td&gt;1&lt;/td&gt;
&lt;td&gt;1&lt;/td&gt;
&lt;td&gt;N&lt;/td&gt;
&lt;td&gt;N&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;em&gt;Allows multiple observers&lt;/em&gt;&lt;/td&gt;
&lt;td&gt;&lt;g-emoji class="g-emoji" alias="white_check_mark" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/2705.png"&gt;✅&lt;/g-emoji&gt;&lt;/td&gt;
&lt;td&gt;&lt;g-emoji class="g-emoji" alias="white_check_mark" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/2705.png"&gt;✅&lt;/g-emoji&gt;&lt;/td&gt;
&lt;td&gt;&lt;g-emoji class="g-emoji" alias="white_check_mark" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/2705.png"&gt;✅&lt;/g-emoji&gt;&lt;/td&gt;
&lt;td&gt;&lt;g-emoji class="g-emoji" alias="white_check_mark" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/2705.png"&gt;✅&lt;/g-emoji&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;em&gt;Emits fine-grained changes&lt;/em&gt;&lt;/td&gt;
&lt;td&gt;&lt;g-emoji class="g-emoji" alias="x" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/274c.png"&gt;❌&lt;/g-emoji&gt;&lt;/td&gt;
&lt;td&gt;&lt;g-emoji class="g-emoji" alias="white_check_mark" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/2705.png"&gt;✅&lt;/g-emoji&gt;&lt;/td&gt;
&lt;td&gt;&lt;g-emoji class="g-emoji" alias="x" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/274c.png"&gt;❌&lt;/g-emoji&gt;&lt;/td&gt;
&lt;td&gt;&lt;g-emoji class="g-emoji" alias="white_check_mark" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/2705.png"&gt;✅&lt;/g-emoji&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;em&gt;Emits DiffableDataSource snapshots&lt;/em&gt;&lt;/td&gt;
&lt;td&gt;&lt;g-emoji class="g-emoji" alias="white_check_mark" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/2705.png"&gt;✅&lt;/g-emoji&gt;&lt;/td&gt;
&lt;td&gt;&lt;g-emoji class="g-emoji" alias="x" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/274c.png"&gt;❌&lt;/g-emoji&gt;&lt;/td&gt;
&lt;td&gt;&lt;g-emoji class="g-emoji" alias="white_check_mark" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/2705.png"&gt;✅&lt;/g-emoji&gt;&lt;/td&gt;
&lt;td&gt;&lt;g-emoji class="g-emoji" alias="x" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/274c.png"&gt;❌&lt;/g-emoji&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;em&gt;Delegate methods&lt;/em&gt;&lt;/td&gt;
&lt;td&gt;&lt;g-emoji class="g-emoji" alias="x" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/274c.png"&gt;❌&lt;/g-emoji&gt;&lt;/td&gt;
&lt;td&gt;&lt;g-emoji class="g-emoji" alias="white_check_mark" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/2705.png"&gt;✅&lt;/g-emoji&gt;&lt;/td&gt;
&lt;td&gt;&lt;g-emoji class="g-emoji" alias="x" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/274c.png"&gt;❌&lt;/g-emoji&gt;&lt;/td&gt;
&lt;td&gt;&lt;g-emoji class="g-emoji" alias="white_check_mark" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/2705.png"&gt;✅&lt;/g-emoji&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;em&gt;Closure callback&lt;/em&gt;&lt;/td&gt;
&lt;td&gt;&lt;g-emoji class="g-emoji" alias="white_check_mark" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/2705.png"&gt;✅&lt;/g-emoji&gt;&lt;/td&gt;
&lt;td&gt;&lt;g-emoji class="g-emoji" alias="x" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/274c.png"&gt;❌&lt;/g-emoji&gt;&lt;/td&gt;
&lt;td&gt;&lt;g-emoji class="g-emoji" alias="white_check_mark" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/2705.png"&gt;✅&lt;/g-emoji&gt;&lt;/td&gt;
&lt;td&gt;&lt;g-emoji class="g-emoji" alias="x" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/274c.png"&gt;❌&lt;/g-emoji&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;em&gt;SwiftUI support&lt;/em&gt;&lt;/td&gt;
&lt;td&gt;&lt;g-emoji class="g-emoji" alias="white_check_mark" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/2705.png"&gt;✅&lt;/g-emoji&gt;&lt;/td&gt;
&lt;td&gt;&lt;g-emoji class="g-emoji" alias="x" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/274c.png"&gt;❌&lt;/g-emoji&gt;&lt;/td&gt;
&lt;td&gt;&lt;g-emoji class="g-emoji" alias="white_check_mark" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/2705.png"&gt;✅&lt;/g-emoji&gt;&lt;/td&gt;
&lt;td&gt;&lt;g-emoji class="g-emoji" alias="x" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/274c.png"&gt;❌&lt;/g-emoji&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h3&gt;&lt;a id="user-content-observe-a-single-property" class="anchor" aria-hidden="true" href="#observe-a-single-property"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Observe a single property&lt;/h3&gt;
&lt;p&gt;To get notifications for single property changes in an object, there are two methods depending on the object's base class.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;For &lt;code&gt;NSManagedObject&lt;/code&gt; subclasses: Use the standard KVO method:&lt;/li&gt;
&lt;/ul&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;let&lt;/span&gt; observer &lt;span class="pl-k"&gt;=&lt;/span&gt; person.&lt;span class="pl-c1"&gt;observe&lt;/span&gt;(\.&lt;span class="pl-smi"&gt;age&lt;/span&gt;, &lt;span class="pl-c1"&gt;options&lt;/span&gt;: [.&lt;span class="pl-smi"&gt;new&lt;/span&gt;]) { (person, change)
    &lt;span class="pl-c1"&gt;print&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;Happy &lt;span class="pl-pse"&gt;\(&lt;/span&gt;&lt;span class="pl-s1"&gt;change.&lt;span class="pl-smi"&gt;newValue&lt;/span&gt;&lt;/span&gt;&lt;span class="pl-pse"&gt;&lt;span class="pl-s1"&gt;)&lt;/span&gt;&lt;/span&gt;th birthday!&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
}&lt;/pre&gt;&lt;/div&gt;
&lt;ul&gt;
&lt;li&gt;For &lt;code&gt;CoreStoreObject&lt;/code&gt; subclasses: Call the &lt;code&gt;observe(...)&lt;/code&gt; method directly on the property. You'll notice that the API itself is a bit similar to the KVO method:&lt;/li&gt;
&lt;/ul&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;let&lt;/span&gt; observer &lt;span class="pl-k"&gt;=&lt;/span&gt; person.&lt;span class="pl-smi"&gt;age&lt;/span&gt;.&lt;span class="pl-c1"&gt;observe&lt;/span&gt;(&lt;span class="pl-c1"&gt;options&lt;/span&gt;: [.&lt;span class="pl-smi"&gt;new&lt;/span&gt;]) { (person, change)
    &lt;span class="pl-c1"&gt;print&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;Happy &lt;span class="pl-pse"&gt;\(&lt;/span&gt;&lt;span class="pl-s1"&gt;change.&lt;span class="pl-smi"&gt;newValue&lt;/span&gt;&lt;/span&gt;&lt;span class="pl-pse"&gt;&lt;span class="pl-s1"&gt;)&lt;/span&gt;&lt;/span&gt;th birthday!&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
}&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;For both methods, you will need to keep a reference to the returned &lt;code&gt;observer&lt;/code&gt; for the duration of the observation.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-observe-a-single-objects-updates" class="anchor" aria-hidden="true" href="#observe-a-single-objects-updates"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Observe a single object's updates&lt;/h3&gt;
&lt;p&gt;Observers of an  &lt;code&gt;ObjectPublisher&lt;/code&gt; can receive notifications if any of the object's property changes. You can  create an &lt;code&gt;ObjectPublisher&lt;/code&gt; from the object directly:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;let&lt;/span&gt; objectPublisher&lt;span class="pl-k"&gt;:&lt;/span&gt; ObjectPublisher&lt;span class="pl-k"&gt;&amp;lt;&lt;/span&gt;Person&lt;span class="pl-k"&gt;&amp;gt;&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; person.&lt;span class="pl-c1"&gt;asPublisher&lt;/span&gt;(&lt;span class="pl-c1"&gt;in&lt;/span&gt;: dataStack)&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;or by indexing a &lt;code&gt;ListPublisher&lt;/code&gt;'s &lt;code&gt;ListSnapshot&lt;/code&gt;:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;let&lt;/span&gt; listPublisher&lt;span class="pl-k"&gt;:&lt;/span&gt; ListPublisher&lt;span class="pl-k"&gt;&amp;lt;&lt;/span&gt;Person&lt;span class="pl-k"&gt;&amp;gt;&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; ...&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; ...&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;&lt;span class="pl-k"&gt;let&lt;/span&gt; objectPublisher &lt;span class="pl-k"&gt;=&lt;/span&gt; listPublisher.&lt;span class="pl-smi"&gt;snapshot&lt;/span&gt;[indexPath]&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;(See &lt;a href="#observe-a-diffable-list"&gt;&lt;code&gt;ListPublisher&lt;/code&gt; examples&lt;/a&gt; below)&lt;/p&gt;
&lt;p&gt;To receive notifications, call the  &lt;code&gt;ObjectPublisher&lt;/code&gt;'s &lt;code&gt;addObserve(...)&lt;/code&gt; method passing the owner of the callback closure:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;objectPublisher.&lt;span class="pl-c1"&gt;addObserver&lt;/span&gt;(&lt;span class="pl-c1"&gt;self&lt;/span&gt;) { [&lt;span class="pl-k"&gt;weak&lt;/span&gt; &lt;span class="pl-c1"&gt;self&lt;/span&gt;] (objectPublisher) &lt;span class="pl-k"&gt;in&lt;/span&gt;
    &lt;span class="pl-k"&gt;let&lt;/span&gt; snapshot&lt;span class="pl-k"&gt;:&lt;/span&gt; ObjectSnapshot&lt;span class="pl-k"&gt;&amp;lt;&lt;/span&gt;Person&lt;span class="pl-k"&gt;&amp;gt;&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; objectPublisher.&lt;span class="pl-smi"&gt;snapshot&lt;/span&gt;
    &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; handle changes&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;}&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Note that the owner instance will not be retained. You may call &lt;code&gt;ObjectPublisher.removeObserver(...)&lt;/code&gt; explicitly to stop receiving notifications, but the &lt;code&gt;ObjectPublisher&lt;/code&gt; also discontinues sending events to deallocated observers.&lt;/p&gt;
&lt;p&gt;The &lt;code&gt;ObjectSnapshot&lt;/code&gt; returned from the &lt;code&gt;ObjectPublisher.snapshot&lt;/code&gt; property returns a full-copy &lt;code&gt;struct&lt;/code&gt; of all properties of the object. This is ideal for managing states as they are thread-safe and are not affected by further changes to the actual object.  &lt;code&gt;ObjectPublisher&lt;/code&gt; automatically updates its &lt;code&gt;snapshot&lt;/code&gt; value to the latest state of the object.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-observe-a-single-objects-per-property-updates" class="anchor" aria-hidden="true" href="#observe-a-single-objects-per-property-updates"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Observe a single object's per-property updates&lt;/h3&gt;
&lt;p&gt;If you need to track specifically which properties change in an object, implement the &lt;code&gt;ObjectObserver&lt;/code&gt; protocol and specify the &lt;code&gt;EntityType&lt;/code&gt;:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;class&lt;/span&gt; &lt;span class="pl-en"&gt;MyViewController&lt;/span&gt;: &lt;span class="pl-e"&gt;UIViewController&lt;/span&gt;, &lt;span class="pl-e"&gt;ObjectObserver &lt;/span&gt;{
    &lt;span class="pl-k"&gt;func&lt;/span&gt; &lt;span class="pl-en"&gt;objectMonitor&lt;/span&gt;(&lt;span class="pl-smi"&gt;&lt;span class="pl-en"&gt;monitor&lt;/span&gt;&lt;/span&gt;: ObjectMonitor&amp;lt;MyPersonEntity&amp;gt;, &lt;span class="pl-en"&gt;willUpdateObject&lt;/span&gt; &lt;span class="pl-smi"&gt;object&lt;/span&gt;: MyPersonEntity) {
        &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; ...&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;    }
    
    &lt;span class="pl-k"&gt;func&lt;/span&gt; &lt;span class="pl-en"&gt;objectMonitor&lt;/span&gt;(&lt;span class="pl-smi"&gt;&lt;span class="pl-en"&gt;monitor&lt;/span&gt;&lt;/span&gt;: ObjectMonitor&amp;lt;MyPersonEntity&amp;gt;, &lt;span class="pl-en"&gt;didUpdateObject&lt;/span&gt; &lt;span class="pl-smi"&gt;object&lt;/span&gt;: MyPersonEntity, &lt;span class="pl-smi"&gt;&lt;span class="pl-en"&gt;changedPersistentKeys&lt;/span&gt;&lt;/span&gt;: &lt;span class="pl-c1"&gt;Set&lt;/span&gt;&amp;lt;KeyPathString&amp;gt;) {
        &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; ...&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;    }
    
    &lt;span class="pl-k"&gt;func&lt;/span&gt; &lt;span class="pl-en"&gt;objectMonitor&lt;/span&gt;(&lt;span class="pl-smi"&gt;&lt;span class="pl-en"&gt;monitor&lt;/span&gt;&lt;/span&gt;: ObjectMonitor&amp;lt;MyPersonEntity&amp;gt;, &lt;span class="pl-en"&gt;didDeleteObject&lt;/span&gt; &lt;span class="pl-smi"&gt;object&lt;/span&gt;: MyPersonEntity) {
        &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; ...&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;    }
}&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;We then need to keep an &lt;code&gt;ObjectMonitor&lt;/code&gt; instance and register our &lt;code&gt;ObjectObserver&lt;/code&gt; as an observer:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;let&lt;/span&gt; person&lt;span class="pl-k"&gt;:&lt;/span&gt; MyPersonEntity &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; ...&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;&lt;span class="pl-c1"&gt;self&lt;/span&gt;.&lt;span class="pl-smi"&gt;monitor&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; dataStack.&lt;span class="pl-c1"&gt;monitorObject&lt;/span&gt;(person)
&lt;span class="pl-c1"&gt;self&lt;/span&gt;.&lt;span class="pl-smi"&gt;monitor&lt;/span&gt;.&lt;span class="pl-c1"&gt;addObserver&lt;/span&gt;(&lt;span class="pl-c1"&gt;self&lt;/span&gt;)&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;The controller will then notify our observer whenever the object's attributes change. You can add multiple &lt;code&gt;ObjectObserver&lt;/code&gt;s to a single &lt;code&gt;ObjectMonitor&lt;/code&gt; without any problem. This means you can just share around the &lt;code&gt;ObjectMonitor&lt;/code&gt; instance to different screens without problem.&lt;/p&gt;
&lt;p&gt;You can get &lt;code&gt;ObjectMonitor&lt;/code&gt;'s object through its &lt;code&gt;object&lt;/code&gt; property. If the object is deleted, the &lt;code&gt;object&lt;/code&gt; property will become &lt;code&gt;nil&lt;/code&gt; to prevent further access.&lt;/p&gt;
&lt;p&gt;While &lt;code&gt;ObjectMonitor&lt;/code&gt; exposes &lt;code&gt;removeObserver(...)&lt;/code&gt; as well, it only stores &lt;code&gt;weak&lt;/code&gt; references of the observers and will safely unregister deallocated observers.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-observe-a-diffable-list" class="anchor" aria-hidden="true" href="#observe-a-diffable-list"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Observe a diffable list&lt;/h3&gt;
&lt;p&gt;Observers of a  &lt;code&gt;ListPublisher&lt;/code&gt; can receive notifications whenever its fetched result set changes. You can  create a &lt;code&gt;ListPublisher&lt;/code&gt; by fetching from the &lt;code&gt;DataStack&lt;/code&gt;:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;let&lt;/span&gt; listPublisher &lt;span class="pl-k"&gt;=&lt;/span&gt; dataStack.&lt;span class="pl-c1"&gt;listPublisher&lt;/span&gt;(
    From&lt;span class="pl-k"&gt;&amp;lt;&lt;/span&gt;Person&lt;span class="pl-k"&gt;&amp;gt;&lt;/span&gt;()
        .&lt;span class="pl-c1"&gt;sectionBy&lt;/span&gt;(\.&lt;span class="pl-smi"&gt;age&lt;/span&gt;&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;) { &lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;Age \(&lt;span class="pl-c1"&gt;$0&lt;/span&gt;)&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt; } // sections are optional&lt;span class="pl-ii"&gt;&lt;/span&gt;&lt;/span&gt;
&lt;span class="pl-s"&gt;        .where(&lt;span class="pl-ii"&gt;\.&lt;/span&gt;title == &lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;Engineer&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;)&lt;span class="pl-ii"&gt;&lt;/span&gt;&lt;/span&gt;
&lt;span class="pl-s"&gt;        .orderBy(.ascending(&lt;span class="pl-ii"&gt;\.&lt;/span&gt;lastName))&lt;span class="pl-ii"&gt;&lt;/span&gt;&lt;/span&gt;
&lt;span class="pl-s"&gt;)&lt;span class="pl-ii"&gt;&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;To receive notifications, call the  &lt;code&gt;ListPublisher&lt;/code&gt;'s &lt;code&gt;addObserve(...)&lt;/code&gt; method passing the owner of the callback closure:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;listPublisher.&lt;span class="pl-c1"&gt;addObserver&lt;/span&gt;(&lt;span class="pl-c1"&gt;self&lt;/span&gt;) { [&lt;span class="pl-k"&gt;weak&lt;/span&gt; &lt;span class="pl-c1"&gt;self&lt;/span&gt;] (listPublisher) &lt;span class="pl-k"&gt;in&lt;/span&gt;
    &lt;span class="pl-k"&gt;let&lt;/span&gt; snapshot&lt;span class="pl-k"&gt;:&lt;/span&gt; ListSnapshot&lt;span class="pl-k"&gt;&amp;lt;&lt;/span&gt;Person&lt;span class="pl-k"&gt;&amp;gt;&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; listPublisher.&lt;span class="pl-smi"&gt;snapshot&lt;/span&gt;
    &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; handle changes&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;}&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Note that the owner instance will not be retained. You may call &lt;code&gt;ListPublisher.removeObserver(...)&lt;/code&gt; explicitly to stop receiving notifications, but the &lt;code&gt;ListPublisher&lt;/code&gt; also discontinues sending events to deallocated observers.&lt;/p&gt;
&lt;p&gt;The &lt;code&gt;ListSnapshot&lt;/code&gt; returned from the &lt;code&gt;ListPublisher.snapshot&lt;/code&gt; property returns a full-copy &lt;code&gt;struct&lt;/code&gt; of all sections and &lt;code&gt;NSManagedObject&lt;/code&gt; items in the list. This is ideal for managing states as they are thread-safe and are not affected by further changes to the result set.  &lt;code&gt;ListPublisher&lt;/code&gt; automatically updates its &lt;code&gt;snapshot&lt;/code&gt; value to the latest state of the fetch.&lt;/p&gt;
&lt;p&gt;Unlike  &lt;code&gt;ListMonitor&lt;/code&gt;s (See &lt;a href="#observe-detailed-list-changes"&gt;&lt;code&gt;ListMonitor&lt;/code&gt; examples&lt;/a&gt; below), a &lt;code&gt;ListPublisher&lt;/code&gt; does not track detailed inserts, deletes, and moves. In return, a &lt;code&gt;ListPublisher&lt;/code&gt; is a lot more lightweight and are designed to work well with &lt;code&gt;DiffableDataSource.TableViewAdapter&lt;/code&gt;s and &lt;code&gt;DiffableDataSource.CollectionViewAdapter&lt;/code&gt;s:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-c1"&gt;self&lt;/span&gt;.&lt;span class="pl-smi"&gt;dataSource&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; DiffableDataSource.&lt;span class="pl-smi"&gt;CollectionViewAdapter&lt;/span&gt;&lt;span class="pl-k"&gt;&amp;lt;&lt;/span&gt;Person&lt;span class="pl-k"&gt;&amp;gt;&lt;/span&gt;(
    &lt;span class="pl-c1"&gt;collectionView&lt;/span&gt;: &lt;span class="pl-c1"&gt;self&lt;/span&gt;.&lt;span class="pl-smi"&gt;collectionView&lt;/span&gt;,
    &lt;span class="pl-c1"&gt;dataStack&lt;/span&gt;: CoreStoreDefaults.&lt;span class="pl-smi"&gt;dataStack&lt;/span&gt;,
    &lt;span class="pl-c1"&gt;cellProvider&lt;/span&gt;: { (collectionView, indexPath, person) &lt;span class="pl-k"&gt;in&lt;/span&gt;
        &lt;span class="pl-k"&gt;let&lt;/span&gt; cell &lt;span class="pl-k"&gt;=&lt;/span&gt; collectionView.&lt;span class="pl-c1"&gt;dequeueReusableCell&lt;/span&gt;(&lt;span class="pl-c1"&gt;withReuseIdentifier&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;PersonCell&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;) &lt;span class="pl-k"&gt;as!&lt;/span&gt; PersonCell
        cell.&lt;span class="pl-c1"&gt;setPerson&lt;/span&gt;(person)
        &lt;span class="pl-k"&gt;return&lt;/span&gt; cell
    }
)

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; ...&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;
listPublisher.&lt;span class="pl-c1"&gt;addObserver&lt;/span&gt;(&lt;span class="pl-c1"&gt;self&lt;/span&gt;) { [&lt;span class="pl-k"&gt;weak&lt;/span&gt; &lt;span class="pl-c1"&gt;self&lt;/span&gt;] (listPublisher) &lt;span class="pl-k"&gt;in&lt;/span&gt;
   &lt;span class="pl-c1"&gt;self&lt;/span&gt;&lt;span class="pl-k"&gt;?&lt;/span&gt;.&lt;span class="pl-smi"&gt;dataSource&lt;/span&gt;&lt;span class="pl-k"&gt;?&lt;/span&gt;.&lt;span class="pl-c1"&gt;apply&lt;/span&gt;(
       listPublisher.&lt;span class="pl-smi"&gt;snapshot&lt;/span&gt;, &lt;span class="pl-c1"&gt;animatingDifferences&lt;/span&gt;: &lt;span class="pl-c1"&gt;true&lt;/span&gt;
   )
}&lt;/pre&gt;&lt;/div&gt;
&lt;h3&gt;&lt;a id="user-content-observe-detailed-list-changes" class="anchor" aria-hidden="true" href="#observe-detailed-list-changes"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Observe detailed list changes&lt;/h3&gt;
&lt;p&gt;If you need to track each object's inserts, deletes, moves, and updates, implement one of the &lt;code&gt;ListObserver&lt;/code&gt; protocols and specify the &lt;code&gt;EntityType&lt;/code&gt;:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;class&lt;/span&gt; &lt;span class="pl-en"&gt;MyViewController&lt;/span&gt;: &lt;span class="pl-e"&gt;UIViewController&lt;/span&gt;, &lt;span class="pl-e"&gt;ListObserver &lt;/span&gt;{
    &lt;span class="pl-k"&gt;func&lt;/span&gt; &lt;span class="pl-en"&gt;listMonitorDidChange&lt;/span&gt;(&lt;span class="pl-smi"&gt;&lt;span class="pl-en"&gt;monitor&lt;/span&gt;&lt;/span&gt;: ListMonitor&amp;lt;MyPersonEntity&amp;gt;) {
        &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; ...&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;    }
    
    &lt;span class="pl-k"&gt;func&lt;/span&gt; &lt;span class="pl-en"&gt;listMonitorDidRefetch&lt;/span&gt;(&lt;span class="pl-smi"&gt;&lt;span class="pl-en"&gt;monitor&lt;/span&gt;&lt;/span&gt;: ListMonitor&amp;lt;MyPersonEntity&amp;gt;) {
        &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; ...&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;    }
}&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Including &lt;code&gt;ListObserver&lt;/code&gt;, there are 3 observer protocols you can implement depending on how detailed you need to handle a change notification:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;ListObserver&lt;/code&gt;: lets you handle these callback methods:&lt;/li&gt;
&lt;/ul&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;    &lt;span class="pl-k"&gt;func&lt;/span&gt; &lt;span class="pl-en"&gt;listMonitorWillChange&lt;/span&gt;(&lt;span class="pl-en"&gt;_&lt;/span&gt; &lt;span class="pl-smi"&gt;monitor&lt;/span&gt;: ListMonitor&amp;lt;MyPersonEntity&amp;gt;)
    &lt;span class="pl-k"&gt;func&lt;/span&gt; &lt;span class="pl-en"&gt;listMonitorDidChange&lt;/span&gt;(&lt;span class="pl-en"&gt;_&lt;/span&gt; &lt;span class="pl-smi"&gt;monitor&lt;/span&gt;: ListMonitor&amp;lt;MyPersonEntity&amp;gt;)
    &lt;span class="pl-k"&gt;func&lt;/span&gt; &lt;span class="pl-en"&gt;listMonitorWillRefetch&lt;/span&gt;(&lt;span class="pl-en"&gt;_&lt;/span&gt; &lt;span class="pl-smi"&gt;monitor&lt;/span&gt;: ListMonitor&amp;lt;MyPersonEntity&amp;gt;)
    &lt;span class="pl-k"&gt;func&lt;/span&gt; &lt;span class="pl-en"&gt;listMonitorDidRefetch&lt;/span&gt;(&lt;span class="pl-en"&gt;_&lt;/span&gt; &lt;span class="pl-smi"&gt;monitor&lt;/span&gt;: ListMonitor&amp;lt;MyPersonEntity&amp;gt;)&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;code&gt;listMonitorDidChange(_:)&lt;/code&gt; and &lt;code&gt;listMonitorDidRefetch(_:)&lt;/code&gt; implementations are both required. &lt;code&gt;listMonitorDidChange(_:)&lt;/code&gt; is called whenever the &lt;code&gt;ListMonitor&lt;/code&gt;'s count, order, or filtered objects change. &lt;code&gt;listMonitorDidRefetch(_:)&lt;/code&gt; is called when the &lt;code&gt;ListMonitor.refetch()&lt;/code&gt; was executed or if the internal persistent store was changed.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;ListObjectObserver&lt;/code&gt;: in addition to &lt;code&gt;ListObserver&lt;/code&gt; methods, also lets you handle object inserts, updates, and deletes:&lt;/li&gt;
&lt;/ul&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;    &lt;span class="pl-k"&gt;func&lt;/span&gt; &lt;span class="pl-en"&gt;listMonitor&lt;/span&gt;(&lt;span class="pl-en"&gt;_&lt;/span&gt; &lt;span class="pl-smi"&gt;monitor&lt;/span&gt;: ListMonitor&amp;lt;MyPersonEntity&amp;gt;, &lt;span class="pl-en"&gt;didInsertObject&lt;/span&gt; &lt;span class="pl-smi"&gt;object&lt;/span&gt;: MyPersonEntity, &lt;span class="pl-en"&gt;toIndexPath&lt;/span&gt; &lt;span class="pl-smi"&gt;indexPath&lt;/span&gt;: IndexPath)
    &lt;span class="pl-k"&gt;func&lt;/span&gt; &lt;span class="pl-en"&gt;listMonitor&lt;/span&gt;(&lt;span class="pl-en"&gt;_&lt;/span&gt; &lt;span class="pl-smi"&gt;monitor&lt;/span&gt;: ListMonitor&amp;lt;MyPersonEntity&amp;gt;, &lt;span class="pl-en"&gt;didDeleteObject&lt;/span&gt; &lt;span class="pl-smi"&gt;object&lt;/span&gt;: MyPersonEntity, &lt;span class="pl-en"&gt;fromIndexPath&lt;/span&gt; &lt;span class="pl-smi"&gt;indexPath&lt;/span&gt;: IndexPath)
    &lt;span class="pl-k"&gt;func&lt;/span&gt; &lt;span class="pl-en"&gt;listMonitor&lt;/span&gt;(&lt;span class="pl-en"&gt;_&lt;/span&gt; &lt;span class="pl-smi"&gt;monitor&lt;/span&gt;: ListMonitor&amp;lt;MyPersonEntity&amp;gt;, &lt;span class="pl-en"&gt;didUpdateObject&lt;/span&gt; &lt;span class="pl-smi"&gt;object&lt;/span&gt;: MyPersonEntity, &lt;span class="pl-en"&gt;atIndexPath&lt;/span&gt; &lt;span class="pl-smi"&gt;indexPath&lt;/span&gt;: IndexPath)
    &lt;span class="pl-k"&gt;func&lt;/span&gt; &lt;span class="pl-en"&gt;listMonitor&lt;/span&gt;(&lt;span class="pl-en"&gt;_&lt;/span&gt; &lt;span class="pl-smi"&gt;monitor&lt;/span&gt;: ListMonitor&amp;lt;MyPersonEntity&amp;gt;, &lt;span class="pl-en"&gt;didMoveObject&lt;/span&gt; &lt;span class="pl-smi"&gt;object&lt;/span&gt;: MyPersonEntity, &lt;span class="pl-smi"&gt;&lt;span class="pl-en"&gt;fromIndexPath&lt;/span&gt;&lt;/span&gt;: IndexPath, &lt;span class="pl-smi"&gt;&lt;span class="pl-en"&gt;toIndexPath&lt;/span&gt;&lt;/span&gt;: IndexPath)&lt;/pre&gt;&lt;/div&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;ListSectionObserver&lt;/code&gt;: in addition to &lt;code&gt;ListObjectObserver&lt;/code&gt; methods, also lets you handle section inserts and deletes:&lt;/li&gt;
&lt;/ul&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;    &lt;span class="pl-k"&gt;func&lt;/span&gt; &lt;span class="pl-en"&gt;listMonitor&lt;/span&gt;(&lt;span class="pl-en"&gt;_&lt;/span&gt; &lt;span class="pl-smi"&gt;monitor&lt;/span&gt;: ListMonitor&amp;lt;MyPersonEntity&amp;gt;, &lt;span class="pl-en"&gt;didInsertSection&lt;/span&gt; &lt;span class="pl-smi"&gt;sectionInfo&lt;/span&gt;: NSFetchedResultsSectionInfo, &lt;span class="pl-en"&gt;toSectionIndex&lt;/span&gt; &lt;span class="pl-smi"&gt;sectionIndex&lt;/span&gt;: &lt;span class="pl-c1"&gt;Int&lt;/span&gt;)
    &lt;span class="pl-k"&gt;func&lt;/span&gt; &lt;span class="pl-en"&gt;listMonitor&lt;/span&gt;(&lt;span class="pl-en"&gt;_&lt;/span&gt; &lt;span class="pl-smi"&gt;monitor&lt;/span&gt;: ListMonitor&amp;lt;MyPersonEntity&amp;gt;, &lt;span class="pl-en"&gt;didDeleteSection&lt;/span&gt; &lt;span class="pl-smi"&gt;sectionInfo&lt;/span&gt;: NSFetchedResultsSectionInfo, &lt;span class="pl-en"&gt;fromSectionIndex&lt;/span&gt; &lt;span class="pl-smi"&gt;sectionIndex&lt;/span&gt;: &lt;span class="pl-c1"&gt;Int&lt;/span&gt;)&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;We then need to create a &lt;code&gt;ListMonitor&lt;/code&gt; instance and register our &lt;code&gt;ListObserver&lt;/code&gt; as an observer:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-c1"&gt;self&lt;/span&gt;.&lt;span class="pl-smi"&gt;monitor&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; dataStack.&lt;span class="pl-c1"&gt;monitorList&lt;/span&gt;(
    From&lt;span class="pl-k"&gt;&amp;lt;&lt;/span&gt;MyPersonEntity&lt;span class="pl-k"&gt;&amp;gt;&lt;/span&gt;()
        .&lt;span class="pl-c1"&gt;where&lt;/span&gt;(\.&lt;span class="pl-smi"&gt;age&lt;/span&gt; &lt;span class="pl-k"&gt;&amp;gt;&lt;/span&gt; &lt;span class="pl-c1"&gt;30&lt;/span&gt;)
        .&lt;span class="pl-c1"&gt;orderBy&lt;/span&gt;(.&lt;span class="pl-c1"&gt;ascending&lt;/span&gt;(\.&lt;span class="pl-smi"&gt;name&lt;/span&gt;))
        .&lt;span class="pl-smi"&gt;tweak&lt;/span&gt; { &lt;span class="pl-c1"&gt;$0&lt;/span&gt;.&lt;span class="pl-smi"&gt;fetchBatchSize&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;20&lt;/span&gt; }
)
&lt;span class="pl-c1"&gt;self&lt;/span&gt;.&lt;span class="pl-smi"&gt;monitor&lt;/span&gt;.&lt;span class="pl-c1"&gt;addObserver&lt;/span&gt;(&lt;span class="pl-c1"&gt;self&lt;/span&gt;)&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Similar to &lt;code&gt;ObjectMonitor&lt;/code&gt;, a &lt;code&gt;ListMonitor&lt;/code&gt; can also have multiple &lt;code&gt;ListObserver&lt;/code&gt;s registered to a single &lt;code&gt;ListMonitor&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;If you have noticed, the &lt;code&gt;monitorList(...)&lt;/code&gt; method accepts &lt;code&gt;Where&lt;/code&gt;, &lt;code&gt;OrderBy&lt;/code&gt;, and &lt;code&gt;Tweak&lt;/code&gt; clauses exactly like a fetch. As the list maintained by &lt;code&gt;ListMonitor&lt;/code&gt; needs to have a deterministic order, at least the &lt;code&gt;From&lt;/code&gt; and &lt;code&gt;OrderBy&lt;/code&gt; clauses are required.&lt;/p&gt;
&lt;p&gt;A &lt;code&gt;ListMonitor&lt;/code&gt; created from &lt;code&gt;monitorList(...)&lt;/code&gt; will maintain a single-section list. You can therefore access its contents with just an index:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;let&lt;/span&gt; firstPerson &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;self&lt;/span&gt;.&lt;span class="pl-smi"&gt;monitor&lt;/span&gt;[&lt;span class="pl-c1"&gt;0&lt;/span&gt;]&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;If the list needs to be grouped into sections, create the &lt;code&gt;ListMonitor&lt;/code&gt; instance with the &lt;code&gt;monitorSectionedList(...)&lt;/code&gt; method and a &lt;code&gt;SectionBy&lt;/code&gt; clause:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-c1"&gt;self&lt;/span&gt;.&lt;span class="pl-smi"&gt;monitor&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; dataStack.&lt;span class="pl-c1"&gt;monitorSectionedList&lt;/span&gt;(
    From&lt;span class="pl-k"&gt;&amp;lt;&lt;/span&gt;MyPersonEntity&lt;span class="pl-k"&gt;&amp;gt;&lt;/span&gt;()
        .&lt;span class="pl-c1"&gt;sectionBy&lt;/span&gt;(\.&lt;span class="pl-smi"&gt;age&lt;/span&gt;)
        .&lt;span class="pl-c1"&gt;where&lt;/span&gt;(\.&lt;span class="pl-smi"&gt;gender&lt;/span&gt; &lt;span class="pl-k"&gt;==&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;M&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
        .&lt;span class="pl-c1"&gt;orderBy&lt;/span&gt;(.&lt;span class="pl-c1"&gt;ascending&lt;/span&gt;(\.&lt;span class="pl-smi"&gt;age&lt;/span&gt;), .&lt;span class="pl-c1"&gt;ascending&lt;/span&gt;(\.&lt;span class="pl-smi"&gt;name&lt;/span&gt;))
        .&lt;span class="pl-smi"&gt;tweak&lt;/span&gt; { &lt;span class="pl-c1"&gt;$0&lt;/span&gt;.&lt;span class="pl-smi"&gt;fetchBatchSize&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;20&lt;/span&gt; }
)&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;A list controller created this way will group the objects by the attribute key indicated by the &lt;code&gt;SectionBy&lt;/code&gt; clause. One more thing to remember is that the &lt;code&gt;OrderBy&lt;/code&gt; clause should sort the list in such a way that the &lt;code&gt;SectionBy&lt;/code&gt; attribute would be sorted together (a requirement shared by &lt;code&gt;NSFetchedResultsController&lt;/code&gt;.)&lt;/p&gt;
&lt;p&gt;The &lt;code&gt;SectionBy&lt;/code&gt; clause can also be passed a closure to transform the section name into a displayable string:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-c1"&gt;self&lt;/span&gt;.&lt;span class="pl-smi"&gt;monitor&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; dataStack.&lt;span class="pl-c1"&gt;monitorSectionedList&lt;/span&gt;(
    From&lt;span class="pl-k"&gt;&amp;lt;&lt;/span&gt;MyPersonEntity&lt;span class="pl-k"&gt;&amp;gt;&lt;/span&gt;()
        .&lt;span class="pl-c1"&gt;sectionBy&lt;/span&gt;(\.&lt;span class="pl-smi"&gt;age&lt;/span&gt;) { (sectionName) &lt;span class="pl-k"&gt;-&amp;gt;&lt;/span&gt; &lt;span class="pl-c1"&gt;String&lt;/span&gt;&lt;span class="pl-k"&gt;?&lt;/span&gt; &lt;span class="pl-k"&gt;in&lt;/span&gt;
            &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;span class="pl-pse"&gt;\(&lt;/span&gt;&lt;span class="pl-s1"&gt;sectionName&lt;/span&gt;&lt;span class="pl-pse"&gt;&lt;span class="pl-s1"&gt;)&lt;/span&gt;&lt;/span&gt; years old&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;
        }
        .&lt;span class="pl-c1"&gt;orderBy&lt;/span&gt;(.&lt;span class="pl-c1"&gt;ascending&lt;/span&gt;(\.&lt;span class="pl-smi"&gt;age&lt;/span&gt;), .&lt;span class="pl-c1"&gt;ascending&lt;/span&gt;(\.&lt;span class="pl-smi"&gt;name&lt;/span&gt;))
)&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;This is useful when implementing a &lt;code&gt;UITableViewDelegate&lt;/code&gt;'s section header:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;func&lt;/span&gt; &lt;span class="pl-en"&gt;tableView&lt;/span&gt;(&lt;span class="pl-en"&gt;_&lt;/span&gt; &lt;span class="pl-smi"&gt;tableView&lt;/span&gt;: UITableView, &lt;span class="pl-en"&gt;titleForHeaderInSection&lt;/span&gt; &lt;span class="pl-smi"&gt;section&lt;/span&gt;: &lt;span class="pl-c1"&gt;Int&lt;/span&gt;) &lt;span class="pl-k"&gt;-&amp;gt;&lt;/span&gt; &lt;span class="pl-c1"&gt;String&lt;/span&gt;&lt;span class="pl-k"&gt;?&lt;/span&gt; {
    &lt;span class="pl-k"&gt;let&lt;/span&gt; sectionInfo &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;self&lt;/span&gt;.&lt;span class="pl-smi"&gt;monitor&lt;/span&gt;.&lt;span class="pl-c1"&gt;sectionInfoAtIndex&lt;/span&gt;(section)
    &lt;span class="pl-k"&gt;return&lt;/span&gt; sectionInfo.&lt;span class="pl-smi"&gt;name&lt;/span&gt;
}&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;To access the objects of a sectioned list, use an &lt;code&gt;IndexPath&lt;/code&gt; or a tuple:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;let&lt;/span&gt; indexPath &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;IndexPath&lt;/span&gt;(&lt;span class="pl-c1"&gt;row&lt;/span&gt;: &lt;span class="pl-c1"&gt;2&lt;/span&gt;, &lt;span class="pl-c1"&gt;section&lt;/span&gt;: &lt;span class="pl-c1"&gt;1&lt;/span&gt;)
&lt;span class="pl-k"&gt;let&lt;/span&gt; person1 &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;self&lt;/span&gt;.&lt;span class="pl-smi"&gt;monitor&lt;/span&gt;[indexPath]
&lt;span class="pl-k"&gt;let&lt;/span&gt; person2 &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;self&lt;/span&gt;.&lt;span class="pl-smi"&gt;monitor&lt;/span&gt;[&lt;span class="pl-c1"&gt;1&lt;/span&gt;, &lt;span class="pl-c1"&gt;2&lt;/span&gt;]
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; person1 and person2 are the same object&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h2&gt;&lt;a id="user-content-objective-c-support" class="anchor" aria-hidden="true" href="#objective-c-support"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Objective-C support&lt;/h2&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;g-emoji class="g-emoji" alias="warning" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/26a0.png"&gt;⚠️&lt;/g-emoji&gt;Objective-C support is planned to be deprecated in a future CoreStore version.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;All CoreStore types are still written in pure Swift, but most core types have Objective-C "bridging classes" that are visible to Objective-C code. To show a couple of usage examples:&lt;/p&gt;
&lt;table&gt;
&lt;tbody&gt;&lt;tr&gt;&lt;th&gt;Swift&lt;/th&gt;&lt;th&gt;Objective-C&lt;/th&gt;&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;try&lt;/span&gt; dataStack.&lt;span class="pl-c1"&gt;addStorageAndWait&lt;/span&gt;(SQLiteStore.&lt;span class="pl-k"&gt;self&lt;/span&gt;)&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;
&lt;td&gt;&lt;div class="highlight highlight-source-objc"&gt;&lt;pre&gt;&lt;span class="pl-c1"&gt;NSError&lt;/span&gt; *error
[CSCoreStore &lt;span class="pl-c1"&gt;addSQLiteStorageAndWait:&lt;/span&gt;[CSSQLiteStore &lt;span class="pl-c1"&gt;new&lt;/span&gt;] &lt;span class="pl-c1"&gt;error:&lt;/span&gt;&amp;amp;error]&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;dataStack.&lt;span class="pl-c1"&gt;perform&lt;/span&gt;(
    &lt;span class="pl-c1"&gt;asynchronous&lt;/span&gt;: { (transaction) &lt;span class="pl-k"&gt;in&lt;/span&gt;
        &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; ...&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;    },
    &lt;span class="pl-c1"&gt;completion&lt;/span&gt;: { (result) &lt;span class="pl-k"&gt;in&lt;/span&gt;
        &lt;span class="pl-k"&gt;switch&lt;/span&gt; result {
        &lt;span class="pl-k"&gt;case&lt;/span&gt; .&lt;span class="pl-smi"&gt;success&lt;/span&gt;&lt;span class="pl-k"&gt;:&lt;/span&gt; &lt;span class="pl-c1"&gt;print&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;Done&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
        &lt;span class="pl-k"&gt;case&lt;/span&gt; .&lt;span class="pl-c1"&gt;failure&lt;/span&gt;(&lt;span class="pl-k"&gt;let&lt;/span&gt; error)&lt;span class="pl-k"&gt;:&lt;/span&gt; &lt;span class="pl-c1"&gt;print&lt;/span&gt;(error)
        }
    }
)&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;
&lt;td&gt;&lt;div class="highlight highlight-source-objc"&gt;&lt;pre&gt;[CSCoreStore &lt;span class="pl-c1"&gt;beginAsynchronous:&lt;/span&gt;^(CSAsynchronousDataTransaction *transaction) {
    &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; ...&lt;/span&gt;
    [transaction 
     &lt;span class="pl-c1"&gt;commitWithSuccess:&lt;/span&gt;^{
        &lt;span class="pl-c1"&gt;NSLog&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;@"&lt;/span&gt;Done&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;);
     }
     &lt;span class="pl-c1"&gt;failure:&lt;/span&gt; ^(CSError *error) {
        &lt;span class="pl-c1"&gt;NSLog&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;@"&lt;/span&gt;error: &lt;span class="pl-c1"&gt;%@&lt;/span&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, result.&lt;span class="pl-smi"&gt;error&lt;/span&gt;);
     }];
}];&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;&lt;/table&gt;
&lt;p&gt;All of these &lt;code&gt;CS&lt;/code&gt;-prefixed bridging classes have very similar usage to the existing CoreStore APIs, and ironically &lt;em&gt;none of them are written in Objective-C&lt;/em&gt;. This is very different to the common approach where apps and libraries write Objective-C APIs just to support both Objective-C and Swift. The advantage with CoreStore's approach is that your Swift codebase can already use the purely-Swift API without further changes in the future, but your "hybrid" codebase can still bridge instances back and forth from Objective-C to Swift.&lt;/p&gt;
&lt;p&gt;For example, you may have a new, modern Swift class that holds a &lt;code&gt;ListMonitor&lt;/code&gt;:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;class&lt;/span&gt; &lt;span class="pl-en"&gt;MyViewController&lt;/span&gt;: &lt;span class="pl-e"&gt;UIViewController &lt;/span&gt;{
    &lt;span class="pl-k"&gt;let&lt;/span&gt; monitor &lt;span class="pl-k"&gt;=&lt;/span&gt; dataStack.&lt;span class="pl-c1"&gt;monitorList&lt;/span&gt;(From&lt;span class="pl-k"&gt;&amp;lt;&lt;/span&gt;MyEntity&lt;span class="pl-k"&gt;&amp;gt;&lt;/span&gt;(), &lt;span class="pl-k"&gt;...&lt;/span&gt;)
    &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; ...&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;}&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Now let's say you have a legacy Objective-C class that previously uses &lt;code&gt;NSFetchedResultsController&lt;/code&gt;. It's easy to switch from &lt;code&gt;NSFetchedResultsController&lt;/code&gt; to &lt;code&gt;CSListMonitor&lt;/code&gt;, but converting the rest of this huge class is impractical. You end up with&lt;/p&gt;
&lt;div class="highlight highlight-source-objc"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;@interface&lt;/span&gt; &lt;span class="pl-en"&gt;MYOldViewController&lt;/span&gt;: &lt;span class="pl-e"&gt;UIViewController&lt;/span&gt; 
&lt;span class="pl-k"&gt;@property&lt;/span&gt; (&lt;span class="pl-k"&gt;nonatomic&lt;/span&gt;, &lt;span class="pl-k"&gt;readonly&lt;/span&gt;, &lt;span class="pl-k"&gt;strong&lt;/span&gt;) CSListMonitor* monitor;
- (&lt;span class="pl-k"&gt;instancetype&lt;/span&gt;)&lt;span class="pl-en"&gt;initWithMonitor&lt;/span&gt;&lt;span class="pl-en"&gt;:&lt;/span&gt;(CSListMonitor *)&lt;span class="pl-smi"&gt;monitor&lt;/span&gt;;
&lt;span class="pl-k"&gt;@end&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;When you need to instantiate this class from Swift, you just call &lt;code&gt;bridgeToObjectiveC&lt;/code&gt;:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;class&lt;/span&gt; &lt;span class="pl-en"&gt;MyViewController&lt;/span&gt;: &lt;span class="pl-e"&gt;UIViewController &lt;/span&gt;{
    &lt;span class="pl-k"&gt;let&lt;/span&gt; monitor &lt;span class="pl-k"&gt;=&lt;/span&gt; dataStack.&lt;span class="pl-c1"&gt;monitorList&lt;/span&gt;(From&lt;span class="pl-k"&gt;&amp;lt;&lt;/span&gt;MyEntity&lt;span class="pl-k"&gt;&amp;gt;&lt;/span&gt;(), &lt;span class="pl-k"&gt;...&lt;/span&gt;)
    &lt;span class="pl-k"&gt;func&lt;/span&gt; &lt;span class="pl-en"&gt;showOldController&lt;/span&gt;() {
        &lt;span class="pl-k"&gt;let&lt;/span&gt; controller &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;MYOldViewController&lt;/span&gt;(&lt;span class="pl-c1"&gt;monitor&lt;/span&gt;: &lt;span class="pl-c1"&gt;self&lt;/span&gt;.&lt;span class="pl-smi"&gt;monitor&lt;/span&gt;.&lt;span class="pl-smi"&gt;bridgeToObjectiveC&lt;/span&gt;)
        &lt;span class="pl-c1"&gt;self&lt;/span&gt;.&lt;span class="pl-c1"&gt;presentViewController&lt;/span&gt;(controller, &lt;span class="pl-c1"&gt;animated&lt;/span&gt;: &lt;span class="pl-c1"&gt;true&lt;/span&gt;, &lt;span class="pl-c1"&gt;completion&lt;/span&gt;: &lt;span class="pl-c1"&gt;nil&lt;/span&gt;)
    }
}&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Note that the &lt;code&gt;CSListMonitor&lt;/code&gt; holds the exact same &lt;code&gt;ListMonitor&lt;/code&gt; instance, which means that no copies and no extra fetching occur.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-objective-c-syntax-sugars" class="anchor" aria-hidden="true" href="#objective-c-syntax-sugars"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Objective-C syntax sugars&lt;/h3&gt;
&lt;p&gt;Objective-C tends to be verbose, so some method calls are long and unreadable. For example, fetching looks like this:&lt;/p&gt;
&lt;div class="highlight highlight-source-objc"&gt;&lt;pre&gt;&lt;span class="pl-c1"&gt;NSArray&lt;/span&gt;&amp;lt;MYPerson *&amp;gt; *objects = 
[CSCoreStore
 fetchAllFrom:[[CSFrom &lt;span class="pl-c1"&gt;alloc&lt;/span&gt;] &lt;span class="pl-c1"&gt;initWithEntityClass:&lt;/span&gt;[MYPerson &lt;span class="pl-c1"&gt;class&lt;/span&gt;]]
 fetchClauses:@[[[CSWhere &lt;span class="pl-c1"&gt;alloc&lt;/span&gt;] &lt;span class="pl-c1"&gt;initWithFormat:&lt;/span&gt;&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;@"&lt;/span&gt;%K == &lt;span class="pl-c1"&gt;%@&lt;/span&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;@"&lt;/span&gt;isHidden&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, @&lt;span class="pl-c1"&gt;NO&lt;/span&gt;],
                [[CSOrderBy &lt;span class="pl-c1"&gt;alloc&lt;/span&gt;] &lt;span class="pl-c1"&gt;initWithSortDescriptors:&lt;/span&gt;@[[&lt;span class="pl-c1"&gt;NSSortDescriptor&lt;/span&gt; &lt;span class="pl-c1"&gt;sortDescriptorWithKey:&lt;/span&gt;&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;@"&lt;/span&gt;lastName&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; &lt;span class="pl-c1"&gt;ascending:&lt;/span&gt;&lt;span class="pl-c1"&gt;YES&lt;/span&gt;],
                                                             [&lt;span class="pl-c1"&gt;NSSortDescriptor&lt;/span&gt; &lt;span class="pl-c1"&gt;sortDescriptorWithKey:&lt;/span&gt;&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;@"&lt;/span&gt;firstName&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; &lt;span class="pl-c1"&gt;ascending:&lt;/span&gt;&lt;span class="pl-c1"&gt;YES&lt;/span&gt;]]]]];&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Although it works, it looks terrible. For this, CoreStore provides &lt;em&gt;CoreStoreBridge.h&lt;/em&gt; where these Objective-C calls are wrapped in readable, convenient macros and global functions. The call above becomes&lt;/p&gt;
&lt;div class="highlight highlight-source-objc"&gt;&lt;pre&gt;&lt;span class="pl-c1"&gt;NSArray&lt;/span&gt;&amp;lt;MYPerson *&amp;gt; *objects = 
[CSCoreStore
 fetchAllFrom:&lt;span class="pl-c1"&gt;CSFromClass&lt;/span&gt;([MYPerson &lt;span class="pl-c1"&gt;class&lt;/span&gt;])
 fetchClauses:@[&lt;span class="pl-c1"&gt;CSWhereFormat&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;@"&lt;/span&gt;%K == &lt;span class="pl-c1"&gt;%@&lt;/span&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;@"&lt;/span&gt;isHidden&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, @&lt;span class="pl-c1"&gt;NO&lt;/span&gt;),
                &lt;span class="pl-c1"&gt;CSOrderByKeys&lt;/span&gt;(&lt;span class="pl-c1"&gt;CSSortAscending&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;@"&lt;/span&gt;lastName&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;),
                              &lt;span class="pl-c1"&gt;CSSortAscending&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;@"&lt;/span&gt;firstName&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;), &lt;span class="pl-c1"&gt;nil&lt;/span&gt;)]];&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;That's much shorter now. But we can still do better. Notice that we have strings being used as key paths. The &lt;code&gt;CSKeyPath(...)&lt;/code&gt; macro gives us compile-time checking so keys that don't exist in a class will generate errors. Our key-safe code now looks like this:&lt;/p&gt;
&lt;div class="highlight highlight-source-objc"&gt;&lt;pre&gt;&lt;span class="pl-c1"&gt;NSArray&lt;/span&gt;&amp;lt;MYPerson *&amp;gt; *objects = 
[CSCoreStore
 fetchAllFrom:&lt;span class="pl-c1"&gt;CSFromClass&lt;/span&gt;([MYPerson &lt;span class="pl-c1"&gt;class&lt;/span&gt;])
 fetchClauses:@[&lt;span class="pl-c1"&gt;CSWhereFormat&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;@"&lt;/span&gt;%K == &lt;span class="pl-c1"&gt;%@&lt;/span&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-c1"&gt;CSKeyPath&lt;/span&gt;(MYPerson, isHidden), @&lt;span class="pl-c1"&gt;NO&lt;/span&gt;),
                &lt;span class="pl-c1"&gt;CSOrderByKeys&lt;/span&gt;(&lt;span class="pl-c1"&gt;CSSortAscending&lt;/span&gt;(&lt;span class="pl-c1"&gt;CSKeyPath&lt;/span&gt;(MYPerson, lastName)),
                              &lt;span class="pl-c1"&gt;CSSortAscending&lt;/span&gt;(&lt;span class="pl-c1"&gt;CSKeyPath&lt;/span&gt;(MYPerson, firstName)), &lt;span class="pl-c1"&gt;nil&lt;/span&gt;)]];&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;To use these syntax sugars, include &lt;em&gt;CoreStoreBridge.h&lt;/em&gt; in your Objective-C source files.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-type-safe-corestoreobjects" class="anchor" aria-hidden="true" href="#type-safe-corestoreobjects"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Type-safe &lt;code&gt;CoreStoreObject&lt;/code&gt;s&lt;/h2&gt;
&lt;p&gt;Starting CoreStore 4.0, we can now create persisted objects without depending on &lt;em&gt;.xcdatamodeld&lt;/em&gt; Core Data files. The new &lt;code&gt;CoreStoreObject&lt;/code&gt; subclass replaces &lt;code&gt;NSManagedObject&lt;/code&gt;, and specially-typed properties declared on these classes will be synthesized as Core Data attributes.&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;class&lt;/span&gt; &lt;span class="pl-en"&gt;Animal&lt;/span&gt;: &lt;span class="pl-e"&gt;CoreStoreObject &lt;/span&gt;{
    &lt;span class="pl-k"&gt;let&lt;/span&gt; species &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;Value&lt;/span&gt;.&lt;span class="pl-smi"&gt;Required&lt;/span&gt;&lt;span class="pl-k"&gt;&amp;lt;&lt;/span&gt;&lt;span class="pl-c1"&gt;String&lt;/span&gt;&lt;span class="pl-k"&gt;&amp;gt;&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;species&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-c1"&gt;initial&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
}

&lt;span class="pl-k"&gt;class&lt;/span&gt; &lt;span class="pl-en"&gt;Dog&lt;/span&gt;: &lt;span class="pl-e"&gt;Animal &lt;/span&gt;{
    &lt;span class="pl-k"&gt;let&lt;/span&gt; nickname &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;Value&lt;/span&gt;.&lt;span class="pl-c1"&gt;Optional&lt;/span&gt;&lt;span class="pl-k"&gt;&amp;lt;&lt;/span&gt;&lt;span class="pl-c1"&gt;String&lt;/span&gt;&lt;span class="pl-k"&gt;&amp;gt;&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;nickname&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
    &lt;span class="pl-k"&gt;let&lt;/span&gt; master &lt;span class="pl-k"&gt;=&lt;/span&gt; Relationship.&lt;span class="pl-smi"&gt;ToOne&lt;/span&gt;&lt;span class="pl-k"&gt;&amp;lt;&lt;/span&gt;Person&lt;span class="pl-k"&gt;&amp;gt;&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;master&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
}

&lt;span class="pl-k"&gt;class&lt;/span&gt; &lt;span class="pl-en"&gt;Person&lt;/span&gt;: &lt;span class="pl-e"&gt;CoreStoreObject &lt;/span&gt;{
    &lt;span class="pl-k"&gt;let&lt;/span&gt; name &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;Value&lt;/span&gt;.&lt;span class="pl-smi"&gt;Required&lt;/span&gt;&lt;span class="pl-k"&gt;&amp;lt;&lt;/span&gt;&lt;span class="pl-c1"&gt;String&lt;/span&gt;&lt;span class="pl-k"&gt;&amp;gt;&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;name&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-c1"&gt;initial&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
    &lt;span class="pl-k"&gt;let&lt;/span&gt; pets &lt;span class="pl-k"&gt;=&lt;/span&gt; Relationship.&lt;span class="pl-smi"&gt;ToManyUnordered&lt;/span&gt;&lt;span class="pl-k"&gt;&amp;lt;&lt;/span&gt;Dog&lt;span class="pl-k"&gt;&amp;gt;&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;pets&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-c1"&gt;inverse&lt;/span&gt;: { &lt;span class="pl-c1"&gt;$0&lt;/span&gt;.&lt;span class="pl-smi"&gt;master&lt;/span&gt; })
}&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;The property names to be saved to Core Data is specified as the &lt;code&gt;keyPath&lt;/code&gt; argument. This lets us refactor our Swift code without affecting the underlying database. For example:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;class&lt;/span&gt; &lt;span class="pl-en"&gt;Person&lt;/span&gt;: &lt;span class="pl-e"&gt;CoreStoreObject &lt;/span&gt;{
    &lt;span class="pl-k"&gt;private&lt;/span&gt; &lt;span class="pl-k"&gt;let&lt;/span&gt; _name &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;Value&lt;/span&gt;.&lt;span class="pl-smi"&gt;Required&lt;/span&gt;&lt;span class="pl-k"&gt;&amp;lt;&lt;/span&gt;&lt;span class="pl-c1"&gt;String&lt;/span&gt;&lt;span class="pl-k"&gt;&amp;gt;&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;name&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-c1"&gt;initial&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
    &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; note property name is independent of the storage key name&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;}&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Here we added an underscore to the property name and made it &lt;code&gt;private&lt;/code&gt;, but the underlying key-path &lt;code&gt;"name"&lt;/code&gt; was unchanged so our model will not trigger a data migration.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;g-emoji class="g-emoji" alias="warning" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/26a0.png"&gt;⚠️&lt;/g-emoji&gt;&lt;strong&gt;Important:&lt;/strong&gt; As a rule, CoreStore can only process &lt;em&gt;stored properties&lt;/em&gt;. Computed, &lt;code&gt;static&lt;/code&gt;, &lt;code&gt;weak&lt;/code&gt;, or &lt;code&gt;lazy&lt;/code&gt; properties will be ignored and will not be added to the store. It is also strictly advised use &lt;code&gt;let&lt;/code&gt; instead of &lt;code&gt;var&lt;/code&gt; to declare these properties, as any changes to the property value will break the schema.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Also note how &lt;code&gt;Relationship&lt;/code&gt;s are linked statically with the &lt;code&gt;inverse:&lt;/code&gt; argument. &lt;strong&gt;All relationships are required to have an "inverse" relationship&lt;/strong&gt;. Unfortunately, due to Swift compiler limitation we can only declare the &lt;code&gt;inverse:&lt;/code&gt; on one end of the relationship-pair.&lt;/p&gt;
&lt;p&gt;To tell the &lt;code&gt;DataStack&lt;/code&gt; about these types, add all &lt;code&gt;CoreStoreObject&lt;/code&gt;s' entities to a &lt;code&gt;CoreStoreSchema&lt;/code&gt;:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;CoreStoreDefaults.&lt;span class="pl-smi"&gt;dataStack&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;DataStack&lt;/span&gt;(
    &lt;span class="pl-c1"&gt;CoreStoreSchema&lt;/span&gt;(
        &lt;span class="pl-c1"&gt;modelVersion&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;V1&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;,
        &lt;span class="pl-c1"&gt;entities&lt;/span&gt;: [
            Entity&lt;span class="pl-k"&gt;&amp;lt;&lt;/span&gt;Animal&lt;span class="pl-k"&gt;&amp;gt;&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;Animal&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-c1"&gt;isAbstract&lt;/span&gt;: &lt;span class="pl-c1"&gt;true&lt;/span&gt;),
            Entity&lt;span class="pl-k"&gt;&amp;lt;&lt;/span&gt;Dog&lt;span class="pl-k"&gt;&amp;gt;&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;Dog&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;),
            Entity&lt;span class="pl-k"&gt;&amp;lt;&lt;/span&gt;Person&lt;span class="pl-k"&gt;&amp;gt;&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;Person&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
        ]
    )
)
CoreStoreDefaults.&lt;span class="pl-smi"&gt;dataStack&lt;/span&gt;.&lt;span class="pl-c1"&gt;addStorage&lt;/span&gt;(&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;/*&lt;/span&gt; ... &lt;span class="pl-c"&gt;*/&lt;/span&gt;&lt;/span&gt;)&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;And that's all CoreStore needs to build the model; &lt;strong&gt;we don't need &lt;em&gt;.xcdatamodeld&lt;/em&gt; files anymore.&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;These special properties' values can be accessed or mutated using &lt;code&gt;.value&lt;/code&gt;:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;dataStack.&lt;span class="pl-c1"&gt;perform&lt;/span&gt;(
    &lt;span class="pl-c1"&gt;asynchronous&lt;/span&gt;: { (transaction) &lt;span class="pl-k"&gt;in&lt;/span&gt;
        &lt;span class="pl-k"&gt;let&lt;/span&gt; dog&lt;span class="pl-k"&gt;:&lt;/span&gt; Dog &lt;span class="pl-k"&gt;=&lt;/span&gt; transaction.&lt;span class="pl-c1"&gt;fetchOne&lt;/span&gt;(From&lt;span class="pl-k"&gt;&amp;lt;&lt;/span&gt;Dog&lt;span class="pl-k"&gt;&amp;gt;&lt;/span&gt;())&lt;span class="pl-k"&gt;!&lt;/span&gt;
        &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; ...&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;        &lt;span class="pl-k"&gt;let&lt;/span&gt; nickname &lt;span class="pl-k"&gt;=&lt;/span&gt; dog.&lt;span class="pl-smi"&gt;nickname&lt;/span&gt;.&lt;span class="pl-c1"&gt;value&lt;/span&gt; &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; String?&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;        &lt;span class="pl-k"&gt;let&lt;/span&gt; species &lt;span class="pl-k"&gt;=&lt;/span&gt; dog.&lt;span class="pl-smi"&gt;species&lt;/span&gt;.&lt;span class="pl-c1"&gt;value&lt;/span&gt; &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; String&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;        &lt;span class="pl-k"&gt;let&lt;/span&gt; age &lt;span class="pl-k"&gt;=&lt;/span&gt; dog.&lt;span class="pl-smi"&gt;age&lt;/span&gt;.&lt;span class="pl-c1"&gt;value&lt;/span&gt; &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Int&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;        &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; ...&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;        dog.&lt;span class="pl-smi"&gt;age&lt;/span&gt;.&lt;span class="pl-c1"&gt;value&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; age &lt;span class="pl-k"&gt;+&lt;/span&gt; &lt;span class="pl-c1"&gt;1&lt;/span&gt;
    },
    &lt;span class="pl-c1"&gt;completion&lt;/span&gt;: { &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;/*&lt;/span&gt; ... &lt;span class="pl-c"&gt;*/&lt;/span&gt;&lt;/span&gt; }
)&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;In addition, &lt;code&gt;Value&lt;/code&gt; and &lt;code&gt;Relationship&lt;/code&gt; properties can be used to create type-safe key-paths&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;let&lt;/span&gt; keyPath&lt;span class="pl-k"&gt;:&lt;/span&gt; &lt;span class="pl-c1"&gt;String&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; Dog.&lt;span class="pl-smi"&gt;keyPath&lt;/span&gt; { &lt;span class="pl-c1"&gt;$0&lt;/span&gt;.&lt;span class="pl-smi"&gt;nickname&lt;/span&gt; }&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;as well as &lt;code&gt;Where&lt;/code&gt; and &lt;code&gt;OrderBy&lt;/code&gt; clauses&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;let&lt;/span&gt; puppies &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-k"&gt;try&lt;/span&gt; dataStack.&lt;span class="pl-c1"&gt;fetchAll&lt;/span&gt;(
    From&lt;span class="pl-k"&gt;&amp;lt;&lt;/span&gt;Dog&lt;span class="pl-k"&gt;&amp;gt;&lt;/span&gt;()
        .&lt;span class="pl-c1"&gt;where&lt;/span&gt;(\.&lt;span class="pl-smi"&gt;age&lt;/span&gt; &lt;span class="pl-k"&gt;&amp;lt;&lt;/span&gt; &lt;span class="pl-c1"&gt;1&lt;/span&gt;)
        .&lt;span class="pl-c1"&gt;orderBy&lt;/span&gt;(.&lt;span class="pl-c1"&gt;ascending&lt;/span&gt;(\.&lt;span class="pl-smi"&gt;age&lt;/span&gt;))
)&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;All CoreStore APIs that are usable with &lt;code&gt;NSManagedObject&lt;/code&gt;s are also available for &lt;code&gt;CoreStoreObject&lt;/code&gt;s. These include &lt;code&gt;ListMonitor&lt;/code&gt;s, &lt;code&gt;ImportableObject&lt;/code&gt;s, fetching, etc.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-versionlocks" class="anchor" aria-hidden="true" href="#versionlocks"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;code&gt;VersionLock&lt;/code&gt;s&lt;/h3&gt;
&lt;p&gt;While it is convenient to be able to declare entities only in code, it is worrying that we might accidentally change the &lt;code&gt;CoreStoreObject&lt;/code&gt;'s properties and break our users' model version history. For this, the &lt;code&gt;CoreStoreSchema&lt;/code&gt; allows us to "lock" our properties to a particular configuration. Any changes to that &lt;code&gt;VersionLock&lt;/code&gt; will raise an assertion failure during the &lt;code&gt;CoreStoreSchema&lt;/code&gt; initialization, so you can then look for the commit which changed the &lt;code&gt;VersionLock&lt;/code&gt; hash.&lt;/p&gt;
&lt;p&gt;To use &lt;code&gt;VersionLock&lt;/code&gt;s, create the &lt;code&gt;CoreStoreSchema&lt;/code&gt;, run the app, and look for a similar log message that is automatically printed to the console:&lt;/p&gt;
&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="https://cloud.githubusercontent.com/assets/3029684/26525632/757f1bd0-4398-11e7-9795-4132a2df0538.png"&gt;&lt;img width="700" alt="VersionLock" src="https://cloud.githubusercontent.com/assets/3029684/26525632/757f1bd0-4398-11e7-9795-4132a2df0538.png" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Copy this dictionary value and use it as the &lt;code&gt;versionLock:&lt;/code&gt; argument of the &lt;code&gt;CoreStoreSchema&lt;/code&gt; initializer:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-c1"&gt;CoreStoreSchema&lt;/span&gt;(
    &lt;span class="pl-c1"&gt;modelVersion&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;V1&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;,
    &lt;span class="pl-c1"&gt;entities&lt;/span&gt;: [
        Entity&lt;span class="pl-k"&gt;&amp;lt;&lt;/span&gt;Animal&lt;span class="pl-k"&gt;&amp;gt;&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;Animal&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-c1"&gt;isAbstract&lt;/span&gt;: &lt;span class="pl-c1"&gt;true&lt;/span&gt;),
        Entity&lt;span class="pl-k"&gt;&amp;lt;&lt;/span&gt;Dog&lt;span class="pl-k"&gt;&amp;gt;&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;Dog&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;),
        Entity&lt;span class="pl-k"&gt;&amp;lt;&lt;/span&gt;Person&lt;span class="pl-k"&gt;&amp;gt;&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;Person&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;),
    ],
    &lt;span class="pl-c1"&gt;versionLock&lt;/span&gt;: [
        &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;Animal&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;&lt;span class="pl-k"&gt;:&lt;/span&gt; [&lt;span class="pl-c1"&gt;0x1b59d511019695cf&lt;/span&gt;, &lt;span class="pl-c1"&gt;0xdeb97e86c5eff179&lt;/span&gt;, &lt;span class="pl-c1"&gt;0x1cfd80745646cb3&lt;/span&gt;, &lt;span class="pl-c1"&gt;0x4ff99416175b5b9a&lt;/span&gt;],
        &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;Dog&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;&lt;span class="pl-k"&gt;:&lt;/span&gt; [&lt;span class="pl-c1"&gt;0xe3f0afeb109b283a&lt;/span&gt;, &lt;span class="pl-c1"&gt;0x29998d292938eb61&lt;/span&gt;, &lt;span class="pl-c1"&gt;0x6aab788333cfc2a3&lt;/span&gt;, &lt;span class="pl-c1"&gt;0x492ff1d295910ea7&lt;/span&gt;],
        &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;Person&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;&lt;span class="pl-k"&gt;:&lt;/span&gt; [&lt;span class="pl-c1"&gt;0x66d8bbfd8b21561f&lt;/span&gt;, &lt;span class="pl-c1"&gt;0xcecec69ecae3570f&lt;/span&gt;, &lt;span class="pl-c1"&gt;0xc4b73d71256214ef&lt;/span&gt;, &lt;span class="pl-c1"&gt;0x89b99bfe3e013e8b&lt;/span&gt;]
    ]
)&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;You can also get this hash after the &lt;code&gt;DataStack&lt;/code&gt; has been fully set up by printing to the console:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-c1"&gt;print&lt;/span&gt;(CoreStoreDefaults.&lt;span class="pl-smi"&gt;dataStack&lt;/span&gt;.&lt;span class="pl-smi"&gt;modelSchema&lt;/span&gt;.&lt;span class="pl-c1"&gt;printCoreStoreSchema&lt;/span&gt;())&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Once the version lock is set, any changes in the properties or to the model will trigger an assertion failure similar to this:&lt;/p&gt;
&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="https://cloud.githubusercontent.com/assets/3029684/26525666/92f46f0c-4399-11e7-9395-4379f6f20876.png"&gt;&lt;img width="700" alt="VersionLock failure" src="https://cloud.githubusercontent.com/assets/3029684/26525666/92f46f0c-4399-11e7-9395-4379f6f20876.png" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h1&gt;&lt;a id="user-content-installation" class="anchor" aria-hidden="true" href="#installation"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Installation&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;Requires:
&lt;ul&gt;
&lt;li&gt;iOS 10 SDK and above&lt;/li&gt;
&lt;li&gt;Swift 5.1 (Xcode 11+)&lt;/li&gt;
&lt;li&gt;For previous Swift versions: &lt;a href="https://github.com/JohnEstropia/CoreStore/tree/4.2.3"&gt;Swift 3.2&lt;/a&gt;, &lt;a href="https://github.com/JohnEstropia/CoreStore/tree/6.2.1"&gt;Swift 4.2&lt;/a&gt;, &lt;a href="https://github.com/JohnEstropia/CoreStore/tree/6.3.2"&gt;Swift 5.0&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Dependencies:
&lt;ul&gt;
&lt;li&gt;&lt;em&gt;None&lt;/em&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Other notes:
&lt;ul&gt;
&lt;li&gt;The &lt;code&gt;com.apple.CoreData.ConcurrencyDebug&lt;/code&gt; debug argument should be turned off for the app. CoreStore already guarantees safety for you by making the main context read-only, and by only executing transactions serially.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;&lt;a id="user-content-install-with-cocoapods" class="anchor" aria-hidden="true" href="#install-with-cocoapods"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Install with CocoaPods&lt;/h3&gt;
&lt;p&gt;In your &lt;code&gt;Podfile&lt;/code&gt;, add&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;pod 'CoreStore', '~&amp;gt; 7.0'
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;and run&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;pod update
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;This installs CoreStore as a framework. Declare &lt;code&gt;import CoreStore&lt;/code&gt; in your swift file to use the library.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-install-with-carthage" class="anchor" aria-hidden="true" href="#install-with-carthage"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Install with Carthage&lt;/h3&gt;
&lt;p&gt;In your &lt;code&gt;Cartfile&lt;/code&gt;, add&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;github "JohnEstropia/CoreStore" &amp;gt;= 7.0.0
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;and run&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;carthage update
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;This installs CoreStore as a framework. Declare &lt;code&gt;import CoreStore&lt;/code&gt; in your swift file to use the library.&lt;/p&gt;
&lt;h4&gt;&lt;a id="user-content-install-with-swift-package-manager" class="anchor" aria-hidden="true" href="#install-with-swift-package-manager"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Install with Swift Package Manager:&lt;/h4&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;dependencies&lt;span class="pl-k"&gt;:&lt;/span&gt; [
    .&lt;span class="pl-c1"&gt;package&lt;/span&gt;(&lt;span class="pl-c1"&gt;url&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;https://github.com/JohnEstropia/CoreStore.git&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-c1"&gt;from&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;7.0.0&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;))
]&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Declare &lt;code&gt;import CoreStore&lt;/code&gt; in your swift file to use the library.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-install-as-git-submodule" class="anchor" aria-hidden="true" href="#install-as-git-submodule"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Install as Git Submodule&lt;/h3&gt;
&lt;pre&gt;&lt;code&gt;git submodule add https://github.com/JohnEstropia/CoreStore.git &amp;lt;destination directory&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Drag and drop &lt;strong&gt;CoreStore.xcodeproj&lt;/strong&gt; to your project.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-install-through-xcodes-swift-package-manager" class="anchor" aria-hidden="true" href="#install-through-xcodes-swift-package-manager"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Install through Xcode's Swift Package Manager&lt;/h3&gt;
&lt;p&gt;From the &lt;strong&gt;File&lt;/strong&gt; - &lt;strong&gt;Swift Packages&lt;/strong&gt; - &lt;strong&gt;Add Package Dependency…&lt;/strong&gt; menu, search for&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;CoreStore
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;where &lt;code&gt;JohnEstropia&lt;/code&gt; is the &lt;em&gt;Owner&lt;/em&gt;. Then add to your project.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-objective-c-support-1" class="anchor" aria-hidden="true" href="#objective-c-support-1"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Objective-C support&lt;/h3&gt;
&lt;p&gt;To use the Objective-C syntax sugars, import &lt;em&gt;CoreStoreBridge.h&lt;/em&gt; in your &lt;em&gt;.m&lt;/em&gt; source files.&lt;/p&gt;
&lt;h1&gt;&lt;a id="user-content-changesets" class="anchor" aria-hidden="true" href="#changesets"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Changesets&lt;/h1&gt;
&lt;p&gt;For the full Changelog, refer to the &lt;a href="https://github.com/JohnEstropia/CoreStore/releases"&gt;Releases&lt;/a&gt; page.&lt;/p&gt;
&lt;h1&gt;&lt;a id="user-content-contact" class="anchor" aria-hidden="true" href="#contact"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Contact&lt;/h1&gt;
&lt;p&gt;You can reach me on Twitter &lt;a href="https://twitter.com/JohnEstropia" rel="nofollow"&gt;@JohnEstropia&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;or join our Slack team at &lt;a href="http://swift-corestore-slack.herokuapp.com/" rel="nofollow"&gt;swift-corestore.slack.com&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;日本語の対応も可能なので是非！&lt;/p&gt;
&lt;h1&gt;&lt;a id="user-content-who-uses-corestore" class="anchor" aria-hidden="true" href="#who-uses-corestore"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Who uses CoreStore?&lt;/h1&gt;
&lt;p&gt;I'd love to hear about apps using CoreStore. Send me a message and I'll welcome any feedback!&lt;/p&gt;
&lt;h1&gt;&lt;a id="user-content-license" class="anchor" aria-hidden="true" href="#license"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;License&lt;/h1&gt;
&lt;p&gt;CoreStore is released under an MIT license. See the &lt;a href="https://raw.githubusercontent.com/JohnEstropia/CoreStore/master/LICENSE" rel="nofollow"&gt;LICENSE&lt;/a&gt; file for more information&lt;/p&gt;
&lt;/article&gt;&lt;/div&gt;</description><author>JohnEstropia</author><guid isPermaLink="false">https://github.com/JohnEstropia/CoreStore</guid><pubDate>Sat, 25 Jan 2020 00:13:00 GMT</pubDate></item><item><title>ReactiveX/RxSwift #14 in Swift, This week</title><link>https://github.com/ReactiveX/RxSwift</link><description>&lt;p&gt;&lt;i&gt;Reactive Programming in Swift&lt;/i&gt;&lt;/p&gt;&lt;div id="readme" class="md" data-path="README.md"&gt;&lt;article class="markdown-body entry-content p-5" itemprop="text"&gt;&lt;h1&gt;&lt;a id="user-content--rxswift-reactivex-for-swift" class="anchor" aria-hidden="true" href="#-rxswift-reactivex-for-swift"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;a target="_blank" rel="noopener noreferrer" href="https://raw.githubusercontent.com/ReactiveX/RxSwift/master/assets/Rx_Logo_M.png"&gt;&lt;img src="https://raw.githubusercontent.com/ReactiveX/RxSwift/master/assets/Rx_Logo_M.png" alt="Miss Electric Eel 2016" width="36" height="36" style="max-width:100%;"&gt;&lt;/a&gt; RxSwift: ReactiveX for Swift&lt;/h1&gt;
&lt;p&gt;&lt;a href="https://travis-ci.org/ReactiveX/RxSwift" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/d6899870ec82f2a13bcbdc55834ee9718be7678a/68747470733a2f2f7472617669732d63692e6f72672f5265616374697665582f527853776966742e7376673f6272616e63683d6d6173746572" alt="Travis CI" data-canonical-src="https://travis-ci.org/ReactiveX/RxSwift.svg?branch=master" style="max-width:100%;"&gt;&lt;/a&gt; &lt;a target="_blank" rel="noopener noreferrer" href="https://camo.githubusercontent.com/cad98e8f98045360e4b82f574b86b45952b3feb1/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f706c6174666f726d732d694f532532302537432532306d61634f5325323025374325323074764f5325323025374325323077617463684f532532302537432532304c696e75782d3333333333332e737667"&gt;&lt;img src="https://camo.githubusercontent.com/cad98e8f98045360e4b82f574b86b45952b3feb1/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f706c6174666f726d732d694f532532302537432532306d61634f5325323025374325323074764f5325323025374325323077617463684f532532302537432532304c696e75782d3333333333332e737667" alt="platforms" data-canonical-src="https://img.shields.io/badge/platforms-iOS%20%7C%20macOS%20%7C%20tvOS%20%7C%20watchOS%20%7C%20Linux-333333.svg" style="max-width:100%;"&gt;&lt;/a&gt; &lt;a href="https://cocoapods.org/pods/RxSwift" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/91ac251cd8e6775af6ec6807fc0c354827c6878f/68747470733a2f2f696d672e736869656c64732e696f2f636f636f61706f64732f762f527853776966742e737667" alt="pod" data-canonical-src="https://img.shields.io/cocoapods/v/RxSwift.svg" style="max-width:100%;"&gt;&lt;/a&gt; &lt;a href="https://github.com/Carthage/Carthage"&gt;&lt;img src="https://camo.githubusercontent.com/3dc8a44a2c3f7ccd5418008d1295aae48466c141/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f43617274686167652d636f6d70617469626c652d3442433531442e7376673f7374796c653d666c6174" alt="Carthage compatible" data-canonical-src="https://img.shields.io/badge/Carthage-compatible-4BC51D.svg?style=flat" style="max-width:100%;"&gt;&lt;/a&gt; &lt;a href="https://github.com/apple/swift-package-manager"&gt;&lt;img src="https://camo.githubusercontent.com/ad744674ba25cccb6e683eb78b7c485e1b63b2d2/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f53776966742532305061636b6167652532304d616e616765722d636f6d70617469626c652d627269676874677265656e2e737667" alt="Swift Package Manager compatible" data-canonical-src="https://img.shields.io/badge/Swift%20Package%20Manager-compatible-brightgreen.svg" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Rx is a &lt;a href="https://youtu.be/looJcaeboBY" rel="nofollow"&gt;generic abstraction of computation&lt;/a&gt; expressed through &lt;code&gt;Observable&amp;lt;Element&amp;gt;&lt;/code&gt; interface.&lt;/p&gt;
&lt;p&gt;This is a Swift version of &lt;a href="https://github.com/Reactive-Extensions/Rx.NET"&gt;Rx&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;It tries to port as many concepts from the original version as possible, but some concepts were adapted for more pleasant and performant integration with iOS/macOS environment.&lt;/p&gt;
&lt;p&gt;Cross platform documentation can be found on &lt;a href="http://reactivex.io/" rel="nofollow"&gt;ReactiveX.io&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Like the original Rx, its intention is to enable easy composition of asynchronous operations and event/data streams.&lt;/p&gt;
&lt;p&gt;KVO observing, async operations and streams are all unified under &lt;a href="Documentation/GettingStarted.md#observables-aka-sequences"&gt;abstraction of sequence&lt;/a&gt;. This is the reason why Rx is so simple, elegant and powerful.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-i-came-here-because-i-want-to-" class="anchor" aria-hidden="true" href="#i-came-here-because-i-want-to-"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;I came here because I want to ...&lt;/h2&gt;
&lt;h6&gt;&lt;a id="user-content--understand" class="anchor" aria-hidden="true" href="#-understand"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;... understand&lt;/h6&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="Documentation/Why.md"&gt;why use rx?&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="Documentation/GettingStarted.md"&gt;the basics, getting started with RxSwift&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="Documentation/Traits.md"&gt;traits&lt;/a&gt; - what are &lt;code&gt;Single&lt;/code&gt;, &lt;code&gt;Completable&lt;/code&gt;, &lt;code&gt;Maybe&lt;/code&gt;, &lt;code&gt;Driver&lt;/code&gt;, and &lt;code&gt;ControlProperty&lt;/code&gt; ... and why do they exist?&lt;/li&gt;
&lt;li&gt;&lt;a href="Documentation/UnitTests.md"&gt;testing&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="Documentation/Tips.md"&gt;tips and common errors&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="Documentation/GettingStarted.md#debugging"&gt;debugging&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="Documentation/MathBehindRx.md"&gt;the math behind Rx&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="Documentation/HotAndColdObservables.md"&gt;what are hot and cold observable sequences?&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h6&gt;&lt;a id="user-content--install" class="anchor" aria-hidden="true" href="#-install"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;... install&lt;/h6&gt;
&lt;ul&gt;
&lt;li&gt;Integrate RxSwift/RxCocoa with my app. &lt;a href="#installation"&gt;Installation Guide&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h6&gt;&lt;a id="user-content--hack-around" class="anchor" aria-hidden="true" href="#-hack-around"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;... hack around&lt;/h6&gt;
&lt;ul&gt;
&lt;li&gt;with the example app. &lt;a href="Documentation/ExampleApp.md"&gt;Running Example App&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;with operators in playgrounds. &lt;a href="Documentation/Playgrounds.md"&gt;Playgrounds&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h6&gt;&lt;a id="user-content--interact" class="anchor" aria-hidden="true" href="#-interact"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;... interact&lt;/h6&gt;
&lt;ul&gt;
&lt;li&gt;All of this is great, but it would be nice to talk with other people using RxSwift and exchange experiences. &lt;br&gt;&lt;a href="http://slack.rxswift.org" rel="nofollow"&gt;Join Slack Channel&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Report a problem using the library. &lt;a href=".github/ISSUE_TEMPLATE.md"&gt;Open an Issue With Bug Template&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Request a new feature. &lt;a href="Documentation/NewFeatureRequestTemplate.md"&gt;Open an Issue With Feature Request Template&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Help out &lt;a href="CONTRIBUTING.md"&gt;Check out contribution guide&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h6&gt;&lt;a id="user-content--compare" class="anchor" aria-hidden="true" href="#-compare"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;... compare&lt;/h6&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="Documentation/ComparisonWithOtherLibraries.md"&gt;with other libraries&lt;/a&gt;.&lt;/li&gt;
&lt;/ul&gt;
&lt;h6&gt;&lt;a id="user-content--understand-the-structure" class="anchor" aria-hidden="true" href="#-understand-the-structure"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;... understand the structure&lt;/h6&gt;
&lt;p&gt;RxSwift comprises five separate components depending on eachother in the following way:&lt;/p&gt;
&lt;pre lang="none"&gt;&lt;code&gt;┌──────────────┐    ┌──────────────┐
│   RxCocoa    ├────▶   RxRelay    │
└───────┬──────┘    └──────┬───────┘
        │                  │        
┌───────▼──────────────────▼───────┐
│             RxSwift              │
└───────▲──────────────────▲───────┘
        │                  │        
┌───────┴──────┐    ┌──────┴───────┐
│    RxTest    │    │  RxBlocking  │
└──────────────┘    └──────────────┘
&lt;/code&gt;&lt;/pre&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;RxSwift&lt;/strong&gt;: The core of RxSwift, providing the Rx standard as (mostly) defined by &lt;a href="https://reactivex.io" rel="nofollow"&gt;ReactiveX&lt;/a&gt;. It has no other dependencies.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;RxCocoa&lt;/strong&gt;: Provides Cocoa-specific capabilities for general iOS/macOS/watchOS &amp;amp; tvOS app development, such as Binders, Traits, and much more. It depends on both &lt;code&gt;RxSwift&lt;/code&gt; and &lt;code&gt;RxRelay&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;RxRelay&lt;/strong&gt;: Provides &lt;code&gt;PublishRelay&lt;/code&gt; and &lt;code&gt;BehaviorRelay&lt;/code&gt;, two &lt;a href="https://github.com/ReactiveX/RxSwift/blob/master/Documentation/Subjects.md#relays"&gt;simple wrappers around Subjects&lt;/a&gt;. It depends on &lt;code&gt;RxSwift&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;RxTest&lt;/strong&gt; and &lt;strong&gt;RxBlocking&lt;/strong&gt;: Provides testing capabilities for Rx-based systems. It depends on &lt;code&gt;RxSwift&lt;/code&gt;.&lt;/li&gt;
&lt;/ul&gt;
&lt;h6&gt;&lt;a id="user-content--find-compatible" class="anchor" aria-hidden="true" href="#-find-compatible"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;... find compatible&lt;/h6&gt;
&lt;ul&gt;
&lt;li&gt;libraries from &lt;a href="https://github.com/RxSwiftCommunity"&gt;RxSwiftCommunity&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://cocoapods.org/?q=uses%3Arxswift" rel="nofollow"&gt;Pods using RxSwift&lt;/a&gt;.&lt;/li&gt;
&lt;/ul&gt;
&lt;h6&gt;&lt;a id="user-content--see-the-broader-vision" class="anchor" aria-hidden="true" href="#-see-the-broader-vision"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;... see the broader vision&lt;/h6&gt;
&lt;ul&gt;
&lt;li&gt;Does this exist for Android? &lt;a href="https://github.com/ReactiveX/RxJava"&gt;RxJava&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Where is all of this going, what is the future, what about reactive architectures, how do you design entire apps this way? &lt;a href="https://github.com/cyclejs/cycle-core"&gt;Cycle.js&lt;/a&gt; - this is javascript, but &lt;a href="https://github.com/Reactive-Extensions/RxJS"&gt;RxJS&lt;/a&gt; is javascript version of Rx.&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-usage" class="anchor" aria-hidden="true" href="#usage"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Usage&lt;/h2&gt;
&lt;table&gt;
  &lt;tbody&gt;&lt;tr&gt;
    &lt;th width="30%"&gt;Here's an example&lt;/th&gt;
    &lt;th width="30%"&gt;In Action&lt;/th&gt;
  &lt;/tr&gt;
  &lt;tr&gt;
    &lt;td&gt;Define search for GitHub repositories ...&lt;/td&gt;
    &lt;th rowspan="9"&gt;&lt;a target="_blank" rel="noopener noreferrer" href="https://raw.githubusercontent.com/kzaher/rxswiftcontent/master/GithubSearch.gif"&gt;&lt;img src="https://raw.githubusercontent.com/kzaher/rxswiftcontent/master/GithubSearch.gif" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/th&gt;
  &lt;/tr&gt;
  &lt;tr&gt;
    &lt;td&gt;&lt;div&gt;&lt;pre&gt;let searchResults = searchBar.rx.text.orEmpty
    .throttle(.milliseconds(300), scheduler: MainScheduler.instance)
    .distinctUntilChanged()
    .flatMapLatest { query -&amp;gt; Observable&amp;lt;[Repository]&amp;gt; in
        if query.isEmpty {
            return .just([])
        }
        return searchGitHub(query)
            .catchErrorJustReturn([])
    }
    .observeOn(MainScheduler.instance)&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;
  &lt;/tr&gt;
  &lt;tr&gt;
    &lt;td&gt;... then bind the results to your tableview&lt;/td&gt;
  &lt;/tr&gt;
  &lt;tr&gt;
    &lt;td width="30%"&gt;&lt;div&gt;&lt;pre&gt;searchResults
    .bind(to: tableView.rx.items(cellIdentifier: "Cell")) {
        (index, repository: Repository, cell) in
        cell.textLabel?.text = repository.name
        cell.detailTextLabel?.text = repository.url
    }
    .disposed(by: disposeBag)&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;
  &lt;/tr&gt;
&lt;/tbody&gt;&lt;/table&gt;
&lt;h2&gt;&lt;a id="user-content-requirements" class="anchor" aria-hidden="true" href="#requirements"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Requirements&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Xcode 10.2&lt;/li&gt;
&lt;li&gt;Swift 5.0&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;For Xcode 10.1 and below, &lt;a href="https://github.com/ReactiveX/RxSwift/releases/tag/4.5.0"&gt;use RxSwift 4.5&lt;/a&gt;.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-installation" class="anchor" aria-hidden="true" href="#installation"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Installation&lt;/h2&gt;
&lt;p&gt;Rx doesn't contain any external dependencies.&lt;/p&gt;
&lt;p&gt;These are currently the supported options:&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-manual" class="anchor" aria-hidden="true" href="#manual"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Manual&lt;/h3&gt;
&lt;p&gt;Open Rx.xcworkspace, choose &lt;code&gt;RxExample&lt;/code&gt; and hit run. This method will build everything and run the sample app&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-cocoapods" class="anchor" aria-hidden="true" href="#cocoapods"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;a href="https://guides.cocoapods.org/using/using-cocoapods.html" rel="nofollow"&gt;CocoaPods&lt;/a&gt;&lt;/h3&gt;
&lt;div class="highlight highlight-source-ruby"&gt;&lt;pre&gt;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; Podfile&lt;/span&gt;
use_frameworks!

target &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;YOUR_TARGET_NAME&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt; &lt;span class="pl-k"&gt;do&lt;/span&gt;
    pod &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;RxSwift&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;~&amp;gt; 5&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;
    pod &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;RxCocoa&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;~&amp;gt; 5&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;
&lt;span class="pl-k"&gt;end&lt;/span&gt;

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; RxTest and RxBlocking make the most sense in the context of unit/integration tests&lt;/span&gt;
target &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;YOUR_TESTING_TARGET&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt; &lt;span class="pl-k"&gt;do&lt;/span&gt;
    pod &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;RxBlocking&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;~&amp;gt; 5&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;
    pod &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;RxTest&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;~&amp;gt; 5&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;
&lt;span class="pl-k"&gt;end&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Replace &lt;code&gt;YOUR_TARGET_NAME&lt;/code&gt; and then, in the &lt;code&gt;Podfile&lt;/code&gt; directory, type:&lt;/p&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt;$ pod install&lt;/pre&gt;&lt;/div&gt;
&lt;h3&gt;&lt;a id="user-content-carthage" class="anchor" aria-hidden="true" href="#carthage"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;a href="https://github.com/Carthage/Carthage"&gt;Carthage&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;Officially supported: Carthage 0.33 and up.&lt;/p&gt;
&lt;p&gt;Add this to &lt;code&gt;Cartfile&lt;/code&gt;&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;github "ReactiveX/RxSwift" ~&amp;gt; 5.0
&lt;/code&gt;&lt;/pre&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt;$ carthage update&lt;/pre&gt;&lt;/div&gt;
&lt;h4&gt;&lt;a id="user-content-carthage-as-a-static-library" class="anchor" aria-hidden="true" href="#carthage-as-a-static-library"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Carthage as a Static Library&lt;/h4&gt;
&lt;p&gt;Carthage defaults to building RxSwift as a Dynamic Library.&lt;/p&gt;
&lt;p&gt;If you wish to build RxSwift as a Static Library using Carthage you may use the script below to manually modify the framework type before building with Carthage:&lt;/p&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt;carthage update RxSwift --platform iOS --no-build
sed -i -e &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;s/MACH_O_TYPE = mh_dylib/MACH_O_TYPE = staticlib/g&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt; Carthage/Checkouts/RxSwift/Rx.xcodeproj/project.pbxproj
carthage build RxSwift --platform iOS&lt;/pre&gt;&lt;/div&gt;
&lt;h3&gt;&lt;a id="user-content-swift-package-manager" class="anchor" aria-hidden="true" href="#swift-package-manager"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;a href="https://github.com/apple/swift-package-manager"&gt;Swift Package Manager&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;Create a &lt;code&gt;Package.swift&lt;/code&gt; file.&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; swift-tools-version:5.0&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;
&lt;span class="pl-k"&gt;import&lt;/span&gt; &lt;span class="pl-en"&gt;PackageDescription&lt;/span&gt;

&lt;span class="pl-k"&gt;let&lt;/span&gt; package &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;Package&lt;/span&gt;(
  &lt;span class="pl-c1"&gt;name&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;RxTestProject&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;,
  &lt;span class="pl-c1"&gt;dependencies&lt;/span&gt;: [
    .&lt;span class="pl-c1"&gt;package&lt;/span&gt;(&lt;span class="pl-c1"&gt;url&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;https://github.com/ReactiveX/RxSwift.git&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-c1"&gt;from&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;5.0.0&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
  ],
  &lt;span class="pl-c1"&gt;targets&lt;/span&gt;: [
    .&lt;span class="pl-c1"&gt;target&lt;/span&gt;(&lt;span class="pl-c1"&gt;name&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;RxTestProject&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-c1"&gt;dependencies&lt;/span&gt;: [&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;RxSwift&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;RxCocoa&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;])
  ]
)&lt;/pre&gt;&lt;/div&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt;$ swift build&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;To build or test a module with RxTest dependency, set &lt;code&gt;TEST=1&lt;/code&gt;.&lt;/p&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt;$ TEST=1 swift &lt;span class="pl-c1"&gt;test&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h3&gt;&lt;a id="user-content-manually-using-git-submodules" class="anchor" aria-hidden="true" href="#manually-using-git-submodules"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Manually using git submodules&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;Add RxSwift as a submodule&lt;/li&gt;
&lt;/ul&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt;$ git submodule add git@github.com:ReactiveX/RxSwift.git&lt;/pre&gt;&lt;/div&gt;
&lt;ul&gt;
&lt;li&gt;Drag &lt;code&gt;Rx.xcodeproj&lt;/code&gt; into Project Navigator&lt;/li&gt;
&lt;li&gt;Go to &lt;code&gt;Project &amp;gt; Targets &amp;gt; Build Phases &amp;gt; Link Binary With Libraries&lt;/code&gt;, click &lt;code&gt;+&lt;/code&gt; and select &lt;code&gt;RxSwift-[Platform]&lt;/code&gt; and &lt;code&gt;RxCocoa-[Platform]&lt;/code&gt; targets&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-references" class="anchor" aria-hidden="true" href="#references"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;References&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://reactivex.io/" rel="nofollow"&gt;http://reactivex.io/&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/Reactive-Extensions"&gt;Reactive Extensions GitHub (GitHub)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://store.raywenderlich.com/products/rxswift-reactive-programming-with-swift" rel="nofollow"&gt;RxSwift RayWenderlich.com Book&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://boxueio.com/series/rxswift-101" rel="nofollow"&gt;Boxue.io RxSwift Online Course&lt;/a&gt; (Chinese &lt;g-emoji class="g-emoji" alias="cn" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f1e8-1f1f3.png"&gt;🇨🇳&lt;/g-emoji&gt;)&lt;/li&gt;
&lt;li&gt;&lt;a href="http://en.wikipedia.org/wiki/Erik_Meijer_%28computer_scientist%29" rel="nofollow"&gt;Erik Meijer (Wikipedia)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://youtu.be/looJcaeboBY" rel="nofollow"&gt;Expert to Expert: Brian Beckman and Erik Meijer - Inside the .NET Reactive Framework (Rx) (video)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=dwP1TNXE6fc" rel="nofollow"&gt;Reactive Programming Overview (Jafar Husain from Netflix)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://csl.stanford.edu/~christos/pldi2010.fit/meijer.duality.pdf" rel="nofollow"&gt;Subject/Observer is Dual to Iterator (paper)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://rxmarbles.com/" rel="nofollow"&gt;Rx standard sequence operators visualized (visualization tool)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.haskell.org/" rel="nofollow"&gt;Haskell&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/article&gt;&lt;/div&gt;</description><author>ReactiveX</author><guid isPermaLink="false">https://github.com/ReactiveX/RxSwift</guid><pubDate>Sat, 25 Jan 2020 00:14:00 GMT</pubDate></item><item><title>Moya/Moya #15 in Swift, This week</title><link>https://github.com/Moya/Moya</link><description>&lt;p&gt;&lt;i&gt;Network abstraction layer written in Swift.&lt;/i&gt;&lt;/p&gt;&lt;div id="readme" class="md" data-path="Readme.md"&gt;&lt;article class="markdown-body entry-content p-5" itemprop="text"&gt;&lt;p align="center"&gt;
  &lt;a target="_blank" rel="noopener noreferrer" href="web/logo_github.png"&gt;&lt;img height="160" src="web/logo_github.png" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;/p&gt;
&lt;h1&gt;&lt;a id="user-content-moya" class="anchor" aria-hidden="true" href="#moya"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Moya&lt;/h1&gt;
&lt;p&gt;&lt;a href="https://circleci.com/gh/Moya/Moya/tree/master" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/5e0dc66afdf3870b6b12a9e8fcc9a15365d08eed/68747470733a2f2f696d672e736869656c64732e696f2f636972636c6563692f70726f6a6563742f6769746875622f4d6f79612f4d6f79612f6d61737465722e737667" alt="CircleCI" data-canonical-src="https://img.shields.io/circleci/project/github/Moya/Moya/master.svg" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://codecov.io/github/Moya/Moya?branch=master" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/268e1e6bf9a95f7cce2e14ec13e49380e244d21f/68747470733a2f2f636f6465636f762e696f2f6769746875622f4d6f79612f4d6f79612f636f7665726167652e7376673f6272616e63683d6d6173746572" alt="codecov.io" data-canonical-src="https://codecov.io/github/Moya/Moya/coverage.svg?branch=master" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://github.com/Carthage/Carthage"&gt;&lt;img src="https://camo.githubusercontent.com/3dc8a44a2c3f7ccd5418008d1295aae48466c141/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f43617274686167652d636f6d70617469626c652d3442433531442e7376673f7374796c653d666c6174" alt="Carthage compatible" data-canonical-src="https://img.shields.io/badge/Carthage-compatible-4BC51D.svg?style=flat" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://github.com/JamitLabs/Accio"&gt;&lt;img src="https://camo.githubusercontent.com/e502cdc2b27c1f2b2590f061d37b984ba3957c26/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f416363696f2d737570706f727465642d3041374346352e7376673f7374796c653d666c6174" alt="Accio supported" data-canonical-src="https://img.shields.io/badge/Accio-supported-0A7CF5.svg?style=flat" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://cocoapods.org/pods/Moya" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/b0f0f8c67e89bb954ebbf89c5cc7167d8c68f4f9/68747470733a2f2f696d672e736869656c64732e696f2f636f636f61706f64732f762f4d6f79612e737667" alt="CocoaPods compatible" data-canonical-src="https://img.shields.io/cocoapods/v/Moya.svg" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://github.com/apple/swift-package-manager"&gt;&lt;img src="https://camo.githubusercontent.com/ad744674ba25cccb6e683eb78b7c485e1b63b2d2/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f53776966742532305061636b6167652532304d616e616765722d636f6d70617469626c652d627269676874677265656e2e737667" alt="Swift Package Manager compatible" data-canonical-src="https://img.shields.io/badge/Swift%20Package%20Manager-compatible-brightgreen.svg" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;em&gt;A Chinese version of this document can be found &lt;a href="https://github.com/Moya/Moya/blob/master/Readme_CN.md"&gt;here&lt;/a&gt;.&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;You're a smart developer. You probably use &lt;a href="https://github.com/Alamofire/Alamofire"&gt;Alamofire&lt;/a&gt; to abstract away access to
&lt;code&gt;URLSession&lt;/code&gt; and all those nasty details you don't really care about. But then,
like lots of smart developers, you write ad hoc network abstraction layers. They
are probably called "APIManager" or "NetworkModel", and they always end in tears.&lt;/p&gt;
&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="web/diagram.png"&gt;&lt;img src="web/diagram.png" alt="Moya Overview" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Ad hoc network layers are common in iOS apps. They're bad for a few reasons:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Makes it hard to write new apps ("where do I begin?")&lt;/li&gt;
&lt;li&gt;Makes it hard to maintain existing apps ("oh my god, this mess...")&lt;/li&gt;
&lt;li&gt;Makes it hard to write unit tests ("how do I do this again?")&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;So the basic idea of Moya is that we want some network abstraction layer that
sufficiently encapsulates actually calling Alamofire directly. It should be simple
enough that common things are easy, but comprehensive enough that complicated things
are also easy.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;If you use Alamofire to abstract away &lt;code&gt;URLSession&lt;/code&gt;, why not use something
to abstract away the nitty gritty of URLs, parameters, etc?&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Some awesome features of Moya:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Compile-time checking for correct API endpoint accesses.&lt;/li&gt;
&lt;li&gt;Lets you define a clear usage of different endpoints with associated enum values.&lt;/li&gt;
&lt;li&gt;Treats test stubs as first-class citizens so unit testing is super-easy.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;You can check out more about the project direction in the &lt;a href="https://github.com/Moya/Moya/blob/master/Vision.md"&gt;vision document&lt;/a&gt;.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-sample-projects" class="anchor" aria-hidden="true" href="#sample-projects"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Sample Projects&lt;/h2&gt;
&lt;p&gt;We have provided two sample projects in the repository. To use it download the repo, run &lt;code&gt;carthage update&lt;/code&gt; to download the required libraries and  open &lt;a href="https://github.com/Moya/Moya/tree/master/Moya.xcodeproj"&gt;Moya.xcodeproj&lt;/a&gt;. You'll see two schemes: &lt;code&gt;Basic&lt;/code&gt; and &lt;code&gt;Multi-Target&lt;/code&gt; - select one and then build &amp;amp; run! Source files for these are in the &lt;code&gt;Examples&lt;/code&gt; directory in project navigator. Have fun!&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-project-status" class="anchor" aria-hidden="true" href="#project-status"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Project Status&lt;/h2&gt;
&lt;p&gt;This project is actively under development, and is being used in &lt;a href="https://github.com/Artsy/eidolon"&gt;Artsy's
new auction app&lt;/a&gt;. We consider it
ready for production use.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-installation" class="anchor" aria-hidden="true" href="#installation"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Installation&lt;/h2&gt;
&lt;h3&gt;&lt;a id="user-content-moya-version-vs-swift-version" class="anchor" aria-hidden="true" href="#moya-version-vs-swift-version"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Moya version vs Swift version.&lt;/h3&gt;
&lt;p&gt;Below is a table that shows which version of Moya you should use for
your Swift version.&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Swift&lt;/th&gt;
&lt;th&gt;Moya&lt;/th&gt;
&lt;th&gt;RxMoya&lt;/th&gt;
&lt;th&gt;ReactiveMoya&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;5.X&lt;/td&gt;
&lt;td&gt;&amp;gt;= 13.0.0&lt;/td&gt;
&lt;td&gt;&amp;gt;= 13.0.0&lt;/td&gt;
&lt;td&gt;&amp;gt;= 13.0.0&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;4.X&lt;/td&gt;
&lt;td&gt;9.0.0 - 12.0.1&lt;/td&gt;
&lt;td&gt;10.0.0 - 12.0.1&lt;/td&gt;
&lt;td&gt;9.0.0 - 12.0.1&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;3.X&lt;/td&gt;
&lt;td&gt;8.0.0 - 8.0.5&lt;/td&gt;
&lt;td&gt;8.0.0 - 8.0.5&lt;/td&gt;
&lt;td&gt;8.0.0 - 8.0.5&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;2.3&lt;/td&gt;
&lt;td&gt;7.0.2 - 7.0.4&lt;/td&gt;
&lt;td&gt;7.0.2 - 7.0.4&lt;/td&gt;
&lt;td&gt;7.0.2 - 7.0.4&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;2.2&lt;/td&gt;
&lt;td&gt;&amp;lt;= 7.0.1&lt;/td&gt;
&lt;td&gt;&amp;lt;= 7.0.1&lt;/td&gt;
&lt;td&gt;&amp;lt;= 7.0.1&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;&lt;em&gt;Note: If you are using Swift 4.2 in your project, but you are using Xcode 10.2, Moya 13 should work correctly even though we use Swift 5.0.&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Upgrading to a new major version of Moya? Check out our &lt;a href="https://github.com/Moya/Moya/blob/master/docs/MigrationGuides"&gt;migration guides&lt;/a&gt;.&lt;/strong&gt;&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-swift-package-manager" class="anchor" aria-hidden="true" href="#swift-package-manager"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Swift Package Manager&lt;/h3&gt;
&lt;p&gt;To integrate using Apple's Swift package manager, add the following as a dependency to your &lt;code&gt;Package.swift&lt;/code&gt;:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;.&lt;span class="pl-c1"&gt;package&lt;/span&gt;(&lt;span class="pl-c1"&gt;url&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;https://github.com/Moya/Moya.git&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, .&lt;span class="pl-c1"&gt;upToNextMajor&lt;/span&gt;(&lt;span class="pl-c1"&gt;from&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;13.0.0&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;))&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;and then specify &lt;code&gt;"Moya"&lt;/code&gt; as a dependency of the Target in which you wish to use Moya.
If you want to use reactive extensions, add also &lt;code&gt;"ReactiveMoya"&lt;/code&gt; or &lt;code&gt;"RxMoya"&lt;/code&gt; as your Target dependency respectively.
Here's an example &lt;code&gt;PackageDescription&lt;/code&gt;:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; swift-tools-version:5.0&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;&lt;span class="pl-k"&gt;import&lt;/span&gt; &lt;span class="pl-en"&gt;PackageDescription&lt;/span&gt;

&lt;span class="pl-k"&gt;let&lt;/span&gt; package &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;Package&lt;/span&gt;(
    &lt;span class="pl-c1"&gt;name&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;MyPackage&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;,
    &lt;span class="pl-c1"&gt;products&lt;/span&gt;: [
        .&lt;span class="pl-c1"&gt;library&lt;/span&gt;(
            &lt;span class="pl-c1"&gt;name&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;MyPackage&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;,
            &lt;span class="pl-c1"&gt;targets&lt;/span&gt;: [&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;MyPackage&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;]),
    ],
    &lt;span class="pl-c1"&gt;dependencies&lt;/span&gt;: [
        .&lt;span class="pl-c1"&gt;package&lt;/span&gt;(&lt;span class="pl-c1"&gt;url&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;https://github.com/Moya/Moya.git&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, .&lt;span class="pl-c1"&gt;upToNextMajor&lt;/span&gt;(&lt;span class="pl-c1"&gt;from&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;13.0.0&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;))
    ],
    &lt;span class="pl-c1"&gt;targets&lt;/span&gt;: [
        .&lt;span class="pl-c1"&gt;target&lt;/span&gt;(
            &lt;span class="pl-c1"&gt;name&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;MyPackage&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;,
            &lt;span class="pl-c1"&gt;dependencies&lt;/span&gt;: [&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;ReactiveMoya&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;])
    ]
)&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Note that as of Moya 10, SPM only works with Swift 4 toolchain and greater.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-accio" class="anchor" aria-hidden="true" href="#accio"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Accio&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://github.com/JamitLabs/Accio"&gt;Accio&lt;/a&gt; is a dependency manager based on SwiftPM which can build frameworks for iOS/macOS/tvOS/watchOS. Therefore the integration steps of Moya are exactly the same as described above. Once your &lt;code&gt;Package.swift&lt;/code&gt; file is configured, run &lt;code&gt;accio update&lt;/code&gt; instead of &lt;code&gt;swift package update&lt;/code&gt;.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-cocoapods" class="anchor" aria-hidden="true" href="#cocoapods"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;CocoaPods&lt;/h3&gt;
&lt;p&gt;For Moya, use the following entry in your Podfile:&lt;/p&gt;
&lt;div class="highlight highlight-source-ruby"&gt;&lt;pre&gt;pod &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;Moya&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;~&amp;gt; 13.0&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; or &lt;/span&gt;

pod &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;Moya/RxSwift&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;~&amp;gt; 13.0&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; or&lt;/span&gt;

pod &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;Moya/ReactiveSwift&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;~&amp;gt; 13.0&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Then run &lt;code&gt;pod install&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;In any file you'd like to use Moya in, don't forget to
import the framework with &lt;code&gt;import Moya&lt;/code&gt;.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-carthage" class="anchor" aria-hidden="true" href="#carthage"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Carthage&lt;/h3&gt;
&lt;p&gt;Carthage users can point to this repository and use whichever
generated framework they'd like, &lt;code&gt;Moya&lt;/code&gt;, &lt;code&gt;RxMoya&lt;/code&gt;, or &lt;code&gt;ReactiveMoya&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;Make the following entry in your Cartfile:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;github "Moya/Moya" ~&amp;gt; 13.0
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Then run &lt;code&gt;carthage update&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;If this is your first time using Carthage in the project, you'll need to go through some additional steps as explained &lt;a href="https://github.com/Carthage/Carthage#adding-frameworks-to-an-application"&gt;over at Carthage&lt;/a&gt;.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;NOTE: At this time, Carthage does not provide a way to build only specific repository submodules. All submodules and their dependencies will be built with the above command. However, you don't need to copy frameworks you aren't using into your project. For instance, if you aren't using &lt;code&gt;ReactiveSwift&lt;/code&gt;, feel free to delete that framework along with &lt;code&gt;ReactiveMoya&lt;/code&gt; from the Carthage Build directory after &lt;code&gt;carthage update&lt;/code&gt; completes. Or if you are using &lt;code&gt;ReactiveSwift&lt;/code&gt; but not &lt;code&gt;RxSwift&lt;/code&gt;, then &lt;code&gt;RxMoya&lt;/code&gt;, &lt;code&gt;RxTest&lt;/code&gt;, &lt;code&gt;RxCocoa&lt;/code&gt;, etc. can safely be deleted.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3&gt;&lt;a id="user-content-manually" class="anchor" aria-hidden="true" href="#manually"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Manually&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;Open up Terminal, &lt;code&gt;cd&lt;/code&gt; into your top-level project directory, and run the following command &lt;em&gt;if&lt;/em&gt; your project is not initialized as a git repository:&lt;/li&gt;
&lt;/ul&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt;$ git init&lt;/pre&gt;&lt;/div&gt;
&lt;ul&gt;
&lt;li&gt;Add Alamofire, Result &amp;amp; Moya as a git &lt;a href="http://git-scm.com/docs/git-submodule" rel="nofollow"&gt;submodule&lt;/a&gt; by running the following commands:&lt;/li&gt;
&lt;/ul&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt;$ git submodule add https://github.com/Alamofire/Alamofire.git
$ git submodule add https://github.com/antitypical/Result.git
$ git submodule add https://github.com/Moya/Moya.git&lt;/pre&gt;&lt;/div&gt;
&lt;ul&gt;
&lt;li&gt;Open the new &lt;code&gt;Alamofire&lt;/code&gt; folder, and drag the &lt;code&gt;Alamofire.xcodeproj&lt;/code&gt; into the Project Navigator of your application's Xcode project. Do the same with the &lt;code&gt;Result.xcodeproj&lt;/code&gt; in the &lt;code&gt;Result&lt;/code&gt; folder and &lt;code&gt;Moya.xcodeproj&lt;/code&gt; in the &lt;code&gt;Moya&lt;/code&gt; folder.&lt;/li&gt;
&lt;/ul&gt;
&lt;blockquote&gt;
&lt;p&gt;They should appear nested underneath your application's blue project icon. Whether it is above or below all the other Xcode groups does not matter.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;Verify that the deployment targets of the &lt;code&gt;xcodeproj&lt;/code&gt;s match that of your application target in the Project Navigator.&lt;/li&gt;
&lt;li&gt;Next, select your application project in the Project Navigator (blue project icon) to navigate to the target configuration window and select the application target under the "Targets" heading in the sidebar.&lt;/li&gt;
&lt;li&gt;In the tab bar at the top of that window, open the "General" panel.&lt;/li&gt;
&lt;li&gt;Click on the &lt;code&gt;+&lt;/code&gt; button under the "Embedded Binaries" section.&lt;/li&gt;
&lt;li&gt;You will see two different &lt;code&gt;Alamofire.xcodeproj&lt;/code&gt; folders each with two different versions of the &lt;code&gt;Alamofire.framework&lt;/code&gt; nested inside a &lt;code&gt;Products&lt;/code&gt; folder.&lt;/li&gt;
&lt;/ul&gt;
&lt;blockquote&gt;
&lt;p&gt;It does not matter which &lt;code&gt;Products&lt;/code&gt; folder you choose from, but it does matter whether you choose the top or bottom &lt;code&gt;Alamofire.framework&lt;/code&gt;.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;Select the top &lt;code&gt;Alamofire.framework&lt;/code&gt; for iOS and the bottom one for macOS.&lt;/li&gt;
&lt;/ul&gt;
&lt;blockquote&gt;
&lt;p&gt;You can verify which one you selected by inspecting the build log for your project. The build target for &lt;code&gt;Alamofire&lt;/code&gt; will be listed as either &lt;code&gt;Alamofire iOS&lt;/code&gt;, &lt;code&gt;Alamofire macOS&lt;/code&gt;, &lt;code&gt;Alamofire tvOS&lt;/code&gt; or &lt;code&gt;Alamofire watchOS&lt;/code&gt;.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Click on the &lt;code&gt;+&lt;/code&gt; button under "Embedded Binaries" again and add the build target you need for &lt;code&gt;Result&lt;/code&gt;.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Click on the &lt;code&gt;+&lt;/code&gt; button again and add the correct build target for &lt;code&gt;Moya&lt;/code&gt;.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;And that's it!&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;blockquote&gt;
&lt;p&gt;The three frameworks are automagically added as a target dependency, linked framework and embedded framework in a copy files build phase which is all you need to build on the simulator and a device.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2&gt;&lt;a id="user-content-usage" class="anchor" aria-hidden="true" href="#usage"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Usage&lt;/h2&gt;
&lt;p&gt;After &lt;a href="https://github.com/Moya/Moya/blob/master/docs/Examples/Basic.md"&gt;some setup&lt;/a&gt;, using Moya is really simple. You can access an API like this:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;provider &lt;span class="pl-k"&gt;=&lt;/span&gt; MoyaProvider&lt;span class="pl-k"&gt;&amp;lt;&lt;/span&gt;GitHub&lt;span class="pl-k"&gt;&amp;gt;&lt;/span&gt;()
provider.&lt;span class="pl-c1"&gt;request&lt;/span&gt;(.&lt;span class="pl-smi"&gt;zen&lt;/span&gt;) { result &lt;span class="pl-k"&gt;in&lt;/span&gt;
    &lt;span class="pl-k"&gt;switch&lt;/span&gt; result {
    &lt;span class="pl-k"&gt;case&lt;/span&gt; &lt;span class="pl-k"&gt;let&lt;/span&gt; .&lt;span class="pl-c1"&gt;success&lt;/span&gt;(moyaResponse)&lt;span class="pl-k"&gt;:&lt;/span&gt;
        &lt;span class="pl-k"&gt;let&lt;/span&gt; data &lt;span class="pl-k"&gt;=&lt;/span&gt; moyaResponse.&lt;span class="pl-smi"&gt;data&lt;/span&gt;
        &lt;span class="pl-k"&gt;let&lt;/span&gt; statusCode &lt;span class="pl-k"&gt;=&lt;/span&gt; moyaResponse.&lt;span class="pl-smi"&gt;statusCode&lt;/span&gt;
        &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; do something with the response data or statusCode&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;    &lt;span class="pl-k"&gt;case&lt;/span&gt; &lt;span class="pl-k"&gt;let&lt;/span&gt; .&lt;span class="pl-c1"&gt;failure&lt;/span&gt;(error)&lt;span class="pl-k"&gt;:&lt;/span&gt;
        &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; this means there was a network failure - either the request&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;        &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; wasn't sent (connectivity), or no response was received (server&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;        &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; timed out).  If the server responds with a 4xx or 5xx error, that&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;        &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; will be sent as a ".success"-ful response.&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;    }
}&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;That's a basic example. Many API requests need parameters. Moya encodes these
into the enum you use to access the endpoint, like this:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;provider &lt;span class="pl-k"&gt;=&lt;/span&gt; MoyaProvider&lt;span class="pl-k"&gt;&amp;lt;&lt;/span&gt;GitHub&lt;span class="pl-k"&gt;&amp;gt;&lt;/span&gt;()
provider.&lt;span class="pl-c1"&gt;request&lt;/span&gt;(.&lt;span class="pl-c1"&gt;userProfile&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;ashfurrow&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)) { result &lt;span class="pl-k"&gt;in&lt;/span&gt;
    &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; do something with the result&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;}&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;No more typos in URLs. No more missing parameter values. No more messing with
parameter encoding.&lt;/p&gt;
&lt;p&gt;For more examples, see the &lt;a href="https://github.com/Moya/Moya/blob/master/docs/Examples"&gt;documentation&lt;/a&gt;.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-reactive-extensions" class="anchor" aria-hidden="true" href="#reactive-extensions"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Reactive Extensions&lt;/h2&gt;
&lt;p&gt;Even cooler are the reactive extensions. Moya provides reactive extensions for
&lt;a href="https://github.com/ReactiveCocoa/ReactiveSwift"&gt;ReactiveSwift&lt;/a&gt; and
&lt;a href="https://github.com/ReactiveX/RxSwift"&gt;RxSwift&lt;/a&gt;.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-reactiveswift" class="anchor" aria-hidden="true" href="#reactiveswift"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;ReactiveSwift&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://github.com/Moya/Moya/blob/master/docs/ReactiveSwift.md"&gt;&lt;code&gt;ReactiveSwift&lt;/code&gt; extension&lt;/a&gt; provides both &lt;code&gt;reactive.request(:callbackQueue:)&lt;/code&gt; and
&lt;code&gt;reactive.requestWithProgress(:callbackQueue:)&lt;/code&gt; methods that immediately return
&lt;code&gt;SignalProducer&lt;/code&gt;s that you can start, bind, map, or whatever you want to do.
To handle errors, for instance, we could do the following:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;provider &lt;span class="pl-k"&gt;=&lt;/span&gt; MoyaProvider&lt;span class="pl-k"&gt;&amp;lt;&lt;/span&gt;GitHub&lt;span class="pl-k"&gt;&amp;gt;&lt;/span&gt;()
provider.&lt;span class="pl-smi"&gt;reactive&lt;/span&gt;.&lt;span class="pl-c1"&gt;request&lt;/span&gt;(.&lt;span class="pl-c1"&gt;userProfile&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;ashfurrow&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)).&lt;span class="pl-c1"&gt;start&lt;/span&gt; { event &lt;span class="pl-k"&gt;in&lt;/span&gt;
    &lt;span class="pl-k"&gt;switch&lt;/span&gt; event {
    &lt;span class="pl-k"&gt;case&lt;/span&gt; &lt;span class="pl-k"&gt;let&lt;/span&gt; .&lt;span class="pl-c1"&gt;value&lt;/span&gt;(response)&lt;span class="pl-k"&gt;:&lt;/span&gt;
        image &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;UIImage&lt;/span&gt;(&lt;span class="pl-c1"&gt;data&lt;/span&gt;: response.&lt;span class="pl-smi"&gt;data&lt;/span&gt;)
    &lt;span class="pl-k"&gt;case&lt;/span&gt; &lt;span class="pl-k"&gt;let&lt;/span&gt; .&lt;span class="pl-c1"&gt;failed&lt;/span&gt;(error)&lt;span class="pl-k"&gt;:&lt;/span&gt;
        &lt;span class="pl-c1"&gt;print&lt;/span&gt;(error)
    &lt;span class="pl-k"&gt;default&lt;/span&gt;&lt;span class="pl-k"&gt;:&lt;/span&gt;
        &lt;span class="pl-k"&gt;break&lt;/span&gt;
    }
}&lt;/pre&gt;&lt;/div&gt;
&lt;h3&gt;&lt;a id="user-content-rxswift" class="anchor" aria-hidden="true" href="#rxswift"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;RxSwift&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://github.com/Moya/Moya/blob/master/docs/RxSwift.md"&gt;&lt;code&gt;RxSwift&lt;/code&gt; extension&lt;/a&gt; also provide both &lt;code&gt;rx.request(:callbackQueue:)&lt;/code&gt; and
&lt;code&gt;rx.requestWithProgress(:callbackQueue:)&lt;/code&gt; methods, but return type is
different for both. In case of a normal &lt;code&gt;rx.request(:callbackQueue)&lt;/code&gt;, the
return type is &lt;code&gt;Single&amp;lt;Response&amp;gt;&lt;/code&gt; which emits either single element or an
error. In case of a &lt;code&gt;rx.requestWithProgress(:callbackQueue:)&lt;/code&gt;, the return
type is &lt;code&gt;Observable&amp;lt;ProgressResponse&amp;gt;&lt;/code&gt;, since we may get multiple events
from progress and one last event which is a response.&lt;/p&gt;
&lt;p&gt;To handle errors, for instance, we could do the following:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;provider &lt;span class="pl-k"&gt;=&lt;/span&gt; MoyaProvider&lt;span class="pl-k"&gt;&amp;lt;&lt;/span&gt;GitHub&lt;span class="pl-k"&gt;&amp;gt;&lt;/span&gt;()
provider.&lt;span class="pl-smi"&gt;rx&lt;/span&gt;.&lt;span class="pl-c1"&gt;request&lt;/span&gt;(.&lt;span class="pl-c1"&gt;userProfile&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;ashfurrow&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)).&lt;span class="pl-smi"&gt;subscribe&lt;/span&gt; { event &lt;span class="pl-k"&gt;in&lt;/span&gt;
    &lt;span class="pl-k"&gt;switch&lt;/span&gt; event {
    &lt;span class="pl-k"&gt;case&lt;/span&gt; &lt;span class="pl-k"&gt;let&lt;/span&gt; .&lt;span class="pl-c1"&gt;success&lt;/span&gt;(response)&lt;span class="pl-k"&gt;:&lt;/span&gt;
        image &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;UIImage&lt;/span&gt;(&lt;span class="pl-c1"&gt;data&lt;/span&gt;: response.&lt;span class="pl-smi"&gt;data&lt;/span&gt;)
    &lt;span class="pl-k"&gt;case&lt;/span&gt; &lt;span class="pl-k"&gt;let&lt;/span&gt; .&lt;span class="pl-c1"&gt;error&lt;/span&gt;(error)&lt;span class="pl-k"&gt;:&lt;/span&gt;
        &lt;span class="pl-c1"&gt;print&lt;/span&gt;(error)
    }
}&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;In addition to the option of using signals instead of callback blocks, there are
also a series of signal operators for RxSwift and ReactiveSwift that will attempt
to map the data received from the network response into either an image, some JSON,
or a string, with &lt;code&gt;mapImage()&lt;/code&gt;, &lt;code&gt;mapJSON()&lt;/code&gt;, and &lt;code&gt;mapString()&lt;/code&gt;, respectively. If the mapping is unsuccessful, you'll get an error on the signal. You also get handy methods
for filtering out certain status codes. This means that you can place your code for
handling API errors like 400's in the same places as code for handling invalid
responses.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-community-projects" class="anchor" aria-hidden="true" href="#community-projects"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Community Projects&lt;/h2&gt;
&lt;p&gt;&lt;a href="https://github.com/Moya/Moya/blob/master/docs/CommunityProjects.md"&gt;Moya has a great community around it and some people have created some very helpful extensions&lt;/a&gt;.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-contributing" class="anchor" aria-hidden="true" href="#contributing"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Contributing&lt;/h2&gt;
&lt;p&gt;Hey! Do you like Moya? Awesome! We could actually really use your help!&lt;/p&gt;
&lt;p&gt;Open source isn't just writing code. Moya could use your help with any of the
following:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Finding (and reporting!) bugs.&lt;/li&gt;
&lt;li&gt;New feature suggestions.&lt;/li&gt;
&lt;li&gt;Answering questions on issues.&lt;/li&gt;
&lt;li&gt;Documentation improvements.&lt;/li&gt;
&lt;li&gt;Reviewing pull requests.&lt;/li&gt;
&lt;li&gt;Helping to manage issue priorities.&lt;/li&gt;
&lt;li&gt;Fixing bugs/new features.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;If any of that sounds cool to you, send a pull request! After your first
contribution, we will add you as a member to the repo so you can merge pull
requests and help steer the ship &lt;g-emoji class="g-emoji" alias="ship" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f6a2.png"&gt;🚢&lt;/g-emoji&gt; You can read more details about that &lt;a href="https://github.com/Moya/Moya/blob/master/Contributing.md"&gt;in our contributor guidelines&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Moya's community has a tremendous positive energy, and the maintainers are committed to keeping things awesome. Like &lt;a href="https://github.com/CocoaPods/CocoaPods/wiki/Communication-&amp;amp;-Design-Rules"&gt;in the CocoaPods community&lt;/a&gt;, always assume positive intent; even if a comment sounds mean-spirited, give the person the benefit of the doubt.&lt;/p&gt;
&lt;p&gt;Please note that this project is released with a Contributor Code of Conduct. By participating in this project you agree to abide by &lt;a href="https://github.com/Moya/Moya/blob/master/Code%20of%20Conduct.md"&gt;its terms&lt;/a&gt;.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-adding-new-source-files" class="anchor" aria-hidden="true" href="#adding-new-source-files"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Adding new source files&lt;/h3&gt;
&lt;p&gt;If you add or remove a source file from Moya, a corresponding change needs to be made to the &lt;code&gt;Moya.xcodeproj&lt;/code&gt; project at the root of this repository. This project is used for Carthage. Don't worry, you'll get an automated warning when submitting a pull request if you forget.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-help-us-improve-moya-documentation" class="anchor" aria-hidden="true" href="#help-us-improve-moya-documentation"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Help us improve Moya documentation&lt;/h3&gt;
&lt;p&gt;Whether you’re a core member or a user trying it out for the first time, you can make a valuable contribution to Moya by improving the documentation. Help us by:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;sending us feedback about something you thought was confusing or simply missing&lt;/li&gt;
&lt;li&gt;suggesting better wording or ways of explaining certain topics&lt;/li&gt;
&lt;li&gt;sending us a pull request via GitHub&lt;/li&gt;
&lt;li&gt;improving the &lt;a href="https://github.com/Moya/Moya/blob/master/Readme_CN.md"&gt;Chinese documentation&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-license" class="anchor" aria-hidden="true" href="#license"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;License&lt;/h2&gt;
&lt;p&gt;Moya is released under an MIT license. See &lt;a href="https://github.com/Moya/Moya/blob/master/License.md"&gt;License.md&lt;/a&gt; for more information.&lt;/p&gt;
&lt;/article&gt;&lt;/div&gt;</description><author>Moya</author><guid isPermaLink="false">https://github.com/Moya/Moya</guid><pubDate>Sat, 25 Jan 2020 00:15:00 GMT</pubDate></item><item><title>stephencelis/SQLite.swift #16 in Swift, This week</title><link>https://github.com/stephencelis/SQLite.swift</link><description>&lt;p&gt;&lt;i&gt;A type-safe, Swift-language layer over SQLite3.&lt;/i&gt;&lt;/p&gt;&lt;div id="readme" class="md" data-path="README.md"&gt;&lt;article class="markdown-body entry-content p-5" itemprop="text"&gt;&lt;h1&gt;&lt;a id="user-content-sqliteswift" class="anchor" aria-hidden="true" href="#sqliteswift"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;SQLite.swift&lt;/h1&gt;
&lt;p&gt;&lt;a href="https://travis-ci.org/stephencelis/SQLite.swift" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/f4298cc67f5a1d22ed1da066e9380c82b83967e6/68747470733a2f2f696d672e736869656c64732e696f2f7472617669732f7374657068656e63656c69732f53514c6974652e73776966742f6d61737465722e7376673f7374796c653d666c6174" alt="Build Status" data-canonical-src="https://img.shields.io/travis/stephencelis/SQLite.swift/master.svg?style=flat" style="max-width:100%;"&gt;&lt;/a&gt; &lt;a href="http://cocoadocs.org/docsets/SQLite.swift" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/8db5f0a449dd0ace01a4416caeee3bdbe39dda56/68747470733a2f2f636f636f61706f642d6261646765732e6865726f6b756170702e636f6d2f762f53514c6974652e73776966742f62616467652e706e67" alt="CocoaPods Version" data-canonical-src="https://cocoapod-badges.herokuapp.com/v/SQLite.swift/badge.png" style="max-width:100%;"&gt;&lt;/a&gt; &lt;a href="https://developer.apple.com/swift/" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/c71f82ee3309bc14cc904fb1a628903768e1ac39/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f73776966742d352d6f72616e67652e7376673f7374796c653d666c6174" alt="Swift5 compatible" data-canonical-src="https://img.shields.io/badge/swift-5-orange.svg?style=flat" style="max-width:100%;"&gt;&lt;/a&gt; &lt;a href="http://cocoadocs.org/docsets/SQLite.swift" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/7d02c04a141356f85360e0575b3ed52de7cb48ec/68747470733a2f2f636f636f61706f642d6261646765732e6865726f6b756170702e636f6d2f702f53514c6974652e73776966742f62616467652e706e67" alt="Platform" data-canonical-src="https://cocoapod-badges.herokuapp.com/p/SQLite.swift/badge.png" style="max-width:100%;"&gt;&lt;/a&gt; &lt;a href="https://github.com/Carthage/Carthage"&gt;&lt;img src="https://camo.githubusercontent.com/3dc8a44a2c3f7ccd5418008d1295aae48466c141/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f43617274686167652d636f6d70617469626c652d3442433531442e7376673f7374796c653d666c6174" alt="Carthage compatible" data-canonical-src="https://img.shields.io/badge/Carthage-compatible-4BC51D.svg?style=flat" style="max-width:100%;"&gt;&lt;/a&gt; &lt;a href="https://gitter.im/stephencelis/SQLite.swift" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/a042027a6ca9b7219bd8ebac4d8172d9171355e5/68747470733a2f2f6261646765732e6769747465722e696d2f7374657068656e63656c69732f53514c6974652e73776966742e737667" alt="Join the chat at https://gitter.im/stephencelis/SQLite.swift" data-canonical-src="https://badges.gitter.im/stephencelis/SQLite.swift.svg" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;A type-safe, &lt;a href="https://swift.org/" rel="nofollow"&gt;Swift&lt;/a&gt;-language layer over &lt;a href="http://www.sqlite.org" rel="nofollow"&gt;SQLite3&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;&lt;a href="https://github.com/stephencelis/SQLite.swift"&gt;SQLite.swift&lt;/a&gt; provides compile-time confidence in SQL statement
syntax &lt;em&gt;and&lt;/em&gt; intent.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-features" class="anchor" aria-hidden="true" href="#features"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Features&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;A pure-Swift interface&lt;/li&gt;
&lt;li&gt;A type-safe, optional-aware SQL expression builder&lt;/li&gt;
&lt;li&gt;A flexible, chainable, lazy-executing query layer&lt;/li&gt;
&lt;li&gt;Automatically-typed data access&lt;/li&gt;
&lt;li&gt;A lightweight, uncomplicated query and parameter binding interface&lt;/li&gt;
&lt;li&gt;Developer-friendly error handling and debugging&lt;/li&gt;
&lt;li&gt;&lt;a href="Documentation/Index.md#full-text-search"&gt;Full-text search&lt;/a&gt; support&lt;/li&gt;
&lt;li&gt;&lt;a href="Documentation/Index.md#sqliteswift-documentation"&gt;Well-documented&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Extensively tested&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.zetetic.net/sqlcipher/" rel="nofollow"&gt;SQLCipher&lt;/a&gt; support via CocoaPods&lt;/li&gt;
&lt;li&gt;Active support at
&lt;a href="http://stackoverflow.com/questions/tagged/sqlite.swift" rel="nofollow"&gt;StackOverflow&lt;/a&gt;,
and &lt;a href="https://gitter.im/stephencelis/SQLite.swift" rel="nofollow"&gt;Gitter Chat Room&lt;/a&gt;
(&lt;em&gt;experimental&lt;/em&gt;)&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-usage" class="anchor" aria-hidden="true" href="#usage"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Usage&lt;/h2&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;import&lt;/span&gt; &lt;span class="pl-en"&gt;SQLite&lt;/span&gt;

&lt;span class="pl-k"&gt;let&lt;/span&gt; db &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-k"&gt;try&lt;/span&gt; &lt;span class="pl-c1"&gt;Connection&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;path/to/db.sqlite3&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)

&lt;span class="pl-k"&gt;let&lt;/span&gt; users &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;Table&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;users&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
&lt;span class="pl-k"&gt;let&lt;/span&gt; id &lt;span class="pl-k"&gt;=&lt;/span&gt; Expression&lt;span class="pl-k"&gt;&amp;lt;&lt;/span&gt;&lt;span class="pl-c1"&gt;Int64&lt;/span&gt;&lt;span class="pl-k"&gt;&amp;gt;&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;id&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
&lt;span class="pl-k"&gt;let&lt;/span&gt; name &lt;span class="pl-k"&gt;=&lt;/span&gt; Expression&lt;span class="pl-k"&gt;&amp;lt;&lt;/span&gt;&lt;span class="pl-c1"&gt;String&lt;/span&gt;&lt;span class="pl-k"&gt;?&amp;gt;&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;name&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
&lt;span class="pl-k"&gt;let&lt;/span&gt; email &lt;span class="pl-k"&gt;=&lt;/span&gt; Expression&lt;span class="pl-k"&gt;&amp;lt;&lt;/span&gt;&lt;span class="pl-c1"&gt;String&lt;/span&gt;&lt;span class="pl-k"&gt;&amp;gt;&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;email&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)

&lt;span class="pl-k"&gt;try&lt;/span&gt; db.&lt;span class="pl-c1"&gt;run&lt;/span&gt;(users.&lt;span class="pl-smi"&gt;create&lt;/span&gt; { t &lt;span class="pl-k"&gt;in&lt;/span&gt;
    t.&lt;span class="pl-c1"&gt;column&lt;/span&gt;(id, &lt;span class="pl-c1"&gt;primaryKey&lt;/span&gt;: &lt;span class="pl-c1"&gt;true&lt;/span&gt;)
    t.&lt;span class="pl-c1"&gt;column&lt;/span&gt;(name)
    t.&lt;span class="pl-c1"&gt;column&lt;/span&gt;(email, &lt;span class="pl-c1"&gt;unique&lt;/span&gt;: &lt;span class="pl-c1"&gt;true&lt;/span&gt;)
})
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; CREATE TABLE "users" (&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt;     "id" INTEGER PRIMARY KEY NOT NULL,&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt;     "name" TEXT,&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt;     "email" TEXT NOT NULL UNIQUE&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; )&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;
&lt;span class="pl-k"&gt;let&lt;/span&gt; insert &lt;span class="pl-k"&gt;=&lt;/span&gt; users.&lt;span class="pl-c1"&gt;insert&lt;/span&gt;(name &lt;span class="pl-k"&gt;&amp;lt;-&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;Alice&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, email &lt;span class="pl-k"&gt;&amp;lt;-&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;alice@mac.com&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
&lt;span class="pl-k"&gt;let&lt;/span&gt; rowid &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-k"&gt;try&lt;/span&gt; db.&lt;span class="pl-c1"&gt;run&lt;/span&gt;(insert)
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; INSERT INTO "users" ("name", "email") VALUES ('Alice', 'alice@mac.com')&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;
&lt;span class="pl-k"&gt;for&lt;/span&gt; user &lt;span class="pl-k"&gt;in&lt;/span&gt; &lt;span class="pl-k"&gt;try&lt;/span&gt; db.&lt;span class="pl-c1"&gt;prepare&lt;/span&gt;(users) {
    &lt;span class="pl-c1"&gt;print&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;id: &lt;span class="pl-pse"&gt;\(&lt;/span&gt;&lt;span class="pl-s1"&gt;user[id]&lt;/span&gt;&lt;span class="pl-pse"&gt;&lt;span class="pl-s1"&gt;)&lt;/span&gt;&lt;/span&gt;, name: &lt;span class="pl-pse"&gt;\(&lt;/span&gt;&lt;span class="pl-s1"&gt;user[name]&lt;/span&gt;&lt;span class="pl-pse"&gt;&lt;span class="pl-s1"&gt;)&lt;/span&gt;&lt;/span&gt;, email: &lt;span class="pl-pse"&gt;\(&lt;/span&gt;&lt;span class="pl-s1"&gt;user[email]&lt;/span&gt;&lt;span class="pl-pse"&gt;&lt;span class="pl-s1"&gt;)&lt;/span&gt;&lt;/span&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
    &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; id: 1, name: Optional("Alice"), email: alice@mac.com&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;}
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; SELECT * FROM "users"&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;
&lt;span class="pl-k"&gt;let&lt;/span&gt; alice &lt;span class="pl-k"&gt;=&lt;/span&gt; users.&lt;span class="pl-c1"&gt;filter&lt;/span&gt;(id &lt;span class="pl-k"&gt;==&lt;/span&gt; rowid)

&lt;span class="pl-k"&gt;try&lt;/span&gt; db.&lt;span class="pl-c1"&gt;run&lt;/span&gt;(alice.&lt;span class="pl-c1"&gt;update&lt;/span&gt;(email &lt;span class="pl-k"&gt;&amp;lt;-&lt;/span&gt; email.&lt;span class="pl-c1"&gt;replace&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;mac.com&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-c1"&gt;with&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;me.com&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)))
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; UPDATE "users" SET "email" = replace("email", 'mac.com', 'me.com')&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; WHERE ("id" = 1)&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;
&lt;span class="pl-k"&gt;try&lt;/span&gt; db.&lt;span class="pl-c1"&gt;run&lt;/span&gt;(alice.&lt;span class="pl-c1"&gt;delete&lt;/span&gt;())
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; DELETE FROM "users" WHERE ("id" = 1)&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;
&lt;span class="pl-k"&gt;try&lt;/span&gt; db.&lt;span class="pl-c1"&gt;scalar&lt;/span&gt;(users.&lt;span class="pl-c1"&gt;count&lt;/span&gt;) &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; 0&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; SELECT count(*) FROM "users"&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;SQLite.swift also works as a lightweight, Swift-friendly wrapper over the C
API.&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;let&lt;/span&gt; stmt &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-k"&gt;try&lt;/span&gt; db.&lt;span class="pl-c1"&gt;prepare&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;INSERT INTO users (email) VALUES (?)&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
&lt;span class="pl-k"&gt;for&lt;/span&gt; email &lt;span class="pl-k"&gt;in&lt;/span&gt; [&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;betty@icloud.com&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;cathy@icloud.com&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;] {
    &lt;span class="pl-k"&gt;try&lt;/span&gt; stmt.&lt;span class="pl-c1"&gt;run&lt;/span&gt;(email)
}

db.&lt;span class="pl-smi"&gt;totalChanges&lt;/span&gt;    &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; 3&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;db.&lt;span class="pl-smi"&gt;changes&lt;/span&gt;         &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; 1&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;db.&lt;span class="pl-smi"&gt;lastInsertRowid&lt;/span&gt; &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; 3&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;
&lt;span class="pl-k"&gt;for&lt;/span&gt; row &lt;span class="pl-k"&gt;in&lt;/span&gt; &lt;span class="pl-k"&gt;try&lt;/span&gt; db.&lt;span class="pl-c1"&gt;prepare&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;SELECT id, email FROM users&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;) {
    &lt;span class="pl-c1"&gt;print&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;id: &lt;span class="pl-pse"&gt;\(&lt;/span&gt;&lt;span class="pl-s1"&gt;row[&lt;span class="pl-c1"&gt;0&lt;/span&gt;]&lt;/span&gt;&lt;span class="pl-pse"&gt;&lt;span class="pl-s1"&gt;)&lt;/span&gt;&lt;/span&gt;, email: &lt;span class="pl-pse"&gt;\(&lt;/span&gt;&lt;span class="pl-s1"&gt;row[&lt;span class="pl-c1"&gt;1&lt;/span&gt;]&lt;/span&gt;&lt;span class="pl-pse"&gt;&lt;span class="pl-s1"&gt;)&lt;/span&gt;&lt;/span&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
    &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; id: Optional(2), email: Optional("betty@icloud.com")&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;    &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; id: Optional(3), email: Optional("cathy@icloud.com")&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;}

&lt;span class="pl-k"&gt;try&lt;/span&gt; db.&lt;span class="pl-c1"&gt;scalar&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;SELECT count(*) FROM users&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;) &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; 2&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;a href="Documentation/Index.md#sqliteswift-documentation"&gt;Read the documentation&lt;/a&gt; or explore more,
interactively, from the Xcode project’s playground.&lt;/p&gt;
&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="Documentation/Resources/playground@2x.png"&gt;&lt;img src="Documentation/Resources/playground@2x.png" alt="SQLite.playground Screen Shot" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;For a more comprehensive example, see
&lt;a href="http://masteringswift.blogspot.com/2015/09/create-data-access-layer-with.html" rel="nofollow"&gt;this article&lt;/a&gt;
and the &lt;a href="https://github.com/hoffmanjon/SQLiteDataAccessLayer2/tree/master"&gt;companion repository&lt;/a&gt;.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-installation" class="anchor" aria-hidden="true" href="#installation"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Installation&lt;/h2&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;em&gt;Note:&lt;/em&gt; Version 0.12 requires Swift 5 (and &lt;a href="https://developer.apple.com/xcode/downloads/" rel="nofollow"&gt;Xcode&lt;/a&gt; 10.2) or greater. Version 0.11.6 requires Swift 4.2 (and &lt;a href="https://developer.apple.com/xcode/downloads/" rel="nofollow"&gt;Xcode&lt;/a&gt; 10.1) or greater.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3&gt;&lt;a id="user-content-carthage" class="anchor" aria-hidden="true" href="#carthage"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Carthage&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://github.com/Carthage/Carthage"&gt;Carthage&lt;/a&gt; is a simple, decentralized dependency manager for Cocoa. To
install SQLite.swift with Carthage:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;Make sure Carthage is &lt;a href="https://github.com/Carthage/Carthage#installing-carthage"&gt;installed&lt;/a&gt;.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Update your Cartfile to include the following:&lt;/p&gt;
&lt;div class="highlight highlight-source-ruby"&gt;&lt;pre&gt;github &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;stephencelis/SQLite.swift&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; &lt;span class="pl-k"&gt;~&lt;/span&gt;&lt;span class="pl-k"&gt;&amp;gt;&lt;/span&gt; &lt;span class="pl-c1"&gt;0.12&lt;/span&gt;.&lt;span class="pl-c1"&gt;0&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Run &lt;code&gt;carthage update&lt;/code&gt; and
&lt;a href="https://github.com/Carthage/Carthage#adding-frameworks-to-an-application"&gt;add the appropriate framework&lt;/a&gt;.&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h3&gt;&lt;a id="user-content-cocoapods" class="anchor" aria-hidden="true" href="#cocoapods"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;CocoaPods&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://cocoapods.org" rel="nofollow"&gt;CocoaPods&lt;/a&gt; is a dependency manager for Cocoa projects. To install
SQLite.swift with CocoaPods:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;Make sure CocoaPods is &lt;a href="https://guides.cocoapods.org/using/getting-started.html#getting-started" rel="nofollow"&gt;installed&lt;/a&gt;. (SQLite.swift
requires version 1.6.1 or greater.)&lt;/p&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; Using the default Ruby install will require you to use sudo when&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; installing and updating gems.&lt;/span&gt;
[sudo] gem install cocoapods&lt;/pre&gt;&lt;/div&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Update your Podfile to include the following:&lt;/p&gt;
&lt;div class="highlight highlight-source-ruby"&gt;&lt;pre&gt;use_frameworks!

target &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;YourAppTargetName&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt; &lt;span class="pl-k"&gt;do&lt;/span&gt;
    pod &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;SQLite.swift&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;~&amp;gt; 0.12.0&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;
&lt;span class="pl-k"&gt;end&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Run &lt;code&gt;pod install --repo-update&lt;/code&gt;.&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h3&gt;&lt;a id="user-content-swift-package-manager" class="anchor" aria-hidden="true" href="#swift-package-manager"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Swift Package Manager&lt;/h3&gt;
&lt;p&gt;The &lt;a href="https://swift.org/package-manager" rel="nofollow"&gt;Swift Package Manager&lt;/a&gt; is a tool for managing the distribution of
Swift code.&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Add the following to your &lt;code&gt;Package.swift&lt;/code&gt; file:&lt;/li&gt;
&lt;/ol&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;dependencies&lt;span class="pl-k"&gt;:&lt;/span&gt; [
    .&lt;span class="pl-c1"&gt;package&lt;/span&gt;(&lt;span class="pl-c1"&gt;url&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;https://github.com/stephencelis/SQLite.swift.git&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-c1"&gt;from&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;0.12.0&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
]&lt;/pre&gt;&lt;/div&gt;
&lt;ol start="2"&gt;
&lt;li&gt;Build your project:&lt;/li&gt;
&lt;/ol&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt;$ swift build&lt;/pre&gt;&lt;/div&gt;
&lt;h3&gt;&lt;a id="user-content-manual" class="anchor" aria-hidden="true" href="#manual"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Manual&lt;/h3&gt;
&lt;p&gt;To install SQLite.swift as an Xcode sub-project:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;Drag the &lt;strong&gt;SQLite.xcodeproj&lt;/strong&gt; file into your own project.
(&lt;a href="http://git-scm.com/book/en/Git-Tools-Submodules" rel="nofollow"&gt;Submodule&lt;/a&gt;, clone, or &lt;a href="https://github.com/stephencelis/SQLite.swift/archive/master.zip"&gt;download&lt;/a&gt; the project first.)&lt;/p&gt;
&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="Documentation/Resources/installation@2x.png"&gt;&lt;img src="Documentation/Resources/installation@2x.png" alt="Installation Screen Shot" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;In your target’s &lt;strong&gt;General&lt;/strong&gt; tab, click the &lt;strong&gt;+&lt;/strong&gt; button under &lt;strong&gt;Linked
Frameworks and Libraries&lt;/strong&gt;.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Select the appropriate &lt;strong&gt;SQLite.framework&lt;/strong&gt; for your platform.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Add&lt;/strong&gt;.&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;Some additional steps are required to install the application on an actual
device:&lt;/p&gt;
&lt;ol start="5"&gt;
&lt;li&gt;
&lt;p&gt;In the &lt;strong&gt;General&lt;/strong&gt; tab, click the &lt;strong&gt;+&lt;/strong&gt; button under &lt;strong&gt;Embedded
Binaries&lt;/strong&gt;.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Select the appropriate &lt;strong&gt;SQLite.framework&lt;/strong&gt; for your platform.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Add&lt;/strong&gt;.&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h2&gt;&lt;a id="user-content-communication" class="anchor" aria-hidden="true" href="#communication"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Communication&lt;/h2&gt;
&lt;p&gt;&lt;a href="/Documentation/Planning.md"&gt;See the planning document&lt;/a&gt; for a roadmap and existing feature requests.&lt;/p&gt;
&lt;p&gt;&lt;a href="./CONTRIBUTING.md#contributing"&gt;Read the contributing guidelines&lt;/a&gt;. The &lt;em&gt;TL;DR&lt;/em&gt; (but please; &lt;em&gt;R&lt;/em&gt;):&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Need &lt;strong&gt;help&lt;/strong&gt; or have a &lt;strong&gt;general question&lt;/strong&gt;? &lt;a href="http://stackoverflow.com/questions/tagged/sqlite.swift" rel="nofollow"&gt;Ask on Stack
Overflow&lt;/a&gt; (tag &lt;code&gt;sqlite.swift&lt;/code&gt;).&lt;/li&gt;
&lt;li&gt;Found a &lt;strong&gt;bug&lt;/strong&gt; or have a &lt;strong&gt;feature request&lt;/strong&gt;? &lt;a href="https://github.com/stephencelis/SQLite.swift/issues/new"&gt;Open an issue&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;Want to &lt;strong&gt;contribute&lt;/strong&gt;? &lt;a href="https://github.com/stephencelis/SQLite.swift/fork"&gt;Submit a pull request&lt;/a&gt;.&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-author" class="anchor" aria-hidden="true" href="#author"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Author&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="mailto:stephen@stephencelis.com"&gt;Stephen Celis&lt;/a&gt;
(&lt;a href="https://twitter.com/stephencelis" rel="nofollow"&gt;@stephencelis&lt;/a&gt;)&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-license" class="anchor" aria-hidden="true" href="#license"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;License&lt;/h2&gt;
&lt;p&gt;SQLite.swift is available under the MIT license. See &lt;a href="./LICENSE.txt"&gt;the LICENSE
file&lt;/a&gt; for more information.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-related" class="anchor" aria-hidden="true" href="#related"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Related&lt;/h2&gt;
&lt;p&gt;These projects enhance or use SQLite.swift:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/garriguv/SQLiteMigrationManager.swift"&gt;SQLiteMigrationManager.swift&lt;/a&gt; (inspired by
&lt;a href="https://github.com/layerhq/FMDBMigrationManager"&gt;FMDBMigrationManager&lt;/a&gt;)&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-alternatives" class="anchor" aria-hidden="true" href="#alternatives"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Alternatives&lt;/h2&gt;
&lt;p&gt;Looking for something else? Try another Swift wrapper (or &lt;a href="https://github.com/ccgus/fmdb"&gt;FMDB&lt;/a&gt;):&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/remirobert/Camembert"&gt;Camembert&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/groue/GRDB.swift"&gt;GRDB&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/FahimF/SQLiteDB"&gt;SQLiteDB&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/nerdyc/Squeal"&gt;Squeal&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/ryanfowler/SwiftData"&gt;SwiftData&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/chrismsimpson/SwiftSQLite"&gt;SwiftSQLite&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/article&gt;&lt;/div&gt;</description><author>stephencelis</author><guid isPermaLink="false">https://github.com/stephencelis/SQLite.swift</guid><pubDate>Sat, 25 Jan 2020 00:16:00 GMT</pubDate></item><item><title>yonaskolb/Mint #17 in Swift, This week</title><link>https://github.com/yonaskolb/Mint</link><description>&lt;p&gt;&lt;i&gt;A package manager that installs and runs Swift CLI packages&lt;/i&gt;&lt;/p&gt;&lt;div id="readme" class="md" data-path="README.md"&gt;&lt;article class="markdown-body entry-content p-5" itemprop="text"&gt;&lt;h1&gt;&lt;a id="user-content-mint-" class="anchor" aria-hidden="true" href="#mint-"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Mint &lt;g-emoji class="g-emoji" alias="seedling" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f331.png"&gt;🌱&lt;/g-emoji&gt;&lt;/h1&gt;
&lt;p&gt;&lt;a href="https://swift.org/package-manager" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/6da72e15649e210131bd77310c4789539301a101/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f73706d2d636f6d70617469626c652d627269676874677265656e2e7376673f7374796c653d666f722d7468652d6261646765" alt="SPM" data-canonical-src="https://img.shields.io/badge/spm-compatible-brightgreen.svg?style=for-the-badge" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a target="_blank" rel="noopener noreferrer" href="https://camo.githubusercontent.com/0ed8433e8c715973c68baf5f28f791f1f77c44d6/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f506c6174666f726d732d6d61634f535f4c696e75782d626c75652e7376673f7374796c653d666f722d7468652d6261646765"&gt;&lt;img src="https://camo.githubusercontent.com/0ed8433e8c715973c68baf5f28f791f1f77c44d6/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f506c6174666f726d732d6d61634f535f4c696e75782d626c75652e7376673f7374796c653d666f722d7468652d6261646765" alt="Platforms" data-canonical-src="https://img.shields.io/badge/Platforms-macOS_Linux-blue.svg?style=for-the-badge" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://github.com/yonaskolb/Mint/releases"&gt;&lt;img src="https://camo.githubusercontent.com/105a903876960289d870b9e795b4252e54441e06/68747470733a2f2f696d672e736869656c64732e696f2f6769746875622f72656c656173652f796f6e61736b6f6c622f4d696e742e7376673f7374796c653d666f722d7468652d6261646765" alt="Git Version" data-canonical-src="https://img.shields.io/github/release/yonaskolb/Mint.svg?style=for-the-badge" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://circleci.com/gh/yonaskolb/Mint" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/d4894703d84ccb8ed025f2c317cc2c33850c03bb/68747470733a2f2f696d672e736869656c64732e696f2f636972636c6563692f70726f6a6563742f6769746875622f796f6e61736b6f6c622f4d696e742e7376673f7374796c653d666f722d7468652d6261646765" alt="Build Status" data-canonical-src="https://img.shields.io/circleci/project/github/yonaskolb/Mint.svg?style=for-the-badge" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://github.com/yonaskolb/Mint/blob/master/LICENSE"&gt;&lt;img src="https://camo.githubusercontent.com/992da755f8b938d35687fa3f4f0834b7876e392b/68747470733a2f2f696d672e736869656c64732e696f2f6769746875622f6c6963656e73652f796f6e61736b6f6c622f4d696e742e7376673f7374796c653d666f722d7468652d6261646765" alt="license" data-canonical-src="https://img.shields.io/github/license/yonaskolb/Mint.svg?style=for-the-badge" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;A package manager that installs and runs Swift command line tool packages.&lt;/p&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt;$ mint run realm/SwiftLint@0.22.0 swiftlint&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;This would install and run &lt;a href="https://github.com/realm/SwiftLint"&gt;SwiftLint&lt;/a&gt; version 0.22.0&lt;/p&gt;
&lt;p&gt;Mint is designed to be used with Swift command line tools that build with the Swift Package Manager. It makes installing, running and distributing these tools much easier.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;g-emoji class="g-emoji" alias="white_check_mark" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/2705.png"&gt;✅&lt;/g-emoji&gt; easily run a specific &lt;strong&gt;version&lt;/strong&gt; of a package&lt;/li&gt;
&lt;li&gt;&lt;g-emoji class="g-emoji" alias="white_check_mark" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/2705.png"&gt;✅&lt;/g-emoji&gt; &lt;strong&gt;link&lt;/strong&gt; a package &lt;strong&gt;globally&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;g-emoji class="g-emoji" alias="white_check_mark" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/2705.png"&gt;✅&lt;/g-emoji&gt; builds are &lt;strong&gt;cached&lt;/strong&gt; by version&lt;/li&gt;
&lt;li&gt;&lt;g-emoji class="g-emoji" alias="white_check_mark" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/2705.png"&gt;✅&lt;/g-emoji&gt; use &lt;strong&gt;different versions&lt;/strong&gt; of a package side by side&lt;/li&gt;
&lt;li&gt;&lt;g-emoji class="g-emoji" alias="white_check_mark" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/2705.png"&gt;✅&lt;/g-emoji&gt; easily run the &lt;strong&gt;latest&lt;/strong&gt; version of a package&lt;/li&gt;
&lt;li&gt;&lt;g-emoji class="g-emoji" alias="white_check_mark" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/2705.png"&gt;✅&lt;/g-emoji&gt; distribute your own packages &lt;strong&gt;without recipes and formulas&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;g-emoji class="g-emoji" alias="white_check_mark" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/2705.png"&gt;✅&lt;/g-emoji&gt; specify a list of versioned packages in a &lt;strong&gt;Mintfile&lt;/strong&gt; for easy use&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Homebrew is a popular method of distributing Swift executables, but that requires creating a formula and then maintaining that formula. Running specific versions of homebrew installations can also be tricky as only one global version is installed at any one time. Mint installs your package via SPM and lets you run multiple versions of that package, which are installed and cached in a central place.&lt;/p&gt;
&lt;p&gt;If your Swift executable package builds with SPM, then it can be run with Mint! See &lt;a href="#support"&gt;Support&lt;/a&gt; for details.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-why-is-it-called-mint" class="anchor" aria-hidden="true" href="#why-is-it-called-mint"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Why is it called Mint?&lt;/h2&gt;
&lt;p&gt;Swift Packager Manager Tools -&amp;gt; SPMT -&amp;gt; Spearmint -&amp;gt; Mint! &lt;g-emoji class="g-emoji" alias="seedling" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f331.png"&gt;🌱&lt;/g-emoji&gt;&lt;g-emoji class="g-emoji" alias="smile" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f604.png"&gt;😄&lt;/g-emoji&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Mint: a place where something is produced or manufactured&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2&gt;&lt;a id="user-content-installing" class="anchor" aria-hidden="true" href="#installing"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Installing&lt;/h2&gt;
&lt;p&gt;Make sure Xcode 10.2 is installed first.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-homebrew" class="anchor" aria-hidden="true" href="#homebrew"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Homebrew&lt;/h3&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt;$ brew install mint&lt;/pre&gt;&lt;/div&gt;
&lt;h3&gt;&lt;a id="user-content-make" class="anchor" aria-hidden="true" href="#make"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Make&lt;/h3&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt;$ git clone https://github.com/yonaskolb/Mint.git
$ &lt;span class="pl-c1"&gt;cd&lt;/span&gt; Mint
$ make&lt;/pre&gt;&lt;/div&gt;
&lt;h3&gt;&lt;a id="user-content-using-mint-itself" class="anchor" aria-hidden="true" href="#using-mint-itself"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Using Mint itself!&lt;/h3&gt;
&lt;h5&gt;&lt;a id="user-content-install" class="anchor" aria-hidden="true" href="#install"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Install&lt;/h5&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt;$ git clone https://github.com/yonaskolb/Mint.git
$ &lt;span class="pl-c1"&gt;cd&lt;/span&gt; Mint
$ swift run mint install yonaskolb/mint&lt;/pre&gt;&lt;/div&gt;
&lt;h5&gt;&lt;a id="user-content-update" class="anchor" aria-hidden="true" href="#update"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Update&lt;/h5&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt;$ mint install yonaskolb/mint&lt;/pre&gt;&lt;/div&gt;
&lt;h3&gt;&lt;a id="user-content-swift-package-manager" class="anchor" aria-hidden="true" href="#swift-package-manager"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Swift Package Manager&lt;/h3&gt;
&lt;p&gt;&lt;strong&gt;Use CLI&lt;/strong&gt;&lt;/p&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt;$ git clone https://github.com/yonaskolb/Mint.git
$ &lt;span class="pl-c1"&gt;cd&lt;/span&gt; Mint
$ swift run mint&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;strong&gt;Use as dependency&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Add the following to your Package.swift file's dependencies:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;.&lt;span class="pl-c1"&gt;package&lt;/span&gt;(&lt;span class="pl-c1"&gt;url&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;https://github.com/yonaskolb/Mint.git&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-c1"&gt;from&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;0.10.0&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;),&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;And then import wherever needed: &lt;code&gt;import MintKit&lt;/code&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-road-to-10" class="anchor" aria-hidden="true" href="#road-to-10"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Road to 1.0&lt;/h2&gt;
&lt;p&gt;Until 1.0 is reached, minor versions will be breaking.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-usage" class="anchor" aria-hidden="true" href="#usage"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Usage&lt;/h2&gt;
&lt;p&gt;Run &lt;code&gt;mint help&lt;/code&gt; to see usage instructions.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;install&lt;/strong&gt;: Installs a package, so it can be run with &lt;code&gt;run&lt;/code&gt; later, and also links that version globally&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;run&lt;/strong&gt;: Runs a package. This will install it first if it isn't already installed, though won't link it globally. It's useful for running a certain version.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;list&lt;/strong&gt;: Lists all currently installed packages and versions.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;uninstall&lt;/strong&gt;: Uninstalls a package by name.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;bootstrap&lt;/strong&gt;: Installs all the packages in your &lt;a href="#mintfile"&gt;Mintfile&lt;/a&gt;, by default, without linking them globally&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;Package reference&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;code&gt;run&lt;/code&gt; and &lt;code&gt;install&lt;/code&gt; commands require a package reference parameter. This can be a shorthand for a github repo (&lt;code&gt;mint install realm/SwiftLint&lt;/code&gt;) or a fully qualified git path (&lt;code&gt;mint install https://github.com/realm/SwiftLint.git&lt;/code&gt;). In the case of &lt;code&gt;run&lt;/code&gt; you can also just pass the name of the repo if it is already installed (&lt;code&gt;run swiftlint&lt;/code&gt;). This will do a lookup of all installed packages.
An optional version can be specified by appending &lt;code&gt;@version&lt;/code&gt;, otherwise the newest tag or master will be used. Note that if you don't specify a version, the current tags must be loaded remotely each time.&lt;/p&gt;
&lt;h4&gt;&lt;a id="user-content-examples" class="anchor" aria-hidden="true" href="#examples"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Examples&lt;/h4&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt;$ mint run yonaskolb/XcodeGen@1.2.4 xcodegen --spec spec.yml &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; pass some arguments&lt;/span&gt;
$ mint install yonaskolb/XcodeGen@1.2.4 --no-link &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; installs a certain version but doesn't link it globally&lt;/span&gt;
$ mint install yonaskolb/XcodeGen &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; install newest tag&lt;/span&gt;
$ mint install yonaskolb/XcodeGen@master --force &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt;reinstall the master branch&lt;/span&gt;
$ mint run yonaskolb/XcodeGen@1.2.4 &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; run 1.2.4&lt;/span&gt;
$ mint run XcodeGen &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; use newest tag and find XcodeGen in installed packages&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h3&gt;&lt;a id="user-content-linking" class="anchor" aria-hidden="true" href="#linking"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Linking&lt;/h3&gt;
&lt;p&gt;By default Mint symlinks your installs into &lt;code&gt;usr/local/bin&lt;/code&gt; on &lt;code&gt;mint install&lt;/code&gt;, unless &lt;code&gt;--no-link&lt;/code&gt; is passed. This means a package will be accessible from anywhere, and you don't have to prepend commands with &lt;code&gt;mint run package&lt;/code&gt;. Note that only one linked version can be used at a time though. If you need to run a specific older version use &lt;code&gt;mint run&lt;/code&gt;.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-mintfile" class="anchor" aria-hidden="true" href="#mintfile"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Mintfile&lt;/h3&gt;
&lt;p&gt;A &lt;code&gt;Mintfile&lt;/code&gt; can specify a list of versioned packages. It makes installing and running these packages easy, as the specific repos and versions are centralized.&lt;/p&gt;
&lt;p&gt;Simply place this file in the directory you're running Mint in. The format of the &lt;code&gt;Mintfile&lt;/code&gt; is simply a list of packages in the same form as the usual package parameter:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;yonaskolb/xcodegen@1.10.3
yonaskolb/genesis@0.2.0
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Then you can simply run a package with:&lt;/p&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt;mint run xcodegen&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Or install all the packages (without linking them globally) in one go with:&lt;/p&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt;mint bootstrap&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;If you prefer to link them globally, do such with:&lt;/p&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt;mint bootstrap --link&lt;/pre&gt;&lt;/div&gt;
&lt;h3&gt;&lt;a id="user-content-advanced" class="anchor" aria-hidden="true" href="#advanced"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Advanced&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;You can use &lt;code&gt;--silent&lt;/code&gt; in &lt;code&gt;mint run&lt;/code&gt; to silence any output from mint itself. Useful if forwarding output somewhere else.&lt;/li&gt;
&lt;li&gt;You can set &lt;code&gt;MINT_PATH&lt;/code&gt; and &lt;code&gt;MINT_LINK_PATH&lt;/code&gt; envs to configure where mint caches builds, and where it symlinks global installs. These default to &lt;code&gt;/usr/local/lib/mint&lt;/code&gt; and &lt;code&gt;/usr/local/bin&lt;/code&gt; respectively&lt;/li&gt;
&lt;li&gt;You can use &lt;code&gt;mint install --force&lt;/code&gt; to reinstall a package even if it's already installed. This shouldn't be required unless you are pointing at a branch and want to update it.&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;&lt;a id="user-content-linux" class="anchor" aria-hidden="true" href="#linux"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Linux&lt;/h3&gt;
&lt;p&gt;Mint works on Linux but has some limitations:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;linux doesn't support building with a statically linked version of Swift. This means when a new version of swift comes out the old installs won't work on linux. A stable ABI in Swift 5 will remove the need for this.&lt;/li&gt;
&lt;li&gt;Linux is case sensitive so you must specify the correct case for repo urls as well as executables.&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-support" class="anchor" aria-hidden="true" href="#support"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Support&lt;/h2&gt;
&lt;p&gt;If your Swift command line tool builds with the Swift Package Manager than it will automatically install and run with mint!&lt;/p&gt;
&lt;p&gt;Make sure you have defined an &lt;code&gt;executable&lt;/code&gt; product type in the &lt;code&gt;products&lt;/code&gt; list within your &lt;code&gt;Package.swift&lt;/code&gt;.&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;let&lt;/span&gt; package &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;Package&lt;/span&gt;(
    &lt;span class="pl-c1"&gt;name&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;Foo&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;,
    &lt;span class="pl-c1"&gt;products&lt;/span&gt;: [
        .&lt;span class="pl-c1"&gt;executable&lt;/span&gt;(&lt;span class="pl-c1"&gt;name&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;foo&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-c1"&gt;targets&lt;/span&gt;: [&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;Foo&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;]),
    ],
    &lt;span class="pl-c1"&gt;targets&lt;/span&gt;: [
      .&lt;span class="pl-c1"&gt;target&lt;/span&gt;(&lt;span class="pl-c1"&gt;name&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;Foo&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;),
      &lt;span class="pl-k"&gt;...&lt;/span&gt;
    ]
)&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;You can then add this to the &lt;code&gt;Installing&lt;/code&gt; section in your readme:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;### [Mint](https://github.com/yonaskolb/mint)
```
$ mint install github_name/repo_name
```
&lt;/code&gt;&lt;/pre&gt;
&lt;h3&gt;&lt;a id="user-content-resources" class="anchor" aria-hidden="true" href="#resources"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Resources&lt;/h3&gt;
&lt;p&gt;The Swift Package Manager doesn't yet have a way of specifying resources directories. If your tool requires access to resources from the repo you require a custom &lt;code&gt;Package.resources&lt;/code&gt; file. This is a plain text file that lists the resources directories on different lines:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;MyFiles
MyOtherFiles
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;If this file is found in you repo, then all those directories will be copied into the same path as the executable.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-a-list-of-popular-mint-compatible-packages-" class="anchor" aria-hidden="true" href="#a-list-of-popular-mint-compatible-packages-"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;A list of popular Mint compatible packages &lt;g-emoji class="g-emoji" alias="seedling" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f331.png"&gt;🌱&lt;/g-emoji&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;mint install &lt;a href="https://github.com/jkmathew/Assetizer"&gt;jkmathew/Assetizer&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;mint install &lt;a href="https://github.com/Carthage/Carthage"&gt;Carthage/Carthage&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;mint install &lt;a href="https://github.com/JohnSundell/Marathon"&gt;JohnSundell/Marathon&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;mint install &lt;a href="https://github.com/LinusU/RasterizeXCAssets"&gt;LinusU/RasterizeXCAssets&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;mint install &lt;a href="https://github.com/krzysztofzablocki/Sourcery"&gt;krzysztofzablocki/Sourcery&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;mint install &lt;a href="https://github.com/yonaskolb/SwagGen"&gt;yonaskolb/SwagGen&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;mint install &lt;a href="https://github.com/nicklockwood/SwiftFormat"&gt;nicklockwood/SwiftFormat&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;mint install &lt;a href="https://github.com/SwiftGen/SwiftGen"&gt;SwiftGen/SwiftGen&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;mint install &lt;a href="https://github.com/realm/SwiftLint"&gt;realm/SwiftLint&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;mint install &lt;a href="https://github.com/yonaskolb/XcodeGen"&gt;yonaskolb/XcodeGen&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;mint install &lt;a href="https://github.com/artemnovichkov/Carting"&gt;artemnovichkov/Carting&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;mint install &lt;a href="https://github.com/num42/icon-resizer-swift"&gt;num42/icon-resizer-swift&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;mint install &lt;a href="https://github.com/MakeAWishFoundation/SwiftyMocky"&gt;MakeAWishFoundation/SwiftyMocky&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;mint install &lt;a href="https://github.com/thii/xcbeautify"&gt;thii/xcbeautify&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Feel free to add your own!&lt;/p&gt;
&lt;/article&gt;&lt;/div&gt;</description><author>yonaskolb</author><guid isPermaLink="false">https://github.com/yonaskolb/Mint</guid><pubDate>Sat, 25 Jan 2020 00:17:00 GMT</pubDate></item><item><title>matteocrippa/awesome-swift #18 in Swift, This week</title><link>https://github.com/matteocrippa/awesome-swift</link><description>&lt;p&gt;&lt;i&gt;A collaborative list of awesome Swift libraries and resources. Feel free to contribute!&lt;/i&gt;&lt;/p&gt;&lt;div id="readme" class="md" data-path="README.md"&gt;&lt;article class="markdown-body entry-content p-5" itemprop="text"&gt;&lt;h1&gt;&lt;a id="user-content-awesome-swift" class="anchor" aria-hidden="true" href="#awesome-swift"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Awesome Swift&lt;/h1&gt;

&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th align="center"&gt;iOS App&lt;/th&gt;
&lt;th align="center"&gt;Awesome&lt;/th&gt;
&lt;th align="center"&gt;Linux&lt;/th&gt;
&lt;th align="center"&gt;Projects&lt;/th&gt;
&lt;th align="center"&gt;Updated&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td align="center"&gt;&lt;a href="https://itunes.apple.com/us/app/awesome-for-swift-cheatsheet/id1078115427" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/8b7d1177a19f7ce90e1c05e856fc466b37548949/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f646f776e6c6f61642d61707025323073746f72652d6666363962342e737667" alt="Download on the App Store" data-canonical-src="https://img.shields.io/badge/download-app%20store-ff69b4.svg" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/td&gt;
&lt;td align="center"&gt;&lt;a href="https://github.com/sindresorhus/awesome"&gt;&lt;img src="https://camo.githubusercontent.com/13c4e50d88df7178ae1882a203ed57b641674f94/68747470733a2f2f63646e2e7261776769742e636f6d2f73696e647265736f726875732f617765736f6d652f643733303566333864323966656437386661383536353265336136336531353464643865383832392f6d656469612f62616467652e737667" alt="Awesome" data-canonical-src="https://cdn.rawgit.com/sindresorhus/awesome/d7305f38d29fed78fa85652e3a63e154dd8e8829/media/badge.svg" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/td&gt;
&lt;td align="center"&gt;&lt;g-emoji class="g-emoji" alias="penguin" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f427.png"&gt;🐧&lt;/g-emoji&gt;&lt;/td&gt;
&lt;td align="center"&gt;1017&lt;/td&gt;
&lt;td align="center"&gt;January 22, 2020&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h3&gt;&lt;a id="user-content-contents" class="anchor" aria-hidden="true" href="#contents"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Contents&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="#guides"&gt;Guides&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="#newsletter"&gt;Newsletter&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#official-guides"&gt;Official Guides&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#style-guides"&gt;Style Guides&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#third-party-guides"&gt;Third party Guides&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="#boilerplates"&gt;Boilerplates&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#repl"&gt;REPL&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#editor-support"&gt;Editor Support&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="#emacs"&gt;Emacs&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#vim"&gt;Vim&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="#benchmark"&gt;Benchmark&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#converters"&gt;Converters&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#other-awesome-lists"&gt;Other Awesome Lists&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#dependency-managers"&gt;Dependency Managers&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#patterns"&gt;Patterns&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#misc"&gt;Misc&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#libs"&gt;Libs&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="#accessibility"&gt;Accessibility&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#ai"&gt;AI&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#algorithm"&gt;Algorithm&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#analytics"&gt;Analytics&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#animation"&gt;Animation&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#api"&gt;API&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#app-routing"&gt;App Routing&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#app-store"&gt;App Store&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#audio"&gt;Audio&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#augmented-reality"&gt;Augmented Reality&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#authentication"&gt;Authentication&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#bots"&gt;Bots&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#cache"&gt;Cache&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#chart"&gt;Chart&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#chat"&gt;Chat&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#colors"&gt;Colors&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#command-line"&gt;Command Line&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#concurrency"&gt;Concurrency&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#currency"&gt;Currency&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#data-management"&gt;Data Management&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="#core-data"&gt;Core Data&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#firebase"&gt;Firebase&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#json"&gt;JSON&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#key-value-store"&gt;Key Value Store&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#mongodb"&gt;MongoDB&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#multi-database"&gt;Multi Database&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#orm"&gt;ORM&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#other-data"&gt;Other Data&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#realm"&gt;Realm&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#sql-drivers"&gt;SQL drivers&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#sqlite"&gt;SQLite&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#toml"&gt;TOML&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#xml"&gt;XML&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#yaml"&gt;YAML&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#zip"&gt;ZIP&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="#date"&gt;Date&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#dependency-injection"&gt;Dependency Injection&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#device"&gt;Device&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#documentation"&gt;Documentation&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#email"&gt;Email&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#embedded-systems"&gt;Embedded Systems&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="#peripherals"&gt;Peripherals&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="#events"&gt;Events&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#files"&gt;Files&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#fonts"&gt;Fonts&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#game-engine"&gt;Game Engine&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="#game-engine-2d"&gt;2D&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="#games"&gt;Games&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#gesture"&gt;Gesture&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#hardware"&gt;Hardware&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="#3d-touch"&gt;3D Touch&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#bluetooth"&gt;Bluetooth&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#camera"&gt;Camera&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="#barcode"&gt;Barcode&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="#haptic-feedback"&gt;Haptic Feedback&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#ibeacon"&gt;iBeacon&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#sensors"&gt;Sensors&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="#images"&gt;Images&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#key-value-coding"&gt;Key Value Coding&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#keyboard"&gt;Keyboard&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#kit"&gt;Kit&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#layout"&gt;Layout&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="#auto-layout"&gt;Auto Layout&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="#localization"&gt;Localization&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#location"&gt;Location&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#logging"&gt;Logging&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#maps"&gt;Maps&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#math"&gt;Math&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#natural-language-processing"&gt;Natural Language Processing&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#network"&gt;Network&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="#html"&gt;HTML&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#messaging-protocol"&gt;Messaging Protocol&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#socket"&gt;Socket&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#webserver"&gt;Webserver&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="#ocr"&gt;OCR&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#optimization"&gt;Optimization&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#pdf"&gt;PDF&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#quality"&gt;Quality&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#scripting"&gt;Scripting&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#sdk"&gt;SDK&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#security"&gt;Security&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="#cryptography"&gt;Cryptography&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#keychain"&gt;Keychain&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="#streaming"&gt;Streaming&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#styling"&gt;Styling&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#system"&gt;System&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#testing"&gt;Testing&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="#mock"&gt;Mock&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="#text"&gt;Text&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#thread"&gt;Thread&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#ui"&gt;UI&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="#alert"&gt;Alert&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#applicationdelegate"&gt;ApplicationDelegate&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#blur"&gt;Blur&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#button"&gt;Button&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#calendar"&gt;Calendar&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#cards"&gt;Cards&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#form"&gt;Form&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#hud"&gt;HUD&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#label"&gt;Label&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#menu"&gt;Menu&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#pagination"&gt;Pagination&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#payment"&gt;Payment&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#permissions"&gt;Permissions&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#stackview"&gt;StackView&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#switch"&gt;Switch&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#tab"&gt;Tab&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#template"&gt;Template&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#textfield"&gt;TextField&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#transition"&gt;Transition&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#uicollectionview"&gt;UICollectionView&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#uitableview"&gt;UITableView&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#walkthrough"&gt;Walkthrough&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="#utility"&gt;Utility&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#validation"&gt;Validation&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="#phone-numbers"&gt;Phone Numbers&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="#version-manager"&gt;Version Manager&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#video"&gt;Video&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-guides" class="anchor" aria-hidden="true" href="#guides"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Guides&lt;/h2&gt;
&lt;p&gt;&lt;em&gt;An awesome list of Swift related guides.&lt;/em&gt;&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-newsletter" class="anchor" aria-hidden="true" href="#newsletter"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Newsletter&lt;/h3&gt;
&lt;p&gt;&lt;a href="#readme"&gt;back to top&lt;/a&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://indieiosfocus.com" rel="nofollow"&gt;Indie iOS Focus Weekly&lt;/a&gt; - Curated weekly iOS newsletter.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://andybargh.com/swiftdevelopments/" rel="nofollow"&gt;Swift Developments&lt;/a&gt; - A weekly curated newsletter containing for people interested in designing and developing their own iOS, watchOS and Apple TV apps.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.natashatherobot.com" rel="nofollow"&gt;Swift Newsletter by Natasha the Robot (discontinued, look the archive)&lt;/a&gt; - Curated newsletter.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://swiftweekly.github.io" rel="nofollow"&gt;Swift Weekly Brief&lt;/a&gt; - A multi author curated newsletter.&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;&lt;a id="user-content-official-guides" class="anchor" aria-hidden="true" href="#official-guides"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Official Guides&lt;/h3&gt;
&lt;p&gt;&lt;a href="#readme"&gt;back to top&lt;/a&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://swift.org/documentation/api-design-guidelines/" rel="nofollow"&gt;API Design Guidelines&lt;/a&gt; - Official Swift API design guidelines.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://books.apple.com/us/book/swift-programming-language/id881256329" rel="nofollow"&gt;Apple eBook&lt;/a&gt; - Official Apple eBook for Swift beginners.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://swift.org/getting-started/" rel="nofollow"&gt;Getting Started&lt;/a&gt; - Find information about the how to use the Swift programming language.&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;&lt;a id="user-content-style-guides" class="anchor" aria-hidden="true" href="#style-guides"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Style Guides&lt;/h3&gt;
&lt;p&gt;&lt;a href="#readme"&gt;back to top&lt;/a&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/airbnb/swift"&gt;Airbnb&lt;/a&gt; - Airbnb's Official Style Guide.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://google.github.io/swift/" rel="nofollow"&gt;Google&lt;/a&gt; - This style guide is based on Apple’s excellent Swift standard library style and also incorporates feedback from usage across multiple Swift projects within Google.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/linkedin/swift-style-guide"&gt;LinkedIn&lt;/a&gt; - LinkedIn's Official Style Guide.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/raywenderlich/swift-style-guide"&gt;Raywenderlich&lt;/a&gt; - Raywenderlich guide, a must read.&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;&lt;a id="user-content-third-party-guides" class="anchor" aria-hidden="true" href="#third-party-guides"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Third party Guides&lt;/h3&gt;
&lt;p&gt;&lt;a href="#readme"&gt;back to top&lt;/a&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/allenwong/30DaysofSwift"&gt;30 Days of Swift&lt;/a&gt; - A cool 30 days tutorial.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/NicolaLancellotti-About/About-Swift"&gt;About Swift&lt;/a&gt; - A playground about the Swift language.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/hsavit1/Awesome-Swift-Education"&gt;Awesome Swift Education&lt;/a&gt; - An organized list of essential Swift Language Topics.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/zagahr/Conferences.digital"&gt;Conferences.digital&lt;/a&gt; - Watch conference videos in a native macOS app.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://itunes.apple.com/us/course/developing-ios-9-apps-swift/id1104579961" rel="nofollow"&gt;Developing iOS Apps with Swift&lt;/a&gt; - Stanford course by Paul Hegarty.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.hackingwithswift.com" rel="nofollow"&gt;Hacking With Swift&lt;/a&gt; - Complete training course that teaches app development through 30 hands-on projects, for free.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.raywenderlich.com" rel="nofollow"&gt;Ray Wenderlich Tutorials, Videos, Podcasts and books&lt;/a&gt; - High quality programming tutorials.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/swifteducation"&gt;Swift Education&lt;/a&gt; - A community of educators sharing materials for teaching Swift and app development.&lt;/li&gt;
&lt;li&gt;&lt;a href="http://swiftwebweekly.com" rel="nofollow"&gt;Swift Web Weekly&lt;/a&gt; - A free, hand-picked list of the best links for Swift Web Developers, every Monday in your inbox.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/vincent-pradeilles/swift-tips"&gt;swift-tips&lt;/a&gt; - A series of useful tips by Vincent Pradeilles.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://swiftdoc.org/" rel="nofollow"&gt;SwiftDoc&lt;/a&gt; - Auto-generated documentation.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/ipader/SwiftGuide"&gt;SwiftGuide CN&lt;/a&gt; - A Chinese written guide.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/JohnSundell/SwiftTips"&gt;SwiftTips&lt;/a&gt; - A collection of useful tips by John Sundell.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://theswiftwebdeveloper.com" rel="nofollow"&gt;The Swift Web Developer&lt;/a&gt; - A publication for Swift Web Developers.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/ole/whats-new-in-swift-4"&gt;whats-new-in-swift-4&lt;/a&gt; - An Xcode playground showcasing the new features in Swift 4.0.&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-boilerplates" class="anchor" aria-hidden="true" href="#boilerplates"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Boilerplates&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/messeb/ios-project-template"&gt;iOS project template&lt;/a&gt; - iOS project template with fastlane lanes, Travis CI jobs and GitHub integrations of Codecov, HoundCI for SwiftLint and Danger.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/Juanpe/Swift-VIPER-Module"&gt;Swift 3 VIPER Module Template&lt;/a&gt; - Xcode template for VIPER Architecture.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/fulldecent/swift5-module-template"&gt;Swift Module Template&lt;/a&gt; - An opinionated starting point for awesome, reusable modules.&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-repl" class="anchor" aria-hidden="true" href="#repl"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;REPL&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://online.swiftplayground.run" rel="nofollow"&gt;Online Swift Playground&lt;/a&gt; - Online Swift Playground.&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-editor-support" class="anchor" aria-hidden="true" href="#editor-support"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Editor Support&lt;/h2&gt;
&lt;p&gt;&lt;em&gt;Support for your favorite editors.&lt;/em&gt;&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-emacs" class="anchor" aria-hidden="true" href="#emacs"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Emacs&lt;/h3&gt;
&lt;p&gt;&lt;a href="#readme"&gt;back to top&lt;/a&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/swift-emacs/swift-mode"&gt;swift-mode&lt;/a&gt; - Emacs support, including partial flycheck error support.&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;&lt;a id="user-content-vim" class="anchor" aria-hidden="true" href="#vim"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Vim&lt;/h3&gt;
&lt;p&gt;&lt;a href="#readme"&gt;back to top&lt;/a&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/keith/swift.vim"&gt;swift-vim&lt;/a&gt; - Vim runtime files.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/sheerun/vim-polyglot"&gt;vim-polyglot&lt;/a&gt; - Language pack for vim that includes vim-swift.&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-benchmark" class="anchor" aria-hidden="true" href="#benchmark"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Benchmark&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/giginet/xcprofiler"&gt;xcprofiler&lt;/a&gt; - Command line utility to profile compilation time.&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-converters" class="anchor" aria-hidden="true" href="#converters"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Converters&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://objectivec2swift.com" rel="nofollow"&gt;Swiftify&lt;/a&gt; - Objective-C to Swift online code converter and Xcode extension.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/Zolang/Zolang"&gt;Zolang&lt;/a&gt; &lt;g-emoji class="g-emoji" alias="penguin" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f427.png"&gt;🐧&lt;/g-emoji&gt; - A DSL for generating code in multiple programming languages&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-other-awesome-lists" class="anchor" aria-hidden="true" href="#other-awesome-lists"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Other Awesome Lists&lt;/h2&gt;
&lt;p&gt;&lt;em&gt;Check out apps on these projects:&lt;/em&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/dashvlas/awesome-ios-interview"&gt;Awesome iOS Interview&lt;/a&gt; - List of the questions that helps you to prepare for the interview.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/iCHAIT/awesome-macOS"&gt;awesome-macOS&lt;/a&gt; - A curated list of awesome applications, softwares, tools and shiny things for macOS.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/jogendra/example-ios-apps"&gt;example-ios-apps&lt;/a&gt; - An amazing list for people who are beginners and learning ios development and for ios developers who need any example app or feature.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/dkhamsing/open-source-ios-apps"&gt;open-source-ios-apps&lt;/a&gt; - A collaborative list of open-source iOS Apps.&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-dependency-managers" class="anchor" aria-hidden="true" href="#dependency-managers"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Dependency Managers&lt;/h2&gt;
&lt;p&gt;&lt;em&gt;Dependency manager software for Swift.&lt;/em&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/JamitLabs/Accio"&gt;Accio&lt;/a&gt; - A SwiftPM based dependency manager for iOS &amp;amp; Co. with improvements over Carthage.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/Carthage/Carthage"&gt;Carthage&lt;/a&gt; - A new dependency manager.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/CocoaPods/CocoaPods"&gt;CocoaPods&lt;/a&gt; - The most used dependency manager.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/yonaskolb/Mint"&gt;Mint&lt;/a&gt; - A package manager that installs and runs Swift command line tools.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/apple/swift-package-manager"&gt;swift-package-manager&lt;/a&gt; - SPM is the Package Manager for the Swift Programming Language.&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-patterns" class="anchor" aria-hidden="true" href="#patterns"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Patterns&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/objcio/app-architecture"&gt;App Architecture&lt;/a&gt; - A sample Code of the App Architecture Book.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/sergdort/CleanArchitectureRxSwift"&gt;CleanArchitectureRxSwift&lt;/a&gt; - Example of Clean Architecture of iOS app using RxSwift.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/ochococo/Design-Patterns-In-Swift"&gt;Design-Patterns-In-Swift&lt;/a&gt; - Design Patterns.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/Brightify/Reactant"&gt;Reactant&lt;/a&gt; - Reactant is a reactive architecture for iOS.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/ferranabello/Viperit"&gt;Viperit&lt;/a&gt; - Viper Framework for iOS.&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-misc" class="anchor" aria-hidden="true" href="#misc"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Misc&lt;/h2&gt;
&lt;p&gt;&lt;em&gt;Miscellaneous Swift related projects&lt;/em&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/yonaskolb/Beak"&gt;Beak&lt;/a&gt; - A command line interface for your Swift scripts.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/GottaGetSwifty/CodableWrappers"&gt;CodableWrappers&lt;/a&gt; - A Collection of PropertyWrappers to make custom Serialization of Codable Types easy.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/Q-Mobile/Model2App"&gt;Model2App&lt;/a&gt; - Turn your data model into a working CRUD app.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/yonaskolb/SwagGen"&gt;SwagGen&lt;/a&gt; &lt;g-emoji class="g-emoji" alias="penguin" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f427.png"&gt;🐧&lt;/g-emoji&gt; - A command line tool for generating a REST API from a Swagger spec based off Stencil templates.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/practicalswift/swift-compiler-crashes"&gt;swift-compiler-crashes&lt;/a&gt; - A collection of test cases crashing the compiler.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/swiftbrew/Swiftbrew"&gt;Swiftbrew&lt;/a&gt; - Homebrew for Swift packages.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/SwiftGen/SwiftGen"&gt;SwiftGen&lt;/a&gt; - A suite of tools to auto-generate code for various assets of your project.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/SvenTiigi/SwiftKit"&gt;SwiftKit&lt;/a&gt; - Start your next Open-Source Swift Framework &lt;g-emoji class="g-emoji" alias="package" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f4e6.png"&gt;📦&lt;/g-emoji&gt;.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/JohnSundell/SwiftPlate"&gt;SwiftPlate&lt;/a&gt; - Easily generate cross platform framework projects from the command line.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/giginet/Toybox"&gt;Toybox&lt;/a&gt; - Xcode Playground management made easy.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/tuist/tuist"&gt;Tuist&lt;/a&gt; - An open source command line tool to create, maintain and interact with your Xcode projects at scale.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/thii/xcbeautify"&gt;xcbeautify&lt;/a&gt; - Little beautifier tool for xcodebuild.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/yonaskolb/XcodeGen"&gt;XcodeGen&lt;/a&gt; - Tool for generating Xcode projects from a YAML file and your project directory.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/tuist/xcodeproj"&gt;xcodeproj&lt;/a&gt; - A library to read, update and write Xcode projects and workspaces.&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-libs" class="anchor" aria-hidden="true" href="#libs"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Libs&lt;/h2&gt;
&lt;p&gt;&lt;em&gt;Here you can find a list of snippets and libs for your Swift projects.&lt;/em&gt;&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-accessibility" class="anchor" aria-hidden="true" href="#accessibility"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Accessibility&lt;/h3&gt;
&lt;p&gt;&lt;a href="#readme"&gt;back to top&lt;/a&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/chrs1885/Capable"&gt;Capable&lt;/a&gt; - Track accessibility features to improve your app for people with certain disabilities.&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;&lt;a id="user-content-ai" class="anchor" aria-hidden="true" href="#ai"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;AI&lt;/h3&gt;
&lt;p&gt;&lt;em&gt;Libs for AI based projects (Machine Learning, Neural Networks etc).&lt;/em&gt; &lt;a href="#readme"&gt;back to top&lt;/a&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/likedan/Awesome-CoreML-Models"&gt;CoreML-Models&lt;/a&gt; - A collection of unique Core ML Models.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/Somnibyte/MLKit"&gt;MLKit&lt;/a&gt; - A simple machine learning framework.&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;&lt;a id="user-content-algorithm" class="anchor" aria-hidden="true" href="#algorithm"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Algorithm&lt;/h3&gt;
&lt;p&gt;&lt;a href="#readme"&gt;back to top&lt;/a&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/CosmicMind/Algorithm"&gt;Algorithm&lt;/a&gt; - A toolset for writing algorithms and probability models.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/attaswift/BTree"&gt;BTree&lt;/a&gt; - Fast sorted collections for Swift using in-memory B-trees.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/raywenderlich/swift-algorithm-club"&gt;swift-algorithm-club&lt;/a&gt; - Algorithms and data structures, with explanations.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/Frugghi/SwiftLCS"&gt;SwiftLCS&lt;/a&gt; &lt;g-emoji class="g-emoji" alias="penguin" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f427.png"&gt;🐧&lt;/g-emoji&gt; - implementation of the longest common subsequence (LCS) algorithm.&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;&lt;a id="user-content-analytics" class="anchor" aria-hidden="true" href="#analytics"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Analytics&lt;/h3&gt;
&lt;p&gt;&lt;em&gt;Analytics related libraries to easily track your app usage&lt;/em&gt; &lt;a href="#readme"&gt;back to top&lt;/a&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/devxoul/Umbrella"&gt;Umbrella&lt;/a&gt; - Analytics abstraction layer.&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;&lt;a id="user-content-animation" class="anchor" aria-hidden="true" href="#animation"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Animation&lt;/h3&gt;
&lt;p&gt;&lt;em&gt;Libs to help with animation&lt;/em&gt; &lt;a href="#readme"&gt;back to top&lt;/a&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/timdonnelly/Advance"&gt;Advance&lt;/a&gt; - A powerful animation framework for iOS, tvOS, and OS X.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/jindulys/ChainPageCollectionView"&gt;ChainPageCollectionView&lt;/a&gt; - Fancy two-level collection view layout and animation.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/cruisediary/Comets"&gt;Comets&lt;/a&gt; - Animating Particles.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/Draveness/DKChainableAnimationKit"&gt;DKChainableAnimationKit&lt;/a&gt; - Easy to read and write chainable animations.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/roberthein/Ease"&gt;Ease&lt;/a&gt; - Animate everything with Ease.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/icanzilb/EasyAnimation"&gt;EasyAnimation&lt;/a&gt; - A library to take the power of UIView.animateWithDuration(_:, animations:...) to a whole new level.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/s2mr/Elephant"&gt;Elephant&lt;/a&gt; - Elegant SVG animation kit for iOS&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/AntonTheDev/FlightAnimator"&gt;FlightAnimator&lt;/a&gt; - Natural Blocks Based Core Animation Framework.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/shoheiyokoyama/Gemini"&gt;Gemini&lt;/a&gt; - Gemini is rich scroll based animation framework.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/IBAnimatable/IBAnimatable"&gt;IBAnimatable&lt;/a&gt; - Design and prototype UI, interaction, navigation, transition and animation for App Store ready Apps in Interface Builder with IBAnimatable.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/marmelroy/Interpolate"&gt;Interpolate&lt;/a&gt; - Interpolation framework for creating interactive gesture-driven animations.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/mmick66/kinieta"&gt;Kinieta&lt;/a&gt; - An simple Animation Engine for iOS with an Intuitive API and Readable Code.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/airbnb/lottie-ios"&gt;lottie-ios&lt;/a&gt; - An iOS library to natively render After Effects vector animations.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/cruisediary/Pastel"&gt;Pastel&lt;/a&gt; - Gradient animation effect like Instagram.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/HideakiTouhara/Poi"&gt;Poi&lt;/a&gt; - Poi makes you use card UI like tinder UI .You can use it like tableview method.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/hyperoslo/Presentation"&gt;Presentation&lt;/a&gt; - A library to help you to make tutorials, release notes and animated pages.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/shu223/pulsator"&gt;Pulsator&lt;/a&gt; - Pulse animation for iOS.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/cats-oss/Sica"&gt;Sica&lt;/a&gt; - Simple Interface Core Animation. Run type-safe animation sequencially or parallelly.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/MengTo/Spring"&gt;Spring&lt;/a&gt; - A library to simplify iOS animations.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/craiggrummitt/SpriteKitEasingSwift"&gt;SpriteKitEasingSwift&lt;/a&gt; - Better Easing for SpriteKit.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/willowtreeapps/spruce-ios"&gt;spruce-ios&lt;/a&gt; - Choreograph animations on the screen.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/AugustRush/Stellar"&gt;Stellar&lt;/a&gt; - A Physical animation library.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rchatham/SwiftyAnimate"&gt;SwiftyAnimate&lt;/a&gt; - Composable animations.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/marty-suzuki/TheAnimation"&gt;TheAnimation&lt;/a&gt; - Type-safe CAAnimation wrapper. It makes preventing to set wrong type values.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/marcosgriselli/ViewAnimator"&gt;ViewAnimator&lt;/a&gt; - Brings your UI to life with just one line.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/yapstudios/YapAnimator"&gt;YapAnimator&lt;/a&gt; - Your fast and friendly physics-based animation system.&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;&lt;a id="user-content-api" class="anchor" aria-hidden="true" href="#api"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;API&lt;/h3&gt;
&lt;p&gt;&lt;em&gt;Quick libs to get access to third party API services&lt;/em&gt; &lt;a href="#readme"&gt;back to top&lt;/a&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/serhii-londar/GithubAPI"&gt;GitHubAPI&lt;/a&gt; - Implementation of GitHub REST API v3&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/watsonbox/ios_google_places_autocomplete"&gt;GooglePlacesAutocomplete&lt;/a&gt; - Simple Google Places address entry for iOS.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/poulpix/PXGoogleDirections"&gt;PXGoogleDirections&lt;/a&gt; - Google Directions API helper.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/dingwilson/RandomUserSwift"&gt;RandomUserSwift&lt;/a&gt; - Framework to Generate Random Users - An Unofficial SDK for randomuser.me.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/sonsongithub/reddift"&gt;reddift&lt;/a&gt; - reddit API wrapper.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/mattdonnelly/Swifter"&gt;Swifter Twitter&lt;/a&gt; - Twitter framework.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/AnderGoig/SwiftInstagram"&gt;SwiftInstagram&lt;/a&gt; - Instagram API wrapper.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/mike4aday/SwiftlySalesforce"&gt;SwiftlySalesforce&lt;/a&gt; - Framework for rapid development of native iOS apps that integrate with Salesforce.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/TheM4hd1/SwiftyInsta"&gt;SwiftyInsta&lt;/a&gt; - Private and Tokenless Instagram RESTful API.&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;&lt;a id="user-content-app-routing" class="anchor" aria-hidden="true" href="#app-routing"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;App Routing&lt;/h3&gt;
&lt;p&gt;&lt;em&gt;Internal app routing systems.&lt;/em&gt; &lt;a href="#readme"&gt;back to top&lt;/a&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/SwiftKitz/Appz"&gt;Appz&lt;/a&gt; - Launch external apps and deeplink with ease.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/giginet/Crossroad"&gt;Crossroad&lt;/a&gt; - &lt;g-emoji class="g-emoji" alias="oncoming_bus" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f68d.png"&gt;🚍&lt;/g-emoji&gt; Crossroad is an URL router focused on handling Custom URL Schemes.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/SpectralDragon/LightRoute"&gt;LightRoute&lt;/a&gt; - Routing between VIPER modules.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/MaksimKurpa/Linker"&gt;Linker&lt;/a&gt; - Lightweight way to handle internal and external deeplinks for iOS.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/RxSwiftCommunity/RxFlow"&gt;RxFlow&lt;/a&gt; - RxFlow is a navigation framework for iOS applications based on a Reactive Flow Coordinator pattern.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/skyline75489/SwiftRouter"&gt;SwiftRouter&lt;/a&gt; - A URL Router for iOS.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/devxoul/URLNavigator"&gt;URLNavigator&lt;/a&gt; - Elegant URL Routing.&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;&lt;a id="user-content-app-store" class="anchor" aria-hidden="true" href="#app-store"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;App Store&lt;/h3&gt;
&lt;p&gt;&lt;em&gt;Libs to help with apple app store, in app purchases and receipt validation.&lt;/em&gt; &lt;a href="#readme"&gt;back to top&lt;/a&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/jinSasaki/InAppPurchase"&gt;InAppPurchase&lt;/a&gt; - A Simple, Lightweight and Safe framework for In App Purchase.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/benjaminmayo/merchantkit"&gt;merchantkit&lt;/a&gt; - A modern In-App Purchases management framework for iOS.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/bizz84/SwiftyStoreKit"&gt;SwiftyStoreKit&lt;/a&gt; - Lightweight In App Purchases framework.&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;&lt;a id="user-content-audio" class="anchor" aria-hidden="true" href="#audio"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Audio&lt;/h3&gt;
&lt;p&gt;&lt;em&gt;Libs to work with audio&lt;/em&gt; &lt;a href="#readme"&gt;back to top&lt;/a&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/audiokit/AudioKit"&gt;AudioKit&lt;/a&gt; - Powerful audio synthesis, processing and analysis, without the steep learning curve.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/delannoyk/AudioPlayer"&gt;AudioPlayer&lt;/a&gt; - A wrapper around AVPlayer with some cool features.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/tbaranes/AudioPlayerSwift"&gt;AudioPlayerSwift&lt;/a&gt; - AudioPlayer is a simple class for playing audio (basic and advanced usage) in iOS, OS X and tvOS apps.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/vadymmarkov/Beethoven"&gt;Beethoven&lt;/a&gt; - An audio processing library for pitch detection of musical signals.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/noreasonprojects/ModernAVPlayer"&gt;ModernAVPlayer&lt;/a&gt; - Persistence AVPlayer to resume playback after bad network connection even in background mode.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/benzguo/MusicKit"&gt;MusicKit&lt;/a&gt; - A framework for composing and transforming music.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/ThXou/Soundable"&gt;Soundable&lt;/a&gt; - Soundable allows you to play sounds, single and in sequence, in a very easy way.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/tanhakabir/SwiftAudioPlayer"&gt;SwiftAudioPlayer&lt;/a&gt; - Simple audio player for iOS that streams and performs realtime audio manipulations with AVAudioEngine.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/adamcichy/SwiftySound"&gt;SwiftySound&lt;/a&gt; - Simple library that lets you play sounds with a single line of code.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/comyar/TuningFork"&gt;TuningFork&lt;/a&gt; - A Simple Tuner for iOS.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/algolia/voice-overlay-ios"&gt;voice-overlay-ios&lt;/a&gt; - An overlay that gets your user’s voice permission and input as text in a customizable UI.&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;&lt;a id="user-content-augmented-reality" class="anchor" aria-hidden="true" href="#augmented-reality"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Augmented Reality&lt;/h3&gt;
&lt;p&gt;&lt;a href="#readme"&gt;back to top&lt;/a&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/ProjectDent/ARKit-CoreLocation"&gt;ARKit-CoreLocation&lt;/a&gt; - Combines the high accuracy of AR with the scale of GPS data.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/chriswebb09/ARKitNavigationDemo"&gt;ARKit-Navigation&lt;/a&gt; - Navigation in augmented reality with MapKit.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/AFathi/ARVideoKit"&gt;ARVideoKit&lt;/a&gt; - Capture &amp;amp; record ARKit videos, photos, Live Photos, and GIFs.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/VoxxxelAR/ARVoxelKit"&gt;ARVoxelKit&lt;/a&gt; - Voxel graphic framework using ARKit.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/piemonte/Poly"&gt;Poly&lt;/a&gt; - Unofficial Google Poly SDK – explore the world of 3D.&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;&lt;a id="user-content-authentication" class="anchor" aria-hidden="true" href="#authentication"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Authentication&lt;/h3&gt;
&lt;p&gt;&lt;em&gt;Easy way to manage auth in your apps.&lt;/em&gt; &lt;a href="#readme"&gt;back to top&lt;/a&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/chaione/Cely"&gt;Cely&lt;/a&gt; - A Plug-n-Play login framework.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/AnderGoig/InstagramLogin"&gt;InstagramLogin&lt;/a&gt; - Simple way to authenticate Instagram accounts.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/serhii-londar/LinkedInSignIn"&gt;LinkedInSignIn&lt;/a&gt; - Simple view controller to log in and retrieve an access token from LinkedIn.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/IcaliaLabs/LoginKit"&gt;LoginKit&lt;/a&gt; - LoginKit is a quick and easy way to add a Login/Signup UX to your iOS app.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/fjcaetano/ReCaptcha"&gt;ReCaptcha&lt;/a&gt; - [In]visible ReCaptcha for iOS.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/SimplicityMobile/Simplicity"&gt;Simplicity&lt;/a&gt; - A simple way to implement Facebook and Google login in your iOS and OS X apps.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/spotify/SpotifyLogin"&gt;SpotifyLogin&lt;/a&gt; - Authenticate with the Spotify API.&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;&lt;a id="user-content-bots" class="anchor" aria-hidden="true" href="#bots"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Bots&lt;/h3&gt;
&lt;p&gt;&lt;em&gt;Libs to build bot&lt;/em&gt; &lt;a href="#readme"&gt;back to top&lt;/a&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/rapierorg/telegram-bot-swift"&gt;Telegram Bot SDK&lt;/a&gt; &lt;g-emoji class="g-emoji" alias="penguin" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f427.png"&gt;🐧&lt;/g-emoji&gt; - Unofficial SDK.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/givip/Telegrammer"&gt;Telegrammer&lt;/a&gt; &lt;g-emoji class="g-emoji" alias="penguin" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f427.png"&gt;🐧&lt;/g-emoji&gt; - Open-source framework for Telegram Bots developers. It was built on top of Apple/SwiftNIO which help to demonstrate excellent performance.&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;&lt;a id="user-content-cache" class="anchor" aria-hidden="true" href="#cache"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Cache&lt;/h3&gt;
&lt;p&gt;&lt;a href="#readme"&gt;back to top&lt;/a&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/aschuch/AwesomeCache"&gt;AwesomeCache&lt;/a&gt; - Manage cache easy.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/hyperoslo/Cache"&gt;Cache&lt;/a&gt; - Nothing but Cache.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/nrkno/yr-cachyr"&gt;Cachyr&lt;/a&gt; - A small key-value data cache for iOS, macOS and tvOS.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/spring-media/Carlos"&gt;Carlos&lt;/a&gt; - A simple but flexible cache.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/evermeer/EVURLCache"&gt;EVURLCache&lt;/a&gt; - If you want to make your app still works when it's offline.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/yysskk/MemoryCache"&gt;MemoryCache&lt;/a&gt; - Type-safe memory cache.&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;&lt;a id="user-content-chart" class="anchor" aria-hidden="true" href="#chart"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Chart&lt;/h3&gt;
&lt;p&gt;&lt;a href="#readme"&gt;back to top&lt;/a&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/danielgindi/Charts"&gt;Charts&lt;/a&gt; - Beautiful charts for iOS/tvOS/OSX (port of MPAndroidChart).&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/kevinzhow/PNChart-Swift"&gt;PNChart-Swift&lt;/a&gt; - A simple and beautiful chart lib with animation.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/philackm/ScrollableGraphView"&gt;ScrollableGraphView&lt;/a&gt; - Adaptive scrollable graph view for iOS to visualise simple discrete datasets.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/gpbl/SwiftChart"&gt;SwiftChart&lt;/a&gt; - A simple line and area charting library for iOS. Supports multiple series, partially filled series and touch events.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/i-schuetz/SwiftCharts"&gt;SwiftCharts&lt;/a&gt; - Highly customizable charts for iOS.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/TBXark/TKRadarChart"&gt;TKRadarChart&lt;/a&gt; - A customizable radar chart.&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;&lt;a id="user-content-chat" class="anchor" aria-hidden="true" href="#chat"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Chat&lt;/h3&gt;
&lt;p&gt;&lt;em&gt;Libs to get access to build chat app&lt;/em&gt; &lt;a href="#readme"&gt;back to top&lt;/a&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/badoo/Chatto"&gt;Chatto&lt;/a&gt; - A lightweight framework to build chat applications.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/nathantannar4/InputBarAccessoryView"&gt;InputBarAccessoryView&lt;/a&gt; - A simple and easily customizable InputAccessoryView for making powerful input bars with autocomplete and attachments.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/MessageKit/MessageKit"&gt;MessageKit&lt;/a&gt; - A community-driven replacement for JSQMessagesViewController.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/steve228uk/MessengerKit"&gt;MessengerKit&lt;/a&gt; - A UI framework for building messenger interfaces.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/instamobile/messenger-iOS-chat-swift-firestore"&gt;Real-time Chat with Firebase&lt;/a&gt; - Functional real-time chat app with Firebase Firestore using MessageKit.&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;&lt;a id="user-content-colors" class="anchor" aria-hidden="true" href="#colors"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Colors&lt;/h3&gt;
&lt;p&gt;&lt;em&gt;Interesting snippets related to color management and utility.&lt;/em&gt; &lt;a href="#readme"&gt;back to top&lt;/a&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/ViccAlexander/Chameleon"&gt;Chameleon&lt;/a&gt; - Chameleon is a lightweight, yet powerful, color framework for iOS.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/joncardasis/ChromaColorPicker"&gt;ChromaColorPicker&lt;/a&gt; - An intuitive and fun iOS color picker.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/yannickl/DynamicColor"&gt;DynamicColor&lt;/a&gt; - An extension to manipulate colors easily.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/brynbellomy/FlatUIColors"&gt;FlatUIColors&lt;/a&gt; - Flat UI color palette.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/Gradients/Gradients"&gt;Gradients&lt;/a&gt; - A curated collection of splendid 180+ gradients.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/artman/HexColor"&gt;HexColor&lt;/a&gt; - Define UIColors as Hex integers.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/zenangst/Hue"&gt;Hue&lt;/a&gt; - Hue is the all-in-one coloring utility that you'll ever need.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/jdhealy/PrettyColors"&gt;PrettyColors&lt;/a&gt; - Styles and colors text in the Terminal with ANSI escape codes. Conforms to ECMA Standard 48.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/SwiftGen/SwiftGen#uicolor"&gt;SwiftGen-Colors&lt;/a&gt; - A tool to auto-generate &lt;code&gt;enums&lt;/code&gt; for your &lt;code&gt;UIColor&lt;/code&gt; constants.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/thii/SwiftHEXColors"&gt;SwiftHEXColors&lt;/a&gt; - HEX color handling as an extension for UIColor.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/yeahdongcn/UIColor-Hex-Swift"&gt;UIColor-Hex-Swift&lt;/a&gt; - Hex to UIColor converter.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/dqhieu/UIGradient"&gt;UIGradient&lt;/a&gt; - A simple and powerful library for using gradient layer, image, color.&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;&lt;a id="user-content-command-line" class="anchor" aria-hidden="true" href="#command-line"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Command Line&lt;/h3&gt;
&lt;p&gt;&lt;em&gt;Create command line applications.&lt;/em&gt; &lt;a href="#readme"&gt;back to top&lt;/a&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/kylef/Commander"&gt;Commander&lt;/a&gt; &lt;g-emoji class="g-emoji" alias="penguin" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f427.png"&gt;🐧&lt;/g-emoji&gt; - Compose beautiful command line interfaces.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/jatoben/CommandLine"&gt;CommandLine&lt;/a&gt; &lt;g-emoji class="g-emoji" alias="penguin" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f427.png"&gt;🐧&lt;/g-emoji&gt; - Library for creating command-line interfaces.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/nsomar/Guaka"&gt;Guaka&lt;/a&gt; &lt;g-emoji class="g-emoji" alias="penguin" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f427.png"&gt;🐧&lt;/g-emoji&gt; - The smart and beautiful (POSIX compliant) command line framework.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/andybest/linenoise-swift"&gt;LineNoise&lt;/a&gt; &lt;g-emoji class="g-emoji" alias="penguin" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f427.png"&gt;🐧&lt;/g-emoji&gt; - A zero-dependency replacement for readline.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/bow-swift/nef"&gt;nef&lt;/a&gt; - A set of command line tools that lets you have compile time verification of your documentation written as Xcode Playground.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/jkandzi/Progress.swift"&gt;Progress.swift&lt;/a&gt; &lt;g-emoji class="g-emoji" alias="penguin" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f427.png"&gt;🐧&lt;/g-emoji&gt; - Add beautiful progress bars to your command line.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/jakeheis/SwiftCLI"&gt;SwiftCLI&lt;/a&gt; &lt;g-emoji class="g-emoji" alias="penguin" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f427.png"&gt;🐧&lt;/g-emoji&gt; - A powerful framework that can be used to develop a CLI.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/nsomar/Swiftline"&gt;Swiftline&lt;/a&gt; - A set of tools to help you create command line applications.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/kareman/SwiftShell"&gt;SwiftShell&lt;/a&gt; - A library for creating command-line applications and running shell commands.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/scottrhoyt/SwiftyTextTable"&gt;SwiftyTextTable&lt;/a&gt; &lt;g-emoji class="g-emoji" alias="penguin" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f427.png"&gt;🐧&lt;/g-emoji&gt; - A lightweight library to generate text tables.&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;&lt;a id="user-content-concurrency" class="anchor" aria-hidden="true" href="#concurrency"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Concurrency&lt;/h3&gt;
&lt;p&gt;&lt;em&gt;Easier ways to work with concurrency.&lt;/em&gt; &lt;a href="#readme"&gt;back to top&lt;/a&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/AsyncNinja/AsyncNinja"&gt;AsyncNinja&lt;/a&gt; - A complete set of concurrency and reactive programming primitives.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/formbound/Futures"&gt;Futures&lt;/a&gt; &lt;g-emoji class="g-emoji" alias="penguin" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f427.png"&gt;🐧&lt;/g-emoji&gt; - Lightweight promises for iOS, macOS, tvOS, watchOS, and server-side.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/quanvo87/GroupWork"&gt;GroupWork&lt;/a&gt; &lt;g-emoji class="g-emoji" alias="penguin" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f427.png"&gt;🐧&lt;/g-emoji&gt; - Easy concurrent, asynchronous tasks.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/malcommac/Hydra"&gt;Hydra&lt;/a&gt; - Promises &amp;amp; Await - Write better async code.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/intelygenz/Kommander-iOS"&gt;Kommander&lt;/a&gt; - Manage the task execution in different threads through Kommands.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/FabrizioBrancati/Queuer"&gt;Queuer&lt;/a&gt; &lt;g-emoji class="g-emoji" alias="penguin" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f427.png"&gt;🐧&lt;/g-emoji&gt; - A queue manager, built on top of OperationQueue and Dispatch (aka GCD).&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/belozierov/SwiftCoroutine"&gt;SwiftCoroutine&lt;/a&gt; - Coroutines for iOS and macOS.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/Zewo/Venice"&gt;Venice&lt;/a&gt; &lt;g-emoji class="g-emoji" alias="penguin" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f427.png"&gt;🐧&lt;/g-emoji&gt; - Communicating sequential processes (CSP), Linux ready.&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;&lt;a id="user-content-currency" class="anchor" aria-hidden="true" href="#currency"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Currency&lt;/h3&gt;
&lt;p&gt;&lt;a href="#readme"&gt;back to top&lt;/a&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/danthorpe/Money"&gt;Money&lt;/a&gt; - Currency formatter.&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;&lt;a id="user-content-data-management" class="anchor" aria-hidden="true" href="#data-management"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Data Management&lt;/h3&gt;
&lt;p&gt;&lt;a href="#readme"&gt;back to top&lt;/a&gt;&lt;/p&gt;
&lt;h4&gt;&lt;a id="user-content-core-data" class="anchor" aria-hidden="true" href="#core-data"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Core Data&lt;/h4&gt;
&lt;p&gt;&lt;em&gt;No more pain with Core Data, here are some interesting libs to handle data management.&lt;/em&gt; &lt;a href="#readme"&gt;back to top&lt;/a&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/tadija/AERecord"&gt;AERecord&lt;/a&gt; - Super awesome Core Data wrapper library for iOS.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/Alecrim/AlecrimCoreData"&gt;AlecrimCoreData&lt;/a&gt; - Simple Core Data wrapper library.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/jmfieldman/cadmium"&gt;Cadmium&lt;/a&gt; - Framework that hides the complexity of managed object contexts.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/JohnEstropia/CoreStore"&gt;CoreStore&lt;/a&gt; - simple and elegant way to handle Core Data.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/mrdekk/DataKernel"&gt;DataKernel&lt;/a&gt; - DataKernel is a minimalistic wrapper around Core Data stack to ease persistence operations. No external dependencies.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/CosmicMind/Graph"&gt;Graph&lt;/a&gt; - An elegant data-driven framework for Core Data.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/jessesquires/JSQCoreDataKit"&gt;JSQCoreDataKit&lt;/a&gt; - A swifter Core Data stack.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/justeat/JustPersist"&gt;JustPersist&lt;/a&gt; - Easiest and safest way to do persistence on iOS with Core Data support out of the box.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/QueryKit/QueryKit"&gt;QueryKit&lt;/a&gt; - An easy way to play with Core Data filtering.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/albertodebortoli/Skopelos"&gt;Skopelos&lt;/a&gt; - A minimalistic, thread safe, non-boilerplate and super easy to use version of Active Record on Core Data.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/modo-studio/SugarRecord"&gt;SugarRecord&lt;/a&gt; - Helps with Core Data and Realm.&lt;/li&gt;
&lt;/ul&gt;
&lt;h4&gt;&lt;a id="user-content-firebase" class="anchor" aria-hidden="true" href="#firebase"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Firebase&lt;/h4&gt;
&lt;p&gt;&lt;a href="#readme"&gt;back to top&lt;/a&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/1amageek/Ballcap-iOS"&gt;Ballcap&lt;/a&gt; - Ballcap is a database schema design framework for Cloud Firestore.&lt;/li&gt;
&lt;/ul&gt;
&lt;h4&gt;&lt;a id="user-content-json" class="anchor" aria-hidden="true" href="#json"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;JSON&lt;/h4&gt;
&lt;p&gt;&lt;em&gt;Struggling using json data? Here are some interesting ways to handle it.&lt;/em&gt; &lt;a href="#readme"&gt;back to top&lt;/a&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/tristanhimmelman/AlamofireObjectMapper"&gt;AlamofireObjectMapper&lt;/a&gt; - An Alamofire extension which converts JSON response data into objects using ObjectMapper.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/ra1028/Alembic"&gt;Alembic&lt;/a&gt; - Functional JSON parsing, mapping to objects, and serialize to JSON.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/thoughtbot/Argo"&gt;Argo&lt;/a&gt; - JSON parsing library.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/freshOS/Arrow"&gt;Arrow&lt;/a&gt; - Elegant JSON Parsing.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/Anviking/Decodable"&gt;Decodable&lt;/a&gt; &lt;g-emoji class="g-emoji" alias="penguin" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f427.png"&gt;🐧&lt;/g-emoji&gt; - JSON parsing.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/Nike-Inc/Elevate"&gt;Elevate&lt;/a&gt; - JSON parsing framework that makes parsing simple, reliable and composable.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/evermeer/EVReflection"&gt;EVReflection&lt;/a&gt; - Reflection based JSON encoding and decoding. Including support for NSDictionary, NSCoding, Printable, Hashable and Equatable.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/bignerdranch/Freddy"&gt;Freddy&lt;/a&gt; - A reusable framework for parsing JSON.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/LoganWright/Genome"&gt;Genome&lt;/a&gt; - A simple, type safe, failure driven mapping library for serializing JSON to models.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/hkellaway/Gloss"&gt;Gloss&lt;/a&gt; &lt;g-emoji class="g-emoji" alias="penguin" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f427.png"&gt;🐧&lt;/g-emoji&gt; - Shiny JSON parsing library.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/alibaba/handyjson"&gt;HandyJSON&lt;/a&gt; - A handy JSON-object serialization/deserialization library.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/ikesyo/Himotoki"&gt;Himotoki&lt;/a&gt; - A type-safe JSON decoding library.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/delba/JASON"&gt;JASON&lt;/a&gt; - JSON parsing with outstanding performances and convenient operators.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/matthewcheok/JSONCodable"&gt;JSONCodable&lt;/a&gt; - Hassle-free JSON encoding and decoding.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/isair/JSONHelper"&gt;JSONHelper&lt;/a&gt; - Lightning fast JSON deserialization and value conversion library for iOS &amp;amp; OS X.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/johnlui/JSONNeverDie"&gt;JSONNeverDie&lt;/a&gt; - Auto reflection tool from JSON to Model, user friendly JSON encoder / decoder, aims to never die.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/tristanhimmelman/ObjectMapper"&gt;ObjectMapper&lt;/a&gt; - JSON object mapper.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/postmates/PMJSON"&gt;PMJSON&lt;/a&gt; - JSON encoding/decoding library.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/SwiftyJSON/SwiftyJSON"&gt;SwiftyJSON&lt;/a&gt; - A lib for JSON with error handling.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/insanoid/SwiftyJSONAccelerator"&gt;SwiftyJSONAccelerator&lt;/a&gt; - macOS app to generate Swift 5 models for JSON (with Codeable).&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/JohnSundell/Unbox"&gt;Unbox&lt;/a&gt; - The easy to use JSON decoder.&lt;/li&gt;
&lt;/ul&gt;
&lt;h4&gt;&lt;a id="user-content-key-value-store" class="anchor" aria-hidden="true" href="#key-value-store"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Key Value Store&lt;/h4&gt;
&lt;p&gt;&lt;a href="#readme"&gt;back to top&lt;/a&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/Nirma/Default"&gt;Default&lt;/a&gt; - Modern interface to UserDefaults + Codable support.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/sindresorhus/Defaults"&gt;Defaults&lt;/a&gt; - Strongly-typed UserDefaults with support for Codable and key observation.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/nmdias/DefaultsKit"&gt;DefaultsKit&lt;/a&gt; - Simple, Strongly Typed UserDefaults for iOS, macOS and tvOS.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/symentis/Palau"&gt;Palau&lt;/a&gt; - Typesafe NSUserDefaults with custom rules.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/phimage/Prephirences"&gt;Prephirences&lt;/a&gt; - Manage application preferences, NSUserDefaults, iCloud, Keychain and more.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/vpeschenkov/SecureDefaults"&gt;SecureDefaults&lt;/a&gt; - A lightweight wrapper over UserDefaults &amp;amp; NSUserDefaults with an extra AES-256 encryption layer.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/SwiftKitz/Storez"&gt;Storez&lt;/a&gt; - Safe, statically-typed, store-agnostic key-value storage.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/hemantasapkota/SwiftStore"&gt;SwiftStore&lt;/a&gt; - A Key-Value store backed by LevelDB.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/sunshinejr/SwiftyUserDefaults"&gt;SwiftyUserDefaults&lt;/a&gt; - Cleaner, nicer syntax for NSUserDefaults.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/omaralbeik/UserDefaultsStore"&gt;UserDefaultsStore&lt;/a&gt; - Why not use UserDefaults to store Codable objects &lt;g-emoji class="g-emoji" alias="wink" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f609.png"&gt;😉&lt;/g-emoji&gt;.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/ArtSabintsev/Zephyr"&gt;Zephyr&lt;/a&gt; - Effortlessly synchronize NSUserDefaults over iCloud.&lt;/li&gt;
&lt;/ul&gt;
&lt;h4&gt;&lt;a id="user-content-mongodb" class="anchor" aria-hidden="true" href="#mongodb"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;MongoDB&lt;/h4&gt;
&lt;p&gt;&lt;a href="#readme"&gt;back to top&lt;/a&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/OpenKitten/MongoKitten"&gt;MongoKitten&lt;/a&gt; &lt;g-emoji class="g-emoji" alias="penguin" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f427.png"&gt;🐧&lt;/g-emoji&gt; - MongoDB Connector.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/PerfectlySoft/Perfect-MongoDB"&gt;Perfect-MongoDB&lt;/a&gt; &lt;g-emoji class="g-emoji" alias="penguin" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f427.png"&gt;🐧&lt;/g-emoji&gt; - A stand-alone wrapper around the mongo-c client library, enabling access to MongoDB servers.&lt;/li&gt;
&lt;/ul&gt;
&lt;h4&gt;&lt;a id="user-content-multi-database" class="anchor" aria-hidden="true" href="#multi-database"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Multi Database&lt;/h4&gt;
&lt;p&gt;&lt;em&gt;Data management layers that involve multiple sources.&lt;/em&gt; &lt;a href="#readme"&gt;back to top&lt;/a&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/ssamadgh/ModelAssistant"&gt;ModelAssistant&lt;/a&gt; - Elegant library to manage the interactions between view and model&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/Teknasyon-Teknoloji/PersistenceKit"&gt;PersistenceKit&lt;/a&gt; - Store and retrieve Codable objects to various persistence layers, in a couple lines of code!&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/dreymonde/Shallows"&gt;Shallows&lt;/a&gt; - Your lightweight persistence toolbox.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/StorageKit/StorageKit"&gt;StorageKit&lt;/a&gt; - Your Data Storage Troubleshooter &lt;g-emoji class="g-emoji" alias="hammer_and_wrench" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f6e0.png"&gt;🛠&lt;/g-emoji&gt;.&lt;/li&gt;
&lt;/ul&gt;
&lt;h4&gt;&lt;a id="user-content-orm" class="anchor" aria-hidden="true" href="#orm"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;ORM&lt;/h4&gt;
&lt;p&gt;&lt;a href="#readme"&gt;back to top&lt;/a&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/vapor/fluent"&gt;fluent&lt;/a&gt; &lt;g-emoji class="g-emoji" alias="penguin" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f427.png"&gt;🐧&lt;/g-emoji&gt; - Simple ActiveRecord implementation.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/PerfectlySoft/Perfect-CRUD"&gt;Perfect-CRUD&lt;/a&gt; &lt;g-emoji class="g-emoji" alias="penguin" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f427.png"&gt;🐧&lt;/g-emoji&gt; - CRUD is an object-relational mapping (ORM) system using Codable protocol.&lt;/li&gt;
&lt;/ul&gt;
&lt;h4&gt;&lt;a id="user-content-other-data" class="anchor" aria-hidden="true" href="#other-data"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Other Data&lt;/h4&gt;
&lt;p&gt;&lt;em&gt;Other ways to persist data&lt;/em&gt; &lt;a href="#readme"&gt;back to top&lt;/a&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/MaxDesiatov/CoreXLSX"&gt;CoreXLSX&lt;/a&gt; - Excel spreadsheet (XLSX) format support.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/Nero5023/CSVParser"&gt;CSVParser&lt;/a&gt; &lt;g-emoji class="g-emoji" alias="penguin" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f427.png"&gt;🐧&lt;/g-emoji&gt; - Fast parser for CSV.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/saoudrizwan/Disk"&gt;Disk&lt;/a&gt; - Delightful framework for iOS to easily persist structs, images, and data.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/evermeer/EVCloudKitDao"&gt;EVCloudKitDao&lt;/a&gt; - Simplified access to CloudKit with support for subscriptions and local caching.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/vincent-pradeilles/KeyPathKit"&gt;KeyPathKit&lt;/a&gt; - KeyPathKit provides a seamless syntax to manipulate data using typed keypaths.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/soapyigu/LeetCode-Swift"&gt;LeetCode-Swift&lt;/a&gt; - Solutions to LeetCode interview questions.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/naru-jpn/pencil"&gt;Pencil&lt;/a&gt; - Write any value to file.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/iAmrSalman/StorageManager"&gt;StorageManager&lt;/a&gt; - Safe and easy way to use FileManager as Database.&lt;/li&gt;
&lt;/ul&gt;
&lt;h4&gt;&lt;a id="user-content-realm" class="anchor" aria-hidden="true" href="#realm"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Realm&lt;/h4&gt;
&lt;p&gt;&lt;a href="#readme"&gt;back to top&lt;/a&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/realm/realm-cocoa"&gt;Realm&lt;/a&gt; - Realm is a mobile database: a replacement for Core Data &amp;amp; SQLite.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/matthewcheok/Realm-JSON"&gt;Realm+JSON&lt;/a&gt; - A concise Mantle-like way of working with Realm and JSON.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/k-lpmg/RealmWrapper"&gt;RealmWrapper&lt;/a&gt; - Safe and easy wrappers for RealmSwift.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/arturdev/Unrealm"&gt;Unrealm&lt;/a&gt; - Unrealm enables you to easily store Swift native Classes, Structs and Enums into Realm.&lt;/li&gt;
&lt;/ul&gt;
&lt;h4&gt;&lt;a id="user-content-sql-drivers" class="anchor" aria-hidden="true" href="#sql-drivers"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;SQL drivers&lt;/h4&gt;
&lt;p&gt;&lt;a href="#readme"&gt;back to top&lt;/a&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/novi/mysql-swift"&gt;MySQL Swift&lt;/a&gt; &lt;g-emoji class="g-emoji" alias="penguin" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f427.png"&gt;🐧&lt;/g-emoji&gt; - MySQL client library.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/PerfectlySoft/Perfect-MySQL"&gt;Perfect-MySQL&lt;/a&gt; &lt;g-emoji class="g-emoji" alias="penguin" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f427.png"&gt;🐧&lt;/g-emoji&gt; - A stand-alone wrapper around the MySQL client library, enabling access to MySQL servers.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/PerfectlySoft/Perfect-PostgreSQL"&gt;Perfect-PostgreSQL&lt;/a&gt; &lt;g-emoji class="g-emoji" alias="penguin" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f427.png"&gt;🐧&lt;/g-emoji&gt; - A stand-alone wrapper around the libpq client library, enabling access to PostgreSQL servers.&lt;/li&gt;
&lt;/ul&gt;
&lt;h4&gt;&lt;a id="user-content-sqlite" class="anchor" aria-hidden="true" href="#sqlite"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;SQLite&lt;/h4&gt;
&lt;p&gt;&lt;em&gt;Are you interested in storing your app data using SQLite? Here are some interesting resources.&lt;/em&gt; &lt;a href="#readme"&gt;back to top&lt;/a&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/groue/GRDB.swift"&gt;GRDB.swift&lt;/a&gt; - A versatile SQLite toolkit.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/stephencelis/SQLite.swift"&gt;SQLite.swift&lt;/a&gt; - Framework wrapping SQLite3. Small. Simple. Safe.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/FahimF/SQLiteDB"&gt;SQLiteDB&lt;/a&gt; - SQLite wrapper.&lt;/li&gt;
&lt;/ul&gt;
&lt;h4&gt;&lt;a id="user-content-toml" class="anchor" aria-hidden="true" href="#toml"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;TOML&lt;/h4&gt;
&lt;p&gt;&lt;em&gt;Tom's Obvious, Minimal Language.&lt;/em&gt; &lt;a href="#readme"&gt;back to top&lt;/a&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/dduan/TOMLDecoder"&gt;TOMLDecoder&lt;/a&gt; - Latest TOML standard, decoded.&lt;/li&gt;
&lt;/ul&gt;
&lt;h4&gt;&lt;a id="user-content-xml" class="anchor" aria-hidden="true" href="#xml"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;XML&lt;/h4&gt;
&lt;p&gt;&lt;em&gt;If you prefer to manage XML data formatted entries, here are some helpful libs&lt;/em&gt; &lt;a href="#readme"&gt;back to top&lt;/a&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/tadija/AEXML"&gt;AEXML&lt;/a&gt; - xml wrapper.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/lobodart/CheatyXML"&gt;CheatyXML&lt;/a&gt; - A powerful framework designed to manage XML easily.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/chenyunguiMilook/SwiftyXML"&gt;SwiftyXML&lt;/a&gt; - The most swifty way to deal with XML.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/drmohundro/SWXMLHash"&gt;SWXMLHash&lt;/a&gt; - Simple XML parsing.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/MaxDesiatov/XMLCoder"&gt;XMLCoder&lt;/a&gt; - XMLEncoder &amp;amp; XMLDecoder based on Codable protocols from the standard library&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/gcharita/XMLMapper"&gt;XMLMapper&lt;/a&gt; - A simple way to map XML to Objects.&lt;/li&gt;
&lt;/ul&gt;
&lt;h4&gt;&lt;a id="user-content-yaml" class="anchor" aria-hidden="true" href="#yaml"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;YAML&lt;/h4&gt;
&lt;p&gt;&lt;a href="#readme"&gt;back to top&lt;/a&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/behrang/YamlSwift"&gt;YamlSwift&lt;/a&gt; - Load YAML and JSON documents.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/jpsim/Yams"&gt;Yams&lt;/a&gt; &lt;g-emoji class="g-emoji" alias="penguin" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f427.png"&gt;🐧&lt;/g-emoji&gt; - Sweet YAML parser.&lt;/li&gt;
&lt;/ul&gt;
&lt;h4&gt;&lt;a id="user-content-zip" class="anchor" aria-hidden="true" href="#zip"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;ZIP&lt;/h4&gt;
&lt;p&gt;&lt;a href="#readme"&gt;back to top&lt;/a&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/marmelroy/Zip"&gt;Zip&lt;/a&gt; - Framework for zipping and unzipping files.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/weichsel/ZIPFoundation"&gt;Zip Foundation&lt;/a&gt; - A library to create, read and modify ZIP archive files.&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;&lt;a id="user-content-date" class="anchor" aria-hidden="true" href="#date"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Date&lt;/h3&gt;
&lt;p&gt;&lt;em&gt;Handle data formatting easily.&lt;/em&gt; &lt;a href="#readme"&gt;back to top&lt;/a&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/Kawoou/AnyDate"&gt;AnyDate&lt;/a&gt; - Date &amp;amp; Time API inspired from Java 8 DateTime API.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/davedelong/Chronology"&gt;Chronology&lt;/a&gt; - Building a better date/time library.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/melvitax/DateHelper"&gt;DateHelper&lt;/a&gt; - Simple date helper.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/SwiftKitz/Datez"&gt;Datez&lt;/a&gt; - Library for dealing with &lt;code&gt;NSDate&lt;/code&gt;, &lt;code&gt;NSCalendar&lt;/code&gt;, &lt;code&gt;NSDateComponents&lt;/code&gt;, and &lt;code&gt;NSTimeInterval&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/hemangshah/Datify"&gt;Datify&lt;/a&gt; - Easypeasy date functions.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/novalagung/nvdate"&gt;NVDate&lt;/a&gt; - Date extension library.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/malcommac/SwiftDate"&gt;SwiftDate&lt;/a&gt; - Easy NSDate Management.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/akosma/SwiftMoment"&gt;SwiftMoment&lt;/a&gt; - A time and calendar manipulation library.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/dreymonde/Time"&gt;Time&lt;/a&gt; - Type-safe time calculations, powered by generics.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/naoty/Timepiece"&gt;Timepiece&lt;/a&gt; - Intuitive NSDate extensions.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/instacart/TrueTime.swift"&gt;TrueTime.swift&lt;/a&gt; - Get the true current time impervious to device clock time changes (NTP library).&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;&lt;a id="user-content-dependency-injection" class="anchor" aria-hidden="true" href="#dependency-injection"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Dependency Injection&lt;/h3&gt;
&lt;p&gt;&lt;em&gt;Dependency injection libs&lt;/em&gt; &lt;a href="#readme"&gt;back to top&lt;/a&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/square/Cleanse"&gt;Cleanse&lt;/a&gt; - A Lightweight Dependency Injection Framework by Square.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/symentis/Corridor"&gt;Corridor&lt;/a&gt; - A Coreader-like Dependency Injection μFramework.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/kawoou/Deli"&gt;Deli&lt;/a&gt; - Deli is an easy-to-use Dependency Injection(DI).&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/Liftric/DIKit"&gt;DIKit&lt;/a&gt; - Dependency Injection Framework for Swift, inspired by KOIN.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/AliSoftware/Dip"&gt;Dip&lt;/a&gt; - A simple Dependency Injection Container.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/ivlevAstef/DITranquillity/"&gt;DITranquillity&lt;/a&gt; - Dependency injection framework with tranquility.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/vincent-pradeilles/locatable"&gt;Locatable&lt;/a&gt; - A micro-framework that leverages Property Wrappers to implement the Service Locator pattern.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/devxoul/Pure"&gt;Pure&lt;/a&gt; - A way to do a dependency injection without a DI container.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/Swinject/Swinject"&gt;Swinject&lt;/a&gt; - A dependency injection framework.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/appsquickly/Typhoon"&gt;Typhoon&lt;/a&gt; - Dependency injection toolkit.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/scribd/Weaver"&gt;Weaver&lt;/a&gt; - A declarative, easy-to-use and safe Dependency Injection framework.&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;&lt;a id="user-content-device" class="anchor" aria-hidden="true" href="#device"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Device&lt;/h3&gt;
&lt;p&gt;&lt;em&gt;A collection of libs to recognize your device.&lt;/em&gt; &lt;a href="#readme"&gt;back to top&lt;/a&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/Ekhoo/Device"&gt;Device&lt;/a&gt; - Light weight tool for detecting the current device and screen size.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/schickling/Device.swift"&gt;Device.swift&lt;/a&gt; - Super-lightweight library to detect used device.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/devicekit/DeviceKit"&gt;DeviceKit&lt;/a&gt; - DeviceKit is a value-type replacement of UIDevice.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/andrealufino/Deviice"&gt;Deviice&lt;/a&gt; - Swift library to easily check the current device and some more info about it.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/andrealufino/Luminous"&gt;Luminous&lt;/a&gt; - Get everything you need to know about the device.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/bojan/Thingy"&gt;Thingy&lt;/a&gt; - A modern device detection and querying library.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/Nirma/UIDeviceComplete"&gt;UIDeviceComplete&lt;/a&gt; - UIDevice extensions that fill in the missing pieces.&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;&lt;a id="user-content-documentation" class="anchor" aria-hidden="true" href="#documentation"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Documentation&lt;/h3&gt;
&lt;p&gt;&lt;em&gt;Generate documentation for Swift code&lt;/em&gt; &lt;a href="#readme"&gt;back to top&lt;/a&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/realm/jazzy/"&gt;jazzy&lt;/a&gt; - Soulful docs.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/eneko/SourceDocs/"&gt;SourceDocs&lt;/a&gt; - Generate Markdown reference documentation that lives with your code.&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;&lt;a id="user-content-email" class="anchor" aria-hidden="true" href="#email"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Email&lt;/h3&gt;
&lt;p&gt;&lt;a href="#readme"&gt;back to top&lt;/a&gt;&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-embedded-systems" class="anchor" aria-hidden="true" href="#embedded-systems"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Embedded Systems&lt;/h3&gt;
&lt;p&gt;&lt;em&gt;Build your embedded Linux projects on a RaspberryPi, BeagleBone, C.H.I.P. and other boards.&lt;/em&gt; &lt;a href="#readme"&gt;back to top&lt;/a&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/uraimo/SwiftyGPIO"&gt;SwiftyGPIO&lt;/a&gt; &lt;g-emoji class="g-emoji" alias="penguin" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f427.png"&gt;🐧&lt;/g-emoji&gt; - Interact with Linux GPIO/SPI/PWM on ARM.&lt;/li&gt;
&lt;/ul&gt;
&lt;h4&gt;&lt;a id="user-content-peripherals" class="anchor" aria-hidden="true" href="#peripherals"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Peripherals&lt;/h4&gt;
&lt;p&gt;&lt;em&gt;Interact with specific external peripherals.&lt;/em&gt; &lt;a href="#readme"&gt;back to top&lt;/a&gt;&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-events" class="anchor" aria-hidden="true" href="#events"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Events&lt;/h3&gt;
&lt;p&gt;&lt;em&gt;Alternatives to NSNotificationCenter, Key-Value-Observation, or delegation.&lt;/em&gt; &lt;a href="#readme"&gt;back to top&lt;/a&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/DeclarativeHub/Bond"&gt;Bond&lt;/a&gt; - Binding framework.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/Thomvis/BrightFutures"&gt;BrightFutures&lt;/a&gt; - Promise and future lib.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/noppefoxwolf/Combinative"&gt;Combinative&lt;/a&gt; - UI event handling using Apple's combine framework.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/DimaMishchenko/EasyFutures"&gt;EasyFutures&lt;/a&gt; - &lt;g-emoji class="g-emoji" alias="link" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f517.png"&gt;🔗&lt;/g-emoji&gt;Futures &amp;amp; Promises. Easy to use. Highly combinable.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/aleclarson/emitter-kit"&gt;EmitterKit&lt;/a&gt; - Implementation of event emitters and listeners.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/FutureKit/FutureKit"&gt;FutureKit&lt;/a&gt; - Future/Promises Library.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/BendingSpoons/katana-swift"&gt;Katana&lt;/a&gt; - Write apps a la React and Redux.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/fxm90/LightweightObservable"&gt;LightweightObservable&lt;/a&gt; - A lightweight implementation of an observable sequence that you can subscribe to.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/marty-suzuki/NoticeObserveKit"&gt;NoticeObserveKit&lt;/a&gt; - NoticeObserveKit is type-safe NotificationCenter wrapper that associates notice type with info type.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/SwiftKitz/Notificationz"&gt;Notificationz&lt;/a&gt; - Helping you own &lt;code&gt;NSNotificationCenter&lt;/code&gt; by providing a simple, customizable adapter.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/roberthein/Observable"&gt;Observable&lt;/a&gt; - The easiest way to observe values.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/broadwaylamb/OpenCombine"&gt;OpenCombine&lt;/a&gt; - Open source implementation of Apple's Combine framework for processing values over time.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/postmates/PMKVObserver/"&gt;PMKVObserver&lt;/a&gt; - Modern thread-safe and type-safe key-value observing.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/mxcl/PromiseKit"&gt;PromiseKit&lt;/a&gt; - Async promise programming lib.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/ReactiveCocoa/ReactiveCocoa"&gt;ReactiveCocoa&lt;/a&gt; - ReactiveCocoa (RAC) is a Cocoa framework inspired by Functional Reactive Programming. It provides APIs for composing and transforming streams of values over time.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/ReactorKit/ReactorKit"&gt;ReactorKit&lt;/a&gt; - A framework for reactive and unidirectional application architecture.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/ReSwift/ReSwift"&gt;ReSwift&lt;/a&gt; - Unidirectional Data Flow.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/RxSwiftCommunity/RxReduce"&gt;RxReduce&lt;/a&gt; - Reactive implementation of the state container pattern (like Redux). It is based on the simple concepts of state immutability and unidirectionnal data flow.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/ReactiveX/RxSwift"&gt;RxSwift&lt;/a&gt; - Microsoft Reactive Extensions (Rx).&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/artman/Signals"&gt;Signals&lt;/a&gt; - Replaces delegates and notifications.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/UrbanCompass/Snail"&gt;Snail&lt;/a&gt; - An Observables framework.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/cesarferreira/SwiftEventBus"&gt;SwiftEventBus&lt;/a&gt; - A publish/subscribe event bus optimized for iOS.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/BendingSpoons/tempura-swift"&gt;Tempura&lt;/a&gt; - A holistic approach to iOS development, inspired by Redux and MVVM.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/MaxDesiatov/Tokamak"&gt;Tokamak&lt;/a&gt; - React-like declarative API for building native UI components with easy to use one-way data binding.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/lilyball/Tomorrowland"&gt;Tomorrowland&lt;/a&gt; - Lightweight Promises.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/mcmatan/topicEventBus"&gt;TopicEventBus&lt;/a&gt; - Publish–subscribe design pattern implementation framework, with ability to publish events by topic.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/ra1028/VueFlux"&gt;VueFlux&lt;/a&gt; - Unidirectional Data Flow State Management Architecture - Inspired by Vuex and Flux.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/vadymmarkov/When"&gt;When&lt;/a&gt; - A lightweight implementation of Promises.&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;&lt;a id="user-content-files" class="anchor" aria-hidden="true" href="#files"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Files&lt;/h3&gt;
&lt;p&gt;&lt;a href="#readme"&gt;back to top&lt;/a&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/marmelroy/FileBrowser"&gt;FileBrowser&lt;/a&gt; - Powerful file browser for iOS.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/nvzqz/FileKit"&gt;FileKit&lt;/a&gt; - Simple and expressive file management.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/amosavian/FileProvider"&gt;FileProvider&lt;/a&gt; - FileManager replacement for Local, iCloud and Remote (WebDAV/FTP/Dropbox/OneDrive/SMB2) files for iOS/tvOS and macOS.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/krzysztofzablocki/KZFileWatchers"&gt;KZFileWatchers&lt;/a&gt; - A micro-framework for observing file changes, both local and remote.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/kylef/PathKit"&gt;PathKit&lt;/a&gt; &lt;g-emoji class="g-emoji" alias="penguin" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f427.png"&gt;🐧&lt;/g-emoji&gt; - Effortless path operations.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/dduan/Pathos"&gt;Pathos&lt;/a&gt; &lt;g-emoji class="g-emoji" alias="penguin" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f427.png"&gt;🐧&lt;/g-emoji&gt; - Efficient Unix file management.&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;&lt;a id="user-content-fonts" class="anchor" aria-hidden="true" href="#fonts"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Fonts&lt;/h3&gt;
&lt;p&gt;&lt;em&gt;A collection of font related snippets.&lt;/em&gt; &lt;a href="#readme"&gt;back to top&lt;/a&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/thii/FontAwesome.swift"&gt;FontAwesome.swift&lt;/a&gt; - Use FontAwesome in your projects.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/ArtSabintsev/FontBlaster"&gt;FontBlaster&lt;/a&gt; - Programmatically load custom fonts into your iOS app.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/ninjaprox/Inkwell"&gt;Inkwell&lt;/a&gt; - An inkwell to use custom fonts on the fly.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/keitaoouchi/IoniconsKit"&gt;IoniconsKit&lt;/a&gt; - Use ionicons as UIImage / UIFont in your projects.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/keitaoouchi/OcticonsKit"&gt;OcticonsKit&lt;/a&gt; - Use Octicons as UIImage / UIFont in your projects.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/hemantasapkota/OpenSansSwift"&gt;OpenSansSwift&lt;/a&gt; - OpenSans.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/0x73/SwiftIconFont"&gt;SwiftIconFont&lt;/a&gt; - Fontawesome, Iconic, Ionicons, Octicon ports.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/ranesr/SwiftIcons"&gt;SwiftIcons&lt;/a&gt; - Library for Font Icons: dripicons, emoji, font awesome, icofont, ionicons, linear icons, map icons, material icons, open iconic, state, weather.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/Nirma/SFSymbol"&gt;SYSymbol&lt;/a&gt; - All the SFSymbols at your fingertips.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/Nirma/UIFontComplete"&gt;UIFontComplete&lt;/a&gt; - Font management (System &amp;amp; Custom) for iOS and tvOS.&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;&lt;a id="user-content-game-engine" class="anchor" aria-hidden="true" href="#game-engine"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Game Engine&lt;/h3&gt;
&lt;p&gt;&lt;a href="#readme"&gt;back to top&lt;/a&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/cocoatoucher/Glide"&gt;glide engine&lt;/a&gt; - SpriteKit and GameplayKit based engine for making 2d games, with practical examples and tutorials.&lt;/li&gt;
&lt;/ul&gt;
&lt;h4&gt;&lt;a id="user-content-2d" class="anchor" aria-hidden="true" href="#2d"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;2D&lt;/h4&gt;
&lt;p&gt;&lt;a href="#readme"&gt;back to top&lt;/a&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/JohnSundell/ImagineEngine"&gt;ImagineEngine&lt;/a&gt; - Blazing fasst 2D gaming engine.&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;&lt;a id="user-content-games" class="anchor" aria-hidden="true" href="#games"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Games&lt;/h3&gt;
&lt;p&gt;&lt;a href="#readme"&gt;back to top&lt;/a&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/nvzqz/Sage"&gt;Sage&lt;/a&gt; &lt;g-emoji class="g-emoji" alias="penguin" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f427.png"&gt;🐧&lt;/g-emoji&gt; - A cross-platform chess library.&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;&lt;a id="user-content-gesture" class="anchor" aria-hidden="true" href="#gesture"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Gesture&lt;/h3&gt;
&lt;p&gt;&lt;a href="#readme"&gt;back to top&lt;/a&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/didierbrun/DBPathRecognizer"&gt;DBPathRecognizer&lt;/a&gt; - db path recognizer for letters.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/marmelroy/PeekPop"&gt;PeekPop&lt;/a&gt; - Framework for backwards-compatible Peek and Pop.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/KaneCheshire/ShowTime"&gt;ShowTime&lt;/a&gt; - Show off your iOS taps and gestures for demos and videos with just one line of code.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/b3ll/SwiftyGestureRecognition"&gt;SwiftyGestureRecognition&lt;/a&gt; - UIGestureRecognizers in Xcode Playgrounds.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/moritzsternemann/SwipyCell"&gt;SwipyCell&lt;/a&gt; - UITableViewCell implementing swiping to trigger actions (known from the Mailbox App).&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;&lt;a id="user-content-hardware" class="anchor" aria-hidden="true" href="#hardware"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Hardware&lt;/h3&gt;
&lt;p&gt;&lt;em&gt;A category dedicated to hardware related libs&lt;/em&gt; &lt;a href="#readme"&gt;back to top&lt;/a&gt;&lt;/p&gt;
&lt;h4&gt;&lt;a id="user-content-3d-touch" class="anchor" aria-hidden="true" href="#3d-touch"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;3D Touch&lt;/h4&gt;
&lt;p&gt;&lt;em&gt;Easy handle new 3D Touch / Force Touch feature thanks to these libs.&lt;/em&gt; &lt;a href="#readme"&gt;back to top&lt;/a&gt;&lt;/p&gt;
&lt;h4&gt;&lt;a id="user-content-bluetooth" class="anchor" aria-hidden="true" href="#bluetooth"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Bluetooth&lt;/h4&gt;
&lt;p&gt;&lt;em&gt;Wrappers around CoreBluetooth&lt;/em&gt; &lt;a href="#readme"&gt;back to top&lt;/a&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/troystribling/BlueCap"&gt;BlueCap&lt;/a&gt; - Wrapper around CoreBluetooth and much more.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/steamclock/bluejay"&gt;Bluejay&lt;/a&gt; - A simple framework for building reliable Bluetooth LE apps.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rhummelmose/BluetoothKit"&gt;BluetoothKit&lt;/a&gt; - Easily communicate between iOS/OSX devices using BLE.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/polidea/RxBluetoothKit"&gt;RxBluetoothKit&lt;/a&gt; - iOS &amp;amp; OSX Bluetooth library for RxSwift.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/jordanebelanger/SwiftyBluetooth"&gt;SwiftyBluetooth&lt;/a&gt; - Simple and reliable closure based wrapper around CoreBluetooth.&lt;/li&gt;
&lt;/ul&gt;
&lt;h4&gt;&lt;a id="user-content-camera" class="anchor" aria-hidden="true" href="#camera"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Camera&lt;/h4&gt;
&lt;p&gt;&lt;em&gt;Awesome camera libs&lt;/em&gt; &lt;a href="#readme"&gt;back to top&lt;/a&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/AlexLittlejohn/ALCameraViewController"&gt;ALCameraViewController&lt;/a&gt; - Camera view controller with custom image picker and image cropping.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/yonat/CameraBackground"&gt;CameraBackground&lt;/a&gt; - Show camera layer as a background to any UIView.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/CameraKit/camerakit-ios"&gt;CameraKit-iOS&lt;/a&gt; - Massively increase camera performance and ease of use in your next project.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/ytakzk/Fusuma"&gt;Fusuma&lt;/a&gt; - Instagram-like photo browser and a camera feature.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/NextLevel/NextLevel"&gt;NextLevel&lt;/a&gt; - Rad Media Capture.&lt;/li&gt;
&lt;/ul&gt;
&lt;h5&gt;&lt;a id="user-content-barcode" class="anchor" aria-hidden="true" href="#barcode"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Barcode&lt;/h5&gt;
&lt;p&gt;&lt;em&gt;Barcode, QR-code, other code readers&lt;/em&gt; &lt;a href="#readme"&gt;back to top&lt;/a&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/hyperoslo/BarcodeScanner"&gt;BarcodeScanner&lt;/a&gt; - A simple and beautiful barcode scanner view controller.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/EFPrefix/EFQRCode"&gt;EFQRCode&lt;/a&gt; - A better way to operate quick response code.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/yannickl/QRCodeReader.swift"&gt;QRCodeReader.swift&lt;/a&gt; - Simple QRCode reader.&lt;/li&gt;
&lt;/ul&gt;
&lt;h4&gt;&lt;a id="user-content-haptic-feedback" class="anchor" aria-hidden="true" href="#haptic-feedback"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Haptic Feedback&lt;/h4&gt;
&lt;p&gt;&lt;em&gt;Libraries that involve the use of Haptic Feedback&lt;/em&gt; &lt;a href="#readme"&gt;back to top&lt;/a&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/efremidze/Haptica"&gt;Haptica&lt;/a&gt; - Easy Haptic Feedback Generator.&lt;/li&gt;
&lt;/ul&gt;
&lt;h4&gt;&lt;a id="user-content-ibeacon" class="anchor" aria-hidden="true" href="#ibeacon"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;iBeacon&lt;/h4&gt;
&lt;p&gt;&lt;em&gt;Interested in using iBeacon in your Swift project? Here some interesting resources.&lt;/em&gt; &lt;a href="#readme"&gt;back to top&lt;/a&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/malcommac/SwiftLocation"&gt;SwiftLocation&lt;/a&gt; - Location &amp;amp; Beacon Monitoring.&lt;/li&gt;
&lt;/ul&gt;
&lt;h4&gt;&lt;a id="user-content-sensors" class="anchor" aria-hidden="true" href="#sensors"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Sensors&lt;/h4&gt;
&lt;p&gt;&lt;em&gt;Manage your device sensors in a faster and easier way&lt;/em&gt; &lt;a href="#readme"&gt;back to top&lt;/a&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/MHaroonBaig/MotionKit"&gt;MotionKit&lt;/a&gt; - iOS device sensors wrapper.&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;&lt;a id="user-content-images" class="anchor" aria-hidden="true" href="#images"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Images&lt;/h3&gt;
&lt;p&gt;&lt;em&gt;An interesting list of image related libs..&lt;/em&gt; &lt;a href="#readme"&gt;back to top&lt;/a&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/JanGorman/Agrume"&gt;Agrume&lt;/a&gt; - A lemony fresh iOS image viewer.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/Alamofire/AlamofireImage"&gt;AlamofireImage&lt;/a&gt; - AlamofireImage is an image component library for Alamofire.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/onevcat/APNGKit"&gt;APNGKit&lt;/a&gt; - High performance and delightful way to play with APNG format in iOS.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/altayer-digital/ATGMediaBrowser"&gt;ATGMediaBrowser&lt;/a&gt; - Image slide-show viewer with multiple predefined transition styles, and with ability to create new transitions with ease.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/alexhillc/AXPhotoViewer"&gt;AXPhotoViewer&lt;/a&gt; - An iPhone/iPad photo gallery viewer, useful for viewing a large (or small!) number of photos.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/Boilertalk/BlockiesSwift"&gt;BlockiesSwift&lt;/a&gt; - Unique blocky identicons/profile picture generator.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/scihant/CTPanoramaView"&gt;CTPanoramaView&lt;/a&gt; - A library that displays spherical or cylindrical panoramas with touch or motion based controls.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/tungvoduc/DTPhotoViewerController"&gt;DTPhotoViewerController&lt;/a&gt; - A fully customizable photo viewer ViewController to display single photo or collection of photos, inspired by Facebook photo viewer.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/floriangbh/FacebookImagePicker"&gt;FacebookImagePicker&lt;/a&gt; - Facebook album photo picker.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/kawoou/FlexibleImage"&gt;FlexibleImage&lt;/a&gt; - A simple way to play with images.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/tribalmedia/FMPhotoPicker"&gt;FMPhotoPicker&lt;/a&gt; - A modern, simple and zero-dependency photo picker with an elegant and customizable image editor&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/kaishin/gifu"&gt;gifu&lt;/a&gt; - Highly performant animated GIF support for iOS.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/BradLarson/GPUImage2"&gt;GPUImage 2&lt;/a&gt; - GPUImage 2 is a BSD-licensed framework for GPU-accelerated video and image processing.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/BradLarson/GPUImage3"&gt;GPUImage 3&lt;/a&gt; - GPUImage 3 is a BSD-licensed framework for GPU-accelerated video and image processing using Metal.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/Haneke/HanekeSwift"&gt;HanekeSwift&lt;/a&gt; - A lightweight generic cache for iOS with extra love for images.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/Feghal/ImageDetect"&gt;ImageDetect&lt;/a&gt; - Detect and crop faces, barcodes and texts in image with iOS 11 Vision API.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/hirohisa/ImageLoaderSwift"&gt;ImageLoader&lt;/a&gt; - A lightweight and fast image loader for iOS.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/kaishin/ImageScout"&gt;ImageScout&lt;/a&gt; - Implementation of &lt;a href="https://pypi.org/project/fastimage/0.2.1/" rel="nofollow"&gt;fastimage&lt;/a&gt; - supports PNG, GIF, and JPEG.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/Krisiacik/ImageViewer"&gt;ImageViewer&lt;/a&gt; - An image viewer à la Twitter.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/Textcat/JLStickerTextView"&gt;JLStickerTextView&lt;/a&gt; - A UIImageView allow you to add multiple Label (multiple line text support) on it, you can edit, rotate, resize the Label as you want with one finger ,then render the text on Image.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/onevcat/Kingfisher"&gt;Kingfisher&lt;/a&gt; - Image download and caching.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/vpeschenkov/LetterAvatarKit"&gt;LetterAvatarKit&lt;/a&gt; - A UIImage extension that generates letter-based avatars.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/hyperoslo/Lightbox"&gt;Lightbox&lt;/a&gt; - A convenient and easy to use image viewer for your iOS app.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/JanGorman/MapleBacon"&gt;MapleBacon&lt;/a&gt; - Image download and caching library.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/Minecodecraft/MCScratchImageView"&gt;MCScratchImageView&lt;/a&gt; - A custom ImageView that is used to cover the surface of other view like a scratch card, user can swipe the mulch to see the view below.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/evgenyneu/moa"&gt;Moa&lt;/a&gt; - An image download extension of the image view for iOS, tvOS and macOS.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/kean/Nuke"&gt;Nuke&lt;/a&gt; - Advanced framework for loading, caching, processing, displaying and preheating images.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/evermeer/PassportScanner"&gt;PassportScanner&lt;/a&gt; - Scan the MRZ code of a passport and extract the first name, last name, passport number, nationality, date of birth, expiration date and personal number.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/muukii/Pixel"&gt;Pixel&lt;/a&gt; - An image editor and engine using CoreImage.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/bakhtiyork/Rough"&gt;Rough&lt;/a&gt; - Rough lets you draw in a sketchy, hand-drawn-like, style.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/makomori/Sharaku"&gt;Sharaku&lt;/a&gt; - Image filtering UI library like Instagram.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/onmyway133/Snowflake"&gt;Snowflake&lt;/a&gt; - Work with SVG.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/SwiftGen/SwiftGen#assets-catalogs"&gt;SwiftGen-Assets&lt;/a&gt; - A tool to auto-generate &lt;code&gt;enums&lt;/code&gt; for all your &lt;code&gt;UIImages&lt;/code&gt; from your Assets Catalogs.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/swiftgif/SwiftGif"&gt;SwiftGif&lt;/a&gt; - A small UIImage extension with GIF support.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/mchoe/SwiftSVG"&gt;SwiftSVG&lt;/a&gt; - A single pass SVG parser with multiple interface options (String, NS/UIBezierPath, CAShapeLayer, and NS/UIView).&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/kirualex/SwiftyGif"&gt;SwiftyGif&lt;/a&gt; - High performance GIF engine.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/TinyCrayon/TinyCrayon-iOS-SDK"&gt;TinyCrayon&lt;/a&gt; - A smart and easy-to-use image masking and cutout SDK for mobile apps.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/gavinbunney/Toucan"&gt;Toucan&lt;/a&gt; - Image processing api.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/jathu/UIImageColors"&gt;UIImageColors&lt;/a&gt; - iTunes style color fetcher for UIImage.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/3lvis/Viewer"&gt;Viewer&lt;/a&gt; - Image viewer (or Lightbox) with support for local and remote videos and images.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/jinSasaki/Vulcan"&gt;Vulcan&lt;/a&gt; - Multi image downloader with priority.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/Yummypets/YPImagePicker"&gt;YPImagePicker&lt;/a&gt; - Instagram-like image picker &amp;amp; filters for iOS.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/ZaidPathan/ZImageCropper"&gt;ZImageCropper&lt;/a&gt; - Crop image in any shape.&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;&lt;a id="user-content-key-value-coding" class="anchor" aria-hidden="true" href="#key-value-coding"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Key Value Coding&lt;/h3&gt;
&lt;p&gt;&lt;em&gt;Libraries for key-value coding&lt;/em&gt; &lt;a href="#readme"&gt;back to top&lt;/a&gt;&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-keyboard" class="anchor" aria-hidden="true" href="#keyboard"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Keyboard&lt;/h3&gt;
&lt;p&gt;&lt;em&gt;Do you want to create your own customized keyboard? Here are some interesting resources&lt;/em&gt; &lt;a href="#readme"&gt;back to top&lt;/a&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/IdleHandsApps/IHKeyboardAvoiding"&gt;IHKeyboardAvoiding&lt;/a&gt; - An elegant solution for keeping any UIView visible when the keyboard is being shown. No UIScrollView required.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/hackiftekhar/IQKeyboardManager"&gt;IQKeyboardManager&lt;/a&gt; - Codeless drop-in universal library allows to prevent issues of keyboard sliding up and cover UITextField/UITextView.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/bonyadmitr/KeyboardHideManager"&gt;KeyboardHideManager&lt;/a&gt; - Codeless manager to hide keyboard by tapping on views for iOS.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/chriszielinski/Ribbon"&gt;Ribbon&lt;/a&gt; - &lt;g-emoji class="g-emoji" alias="ribbon" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f380.png"&gt;🎀&lt;/g-emoji&gt; A simple cross-platform toolbar/custom input accessory view library for iOS &amp;amp; macOS.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/totocaster/Typist"&gt;Typist&lt;/a&gt; - Small, drop-in UIKit keyboard manager for iOS apps-helps manage keyboard's screen presence and behavior without notification center.&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;&lt;a id="user-content-kit" class="anchor" aria-hidden="true" href="#kit"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Kit&lt;/h3&gt;
&lt;p&gt;&lt;em&gt;Libraries for coding with a simplified API&lt;/em&gt; &lt;a href="#readme"&gt;back to top&lt;/a&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/FabrizioBrancati/BFKit-Swift"&gt;BFKit-Swift&lt;/a&gt; &lt;g-emoji class="g-emoji" alias="penguin" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f427.png"&gt;🐧&lt;/g-emoji&gt; - A collection of useful classes, structs and extensions to develop Apps faster.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/C4Labs/C4iOS"&gt;C4iOS&lt;/a&gt; - Harnesses the power of native iOS programming with a simplified API.&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;&lt;a id="user-content-layout" class="anchor" aria-hidden="true" href="#layout"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Layout&lt;/h3&gt;
&lt;p&gt;&lt;em&gt;Libs to help you with layout.&lt;/em&gt; &lt;a href="#readme"&gt;back to top&lt;/a&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/wayfair/brickkit-ios"&gt;BrickKit&lt;/a&gt; - Create complex and responsive layouts in a simple way.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/layoutBox/FlexLayout"&gt;FlexLayout&lt;/a&gt; - Nice and clean interface to the highly optimized Facebook yoga Flexbox implementation.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/linkedin/LayoutKit"&gt;LayoutKit&lt;/a&gt; - LayoutKit is a fast view layout library for iOS, macOS, and tvOS.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/DeclarativeHub/Layoutless"&gt;LayoutLess&lt;/a&gt; - Write less UI Code.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/isair/ManualLayout"&gt;ManualLayout&lt;/a&gt; - Easy to use and flexible AutoLayout alternative for iOS 8+. Supports AsyncDisplayKit.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/mamaral/Neon"&gt;Neon&lt;/a&gt; - A powerful programmatic UI layout framework.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/layoutBox/PinLayout"&gt;PinLayout&lt;/a&gt; - Fast Views layouting without auto layout. No magic, pure code, full control and blazing fast. Concise syntax, intuitive, readable &amp;amp; chainable. [iOS/macOS/tvOS]&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/venmo/Static"&gt;Static&lt;/a&gt; - A simple static table views for iOS.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/freshOS/Stevia"&gt;Stevia&lt;/a&gt; - Elegant view layout for iOS.&lt;/li&gt;
&lt;/ul&gt;
&lt;h4&gt;&lt;a id="user-content-auto-layout" class="anchor" aria-hidden="true" href="#auto-layout"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Auto Layout&lt;/h4&gt;
&lt;p&gt;&lt;em&gt;Bored of using storyboard? Give a try to declarative auto layout libs.&lt;/em&gt; &lt;a href="#readme"&gt;back to top&lt;/a&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/wordlessj/Bamboo"&gt;Bamboo&lt;/a&gt; - Auto Layout (and manual layout) in one line.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/robb/Cartography"&gt;Cartography&lt;/a&gt; - Declarative auto layout lib for your project.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/tribalworldwidelondon/CassowarySwift"&gt;Cassowary&lt;/a&gt; - A linear constraint solving library using the same algorithm as AutoLayout.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/nerdycat/Cupcake"&gt;Cupcake&lt;/a&gt; - An easy way to create and layout UI components for iOS.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/cruisediary/DeviceLayout"&gt;DeviceLayout&lt;/a&gt; - AutoLayout can be set differently for each device.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/nakiostudio/EasyPeasy"&gt;EasyPeasy&lt;/a&gt; - Auto Layout made easy.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/alexliubj/EZAnchor"&gt;EZLayout&lt;/a&gt; - An easier and faster way to code Autolayout.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/keshavvishwkarma/KVConstraintKit"&gt;KVConstraintKit&lt;/a&gt; - An Impressive Autolayout DSL for iOS, tvOS &amp;amp; OSX.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/marty-suzuki/MisterFusion"&gt;MisterFusion&lt;/a&gt; - DSL for AutoLayout, supports Size Class.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/jmfieldman/Mortar"&gt;Mortar&lt;/a&gt; - A concise but flexible DSL for creating Auto Layout constraints and adding subviews.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/banjun/NorthLayout"&gt;NorthLayout&lt;/a&gt; - Fast path to layout using Visual Format Language (VFL) with extended syntax.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/PureLayout/PureLayout"&gt;PureLayout&lt;/a&gt; - The ultimate API for iOS &amp;amp; OS X Auto Layout.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/SnapKit/SnapKit"&gt;SnapKit&lt;/a&gt; - Autolayout DSL for iOS &amp;amp; OS X.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/Skyvive/Swiftstraints"&gt;Swiftstraints&lt;/a&gt; - Powerful auto-layout framework that lets you write constraints in one line of code.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/roberthein/TinyConstraints"&gt;TinyConstraints&lt;/a&gt; - TinyConstraints is the syntactic sugar that makes Auto Layout sweeter for human use.&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;&lt;a id="user-content-localization" class="anchor" aria-hidden="true" href="#localization"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Localization&lt;/h3&gt;
&lt;p&gt;&lt;em&gt;Frameworks that helps with localizing your app&lt;/em&gt; &lt;a href="#readme"&gt;back to top&lt;/a&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/Flinesoft/BartyCrouch"&gt;BartyCrouch&lt;/a&gt; - Incrementally update/translate your Strings files from Code and Storyboards/XIBs.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/PiXeL16/IBLocalizable"&gt;IBLocalizable&lt;/a&gt; - Localize your views directly in Interface Builder with IBLocalizable.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/Decybel07/L10n-swift"&gt;L10n-swift&lt;/a&gt; - Localization of an application with ability to change language "on the fly" and support for plural forms in any language.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/willpowell8/LocalizationKit_iOS"&gt;LocalizationKit&lt;/a&gt; - Realtime dynamic localization of your app with remote management so you can manage maintain and deploy translations without resubmitting app.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/andresilvagomez/Localize"&gt;Localize&lt;/a&gt; - Localize apps using e.g. regular expressions in Localizable.strings.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/marmelroy/Localize-Swift"&gt;Localize-Swift&lt;/a&gt; - Localize apps using e.g. regular expressions in Localizable.strings.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/T-Pham/NoOptionalInterpolation"&gt;NoOptionalInterpolation&lt;/a&gt; - Get rid of "Optional(...)" and "nil" in string interpolation. Easy pluralization.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/tomkowz/Swifternalization"&gt;Swifternalization&lt;/a&gt; - Localize apps using e.g. regular expressions in Localizable.strings.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/SwiftGen/SwiftGen#localizablestrings"&gt;SwiftGen-L10n&lt;/a&gt; - A tool to auto-generate &lt;code&gt;enums&lt;/code&gt; for all your Localizable.strings keys (with appropriate associated values if those strings contains printf-format placeholders like &lt;code&gt;%@&lt;/code&gt;).&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/andrealufino/Translatio"&gt;Translatio&lt;/a&gt; - Super lightweight library that helps you to localize strings, even directly in storyboards.&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;&lt;a id="user-content-location" class="anchor" aria-hidden="true" href="#location"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Location&lt;/h3&gt;
&lt;p&gt;&lt;a href="#readme"&gt;back to top&lt;/a&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/SvenTiigi/STLocationRequest"&gt;STLocationRequest&lt;/a&gt; - An elegant and simple 3D Flyover Location Request Screen.&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;&lt;a id="user-content-logging" class="anchor" aria-hidden="true" href="#logging"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Logging&lt;/h3&gt;
&lt;p&gt;&lt;em&gt;Utilities for writing to and reading from the device log&lt;/em&gt; &lt;a href="#readme"&gt;back to top&lt;/a&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/tadija/AEConsole"&gt;AEConsole&lt;/a&gt; - Customizable Console UI overlay with debug log on top of your iOS App.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/emaloney/CleanroomLogger"&gt;CleanroomLogger&lt;/a&gt; - Configurable and extensible high-level logging API that is simple, lightweight and performant.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/remirobert/Dotzu"&gt;Dotzu&lt;/a&gt; - Debbuger tool for iOS developer. Display logs, network request, device informations, crash logs while using the app.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/SwiftStudies/Duration"&gt;Duration&lt;/a&gt; &lt;g-emoji class="g-emoji" alias="penguin" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f427.png"&gt;🐧&lt;/g-emoji&gt; - Lightweight logging library focused on reporting timings for operations.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/IBM-Swift/HeliumLogger"&gt;HeliumLogger&lt;/a&gt; &lt;g-emoji class="g-emoji" alias="penguin" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f427.png"&gt;🐧&lt;/g-emoji&gt; - IBM's lightweight logging framework.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/hemangshah/printer"&gt;Printer&lt;/a&gt; - A fancy logger for your next app.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/cookpad/puree-ios"&gt;Puree&lt;/a&gt; - A log collector for iOS.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/goktugyil/QorumLogs"&gt;QorumLogs&lt;/a&gt; - Logging Utility for Xcode &amp;amp; Google Docs.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/onevcat/Rainbow"&gt;Rainbow&lt;/a&gt; &lt;g-emoji class="g-emoji" alias="penguin" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f427.png"&gt;🐧&lt;/g-emoji&gt; - Delightful console output.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/SwiftyBeaver/SwiftyBeaver"&gt;SwiftyBeaver&lt;/a&gt; &lt;g-emoji class="g-emoji" alias="penguin" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f427.png"&gt;🐧&lt;/g-emoji&gt; - Multi-platform logging during development &amp;amp; release.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/Cosmo/TinyConsole"&gt;TinyConsole&lt;/a&gt; - A tiny log console to display information while using your iOS app.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/tonystone/tracelog"&gt;TraceLog&lt;/a&gt; &lt;g-emoji class="g-emoji" alias="penguin" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f427.png"&gt;🐧&lt;/g-emoji&gt; - Dead Simple: logging the way it's meant to be!  Runs on iOS, macOS, and Linux.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/wojteklu/Watchdog"&gt;Watchdog&lt;/a&gt; - Utility for logging excessive blocking on the main thread.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/tapwork/WatchdogInspector"&gt;WatchdogInspector&lt;/a&gt; - A logging tool to show the current framerate (fps) in the status bar of your iOS app.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/Nike-Inc/Willow"&gt;Willow&lt;/a&gt; - Willow is a powerful, yet lightweight logging library.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/DaveWoodCom/XCGLogger"&gt;XCGLogger&lt;/a&gt; - Full featured &amp;amp; Configurable logging utility with log levels, timestamps, and line numbers.&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;&lt;a id="user-content-maps" class="anchor" aria-hidden="true" href="#maps"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Maps&lt;/h3&gt;
&lt;p&gt;&lt;a href="#readme"&gt;back to top&lt;/a&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/efremidze/Cluster"&gt;Cluster&lt;/a&gt; - Easy Map Annotation Clustering.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/SvenTiigi/FlyoverKit"&gt;FlyoverKit&lt;/a&gt; - FlyoverKit enables you to present stunning 360° flyover views on your MKMapView with zero effort while maintaining full configuration possibilities.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/GEOSwift/GEOSwift"&gt;GEOSwift&lt;/a&gt; - Make it easier to work with geographic models and calculate intersections, overlapping, projections etc.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/sobri909/LocoKit"&gt;LocoKit&lt;/a&gt; - A location and activity recording framework for iOS.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/okhanokbay/MapViewPlus"&gt;MapViewPlus&lt;/a&gt; - Use any custom view as custom callout view for MKMapView with cool animations. Use any image as annotation view.&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;&lt;a id="user-content-math" class="anchor" aria-hidden="true" href="#math"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Math&lt;/h3&gt;
&lt;p&gt;&lt;a href="#readme"&gt;back to top&lt;/a&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/phimage/Arithmosophi"&gt;Arithmosophi&lt;/a&gt; - Set of protocols for Arithmetic and Logical operations.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/attaswift/BigInt"&gt;BigInt&lt;/a&gt; - Arbitrary-precision arithmetic.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/davedelong/DDMathParser"&gt;DDMathParser&lt;/a&gt; - DDMathParser makes it easy to parse a String and evaluate it as a mathematical expression.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/evgenyneu/SigmaSwiftStatistics"&gt;SigmaSwiftStatistics&lt;/a&gt; - A collection of functions for statistical calculation.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/alejandro-isaza/Upsurge"&gt;Upsurge&lt;/a&gt; - Simple and fast matrix and vector math.&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;&lt;a id="user-content-natural-language-processing" class="anchor" aria-hidden="true" href="#natural-language-processing"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Natural Language Processing&lt;/h3&gt;
&lt;p&gt;&lt;a href="#readme"&gt;back to top&lt;/a&gt;&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-network" class="anchor" aria-hidden="true" href="#network"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Network&lt;/h3&gt;
&lt;p&gt;&lt;em&gt;A list of libs that allow you to decrease the amount of time spent dealing with http requests.&lt;/em&gt; &lt;a href="#readme"&gt;back to top&lt;/a&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/Alamofire/Alamofire"&gt;Alamofire&lt;/a&gt; &lt;g-emoji class="g-emoji" alias="penguin" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f427.png"&gt;🐧&lt;/g-emoji&gt; - Elegant networking.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/ishkawa/APIKit"&gt;APIKit&lt;/a&gt; - Library for building type-safe web API client.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/AlTavares/Ciao"&gt;Ciao&lt;/a&gt; - Publish and discover services using mDNS (Bonjour, Zeroconf).&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/MihaelIsaev/CodyFire"&gt;CodyFire&lt;/a&gt; - Powerful Codable API requests builder and manager for iOS. Based on Alamofire.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/mindbody/Conduit"&gt;Conduit&lt;/a&gt; - Robust networking for web APIs.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rwbutler/Connectivity"&gt;Connectivity&lt;/a&gt; - &lt;g-emoji class="g-emoji" alias="globe_with_meridians" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f310.png"&gt;🌐&lt;/g-emoji&gt; Makes Internet connectivity detection more robust by detecting Wi-Fi networks without Internet access.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/iAmrSalman/Dots"&gt;Dots&lt;/a&gt; - Lightweight Concurrent Networking Framework.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/kevin0571/Dratini"&gt;Dratini&lt;/a&gt; - A neat network layer.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/trivago/Heimdallr.swift"&gt;Heimdallr.swift&lt;/a&gt; - Easy to use OAuth 2 library for iOS.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/dduan/Just"&gt;Just&lt;/a&gt; &lt;g-emoji class="g-emoji" alias="penguin" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f427.png"&gt;🐧&lt;/g-emoji&gt; - HTTP for Humans (a python-requests style HTTP library).&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/hyperoslo/Malibu"&gt;Malibu&lt;/a&gt; - A networking library built on promises.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/Moya/Moya"&gt;Moya&lt;/a&gt; - Network abstraction layer.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/dingwilson/MultiPeer"&gt;MultiPeer&lt;/a&gt; - A wrapper for the MultipeerConnectivity framework for automatic offline data transmission between devices.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/zhuhaow/NEKit"&gt;NEKit&lt;/a&gt; - A toolkit for Network Extension Framework.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/intelygenz/NetClient-iOS"&gt;NetClient&lt;/a&gt; - Versatile HTTP networking library.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/kasketis/netfox"&gt;Netfox&lt;/a&gt; - A lightweight, one line setup, network debugging library.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/p2/OAuth2"&gt;OAuth2&lt;/a&gt; - oauth2 auth lib.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/OAuthSwift/OAuthSwift"&gt;OAuthSwift&lt;/a&gt; - OAuth library for iOS.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/jpsim/PeerKit"&gt;PeerKit&lt;/a&gt; - Framework for building event-driven, zero-config Multipeer Connectivity apps.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/johnlui/Pitaya"&gt;Pitaya&lt;/a&gt; &lt;g-emoji class="g-emoji" alias="penguin" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f427.png"&gt;🐧&lt;/g-emoji&gt; - HTTP / HTTPS networking library just incidentally execute on machines.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/postmates/PMHTTP"&gt;PMHTTP&lt;/a&gt; - HTTP framework with a focus on REST and JSON.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/snipsco/Postal"&gt;Postal&lt;/a&gt; - Framework providing simple access to common email providers.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/ashleymills/Reachability.swift"&gt;Reachability.swift&lt;/a&gt; - A replacement for Apple's Reachability with closures.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/sky-uk/ReactiveAPI"&gt;ReactiveAPI&lt;/a&gt; - Write clean, concise and declarative network code relying on URLSession, with the power of RxSwift. Inspired by Retrofit.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/netguru/ResponseDetective"&gt;ResponseDetective&lt;/a&gt; - A non-intrusive framework for intercepting any outgoing requests and incoming responses between your app and server for debugging purposes.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/shadowsocks/ShadowsocksX-NG"&gt;ShadowsocksX-NG&lt;/a&gt; - A fast tunnel proxy that helps you bypass firewalls.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://bustoutsolutions.github.io/siesta/" rel="nofollow"&gt;Siesta&lt;/a&gt; - Elegant abstraction for REST APIs that untangles stateful messes. An alternative to callback- and delegate-based networking.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/ThreeGayHub/SolarNetwork"&gt;SolarNetwork&lt;/a&gt; - Elegant network abstraction layer.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/daltoniam/SwiftHTTP"&gt;SwiftHTTP&lt;/a&gt; - NSURLSession wrapper.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/delba/SwiftyOAuth"&gt;SwiftyOAuth&lt;/a&gt; - A small OAuth library with a built-in set of providers.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/billp/TermiNetwork"&gt;TermiNetwork&lt;/a&gt; - A networking abstraction layer in Swift designed to work with Codables.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/MLSDev/TRON"&gt;TRON&lt;/a&gt; - Lightweight network abstraction layer, written on top of Alamofire.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/pmusolino/Wormholy"&gt;Wormholy&lt;/a&gt; - iOS network debugging, like a wizard 🧙‍.&lt;/li&gt;
&lt;/ul&gt;
&lt;h4&gt;&lt;a id="user-content-html" class="anchor" aria-hidden="true" href="#html"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;HTML&lt;/h4&gt;
&lt;p&gt;&lt;em&gt;Need to manipulate contents from html easily?&lt;/em&gt; &lt;a href="#readme"&gt;back to top&lt;/a&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/cezheng/Fuzi"&gt;Fuzi&lt;/a&gt; - A fast &amp;amp; lightweight XML/HTML parser with XPath &amp;amp; CSS support.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/honghaoz/Ji"&gt;Ji&lt;/a&gt; - XML/HTML parser.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/tid-kijyun/Kanna"&gt;Kanna&lt;/a&gt; - Another XML/HTML parser.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/scinfu/SwiftSoup"&gt;SwiftSoup&lt;/a&gt; &lt;g-emoji class="g-emoji" alias="penguin" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f427.png"&gt;🐧&lt;/g-emoji&gt; - HTML Parser, with best of DOM, CSS, and jquery.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/mkoehnke/WKZombie"&gt;WKZombie&lt;/a&gt; - Headless browser.&lt;/li&gt;
&lt;/ul&gt;
&lt;h4&gt;&lt;a id="user-content-messaging-protocol" class="anchor" aria-hidden="true" href="#messaging-protocol"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Messaging Protocol&lt;/h4&gt;
&lt;p&gt;&lt;a href="#readme"&gt;back to top&lt;/a&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/emqx/CocoaMQTT"&gt;CocoaMQTT&lt;/a&gt; - MQTT for iOS and OS X.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/PerfectlySoft/Perfect-Notifications"&gt;Perfect-Notifications&lt;/a&gt; - iOS Notifications for Linux and OS X.&lt;/li&gt;
&lt;/ul&gt;
&lt;h4&gt;&lt;a id="user-content-socket" class="anchor" aria-hidden="true" href="#socket"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Socket&lt;/h4&gt;
&lt;p&gt;&lt;a href="#readme"&gt;back to top&lt;/a&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/IBM-Swift/BlueSocket"&gt;BlueSocket&lt;/a&gt; - IBM's cross platform low level socket framework.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/IBM-Swift/BlueSSLService"&gt;BlueSSLService&lt;/a&gt; - SSL/TLS add-in for IBM's low level socket framework.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/GlebRadchenko/DNWebSocket"&gt;DNWebSocket&lt;/a&gt; - Object-Oriented, Autobahn tested WebSocket Library (RFC 6455).&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/fjcaetano/RxWebSocket"&gt;RxWebSocket&lt;/a&gt; - Reactive WebSockets.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/socketio/socket.io-client-swift"&gt;Socket.IO&lt;/a&gt; &lt;g-emoji class="g-emoji" alias="penguin" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f427.png"&gt;🐧&lt;/g-emoji&gt; - Socket.IO client for iOS/OS X.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/vapor-community/sockets"&gt;sockets&lt;/a&gt; &lt;g-emoji class="g-emoji" alias="penguin" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f427.png"&gt;🐧&lt;/g-emoji&gt; - TCP, UDP; Client, Server; Linux, OS X.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/daltoniam/Starscream"&gt;Starscream&lt;/a&gt; - Websockets for iOS and OSX.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/csujedihy/SwiftDSSocket"&gt;SwiftDSSocket&lt;/a&gt; - Asynchronous socket framework built atop DispatchSource.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/swiftsocket/SwiftSocket"&gt;SwiftSocket&lt;/a&gt; - Simple TCP socket library.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/tidwall/SwiftWebSocket"&gt;SwiftWebSocket&lt;/a&gt; - A high performance WebSocket client library .&lt;/li&gt;
&lt;/ul&gt;
&lt;h4&gt;&lt;a id="user-content-webserver" class="anchor" aria-hidden="true" href="#webserver"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Webserver&lt;/h4&gt;
&lt;p&gt;&lt;em&gt;Would you like host a webserver in your device? Here you can find how to do it.&lt;/em&gt; &lt;a href="#readme"&gt;back to top&lt;/a&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/envoy/Ambassador"&gt;Ambassador&lt;/a&gt; - Super lightweight web framework based on SWSGI.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/kylef-archive/Curassow"&gt;Curassow&lt;/a&gt; &lt;g-emoji class="g-emoji" alias="penguin" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f427.png"&gt;🐧&lt;/g-emoji&gt; - HTTP server using the pre-fork worker model.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/envoy/Embassy"&gt;Embassy&lt;/a&gt; &lt;g-emoji class="g-emoji" alias="penguin" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f427.png"&gt;🐧&lt;/g-emoji&gt; - Super lightweight async HTTP server library.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/IBM-Swift/Kitura"&gt;Kitura&lt;/a&gt; &lt;g-emoji class="g-emoji" alias="penguin" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f427.png"&gt;🐧&lt;/g-emoji&gt; - IBM's web framework and server for web services.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/skylab-inc/Lightning"&gt;Lightning&lt;/a&gt; &lt;g-emoji class="g-emoji" alias="penguin" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f427.png"&gt;🐧&lt;/g-emoji&gt; - Multiplatform Single-threaded Non-blocking Web and Networking Framework.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/NozeIO/Noze.io"&gt;Noze.io&lt;/a&gt; &lt;g-emoji class="g-emoji" alias="penguin" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f427.png"&gt;🐧&lt;/g-emoji&gt; - Evented I/O streams like Node.js.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/PerfectlySoft/Perfect"&gt;Perfect&lt;/a&gt; &lt;g-emoji class="g-emoji" alias="penguin" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f427.png"&gt;🐧&lt;/g-emoji&gt; - Server-side Swift. The Perfect library, application server, connectors and example apps.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/httpswift/swifter"&gt;swifter&lt;/a&gt; &lt;g-emoji class="g-emoji" alias="penguin" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f427.png"&gt;🐧&lt;/g-emoji&gt; - Http server with routing handler.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/vapor/vapor"&gt;Vapor&lt;/a&gt; &lt;g-emoji class="g-emoji" alias="penguin" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f427.png"&gt;🐧&lt;/g-emoji&gt; - Elegant web framework that works on iOS, OS X, and Ubuntu.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/Zewo/Zewo"&gt;Zewo&lt;/a&gt; &lt;g-emoji class="g-emoji" alias="penguin" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f427.png"&gt;🐧&lt;/g-emoji&gt; - Server-Side Swift.&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;&lt;a id="user-content-ocr" class="anchor" aria-hidden="true" href="#ocr"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;OCR&lt;/h3&gt;
&lt;p&gt;&lt;a href="#readme"&gt;back to top&lt;/a&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/garnele007/SwiftOCR"&gt;SwiftOCR&lt;/a&gt; - Neural Network based OCR lib.&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;&lt;a id="user-content-optimization" class="anchor" aria-hidden="true" href="#optimization"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Optimization&lt;/h3&gt;
&lt;p&gt;&lt;a href="#readme"&gt;back to top&lt;/a&gt;&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-pdf" class="anchor" aria-hidden="true" href="#pdf"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;PDF&lt;/h3&gt;
&lt;p&gt;&lt;a href="#readme"&gt;back to top&lt;/a&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/sgr-ksmt/PDFGenerator"&gt;PDFGenerator&lt;/a&gt; - A simple Generator of PDF. Generate PDF from view(s) or image(s).&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/nRewik/SimplePDF"&gt;SimplePDF&lt;/a&gt; - Create a simple PDF effortlessly.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/uxmstudio/UXMPDFKit"&gt;UXMPDFKit&lt;/a&gt; - A PDF viewer and annotator that can be embedded in iOS applications.&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;&lt;a id="user-content-quality" class="anchor" aria-hidden="true" href="#quality"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Quality&lt;/h3&gt;
&lt;p&gt;&lt;a href="#readme"&gt;back to top&lt;/a&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/IBDecodable/IBLinter"&gt;IBLinter&lt;/a&gt; - A linter tool for Interface Builder.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/ra1028/swift-mod"&gt;swift-mod&lt;/a&gt; - A tool for Swift code modification intermediating between code generation and formatting.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/andresinaka/SwiftCop"&gt;SwiftCop&lt;/a&gt; - A validation library which inspired by the clarity of Ruby On Rails Active Record validations.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/nicklockwood/SwiftFormat"&gt;SwiftFormat&lt;/a&gt; - A code library and command-line formatting tool for reformatting Swift code.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/realm/SwiftLint"&gt;SwiftLint&lt;/a&gt; - A tool to enforce coding conventions.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/Jintin/Swimat"&gt;Swimat&lt;/a&gt; - Xcode plugin to format code.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/sleekbyte/tailor"&gt;Tailor&lt;/a&gt; &lt;g-emoji class="g-emoji" alias="penguin" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f427.png"&gt;🐧&lt;/g-emoji&gt; - Cross-platform static analyzer that helps you to write cleaner code and avoid bugs.&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;&lt;a id="user-content-scripting" class="anchor" aria-hidden="true" href="#scripting"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Scripting&lt;/h3&gt;
&lt;p&gt;&lt;a href="#readme"&gt;back to top&lt;/a&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/JohnSundell/Marathon"&gt;Marathon&lt;/a&gt; - Easy way to create and manage scripts.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/artemnovichkov/Swift-For-Scripting"&gt;Swift for Scripting&lt;/a&gt; - A hand-curated collection of useful and informative scripting material.&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;&lt;a id="user-content-sdk" class="anchor" aria-hidden="true" href="#sdk"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;SDK&lt;/h3&gt;
&lt;p&gt;&lt;a href="#readme"&gt;back to top&lt;/a&gt;&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-security" class="anchor" aria-hidden="true" href="#security"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Security&lt;/h3&gt;
&lt;p&gt;&lt;a href="#readme"&gt;back to top&lt;/a&gt;&lt;/p&gt;
&lt;h4&gt;&lt;a id="user-content-cryptography" class="anchor" aria-hidden="true" href="#cryptography"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Cryptography&lt;/h4&gt;
&lt;p&gt;&lt;em&gt;Deal with cryptography method easily&lt;/em&gt; &lt;a href="#readme"&gt;back to top&lt;/a&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/IBM-Swift/BlueCryptor"&gt;BlueCryptor&lt;/a&gt; - IBM's Cross Platform Crypto library.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/IBM-Swift/BlueRSA"&gt;BlueRSA&lt;/a&gt; - IBM's Cross Platform RSA Crypto library.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/krzyzanowskim/CryptoSwift"&gt;CryptoSwift&lt;/a&gt; &lt;g-emoji class="g-emoji" alias="penguin" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f427.png"&gt;🐧&lt;/g-emoji&gt; - Crypto related functions and helpers.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/iosdevzone/IDZSwiftCommonCrypto"&gt;IDZSwiftCommonCrypto&lt;/a&gt; - A wrapper for Apple's Common Crypto library.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/airsidemobile/JOSESwift"&gt;JOSESwift&lt;/a&gt; - A framework for the JOSE standards JWS, JWE, and JWK.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/RNCryptor/RNCryptor"&gt;RNCryptor&lt;/a&gt; - CCCryptor (Apple's AES encryption) wrappers for iOS and Mac.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/sgl0v/scrypto"&gt;SCrypto&lt;/a&gt; - Elegant interface to access the CommonCrypto routines.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/attaswift/SipHash"&gt;Siphash&lt;/a&gt; - Simple and secure hashing with the SipHash algorithm.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/jedisct1/swift-sodium"&gt;Swift-Sodium&lt;/a&gt; - Interface to the Sodium library for common crypto operations for iOS and OS X.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/cossacklabs/themis"&gt;Themis&lt;/a&gt; - Multilanguage framework for making typical encryption schemes easy to use: data at rest, authenticated data exchange, transport protection, authentication, and so on.&lt;/li&gt;
&lt;/ul&gt;
&lt;h4&gt;&lt;a id="user-content-keychain" class="anchor" aria-hidden="true" href="#keychain"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Keychain&lt;/h4&gt;
&lt;p&gt;&lt;a href="#readme"&gt;back to top&lt;/a&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/evgenyneu/keychain-swift"&gt;keychain-swift&lt;/a&gt; - Helper functions for saving text in Keychain securely for iOS, OS X, tvOS and watchOS.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/kishikawakatsumi/KeychainAccess"&gt;KeychainAccess&lt;/a&gt; - Simple wrapper for Keychain that works on iOS and OS X.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/endocrimes/Latch"&gt;Latch&lt;/a&gt; - A simple Keychain Wrapper for iOS.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/matthewpalmer/Locksmith"&gt;Locksmith&lt;/a&gt; - A powerful, protocol-oriented library for working with the iOS Keychain.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/jrendel/SwiftKeychainWrapper"&gt;SwiftKeychainWrapper&lt;/a&gt; - Simple static wrapper for the iOS Keychain to allow you to use it in a similar fashion to user defaults.&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;&lt;a id="user-content-streaming" class="anchor" aria-hidden="true" href="#streaming"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Streaming&lt;/h3&gt;
&lt;p&gt;&lt;a href="#readme"&gt;back to top&lt;/a&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/shogo4405/HaishinKit.swift"&gt;HaishinKit&lt;/a&gt; - Camera and Microphone streaming library via RTMP, HLS for iOS, macOS, tvOS.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/ltebean/Live"&gt;Live&lt;/a&gt; - Demonstrate how to build a live broadcast app.&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;&lt;a id="user-content-styling" class="anchor" aria-hidden="true" href="#styling"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Styling&lt;/h3&gt;
&lt;p&gt;&lt;a href="#readme"&gt;back to top&lt;/a&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/tmergulhao/Ambience"&gt;Ambience&lt;/a&gt; - Brightness aware accessibility theme switching without coding.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/yonaskolb/Stylist"&gt;Stylist&lt;/a&gt; - Define UI styles in a hot-loadable external yaml or json file.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/wxxsw/SwiftTheme"&gt;SwiftTheme&lt;/a&gt; - Powerful theme/skin manager for iOS 8+.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/onmyway133/Themes"&gt;Themes&lt;/a&gt; - Theme management.&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;&lt;a id="user-content-system" class="anchor" aria-hidden="true" href="#system"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;System&lt;/h3&gt;
&lt;p&gt;&lt;a href="#readme"&gt;back to top&lt;/a&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/IBM-Swift/BlueSignals"&gt;BlueSignals&lt;/a&gt; - IBM's Cross Platform OS signal handling library.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/sindresorhus/LaunchAtLogin"&gt;LaunchAtLogin&lt;/a&gt; - Easily add 'Launch at Login' functionality to your sandboxed macOS app.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/beltex/SMCKit"&gt;SMCKit&lt;/a&gt; - Apple SMC library.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/beltex/SystemKit/"&gt;SystemKit&lt;/a&gt; - OS X system library.&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;&lt;a id="user-content-testing" class="anchor" aria-hidden="true" href="#testing"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Testing&lt;/h3&gt;
&lt;p&gt;&lt;em&gt;A collection of testing frameworks.&lt;/em&gt; &lt;a href="#readme"&gt;back to top&lt;/a&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/venmo/DVR"&gt;DVR&lt;/a&gt; - A simple network testing framework.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/phimage/Erik"&gt;Erik&lt;/a&gt; - An headless browser to access and manipulate webpages using javascript allowing to run functional tests.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/vadymmarkov/Fakery"&gt;Fakery&lt;/a&gt; - Fake data generator.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/Quick/Nimble"&gt;Nimble&lt;/a&gt; - A matcher framework.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/AliSoftware/OHHTTPStubs"&gt;OHHTTPStubs&lt;/a&gt; - A testing library designed to stub your network requests easily.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/Lickability/PinpointKit"&gt;PinpointKit&lt;/a&gt; - Lets your testers and users send feedback with annotated screenshots and logs using a simple gesture.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/Quick/Quick"&gt;Quick&lt;/a&gt; &lt;g-emoji class="g-emoji" alias="penguin" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f427.png"&gt;🐧&lt;/g-emoji&gt; - Quick is a behavior-driven development framework.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/marcosgriselli/Sizes"&gt;Sizes&lt;/a&gt; - Test your app on different device and font sizes&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/parski/SnapshotTest"&gt;SnapshotTest&lt;/a&gt; - Snapshot testing tool for iOS and tvOS.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/kylef/Spectre"&gt;Spectre&lt;/a&gt; &lt;g-emoji class="g-emoji" alias="penguin" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f427.png"&gt;🐧&lt;/g-emoji&gt; - BDD Framework.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/typelift/SwiftCheck"&gt;SwiftCheck&lt;/a&gt; - A testing library that automatically generates random data for testing program properties.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/joemasilotti/UI-Testing-Cheat-Sheet"&gt;UI Testing Cheat Sheet&lt;/a&gt; - Answers to common "How do I test this with UI Testing?" questions with a working example app.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/apple/swift-corelibs-xctest"&gt;XCTest&lt;/a&gt; - The XCTest Project, A Swift core library for providing unit test support.&lt;/li&gt;
&lt;/ul&gt;
&lt;h4&gt;&lt;a id="user-content-mock" class="anchor" aria-hidden="true" href="#mock"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Mock&lt;/h4&gt;
&lt;p&gt;&lt;a href="#readme"&gt;back to top&lt;/a&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/vincent-pradeilles/AutoMocker"&gt;AutoMockable&lt;/a&gt; - A framework that leverages the type system to let you easily create mocked instances of your data types.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/Brightify/Cuckoo"&gt;Cuckoo&lt;/a&gt; - First boilerplate-free mocking framework.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/devlucky/Kakapo"&gt;Kakapo&lt;/a&gt; - Dynamically Mock server behaviors and responses.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/kylef/Mockingjay"&gt;Mockingjay&lt;/a&gt; - An elegant library for stubbing HTTP requests with ease.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/sabirvirtuoso/Mockit"&gt;Mockit&lt;/a&gt; - A simple mocking framework, inspired by the famous Mockito for Java.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/leoture/MockSwift"&gt;MockSwift&lt;/a&gt; - Mock Framework that uses the power of property wrappers.&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;&lt;a id="user-content-text" class="anchor" aria-hidden="true" href="#text"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Text&lt;/h3&gt;
&lt;p&gt;&lt;em&gt;A collection of text projects.&lt;/em&gt; &lt;a href="#readme"&gt;back to top&lt;/a&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/psharanda/Atributika"&gt;Atributika&lt;/a&gt; - Easily build NSAttributedString by detecting and styling HTML-like tags, hashtags, mentions, RegExp or NSDataDetector patterns.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/Nirma/Attributed"&gt;Attributed&lt;/a&gt; - Modern µframework for attributed strings.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/evermeer/AttributedTextView"&gt;AttributedTextView&lt;/a&gt; - Easiest way to create an attributed UITextView with support for multiple links, hashtags and mentions.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/Rightpoint/BonMot"&gt;BonMot&lt;/a&gt; - Beautiful, easy attributed strings for iOS.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/JKalash/Croc"&gt;Croc&lt;/a&gt; - A lightweight Emoji parsing and querying library.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/tnantoka/edhita"&gt;edhita&lt;/a&gt; - Fully open source text editor for iOS.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/marmelroy/Format"&gt;Format&lt;/a&gt; - Formatting kit for numbers, addresses and colors.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/bmoliveira/MarkdownKit"&gt;MarkdownKit&lt;/a&gt; - A simple and customizable Markdown Parser.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/keitaoouchi/MarkdownView"&gt;MarkdownView&lt;/a&gt; - iOS Markdown view.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/M2Mobi/Marky-Mark"&gt;MarkyMark&lt;/a&gt; - Converts Markdown into native views or attributed strings.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/ruddfawcett/Notepad"&gt;Notepad&lt;/a&gt; - A fully themeable markdown editor with live syntax highlighting.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/omar14/OEMentions"&gt;OEMentions&lt;/a&gt; - An easy way to add mentions to uitextview like Facebook and Instagram.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rxwei/Parsey"&gt;Parsey&lt;/a&gt; - Parser combinator framework that supports source location tracking, backtracking prevention, and rich error messages.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/joshualat/Pluralize.swift"&gt;Pluralize.swift&lt;/a&gt; - Great String Pluralize Extension.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/andreadelfante/PredicateFlow"&gt;PredicateFlow&lt;/a&gt; - PredicateFlow is a builder that allows you to write amazing, strong-typed and easy-to-read NSPredicate.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/KrakenDev/PrediKit"&gt;PrediKit&lt;/a&gt; - An NSPredicate DSL for iOS &amp;amp; OS X inspired by SnapKit.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/cezheng/PySwiftyRegex"&gt;PySwiftyRegex&lt;/a&gt; - Easily deal with Regex in a Pythonic way.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/crossroadlabs/Regex"&gt;Regex by crossroadlabs&lt;/a&gt; &lt;g-emoji class="g-emoji" alias="penguin" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f427.png"&gt;🐧&lt;/g-emoji&gt; - Very easy to use Regular Expressions library with rich functionality. Features both operator &lt;code&gt;=~&lt;/code&gt; and method based APIs. Unit tests covered.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/cjwirth/RichEditorView"&gt;RichEditorView&lt;/a&gt; -  RichEditorView is a simple, modular, drop-in UIView subclass for Rich Text Editing.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/nvzqz/Roman"&gt;Roman&lt;/a&gt; &lt;g-emoji class="g-emoji" alias="penguin" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f427.png"&gt;🐧&lt;/g-emoji&gt; - Seamless Roman numeral conversion.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/nicklockwood/Sprinter"&gt;Sprinter&lt;/a&gt; - A library for formatting strings.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/malcommac/SwiftRichString"&gt;SwiftRichString&lt;/a&gt; - Elegant &amp;amp; Painless Attributed Strings Management Library.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/VerbalExpressions/SwiftVerbalExpressions"&gt;SwiftVerbalExpressions&lt;/a&gt; - VerbalExpressions porting.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/eddiekaiger/SwiftyAttributes"&gt;SwiftyAttributes&lt;/a&gt; - Extensions that make it a breeze to work with attributed strings.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/soffes/SyntaxKit"&gt;SyntaxKit&lt;/a&gt; - TextMate-style syntax highlighting.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/k-lpmg/Tagging"&gt;Tagging&lt;/a&gt; - A TextView that provides easy to use tagging feature for Mention or Hashtag.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rosberry/texstyle"&gt;Texstyle&lt;/a&gt; - Texstyle allows you to format attributed strings easily.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/delba/TextAttributes"&gt;TextAttributes&lt;/a&gt; - An easier way to compose attributed strings.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/GeekTree0101/VEditorKit"&gt;VEditorKit&lt;/a&gt; - Lightweight and Powerful Editor Kit.&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;&lt;a id="user-content-thread" class="anchor" aria-hidden="true" href="#thread"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Thread&lt;/h3&gt;
&lt;p&gt;&lt;em&gt;Threading, task-based or asynchronous programming, Grand Central Dispatch (GCD) wrapper&lt;/em&gt; &lt;a href="#readme"&gt;back to top&lt;/a&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/duemunk/Async"&gt;Async&lt;/a&gt; - Syntactic sugar for Grand Central Dispatch.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/yannickl/AwaitKit"&gt;AwaitKit&lt;/a&gt; - The ES7 Async/Await control flow.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/comyar/Chronos-Swift"&gt;Chronos&lt;/a&gt; - Grand Central Dispatch Utilities.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/dalu93/Each"&gt;Each&lt;/a&gt; - Each is a NSTimer bridge library.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/kodlian/Eki"&gt;EKI&lt;/a&gt; - Make Grand Central Dispatch easy and fun to use (queue, task, group, timer and semaphore).&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/hemantasapkota/GCDTimer"&gt;GCDTimer&lt;/a&gt; - A well-tested GCD timer.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/luoxiu/Schedule"&gt;Schedule&lt;/a&gt; &lt;g-emoji class="g-emoji" alias="penguin" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f427.png"&gt;🐧&lt;/g-emoji&gt; - A missing lightweight task scheduler with an incredibly human-friendly syntax.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/radex/SwiftyTimer"&gt;SwiftyTimer&lt;/a&gt; - API for NSTimer.&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;&lt;a id="user-content-ui" class="anchor" aria-hidden="true" href="#ui"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;UI&lt;/h3&gt;
&lt;p&gt;&lt;em&gt;A collection of pre-packaged transitions &amp;amp; cool ui stuffs.&lt;/em&gt; &lt;a href="#readme"&gt;back to top&lt;/a&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/tadija/AERecord"&gt;AECoreDataUI&lt;/a&gt; - Core Data driven UI.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/agilie/AGCircularPicker"&gt;AGCircularPicker&lt;/a&gt; - Helpful component for creating a controller aimed to manage any calculated parameter.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/andreamazz/AMScrollingNavbar"&gt;AMScrollingNavbar&lt;/a&gt; - Scrollable UINavigationBar that follows the scrolling of a UIScrollView.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/ZulwiyozaPutra/Arale"&gt;Arale&lt;/a&gt; - A custom stretchable header view for UIScrollView or any its subclasses with UIActivityIndicatorView support for content reloading.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/jogendra/BadgeHub"&gt;BadgeHub&lt;/a&gt; - Make any UIView a full fledged animated notification center. It is a way to quickly add a notification badge icon to a UIView.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/yonat/BatteryView"&gt;BatteryView&lt;/a&gt; - Simple battery shaped UIView.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/dasdom/BreakOutToRefresh"&gt;BreakOutToRefresh&lt;/a&gt; - A playable pull to refresh view using SpriteKit.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/alexaubry/BulletinBoard"&gt;BulletinBoard&lt;/a&gt; - Generates and manages contextual cards displayed at the bottom of the screen.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/sindresorhus/CircularProgress"&gt;CircularProgress&lt;/a&gt; - Circular progress indicator for your macOS app.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/Baddaboo/ClassicKit"&gt;ClassicKit&lt;/a&gt; - A collection of classic-style UI components.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/jakemarsh/CostumeKit"&gt;CostumeKit&lt;/a&gt; - Base types for theming an app.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/kizitonwose/CountryPickerView"&gt;CountryPickerView&lt;/a&gt; - A simple, customizable view for efficiently collecting country information in iOS apps.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/phimage/CustomSegue"&gt;CustomSegue&lt;/a&gt; - Custom segue for OSX Storyboards with slide and cross fade effects.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/HarshilShah/DeckTransition"&gt;DeckTransition&lt;/a&gt; - A library to recreate the iOS 10 Apple Music now playing transition.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/sindresorhus/DockProgress"&gt;DockProgress&lt;/a&gt; - Show progress in your macOS app's Dock icon.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/evgenyneu/Dodo"&gt;Dodo&lt;/a&gt; - A message bar for iOS.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/jayeshk/Doric"&gt;Doric Design System Foundation&lt;/a&gt; - Protocol oriented, type safe, scalable design system foundation framework for iOS.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/AssistoLab/DropDown"&gt;DropDown&lt;/a&gt; - A Material Design drop down for iOS.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/eonist/Element"&gt;Element&lt;/a&gt; - Programmatic UI framework for macOS.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/KitchenStories/Elissa"&gt;Elissa&lt;/a&gt; - Displays a notification on top of a UITabBarItem or any UIView anchor view to reveal additional information.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/Aufree/ESTMusicIndicator"&gt;EstMusicIndicator&lt;/a&gt; - Music play indicator like iTunes.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/zenangst/Family"&gt;Family&lt;/a&gt; - A child view controller framework that makes setting up your parent controllers as easy as pie.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/mukeshthawani/faqview"&gt;FAQView&lt;/a&gt; - An easy to use FAQ view for iOS.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/vadymmarkov/Fashion"&gt;Fashion&lt;/a&gt; - Fashion accessories and beauty tools to share and reuse UI styles.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/madebybowtie/FlagKit"&gt;FlagKit&lt;/a&gt; - Beautiful flag icons for usage in apps and on the web.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/k-lpmg/FlexibleHeader"&gt;FlexibleHeader&lt;/a&gt; - A container view that responds to scrolling of UIScrollView.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/glenyi/FloatRatingView"&gt;FloatRatingView&lt;/a&gt; - Floating rating system.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/Ramotion/fluid-slider"&gt;Fluid Slider&lt;/a&gt; - A slider widget with a popup bubble displaying the precise value selected.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/skywinder/GaugeKit"&gt;GaugeKit&lt;/a&gt; - Customizable gauges. Easy reproduce Apple's style gauges.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/artman/Geometry"&gt;Geometry&lt;/a&gt; - extensions for UIView.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/gmertk/GMStepper"&gt;GMStepper&lt;/a&gt; - A stepper with a sliding label in the middle.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/fxm90/GradientProgressBar"&gt;GradientProgressBar&lt;/a&gt; - An animated gradient progress bar.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/groue/GRMustache.swift"&gt;GRMustache&lt;/a&gt; - Flexible Mustache templates.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/KennethTsang/GrowingTextView"&gt;GrowingTextView&lt;/a&gt; - UITextView that supports auto growing, placeholder and length limit.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/gautier-gdx/Hexacon"&gt;Hexacon&lt;/a&gt; - A new way to display content in your app like the Apple Watch SpringBoard.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/HamzaGhazouani/HGCircularSlider"&gt;HGCircularSlider&lt;/a&gt; - A custom reusable circular slider control for iOS application.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/gontovnik/HidesNavigationBarWhenPushed"&gt;HidesNavigationBarWhenPushed&lt;/a&gt; - A library, which adds the ability to hide navigation bar when view controller is pushed via hidesNavigationBarWhenPushed flag.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/kciter/HorizontalDial"&gt;HorizontalDial&lt;/a&gt; - A horizontal scroll dial like Instagram.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/iGenius-Srl/IGColorPicker"&gt;IGColorPicker&lt;/a&gt; - A customizable color picker for iOS.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/anatoliyv/InfoView"&gt;InfoView&lt;/a&gt; - Simple information view with pointed arrow.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/algolia/instantsearch-ios"&gt;InstantSearch iOS&lt;/a&gt; - A library of widgets and helpers to build instant-search features on iOS.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/Kirillzzy/KALoader"&gt;KALoader&lt;/a&gt; - Beautiful animated placeholders for showing loading of data.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/kingiol/KDInteractiveNavigationController"&gt;KDInteractiveNavigationController&lt;/a&gt; - A UINavigationController subclass that support pop interactive UINavigationBar with hidden or show.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/MoZhouqi/KMNavigationBarTransition"&gt;KMNavigationBarTransition&lt;/a&gt; - A drop-in universal library helps you to manage the navigation bar styles and makes transition animations smooth between different navigation bar styles while pushing or popping a view controller for all orientations.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/MoZhouqi/KMPlaceholderTextView"&gt;KMPlaceholderTextView&lt;/a&gt; - A UITextView subclass that adds support for multiline placeholder.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/wangshengjia/LeeGo"&gt;LeeGo&lt;/a&gt; - Declarative, configurable &amp;amp; highly reusable UI development as making Lego bricks.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/mono0926/LicensePlist"&gt;LicensePlist&lt;/a&gt; - A command-line tool that automatically generates a Plist of all your dependencies.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/yoavlt/LiquidLoader"&gt;LiquidLoader&lt;/a&gt; - Spinner loader components with liquid animation.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/jogendra/LoadingShimmer"&gt;LoadingShimmer&lt;/a&gt; - An easy way to add a shimmering effect to any view with just one line of code. It is useful as an unobtrusive loading indicator.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/exyte/macaw"&gt;Macaw&lt;/a&gt; - Powerful and easy-to-use vector graphics library with SVG support.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/efremidze/Magnetic"&gt;Magnetic&lt;/a&gt; - SpriteKit Floating Bubble Picker (inspired by Apple Music).&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/blueapron/Mandoline"&gt;Mandoline&lt;/a&gt; - An iOS picker view to serve all your 'picking' needs.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/canalesb93/MantleModal"&gt;MantleModal&lt;/a&gt; - A simple modal resource that uses a UIScrollView to allow the user to close the modal by dragging it down.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/CosmicMind/Material"&gt;Material&lt;/a&gt; - Express your creativity with Material, an animation and graphics framework for Google's Material Design and Apple's Flat UI.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/material-components/material-components-ios"&gt;Material Components for iOS&lt;/a&gt; - Modular and customizable Material Design UI components for iOS&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/nghialv/MaterialKit"&gt;MaterialKit&lt;/a&gt; - Material design components.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/younatics/MediaBrowser"&gt;MediaBrowser&lt;/a&gt; - Simple iOS photo and video browser with optional grid view, captions and selections.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/pixyzehn/MediumScrollFullScreen"&gt;MediumScrollFullScreen&lt;/a&gt; - Medium scroll style menubar.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/DroidsOnRoids/MPParallaxView"&gt;MPParallaxView&lt;/a&gt; - Apple TV Parallax effect.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/yonat/MultiSelectSegmentedControl"&gt;MultiSelectSegmentedControl&lt;/a&gt; - UISegmentedControl remake that supports selecting multiple segments, vertical stacking, combining text and images.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/yonat/MultiSlider"&gt;MultiSlider&lt;/a&gt; - UISlider clone with multiple thumbs and values, range highlight, optional snap intervals, optional value labels, either vertical or horizontal.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/maxep/MXParallaxHeader"&gt;MXParallaxHeader&lt;/a&gt; - Simple parallax header for UIScrollView.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/m1entus/MZFormSheetPresentationController"&gt;MZFormSheetPresentationController&lt;/a&gt; - Provides an alternative to the native iOS UIModalPresentationFormSheet, adding support for iPhone and additional opportunities to setup controller size and feel form sheet.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/muukii/NextGrowingTextView"&gt;NextGrowingTextView&lt;/a&gt; - The next in the generations of 'growing textviews' optimized for iOS 7 and above.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/ninjaprox/NVActivityIndicatorView"&gt;NVActivityIndicatorView&lt;/a&gt; - Collection of nice loading animations.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/applidium/OverlayContainer"&gt;OverlayContainer&lt;/a&gt; - OverlayContainer makes it easier to develop overlay based interfaces, such as the one presented in the Apple Maps or Stocks apps.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/pantuspavel/PPAssetsActionController"&gt;PPAssetsActionController&lt;/a&gt; - Highly customizable Action Sheet Controller with assets preview.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/sindresorhus/Preferences"&gt;Preferences&lt;/a&gt; - Add a preferences window to your macOS app in minutes.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/sgr-ksmt/PullToDismiss"&gt;PullToDismiss&lt;/a&gt; - You can dismiss modal viewcontroller by pulling scrollview or navigationbar.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/WorldDownTown/RangeSeekSlider"&gt;RangeSeekSlider&lt;/a&gt; - A customizable range slider like a UISlider for iOS.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/Ramotion/reel-search"&gt;Reel search&lt;/a&gt; - Option list managed as a reel.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/tadejr/ResizingTokenField"&gt;ResizingTokenField&lt;/a&gt; - A UICollectionView-based token field which provides intrinsic content height.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/hyperoslo/RetroProgress"&gt;RetroProgress&lt;/a&gt; - Retro looking progress bar straight from the 90s.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/marty-suzuki/SAHistoryNavigationViewController"&gt;SAHistoryNavigationViewController&lt;/a&gt; - iOS task manager like UI in UINavigationContoller.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/LeonardoCardoso/SectionedSlider"&gt;SectionedSlider&lt;/a&gt; - Control Center Slider.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/kciter/SelectionDialog"&gt;SelectionDialog&lt;/a&gt; - Simple selection dialog.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/PierrePerrin/ShadowView"&gt;ShadowView&lt;/a&gt; - Make shadows management easy on UIView.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/efremidze/Shiny"&gt;Shiny&lt;/a&gt; - Iridescent Effect View (inspired by Apple Pay Cash).&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/stoneburner/ShowSomeProgress"&gt;ShowSomeProgress&lt;/a&gt; - Animated Progress and Activity Indicators for iOS apps.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/Juanpe/SkeletonView"&gt;SkeletonView&lt;/a&gt; - An elegant way to show users that something is happening and also prepare them to which contents he is waiting.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/suzuki-0000/SKPhotoBrowser"&gt;SKPhotoBrowser&lt;/a&gt; - Simple PhotoBrowser/Viewer inspired by facebook, twitter photo browsers.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/hyperoslo"&gt;Spots&lt;/a&gt; - Spots is a view controller framework that makes your setup and future development blazingly fast.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/kishikawakatsumi/SpreadsheetView"&gt;SpreadsheetView&lt;/a&gt; - Full configurable spreadsheet view user interfaces for iOS applications.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/peterprokop/StarryStars"&gt;StarryStars&lt;/a&gt; - Display &amp;amp; edit ratings, fully customizable from interface builder.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/aschuch/StatefulViewController"&gt;StatefulViewController&lt;/a&gt; - Placeholder views based on content, loading, error or empty states.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/yonat/StepProgressView"&gt;StepProgressView&lt;/a&gt; - Step-by-step progress view with labels and shapes. A good replacement for UIActivityIndicatorView and UIProgressView.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/multimediasuite/SweetCurtain"&gt;SweetCurtain&lt;/a&gt; - Really sweet and easy bottom pullable sheet implementation. You can find a similar implementation in applications like Apple Maps, Find My, Stocks, etc.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/haoking/SwiftyUI"&gt;SwiftyUI&lt;/a&gt; - High performance and lightweight UIView, UIImage, UIImageView, UIlabel, UIButton and more.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/ElaWorkshop/TagListView"&gt;TagListView&lt;/a&gt; - Simple but highly customizable iOS tag list view.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/devxoul/Toaster"&gt;Toaster&lt;/a&gt; - Notification toasts.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/morizotter/TouchVisualizer"&gt;TouchVisualizer&lt;/a&gt; - Lightweight touch visualization library with a single line of code.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/piemonte/Twinkle"&gt;Twinkle&lt;/a&gt; - Easy way to make elements in your iOS app twinkle.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/MKGitHub/UIPheonix"&gt;UIPheonix&lt;/a&gt; - Easy, flexible, dynamic and highly scalable UI framework + concept for reusable component/control-driven apps.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/marty-suzuki/URLEmbeddedView"&gt;URLEmbeddedView&lt;/a&gt; - Automatically caches the object that is confirmed the Open Graph Protocol, and displays it as URL embedded card.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rshevchuk/Wallet"&gt;Wallet&lt;/a&gt; - A replica of the Apple's Wallet interface. Add, delete or present your cards and passes.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/Interactive-Studio/Windless"&gt;Windless&lt;/a&gt; - Windless makes it easy to implement invisible layout loading view.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/whitesmith/WSTagsField"&gt;WSTagsField&lt;/a&gt; - An iOS text field that represents different Tags.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/yahoo/YMTreeMap"&gt;YMTreeMap&lt;/a&gt; - Treemap / Heatmap layout engine, based on Squarified&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/younatics/YNSearch"&gt;YNSearch&lt;/a&gt; - Awesome fully customizable search view like Pinterest.&lt;/li&gt;
&lt;/ul&gt;
&lt;h4&gt;&lt;a id="user-content-alert" class="anchor" aria-hidden="true" href="#alert"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Alert&lt;/h4&gt;
&lt;p&gt;&lt;em&gt;Libs to display alert, action sheet, notification, popup.&lt;/em&gt; &lt;a href="#readme"&gt;back to top&lt;/a&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/sgr-ksmt/Alertift"&gt;Alertift&lt;/a&gt; - Modern, easy UIAlertController wrapper.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/dillidon/alerts-and-pickers"&gt;Alerts Pickers&lt;/a&gt; - Advanced usage of UIAlertController with TextField, DatePicker, PickerView, TableView and CollectionView.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/mshrwtnb/alrt"&gt;ALRT&lt;/a&gt; - An easier constructor for UIAlertController. Present an alert from anywhere.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/k-lpmg/AwaitToast"&gt;AwaitToast&lt;/a&gt; - &lt;g-emoji class="g-emoji" alias="bread" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f35e.png"&gt;🍞&lt;/g-emoji&gt; An async waiting toast with basic toast. Inspired by facebook posting toast.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/candostdagdeviren/CDAlertView"&gt;CDAlertView&lt;/a&gt; - Highly customizable alert/notification/success/error/alarm popup.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/JT501/CFNotify"&gt;CFNotify&lt;/a&gt; - A customizable framework to create draggable alert views.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/thellimist/EZAlertController"&gt;EZAlertController&lt;/a&gt; - Easy UIAlertController.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/wxxsw/GSMessages"&gt;GSMessage&lt;/a&gt; - A simple style messages/notifications for iOS 7+.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/ytakzk/Hokusai"&gt;Hokusai&lt;/a&gt; - A library for a cool bouncy action sheet.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/tasanobu/Kamagari"&gt;Kamagari&lt;/a&gt; - Simple UIAlertController builder class.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/krimpedance/KRAlertController"&gt;KRAlertController&lt;/a&gt; - A beautiful alert controller for your iOS.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/schmidyy/Loaf"&gt;Loaf&lt;/a&gt; - A simple framework for easy iOS Toasts.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/Daltron/NotificationBanner"&gt;NotificationBanner&lt;/a&gt; - The easiest way to display highly customizable in app notification banners in iOS.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/pmusolino/PMAlertController"&gt;PMAlertController&lt;/a&gt; - PMAlertController is a great and customizable substitute to UIAlertController.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/orderella/PopupDialog"&gt;PopupDialog&lt;/a&gt; - A simple, customizable popup dialog. Replaces UIAlertController alert style.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/vikmeup/SCLAlertView-Swift"&gt;SCLAlertView&lt;/a&gt; - Animated Alert view.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/ParkGwangBeom/Sheet"&gt;Sheet&lt;/a&gt; - Actionsheet with navigation features such as the Flipboard App.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/ivanvorobei/SPAlert"&gt;SPAlert&lt;/a&gt; - Native popup from Apple Music &amp;amp; Feedback in AppStore. Contains Done &amp;amp; Heart presets.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/LowKostKustomz/StatusAlert"&gt;StatusAlert&lt;/a&gt; - Display Apple system-like self-hiding status alerts without interrupting user flow.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/codestergit/SweetAlert-iOS"&gt;SweetAlert&lt;/a&gt; - Alert system.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/GabrielAlva/Swift-Prompts"&gt;Swift-Prompts&lt;/a&gt; - Design custom prompts with a great scope of options to choose from.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/huri000/SwiftEntryKit"&gt;SwiftEntryKit&lt;/a&gt; - A simple and versatile pop-up presenter.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/SwiftKickMobile/SwiftMessages"&gt;SwiftMessages&lt;/a&gt; - A very flexible message bar for iOS.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/peterprokop/SwiftOverlays"&gt;SwiftOverlays&lt;/a&gt; - various popups and notifications.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/morizotter/SwiftyDrop"&gt;SwiftyDrop&lt;/a&gt; - Lightweight dropdown message bar.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/xmartlabs/XLActionController"&gt;XLActionController&lt;/a&gt; - Fully customizable and extensible action sheet controller.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/hemangshah/Zingle"&gt;Zingle&lt;/a&gt; - An alert will display underneath your UINavigationBar.&lt;/li&gt;
&lt;/ul&gt;
&lt;h4&gt;&lt;a id="user-content-applicationdelegate" class="anchor" aria-hidden="true" href="#applicationdelegate"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;ApplicationDelegate&lt;/h4&gt;
&lt;p&gt;&lt;a href="#readme"&gt;back to top&lt;/a&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/Square/SuperDelegate"&gt;SuperDelegate&lt;/a&gt; - SuperDelegate provides a clean application delegate interface and protects you from bugs in the application lifecycle.&lt;/li&gt;
&lt;/ul&gt;
&lt;h4&gt;&lt;a id="user-content-blur" class="anchor" aria-hidden="true" href="#blur"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Blur&lt;/h4&gt;
&lt;p&gt;&lt;a href="#readme"&gt;back to top&lt;/a&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/efremidze/VisualEffectView"&gt;VisualEffectView&lt;/a&gt; - UIVisualEffectView subclass with tint color.&lt;/li&gt;
&lt;/ul&gt;
&lt;h4&gt;&lt;a id="user-content-button" class="anchor" aria-hidden="true" href="#button"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Button&lt;/h4&gt;
&lt;p&gt;&lt;a href="#readme"&gt;back to top&lt;/a&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/amerhukic/AHDownloadButton"&gt;AHDownloadButton&lt;/a&gt; - Customizable download button with progress and transition animations. It is based on Apple's App Store download button.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/okmr-d/DOFavoriteButton"&gt;DOFavoriteButton&lt;/a&gt; - Cute Animated Button.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/DimaMishchenko/ExpandableButton"&gt;ExpandableButton&lt;/a&gt; - Customizable and easy to use expandable button.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/exyte/FloatingButton"&gt;FloatingButton&lt;/a&gt; - Easily customizable floating button menu created with SwiftUI.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/kciter/Floaty"&gt;Floaty&lt;/a&gt; - Floating Action Button for iOS.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/loregr/LGButton"&gt;LGButton&lt;/a&gt; - A fully customisable subclass of the native UIControl which allows you to create beautiful buttons without writing any line of code.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rolandleth/LTHRadioButton"&gt;LTHRadioButton&lt;/a&gt; - A radio button with a pretty animation.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/yonat/MultiToggleButton"&gt;MultiToggleButton&lt;/a&gt; - A UIButton subclass that implements tap-to-toggle button text (like the camera flash and timer buttons).&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/LeonardoCardoso/NFDownloadButton"&gt;NFDownloadButton&lt;/a&gt; - Revamped Download Button. It's kinda a reverse engineering of Netflix's app download button.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/pmusolino/PMSuperButton"&gt;PMSuperButton&lt;/a&gt; - A powerful UIButton with super powers, customizable from Storyboard.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/yonat/RadioGroup"&gt;RadioGroup&lt;/a&gt; - The missing iOS radio buttons group.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/takecian/SwiftShareBubbles"&gt;SwiftShareBubbles&lt;/a&gt; - Animated social share buttons control for iOS.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/AladinWay/TransitionButton"&gt;TransitionButton&lt;/a&gt; - UIButton subclass for loading and transition animation.&lt;/li&gt;
&lt;/ul&gt;
&lt;h4&gt;&lt;a id="user-content-calendar" class="anchor" aria-hidden="true" href="#calendar"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Calendar&lt;/h4&gt;
&lt;p&gt;&lt;a href="#readme"&gt;back to top&lt;/a&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/richardtop/CalendarKit"&gt;CalendarKit&lt;/a&gt; - Fully customizable calendar day view.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/mmick66/CalendarView"&gt;CalendarView&lt;/a&gt; - Calendar Component, It features both vertical and horizontal layout (and scrolling) and the display of native calendar events.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/itsmeichigo/DateTimePicker"&gt;DateTimePicker&lt;/a&gt; - A nicer iOS UI component for picking date and time.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/patchthecode/JTAppleCalendar"&gt;JTAppleCalendar&lt;/a&gt; - UI calendar handler.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/hemangshah/Workaholic"&gt;Workaholic&lt;/a&gt; - A GitHub-like work contribution timeline.&lt;/li&gt;
&lt;/ul&gt;
&lt;h4&gt;&lt;a id="user-content-cards" class="anchor" aria-hidden="true" href="#cards"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Cards&lt;/h4&gt;
&lt;p&gt;&lt;a href="#readme"&gt;back to top&lt;/a&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/intuit/CardParts"&gt;CardParts&lt;/a&gt; - A reactive, card-based UI framework built on UIKit for iOS developers.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/JoniVR/VerticalCardSwiper"&gt;VerticalCardSwiper&lt;/a&gt; - A marriage between the Shazam Discover UI and Tinder, built with UICollectionView.&lt;/li&gt;
&lt;/ul&gt;
&lt;h4&gt;&lt;a id="user-content-form" class="anchor" aria-hidden="true" href="#form"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Form&lt;/h4&gt;
&lt;p&gt;&lt;a href="#readme"&gt;back to top&lt;/a&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/ra1028/Carbon"&gt;Carbon&lt;/a&gt; - &lt;g-emoji class="g-emoji" alias="biking_man" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f6b4.png"&gt;🚴&lt;/g-emoji&gt; A declarative library for building component-based user interfaces in UITableView and UICollectionView.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/xmartlabs/Eureka"&gt;Eureka&lt;/a&gt; - Elegant iOS form builder.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/ra1028/Former"&gt;Former&lt;/a&gt; - A fully customizable library for easy creating UITableView based form.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/ortuman/SwiftForms"&gt;SwiftForms&lt;/a&gt; - Forms are now easy as 1-2-3.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/neoneye/SwiftyFORM"&gt;SwiftyFORM&lt;/a&gt; - Forms that can be validated.&lt;/li&gt;
&lt;/ul&gt;
&lt;h4&gt;&lt;a id="user-content-hud" class="anchor" aria-hidden="true" href="#hud"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;HUD&lt;/h4&gt;
&lt;p&gt;&lt;a href="#readme"&gt;back to top&lt;/a&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/goktugyil/EZLoadingActivity"&gt;EZLoadingActivity&lt;/a&gt; - Lightweight loading activity HUD.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/fxm90/GradientLoadingBar"&gt;GradientLoadingBar&lt;/a&gt; - An animated gradient loading bar.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/krimpedance/KRProgressHUD"&gt;KRProgressHUD&lt;/a&gt; - A beautiful and customizable progress HUD.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/pkluz/PKHUD"&gt;PKHUD&lt;/a&gt; - Reimplementation of the Apple HUD.&lt;/li&gt;
&lt;/ul&gt;
&lt;h4&gt;&lt;a id="user-content-label" class="anchor" aria-hidden="true" href="#label"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Label&lt;/h4&gt;
&lt;p&gt;&lt;a href="#readme"&gt;back to top&lt;/a&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/optonaut/ActiveLabel.swift"&gt;ActiveLabel&lt;/a&gt; - UILabel drop-in replacement supporting Hashtags (#), Mentions (@) and URLs (http://).&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/suzuki-0000/CountdownLabel"&gt;CountdownLabel&lt;/a&gt; - Simple countdown UILabel with morphing animation, and some useful function.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/FahimF/FloatLabelFields"&gt;FloatLabelFields&lt;/a&gt; - Text entry controls which contain a built-in title/label so that you don't have to add a separate title for each field.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/kciter/GlitchLabel"&gt;GlitchLabel&lt;/a&gt; - Glitching UILabel for iOS.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/tbaranes/IncrementableLabel"&gt;IncrementableLabel&lt;/a&gt; - An UILabel subclass to (de)increment numbers in an UILabel.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/delannoyk/KDEDateLabel"&gt;KDEDateLabel&lt;/a&gt; - An UILabel subclass that updates itself to make time ago's format easier.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/lexrus/LTMorphingLabel"&gt;LTMorphingLabel&lt;/a&gt; - Graceful morphing effects for UILabel.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/instacart/Nantes"&gt;Nantes&lt;/a&gt; - TTTAttributedLabel replacement.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/me-abhinav/NumberMorphView"&gt;NumberMorphView&lt;/a&gt; - A label view for displaying numbers which can transition or animate using a technique called number tweening or number morphing.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/anatoliyv/SMIconLabel"&gt;SMIconLabel&lt;/a&gt; - UILabel with image placed from left or right.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/Ekhoo/Translucid"&gt;Translucid&lt;/a&gt; - Lightweight library to set an Image as text background.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/mukeshthawani/TriLabelView"&gt;TriLabelView&lt;/a&gt; - A triangle shaped corner label view for iOS.&lt;/li&gt;
&lt;/ul&gt;
&lt;h4&gt;&lt;a id="user-content-menu" class="anchor" aria-hidden="true" href="#menu"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Menu&lt;/h4&gt;
&lt;p&gt;&lt;a href="#readme"&gt;back to top&lt;/a&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/ashishkakkad8/AKSwiftSlideMenu"&gt;AKSwiftSlideMenu&lt;/a&gt; - Slide Menu (Drawer).&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/Ramotion/circle-menu"&gt;CircleMenu&lt;/a&gt; - CircleMenu is a simple, elegant UI menu with a circular layout and material design animations.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/evnaz/ENSwiftSideMenu"&gt;ENSwiftSideMenu&lt;/a&gt; - Sliding side menu.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/exyte/fan-menu"&gt;FanMenu&lt;/a&gt; - Menu with a circular layout based on Macaw.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/yannickl/FlowingMenu"&gt;FlowingMenu&lt;/a&gt; - Interactive view transition to display menus with flowing and bouncing effects.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/Yalantis/GuillotineMenu"&gt;GuillotineMenu&lt;/a&gt; - Guillotine style menu.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/hemangshah/HHFloatingView"&gt;HHFloatingView&lt;/a&gt; - An easy to use and setup floating view for your app.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/handsomecode/InteractiveSideMenu"&gt;InteractiveSideMenu&lt;/a&gt; - Customizable iOS Interactive Side Menu.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/Kawoou/KWDrawerController"&gt;KWDrawerController&lt;/a&gt; - Drawer view controller that easy to use.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/pixyzehn/MediumMenu"&gt;MediumMenu&lt;/a&gt; - A menu based on Medium iOS app.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/cxa/MenuItemKit"&gt;MenuItemKit&lt;/a&gt; - &lt;code&gt;UIMenuItem&lt;/code&gt; with image and block (closure) support.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/PageMenu/PageMenu"&gt;Pagemenu&lt;/a&gt; - Pagination enabled view controller.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/kazuhiro4949/PagingKit"&gt;PagingKit&lt;/a&gt; - PagingKit provides customizable menu UI.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/antoniocasero/Panels"&gt;Panels&lt;/a&gt; - Panels is a framework to easily add sliding panels to your application.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rechsteiner/Parchment"&gt;Parchment&lt;/a&gt; - A paging view controller with a highly customizable menu, built on UICollectionView.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/CaliCastle/PopMenu"&gt;PopMenu&lt;/a&gt; - &lt;g-emoji class="g-emoji" alias="sunglasses" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f60e.png"&gt;😎&lt;/g-emoji&gt; A cool and customizable popup style action sheet for iOS.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/jonkykong/SideMenu"&gt;SideMenu&lt;/a&gt; - Simple side menu control for iOS inspired by Facebook. Right and Left sides. No coding required.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/dekatotoro/SlideMenuControllerSwift"&gt;SlideMenuControllerSwift&lt;/a&gt; - iOS Slide Menu View based on Google+, iQON, Feedly, Ameba iOS app.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/yysskk/SwipeMenuViewController"&gt;SwipeMenuViewController&lt;/a&gt; - Swipable tab and menu View and ViewController.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/xmartlabs/XLPagerTabStrip"&gt;XLPagerTabStrip&lt;/a&gt; - Android PagerTabStrip for iOS.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/younatics/YNDropDownMenu"&gt;YNDropDownMenu&lt;/a&gt; - Adorable iOS drop down menu.&lt;/li&gt;
&lt;/ul&gt;
&lt;h4&gt;&lt;a id="user-content-pagination" class="anchor" aria-hidden="true" href="#pagination"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Pagination&lt;/h4&gt;
&lt;p&gt;&lt;a href="#readme"&gt;back to top&lt;/a&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/ChiliLabs/CHIPageControl"&gt;CHIPageControl&lt;/a&gt; - A set of cool animated page controls to replace boring UIPageControl.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/shima11/FlexiblePageControl"&gt;FlexiblePageControl&lt;/a&gt; - A flexible UIPageControl like Instagram.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/uias/Pageboy"&gt;Pageboy&lt;/a&gt; - A simple, highly informative page view controller.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/hirohisa/PageController"&gt;PageController&lt;/a&gt; - Infinite paging controller.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/touchlane/SlideController"&gt;SlideController&lt;/a&gt; - It is a nice alternative for UIPageViewController built using power of generic types. Swipe between pages with an interactive title navigation control. Configure horizontal or vertical chains for unlimited pages amount.&lt;/li&gt;
&lt;/ul&gt;
&lt;h4&gt;&lt;a id="user-content-payment" class="anchor" aria-hidden="true" href="#payment"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Payment&lt;/h4&gt;
&lt;p&gt;&lt;a href="#readme"&gt;back to top&lt;/a&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/prolificinteractive/Caishen"&gt;Caishen&lt;/a&gt; - A Payment Card UI &amp;amp; Validator for iOS.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/eliakorkmaz/iCard"&gt;iCard&lt;/a&gt; - Bank Card Generator using SnapKit DSL.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/MobileFirstInc/MFCard"&gt;MFCard&lt;/a&gt; - Easily integrate Credit Card payments in iOS App.&lt;/li&gt;
&lt;/ul&gt;
&lt;h4&gt;&lt;a id="user-content-permissions" class="anchor" aria-hidden="true" href="#permissions"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Permissions&lt;/h4&gt;
&lt;p&gt;&lt;a href="#readme"&gt;back to top&lt;/a&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/ennioma/arek"&gt;AREK&lt;/a&gt; - AREK is a clean and easy to use wrapper over any kind of iOS permission.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/delba/Permission"&gt;Permission&lt;/a&gt; - A unified API to ask for permissions on iOS.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/ivanvorobei/SPPermissions"&gt;SPPermission&lt;/a&gt; - Simple request permission with native UI and interactive animation.&lt;/li&gt;
&lt;/ul&gt;
&lt;h4&gt;&lt;a id="user-content-stackview" class="anchor" aria-hidden="true" href="#stackview"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;StackView&lt;/h4&gt;
&lt;p&gt;&lt;a href="#readme"&gt;back to top&lt;/a&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/seedco/StackViewController"&gt;StackViewController&lt;/a&gt; - Simplify the use of UIStackView.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/tomvanzummeren/TZStackView"&gt;TZStackView&lt;/a&gt; - An iOS9 UIStackView layout component re-implemented for iOS 7 and 8.&lt;/li&gt;
&lt;/ul&gt;
&lt;h4&gt;&lt;a id="user-content-switch" class="anchor" aria-hidden="true" href="#switch"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Switch&lt;/h4&gt;
&lt;p&gt;&lt;a href="#readme"&gt;back to top&lt;/a&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/JaleelNazir/MJMaterialSwitch"&gt;MJMaterialSwitch&lt;/a&gt; - A Customizable Switch UI for iOS, Inspired from Google's Material Design.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/Ramotion/paper-switch"&gt;paper-switch&lt;/a&gt; - RAMPaperSwitch is a material design UI module which paints over the parent view when the switch is turned on.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/T-Pham/Switch"&gt;Switch&lt;/a&gt; - A switch control with full Interface Builder support.&lt;/li&gt;
&lt;/ul&gt;
&lt;h4&gt;&lt;a id="user-content-tab" class="anchor" aria-hidden="true" href="#tab"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Tab&lt;/h4&gt;
&lt;p&gt;&lt;a href="#readme"&gt;back to top&lt;/a&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/Ramotion/adaptive-tab-bar"&gt;Adaptive Tab Bar&lt;/a&gt; - Adaptive tab bar.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/Ramotion/animated-tab-bar"&gt;Animated Tab Bar&lt;/a&gt; - RAMAnimatedTabBarController is a module for adding animation to tab bar items.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/softhausHQ/CircleBar"&gt;CircleBar&lt;/a&gt; - A fun, easy-to-use tab bar navigation controller for iOS.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/Yalantis/ColorMatchTabs"&gt;ColorMatchTabs&lt;/a&gt; - Interesting way to display tabs.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/tungvoduc/DTPagerController"&gt;DTPagerController&lt;/a&gt; - Container view controller to display a set of ViewControllers in a horizontal scroll view.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/eggswift/ESTabBarController"&gt;ESTabBarController&lt;/a&gt; - A highly customizable TabBarController component, which is inherited from UITabBarController.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/hemangshah/HHTabBarView"&gt;HHTabBarView&lt;/a&gt; - A lightweight customized tab bar view.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/YuigaWada/PolioPager"&gt;PolioPager&lt;/a&gt; - A flexible TabBarController with search tab like SNKRS.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/uias/Tabman"&gt;Tabman&lt;/a&gt; - A powerful paging view controller with indicator bar.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/EndouMari/TabPageViewController"&gt;TabPageViewController&lt;/a&gt; - Paging view controller and scroll tab view.&lt;/li&gt;
&lt;/ul&gt;
&lt;h4&gt;&lt;a id="user-content-template" class="anchor" aria-hidden="true" href="#template"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Template&lt;/h4&gt;
&lt;p&gt;&lt;a href="#readme"&gt;back to top&lt;/a&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/stencilproject/Stencil"&gt;Stencil&lt;/a&gt; - Simple and powerful template language.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/100mango/SwiftCssParser"&gt;SwiftCssParser&lt;/a&gt; - Extensible CSS parser.&lt;/li&gt;
&lt;/ul&gt;
&lt;h4&gt;&lt;a id="user-content-textfield" class="anchor" aria-hidden="true" href="#textfield"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;TextField&lt;/h4&gt;
&lt;p&gt;&lt;a href="#readme"&gt;back to top&lt;/a&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/Fawxy/CBPinEntryView"&gt;CBPinEntryView&lt;/a&gt; - Easy to use, very customisable pin entry.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/iDhaval/DTTextField"&gt;DTTextField&lt;/a&gt; - DTTextField is a custom textfield with floating placeholder and error label.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/hanton/HTYTextField"&gt;HTYTextField&lt;/a&gt; - A UITextField with bouncy placeholder.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/PiXeL16/PasswordTextField"&gt;PasswordTextField&lt;/a&gt; - A custom TextField with a switchable icon which shows or hides the password and enforces good password policies.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/Skyscanner/SkyFloatingLabelTextField"&gt;SkyFloatingLabelTextField&lt;/a&gt; - A beautiful and flexible text field control implementation of "Float Label Pattern".&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/GitHawkApp/StyledTextKit"&gt;StyledTextKit&lt;/a&gt; - Declarative building and fast rendering attributed string library.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/serralvo/TextFieldCounter"&gt;TextFieldCounter&lt;/a&gt; - UITextField character counter with lovable UX.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/raulriera/TextFieldEffects"&gt;TextFieldEffects&lt;/a&gt; - Several ready to use effects for UITextFields.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/T-Pham/UITextField-Navigation"&gt;UITextField-Navigation&lt;/a&gt; - UITextField-Navigation adds next, previous and done buttons to the keyboard for your UITextFields. Highly customizable.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/Sunspension/VKPinCodeView"&gt;VKPinCodeView&lt;/a&gt; - Simple and elegant UI component for input PIN.&lt;/li&gt;
&lt;/ul&gt;
&lt;h4&gt;&lt;a id="user-content-transition" class="anchor" aria-hidden="true" href="#transition"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Transition&lt;/h4&gt;
&lt;p&gt;&lt;a href="#readme"&gt;back to top&lt;/a&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/andreamazz/BubbleTransition"&gt;BubbleTransition&lt;/a&gt; - Bubble transition in an easy way.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/PaoloCuscela/Cards"&gt;Cards XI&lt;/a&gt; - Awesome iOS 11 AppStore's Card Views.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/marcosgriselli/EasyTransitions"&gt;EasyTransitions&lt;/a&gt; - A simple way to create custom interactive UIViewController transitions.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/HeroTransitions/Hero"&gt;Hero&lt;/a&gt; - Elegant transition library for iOS.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/shtnkgm/ImageTransition"&gt;ImageTransition&lt;/a&gt; - ImageTransition is a library for smooth animation of images during transitions.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/SebastianBoldt/Jelly"&gt;Jelly&lt;/a&gt; - Jelly provides custom view controller transitions with just a few lines of code.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/xxxAIRINxxx/MusicPlayerTransition"&gt;MusicPlayerTransition&lt;/a&gt; - Custom interactive transition like Apple Music iOS App.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/k-lpmg/PanSlip"&gt;PanSlip&lt;/a&gt; - Use PanGesture to dismiss view on UIViewController and UIView.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/demonnico/PinterestSwift"&gt;PinterestSwift&lt;/a&gt; - Pinterest style transition.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/PiXeL16/RevealingSplashView"&gt;RevealingSplashView&lt;/a&gt; - A Splash view that animates and reveals its content, inspired by the Twitter splash.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/hachinobu/SamuraiTransition"&gt;SamuraiTransition&lt;/a&gt; - Swift based library providing a collection of ViewController transitions featuring a number of neat cutting animations.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/IvanVorobei/SPLarkController"&gt;SPLarkController&lt;/a&gt; - Custom transition between two controller. Translate to top.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/IvanVorobei/SPStorkController"&gt;SPStorkController&lt;/a&gt; - Now playing controller from Apple Music. Customisable height.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/Yalantis/StarWars.iOS"&gt;StarWars.iOS&lt;/a&gt; - Transition animation to crumble view-controller into tiny pieces.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/Touchwonders/Transition"&gt;Transition&lt;/a&gt; - Easy interactive interruptible custom ViewController transitions.&lt;/li&gt;
&lt;/ul&gt;
&lt;h4&gt;&lt;a id="user-content-uicollectionview" class="anchor" aria-hidden="true" href="#uicollectionview"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;UICollectionView&lt;/h4&gt;
&lt;p&gt;&lt;a href="#readme"&gt;back to top&lt;/a&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/AfrozZaheer/AZCollectionViewController"&gt;AZCollectionViewController&lt;/a&gt; - Easy way to integrate pagination with dummy views in CollectionView, make Instagram Discover withing minutes.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/zenangst/Blueprints"&gt;Blueprints&lt;/a&gt; - A framework that is meant to make your life easier when working with collection view flow layouts.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/roberthein/BouncyLayout"&gt;BouncyLayout&lt;/a&gt; - Collection view layout that makes your cells bounce.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/filletofish/CardsLayout"&gt;CardsLayout&lt;/a&gt; - Nice card-designed custom CollectionView layout.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/netguru/CarLensCollectionViewLayout"&gt;CarLensCollectionViewLayout&lt;/a&gt; - An easy-to-use Collection View Layout for card-like animation.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/BenEmdon/CenteredCollectionView"&gt;CenteredCollectionView&lt;/a&gt; - A lightweight UICollectionViewLayout that pages and centers it's cells.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/yonat/CheckmarkCollectionViewCell"&gt;CheckmarkCollectionViewCell&lt;/a&gt; - UICollectionViewCell with checkbox when it isSelected and empty circle when not - like Photos.app 'Select' mode.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/pitiphong-p/CollectionViewShelfLayout"&gt;CollectionViewShelfLayout&lt;/a&gt; - A UICollectionViewLayout subclass displays its items as rows of items similar to the App Store Feature tab without a nested UITableView/UICollectionView hack.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/yacir/CollectionViewSlantedLayout"&gt;CollectionViewSlantedLayout&lt;/a&gt; - UICollectionViewLayout to show slanted content.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/mmick66/KDDragAndDropCollectionView"&gt;Drag and Drop UICollectionView&lt;/a&gt; - Dragging and Dropping data across multiple UICollectionViews.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/WenchaoD/FSPagerView"&gt;FSPagerView&lt;/a&gt; - Elegant Screen Slide Library. It is extremely helpful for making Banner View、Product Show、Welcome/Guide Pages、Screen/ViewController Sliders.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/Ramotion/gliding-collection"&gt;Gliding Collection&lt;/a&gt; - Gliding Collection is a smooth, flowing, customizable decision for a UICollectionView Controller.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/ApplikeySolutions/GravitySlider"&gt;GravitySlider&lt;/a&gt; - Beautiful alternative to the standard UICollectionView flow layout.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/tdscientist/ShelfView-iOS"&gt;ShelfView-iOS&lt;/a&gt; - iOS custom view to display books on shelf.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/Squarespace/simple-source"&gt;SimpleSource&lt;/a&gt; - Easy and type-safe iOS table and collection views.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/stuffrabbit/SwiftSpreadsheet"&gt;SwiftSpreadsheet&lt;/a&gt; - Fully customizable spreadsheet CollectionViewLayout.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/riteshhgupta/TagCellLayout"&gt;TagCellLayout&lt;/a&gt; - UICollectionView layout for Tags with Left, Center &amp;amp; Right alignments.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/yahoojapan/UICollectionViewSplitLayout"&gt;UICollectionViewSplitLayout&lt;/a&gt; - UICollectionViewSplitLayout makes collection view more responsive.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/AppliKeySolutions/VegaScroll"&gt;VegaScroll&lt;/a&gt; - Lightweight animation flowlayout for UICollectionView.&lt;/li&gt;
&lt;/ul&gt;
&lt;h4&gt;&lt;a id="user-content-uitableview" class="anchor" aria-hidden="true" href="#uitableview"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;UITableView&lt;/h4&gt;
&lt;p&gt;&lt;a href="#readme"&gt;back to top&lt;/a&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/AfrozZaheer/AZTableViewController"&gt;AZTableViewController&lt;/a&gt; - Elegant and easy way to integrate pagination with placeholder views.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/jeantimex/CollapsibleTableSectionViewController"&gt;CollapsibleTableSectionViewController&lt;/a&gt; - A library to support collapsible sections in a table view.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/gontovnik/DGElasticPullToRefresh"&gt;DGElasticPullToRefresh&lt;/a&gt; - Elastic pull to refresh.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/ra1028/DiffableDataSources"&gt;DiffableDataSources&lt;/a&gt; - &lt;g-emoji class="g-emoji" alias="floppy_disk" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f4be.png"&gt;💾&lt;/g-emoji&gt; A library for backporting UITableView/UICollectionViewDiffableDataSource.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/DenTelezhkin/DTTableViewManager"&gt;DTTableViewManager&lt;/a&gt; - Protocol-oriented UITableView management, powered by generics and associated types.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/younatics/ExpandableCell"&gt;ExpandableCell&lt;/a&gt; - Fully refactored YNExapnadableCell with more concise, bug free. Easiest usage of expandable &amp;amp; collapsible cell for iOS. You can customize expandable UITableViewCell whatever you like. ExpandableCell is made because insertRows and deleteRows is hard to use. Just inheirt ExpandableDelegate.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/okhanokbay/ExpyTableView"&gt;ExpyTableView&lt;/a&gt; - Make your table view expandable just by implementing one method.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/Ramotion/folding-cell"&gt;folding-cell&lt;/a&gt; - Folding cell transition.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/KyoheiG3/GridView"&gt;GridView&lt;/a&gt; - Can be customized as a time table, spreadsheet, paging and more.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/HamzaGhazouani/HGPlaceholders"&gt;HGPlaceholders&lt;/a&gt; - Nice library to show placeholders and Empty States for any UITableView/UICollectionView in your project.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/okcupid/OKTableViewLiaison"&gt;OKTableViewLiaison&lt;/a&gt; - Framework to help you better manage UITableViews&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/romansorochak/ParallaxHeader"&gt;ParallaxHeader&lt;/a&gt; - Simple way to add parallax header to UIScrollView/UITableView.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/Yalantis/Persei"&gt;Persei&lt;/a&gt; - Animated top menu for UITableView / UICollectionView / UIScrollView.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/dekatotoro/PullToRefreshSwift"&gt;PullToRefreshSwift&lt;/a&gt; - PullToRefresh library.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/bcylin/QuickTableViewController"&gt;QuickTableViewController&lt;/a&gt; - A simple way to create a UITableView for settings.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/marty-suzuki/ReverseExtension"&gt;ReverseExtension&lt;/a&gt; - UITableView extension that enables the insertion of cells the from bottom of a table view.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/3lvis/SectionScrubber"&gt;SectionScrubber&lt;/a&gt; - A component to quickly scroll between collection view sections.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/yonat/SelectionList"&gt;SelectionList&lt;/a&gt; - Simple single-selection or multiple-selection checklist, based on UITableView.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/yukiasai/Shoyu"&gt;Shoyu&lt;/a&gt; - Easier way to represent the structure of UITableView.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/tsucres/SwiftyComments"&gt;SwiftyComments&lt;/a&gt; - Nested hierarchy of expandable/collapsible cells to easily build elegant discussion threads.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/SwipeCellKit/SwipeCellKit"&gt;SwipeCellKit&lt;/a&gt; - Swipeable UITableViewCell based on the stock Mail.app.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/wizeline/WLEmptyState"&gt;WLEmptyState&lt;/a&gt; - A component that lets you customize the view when the dataset of UITableView is empty.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/younatics/YNExpandableCell"&gt;YNExpandableCell&lt;/a&gt; - Awesome expandable, collapsible tableview cell for iOS.&lt;/li&gt;
&lt;/ul&gt;
&lt;h4&gt;&lt;a id="user-content-walkthrough" class="anchor" aria-hidden="true" href="#walkthrough"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Walkthrough&lt;/h4&gt;
&lt;p&gt;&lt;a href="#readme"&gt;back to top&lt;/a&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/aleksandrshoshiashvili/AwesomeSpotlightView"&gt;AwesomeSpotlightView&lt;/a&gt; - Create tutorial or coach tour.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/ariok/BWWalkthrough"&gt;BWWalkthrough&lt;/a&gt; - A class to build custom walkthroughs for your iOS App.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/exyte/ConcentricOnboarding"&gt;ConcentricOnboarding&lt;/a&gt; - SwiftUI library for a walkthrough or onboarding flow with tap actions.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/yukiasai/Gecco"&gt;Gecco&lt;/a&gt; - Spotlight view for iOS.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/ephread/Instructions"&gt;Instructions&lt;/a&gt; - A library to create app walkthroughs and guided tours.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/NikolaKirev/OnboardKit"&gt;OnboardKit&lt;/a&gt; - Customisable user onboarding for your iOS app.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/Ramotion/paper-onboarding"&gt;PaperOnboarding&lt;/a&gt; - PaperOnboarding is a material design UI slider.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/juanpablofernandez/SwiftyOnboard"&gt;SwiftyOnboard&lt;/a&gt; - An iOS framework that allows developers to create beautiful onboarding experiences.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/ruipfcosta/SwiftyWalkthrough"&gt;SwiftyWalkthrough&lt;/a&gt; - The easiest way to create a great walkthrough experience in your apps.&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;&lt;a id="user-content-utility" class="anchor" aria-hidden="true" href="#utility"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Utility&lt;/h3&gt;
&lt;p&gt;&lt;em&gt;Some interesting utilities to help you in your projects&lt;/em&gt; &lt;a href="#readme"&gt;back to top&lt;/a&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/choefele/AlexaSkillsKit"&gt;AlexaSkillsKit&lt;/a&gt; - Develop custom Alexa Skills.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/shindyu/ApplyStyleKit"&gt;ApplyStyleKit&lt;/a&gt; - Elegantly, Apply style to UIKit using Method Chain.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/typelift/Basis"&gt;Basis&lt;/a&gt; - Pure Declarative Programming.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/bow-swift/bow"&gt;Bow&lt;/a&gt; - Companion library for Typed Functional Programming.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/wongzigii/Butterfly"&gt;Butterfly&lt;/a&gt; - A lightweight library for integrating bug-report and feedback features with shake-motion event.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/phimage/CallbackURLKit"&gt;CallbackURLKit&lt;/a&gt; - Implementation of x-callback-url (Inter app communication).&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/vhesener/Closures"&gt;Closures&lt;/a&gt; - Swifty closures for UIKit and Foundation.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/JohnSundell/Codextended"&gt;Codextended&lt;/a&gt; - Extensions giving Codable API type inference super powers.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/thoughtbot/Curry"&gt;Curry&lt;/a&gt; - Function currying.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/onmyway133/DeepDiff"&gt;DeepDiff&lt;/a&gt; - Fast diff library.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/dreymonde/Delegated"&gt;Delegated&lt;/a&gt; - Closure-based delegation without memory leaks.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/ra1028/DifferenceKit"&gt;DifferenceKit&lt;/a&gt; - &lt;g-emoji class="g-emoji" alias="computer" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f4bb.png"&gt;💻&lt;/g-emoji&gt; A fast and flexible O(n) difference algorithm framework.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/zenangst/Differific"&gt;Differific&lt;/a&gt; - A fast and convenient diffing framework.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/ankurp/Dollar"&gt;Dollar&lt;/a&gt; - Similar to Lo-Dash or Underscore in Javascript.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/marty-suzuki/DuctTape"&gt;DuctTape&lt;/a&gt; - &lt;g-emoji class="g-emoji" alias="package" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f4e6.png"&gt;📦&lt;/g-emoji&gt; KeyPath dynamicMemberLookup based syntax sugar for Swift.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/SteadyAction/EtherWalletKit"&gt;EtherWalletKit&lt;/a&gt; - Ethereum Wallet Toolkit for iOS - You can implement Ethereum wallet without a server and blockchain knowledge.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/goktugyil/EZSwiftExtensions"&gt;EZSwiftExtensions&lt;/a&gt; - How standard types and classes were supposed to work.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/MihaelIsaev/FluentQuery"&gt;FluentQuery&lt;/a&gt; &lt;g-emoji class="g-emoji" alias="penguin" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f427.png"&gt;🐧&lt;/g-emoji&gt; - Powerful and easy to use Query Builder.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/marty-suzuki/FluxCapacitor"&gt;FluxCapacitor&lt;/a&gt; - FluxCapacitor makes implementing Flux design pattern easily with protocols and typealias.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/typelift/Focus"&gt;Focus&lt;/a&gt; - Optics library (includes Lens, Prisms, and Isos) that is inspired by Haskell's Lens library.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/younatics/Highlighter"&gt;Highlighter&lt;/a&gt; - Highlight whatever you want! Highlighter will magically find UI objects such as UILabel, UITextView, UITexTfield, UIButton in your UITableViewCell or other Class.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/krzysztofzablocki/LifetimeTracker"&gt;LifetimeTracker&lt;/a&gt; - Surface retain cycle / memory issues right as you develop your application.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/sushinoya/Lumos"&gt;Lumos&lt;/a&gt; - An easy-to-use API for Objective-C runtime functions.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/marmelroy/ObjectiveKit"&gt;ObjectiveKit&lt;/a&gt; - API for Objective C runtime functions.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/floriangbh/OpenSourceController"&gt;OpenSourceController&lt;/a&gt; - The simplest way to display the librarie's licences used in your application.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/alexeyxo/protobuf-swift"&gt;protobuf-swift&lt;/a&gt; - ProtocolBuffers.&lt;/li&gt;
&lt;li&gt;&lt;a href="http://khan.github.io/Prototope/" rel="nofollow"&gt;Prototope&lt;/a&gt; - Library of lightweight interfaces for prototyping, bridged to JS.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/mac-cain13/R.swift"&gt;R.swift&lt;/a&gt; - Tool to get strong typed, autocompleted resources like images, cells and segues.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/nvzqz/RandomKit/"&gt;RandomKit&lt;/a&gt; &lt;g-emoji class="g-emoji" alias="penguin" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f427.png"&gt;🐧&lt;/g-emoji&gt; - Random data generation.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/exyte/ReadabilityKit"&gt;ReadabilityKit&lt;/a&gt; - Preview extractor for news, articles and full-texts.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/bannzai/ResourceKit"&gt;ResourceKit&lt;/a&gt; - Enable autocomplete use resources.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/antitypical/Result"&gt;Result&lt;/a&gt; - Type modelling the success/failure of arbitrary operations.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/thoughtbot/Runes"&gt;Runes&lt;/a&gt; - Functional operators: flatMap, map, apply.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/ceeK/Solar"&gt;Solar&lt;/a&gt; - Calculate sunrise and sunset times given a location.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/ataugeron/SpriteKit-Spring"&gt;SpriteKit+Spring&lt;/a&gt; - SpriteKit API reproducing UIView's spring animations with SKAction.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/hyperoslo/Sugar"&gt;Sugar&lt;/a&gt; - Something sweet that goes great with your Cocoa.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/apple/swift-protobuf"&gt;swift-protobuf&lt;/a&gt; &lt;g-emoji class="g-emoji" alias="penguin" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f427.png"&gt;🐧&lt;/g-emoji&gt; - A plugin and runtime library for using Google's Protocol Buffer.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/noppefoxwolf/Swiftbot"&gt;Swiftbot&lt;/a&gt; - run swift code on slack.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/SwifterSwift/SwifterSwift"&gt;SwifterSwift&lt;/a&gt; - A handy collection of more than 500 native extensions to boost your productivity.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/SwiftGen/SwiftGen#uistoryboard"&gt;SwiftGen-Storyboard&lt;/a&gt; - A tool to auto-generate &lt;code&gt;enums&lt;/code&gt; for all your Storyboards, Scenes and Segues constants + appropriate convenience accessors.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/LeonardoCardoso/SwiftLinkPreview"&gt;SwiftLinkPreview&lt;/a&gt; - It makes a preview from an url, grabbing all information such as title, relevant texts and images.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/thellimist/SwiftRandom"&gt;SwiftRandom&lt;/a&gt; - A tiny generator of random data.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/takecian/SwiftRater"&gt;SwiftRater&lt;/a&gt; - A utility that reminds your iPhone app's users to review the app.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/khan/swifttweaks"&gt;SwiftTweaks&lt;/a&gt; - Tweak your iOS app without recompiling.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/typelift/Swiftx"&gt;Swiftx&lt;/a&gt; - Functional data types and functions for any project.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/tbaranes/SwiftyUtils"&gt;SwiftyUtils&lt;/a&gt; - All the reusable code that we need in each project.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/typelift/Swiftz"&gt;Swiftz&lt;/a&gt; - Functional programming.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/devxoul/Then"&gt;Then&lt;/a&gt; - Super sweet syntactic sugar for initializers.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/lilyball/swift-tsao"&gt;TSAO&lt;/a&gt; - Type-Safe Associated Objects.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/pitiphong-p/URLQueryItemEncoder"&gt;URLQueryItemEncoder&lt;/a&gt; - An Encoder for encoding any Encodable value into an array of URLQueryItem.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/cockscomb/UTIKit"&gt;UTIKit&lt;/a&gt; - an UTI (Uniform Type Identifier) wrapper.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/zenangst/Vaccine"&gt;Vaccine&lt;/a&gt; - Make your apps immune to recompile-decease.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/vincent-pradeilles/weakable-self"&gt;WeakableSelf&lt;/a&gt; - A micro-framework to encapsulate [weak self] and guard statements within closures.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/BalestraPatrick/WhatsNew"&gt;WhatsNew&lt;/a&gt; - Showcase new features after an app update similar to Pages, Numbers and Keynote.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/SvenTiigi/WhatsNewKit"&gt;WhatsNewKit&lt;/a&gt; - Showcase your awesome new app features.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/eBardX/XestiMonitors"&gt;XestiMonitors&lt;/a&gt; - An extensible monitoring framework.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/ZamzamInc/ZamzamKit"&gt;ZamzamKit&lt;/a&gt; - A collection of micro utilities and extensions for Standard Library, Foundation and UIKit.&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;&lt;a id="user-content-validation" class="anchor" aria-hidden="true" href="#validation"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Validation&lt;/h3&gt;
&lt;p&gt;&lt;em&gt;A collection of validation libs.&lt;/em&gt; &lt;a href="#readme"&gt;back to top&lt;/a&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/altayer-digital/ATGValidator"&gt;ATGValidator&lt;/a&gt; - Rule based validation framework with form and card validation support for iOS.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/ustwo/formvalidator-swift"&gt;FormValidatorSwift&lt;/a&gt; - Allows you to validate inputs of text fields and text views in a convenient way.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/RedMadRobot/input-mask-ios"&gt;Input Mask&lt;/a&gt; - Pattern-based user input formatter, parser and validator for iOS.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/vbmania/RxValidator"&gt;RxValidator&lt;/a&gt; - Simple, Extensible, Flexible Validation Checker.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/SwiftValidatorCommunity/SwiftValidator"&gt;SwiftValidator&lt;/a&gt; - A rule-based validation library.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/gkaimakas/SwiftValidators"&gt;SwiftValidators&lt;/a&gt; - String validation for iOS (inspired by validator.js).&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/SvenTiigi/ValidatedPropertyKit"&gt;ValidatedPropertyKit&lt;/a&gt; - Easily validate your Properties with Property Wrappers &lt;g-emoji class="g-emoji" alias="policeman" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f46e.png"&gt;👮&lt;/g-emoji&gt;.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/adamwaite/Validator"&gt;Validator&lt;/a&gt; - Drop in user input validation for your iOS apps.&lt;/li&gt;
&lt;/ul&gt;
&lt;h4&gt;&lt;a id="user-content-phone-numbers" class="anchor" aria-hidden="true" href="#phone-numbers"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Phone Numbers&lt;/h4&gt;
&lt;p&gt;&lt;em&gt;Libs to manage phone numbers.&lt;/em&gt; &lt;a href="#readme"&gt;back to top&lt;/a&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/NikKovIos/NKVPhonePicker"&gt;NKVPhonePicker&lt;/a&gt; - An UITextField subclass to simplify country code's picking.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/marmelroy/PhoneNumberKit"&gt;PhoneNumberKit&lt;/a&gt; - Framework for parsing, formatting and validating international phone numbers. Inspired by Google's libphonenumber.&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;&lt;a id="user-content-version-manager" class="anchor" aria-hidden="true" href="#version-manager"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Version Manager&lt;/h3&gt;
&lt;p&gt;&lt;a href="#readme"&gt;back to top&lt;/a&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/eure/AppVersionMonitor"&gt;AppVersionMonitor&lt;/a&gt; - Monitor iOS app version easily.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/ArtSabintsev/Siren"&gt;Siren&lt;/a&gt; - Notify users when a new version of your app is available and prompt them to upgrade.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/mrackwitz/Version"&gt;Version&lt;/a&gt; - Version represents and compares semantic versions.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/tbaranes/VersionTrackerSwift"&gt;Version Tracker Swift&lt;/a&gt; - Versions tracker for your iOS, OS X, and tvOS app.&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;&lt;a id="user-content-video" class="anchor" aria-hidden="true" href="#video"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Video&lt;/h3&gt;
&lt;p&gt;&lt;a href="#readme"&gt;back to top&lt;/a&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/BrikerMan/BMPlayer"&gt;BMPlayer&lt;/a&gt; - A video player for iOS, based on AVPlayer, support the horizontal, vertical screen. support adjust volume, brigtness and seek by slide.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/VideoFlint/Cabbage"&gt;Cabbage&lt;/a&gt; - A video composition framework build on top of AVFoundation.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/noppefoxwolf/Kitsunebi"&gt;Kitsunebi&lt;/a&gt; - Overlay alpha channel video animation player view using OpenGLES.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/MillmanY/MMPlayerView"&gt;MMPlayerView&lt;/a&gt; - Custom AVPlayerLayer on view and transition player with good effect like YouTube and Facebook.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/mobileplayer/mobileplayer-ios"&gt;MobilePlayer&lt;/a&gt; - A powerful and completely customizable media player for iOS.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/NextLevel/NextLevelSessionExporter"&gt;NextLevelSessionExporter&lt;/a&gt; - Export and transcode media.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/piemonte/Player"&gt;Player&lt;/a&gt; - iOS video player, simple drop in component for playing and streaming media.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/davidlondono/PlayerView"&gt;PlayerView&lt;/a&gt; - Easy to use video player using a UIView, manage rate of reproduction, screenshots and callbacks-delegate for player state.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/HHK1/PryntTrimmerView"&gt;PryntTrimmerView&lt;/a&gt; - Trim and crop videos.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/sunlubo/SwiftFFmpeg"&gt;SwiftFFmpeg&lt;/a&gt; - A wrapper for the FFmpeg C API.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/dingwilson/SwiftVideoBackground"&gt;SwiftVideoBackground&lt;/a&gt; - Easy to Use UIView subclass for implementating a video background.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/VeinGuo/VGPlayer"&gt;VGPlayer&lt;/a&gt; - A simple iOS video player, support play local and network, background playback mode, automatic caching while playing.&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;&lt;a id="user-content-contributing" class="anchor" aria-hidden="true" href="#contributing"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Contributing&lt;/h3&gt;
&lt;p&gt;Please take a quick look at the &lt;a href=".github/CONTRIBUTING.md"&gt;contribution guidelines&lt;/a&gt; first. If you see a package or project here that is no longer maintained or is not a good fit, please submit a pull request to improve this file. Thank you to all &lt;a href="https://github.com/matteocrippa/awesome-swift/graphs/contributors"&gt;contributors&lt;/a&gt;; you rock!!&lt;/p&gt;
&lt;/article&gt;&lt;/div&gt;</description><author>matteocrippa</author><guid isPermaLink="false">https://github.com/matteocrippa/awesome-swift</guid><pubDate>Sat, 25 Jan 2020 00:18:00 GMT</pubDate></item><item><title>jakeheis/SwiftCLI #19 in Swift, This week</title><link>https://github.com/jakeheis/SwiftCLI</link><description>&lt;p&gt;&lt;i&gt;A powerful framework for developing CLIs in Swift&lt;/i&gt;&lt;/p&gt;&lt;div id="readme" class="md" data-path="README.md"&gt;&lt;article class="markdown-body entry-content p-5" itemprop="text"&gt;&lt;h1&gt;&lt;a id="user-content-swiftcli" class="anchor" aria-hidden="true" href="#swiftcli"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;SwiftCLI&lt;/h1&gt;
&lt;p&gt;&lt;a href="https://github.com/jakeheis/SwiftCLI/actions"&gt;&lt;img src="https://github.com/jakeheis/SwiftCLI/workflows/Test/badge.svg" alt="Build Status" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;A powerful framework for developing CLIs, from the simplest to the most complex, in Swift.&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;import&lt;/span&gt; &lt;span class="pl-en"&gt;SwiftCLI&lt;/span&gt;

&lt;span class="pl-k"&gt;class&lt;/span&gt; &lt;span class="pl-en"&gt;GreetCommand&lt;/span&gt;: &lt;span class="pl-e"&gt;Command &lt;/span&gt;{
    &lt;span class="pl-k"&gt;let&lt;/span&gt; name &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;greet&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;
    
    &lt;span class="pl-k"&gt;@Param&lt;/span&gt; &lt;span class="pl-k"&gt;var&lt;/span&gt; person&lt;span class="pl-k"&gt;:&lt;/span&gt; &lt;span class="pl-c1"&gt;String&lt;/span&gt;

    &lt;span class="pl-k"&gt;func&lt;/span&gt; &lt;span class="pl-en"&gt;execute&lt;/span&gt;() &lt;span class="pl-k"&gt;throws&lt;/span&gt; {
        stdout &lt;span class="pl-k"&gt;&amp;lt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;Hello &lt;span class="pl-pse"&gt;\(&lt;/span&gt;&lt;span class="pl-s1"&gt;person&lt;/span&gt;&lt;span class="pl-pse"&gt;&lt;span class="pl-s1"&gt;)&lt;/span&gt;&lt;/span&gt;!&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;
    }
}

&lt;span class="pl-k"&gt;let&lt;/span&gt; greeter &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;CLI&lt;/span&gt;(&lt;span class="pl-c1"&gt;name&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;greeter&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
greeter.&lt;span class="pl-smi"&gt;commands&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; [&lt;span class="pl-c1"&gt;GreetCommand&lt;/span&gt;()]
greeter.&lt;span class="pl-c1"&gt;go&lt;/span&gt;()&lt;/pre&gt;&lt;/div&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;~&lt;/span&gt; &lt;span class="pl-k"&gt;&amp;gt;&lt;/span&gt; greeter greet world
Hello world&lt;span class="pl-k"&gt;!&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;With SwiftCLI, you automatically get:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Command routing&lt;/li&gt;
&lt;li&gt;Option parsing&lt;/li&gt;
&lt;li&gt;Help messages&lt;/li&gt;
&lt;li&gt;Usage statements&lt;/li&gt;
&lt;li&gt;Error messages when commands are used incorrectly&lt;/li&gt;
&lt;li&gt;Zsh completions&lt;/li&gt;
&lt;/ul&gt;
&lt;h1&gt;&lt;a id="user-content-table-of-contents" class="anchor" aria-hidden="true" href="#table-of-contents"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Table of Contents&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="#installation"&gt;Installation&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#creating-a-cli"&gt;Creating a CLI&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#commands"&gt;Commands&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="#parameters"&gt;Parameters&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="#required-parameters"&gt;Required parameters&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#optional-parameters"&gt;Optional parameters&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#collected-parameters"&gt;Collected parameters&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="#options"&gt;Options&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="#flag-options"&gt;Flag options&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#keyed-options"&gt;Keyed options&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#option-groups"&gt;Option groups&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#global-options"&gt;Global options&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="#command-groups"&gt;Command groups&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#shell-completions"&gt;Shell completions&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#built-in-commands"&gt;Built-in commands&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#input"&gt;Input&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#external-tasks"&gt;External tasks&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#single-command-clis"&gt;Single command CLIs&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#customization"&gt;Customization&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="#aliases"&gt;Aliases&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="#running-your-cli"&gt;Running your CLI&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#example"&gt;Example&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-installation" class="anchor" aria-hidden="true" href="#installation"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Installation&lt;/h2&gt;
&lt;h3&gt;&lt;a id="user-content-ice-package-manager" class="anchor" aria-hidden="true" href="#ice-package-manager"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;a href="https://github.com/jakeheis/Ice"&gt;Ice Package Manager&lt;/a&gt;&lt;/h3&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;&amp;gt;&lt;/span&gt; ice add jakeheis/SwiftCLI&lt;/pre&gt;&lt;/div&gt;
&lt;h3&gt;&lt;a id="user-content-swift-package-manager" class="anchor" aria-hidden="true" href="#swift-package-manager"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Swift Package Manager&lt;/h3&gt;
&lt;p&gt;Add SwiftCLI as a dependency to your project:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;dependencies&lt;span class="pl-k"&gt;:&lt;/span&gt; [
    .&lt;span class="pl-c1"&gt;package&lt;/span&gt;(&lt;span class="pl-c1"&gt;url&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;https://github.com/jakeheis/SwiftCLI&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-c1"&gt;from&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;6.0.0&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
]&lt;/pre&gt;&lt;/div&gt;
&lt;h3&gt;&lt;a id="user-content-carthage" class="anchor" aria-hidden="true" href="#carthage"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Carthage&lt;/h3&gt;
&lt;pre&gt;&lt;code&gt;github "jakeheis/SwiftCLI" ~&amp;gt; 5.2.2
&lt;/code&gt;&lt;/pre&gt;
&lt;h3&gt;&lt;a id="user-content-cocoapods" class="anchor" aria-hidden="true" href="#cocoapods"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;CocoaPods&lt;/h3&gt;
&lt;div class="highlight highlight-source-ruby"&gt;&lt;pre&gt;pod &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;SwiftCLI&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;~&amp;gt; 6.0.0&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h2&gt;&lt;a id="user-content-creating-a-cli" class="anchor" aria-hidden="true" href="#creating-a-cli"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Creating a CLI&lt;/h2&gt;
&lt;p&gt;When creating a &lt;code&gt;CLI&lt;/code&gt;, a &lt;code&gt;name&lt;/code&gt; is required, and a &lt;code&gt;version&lt;/code&gt; and &lt;code&gt;description&lt;/code&gt; are both optional.&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;let&lt;/span&gt; myCli &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;CLI&lt;/span&gt;(&lt;span class="pl-c1"&gt;name&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;greeter&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-c1"&gt;version&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;1.0.0&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-c1"&gt;description&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;Greeter - a friendly greeter&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;You set commands through the &lt;code&gt;.commands&lt;/code&gt; property:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;myCli.&lt;span class="pl-smi"&gt;commands&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; [myCommand, myOtherCommand]&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Finally, to run the CLI, you call one of the &lt;code&gt;go&lt;/code&gt; methods.&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Use go if you want program execution to continue afterwards&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;myCli.&lt;span class="pl-c1"&gt;go&lt;/span&gt;() 

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Use goAndExit if you want your program to terminate after the CLI has finished&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;myCli.&lt;span class="pl-c1"&gt;goAndExit&lt;/span&gt;()

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Use go(with:) if you want to control the arguments which the CLI runs with&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;myCli.&lt;span class="pl-c1"&gt;go&lt;/span&gt;(&lt;span class="pl-c1"&gt;with&lt;/span&gt;: [&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;arg1&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;arg2&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;])&lt;/pre&gt;&lt;/div&gt;
&lt;h2&gt;&lt;a id="user-content-commands" class="anchor" aria-hidden="true" href="#commands"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Commands&lt;/h2&gt;
&lt;p&gt;In order to create a command, you must implement the &lt;code&gt;Command&lt;/code&gt; protocol. All that's required is to implement a &lt;code&gt;name&lt;/code&gt; property and an &lt;code&gt;execute&lt;/code&gt; function; the other properties of &lt;code&gt;Command&lt;/code&gt; are optional (though a &lt;code&gt;shortDescription&lt;/code&gt; is highly recommended). A simple hello world command could be created as such:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;class&lt;/span&gt; &lt;span class="pl-en"&gt;GreetCommand&lt;/span&gt;: &lt;span class="pl-e"&gt;Command &lt;/span&gt;{

    &lt;span class="pl-k"&gt;let&lt;/span&gt; name &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;greet&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;
    &lt;span class="pl-k"&gt;let&lt;/span&gt; shortDescription &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;Says hello to the world&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;

    &lt;span class="pl-k"&gt;func&lt;/span&gt; &lt;span class="pl-en"&gt;execute&lt;/span&gt;() &lt;span class="pl-k"&gt;throws&lt;/span&gt;  {
        stdout &lt;span class="pl-k"&gt;&amp;lt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;Hello world!&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;
    }

}&lt;/pre&gt;&lt;/div&gt;
&lt;h3&gt;&lt;a id="user-content-parameters" class="anchor" aria-hidden="true" href="#parameters"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Parameters&lt;/h3&gt;
&lt;p&gt;A command can specify what parameters it accepts through certain instance variables. Using reflection, SwiftCLI will identify property wrappers of type &lt;code&gt;@Param&lt;/code&gt; and &lt;code&gt;@CollectedParam&lt;/code&gt;. These properties should appear in the order that the command expects the user to pass the arguments. All required parameters must come first, followed by any optional parameters, followed by at most one collected parameter.&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;class&lt;/span&gt; &lt;span class="pl-en"&gt;GreetCommand&lt;/span&gt;: &lt;span class="pl-e"&gt;Command &lt;/span&gt;{
    &lt;span class="pl-k"&gt;let&lt;/span&gt; name &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;greet&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;

    &lt;span class="pl-k"&gt;@Param&lt;/span&gt; &lt;span class="pl-k"&gt;var&lt;/span&gt; first&lt;span class="pl-k"&gt;:&lt;/span&gt; &lt;span class="pl-c1"&gt;String&lt;/span&gt;
    &lt;span class="pl-k"&gt;@Param&lt;/span&gt; &lt;span class="pl-k"&gt;var&lt;/span&gt; second&lt;span class="pl-k"&gt;:&lt;/span&gt; &lt;span class="pl-c1"&gt;String&lt;/span&gt;&lt;span class="pl-k"&gt;?&lt;/span&gt;
    &lt;span class="pl-k"&gt;@CollectedParam&lt;/span&gt; &lt;span class="pl-k"&gt;var&lt;/span&gt; remaining&lt;span class="pl-k"&gt;:&lt;/span&gt; [&lt;span class="pl-c1"&gt;String&lt;/span&gt;]
}&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;In this example, if the user runs &lt;code&gt;greeter greet Jack Jill up the hill&lt;/code&gt;, &lt;code&gt;first&lt;/code&gt; will contain the value &lt;code&gt;Jack&lt;/code&gt;, &lt;code&gt;second&lt;/code&gt; will contain the value &lt;code&gt;Jill&lt;/code&gt;, and &lt;code&gt;remaining&lt;/code&gt; will contain the value &lt;code&gt;["up", "the", "hill"]&lt;/code&gt;.&lt;/p&gt;
&lt;h4&gt;&lt;a id="user-content-param" class="anchor" aria-hidden="true" href="#param"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;@Param&lt;/h4&gt;
&lt;p&gt;Individual parameters take the form of the property wrapper &lt;code&gt;@Param&lt;/code&gt;. Properties wrapped by &lt;code&gt;@Param&lt;/code&gt; can be required or optional. If the command is not passed enough arguments to satisfy all required parameters, the command will fail.&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;class&lt;/span&gt; &lt;span class="pl-en"&gt;GreetCommand&lt;/span&gt;: &lt;span class="pl-e"&gt;Command &lt;/span&gt;{
    &lt;span class="pl-k"&gt;let&lt;/span&gt; name &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;greet&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;

    &lt;span class="pl-k"&gt;@Param&lt;/span&gt; &lt;span class="pl-k"&gt;var&lt;/span&gt; person&lt;span class="pl-k"&gt;:&lt;/span&gt; &lt;span class="pl-c1"&gt;String&lt;/span&gt;
    &lt;span class="pl-k"&gt;@Param&lt;/span&gt; &lt;span class="pl-k"&gt;var&lt;/span&gt; followUp&lt;span class="pl-k"&gt;:&lt;/span&gt; &lt;span class="pl-c1"&gt;String&lt;/span&gt;

    &lt;span class="pl-k"&gt;func&lt;/span&gt; &lt;span class="pl-en"&gt;execute&lt;/span&gt;() &lt;span class="pl-k"&gt;throws&lt;/span&gt; {
        stdout &lt;span class="pl-k"&gt;&amp;lt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;Hey there, &lt;span class="pl-pse"&gt;\(&lt;/span&gt;&lt;span class="pl-s1"&gt;person&lt;/span&gt;&lt;span class="pl-pse"&gt;&lt;span class="pl-s1"&gt;)&lt;/span&gt;&lt;/span&gt;!&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;
        stdout &lt;span class="pl-k"&gt;&amp;lt;&amp;lt;&amp;lt;&lt;/span&gt; followUp
    }
}&lt;/pre&gt;&lt;/div&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;~&lt;/span&gt; &lt;span class="pl-k"&gt;&amp;gt;&lt;/span&gt; greeter greet Jack

Usage: greeter greet &lt;span class="pl-k"&gt;&amp;lt;&lt;/span&gt;person&lt;span class="pl-k"&gt;&amp;gt;&lt;/span&gt; &lt;span class="pl-k"&gt;&amp;lt;&lt;/span&gt;followUp&lt;span class="pl-k"&gt;&amp;gt;&lt;/span&gt; [options]

Options:
  -h, --help      Show &lt;span class="pl-c1"&gt;help&lt;/span&gt; information

Error: &lt;span class="pl-c1"&gt;command&lt;/span&gt; requires exactly 2 arguments

&lt;span class="pl-k"&gt;~&lt;/span&gt; &lt;span class="pl-k"&gt;&amp;gt;&lt;/span&gt; greeter greet Jack &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;What's up?&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;
Hey there, Jack&lt;span class="pl-k"&gt;!&lt;/span&gt;
What&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;s up?&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;If the user does not pass enough arguments to satisfy all optional parameters, the value of these unsatisfied parameters will be &lt;code&gt;nil&lt;/code&gt;.&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;class&lt;/span&gt; &lt;span class="pl-en"&gt;GreetCommand&lt;/span&gt;: &lt;span class="pl-e"&gt;Command &lt;/span&gt;{
    &lt;span class="pl-k"&gt;let&lt;/span&gt; name &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;greet&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;

    &lt;span class="pl-k"&gt;@Param&lt;/span&gt; &lt;span class="pl-k"&gt;var&lt;/span&gt; person&lt;span class="pl-k"&gt;:&lt;/span&gt; &lt;span class="pl-c1"&gt;String&lt;/span&gt;
    &lt;span class="pl-k"&gt;@Param&lt;/span&gt; &lt;span class="pl-k"&gt;var&lt;/span&gt; followUp&lt;span class="pl-k"&gt;:&lt;/span&gt; &lt;span class="pl-c1"&gt;String&lt;/span&gt;&lt;span class="pl-k"&gt;?&lt;/span&gt; &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Note: String? in this example, not String&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;
    &lt;span class="pl-k"&gt;func&lt;/span&gt; &lt;span class="pl-en"&gt;execute&lt;/span&gt;() &lt;span class="pl-k"&gt;throws&lt;/span&gt; {
        stdout &lt;span class="pl-k"&gt;&amp;lt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;Hey there, &lt;span class="pl-pse"&gt;\(&lt;/span&gt;&lt;span class="pl-s1"&gt;person&lt;/span&gt;&lt;span class="pl-pse"&gt;&lt;span class="pl-s1"&gt;)&lt;/span&gt;&lt;/span&gt;!&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;
        &lt;span class="pl-k"&gt;if&lt;/span&gt; &lt;span class="pl-k"&gt;let&lt;/span&gt; followUpText &lt;span class="pl-k"&gt;=&lt;/span&gt; followUp {
            stdout &lt;span class="pl-k"&gt;&amp;lt;&amp;lt;&amp;lt;&lt;/span&gt; followUpText
        }
    }
}&lt;/pre&gt;&lt;/div&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;~&lt;/span&gt; &lt;span class="pl-k"&gt;&amp;gt;&lt;/span&gt; greeter greet Jack
Hey there, Jack&lt;span class="pl-k"&gt;!&lt;/span&gt;
&lt;span class="pl-k"&gt;~&lt;/span&gt; &lt;span class="pl-k"&gt;&amp;gt;&lt;/span&gt; greeter greet Jack &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;What's up?&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;
Hello, Jack&lt;span class="pl-k"&gt;!&lt;/span&gt;
What&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;s up?&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h4&gt;&lt;a id="user-content-collectedparam" class="anchor" aria-hidden="true" href="#collectedparam"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;@CollectedParam&lt;/h4&gt;
&lt;p&gt;Commands may have a single collected parameter after all the other parameters called a &lt;code&gt;@CollectedParam&lt;/code&gt;. This parameter allows the user to pass any number of arguments, and these arguments will be collected into the array wrapped by the collected parameter. The property wrapped by &lt;code&gt;@CollectedParam&lt;/code&gt; &lt;strong&gt;must&lt;/strong&gt; be an array. By default, &lt;code&gt;@CollectedParam&lt;/code&gt; does not require the user to pass any arguments. The parameter can require a certain number of values by using the &lt;code&gt;@CollectedParam(minCount:)&lt;/code&gt; initializer.&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;class&lt;/span&gt; &lt;span class="pl-en"&gt;GreetCommand&lt;/span&gt;: &lt;span class="pl-e"&gt;Command &lt;/span&gt;{
    &lt;span class="pl-k"&gt;let&lt;/span&gt; name &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;greet&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;

    &lt;span class="pl-k"&gt;@CollectedParam&lt;/span&gt;(minCount&lt;span class="pl-k"&gt;:&lt;/span&gt; &lt;span class="pl-c1"&gt;1&lt;/span&gt;) &lt;span class="pl-k"&gt;var&lt;/span&gt; people&lt;span class="pl-k"&gt;:&lt;/span&gt; [&lt;span class="pl-c1"&gt;String&lt;/span&gt;]

    &lt;span class="pl-k"&gt;func&lt;/span&gt; &lt;span class="pl-en"&gt;execute&lt;/span&gt;() &lt;span class="pl-k"&gt;throws&lt;/span&gt; {
        &lt;span class="pl-k"&gt;for&lt;/span&gt; person &lt;span class="pl-k"&gt;in&lt;/span&gt; people {
            stdout &lt;span class="pl-k"&gt;&amp;lt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;Hey there, &lt;span class="pl-pse"&gt;\(&lt;/span&gt;&lt;span class="pl-s1"&gt;person&lt;/span&gt;&lt;span class="pl-pse"&gt;&lt;span class="pl-s1"&gt;)&lt;/span&gt;&lt;/span&gt;!&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;
        }        
    }
}&lt;/pre&gt;&lt;/div&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;~&lt;/span&gt; &lt;span class="pl-k"&gt;&amp;gt;&lt;/span&gt; greeter greet Jack
Hey there, Jack&lt;span class="pl-k"&gt;!&lt;/span&gt;
&lt;span class="pl-k"&gt;~&lt;/span&gt; &lt;span class="pl-k"&gt;&amp;gt;&lt;/span&gt; greeter greet Jack Jill Water
Hey there, Jack&lt;span class="pl-k"&gt;!&lt;/span&gt;
Hey there, Jill&lt;span class="pl-k"&gt;!&lt;/span&gt;
Hey there, Water&lt;span class="pl-k"&gt;!&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h4&gt;&lt;a id="user-content-value-type-of-parameter" class="anchor" aria-hidden="true" href="#value-type-of-parameter"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Value type of parameter&lt;/h4&gt;
&lt;p&gt;With all of these parameter property wrappers, any type can be used so long as it conforms to &lt;code&gt;ConvertibleFromString&lt;/code&gt;. Most primitive types (e.g. &lt;code&gt;Int&lt;/code&gt;) conform to &lt;code&gt;ConvertibleFromString&lt;/code&gt; already, as do enums with raw values that are primitive types.&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;class&lt;/span&gt; &lt;span class="pl-en"&gt;GreetCommand&lt;/span&gt;: &lt;span class="pl-e"&gt;Command &lt;/span&gt;{
    &lt;span class="pl-k"&gt;let&lt;/span&gt; name &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;greet&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;

    &lt;span class="pl-k"&gt;@Param&lt;/span&gt; &lt;span class="pl-k"&gt;var&lt;/span&gt; number&lt;span class="pl-k"&gt;:&lt;/span&gt; &lt;span class="pl-c1"&gt;Int&lt;/span&gt;

    &lt;span class="pl-k"&gt;func&lt;/span&gt; &lt;span class="pl-en"&gt;execute&lt;/span&gt;() &lt;span class="pl-k"&gt;throws&lt;/span&gt; {
        stdout &lt;span class="pl-k"&gt;&amp;lt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;Hey there, number &lt;span class="pl-pse"&gt;\(&lt;/span&gt;&lt;span class="pl-s1"&gt;number&lt;/span&gt;&lt;span class="pl-pse"&gt;&lt;span class="pl-s1"&gt;)&lt;/span&gt;&lt;/span&gt;!&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;     
    }
}&lt;/pre&gt;&lt;/div&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;~&lt;/span&gt; &lt;span class="pl-k"&gt;&amp;gt;&lt;/span&gt; greeter greet Jack

Usage: greeter greet &lt;span class="pl-k"&gt;&amp;lt;&lt;/span&gt;number&lt;span class="pl-k"&gt;&amp;gt;&lt;/span&gt; [options]

Options:
  -h, --help      Show &lt;span class="pl-c1"&gt;help&lt;/span&gt; information

Error: invalid value passed to &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;number&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;&lt;span class="pl-k"&gt;;&lt;/span&gt; expected Int

&lt;span class="pl-k"&gt;~&lt;/span&gt; &lt;span class="pl-k"&gt;&amp;gt;&lt;/span&gt; greeter greet 4
Hey there, number 4&lt;span class="pl-k"&gt;!&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Parameters with enum types which conform to &lt;code&gt;CaseIterable&lt;/code&gt; have additional specialized behavior. In an error message, the allowed values for that parameter will be spelled out.&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;class&lt;/span&gt; &lt;span class="pl-en"&gt;GreetCommand&lt;/span&gt;: &lt;span class="pl-e"&gt;Command &lt;/span&gt;{
    
    &lt;span class="pl-k"&gt;let&lt;/span&gt; name &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;greet&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;
    
    &lt;span class="pl-k"&gt;enum&lt;/span&gt; &lt;span class="pl-en"&gt;Volume&lt;/span&gt;: &lt;span class="pl-e"&gt;&lt;span class="pl-c1"&gt;String&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-e"&gt;ConvertibleFromString&lt;/span&gt;, &lt;span class="pl-e"&gt;CaseIterable &lt;/span&gt;{
        &lt;span class="pl-k"&gt;case&lt;/span&gt; &lt;span class="pl-c1"&gt;loud&lt;/span&gt;
        &lt;span class="pl-k"&gt;case&lt;/span&gt; &lt;span class="pl-c1"&gt;quiet&lt;/span&gt;
    }
    
    &lt;span class="pl-k"&gt;@Param&lt;/span&gt; &lt;span class="pl-k"&gt;var&lt;/span&gt; volume&lt;span class="pl-k"&gt;:&lt;/span&gt; Volume
    
    &lt;span class="pl-k"&gt;func&lt;/span&gt; &lt;span class="pl-en"&gt;execute&lt;/span&gt;() &lt;span class="pl-k"&gt;throws&lt;/span&gt; {
        &lt;span class="pl-k"&gt;let&lt;/span&gt; greeting &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;Hello world!&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;
        
        &lt;span class="pl-k"&gt;switch&lt;/span&gt; volume {
        &lt;span class="pl-k"&gt;case&lt;/span&gt; .&lt;span class="pl-smi"&gt;loud&lt;/span&gt;&lt;span class="pl-k"&gt;:&lt;/span&gt; stdout &lt;span class="pl-k"&gt;&amp;lt;&amp;lt;&amp;lt;&lt;/span&gt; greeting.&lt;span class="pl-c1"&gt;uppercased&lt;/span&gt;()
        &lt;span class="pl-k"&gt;case&lt;/span&gt; .&lt;span class="pl-smi"&gt;quiet&lt;/span&gt;&lt;span class="pl-k"&gt;:&lt;/span&gt; stdout &lt;span class="pl-k"&gt;&amp;lt;&amp;lt;&amp;lt;&lt;/span&gt; greeting.&lt;span class="pl-c1"&gt;lowercased&lt;/span&gt;()
        }
        
    }
}&lt;/pre&gt;&lt;/div&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;~&lt;/span&gt; &lt;span class="pl-k"&gt;&amp;gt;&lt;/span&gt; greeter greet Jack

Usage: greeter greet &lt;span class="pl-k"&gt;&amp;lt;&lt;/span&gt;volume&lt;span class="pl-k"&gt;&amp;gt;&lt;/span&gt; [options]

Options:
  -h, --help      Show &lt;span class="pl-c1"&gt;help&lt;/span&gt; information

Error: invalid value passed to &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;volume&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;&lt;span class="pl-k"&gt;;&lt;/span&gt; expected one of: loud, quiet

&lt;span class="pl-k"&gt;~&lt;/span&gt; &lt;span class="pl-k"&gt;&amp;gt;&lt;/span&gt; greet greet loud
HELLO WORLD&lt;span class="pl-k"&gt;!&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;To conform a custom type to &lt;code&gt;ConvertibleFromString&lt;/code&gt;, simply implement one function:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;extension&lt;/span&gt; &lt;span class="pl-en"&gt;MyType&lt;/span&gt;: &lt;span class="pl-e"&gt;ConvertibleFromString &lt;/span&gt;{
    &lt;span class="pl-k"&gt;init?&lt;/span&gt;(&lt;span class="pl-smi"&gt;&lt;span class="pl-en"&gt;input&lt;/span&gt;&lt;/span&gt;: &lt;span class="pl-c1"&gt;String&lt;/span&gt;) {
        &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Construct an instance of MyType from the String, or return nil if not possible&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;        &lt;span class="pl-k"&gt;...&lt;/span&gt;
    }
}&lt;/pre&gt;&lt;/div&gt;
&lt;h3&gt;&lt;a id="user-content-options" class="anchor" aria-hidden="true" href="#options"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Options&lt;/h3&gt;
&lt;p&gt;Commands have support for two types of options: flag options and keyed options. Both types of options can be denoted by either a dash followed by a single letter (e.g. &lt;code&gt;git commit -a&lt;/code&gt;) or two dashes followed by the option name (e.g. &lt;code&gt;git commit --all&lt;/code&gt;). Single letter options can be cascaded into a single dash followed by all the desired options: &lt;code&gt;git commit -am "message"&lt;/code&gt; == &lt;code&gt;git commit -a -m "message"&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;Options are specified with property wrappers on the command class, just like parameters:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;class&lt;/span&gt; &lt;span class="pl-en"&gt;ExampleCommand&lt;/span&gt;: &lt;span class="pl-e"&gt;Command &lt;/span&gt;{
    &lt;span class="pl-k"&gt;...&lt;/span&gt;
    &lt;span class="pl-k"&gt;@Flag&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;-a&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;--all&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
    &lt;span class="pl-k"&gt;var&lt;/span&gt; flag&lt;span class="pl-k"&gt;:&lt;/span&gt; &lt;span class="pl-c1"&gt;Bool&lt;/span&gt;

    &lt;span class="pl-k"&gt;@Key&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;-t&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;--times&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
    &lt;span class="pl-k"&gt;var&lt;/span&gt; key&lt;span class="pl-k"&gt;:&lt;/span&gt; &lt;span class="pl-c1"&gt;Int&lt;/span&gt;&lt;span class="pl-k"&gt;?&lt;/span&gt;
    &lt;span class="pl-k"&gt;...&lt;/span&gt;
}&lt;/pre&gt;&lt;/div&gt;
&lt;h4&gt;&lt;a id="user-content-flags" class="anchor" aria-hidden="true" href="#flags"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Flags&lt;/h4&gt;
&lt;p&gt;Flags are simple options that act as boolean switches. For example, if you were to implement &lt;code&gt;git commit&lt;/code&gt;, &lt;code&gt;-a&lt;/code&gt; would be a flag option. They take the form of booleans wrapped by &lt;code&gt;@Flag&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;The &lt;code&gt;GreetCommand&lt;/code&gt; could take a "loudly" flag:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;class&lt;/span&gt; &lt;span class="pl-en"&gt;GreetCommand&lt;/span&gt;: &lt;span class="pl-e"&gt;Command &lt;/span&gt;{

    &lt;span class="pl-k"&gt;...&lt;/span&gt;

    &lt;span class="pl-k"&gt;@Flag&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;-l&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;--loudly&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, description&lt;span class="pl-k"&gt;:&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;Say the greeting loudly&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
    &lt;span class="pl-k"&gt;var&lt;/span&gt; loudly&lt;span class="pl-k"&gt;:&lt;/span&gt; &lt;span class="pl-c1"&gt;Bool&lt;/span&gt;

    &lt;span class="pl-k"&gt;func&lt;/span&gt; &lt;span class="pl-en"&gt;execute&lt;/span&gt;() &lt;span class="pl-k"&gt;throws&lt;/span&gt; {
        &lt;span class="pl-k"&gt;if&lt;/span&gt; loudly {
             &lt;span class="pl-k"&gt;...&lt;/span&gt;
        } &lt;span class="pl-k"&gt;else&lt;/span&gt; {
            &lt;span class="pl-k"&gt;...&lt;/span&gt;
        }
    }

}&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;A related option type is &lt;code&gt;@CounterFlag&lt;/code&gt;, which counts the nubmer of times the user passes the same flag. &lt;code&gt;@CounterFlag&lt;/code&gt; can only wrap properties of type &lt;code&gt;Int&lt;/code&gt;. For example, with a flag declaration like:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;class&lt;/span&gt; &lt;span class="pl-en"&gt;GreetCommand&lt;/span&gt;: &lt;span class="pl-e"&gt;Command &lt;/span&gt;{
    &lt;span class="pl-k"&gt;...&lt;/span&gt;
    &lt;span class="pl-k"&gt;@CounterFlag&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;-s&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;--softly&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, description&lt;span class="pl-k"&gt;:&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;Say the greeting softly&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
    &lt;span class="pl-k"&gt;var&lt;/span&gt; softly&lt;span class="pl-k"&gt;:&lt;/span&gt; &lt;span class="pl-c1"&gt;Int&lt;/span&gt;
    &lt;span class="pl-k"&gt;...&lt;/span&gt;
}&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;the user can write &lt;code&gt;greeter greet -s -s&lt;/code&gt;, and &lt;code&gt;softly.value&lt;/code&gt; will be &lt;code&gt;2&lt;/code&gt;.&lt;/p&gt;
&lt;h4&gt;&lt;a id="user-content-keys" class="anchor" aria-hidden="true" href="#keys"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Keys&lt;/h4&gt;
&lt;p&gt;Keys are options that have an associated value. Using "git commit" as an example, "-m" would be a keyed option, as it has an associated value - the commit message. They take the form of variables wrapped by '@Key`.&lt;/p&gt;
&lt;p&gt;The &lt;code&gt;GreetCommand&lt;/code&gt; could take a "number of times" option:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;class&lt;/span&gt; &lt;span class="pl-en"&gt;GreetCommand&lt;/span&gt;: &lt;span class="pl-e"&gt;Command &lt;/span&gt;{

    &lt;span class="pl-k"&gt;...&lt;/span&gt;

    &lt;span class="pl-k"&gt;@Key&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;-n&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;--number-of-times&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, description&lt;span class="pl-k"&gt;:&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;Say the greeting a certain number of times&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
    &lt;span class="pl-k"&gt;var&lt;/span&gt; numberOfTimes&lt;span class="pl-k"&gt;:&lt;/span&gt; &lt;span class="pl-c1"&gt;Int&lt;/span&gt;&lt;span class="pl-k"&gt;?&lt;/span&gt;

    &lt;span class="pl-k"&gt;func&lt;/span&gt; &lt;span class="pl-en"&gt;execute&lt;/span&gt;() &lt;span class="pl-k"&gt;throws&lt;/span&gt; {
        &lt;span class="pl-k"&gt;for&lt;/span&gt; i &lt;span class="pl-k"&gt;in&lt;/span&gt; &lt;span class="pl-c1"&gt;0&lt;/span&gt;&lt;span class="pl-k"&gt;..&amp;lt;&lt;/span&gt;(numberOfTimes &lt;span class="pl-k"&gt;??&lt;/span&gt; &lt;span class="pl-c1"&gt;1&lt;/span&gt;) {
            &lt;span class="pl-k"&gt;...&lt;/span&gt;
        }
    }

}&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;The variable wrapped by &lt;code&gt;@Key&lt;/code&gt; can be any type conforming to &lt;code&gt;ConvertibleFromString&lt;/code&gt; as described above. It &lt;strong&gt;must&lt;/strong&gt; be optional, or the Swift compiler will crash.&lt;/p&gt;
&lt;p&gt;A related option type is &lt;code&gt;VariadicKey&lt;/code&gt;, which allows the user to pass the same key multiples times with different values. For example, with a key declaration like:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;class&lt;/span&gt; &lt;span class="pl-en"&gt;GreetCommand&lt;/span&gt;: &lt;span class="pl-e"&gt;Command &lt;/span&gt;{
    &lt;span class="pl-k"&gt;...&lt;/span&gt;
    &lt;span class="pl-k"&gt;@VariadicKey&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;-l&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;--location&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, description&lt;span class="pl-k"&gt;:&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;Say the greeting in a certain location&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
    &lt;span class="pl-k"&gt;var&lt;/span&gt; locations&lt;span class="pl-k"&gt;:&lt;/span&gt; [&lt;span class="pl-c1"&gt;String&lt;/span&gt;]
    &lt;span class="pl-k"&gt;...&lt;/span&gt;
}&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;the user can write &lt;code&gt;greeter greet -l Chicago -l NYC&lt;/code&gt;, and &lt;code&gt;locations.value&lt;/code&gt; will be &lt;code&gt;["Chicago", "NYC"]&lt;/code&gt;. The variable wrapped by &lt;code&gt;@VariadicKey&lt;/code&gt; must be an array of a type conforming to &lt;code&gt;ConvertibleFromString&lt;/code&gt;.&lt;/p&gt;
&lt;h4&gt;&lt;a id="user-content-option-groups" class="anchor" aria-hidden="true" href="#option-groups"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Option groups&lt;/h4&gt;
&lt;p&gt;The relationship between multiple options can be specified through option groups. Option groups allow a command to specify that the user must pass at most one option of a group (passing more than one is an error), must pass exactly one option of a group (passing zero or more than one is an error), or must pass one or more options of a group (passing zero is an error).&lt;/p&gt;
&lt;p&gt;To add option groups, a &lt;code&gt;Command&lt;/code&gt; should implement the property &lt;code&gt;optionGroups&lt;/code&gt;. Option groups refer to options through the &lt;code&gt;$&lt;/code&gt; syntax. For example, if the &lt;code&gt;GreetCommand&lt;/code&gt; had a &lt;code&gt;loudly&lt;/code&gt; flag and a &lt;code&gt;whisper&lt;/code&gt; flag but didn't want the user to be able to pass both, an &lt;code&gt;OptionGroup&lt;/code&gt; could be used:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;class&lt;/span&gt; &lt;span class="pl-en"&gt;GreetCommand&lt;/span&gt;: &lt;span class="pl-e"&gt;Command &lt;/span&gt;{

    &lt;span class="pl-k"&gt;...&lt;/span&gt;

    &lt;span class="pl-k"&gt;@Flag&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;-l&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;--loudly&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, description&lt;span class="pl-k"&gt;:&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;Say the greeting loudly&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
    &lt;span class="pl-k"&gt;var&lt;/span&gt; loudly&lt;span class="pl-k"&gt;:&lt;/span&gt; &lt;span class="pl-c1"&gt;Bool&lt;/span&gt;

    &lt;span class="pl-k"&gt;@Flag&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;-w&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;--whisper&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, description&lt;span class="pl-k"&gt;:&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;Whisper the greeting&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
    &lt;span class="pl-k"&gt;var&lt;/span&gt; whisper&lt;span class="pl-k"&gt;:&lt;/span&gt; &lt;span class="pl-c1"&gt;Bool&lt;/span&gt;
    
    &lt;span class="pl-k"&gt;var&lt;/span&gt; optionGroups&lt;span class="pl-k"&gt;:&lt;/span&gt; [OptionGroup] {
        &lt;span class="pl-k"&gt;return&lt;/span&gt; [.&lt;span class="pl-c1"&gt;atMostOne&lt;/span&gt;($loudly, $whipser)] &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Note: $loudly and $whisper, not loudly and whisper&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;    }

    &lt;span class="pl-k"&gt;func&lt;/span&gt; &lt;span class="pl-en"&gt;execute&lt;/span&gt;() &lt;span class="pl-k"&gt;throws&lt;/span&gt; {
        &lt;span class="pl-k"&gt;if&lt;/span&gt; loudly {
            &lt;span class="pl-k"&gt;...&lt;/span&gt;
        } &lt;span class="pl-k"&gt;else&lt;/span&gt; &lt;span class="pl-k"&gt;if&lt;/span&gt; whisper {
            &lt;span class="pl-k"&gt;...&lt;/span&gt;
        } &lt;span class="pl-k"&gt;else&lt;/span&gt; {
            &lt;span class="pl-k"&gt;...&lt;/span&gt;
        }
    }

}&lt;/pre&gt;&lt;/div&gt;
&lt;h4&gt;&lt;a id="user-content-global-options" class="anchor" aria-hidden="true" href="#global-options"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Global options&lt;/h4&gt;
&lt;p&gt;Global options can be used to specify that every command should have a certain option. This is how the &lt;code&gt;-h&lt;/code&gt; flag is implemented for all commands. Simply add an option to CLI's &lt;code&gt;.globalOptions&lt;/code&gt; array (and optionally extend &lt;code&gt;Command&lt;/code&gt; to make the option easy to access in your commands):&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;private&lt;/span&gt; &lt;span class="pl-k"&gt;let&lt;/span&gt; verboseFlag &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;Flag&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;-v&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
&lt;span class="pl-k"&gt;extension&lt;/span&gt; &lt;span class="pl-en"&gt;Command&lt;/span&gt; {
    &lt;span class="pl-k"&gt;var&lt;/span&gt; verbose&lt;span class="pl-k"&gt;:&lt;/span&gt; &lt;span class="pl-c1"&gt;Bool&lt;/span&gt; {
        &lt;span class="pl-k"&gt;return&lt;/span&gt; verboseFlag.&lt;span class="pl-c1"&gt;value&lt;/span&gt;
    }
}

myCli.&lt;span class="pl-smi"&gt;globalOptions&lt;/span&gt;.&lt;span class="pl-c1"&gt;append&lt;/span&gt;(verboseFlag)&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;By default, every command has a &lt;code&gt;-h&lt;/code&gt; flag which prints help information. You can turn this off by setting the CLI &lt;code&gt;helpFlag&lt;/code&gt; to nil:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;myCli.&lt;span class="pl-smi"&gt;helpFlag&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;nil&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h4&gt;&lt;a id="user-content-usage-of-options" class="anchor" aria-hidden="true" href="#usage-of-options"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Usage of options&lt;/h4&gt;
&lt;p&gt;As seen in the above examples, &lt;code&gt;@Flag&lt;/code&gt; and &lt;code&gt;@Key&lt;/code&gt; both take an optional &lt;code&gt;description&lt;/code&gt; parameter. A concise description of what the option does should be included here. This allows the &lt;code&gt;HelpMessageGenerator&lt;/code&gt; to generate a fully informative usage statement for the command.&lt;/p&gt;
&lt;p&gt;A command's usage statement is shown in three situations:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;The user passed an option that the command does not support -- &lt;code&gt;greeter greet -z&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;The user passed the wrong number of arguments&lt;/li&gt;
&lt;li&gt;The command's help was invoked -- &lt;code&gt;greeter greet -h&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;~&lt;/span&gt; &lt;span class="pl-k"&gt;&amp;gt;&lt;/span&gt; greeter greet -h

Usage: greeter greet &lt;span class="pl-k"&gt;&amp;lt;&lt;/span&gt;person&lt;span class="pl-k"&gt;&amp;gt;&lt;/span&gt; [options]

Options:
  -l, --loudly                          Say the greeting loudly
  -n, --number-of-times &lt;span class="pl-k"&gt;&amp;lt;&lt;/span&gt;value&lt;span class="pl-k"&gt;&amp;gt;&lt;/span&gt;         Say the greeting a certain number of &lt;span class="pl-c1"&gt;times&lt;/span&gt;
  -h, --help                            Show &lt;span class="pl-c1"&gt;help&lt;/span&gt; information &lt;span class="pl-k"&gt;for&lt;/span&gt; this &lt;span class="pl-c1"&gt;command&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;h2&gt;&lt;a id="user-content-command-groups" class="anchor" aria-hidden="true" href="#command-groups"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Command groups&lt;/h2&gt;
&lt;p&gt;Command groups provide a way for related commands to be nested under a certain namespace. Groups can themselves contain other groups.&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;class&lt;/span&gt; &lt;span class="pl-en"&gt;ConfigGroup&lt;/span&gt;: &lt;span class="pl-e"&gt;CommandGroup &lt;/span&gt;{
    &lt;span class="pl-k"&gt;let&lt;/span&gt; name &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;config&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;
    &lt;span class="pl-k"&gt;let&lt;/span&gt; children &lt;span class="pl-k"&gt;=&lt;/span&gt; [&lt;span class="pl-c1"&gt;GetCommand&lt;/span&gt;(), &lt;span class="pl-c1"&gt;SetCommand&lt;/span&gt;()]
}
&lt;span class="pl-k"&gt;class&lt;/span&gt; &lt;span class="pl-en"&gt;GetCommand&lt;/span&gt;: &lt;span class="pl-e"&gt;Command &lt;/span&gt;{
    &lt;span class="pl-k"&gt;let&lt;/span&gt; name &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;get&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;
    &lt;span class="pl-k"&gt;func&lt;/span&gt; &lt;span class="pl-en"&gt;execute&lt;/span&gt;() &lt;span class="pl-k"&gt;throws&lt;/span&gt; {}
}
&lt;span class="pl-k"&gt;class&lt;/span&gt; &lt;span class="pl-en"&gt;SetCommand&lt;/span&gt;: &lt;span class="pl-e"&gt;Command &lt;/span&gt;{
    &lt;span class="pl-k"&gt;let&lt;/span&gt; name &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;set&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;
    &lt;span class="pl-k"&gt;func&lt;/span&gt; &lt;span class="pl-en"&gt;execute&lt;/span&gt;() &lt;span class="pl-k"&gt;throws&lt;/span&gt; {}
}&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;You can add a command group to your CLI's &lt;code&gt;.commands&lt;/code&gt; array just as add a normal command:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;greeter.&lt;span class="pl-smi"&gt;commands&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; [&lt;span class="pl-c1"&gt;ConfigGroup&lt;/span&gt;()]&lt;/pre&gt;&lt;/div&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;&amp;gt;&lt;/span&gt; greeter config

Usage: greeter config &lt;span class="pl-k"&gt;&amp;lt;&lt;/span&gt;command&lt;span class="pl-k"&gt;&amp;gt;&lt;/span&gt; [options]

Commands:
  get
  &lt;span class="pl-c1"&gt;set&lt;/span&gt;

&lt;span class="pl-k"&gt;&amp;gt;&lt;/span&gt; greeter config &lt;span class="pl-c1"&gt;set&lt;/span&gt;
&lt;span class="pl-k"&gt;&amp;gt;&lt;/span&gt; greeter config get&lt;/pre&gt;&lt;/div&gt;
&lt;h2&gt;&lt;a id="user-content-shell-completions" class="anchor" aria-hidden="true" href="#shell-completions"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Shell completions&lt;/h2&gt;
&lt;p&gt;Zsh completions can be automatically generated for your CLI.&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;let&lt;/span&gt; myCli &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;CLI&lt;/span&gt;(&lt;span class="pl-k"&gt;...&lt;/span&gt;)

&lt;span class="pl-k"&gt;let&lt;/span&gt; generator &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;ZshCompletionGenerator&lt;/span&gt;(&lt;span class="pl-c1"&gt;cli&lt;/span&gt;: myCli)
generator.&lt;span class="pl-c1"&gt;writeCompletions&lt;/span&gt;()&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Completions will be automatically generated for command names and options. Parameter completion mode can be specified:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;@Param&lt;/span&gt;(completion&lt;span class="pl-k"&gt;:&lt;/span&gt; .&lt;span class="pl-c1"&gt;none&lt;/span&gt;)
&lt;span class="pl-k"&gt;var&lt;/span&gt; noCompletions&lt;span class="pl-k"&gt;:&lt;/span&gt; &lt;span class="pl-c1"&gt;String&lt;/span&gt;

&lt;span class="pl-k"&gt;@Param&lt;/span&gt;(completion&lt;span class="pl-k"&gt;:&lt;/span&gt; .&lt;span class="pl-smi"&gt;filename&lt;/span&gt;)
&lt;span class="pl-k"&gt;var&lt;/span&gt; aFile&lt;span class="pl-k"&gt;:&lt;/span&gt; &lt;span class="pl-c1"&gt;String&lt;/span&gt;

&lt;span class="pl-k"&gt;@Param&lt;/span&gt;(completion&lt;span class="pl-k"&gt;:&lt;/span&gt; .&lt;span class="pl-c1"&gt;values&lt;/span&gt;([
    (&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;optionA&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;the first available option&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;),
    (&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;optionB&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;the second available option&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
]))
&lt;span class="pl-k"&gt;var&lt;/span&gt; aValue&lt;span class="pl-k"&gt;:&lt;/span&gt; &lt;span class="pl-c1"&gt;String&lt;/span&gt;

&lt;span class="pl-k"&gt;@Param&lt;/span&gt;(completion&lt;span class="pl-k"&gt;:&lt;/span&gt; .&lt;span class="pl-c1"&gt;function&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;_my_custom_func&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;))
&lt;span class="pl-k"&gt;var&lt;/span&gt; aFunction&lt;span class="pl-k"&gt;:&lt;/span&gt; &lt;span class="pl-c1"&gt;String&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;The default parameter completion mode is &lt;code&gt;.filename&lt;/code&gt;. If you specify a custom function with &lt;code&gt;.function&lt;/code&gt;, that function must be supplied when creating the completion generator:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;class&lt;/span&gt; &lt;span class="pl-en"&gt;MyCommand&lt;/span&gt; {
    &lt;span class="pl-k"&gt;...&lt;/span&gt;
    &lt;span class="pl-k"&gt;@Param&lt;/span&gt;(completion&lt;span class="pl-k"&gt;:&lt;/span&gt; .&lt;span class="pl-c1"&gt;function&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;_list_processes&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;))
    &lt;span class="pl-k"&gt;var&lt;/span&gt; pid&lt;span class="pl-k"&gt;:&lt;/span&gt; &lt;span class="pl-c1"&gt;String&lt;/span&gt;
    &lt;span class="pl-k"&gt;...&lt;/span&gt;
}

&lt;span class="pl-k"&gt;let&lt;/span&gt; myCLI &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;CLI&lt;/span&gt;(&lt;span class="pl-k"&gt;...&lt;/span&gt;)
myCLI.&lt;span class="pl-smi"&gt;commands&lt;/span&gt; [&lt;span class="pl-c1"&gt;MyCommand&lt;/span&gt;()]
&lt;span class="pl-k"&gt;let&lt;/span&gt; generator &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;ZshCompletionGenerator&lt;/span&gt;(&lt;span class="pl-c1"&gt;cli&lt;/span&gt;: myCli, &lt;span class="pl-c1"&gt;functions&lt;/span&gt;: [
    &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;_list_processes&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;&lt;span class="pl-k"&gt;:&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"""&lt;/span&gt;&lt;/span&gt;
&lt;span class="pl-s"&gt;        local pids&lt;/span&gt;
&lt;span class="pl-s"&gt;        pids=( $(ps -o pid=) )&lt;/span&gt;
&lt;span class="pl-s"&gt;        _describe '' pids&lt;/span&gt;
&lt;span class="pl-s"&gt;        &lt;span class="pl-pds"&gt;"""&lt;/span&gt;&lt;/span&gt;
])&lt;/pre&gt;&lt;/div&gt;
&lt;h2&gt;&lt;a id="user-content-built-in-commands" class="anchor" aria-hidden="true" href="#built-in-commands"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Built-in commands&lt;/h2&gt;
&lt;p&gt;&lt;code&gt;CLI&lt;/code&gt; has two built-in commands: &lt;code&gt;HelpCommand&lt;/code&gt; and &lt;code&gt;VersionCommand&lt;/code&gt;.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-help-command" class="anchor" aria-hidden="true" href="#help-command"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Help Command&lt;/h3&gt;
&lt;p&gt;The &lt;code&gt;HelpCommand&lt;/code&gt; can be invoked with &lt;code&gt;myapp help&lt;/code&gt;. The &lt;code&gt;HelpCommand&lt;/code&gt; first prints the app description (if any was given during &lt;code&gt;CLI.init&lt;/code&gt;). It then iterates through all available commands, printing their name and their short description.&lt;/p&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;~&lt;/span&gt; &lt;span class="pl-k"&gt;&amp;gt;&lt;/span&gt; greeter &lt;span class="pl-c1"&gt;help&lt;/span&gt;

Usage: greeter &lt;span class="pl-k"&gt;&amp;lt;&lt;/span&gt;command&lt;span class="pl-k"&gt;&amp;gt;&lt;/span&gt; [options]

Greeter - your own personal greeter

Commands:
  greet        Greets the given person
  &lt;span class="pl-c1"&gt;help&lt;/span&gt;         Prints this &lt;span class="pl-c1"&gt;help&lt;/span&gt; information
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;If you don't want this command to be automatically included, set the &lt;code&gt;helpCommand&lt;/code&gt; property to nil:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;myCLI.&lt;span class="pl-smi"&gt;helpCommand&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;nil&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h3&gt;&lt;a id="user-content-version-command" class="anchor" aria-hidden="true" href="#version-command"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Version Command&lt;/h3&gt;
&lt;p&gt;The &lt;code&gt;VersionCommand&lt;/code&gt; can be invoked with &lt;code&gt;myapp version&lt;/code&gt; or &lt;code&gt;myapp --version&lt;/code&gt;. The VersionCommand prints the version of the app given during init &lt;code&gt;CLI(name:version:)&lt;/code&gt;. If no version is given, the command is not available.&lt;/p&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;~&lt;/span&gt; &lt;span class="pl-k"&gt;&amp;gt;&lt;/span&gt; greeter --version
Version: 1.0&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;If you don't want this command to be automatically included, set the &lt;code&gt;versionCommand&lt;/code&gt; property to nil:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;myCLI.&lt;span class="pl-smi"&gt;versionCommand&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;nil&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h2&gt;&lt;a id="user-content-input" class="anchor" aria-hidden="true" href="#input"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Input&lt;/h2&gt;
&lt;p&gt;The &lt;code&gt;Input&lt;/code&gt; class makes it easy to read input from stdin. Several methods are available:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;let&lt;/span&gt; str &lt;span class="pl-k"&gt;=&lt;/span&gt; Input.&lt;span class="pl-c1"&gt;readLine&lt;/span&gt;()
&lt;span class="pl-k"&gt;let&lt;/span&gt; int &lt;span class="pl-k"&gt;=&lt;/span&gt; Input.&lt;span class="pl-c1"&gt;readInt&lt;/span&gt;()
&lt;span class="pl-k"&gt;let&lt;/span&gt; double &lt;span class="pl-k"&gt;=&lt;/span&gt; Input.&lt;span class="pl-c1"&gt;readDouble&lt;/span&gt;()
&lt;span class="pl-k"&gt;let&lt;/span&gt; bool &lt;span class="pl-k"&gt;=&lt;/span&gt; Input.&lt;span class="pl-c1"&gt;readBool&lt;/span&gt;()&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;All &lt;code&gt;read&lt;/code&gt; methods have four optional parameters:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;prompt&lt;/code&gt;: the message to print before accepting input (e.g. "Input: ")&lt;/li&gt;
&lt;li&gt;&lt;code&gt;secure&lt;/code&gt;: if true, the input is hidden as the user types&lt;/li&gt;
&lt;li&gt;&lt;code&gt;validation&lt;/code&gt;: a closure which defines whether the input is valid, or if the user should be reprompted&lt;/li&gt;
&lt;li&gt;&lt;code&gt;errorResponse&lt;/code&gt;: a closure which is executed when the user enters input which is not valid&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;For example, you could write:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;let&lt;/span&gt; percentage &lt;span class="pl-k"&gt;=&lt;/span&gt; Input.&lt;span class="pl-c1"&gt;readDouble&lt;/span&gt;(
    &lt;span class="pl-c1"&gt;prompt&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;Percentage:&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;,
    &lt;span class="pl-c1"&gt;validation&lt;/span&gt;: [.&lt;span class="pl-c1"&gt;within&lt;/span&gt;(&lt;span class="pl-c1"&gt;0&lt;/span&gt;&lt;span class="pl-k"&gt;...&lt;/span&gt;&lt;span class="pl-c1"&gt;100&lt;/span&gt;)],
    &lt;span class="pl-c1"&gt;errorResponse&lt;/span&gt;: { (input, reason) &lt;span class="pl-k"&gt;in&lt;/span&gt;
        Term.&lt;span class="pl-smi"&gt;stderr&lt;/span&gt; &lt;span class="pl-k"&gt;&amp;lt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;'&lt;span class="pl-pse"&gt;\(&lt;/span&gt;&lt;span class="pl-s1"&gt;input&lt;/span&gt;&lt;span class="pl-pse"&gt;&lt;span class="pl-s1"&gt;)&lt;/span&gt;&lt;/span&gt;' is invalid; must be a number between 0 and 100&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;
    }
)&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;which would result in an interaction such as:&lt;/p&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt;Percentage: asdf
&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;asdf&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt; is invalid&lt;span class="pl-k"&gt;;&lt;/span&gt; must be a number between 0 and 100
Percentage: 104
&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;104&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt; is invalid&lt;span class="pl-k"&gt;;&lt;/span&gt; must be a number between 0 and 100
Percentage: 43.6&lt;/pre&gt;&lt;/div&gt;
&lt;h2&gt;&lt;a id="user-content-external-tasks" class="anchor" aria-hidden="true" href="#external-tasks"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;External tasks&lt;/h2&gt;
&lt;p&gt;SwiftCLI makes it easy to execute external tasks:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Execute a command and print output:&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;&lt;span class="pl-k"&gt;try&lt;/span&gt; Task.&lt;span class="pl-c1"&gt;run&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;echo&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;hello&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
&lt;span class="pl-k"&gt;try&lt;/span&gt; Task.&lt;span class="pl-c1"&gt;run&lt;/span&gt;(&lt;span class="pl-c1"&gt;bash&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;while true; do echo hi &amp;amp;&amp;amp; sleep 1; done&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Execute a command and capture the output:&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;&lt;span class="pl-k"&gt;let&lt;/span&gt; currentDirectory &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-k"&gt;try&lt;/span&gt; Task.&lt;span class="pl-c1"&gt;capture&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;pwd&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;).&lt;span class="pl-smi"&gt;stdout&lt;/span&gt;
&lt;span class="pl-k"&gt;let&lt;/span&gt; sorted &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-k"&gt;try&lt;/span&gt; Task.&lt;span class="pl-c1"&gt;capture&lt;/span&gt;(&lt;span class="pl-c1"&gt;bash&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;cat Package.swift | sort&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;).&lt;span class="pl-smi"&gt;stdout&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;You can also use the &lt;code&gt;Task&lt;/code&gt; class for more custom behavior:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;let&lt;/span&gt; input &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;PipeStream&lt;/span&gt;()
&lt;span class="pl-k"&gt;let&lt;/span&gt; output &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;PipeStream&lt;/span&gt;()
&lt;span class="pl-k"&gt;let&lt;/span&gt; task &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;Task&lt;/span&gt;(&lt;span class="pl-c1"&gt;executable&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;sort&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-c1"&gt;currentDirectory&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;~/Ice&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-c1"&gt;stdout&lt;/span&gt;: output, &lt;span class="pl-c1"&gt;stdin&lt;/span&gt;: input)
task.&lt;span class="pl-c1"&gt;runAsync&lt;/span&gt;()

input &lt;span class="pl-k"&gt;&amp;lt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;beta&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;
input &lt;span class="pl-k"&gt;&amp;lt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;alpha&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;
input.&lt;span class="pl-c1"&gt;closeWrite&lt;/span&gt;()

output.&lt;span class="pl-c1"&gt;readAll&lt;/span&gt;() &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; will be alpha\nbeta\n&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;See &lt;code&gt;Sources/SwiftCLI/Task.swift&lt;/code&gt; for full documentation on &lt;code&gt;Task&lt;/code&gt;.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-single-command-clis" class="anchor" aria-hidden="true" href="#single-command-clis"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Single command CLIs&lt;/h2&gt;
&lt;p&gt;If your CLI only contains a single command, you may want to execute the command simply by calling &lt;code&gt;cli&lt;/code&gt;, rather than &lt;code&gt;cli command&lt;/code&gt;. In this case, you can create your CLI as such:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;class&lt;/span&gt; &lt;span class="pl-en"&gt;Ln&lt;/span&gt;: &lt;span class="pl-e"&gt;Command &lt;/span&gt;{
    &lt;span class="pl-k"&gt;let&lt;/span&gt; name &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;ln&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;
    &lt;span class="pl-k"&gt;func&lt;/span&gt; &lt;span class="pl-en"&gt;execute&lt;/span&gt;() &lt;span class="pl-k"&gt;throws&lt;/span&gt; { &lt;span class="pl-k"&gt;...&lt;/span&gt; }
}

&lt;span class="pl-k"&gt;let&lt;/span&gt; ln &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;CLI&lt;/span&gt;(&lt;span class="pl-c1"&gt;singleCommand&lt;/span&gt;: &lt;span class="pl-c1"&gt;Ln&lt;/span&gt;())
ln.&lt;span class="pl-c1"&gt;go&lt;/span&gt;()&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;In this case, if the user writes &lt;code&gt;ln myFile newLocation&lt;/code&gt;, rather than searching for a command with the name "myFile", &lt;code&gt;SwiftCLI&lt;/code&gt; will execute the &lt;code&gt;Ln&lt;/code&gt; command and pass on "myFile" as the first argument to that command.&lt;/p&gt;
&lt;p&gt;Keep in mind that when creating a single command CLI, you lose the default &lt;code&gt;VersionCommand&lt;/code&gt;. This means that &lt;code&gt;cli -v&lt;/code&gt; will not work automatically, and that if you want to print your CLI version you will need to manually implement a &lt;code&gt;Flag("-v")&lt;/code&gt; on your single command.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-customization" class="anchor" aria-hidden="true" href="#customization"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Customization&lt;/h2&gt;
&lt;p&gt;SwiftCLI was designed with sensible defaults but also the ability to be customized at every level. &lt;code&gt;CLI&lt;/code&gt; has three properties that can be changed from the default implementations to customized implementations.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-parser" class="anchor" aria-hidden="true" href="#parser"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;code&gt;parser&lt;/code&gt;&lt;/h3&gt;
&lt;p&gt;The &lt;code&gt;Parser&lt;/code&gt; steps through arguments to find the corresponding command, update its parameter values, and recognizes options. Each CLI has a &lt;code&gt;parser&lt;/code&gt; property which has three mutable properties: &lt;code&gt;routeBehavior&lt;/code&gt;, &lt;code&gt;parseOptionsAfterCollectedParameter&lt;/code&gt;, and &lt;code&gt;responders&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;&lt;code&gt;routeBehavior&lt;/code&gt; has three possible values. The default, &lt;code&gt;.search&lt;/code&gt;, steps through the arguments the user passed and tries to find a command with a matching name. If it fails, a help message is printed. &lt;code&gt;git&lt;/code&gt; is an example of a program which operates this way. The second option, &lt;code&gt;.searchWithFallback(Command)&lt;/code&gt;, also initially tries to find a command with a name matching the arguments passed by the user, but if it fails, rather than printing a help message it falls back to a certain command. 'bundle' is an example of a program which operates this way. The last option is &lt;code&gt;.automatically(Command)&lt;/code&gt;. In this route behavior, the CLI automatically routes to the given command without considering arguments. 'ln' is an example of a program which operates this way.&lt;/p&gt;
&lt;p&gt;&lt;code&gt;parseOptionsAfterCollectedParameter&lt;/code&gt; controls whether or not options are recognized once a collected parameter is encountered. It defaults to &lt;code&gt;false&lt;/code&gt;. Given the following command:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;class&lt;/span&gt; &lt;span class="pl-en"&gt;Run&lt;/span&gt;: &lt;span class="pl-e"&gt;Command &lt;/span&gt;{
    &lt;span class="pl-k"&gt;let&lt;/span&gt; name &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;run&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;

    &lt;span class="pl-k"&gt;@Param&lt;/span&gt; &lt;span class="pl-k"&gt;var&lt;/span&gt; executable&lt;span class="pl-k"&gt;:&lt;/span&gt; &lt;span class="pl-c1"&gt;String&lt;/span&gt;
    &lt;span class="pl-k"&gt;@CollectedParam&lt;/span&gt; &lt;span class="pl-k"&gt;var&lt;/span&gt; arguments&lt;span class="pl-k"&gt;:&lt;/span&gt; [&lt;span class="pl-c1"&gt;String&lt;/span&gt;]

    &lt;span class="pl-k"&gt;@Flag&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;-a&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;) &lt;span class="pl-k"&gt;var&lt;/span&gt; all&lt;span class="pl-k"&gt;:&lt;/span&gt; &lt;span class="pl-c1"&gt;Bool&lt;/span&gt;
    &lt;span class="pl-k"&gt;...&lt;/span&gt;
}&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;if the user calls &lt;code&gt;swift run myExec -a&lt;/code&gt; and &lt;code&gt;parseOptionsAfterCollectedParameter&lt;/code&gt; is false, the value of &lt;code&gt;executable&lt;/code&gt; will be "myExec", the value of &lt;code&gt;arguments&lt;/code&gt; will be &lt;code&gt;["-a"]&lt;/code&gt;, and the value of &lt;code&gt;all&lt;/code&gt; will be false. If &lt;code&gt;parseOptionsAfterCollectedParameter&lt;/code&gt; were true in this situation, the value of &lt;code&gt;executable&lt;/code&gt; would be "myExec", the value of &lt;code&gt;arguments&lt;/code&gt; would be &lt;code&gt;[]&lt;/code&gt;, and the value of &lt;code&gt;all&lt;/code&gt; would be true.&lt;/p&gt;
&lt;p&gt;&lt;code&gt;responders&lt;/code&gt; allows the parser to be completely customized. Check out &lt;code&gt;Parser.swift&lt;/code&gt; for more information on how this functions by default and how it can be customized in any way.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-aliases" class="anchor" aria-hidden="true" href="#aliases"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;code&gt;aliases&lt;/code&gt;&lt;/h3&gt;
&lt;p&gt;Aliases can be made through the the &lt;code&gt;aliases&lt;/code&gt; property on CLI. &lt;code&gt;Parser&lt;/code&gt; will take these aliases into account while routing to the matching command. For example, if you write:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;myCLI.&lt;span class="pl-smi"&gt;aliases&lt;/span&gt;[&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;-c&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;] &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;command&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;And the user makes the call &lt;code&gt;myapp -c&lt;/code&gt;, the parser will search for a command with the name "command" because of the alias, not a command with the name "-c".&lt;/p&gt;
&lt;p&gt;By default, "--version" is an alias for "version", but you can remove this if desired:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;myCLI.&lt;span class="pl-smi"&gt;aliases&lt;/span&gt;[&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;--version&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;] &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;nil&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h3&gt;&lt;a id="user-content-argumentlistmanipulators" class="anchor" aria-hidden="true" href="#argumentlistmanipulators"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;code&gt;argumentListManipulators&lt;/code&gt;&lt;/h3&gt;
&lt;p&gt;&lt;code&gt;ArgumentListManipulator&lt;/code&gt;s act before the &lt;code&gt;Parser&lt;/code&gt; begins. They take in the arguments as given by the user and can change them slightly. By default, the only argument list manipulator used is &lt;code&gt;OptionSplitter&lt;/code&gt; which splits options like &lt;code&gt;-am&lt;/code&gt; into &lt;code&gt;-a -m&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;You can implement &lt;code&gt;ArgumentListManipulator&lt;/code&gt; on your own type and update CLI's property:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;cli.&lt;span class="pl-smi"&gt;argumentListManipulators&lt;/span&gt;.&lt;span class="pl-c1"&gt;append&lt;/span&gt;(&lt;span class="pl-c1"&gt;MyManipulator&lt;/span&gt;())&lt;/pre&gt;&lt;/div&gt;
&lt;h3&gt;&lt;a id="user-content-helpmessagegenerator" class="anchor" aria-hidden="true" href="#helpmessagegenerator"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;code&gt;helpMessageGenerator&lt;/code&gt;&lt;/h3&gt;
&lt;p&gt;The messages formed by SwiftCLI can also be customized:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;cli.&lt;span class="pl-smi"&gt;helpMessageGenerator&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;MyHelpMessageGenerator&lt;/span&gt;()&lt;/pre&gt;&lt;/div&gt;
&lt;h2&gt;&lt;a id="user-content-running-your-cli" class="anchor" aria-hidden="true" href="#running-your-cli"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Running your CLI&lt;/h2&gt;
&lt;p&gt;Simply call &lt;code&gt;swift run&lt;/code&gt;. In order to ensure your &lt;code&gt;CLI&lt;/code&gt; gets the arguments passed on the command line, make sure to call &lt;code&gt;CLI.go()&lt;/code&gt;, &lt;strong&gt;not&lt;/strong&gt; &lt;code&gt;CLI.go(with: [])&lt;/code&gt;.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-clis-build-with-swiftcli" class="anchor" aria-hidden="true" href="#clis-build-with-swiftcli"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;CLIs build with SwiftCLI&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/yonaskolb/XcodeGen"&gt;XcodeGen&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/yonaskolb/Mint"&gt;Mint&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/SvenTiigi/SwiftKit"&gt;SwiftKit&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/Flinesoft/BartyCrouch"&gt;BartyCrouch&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/jakeheis/Ice"&gt;Ice&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/article&gt;&lt;/div&gt;</description><author>jakeheis</author><guid isPermaLink="false">https://github.com/jakeheis/SwiftCLI</guid><pubDate>Sat, 25 Jan 2020 00:19:00 GMT</pubDate></item><item><title>airbnb/lottie-ios #20 in Swift, This week</title><link>https://github.com/airbnb/lottie-ios</link><description>&lt;p&gt;&lt;i&gt;An iOS library to natively render After Effects vector animations&lt;/i&gt;&lt;/p&gt;&lt;div id="readme" class="md" data-path="README.md"&gt;&lt;article class="markdown-body entry-content p-5" itemprop="text"&gt;&lt;h1&gt;&lt;a id="user-content-lottie-for-ios-macos-and-android-and-react-native" class="anchor" aria-hidden="true" href="#lottie-for-ios-macos-and-android-and-react-native"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Lottie for iOS, macOS (and &lt;a href="https://github.com/airbnb/lottie-android"&gt;Android&lt;/a&gt; and &lt;a href="https://github.com/airbnb/lottie-react-native"&gt;React Native&lt;/a&gt;)&lt;/h1&gt;
&lt;p&gt;&lt;a href="https://cocoapods.org/pods/lottie-ios" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/ec93af3b58853a5ba768cc785ad54a4aca961645/68747470733a2f2f696d672e736869656c64732e696f2f636f636f61706f64732f762f6c6f747469652d696f732e7376673f7374796c653d666c6174" alt="Version" data-canonical-src="https://img.shields.io/cocoapods/v/lottie-ios.svg?style=flat" style="max-width:100%;"&gt;&lt;/a&gt;&lt;a href="https://cocoapods.org/pods/lottie-ios" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/ff1d88230b9d245f16df6036e058518d051df573/68747470733a2f2f696d672e736869656c64732e696f2f636f636f61706f64732f6c2f6c6f747469652d696f732e7376673f7374796c653d666c6174" alt="License" data-canonical-src="https://img.shields.io/cocoapods/l/lottie-ios.svg?style=flat" style="max-width:100%;"&gt;&lt;/a&gt;&lt;a href="https://cocoapods.org/pods/lottie-ios" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/80aaf7fb5854bde9c64a0aff30cd12ebf1765b36/68747470733a2f2f696d672e736869656c64732e696f2f636f636f61706f64732f702f6c6f747469652d696f732e7376673f7374796c653d666c6174" alt="Platform" data-canonical-src="https://img.shields.io/cocoapods/p/lottie-ios.svg?style=flat" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h1&gt;&lt;a id="user-content-view-documentation-faq-help-examples-and-more-at-airbnbiolottie" class="anchor" aria-hidden="true" href="#view-documentation-faq-help-examples-and-more-at-airbnbiolottie"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;View documentation, FAQ, help, examples, and more at &lt;a href="http://airbnb.io/lottie/" rel="nofollow"&gt;airbnb.io/lottie&lt;/a&gt;&lt;/h1&gt;
&lt;p&gt;Lottie is a mobile library for Android and iOS that natively renders vector based animations and art in realtime with minimal code.&lt;/p&gt;
&lt;p&gt;Lottie loads and renders animations and vectors exported in the bodymovin JSON format. Bodymovin JSON can be created and exported from After Effects with &lt;a href="https://github.com/bodymovin/bodymovin"&gt;bodymovin&lt;/a&gt;, Sketch with &lt;a href="https://github.com/buba447/Lottie-Sketch-Export"&gt;Lottie Sketch Export&lt;/a&gt;, and from &lt;a href="https://www.haiku.ai" rel="nofollow"&gt;Haiku&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;For the first time, designers can create &lt;strong&gt;and ship&lt;/strong&gt; beautiful animations without an engineer painstakingly recreating it by hand.
Since the animation is backed by JSON they are extremely small in size but can be large in complexity!
Animations can be played, resized, looped, sped up, slowed down, reversed, and even interactively scrubbed.
Lottie can play or loop just a portion of the animation as well, the possibilities are endless!
Animations can even be &lt;em&gt;&lt;strong&gt;changed at runtime&lt;/strong&gt;&lt;/em&gt; in various ways! Change the color, position or any keyframable value!
Lottie also supports native UIViewController Transitions out of the box!&lt;/p&gt;
&lt;p&gt;Here is just a small sampling of the power of Lottie&lt;/p&gt;
&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="_Gifs/Examples1.gif"&gt;&lt;img src="_Gifs/Examples1.gif" alt="Example1" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a target="_blank" rel="noopener noreferrer" href="_Gifs/Examples2.gif"&gt;&lt;img src="_Gifs/Examples2.gif" alt="Example2" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="_Gifs/Community 2_3.gif"&gt;&lt;img src="_Gifs/Community 2_3.gif" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="_Gifs/Examples3.gif"&gt;&lt;img src="_Gifs/Examples3.gif" alt="Example3" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="_Gifs/Examples4.gif"&gt;&lt;img src="_Gifs/Examples4.gif" alt="Abcs" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-installing-lottie" class="anchor" aria-hidden="true" href="#installing-lottie"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Installing Lottie&lt;/h2&gt;
&lt;p&gt;Lottie supports &lt;a href="https://cocoapods.org/" rel="nofollow"&gt;CocoaPods&lt;/a&gt; and &lt;a href="https://github.com/Carthage/Carthage"&gt;Carthage&lt;/a&gt; (Both dynamic and static). Lottie is written in &lt;em&gt;&lt;strong&gt;Swift 4.2&lt;/strong&gt;&lt;/em&gt;.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-github-repo" class="anchor" aria-hidden="true" href="#github-repo"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Github Repo&lt;/h3&gt;
&lt;p&gt;You can pull the &lt;a href="https://github.com/airbnb/lottie-ios/"&gt;Lottie Github Repo&lt;/a&gt; and include the Lottie.xcodeproj to build a dynamic or static library.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-cocoapods" class="anchor" aria-hidden="true" href="#cocoapods"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;CocoaPods&lt;/h3&gt;
&lt;p&gt;Add the pod to your Podfile:&lt;/p&gt;
&lt;div class="highlight highlight-source-ruby"&gt;&lt;pre&gt;pod &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;lottie-ios&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;And then run:&lt;/p&gt;
&lt;div class="highlight highlight-source-ruby"&gt;&lt;pre&gt;pod install&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;After installing the cocoapod into your project import Lottie with&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;import&lt;/span&gt; &lt;span class="pl-en"&gt;Lottie&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h3&gt;&lt;a id="user-content-carthage" class="anchor" aria-hidden="true" href="#carthage"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Carthage&lt;/h3&gt;
&lt;p&gt;Add Lottie to your Cartfile:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;github "airbnb/lottie-ios" "master"
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;And then run:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;carthage update
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;In your application targets “General” tab under the “Linked Frameworks and Libraries” section, drag and drop lottie-ios.framework from the Carthage/Build/iOS directory that &lt;code&gt;carthage update&lt;/code&gt; produced.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-swift-package-manager" class="anchor" aria-hidden="true" href="#swift-package-manager"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Swift Package Manager&lt;/h3&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; swift-tools-version:5.1&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;
&lt;span class="pl-k"&gt;import&lt;/span&gt; &lt;span class="pl-en"&gt;PackageDescription&lt;/span&gt;

&lt;span class="pl-k"&gt;let&lt;/span&gt; package &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;Package&lt;/span&gt;(
  &lt;span class="pl-c1"&gt;name&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;YourTestProject&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;,
  &lt;span class="pl-c1"&gt;platforms&lt;/span&gt;: [
       .&lt;span class="pl-c1"&gt;iOS&lt;/span&gt;(.&lt;span class="pl-smi"&gt;v12&lt;/span&gt;),
  ],
  &lt;span class="pl-c1"&gt;dependencies&lt;/span&gt;: [
    .&lt;span class="pl-c1"&gt;package&lt;/span&gt;(&lt;span class="pl-c1"&gt;url&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;https://github.com/airbnb/lottie-ios.git&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-c1"&gt;from&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;3.1.2&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
  ],
  &lt;span class="pl-c1"&gt;targets&lt;/span&gt;: [
    .&lt;span class="pl-c1"&gt;target&lt;/span&gt;(&lt;span class="pl-c1"&gt;name&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;YourTestProject&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-c1"&gt;dependencies&lt;/span&gt;: [&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;Lottie&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;])
  ]
)&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;And then import wherever needed: &lt;code&gt;import Lottie&lt;/code&gt;&lt;/p&gt;
&lt;h4&gt;&lt;a id="user-content-adding-it-to-an-existent-ios-project-via-swift-package-manager" class="anchor" aria-hidden="true" href="#adding-it-to-an-existent-ios-project-via-swift-package-manager"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Adding it to an existent iOS Project via Swift Package Manager&lt;/h4&gt;
&lt;ol&gt;
&lt;li&gt;Using Xcode 11 go to File &amp;gt; Swift Packages &amp;gt; Add Package Dependency&lt;/li&gt;
&lt;li&gt;Paste the project URL: &lt;a href="https://github.com/airbnb/lottie-ios"&gt;https://github.com/airbnb/lottie-ios&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Click on next and select the project target
**NOTE: For MacOS you must set the &lt;code&gt;Branch&lt;/code&gt; field to &lt;code&gt;lottie/macos-spm&lt;/code&gt;
&lt;a target="_blank" rel="noopener noreferrer" href="_Gifs/spm-branch.png"&gt;&lt;img src="_Gifs/spm-branch.png" alt="Example" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;If you have doubts, please, check the following links:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://developer.apple.com/videos/play/wwdc2019/408/" rel="nofollow"&gt;How to use&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href="https://developer.apple.com/videos/play/wwdc2019/410/" rel="nofollow"&gt;Creating Swift Packages&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;After successfully retrieved the package and added it to your project, just import &lt;code&gt;Lottie&lt;/code&gt; and you can get the full benefits of it.&lt;/p&gt;
&lt;/article&gt;&lt;/div&gt;</description><author>airbnb</author><guid isPermaLink="false">https://github.com/airbnb/lottie-ios</guid><pubDate>Sat, 25 Jan 2020 00:20:00 GMT</pubDate></item><item><title>RxSwiftCommunity/RxDataSources #21 in Swift, This week</title><link>https://github.com/RxSwiftCommunity/RxDataSources</link><description>&lt;p&gt;&lt;i&gt;UITableView and UICollectionView Data Sources for RxSwift (sections, animated updates, editing ...)&lt;/i&gt;&lt;/p&gt;&lt;div id="readme" class="md" data-path="README.md"&gt;&lt;article class="markdown-body entry-content p-5" itemprop="text"&gt;&lt;p&gt;&lt;a href="https://travis-ci.org/RxSwiftCommunity/RxDataSources" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/a429cbc2966f3bdacdf4b729207539869488220f/68747470733a2f2f7472617669732d63692e6f72672f52785377696674436f6d6d756e6974792f527844617461536f75726365732e7376673f6272616e63683d6d6173746572" alt="Travis CI" data-canonical-src="https://travis-ci.org/RxSwiftCommunity/RxDataSources.svg?branch=master" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h1&gt;&lt;a id="user-content-table-and-collection-view-data-sources" class="anchor" aria-hidden="true" href="#table-and-collection-view-data-sources"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Table and Collection view data sources&lt;/h1&gt;
&lt;h2&gt;&lt;a id="user-content-features" class="anchor" aria-hidden="true" href="#features"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Features&lt;/h2&gt;
&lt;ul class="contains-task-list"&gt;
&lt;li class="task-list-item"&gt;&lt;input type="checkbox" id="" disabled="" class="task-list-item-checkbox" checked=""&gt; &lt;strong&gt;O(N)&lt;/strong&gt; algorithm for calculating differences
&lt;ul&gt;
&lt;li&gt;the algorithm has the assumption that all sections and items are unique so there is no ambiguity&lt;/li&gt;
&lt;li&gt;in case there is ambiguity, fallbacks automagically on non animated refresh&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li class="task-list-item"&gt;&lt;input type="checkbox" id="" disabled="" class="task-list-item-checkbox" checked=""&gt; it applies additional heuristics to send the least number of commands to sectioned view
&lt;ul&gt;
&lt;li&gt;even though the running time is linear, preferred number of sent commands is usually a lot less than linear&lt;/li&gt;
&lt;li&gt;it is preferred (and possible) to cap the number of changes to some small number, and in case the number of changes grows towards linear, just do normal reload&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li class="task-list-item"&gt;&lt;input type="checkbox" id="" disabled="" class="task-list-item-checkbox" checked=""&gt; Supports &lt;strong&gt;extending your item and section structures&lt;/strong&gt;
&lt;ul&gt;
&lt;li&gt;just extend your item with &lt;code&gt;IdentifiableType&lt;/code&gt; and &lt;code&gt;Equatable&lt;/code&gt;, and your section with &lt;code&gt;AnimatableSectionModelType&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li class="task-list-item"&gt;&lt;input type="checkbox" id="" disabled="" class="task-list-item-checkbox" checked=""&gt; Supports all combinations of two level hierarchical animations for &lt;strong&gt;both sections and items&lt;/strong&gt;
&lt;ul&gt;
&lt;li&gt;Section animations: Insert, Delete, Move&lt;/li&gt;
&lt;li&gt;Item animations: Insert, Delete, Move, Reload (if old value is not equal to new value)&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li class="task-list-item"&gt;&lt;input type="checkbox" id="" disabled="" class="task-list-item-checkbox" checked=""&gt; Configurable animation types for &lt;code&gt;Insert&lt;/code&gt;, &lt;code&gt;Reload&lt;/code&gt; and &lt;code&gt;Delete&lt;/code&gt; (Automatic, Fade, ...)&lt;/li&gt;
&lt;li class="task-list-item"&gt;&lt;input type="checkbox" id="" disabled="" class="task-list-item-checkbox" checked=""&gt; Example app&lt;/li&gt;
&lt;li class="task-list-item"&gt;&lt;input type="checkbox" id="" disabled="" class="task-list-item-checkbox" checked=""&gt; Randomized stress tests (example app)&lt;/li&gt;
&lt;li class="task-list-item"&gt;&lt;input type="checkbox" id="" disabled="" class="task-list-item-checkbox" checked=""&gt; Supports editing out of the box (example app)&lt;/li&gt;
&lt;li class="task-list-item"&gt;&lt;input type="checkbox" id="" disabled="" class="task-list-item-checkbox" checked=""&gt; Works with &lt;code&gt;UITableView&lt;/code&gt; and &lt;code&gt;UICollectionView&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-why" class="anchor" aria-hidden="true" href="#why"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Why&lt;/h2&gt;
&lt;p&gt;Writing table and collection view data sources is tedious. There is a large number of delegate methods that need to be implemented for the simplest case possible.&lt;/p&gt;
&lt;p&gt;RxSwift helps alleviate some of the burden with a simple data binding mechanism:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Turn your data into an Observable sequence&lt;/li&gt;
&lt;li&gt;Bind the data to the tableView/collectionView using one of:&lt;/li&gt;
&lt;/ol&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;rx.items(dataSource:protocol&amp;lt;RxTableViewDataSourceType, UITableViewDataSource&amp;gt;)&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;rx.items(cellIdentifier:String)&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;rx.items(cellIdentifier:String:Cell.Type:_:)&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;rx.items(_:_:)&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;let&lt;/span&gt; data &lt;span class="pl-k"&gt;=&lt;/span&gt; Observable&lt;span class="pl-k"&gt;&amp;lt;&lt;/span&gt;[&lt;span class="pl-c1"&gt;String&lt;/span&gt;]&lt;span class="pl-k"&gt;&amp;gt;&lt;/span&gt;.&lt;span class="pl-c1"&gt;just&lt;/span&gt;([&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;first element&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;second element&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;third element&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;])

data.&lt;span class="pl-c1"&gt;bind&lt;/span&gt;(&lt;span class="pl-c1"&gt;to&lt;/span&gt;: tableView.&lt;span class="pl-smi"&gt;rx&lt;/span&gt;.&lt;span class="pl-c1"&gt;items&lt;/span&gt;(&lt;span class="pl-c1"&gt;cellIdentifier&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;Cell&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)) { index, model, cell &lt;span class="pl-k"&gt;in&lt;/span&gt;
  cell.&lt;span class="pl-smi"&gt;textLabel&lt;/span&gt;&lt;span class="pl-k"&gt;?&lt;/span&gt;.&lt;span class="pl-c1"&gt;text&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; model
}
.&lt;span class="pl-c1"&gt;disposed&lt;/span&gt;(&lt;span class="pl-c1"&gt;by&lt;/span&gt;: disposeBag)&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;This works well with simple data sets but does not handle cases where you need to bind complex data sets with multiples sections, or when you need to perform animations when adding/modifying/deleting items.&lt;/p&gt;
&lt;p&gt;These are precisely the use cases that RxDataSources helps solve.&lt;/p&gt;
&lt;p&gt;With RxDataSources, it is super easy to just write&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;let&lt;/span&gt; dataSource &lt;span class="pl-k"&gt;=&lt;/span&gt; RxTableViewSectionedReloadDataSource&lt;span class="pl-k"&gt;&amp;lt;&lt;/span&gt;SectionModel&lt;span class="pl-k"&gt;&amp;lt;&lt;/span&gt;&lt;span class="pl-c1"&gt;String&lt;/span&gt;, &lt;span class="pl-c1"&gt;Int&lt;/span&gt;&lt;span class="pl-k"&gt;&amp;gt;&amp;gt;&lt;/span&gt;(&lt;span class="pl-c1"&gt;configureCell&lt;/span&gt;: configureCell)
Observable.&lt;span class="pl-c1"&gt;just&lt;/span&gt;([&lt;span class="pl-c1"&gt;SectionModel&lt;/span&gt;(&lt;span class="pl-c1"&gt;model&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;title&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-c1"&gt;items&lt;/span&gt;: [&lt;span class="pl-c1"&gt;1&lt;/span&gt;, &lt;span class="pl-c1"&gt;2&lt;/span&gt;, &lt;span class="pl-c1"&gt;3&lt;/span&gt;])])
    .&lt;span class="pl-c1"&gt;bind&lt;/span&gt;(&lt;span class="pl-c1"&gt;to&lt;/span&gt;: tableView.&lt;span class="pl-smi"&gt;rx&lt;/span&gt;.&lt;span class="pl-c1"&gt;items&lt;/span&gt;(&lt;span class="pl-c1"&gt;dataSource&lt;/span&gt;: dataSource))
    .&lt;span class="pl-c1"&gt;disposed&lt;/span&gt;(&lt;span class="pl-c1"&gt;by&lt;/span&gt;: disposeBag)&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="https://raw.githubusercontent.com/kzaher/rxswiftcontent/rxdatasources/RxDataSources.gif"&gt;&lt;img src="https://raw.githubusercontent.com/kzaher/rxswiftcontent/rxdatasources/RxDataSources.gif" alt="RxDataSources example app" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-how" class="anchor" aria-hidden="true" href="#how"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;How&lt;/h2&gt;
&lt;p&gt;Given the following custom data structure:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;struct&lt;/span&gt; &lt;span class="pl-en"&gt;CustomData&lt;/span&gt; {
  &lt;span class="pl-k"&gt;var&lt;/span&gt; anInt&lt;span class="pl-k"&gt;:&lt;/span&gt; &lt;span class="pl-c1"&gt;Int&lt;/span&gt;
  &lt;span class="pl-k"&gt;var&lt;/span&gt; aString&lt;span class="pl-k"&gt;:&lt;/span&gt; &lt;span class="pl-c1"&gt;String&lt;/span&gt;
  &lt;span class="pl-k"&gt;var&lt;/span&gt; aCGPoint&lt;span class="pl-k"&gt;:&lt;/span&gt; CGPoint
}&lt;/pre&gt;&lt;/div&gt;
&lt;ol&gt;
&lt;li&gt;Start by defining your sections with a struct that conforms to the &lt;code&gt;SectionModelType&lt;/code&gt; protocol:&lt;/li&gt;
&lt;/ol&gt;
&lt;ul&gt;
&lt;li&gt;define the &lt;code&gt;Item&lt;/code&gt; typealias: equal to the type of items that the section will contain&lt;/li&gt;
&lt;li&gt;declare an &lt;code&gt;items&lt;/code&gt; property: of type array of &lt;code&gt;Item&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;struct&lt;/span&gt; &lt;span class="pl-en"&gt;SectionOfCustomData&lt;/span&gt; {
  &lt;span class="pl-k"&gt;var&lt;/span&gt; header&lt;span class="pl-k"&gt;:&lt;/span&gt; &lt;span class="pl-c1"&gt;String&lt;/span&gt;    
  &lt;span class="pl-k"&gt;var&lt;/span&gt; items&lt;span class="pl-k"&gt;:&lt;/span&gt; [Item]
}
&lt;span class="pl-k"&gt;extension&lt;/span&gt; &lt;span class="pl-en"&gt;SectionOfCustomData&lt;/span&gt;: &lt;span class="pl-e"&gt;SectionModelType &lt;/span&gt;{
  &lt;span class="pl-k"&gt;typealias&lt;/span&gt; &lt;span class="pl-en"&gt;Item&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; CustomData

   &lt;span class="pl-k"&gt;init&lt;/span&gt;(&lt;span class="pl-smi"&gt;&lt;span class="pl-en"&gt;original&lt;/span&gt;&lt;/span&gt;: SectionOfCustomData, &lt;span class="pl-smi"&gt;&lt;span class="pl-en"&gt;items&lt;/span&gt;&lt;/span&gt;: [Item]) {
    &lt;span class="pl-c1"&gt;self&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; original
    &lt;span class="pl-c1"&gt;self&lt;/span&gt;.&lt;span class="pl-smi"&gt;items&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; items
  }
}&lt;/pre&gt;&lt;/div&gt;
&lt;ol start="2"&gt;
&lt;li&gt;Create a dataSource object and pass it your &lt;code&gt;SectionOfCustomData&lt;/code&gt; type:&lt;/li&gt;
&lt;/ol&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;let&lt;/span&gt; dataSource &lt;span class="pl-k"&gt;=&lt;/span&gt; RxTableViewSectionedReloadDataSource&lt;span class="pl-k"&gt;&amp;lt;&lt;/span&gt;SectionOfCustomData&lt;span class="pl-k"&gt;&amp;gt;&lt;/span&gt;(
  &lt;span class="pl-c1"&gt;configureCell&lt;/span&gt;: { dataSource, tableView, indexPath, item &lt;span class="pl-k"&gt;in&lt;/span&gt;
    &lt;span class="pl-k"&gt;let&lt;/span&gt; cell &lt;span class="pl-k"&gt;=&lt;/span&gt; tableView.&lt;span class="pl-c1"&gt;dequeueReusableCell&lt;/span&gt;(&lt;span class="pl-c1"&gt;withIdentifier&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;Cell&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-c1"&gt;for&lt;/span&gt;: indexPath)
    cell.&lt;span class="pl-smi"&gt;textLabel&lt;/span&gt;&lt;span class="pl-k"&gt;?&lt;/span&gt;.&lt;span class="pl-c1"&gt;text&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;Item &lt;span class="pl-pse"&gt;\(&lt;/span&gt;&lt;span class="pl-s1"&gt;item.&lt;span class="pl-smi"&gt;anInt&lt;/span&gt;&lt;/span&gt;&lt;span class="pl-pse"&gt;&lt;span class="pl-s1"&gt;)&lt;/span&gt;&lt;/span&gt;: &lt;span class="pl-pse"&gt;\(&lt;/span&gt;&lt;span class="pl-s1"&gt;item.&lt;span class="pl-smi"&gt;aString&lt;/span&gt;&lt;/span&gt;&lt;span class="pl-pse"&gt;&lt;span class="pl-s1"&gt;)&lt;/span&gt;&lt;/span&gt; - &lt;span class="pl-pse"&gt;\(&lt;/span&gt;&lt;span class="pl-s1"&gt;item.&lt;span class="pl-smi"&gt;aCGPoint&lt;/span&gt;.&lt;span class="pl-smi"&gt;x&lt;/span&gt;&lt;/span&gt;&lt;span class="pl-pse"&gt;&lt;span class="pl-s1"&gt;)&lt;/span&gt;&lt;/span&gt;:&lt;span class="pl-pse"&gt;\(&lt;/span&gt;&lt;span class="pl-s1"&gt;item.&lt;span class="pl-smi"&gt;aCGPoint&lt;/span&gt;.&lt;span class="pl-smi"&gt;y&lt;/span&gt;&lt;/span&gt;&lt;span class="pl-pse"&gt;&lt;span class="pl-s1"&gt;)&lt;/span&gt;&lt;/span&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;
    &lt;span class="pl-k"&gt;return&lt;/span&gt; cell
})&lt;/pre&gt;&lt;/div&gt;
&lt;ol start="3"&gt;
&lt;li&gt;Customize closures on the dataSource as needed:&lt;/li&gt;
&lt;/ol&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;titleForHeaderInSection&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;titleForFooterInSection&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;etc&lt;/li&gt;
&lt;/ul&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;dataSource.&lt;span class="pl-smi"&gt;titleForHeaderInSection&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; { dataSource, index &lt;span class="pl-k"&gt;in&lt;/span&gt;
  &lt;span class="pl-k"&gt;return&lt;/span&gt; dataSource.&lt;span class="pl-smi"&gt;sectionModels&lt;/span&gt;[index].&lt;span class="pl-c1"&gt;header&lt;/span&gt;
}

dataSource.&lt;span class="pl-smi"&gt;titleForFooterInSection&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; { dataSource, indexPath &lt;span class="pl-k"&gt;in&lt;/span&gt;
  &lt;span class="pl-k"&gt;return&lt;/span&gt; dataSource.&lt;span class="pl-smi"&gt;sectionModels&lt;/span&gt;[index].&lt;span class="pl-smi"&gt;footer&lt;/span&gt;
}

dataSource.&lt;span class="pl-smi"&gt;canEditRowAtIndexPath&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; { dataSource, indexPath &lt;span class="pl-k"&gt;in&lt;/span&gt;
  &lt;span class="pl-k"&gt;return&lt;/span&gt; &lt;span class="pl-c1"&gt;true&lt;/span&gt;
}

dataSource.&lt;span class="pl-smi"&gt;canMoveRowAtIndexPath&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; { dataSource, indexPath &lt;span class="pl-k"&gt;in&lt;/span&gt;
  &lt;span class="pl-k"&gt;return&lt;/span&gt; &lt;span class="pl-c1"&gt;true&lt;/span&gt;
}&lt;/pre&gt;&lt;/div&gt;
&lt;ol start="4"&gt;
&lt;li&gt;Define the actual data as an Observable sequence of CustomData objects and bind it to the tableView&lt;/li&gt;
&lt;/ol&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;let&lt;/span&gt; sections &lt;span class="pl-k"&gt;=&lt;/span&gt; [
  &lt;span class="pl-c1"&gt;SectionOfCustomData&lt;/span&gt;(&lt;span class="pl-c1"&gt;header&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;First section&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-c1"&gt;items&lt;/span&gt;: [&lt;span class="pl-c1"&gt;CustomData&lt;/span&gt;(&lt;span class="pl-c1"&gt;anInt&lt;/span&gt;: &lt;span class="pl-c1"&gt;0&lt;/span&gt;, &lt;span class="pl-c1"&gt;aString&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;zero&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-c1"&gt;aCGPoint&lt;/span&gt;: CGPoint.&lt;span class="pl-smi"&gt;zero&lt;/span&gt;), &lt;span class="pl-c1"&gt;CustomData&lt;/span&gt;(&lt;span class="pl-c1"&gt;anInt&lt;/span&gt;: &lt;span class="pl-c1"&gt;1&lt;/span&gt;, &lt;span class="pl-c1"&gt;aString&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;one&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-c1"&gt;aCGPoint&lt;/span&gt;: &lt;span class="pl-c1"&gt;CGPoint&lt;/span&gt;(&lt;span class="pl-c1"&gt;x&lt;/span&gt;: &lt;span class="pl-c1"&gt;1&lt;/span&gt;, &lt;span class="pl-c1"&gt;y&lt;/span&gt;: &lt;span class="pl-c1"&gt;1&lt;/span&gt;)) ]),
  &lt;span class="pl-c1"&gt;SectionOfCustomData&lt;/span&gt;(&lt;span class="pl-c1"&gt;header&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;Second section&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-c1"&gt;items&lt;/span&gt;: [&lt;span class="pl-c1"&gt;CustomData&lt;/span&gt;(&lt;span class="pl-c1"&gt;anInt&lt;/span&gt;: &lt;span class="pl-c1"&gt;2&lt;/span&gt;, &lt;span class="pl-c1"&gt;aString&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;two&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-c1"&gt;aCGPoint&lt;/span&gt;: &lt;span class="pl-c1"&gt;CGPoint&lt;/span&gt;(&lt;span class="pl-c1"&gt;x&lt;/span&gt;: &lt;span class="pl-c1"&gt;2&lt;/span&gt;, &lt;span class="pl-c1"&gt;y&lt;/span&gt;: &lt;span class="pl-c1"&gt;2&lt;/span&gt;)), &lt;span class="pl-c1"&gt;CustomData&lt;/span&gt;(&lt;span class="pl-c1"&gt;anInt&lt;/span&gt;: &lt;span class="pl-c1"&gt;3&lt;/span&gt;, &lt;span class="pl-c1"&gt;aString&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;three&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-c1"&gt;aCGPoint&lt;/span&gt;: &lt;span class="pl-c1"&gt;CGPoint&lt;/span&gt;(&lt;span class="pl-c1"&gt;x&lt;/span&gt;: &lt;span class="pl-c1"&gt;3&lt;/span&gt;, &lt;span class="pl-c1"&gt;y&lt;/span&gt;: &lt;span class="pl-c1"&gt;3&lt;/span&gt;)) ])
]

Observable.&lt;span class="pl-c1"&gt;just&lt;/span&gt;(sections)
  .&lt;span class="pl-c1"&gt;bind&lt;/span&gt;(&lt;span class="pl-c1"&gt;to&lt;/span&gt;: tableView.&lt;span class="pl-smi"&gt;rx&lt;/span&gt;.&lt;span class="pl-c1"&gt;items&lt;/span&gt;(&lt;span class="pl-c1"&gt;dataSource&lt;/span&gt;: dataSource))
  .&lt;span class="pl-c1"&gt;disposed&lt;/span&gt;(&lt;span class="pl-c1"&gt;by&lt;/span&gt;: disposeBag)&lt;/pre&gt;&lt;/div&gt;
&lt;h3&gt;&lt;a id="user-content-animated-data-sources" class="anchor" aria-hidden="true" href="#animated-data-sources"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Animated Data Sources&lt;/h3&gt;
&lt;p&gt;RxDataSources provides two special data source types that automatically take care of animating changes in the bound data source: &lt;code&gt;RxTableViewSectionedAnimatedDataSource&lt;/code&gt; and &lt;code&gt;RxCollectionViewSectionedAnimatedDataSource&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;To use one of the two animated data sources, you must take a few extra steps on top of those outlined above:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;SectionOfCustomData needs to conform to &lt;code&gt;AnimatableSectionModelType&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Your data model must conform to
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;IdentifiableType&lt;/code&gt;: The &lt;code&gt;identity&lt;/code&gt; provided by the &lt;code&gt;IdentifiableType&lt;/code&gt; protocol must be an &lt;strong&gt;immutable identifier representing an instance of the model&lt;/strong&gt;. For example, in case of a &lt;code&gt;Car&lt;/code&gt; model, you might want to use the car's &lt;code&gt;plateNumber&lt;/code&gt; as its identity.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;Equatable&lt;/code&gt;: Conforming to &lt;code&gt;Equatable&lt;/code&gt; helps &lt;code&gt;RxDataSources&lt;/code&gt; determine which cells have changed so it can animate only these specific cells. Meaning, changing &lt;strong&gt;any&lt;/strong&gt; of the &lt;code&gt;Car&lt;/code&gt; model's properties will trigger an animated reload of that cell.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-requirements" class="anchor" aria-hidden="true" href="#requirements"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Requirements&lt;/h2&gt;
&lt;p&gt;Xcode 10.2&lt;/p&gt;
&lt;p&gt;Swift 5.0&lt;/p&gt;
&lt;p&gt;For Swift 4.x version please use versions &lt;code&gt;3.0.0 ... 3.1.0&lt;/code&gt;
For Swift 3.x version please use versions &lt;code&gt;1.0 ... 2.0.2&lt;/code&gt;
For Swift 2.3 version please use versions &lt;code&gt;0.1 ... 0.9&lt;/code&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-installation" class="anchor" aria-hidden="true" href="#installation"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Installation&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;We'll try to keep the API as stable as possible, but breaking API changes can occur.&lt;/strong&gt;&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-cocoapods" class="anchor" aria-hidden="true" href="#cocoapods"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;CocoaPods&lt;/h3&gt;
&lt;p&gt;Podfile&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;pod 'RxDataSources', '~&amp;gt; 4.0'
&lt;/code&gt;&lt;/pre&gt;
&lt;h3&gt;&lt;a id="user-content-carthage" class="anchor" aria-hidden="true" href="#carthage"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Carthage&lt;/h3&gt;
&lt;p&gt;Cartfile&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;github "RxSwiftCommunity/RxDataSources" ~&amp;gt; 4.0
&lt;/code&gt;&lt;/pre&gt;
&lt;/article&gt;&lt;/div&gt;</description><author>RxSwiftCommunity</author><guid isPermaLink="false">https://github.com/RxSwiftCommunity/RxDataSources</guid><pubDate>Sat, 25 Jan 2020 00:21:00 GMT</pubDate></item><item><title>vapor/vapor #22 in Swift, This week</title><link>https://github.com/vapor/vapor</link><description>&lt;p&gt;&lt;i&gt;💧 A server-side Swift web framework.&lt;/i&gt;&lt;/p&gt;&lt;div id="readme" class="md" data-path="README.md"&gt;&lt;article class="markdown-body entry-content p-5" itemprop="text"&gt;&lt;p&gt;&lt;a href="http://vapor.team" rel="nofollow"&gt;&lt;img src="https://user-images.githubusercontent.com/1742140/43014701-5ad8f7de-8c4d-11e8-86d2-4db3d71581aa.png" alt="Vapor" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p align="center"&gt;
	&lt;a href="https://docs.vapor.codes/3.0/" rel="nofollow"&gt;
        &lt;img src="https://camo.githubusercontent.com/6a6cc818201160b182a9c54f1c2ccadbb38fc145/687474703a2f2f696d672e736869656c64732e696f2f62616467652f726561645f7468652d646f63732d3231393666332e737667" alt="Documentation" data-canonical-src="http://img.shields.io/badge/read_the-docs-2196f3.svg" style="max-width:100%;"&gt;
    &lt;/a&gt;
    &lt;a href="https://discord.gg/vapor" rel="nofollow"&gt;
        &lt;img src="https://camo.githubusercontent.com/651a76f52dcbc729802f1f307eff776dbd5ddc52/68747470733a2f2f696d672e736869656c64732e696f2f646973636f72642f3433313931373939383130323637353438352e737667" alt="Team Chat" data-canonical-src="https://img.shields.io/discord/431917998102675485.svg" style="max-width:100%;"&gt;
    &lt;/a&gt;
    &lt;a href="LICENSE"&gt;
        &lt;img src="https://camo.githubusercontent.com/e7302c620b3589a361fc5503732f3505347205d4/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f6c6963656e73652d4d49542d627269676874677265656e2e737667" alt="MIT License" data-canonical-src="https://img.shields.io/badge/license-MIT-brightgreen.svg" style="max-width:100%;"&gt;
    &lt;/a&gt;
    &lt;a href="https://circleci.com/gh/vapor/vapor" rel="nofollow"&gt;
        &lt;img src="https://camo.githubusercontent.com/474a2feaf657f12a6d2f1109a07886ba92fe3d31/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f6275696c642d70617373696e672d627269676874677265656e2e737667" alt="Continuous Integration" data-canonical-src="https://img.shields.io/badge/build-passing-brightgreen.svg" style="max-width:100%;"&gt;
    &lt;/a&gt;
    &lt;a href="https://swift.org" rel="nofollow"&gt;
        &lt;img src="https://camo.githubusercontent.com/ebaea1fcb74274e8ee55fe117217b6cbac9c6acf/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f73776966742d352e312d627269676874677265656e2e737667" alt="Swift 5.1" data-canonical-src="https://img.shields.io/badge/swift-5.1-brightgreen.svg" style="max-width:100%;"&gt;
    &lt;/a&gt;
    &lt;a href="https://twitter.com/codevapor" rel="nofollow"&gt;
        &lt;img src="https://camo.githubusercontent.com/acdbe20bcc4e88471c294d2d02cfd9ef12b997c1/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f747769747465722d636f64657661706f722d3541413945372e737667" alt="Twitter" data-canonical-src="https://img.shields.io/badge/twitter-codevapor-5AA9E7.svg" style="max-width:100%;"&gt;
    &lt;/a&gt;
&lt;/p&gt;
&lt;br&gt;
&lt;p&gt;Vapor is a web framework for Swift. It provides a beautifully expressive and easy to use foundation for your next website, API, or cloud project.&lt;/p&gt;
&lt;p&gt;Take a look at some of the &lt;a href="https://github.com/Cellane/awesome-vapor"&gt;awesome stuff&lt;/a&gt; created with Vapor.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content--community" class="anchor" aria-hidden="true" href="#-community"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;g-emoji class="g-emoji" alias="droplet" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f4a7.png"&gt;💧&lt;/g-emoji&gt; Community&lt;/h3&gt;
&lt;p&gt;Join the welcoming community of fellow Vapor developers on &lt;a href="http://vapor.team" rel="nofollow"&gt;Discord&lt;/a&gt;.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content--contributing" class="anchor" aria-hidden="true" href="#-contributing"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;g-emoji class="g-emoji" alias="rocket" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f680.png"&gt;🚀&lt;/g-emoji&gt; Contributing&lt;/h3&gt;
&lt;p&gt;To contribute a &lt;strong&gt;feature or idea&lt;/strong&gt; to Vapor, &lt;a href="https://github.com/vapor/vapor/issues/new"&gt;create an issue&lt;/a&gt; explaining your idea or bring it up on &lt;a href="http://vapor.team" rel="nofollow"&gt;Discord&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;If you find a &lt;strong&gt;bug&lt;/strong&gt;, please &lt;a href="https://github.com/vapor/vapor/issues/new"&gt;create an issue&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;If you find a &lt;strong&gt;security vulnerability&lt;/strong&gt;, please contact &lt;a href="mailto:security@vapor.codes"&gt;security@vapor.codes&lt;/a&gt; as soon as possible.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content--sponsors" class="anchor" aria-hidden="true" href="#-sponsors"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;g-emoji class="g-emoji" alias="yellow_heart" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f49b.png"&gt;💛&lt;/g-emoji&gt; Sponsors&lt;/h3&gt;
&lt;p&gt;Support Vapor's development by &lt;a href="https://github.com/users/tanner0101/sponsorship"&gt;becoming a sponsor&lt;/a&gt;.&lt;/p&gt;
&lt;a href="http://nodesagency.com" rel="nofollow"&gt;
    &lt;img src="https://user-images.githubusercontent.com/1342803/66773716-a787b900-ee8d-11e9-83c2-54b3d8fce528.png" height="100px" alt="Nodes" style="max-width:100%;"&gt;
&lt;/a&gt;
&lt;a href="https://www.skelpo.com" rel="nofollow"&gt;
    &lt;img src="https://user-images.githubusercontent.com/1342803/66773734-b2dae480-ee8d-11e9-81ca-2f20f4b0f55e.png" height="100px" alt="Skelpo" style="max-width:100%;"&gt;
&lt;/a&gt;
&lt;a href="https://github.com/gwynne"&gt;
    &lt;img src="https://user-images.githubusercontent.com/1342803/70094097-c6820c00-15ef-11ea-899d-f4010ad65875.png" height="100px" alt="Gwynne Raskind" style="max-width:100%;"&gt;
&lt;/a&gt;
&lt;a href="https://github.com/autimatisering"&gt;
    &lt;img src="https://user-images.githubusercontent.com/1342803/71133923-8ad36e80-21b9-11ea-836c-efa05b36a661.png" height="100px" alt="Autimatisering" style="max-width:100%;"&gt;
&lt;/a&gt;
&lt;a href="https://github.com/kylebrowning"&gt;
    &lt;img src="https://user-images.githubusercontent.com/1342803/67107440-7ca5a980-f19a-11e9-8619-b029c96399f7.png" height="100px" alt="Kyle Browning" style="max-width:100%;"&gt;
&lt;/a&gt;
&lt;h3&gt;&lt;a id="user-content--backers" class="anchor" aria-hidden="true" href="#-backers"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;g-emoji class="g-emoji" alias="green_heart" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f49a.png"&gt;💚&lt;/g-emoji&gt; Backers&lt;/h3&gt;
&lt;p&gt;Support Vapor's development by &lt;a href="https://github.com/users/tanner0101/sponsorship"&gt;becoming a backer&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;&lt;a href="https://github.com/MrLotU"&gt;
&lt;img src="https://avatars3.githubusercontent.com/u/18392003?s=120" width="60px" style="max-width:100%;"&gt;
&lt;/a&gt;
&lt;a href="https://github.com/Yasumoto"&gt;
&lt;img src="https://avatars3.githubusercontent.com/u/48383?s=120" width="60px" style="max-width:100%;"&gt;
&lt;/a&gt;
&lt;a href="https://github.com/tkrajacic"&gt;
&lt;img src="https://avatars3.githubusercontent.com/u/873717?s=120" width="60px" style="max-width:100%;"&gt;
&lt;/a&gt;
&lt;a href="https://github.com/slashmo"&gt;
&lt;img src="https://avatars3.githubusercontent.com/u/16192401?s=120" width="60px" style="max-width:100%;"&gt;
&lt;/a&gt;
&lt;a href="https://github.com/ScottRobbins"&gt;
&lt;img src="https://avatars3.githubusercontent.com/u/6894359?s=120" width="60px" style="max-width:100%;"&gt;
&lt;/a&gt;
&lt;a href="https://github.com/ksmandersen"&gt;
&lt;img src="https://avatars3.githubusercontent.com/u/178181?s=120" width="60px" style="max-width:100%;"&gt;
&lt;/a&gt;
&lt;a href="https://github.com/twof"&gt;
&lt;img src="https://avatars3.githubusercontent.com/u/5561501?s=120" width="60px" style="max-width:100%;"&gt;
&lt;/a&gt;
&lt;a href="https://github.com/mikkelu"&gt;
&lt;img src="https://avatars3.githubusercontent.com/u/17051694?s=120" width="60px" style="max-width:100%;"&gt;
&lt;/a&gt;
&lt;a href="https://github.com/grundoon"&gt;
&lt;img src="https://avatars3.githubusercontent.com/u/876321?s=120" width="60px" style="max-width:100%;"&gt;
&lt;/a&gt;
&lt;a href="https://github.com/tylermrolfe"&gt;
&lt;img src="https://avatars3.githubusercontent.com/u/1797243?s=120" width="60px" style="max-width:100%;"&gt;
&lt;/a&gt;
&lt;a href="https://github.com/maartene"&gt;
&lt;img src="https://avatars3.githubusercontent.com/u/5150271?s=120" width="60px" style="max-width:100%;"&gt;
&lt;/a&gt;
&lt;a href="https://github.com/steve-h"&gt;
&lt;img src="https://avatars3.githubusercontent.com/u/1298089?s=120" width="60px" style="max-width:100%;"&gt;
&lt;/a&gt;
&lt;a href="https://github.com/SpencerCurtis"&gt;
&lt;img src="https://avatars3.githubusercontent.com/u/16965587?s=120" width="60px" style="max-width:100%;"&gt;
&lt;/a&gt;
&lt;a href="https://github.com/ezfe"&gt;
&lt;img src="https://avatars3.githubusercontent.com/u/1449259?s=120" width="60px" style="max-width:100%;"&gt;
&lt;/a&gt;
&lt;a href="https://github.com/Mordil"&gt;
&lt;img src="https://avatars3.githubusercontent.com/u/3506776?s=120" width="60px" style="max-width:100%;"&gt;
&lt;/a&gt;
&lt;a href="https://github.com/danielinoa"&gt;
&lt;img src="https://avatars3.githubusercontent.com/u/972877?s=120" width="60px" style="max-width:100%;"&gt;
&lt;/a&gt;
&lt;a href="https://github.com/patrykwas"&gt;
&lt;img src="https://avatars3.githubusercontent.com/u/39051168?s=120" width="60px" style="max-width:100%;"&gt;
&lt;/a&gt;
&lt;a href="https://github.com/MaherKSantina"&gt;
&lt;img src="https://avatars3.githubusercontent.com/u/24646608?s=120" width="60px" style="max-width:100%;"&gt;
&lt;/a&gt;
&lt;a href="https://github.com/shpakovski"&gt;
&lt;img src="https://avatars3.githubusercontent.com/u/163410?s=120" width="60px" style="max-width:100%;"&gt;
&lt;/a&gt;
&lt;a href="https://github.com/jordanebelanger"&gt;
&lt;img src="https://avatars3.githubusercontent.com/u/1856085?s=120" width="60px" style="max-width:100%;"&gt;
&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href="https://opencollective.com/vapor/backer/0/website" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/d424a7f2f19a9b0439ede63e08af0a4c6b6649e6/68747470733a2f2f6f70656e636f6c6c6563746976652e636f6d2f7661706f722f6261636b65722f302f6176617461722e737667" data-canonical-src="https://opencollective.com/vapor/backer/0/avatar.svg" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://opencollective.com/vapor/backer/1/website" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/15912aa6152688f4c1ff0e6b05bfe651a4741b7f/68747470733a2f2f6f70656e636f6c6c6563746976652e636f6d2f7661706f722f6261636b65722f312f6176617461722e737667" data-canonical-src="https://opencollective.com/vapor/backer/1/avatar.svg" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://opencollective.com/vapor/backer/2/website" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/2500f286a04a7dfba0b4b552fe4639711576d473/68747470733a2f2f6f70656e636f6c6c6563746976652e636f6d2f7661706f722f6261636b65722f322f6176617461722e737667" data-canonical-src="https://opencollective.com/vapor/backer/2/avatar.svg" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://opencollective.com/vapor/backer/3/website" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/6de8b2140b2912a98efefa15ba3abf564b4df8c9/68747470733a2f2f6f70656e636f6c6c6563746976652e636f6d2f7661706f722f6261636b65722f332f6176617461722e737667" data-canonical-src="https://opencollective.com/vapor/backer/3/avatar.svg" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://opencollective.com/vapor/backer/4/website" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/b162fd72ed19d45c2523c8d58298dfab930b681e/68747470733a2f2f6f70656e636f6c6c6563746976652e636f6d2f7661706f722f6261636b65722f342f6176617461722e737667" data-canonical-src="https://opencollective.com/vapor/backer/4/avatar.svg" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://opencollective.com/vapor/backer/5/website" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/c3131fae93ed02f95ead5d943f5088e6ac9dae64/68747470733a2f2f6f70656e636f6c6c6563746976652e636f6d2f7661706f722f6261636b65722f352f6176617461722e737667" data-canonical-src="https://opencollective.com/vapor/backer/5/avatar.svg" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://opencollective.com/vapor/backer/6/website" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/0e17b3f188e9cb3fea567ef4e3df6c990f65cb9a/68747470733a2f2f6f70656e636f6c6c6563746976652e636f6d2f7661706f722f6261636b65722f362f6176617461722e737667" data-canonical-src="https://opencollective.com/vapor/backer/6/avatar.svg" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://opencollective.com/vapor/backer/7/website" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/5dfcf5cd7f59ea8cd677741126fa74fa87dfe171/68747470733a2f2f6f70656e636f6c6c6563746976652e636f6d2f7661706f722f6261636b65722f372f6176617461722e737667" data-canonical-src="https://opencollective.com/vapor/backer/7/avatar.svg" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://opencollective.com/vapor/backer/8/website" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/17fca50e3b5becda8de0063a19d073a6455cda96/68747470733a2f2f6f70656e636f6c6c6563746976652e636f6d2f7661706f722f6261636b65722f382f6176617461722e737667" data-canonical-src="https://opencollective.com/vapor/backer/8/avatar.svg" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://opencollective.com/vapor/backer/9/website" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/3de7442449b259b680a269818e0cbf817fc32b67/68747470733a2f2f6f70656e636f6c6c6563746976652e636f6d2f7661706f722f6261636b65722f392f6176617461722e737667" data-canonical-src="https://opencollective.com/vapor/backer/9/avatar.svg" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://opencollective.com/vapor/backer/10/website" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/e29bd462b035277f33359d2a2e0275062a2812cc/68747470733a2f2f6f70656e636f6c6c6563746976652e636f6d2f7661706f722f6261636b65722f31302f6176617461722e737667" data-canonical-src="https://opencollective.com/vapor/backer/10/avatar.svg" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://opencollective.com/vapor/backer/11/website" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/687e722908af10e2583807ed3fc99fa5cdc1ddda/68747470733a2f2f6f70656e636f6c6c6563746976652e636f6d2f7661706f722f6261636b65722f31312f6176617461722e737667" data-canonical-src="https://opencollective.com/vapor/backer/11/avatar.svg" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://opencollective.com/vapor/backer/12/website" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/dcf5b433b68d9027454f0a9de577f1829922a1ec/68747470733a2f2f6f70656e636f6c6c6563746976652e636f6d2f7661706f722f6261636b65722f31322f6176617461722e737667" data-canonical-src="https://opencollective.com/vapor/backer/12/avatar.svg" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://opencollective.com/vapor/backer/13/website" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/17810b06e2dd424876e2354a79c82b1f95722ca3/68747470733a2f2f6f70656e636f6c6c6563746976652e636f6d2f7661706f722f6261636b65722f31332f6176617461722e737667" data-canonical-src="https://opencollective.com/vapor/backer/13/avatar.svg" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://opencollective.com/vapor/backer/14/website" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/2aff6c356802ca72c23a4b69f1f2ec047d6b1b3f/68747470733a2f2f6f70656e636f6c6c6563746976652e636f6d2f7661706f722f6261636b65722f31342f6176617461722e737667" data-canonical-src="https://opencollective.com/vapor/backer/14/avatar.svg" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://opencollective.com/vapor/backer/15/website" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/07b50a033c5c2bf980fbc121ae6a752b8871d4be/68747470733a2f2f6f70656e636f6c6c6563746976652e636f6d2f7661706f722f6261636b65722f31352f6176617461722e737667" data-canonical-src="https://opencollective.com/vapor/backer/15/avatar.svg" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://opencollective.com/vapor/backer/16/website" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/c03bbd9af3d0f68f46e9d3178f698c0951ccbf40/68747470733a2f2f6f70656e636f6c6c6563746976652e636f6d2f7661706f722f6261636b65722f31362f6176617461722e737667" data-canonical-src="https://opencollective.com/vapor/backer/16/avatar.svg" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://opencollective.com/vapor/backer/17/website" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/57061f407311fe8f76b802855b90bf243cd99ae3/68747470733a2f2f6f70656e636f6c6c6563746976652e636f6d2f7661706f722f6261636b65722f31372f6176617461722e737667" data-canonical-src="https://opencollective.com/vapor/backer/17/avatar.svg" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://opencollective.com/vapor/backer/18/website" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/3cd3f77dbbde76617c030bb896fef7b19e4cccab/68747470733a2f2f6f70656e636f6c6c6563746976652e636f6d2f7661706f722f6261636b65722f31382f6176617461722e737667" data-canonical-src="https://opencollective.com/vapor/backer/18/avatar.svg" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://opencollective.com/vapor/backer/19/website" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/7e248ccbd8b613e2841ec8d9da75fafbbe42451c/68747470733a2f2f6f70656e636f6c6c6563746976652e636f6d2f7661706f722f6261636b65722f31392f6176617461722e737667" data-canonical-src="https://opencollective.com/vapor/backer/19/avatar.svg" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://opencollective.com/vapor/backer/20/website" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/bbfa795bdcb58fc0d1c2449a668b5b38df134d6b/68747470733a2f2f6f70656e636f6c6c6563746976652e636f6d2f7661706f722f6261636b65722f32302f6176617461722e737667" data-canonical-src="https://opencollective.com/vapor/backer/20/avatar.svg" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://opencollective.com/vapor/backer/21/website" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/2ee2fea042dc49239179424ed7a606b95526af23/68747470733a2f2f6f70656e636f6c6c6563746976652e636f6d2f7661706f722f6261636b65722f32312f6176617461722e737667" data-canonical-src="https://opencollective.com/vapor/backer/21/avatar.svg" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://opencollective.com/vapor/backer/22/website" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/b42f5411ce0a2bb4e93dade5c64b832d12bd0c21/68747470733a2f2f6f70656e636f6c6c6563746976652e636f6d2f7661706f722f6261636b65722f32322f6176617461722e737667" data-canonical-src="https://opencollective.com/vapor/backer/22/avatar.svg" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://opencollective.com/vapor/backer/23/website" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/8226a7853b506ccf7394a6bf5fc1a043861d75d6/68747470733a2f2f6f70656e636f6c6c6563746976652e636f6d2f7661706f722f6261636b65722f32332f6176617461722e737667" data-canonical-src="https://opencollective.com/vapor/backer/23/avatar.svg" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://opencollective.com/vapor/backer/24/website" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/96004bf1255e05315022cf23423f2cd18f7839fc/68747470733a2f2f6f70656e636f6c6c6563746976652e636f6d2f7661706f722f6261636b65722f32342f6176617461722e737667" data-canonical-src="https://opencollective.com/vapor/backer/24/avatar.svg" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://opencollective.com/vapor/backer/25/website" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/9529958c6fd0614eb83f64199c66f56552351108/68747470733a2f2f6f70656e636f6c6c6563746976652e636f6d2f7661706f722f6261636b65722f32352f6176617461722e737667" data-canonical-src="https://opencollective.com/vapor/backer/25/avatar.svg" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://opencollective.com/vapor/backer/26/website" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/8ec855aae96446f1a7d1949c1b6858d1593b3b2a/68747470733a2f2f6f70656e636f6c6c6563746976652e636f6d2f7661706f722f6261636b65722f32362f6176617461722e737667" data-canonical-src="https://opencollective.com/vapor/backer/26/avatar.svg" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://opencollective.com/vapor/backer/27/website" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/b16e16d73cbd20f910577e797a5ff2da189212c9/68747470733a2f2f6f70656e636f6c6c6563746976652e636f6d2f7661706f722f6261636b65722f32372f6176617461722e737667" data-canonical-src="https://opencollective.com/vapor/backer/27/avatar.svg" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://opencollective.com/vapor/backer/28/website" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/d84722e438e0bd74977f573aae549a3284e939ed/68747470733a2f2f6f70656e636f6c6c6563746976652e636f6d2f7661706f722f6261636b65722f32382f6176617461722e737667" data-canonical-src="https://opencollective.com/vapor/backer/28/avatar.svg" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://opencollective.com/vapor/backer/29/website" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/6a26cb36f3eb994a23912cfe489cc163b0e52cfd/68747470733a2f2f6f70656e636f6c6c6563746976652e636f6d2f7661706f722f6261636b65722f32392f6176617461722e737667" data-canonical-src="https://opencollective.com/vapor/backer/29/avatar.svg" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://opencollective.com/vapor/backer/30/website" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/5a5f9080ccf0e4271301b896149d57ecd51c6615/68747470733a2f2f6f70656e636f6c6c6563746976652e636f6d2f7661706f722f6261636b65722f33302f6176617461722e737667" data-canonical-src="https://opencollective.com/vapor/backer/30/avatar.svg" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://opencollective.com/vapor/backer/31/website" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/ddadddaaa1391bf76d64bd046a6adfad8e2b9875/68747470733a2f2f6f70656e636f6c6c6563746976652e636f6d2f7661706f722f6261636b65722f33312f6176617461722e737667" data-canonical-src="https://opencollective.com/vapor/backer/31/avatar.svg" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://opencollective.com/vapor/backer/32/website" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/6b495e618c7145afcf93810484b77bf761a7bad9/68747470733a2f2f6f70656e636f6c6c6563746976652e636f6d2f7661706f722f6261636b65722f33322f6176617461722e737667" data-canonical-src="https://opencollective.com/vapor/backer/32/avatar.svg" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://opencollective.com/vapor/backer/33/website" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/34336a047f14b8b9b38d3d22803a1183855aa3b6/68747470733a2f2f6f70656e636f6c6c6563746976652e636f6d2f7661706f722f6261636b65722f33332f6176617461722e737667" data-canonical-src="https://opencollective.com/vapor/backer/33/avatar.svg" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://opencollective.com/vapor/backer/34/website" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/e44afaceb402cd24d5093e2b013e3406382205fe/68747470733a2f2f6f70656e636f6c6c6563746976652e636f6d2f7661706f722f6261636b65722f33342f6176617461722e737667" data-canonical-src="https://opencollective.com/vapor/backer/34/avatar.svg" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://opencollective.com/vapor/backer/35/website" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/0c9fdc1c60818a1b354cbc6cfb9ac3011e9661a4/68747470733a2f2f6f70656e636f6c6c6563746976652e636f6d2f7661706f722f6261636b65722f33352f6176617461722e737667" data-canonical-src="https://opencollective.com/vapor/backer/35/avatar.svg" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://opencollective.com/vapor/backer/36/website" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/60543a3882efad5e2188580665dab9f8631bbeb9/68747470733a2f2f6f70656e636f6c6c6563746976652e636f6d2f7661706f722f6261636b65722f33362f6176617461722e737667" data-canonical-src="https://opencollective.com/vapor/backer/36/avatar.svg" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://opencollective.com/vapor/backer/37/website" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/67eb7a7bead0beb645701ef9eccd8542d7f86a8d/68747470733a2f2f6f70656e636f6c6c6563746976652e636f6d2f7661706f722f6261636b65722f33372f6176617461722e737667" data-canonical-src="https://opencollective.com/vapor/backer/37/avatar.svg" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://opencollective.com/vapor/backer/38/website" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/81e72d49489f2e02ccdd5d029361b38d76971487/68747470733a2f2f6f70656e636f6c6c6563746976652e636f6d2f7661706f722f6261636b65722f33382f6176617461722e737667" data-canonical-src="https://opencollective.com/vapor/backer/38/avatar.svg" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://opencollective.com/vapor/backer/39/website" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/ea13dfa580deb6b02e88056c7290cdcf682cd108/68747470733a2f2f6f70656e636f6c6c6563746976652e636f6d2f7661706f722f6261636b65722f33392f6176617461722e737667" data-canonical-src="https://opencollective.com/vapor/backer/39/avatar.svg" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://opencollective.com/vapor/backer/40/website" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/6730f3bb2641ce96f193c46a8fe2066691b712e1/68747470733a2f2f6f70656e636f6c6c6563746976652e636f6d2f7661706f722f6261636b65722f34302f6176617461722e737667" data-canonical-src="https://opencollective.com/vapor/backer/40/avatar.svg" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://opencollective.com/vapor/backer/41/website" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/8d80b02d2afaeb8139911ea1ec7899da5569bdda/68747470733a2f2f6f70656e636f6c6c6563746976652e636f6d2f7661706f722f6261636b65722f34312f6176617461722e737667" data-canonical-src="https://opencollective.com/vapor/backer/41/avatar.svg" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://opencollective.com/vapor/backer/42/website" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/b3e05a1e207553a716b581c51c758ad59707397f/68747470733a2f2f6f70656e636f6c6c6563746976652e636f6d2f7661706f722f6261636b65722f34322f6176617461722e737667" data-canonical-src="https://opencollective.com/vapor/backer/42/avatar.svg" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://opencollective.com/vapor/backer/43/website" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/249a37ac33e1cfab9d27c60891132d4a808abcd8/68747470733a2f2f6f70656e636f6c6c6563746976652e636f6d2f7661706f722f6261636b65722f34332f6176617461722e737667" data-canonical-src="https://opencollective.com/vapor/backer/43/avatar.svg" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://opencollective.com/vapor/backer/44/website" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/974ec7686ddce13fe409145f744178873f05d361/68747470733a2f2f6f70656e636f6c6c6563746976652e636f6d2f7661706f722f6261636b65722f34342f6176617461722e737667" data-canonical-src="https://opencollective.com/vapor/backer/44/avatar.svg" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://opencollective.com/vapor/backer/45/website" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/ab82907859d6b6c6eab5ff21f47c2396f1ad1e29/68747470733a2f2f6f70656e636f6c6c6563746976652e636f6d2f7661706f722f6261636b65722f34352f6176617461722e737667" data-canonical-src="https://opencollective.com/vapor/backer/45/avatar.svg" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://opencollective.com/vapor/backer/46/website" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/5c0a67f161c883ef32d54578c5c85b82a71fb1af/68747470733a2f2f6f70656e636f6c6c6563746976652e636f6d2f7661706f722f6261636b65722f34362f6176617461722e737667" data-canonical-src="https://opencollective.com/vapor/backer/46/avatar.svg" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://opencollective.com/vapor/backer/47/website" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/dda24ceed218774fbf3e48f45283bfff0e40f57c/68747470733a2f2f6f70656e636f6c6c6563746976652e636f6d2f7661706f722f6261636b65722f34372f6176617461722e737667" data-canonical-src="https://opencollective.com/vapor/backer/47/avatar.svg" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://opencollective.com/vapor/backer/48/website" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/ed9fd11eee4928c2e970b47de7333f22e2b2f7b5/68747470733a2f2f6f70656e636f6c6c6563746976652e636f6d2f7661706f722f6261636b65722f34382f6176617461722e737667" data-canonical-src="https://opencollective.com/vapor/backer/48/avatar.svg" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href=""&gt;&lt;img src="https://camo.githubusercontent.com/8447f36967ea3d5dd28344d33b0f53a5f6629b57/687474703a2f2f7777772e676f6f676c652d616e616c79746963732e636f6d2f636f6c6c6563743f763d3126743d7061676576696577265f733d3126646c3d68747470732533412532462532466769746875622e636f6d2532467661706f722532467661706f72265f753d4d41437e266369643d313735373031343335342e31333933393634303435267469643d55412d37363137373335382d36" alt="analytics" data-canonical-src="http://www.google-analytics.com/collect?v=1&amp;amp;t=pageview&amp;amp;_s=1&amp;amp;dl=https%3A%2F%2Fgithub.com%2Fvapor%2Fvapor&amp;amp;_u=MAC~&amp;amp;cid=1757014354.1393964045&amp;amp;tid=UA-76177358-6" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;/article&gt;&lt;/div&gt;</description><author>vapor</author><guid isPermaLink="false">https://github.com/vapor/vapor</guid><pubDate>Sat, 25 Jan 2020 00:22:00 GMT</pubDate></item><item><title>ashleymills/Reachability.swift #23 in Swift, This week</title><link>https://github.com/ashleymills/Reachability.swift</link><description>&lt;p&gt;&lt;i&gt;Replacement for Apple's Reachability re-written in Swift with closures&lt;/i&gt;&lt;/p&gt;&lt;div id="readme" class="md" data-path="README.md"&gt;&lt;article class="markdown-body entry-content p-5" itemprop="text"&gt;&lt;h1&gt;&lt;a id="user-content-reachabilityswift" class="anchor" aria-hidden="true" href="#reachabilityswift"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Reachability.swift&lt;/h1&gt;
&lt;p&gt;Reachability.swift is a replacement for Apple's Reachability sample, re-written in Swift with closures.&lt;/p&gt;
&lt;p&gt;It is compatible with &lt;strong&gt;iOS&lt;/strong&gt; (8.0 - 12.0), &lt;strong&gt;OSX&lt;/strong&gt; (10.9 - 10.14) and &lt;strong&gt;tvOS&lt;/strong&gt; (9.0 - 12.0)&lt;/p&gt;
&lt;p&gt;Inspired by &lt;a href="https://github.com/tonymillion/Reachability"&gt;https://github.com/tonymillion/Reachability&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-supporting-reachabilityswift" class="anchor" aria-hidden="true" href="#supporting-reachabilityswift"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Supporting &lt;strong&gt;Reachability.swift&lt;/strong&gt;&lt;/h2&gt;
&lt;p&gt;Keeping &lt;strong&gt;Reachability.swift&lt;/strong&gt; up-to-date is a time consuming task. Making updates, reviewing pull requests, responding to issues and answering emails all take time.&lt;/p&gt;
&lt;p&gt;Please consider sponsoring me &lt;a href="https://github.com/sponsors/ashleymills"&gt;https://github.com/sponsors/ashleymills&lt;/a&gt;, it's a great way to say thanks!&lt;/p&gt;
&lt;p&gt;If you're an iOS developer who's looking for a quick and easy way to create App Store screenshots, please try out my app &lt;a href="https://itunes.apple.com/app/apple-store/id1252374855?pt=215893&amp;amp;ct=reachability&amp;amp;mt=8" rel="nofollow"&gt;Screenshot Producer&lt;/a&gt;…&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th align="center"&gt;Devices &lt;/th&gt;
&lt;th align="center"&gt;Layout&lt;/th&gt;
&lt;th align="center"&gt;Copy&lt;/th&gt;
&lt;th align="center"&gt;Localize&lt;/th&gt;
&lt;th align="center"&gt;Export      &lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td align="center"&gt;&lt;a target="_blank" rel="noopener noreferrer" href="https://camo.githubusercontent.com/6338e090ba886f7075929d3a34a50f8a13a3d77c/687474703a2f2f6973322e6d7a7374617469632e636f6d2f696d6167652f7468756d622f507572706c653131382f76342f36342f61662f35352f36346166353562632d326566302d363931632d663566332d3439363336383566376636332f736f757263652f3535327834313462622e6a7067"&gt;&lt;img src="https://camo.githubusercontent.com/6338e090ba886f7075929d3a34a50f8a13a3d77c/687474703a2f2f6973322e6d7a7374617469632e636f6d2f696d6167652f7468756d622f507572706c653131382f76342f36342f61662f35352f36346166353562632d326566302d363931632d663566332d3439363336383566376636332f736f757263652f3535327834313462622e6a7067" alt="" data-canonical-src="http://is2.mzstatic.com/image/thumb/Purple118/v4/64/af/55/64af55bc-2ef0-691c-f5f3-4963685f7f63/source/552x414bb.jpg" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/td&gt;
&lt;td align="center"&gt;&lt;a target="_blank" rel="noopener noreferrer" href="https://camo.githubusercontent.com/394ed5c9b8587e05df9ce38b479522ffa635ae5f/687474703a2f2f6973342e6d7a7374617469632e636f6d2f696d6167652f7468756d622f507572706c653132382f76342f66622f34632f62642f66623463626432662d646430342d323262612d346664662d3561633635323639336662382f736f757263652f3535327834313462622e6a7067"&gt;&lt;img src="https://camo.githubusercontent.com/394ed5c9b8587e05df9ce38b479522ffa635ae5f/687474703a2f2f6973342e6d7a7374617469632e636f6d2f696d6167652f7468756d622f507572706c653132382f76342f66622f34632f62642f66623463626432662d646430342d323262612d346664662d3561633635323639336662382f736f757263652f3535327834313462622e6a7067" alt="" data-canonical-src="http://is4.mzstatic.com/image/thumb/Purple128/v4/fb/4c/bd/fb4cbd2f-dd04-22ba-4fdf-5ac652693fb8/source/552x414bb.jpg" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/td&gt;
&lt;td align="center"&gt;&lt;a target="_blank" rel="noopener noreferrer" href="https://camo.githubusercontent.com/d5232fdad2134e3cfc2dd6ff2e8235278581f6b1/687474703a2f2f6973312e6d7a7374617469632e636f6d2f696d6167652f7468756d622f507572706c653131382f76342f35612f34662f63662f35613466636664662d636130342d303330372d396632652d3833313738653861643930642f736f757263652f3535327834313462622e6a7067"&gt;&lt;img src="https://camo.githubusercontent.com/d5232fdad2134e3cfc2dd6ff2e8235278581f6b1/687474703a2f2f6973312e6d7a7374617469632e636f6d2f696d6167652f7468756d622f507572706c653131382f76342f35612f34662f63662f35613466636664662d636130342d303330372d396632652d3833313738653861643930642f736f757263652f3535327834313462622e6a7067" alt="" data-canonical-src="http://is1.mzstatic.com/image/thumb/Purple118/v4/5a/4f/cf/5a4fcfdf-ca04-0307-9f2e-83178e8ad90d/source/552x414bb.jpg" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/td&gt;
&lt;td align="center"&gt;&lt;a target="_blank" rel="noopener noreferrer" href="https://camo.githubusercontent.com/260f075dc9cc648822ea183b569de9df581a2841/687474703a2f2f6973342e6d7a7374617469632e636f6d2f696d6167652f7468756d622f507572706c653132382f76342f31372f65612f35362f31376561353632652d653034352d393665372d666361632d6366616166346634393966642f736f757263652f3535327834313462622e6a7067"&gt;&lt;img src="https://camo.githubusercontent.com/260f075dc9cc648822ea183b569de9df581a2841/687474703a2f2f6973342e6d7a7374617469632e636f6d2f696d6167652f7468756d622f507572706c653132382f76342f31372f65612f35362f31376561353632652d653034352d393665372d666361632d6366616166346634393966642f736f757263652f3535327834313462622e6a7067" alt="" data-canonical-src="http://is4.mzstatic.com/image/thumb/Purple128/v4/17/ea/56/17ea562e-e045-96e7-fcac-cfaaf4f499fd/source/552x414bb.jpg" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/td&gt;
&lt;td align="center"&gt;&lt;a target="_blank" rel="noopener noreferrer" href="https://camo.githubusercontent.com/1c978d4b738ce2e7966a1f626b5011b3327679dd/687474703a2f2f6973342e6d7a7374617469632e636f6d2f696d6167652f7468756d622f507572706c653131382f76342f35392f39652f64642f35393965646435302d663035632d663431332d386538382d6536313437333166643832382f736f757263652f3535327834313462622e6a7067"&gt;&lt;img src="https://camo.githubusercontent.com/1c978d4b738ce2e7966a1f626b5011b3327679dd/687474703a2f2f6973342e6d7a7374617469632e636f6d2f696d6167652f7468756d622f507572706c653131382f76342f35392f39652f64642f35393965646435302d663035632d663431332d386538382d6536313437333166643832382f736f757263652f3535327834313462622e6a7067" alt="" data-canonical-src="http://is4.mzstatic.com/image/thumb/Purple118/v4/59/9e/dd/599edd50-f05c-f413-8e88-e614731fd828/source/552x414bb.jpg" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;And don't forget to &lt;strong&gt;★&lt;/strong&gt; the repo. This increases its visibility and encourages others to contribute.&lt;/p&gt;
&lt;p&gt;Thanks
Ash&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-got-a-problem" class="anchor" aria-hidden="true" href="#got-a-problem"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Got a problem?&lt;/h2&gt;
&lt;p&gt;Please read &lt;a href="https://github.com/ashleymills/Reachability.swift/blob/master/CONTRIBUTING.md"&gt;https://github.com/ashleymills/Reachability.swift/blob/master/CONTRIBUTING.md&lt;/a&gt; before raising an issue.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-installation" class="anchor" aria-hidden="true" href="#installation"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Installation&lt;/h2&gt;
&lt;h3&gt;&lt;a id="user-content-manual" class="anchor" aria-hidden="true" href="#manual"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Manual&lt;/h3&gt;
&lt;p&gt;Just drop the &lt;strong&gt;Reachability.swift&lt;/strong&gt; file into your project. That's it!&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-cocoapods" class="anchor" aria-hidden="true" href="#cocoapods"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;CocoaPods&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://cocoapods.org" rel="nofollow"&gt;CocoaPods&lt;/a&gt; is a dependency manager for Cocoa projects. To install Reachability.swift with CocoaPods:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;Make sure CocoaPods is &lt;a href="https://guides.cocoapods.org/using/getting-started.html#getting-started" rel="nofollow"&gt;installed&lt;/a&gt;.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Update your Podfile to include the following:&lt;/p&gt;
&lt;div class="highlight highlight-source-ruby"&gt;&lt;pre&gt;use_frameworks!
pod &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;ReachabilitySwift&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Run &lt;code&gt;pod install&lt;/code&gt;.&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;ol start="4"&gt;
&lt;li&gt;In your code import Reachability like so:
&lt;code&gt;import Reachability&lt;/code&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;h3&gt;&lt;a id="user-content-carthage" class="anchor" aria-hidden="true" href="#carthage"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Carthage&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://github.com/Carthage/Carthage"&gt;Carthage&lt;/a&gt; is a decentralized dependency manager that builds your dependencies and provides you with binary frameworks.
To install Reachability.swift with Carthage:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Install Carthage via &lt;a href="http://brew.sh" rel="nofollow"&gt;Homebrew&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt;$ brew update
$ brew install carthage&lt;/pre&gt;&lt;/div&gt;
&lt;ol start="2"&gt;
&lt;li&gt;
&lt;p&gt;Add &lt;code&gt;github "ashleymills/Reachability.swift"&lt;/code&gt; to your Cartfile.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Run &lt;code&gt;carthage update&lt;/code&gt;.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Drag &lt;code&gt;Reachability.framework&lt;/code&gt; from the &lt;code&gt;Carthage/Build/iOS/&lt;/code&gt; directory to the &lt;code&gt;Linked Frameworks and Libraries&lt;/code&gt; section of your Xcode project’s &lt;code&gt;General&lt;/code&gt; settings.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Add &lt;code&gt;$(SRCROOT)/Carthage/Build/iOS/Reachability.framework&lt;/code&gt; to &lt;code&gt;Input Files&lt;/code&gt; of Run Script Phase for Carthage.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;In your code import Reachability like so:
&lt;code&gt;import Reachability&lt;/code&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h2&gt;&lt;a id="user-content-example---closures" class="anchor" aria-hidden="true" href="#example---closures"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Example - closures&lt;/h2&gt;
&lt;p&gt;NOTE: All closures are run on the &lt;strong&gt;main queue&lt;/strong&gt;.&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt;declare this property where it won't go out of scope relative to your listener&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;&lt;span class="pl-k"&gt;let&lt;/span&gt; reachability &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-k"&gt;try&lt;/span&gt;&lt;span class="pl-k"&gt;!&lt;/span&gt; &lt;span class="pl-c1"&gt;Reachability&lt;/span&gt;()

reachability.&lt;span class="pl-smi"&gt;whenReachable&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; { reachability &lt;span class="pl-k"&gt;in&lt;/span&gt;
    &lt;span class="pl-k"&gt;if&lt;/span&gt; reachability.&lt;span class="pl-smi"&gt;connection&lt;/span&gt; &lt;span class="pl-k"&gt;==&lt;/span&gt; .&lt;span class="pl-smi"&gt;wifi&lt;/span&gt; {
        &lt;span class="pl-c1"&gt;print&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;Reachable via WiFi&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
    } &lt;span class="pl-k"&gt;else&lt;/span&gt; {
        &lt;span class="pl-c1"&gt;print&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;Reachable via Cellular&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
    }
}
reachability.&lt;span class="pl-smi"&gt;whenUnreachable&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; { &lt;span class="pl-c1"&gt;_&lt;/span&gt; &lt;span class="pl-k"&gt;in&lt;/span&gt;
    &lt;span class="pl-c1"&gt;print&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;Not reachable&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
}

&lt;span class="pl-k"&gt;do&lt;/span&gt; {
    &lt;span class="pl-k"&gt;try&lt;/span&gt; reachability.&lt;span class="pl-c1"&gt;startNotifier&lt;/span&gt;()
} &lt;span class="pl-k"&gt;catch&lt;/span&gt; {
    &lt;span class="pl-c1"&gt;print&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;Unable to start notifier&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
}&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;and for stopping notifications&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;reachability.&lt;span class="pl-c1"&gt;stopNotifier&lt;/span&gt;()&lt;/pre&gt;&lt;/div&gt;
&lt;h2&gt;&lt;a id="user-content-example---notifications" class="anchor" aria-hidden="true" href="#example---notifications"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Example - notifications&lt;/h2&gt;
&lt;p&gt;NOTE: All notifications are delivered on the &lt;strong&gt;main queue&lt;/strong&gt;.&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt;declare this property where it won't go out of scope relative to your listener&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;&lt;span class="pl-k"&gt;let&lt;/span&gt; reachability &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-k"&gt;try&lt;/span&gt;&lt;span class="pl-k"&gt;!&lt;/span&gt; &lt;span class="pl-c1"&gt;Reachability&lt;/span&gt;()

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt;declare this inside of viewWillAppear&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;
     NotificationCenter.&lt;span class="pl-smi"&gt;default&lt;/span&gt;.&lt;span class="pl-c1"&gt;addObserver&lt;/span&gt;(&lt;span class="pl-c1"&gt;self&lt;/span&gt;, &lt;span class="pl-c1"&gt;selector&lt;/span&gt;: &lt;span class="pl-c1"&gt;#selector&lt;/span&gt;(&lt;span class="pl-en"&gt;reachabilityChanged&lt;/span&gt;(&lt;span class="pl-en"&gt;note:&lt;/span&gt;)), &lt;span class="pl-c1"&gt;name&lt;/span&gt;: .&lt;span class="pl-smi"&gt;reachabilityChanged&lt;/span&gt;, &lt;span class="pl-c1"&gt;object&lt;/span&gt;: reachability)
    &lt;span class="pl-k"&gt;do&lt;/span&gt;{
      &lt;span class="pl-k"&gt;try&lt;/span&gt; reachability.&lt;span class="pl-c1"&gt;startNotifier&lt;/span&gt;()
    }&lt;span class="pl-k"&gt;catch&lt;/span&gt;{
      &lt;span class="pl-c1"&gt;print&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;could not start reachability notifier&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
    }&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;and&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;@objc&lt;/span&gt; &lt;span class="pl-k"&gt;func&lt;/span&gt; &lt;span class="pl-en"&gt;reachabilityChanged&lt;/span&gt;(&lt;span class="pl-smi"&gt;&lt;span class="pl-en"&gt;note&lt;/span&gt;&lt;/span&gt;: Notification) {

  &lt;span class="pl-k"&gt;let&lt;/span&gt; reachability &lt;span class="pl-k"&gt;=&lt;/span&gt; note.&lt;span class="pl-smi"&gt;object&lt;/span&gt; &lt;span class="pl-k"&gt;as!&lt;/span&gt; Reachability

  &lt;span class="pl-k"&gt;switch&lt;/span&gt; reachability.&lt;span class="pl-smi"&gt;connection&lt;/span&gt; {
  &lt;span class="pl-k"&gt;case&lt;/span&gt; .&lt;span class="pl-smi"&gt;wifi&lt;/span&gt;&lt;span class="pl-k"&gt;:&lt;/span&gt;
      &lt;span class="pl-c1"&gt;print&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;Reachable via WiFi&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
  &lt;span class="pl-k"&gt;case&lt;/span&gt; .&lt;span class="pl-smi"&gt;cellular&lt;/span&gt;&lt;span class="pl-k"&gt;:&lt;/span&gt;
      &lt;span class="pl-c1"&gt;print&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;Reachable via Cellular&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
  &lt;span class="pl-k"&gt;case&lt;/span&gt; .&lt;span class="pl-smi"&gt;unavailable&lt;/span&gt;&lt;span class="pl-k"&gt;:&lt;/span&gt;
    &lt;span class="pl-c1"&gt;print&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;Network not reachable&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
  }
}&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;and for stopping notifications&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;reachability.&lt;span class="pl-c1"&gt;stopNotifier&lt;/span&gt;()
NotificationCenter.&lt;span class="pl-smi"&gt;default&lt;/span&gt;.&lt;span class="pl-c1"&gt;removeObserver&lt;/span&gt;(&lt;span class="pl-c1"&gt;self&lt;/span&gt;, &lt;span class="pl-c1"&gt;name&lt;/span&gt;: .&lt;span class="pl-smi"&gt;reachabilityChanged&lt;/span&gt;, &lt;span class="pl-c1"&gt;object&lt;/span&gt;: reachability)&lt;/pre&gt;&lt;/div&gt;
&lt;h2&gt;&lt;a id="user-content-want-to-help" class="anchor" aria-hidden="true" href="#want-to-help"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Want to help?&lt;/h2&gt;
&lt;p&gt;Got a bug fix, or a new feature? Create a pull request and go for it!&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-let-me-know" class="anchor" aria-hidden="true" href="#let-me-know"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Let me know!&lt;/h2&gt;
&lt;p&gt;If you use &lt;strong&gt;Reachability.swift&lt;/strong&gt;, please let me know about your app and I'll put a link &lt;a href="https://github.com/ashleymills/Reachability.swift/wiki/Apps-using-Reachability.swift"&gt;here…&lt;/a&gt; and tell your friends!&lt;/p&gt;
&lt;p&gt;Cheers,
Ash&lt;/p&gt;
&lt;/article&gt;&lt;/div&gt;</description><author>ashleymills</author><guid isPermaLink="false">https://github.com/ashleymills/Reachability.swift</guid><pubDate>Sat, 25 Jan 2020 00:23:00 GMT</pubDate></item><item><title>marmelroy/PhoneNumberKit #24 in Swift, This week</title><link>https://github.com/marmelroy/PhoneNumberKit</link><description>&lt;p&gt;&lt;i&gt;A Swift framework for parsing, formatting and validating international phone numbers. Inspired by Google's libphonenumber.&lt;/i&gt;&lt;/p&gt;&lt;div id="readme" class="md" data-path="README.md"&gt;&lt;article class="markdown-body entry-content p-5" itemprop="text"&gt;&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="https://cloud.githubusercontent.com/assets/889949/20864386/a1307950-b9ef-11e6-8a58-e9c5103738e7.png"&gt;&lt;img src="https://cloud.githubusercontent.com/assets/889949/20864386/a1307950-b9ef-11e6-8a58-e9c5103738e7.png" alt="PhoneNumberKit" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="http://cocoapods.org/?q=PhoneNumberKit" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/21382df54a2acfe5f5ef69beb2ea0f9d93dd11a9/68747470733a2f2f696d672e736869656c64732e696f2f636f636f61706f64732f702f50686f6e654e756d6265724b69742e7376673f6d61784167653d32353932303030" alt="Platform" data-canonical-src="https://img.shields.io/cocoapods/p/PhoneNumberKit.svg?maxAge=2592000" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://travis-ci.org/marmelroy/PhoneNumberKit" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/a95ff28120160df088553387283271be7956669a/68747470733a2f2f7472617669732d63692e6f72672f6d61726d656c726f792f50686f6e654e756d6265724b69742e7376673f6272616e63683d6d6173746572" alt="Build Status" data-canonical-src="https://travis-ci.org/marmelroy/PhoneNumberKit.svg?branch=master" style="max-width:100%;"&gt;&lt;/a&gt; &lt;a href="http://cocoapods.org/?q=PhoneNumberKit" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/fd0d43a2eaf31672e09e52f926e89b696b6371bc/687474703a2f2f696d672e736869656c64732e696f2f636f636f61706f64732f762f50686f6e654e756d6265724b69742e737667" alt="Version" data-canonical-src="http://img.shields.io/cocoapods/v/PhoneNumberKit.svg" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://github.com/Carthage/Carthage"&gt;&lt;img src="https://camo.githubusercontent.com/3dc8a44a2c3f7ccd5418008d1295aae48466c141/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f43617274686167652d636f6d70617469626c652d3442433531442e7376673f7374796c653d666c6174" alt="Carthage compatible" data-canonical-src="https://img.shields.io/badge/Carthage-compatible-4BC51D.svg?style=flat" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h1&gt;&lt;a id="user-content-phonenumberkit" class="anchor" aria-hidden="true" href="#phonenumberkit"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;PhoneNumberKit&lt;/h1&gt;
&lt;p&gt;Swift 5.0 framework for parsing, formatting and validating international phone numbers.
Inspired by Google's libphonenumber.&lt;/p&gt;
&lt;p&gt;&lt;a href="https://github.com/marmelroy/PhoneNumberKit/blob/master/Documentation/OXMIGRATIONGUIDE.md"&gt;Migrating from PhoneNumberKit 0.x? See the migration guide.&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-features" class="anchor" aria-hidden="true" href="#features"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Features&lt;/h2&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;&lt;/th&gt;
&lt;th&gt;Features&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;g-emoji class="g-emoji" alias="phone" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/260e.png"&gt;☎️&lt;/g-emoji&gt;&lt;/td&gt;
&lt;td&gt;Validate, normalize and extract the elements of any phone number string.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;g-emoji class="g-emoji" alias="100" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f4af.png"&gt;💯&lt;/g-emoji&gt;&lt;/td&gt;
&lt;td&gt;Simple Swift syntax and a lightweight readable codebase.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;g-emoji class="g-emoji" alias="checkered_flag" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f3c1.png"&gt;🏁&lt;/g-emoji&gt;&lt;/td&gt;
&lt;td&gt;Fast. 1000 parses -&amp;gt; ~0.4 seconds.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;g-emoji class="g-emoji" alias="books" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f4da.png"&gt;📚&lt;/g-emoji&gt;&lt;/td&gt;
&lt;td&gt;Best-in-class metadata from Google's libPhoneNumber project.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;g-emoji class="g-emoji" alias="trophy" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f3c6.png"&gt;🏆&lt;/g-emoji&gt;&lt;/td&gt;
&lt;td&gt;Fully tested to match the accuracy of Google's JavaScript implementation of libPhoneNumber.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;g-emoji class="g-emoji" alias="iphone" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f4f1.png"&gt;📱&lt;/g-emoji&gt;&lt;/td&gt;
&lt;td&gt;Built for iOS. Automatically grabs the default region code from the phone.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;g-emoji class="g-emoji" alias="memo" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f4dd.png"&gt;📝&lt;/g-emoji&gt;&lt;/td&gt;
&lt;td&gt;Editable (!) AsYouType formatter for UITextField.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;g-emoji class="g-emoji" alias="us" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f1fa-1f1f8.png"&gt;🇺🇸&lt;/g-emoji&gt;&lt;/td&gt;
&lt;td&gt;Convert country codes to country names and vice versa&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h2&gt;&lt;a id="user-content-usage" class="anchor" aria-hidden="true" href="#usage"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Usage&lt;/h2&gt;
&lt;p&gt;Import PhoneNumberKit at the top of the Swift file that will interact with a phone number.&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;import&lt;/span&gt; &lt;span class="pl-en"&gt;PhoneNumberKit&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;All of your interactions with PhoneNumberKit happen through a PhoneNumberKit object. The first step you should take is to allocate one.&lt;/p&gt;
&lt;p&gt;A PhoneNumberKit instance is relatively expensive to allocate (it parses the metadata and keeps it in memory for the object's lifecycle), you should try and make sure PhoneNumberKit is allocated once and deallocated when no longer needed.&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;let&lt;/span&gt; phoneNumberKit &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;PhoneNumberKit&lt;/span&gt;()&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;To parse a string, use the parse function. The region code is automatically computed but can be overridden if needed. PhoneNumberKit automatically does a hard type validation to ensure that the object created is valid, this can be quite costly performance-wise and can be turned off if needed.&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;do&lt;/span&gt; {
    &lt;span class="pl-k"&gt;let&lt;/span&gt; phoneNumber &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-k"&gt;try&lt;/span&gt; phoneNumberKit.&lt;span class="pl-c1"&gt;parse&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;+33 6 89 017383&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
    &lt;span class="pl-k"&gt;let&lt;/span&gt; phoneNumberCustomDefaultRegion &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-k"&gt;try&lt;/span&gt; phoneNumberKit.&lt;span class="pl-c1"&gt;parse&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;+44 20 7031 3000&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-c1"&gt;withRegion&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;GB&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-c1"&gt;ignoreType&lt;/span&gt;: &lt;span class="pl-c1"&gt;true&lt;/span&gt;)
}
&lt;span class="pl-k"&gt;catch&lt;/span&gt; {
    &lt;span class="pl-c1"&gt;print&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;Generic parser error&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
}&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;If you need to parse and validate a large amount of numbers at once, PhoneNumberKit has a special, lightning fast array parsing function. The default region code is automatically computed but can be overridden if needed. Here you can also ignore hard type validation if it is not necessary. Invalid numbers are ignored in the resulting array.&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;let&lt;/span&gt; rawNumberArray &lt;span class="pl-k"&gt;=&lt;/span&gt; [&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;0291 12345678&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;+49 291 12345678&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;04134 1234&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;09123 12345&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;]
&lt;span class="pl-k"&gt;let&lt;/span&gt; phoneNumbers &lt;span class="pl-k"&gt;=&lt;/span&gt; phoneNumberKit.&lt;span class="pl-c1"&gt;parse&lt;/span&gt;(rawNumberArray)
&lt;span class="pl-k"&gt;let&lt;/span&gt; phoneNumbersCustomDefaultRegion &lt;span class="pl-k"&gt;=&lt;/span&gt; phoneNumberKit.&lt;span class="pl-c1"&gt;parse&lt;/span&gt;(rawNumberArray, &lt;span class="pl-c1"&gt;withRegion&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;DE&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;,  &lt;span class="pl-c1"&gt;ignoreType&lt;/span&gt;: &lt;span class="pl-c1"&gt;true&lt;/span&gt;)&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;PhoneNumber objects are immutable Swift structs with the following properties:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;phoneNumber.&lt;span class="pl-smi"&gt;numberString&lt;/span&gt;
phoneNumber.&lt;span class="pl-smi"&gt;countryCode&lt;/span&gt;
phoneNumber.&lt;span class="pl-smi"&gt;nationalNumber&lt;/span&gt;
phoneNumber.&lt;span class="pl-smi"&gt;numberExtension&lt;/span&gt;
phoneNumber.&lt;span class="pl-smi"&gt;type&lt;/span&gt; &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; e.g Mobile or Fixed&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Formatting a PhoneNumber object into a string is also very easy&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;phoneNumberKit.&lt;span class="pl-c1"&gt;format&lt;/span&gt;(phoneNumber, &lt;span class="pl-c1"&gt;toType&lt;/span&gt;: .&lt;span class="pl-smi"&gt;e164&lt;/span&gt;) &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; +61236618300&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;phoneNumberKit.&lt;span class="pl-c1"&gt;format&lt;/span&gt;(phoneNumber, &lt;span class="pl-c1"&gt;toType&lt;/span&gt;: .&lt;span class="pl-smi"&gt;international&lt;/span&gt;) &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; +61 2 3661 8300&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;phoneNumberKit.&lt;span class="pl-c1"&gt;format&lt;/span&gt;(phoneNumber, &lt;span class="pl-c1"&gt;toType&lt;/span&gt;: .&lt;span class="pl-smi"&gt;national&lt;/span&gt;) &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; (02) 3661 8300&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h2&gt;&lt;a id="user-content-phonenumbertextfield" class="anchor" aria-hidden="true" href="#phonenumbertextfield"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;PhoneNumberTextField&lt;/h2&gt;
&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="https://user-images.githubusercontent.com/7651280/67554038-e6512500-f751-11e9-93c9-9111e899a2ef.gif"&gt;&lt;img src="https://user-images.githubusercontent.com/7651280/67554038-e6512500-f751-11e9-93c9-9111e899a2ef.gif" alt="AsYouTypeFormatter" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;To use the AsYouTypeFormatter, just replace your UITextField with a PhoneNumberTextField (if you are using Interface Builder make sure the module field is set to PhoneNumberKit).&lt;/p&gt;
&lt;p&gt;You can customize your TextField UI in the following ways&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;withFlag&lt;/code&gt; will display the country code for the &lt;code&gt;currentRegion&lt;/code&gt;. The &lt;code&gt;flagButton&lt;/code&gt; is displayed in the &lt;code&gt;leftView&lt;/code&gt; of the text field with it's size set based off your text size.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;withExamplePlaceholder&lt;/code&gt; uses &lt;code&gt;attributedPlaceholder&lt;/code&gt; to show an example number for the &lt;code&gt;currentRegion&lt;/code&gt;. In addition when &lt;code&gt;withPrefix&lt;/code&gt; is set, the country code's prefix will automatically be inserted and removed when editing changes.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;PhoneNumberTextField automatically formats phone numbers and gives the user full editing capabilities. If you want to customize you can use the PartialFormatter directly. The default region code is automatically computed but can be overridden if needed (see the example given below).&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;class&lt;/span&gt; &lt;span class="pl-en"&gt;MyGBTextField&lt;/span&gt;: &lt;span class="pl-e"&gt;PhoneNumberTextField &lt;/span&gt;{
    &lt;span class="pl-k"&gt;override&lt;/span&gt; &lt;span class="pl-k"&gt;var&lt;/span&gt; defaultRegion&lt;span class="pl-k"&gt;:&lt;/span&gt; &lt;span class="pl-c1"&gt;String&lt;/span&gt; {
        &lt;span class="pl-k"&gt;get&lt;/span&gt; {
            &lt;span class="pl-k"&gt;return&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;GB&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;
        }
        &lt;span class="pl-k"&gt;set&lt;/span&gt; {} &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; exists for backward compatibility&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;    }
}&lt;/pre&gt;&lt;/div&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;let&lt;/span&gt; textField &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;PhoneNumberTextField&lt;/span&gt;()

&lt;span class="pl-c1"&gt;PartialFormatter&lt;/span&gt;().&lt;span class="pl-c1"&gt;formatPartial&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;+336895555&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;) &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; +33 6 89 55 55&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;You can also query countries for a dialing code or the dialing code for a given country&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;phoneNumberKit.&lt;span class="pl-c1"&gt;countries&lt;/span&gt;(&lt;span class="pl-c1"&gt;withCode&lt;/span&gt;: &lt;span class="pl-c1"&gt;33&lt;/span&gt;)
phoneNumberKit.&lt;span class="pl-c1"&gt;countryCode&lt;/span&gt;(&lt;span class="pl-c1"&gt;for&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;FR&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)&lt;/pre&gt;&lt;/div&gt;
&lt;h2&gt;&lt;a id="user-content-need-more-customization" class="anchor" aria-hidden="true" href="#need-more-customization"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Need more customization?&lt;/h2&gt;
&lt;p&gt;You can access the metadata powering PhoneNumberKit yourself, this enables you to program any behaviours as they may be implemented in PhoneNumberKit itself. It does mean you are exposed to the less polished interface of the underlying file format. If you program something you find useful please push it upstream!&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;phoneNumberKit.&lt;span class="pl-c1"&gt;metadata&lt;/span&gt;(&lt;span class="pl-c1"&gt;for&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;AU&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)&lt;span class="pl-k"&gt;?&lt;/span&gt;.&lt;span class="pl-smi"&gt;mobile&lt;/span&gt;&lt;span class="pl-k"&gt;?&lt;/span&gt;.&lt;span class="pl-smi"&gt;exampleNumber&lt;/span&gt; &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; 412345678&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h3&gt;&lt;a id="user-content-setting-up-with-carthage" class="anchor" aria-hidden="true" href="#setting-up-with-carthage"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Setting up with Carthage&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://github.com/Carthage/Carthage"&gt;Carthage&lt;/a&gt; is a decentralized dependency manager that automates the process of adding frameworks to your Cocoa application.&lt;/p&gt;
&lt;p&gt;You can install Carthage with &lt;a href="http://brew.sh/" rel="nofollow"&gt;Homebrew&lt;/a&gt; using the following command:&lt;/p&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt;$ brew update
$ brew install carthage&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;To integrate PhoneNumberKit into your Xcode project using Carthage, specify it in your &lt;code&gt;Cartfile&lt;/code&gt;:&lt;/p&gt;
&lt;pre lang="ogdl"&gt;&lt;code&gt;github "marmelroy/PhoneNumberKit"
&lt;/code&gt;&lt;/pre&gt;
&lt;h3&gt;&lt;a id="user-content-setting-up-with-cocoapods" class="anchor" aria-hidden="true" href="#setting-up-with-cocoapods"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Setting up with &lt;a href="http://cocoapods.org/?q=PhoneNumberKit" rel="nofollow"&gt;CocoaPods&lt;/a&gt;&lt;/h3&gt;
&lt;div class="highlight highlight-source-ruby"&gt;&lt;pre&gt;source &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;https://github.com/CocoaPods/Specs.git&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;
pod &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;PhoneNumberKit&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;~&amp;gt; 3.1&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;/article&gt;&lt;/div&gt;</description><author>marmelroy</author><guid isPermaLink="false">https://github.com/marmelroy/PhoneNumberKit</guid><pubDate>Sat, 25 Jan 2020 00:24:00 GMT</pubDate></item><item><title>ephread/Instructions #25 in Swift, This week</title><link>https://github.com/ephread/Instructions</link><description>&lt;p&gt;&lt;i&gt;Create walkthroughs and guided tours (coach marks) in a simple way, with Swift.&lt;/i&gt;&lt;/p&gt;&lt;div id="readme" class="md" data-path="README.md"&gt;&lt;article class="markdown-body entry-content p-5" itemprop="text"&gt;&lt;h1&gt;&lt;a id="" class="anchor" aria-hidden="true" href="#"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;a target="_blank" rel="noopener noreferrer" href="https://camo.githubusercontent.com/dd6f8e6c865dcf4f9198310e3008f3e71a238e92/68747470733a2f2f692e696d6775722e636f6d2f305746527338652e706e67"&gt;&lt;img src="https://camo.githubusercontent.com/dd6f8e6c865dcf4f9198310e3008f3e71a238e92/68747470733a2f2f692e696d6775722e636f6d2f305746527338652e706e67" alt="Instructions" data-canonical-src="https://i.imgur.com/0WFRs8e.png" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/h1&gt;
&lt;p&gt;&lt;a href="https://travis-ci.org/ephread/Instructions" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/0c3359d73eefc8b0db34e40009e556315f5ca1c9/68747470733a2f2f696d672e736869656c64732e696f2f7472617669732f657068726561642f496e737472756374696f6e732e737667" alt="Travis build status" data-canonical-src="https://img.shields.io/travis/ephread/Instructions.svg" style="max-width:100%;"&gt;&lt;/a&gt; &lt;a href="https://codebeat.co/projects/github-com-ephread-instructions" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/febbce698fc4cbb7d713287ef0bf9352fd23ecc4/68747470733a2f2f636f6465626561742e636f2f6261646765732f37626262313762352d326364652d343130382d616163302d656566636434333963663966" alt="codebeat badge" data-canonical-src="https://codebeat.co/badges/7bbb17b5-2cde-4108-aac0-eefcd439cf9f" style="max-width:100%;"&gt;&lt;/a&gt; &lt;a href="https://codecov.io/gh/ephread/Instructions" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/74b060e12e6db0dee1ac17cb4abe9a56bd300b24/68747470733a2f2f636f6465636f762e696f2f67682f657068726561642f496e737472756374696f6e732f6272616e63682f6d61737465722f67726170682f62616467652e737667" alt="codecov" data-canonical-src="https://codecov.io/gh/ephread/Instructions/branch/master/graph/badge.svg" style="max-width:100%;"&gt;&lt;/a&gt; &lt;a href="https://cocoapods.org/pods/Instructions" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/f3057668b0a66df2d5f72a4c5c2314f7caaa1d9f/68747470733a2f2f696d672e736869656c64732e696f2f636f636f61706f64732f762f496e737472756374696f6e732e737667" alt="CocoaPods Shield" data-canonical-src="https://img.shields.io/cocoapods/v/Instructions.svg" style="max-width:100%;"&gt;&lt;/a&gt; &lt;a href="https://github.com/Carthage/Carthage"&gt;&lt;img src="https://camo.githubusercontent.com/3dc8a44a2c3f7ccd5418008d1295aae48466c141/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f43617274686167652d636f6d70617469626c652d3442433531442e7376673f7374796c653d666c6174" alt="Carthage compatible" data-canonical-src="https://img.shields.io/badge/Carthage-compatible-4BC51D.svg?style=flat" style="max-width:100%;"&gt;&lt;/a&gt; &lt;a href="https://gitter.im/ephread/Instructions?utm_source=badge&amp;amp;utm_medium=badge&amp;amp;utm_campaign=pr-badge&amp;amp;utm_content=badge" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/da2edb525cde1455a622c58c0effc3a90b9a181c/68747470733a2f2f6261646765732e6769747465722e696d2f4a6f696e253230436861742e737667" alt="Join the chat at https://gitter.im/ephread/Instructions" data-canonical-src="https://badges.gitter.im/Join%20Chat.svg" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Add customizable coach marks into your iOS project. Available for both iPhone and iPad.&lt;/p&gt;
&lt;h1&gt;&lt;a id="user-content-table-of-contents" class="anchor" aria-hidden="true" href="#table-of-contents"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Table of contents&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="#overview"&gt;Overview&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#features"&gt;Features&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#requirements"&gt;Requirements&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#asking-questions--contributing"&gt;Asking Questions / Contributing&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="#asking-questions"&gt;Asking Questions&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#contributing"&gt;Contributing&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="#installation"&gt;Installation&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="#cocoapods"&gt;CocoaPods&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#carthage"&gt;Carthage&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#manually"&gt;Manually&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="#usage"&gt;Usage&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="#getting-started"&gt;Getting Started&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#advanced-usage"&gt;Advanced Usage&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="#instructions-within-app-extensions"&gt;Usage within App Extensions&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#license"&gt;License&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-overview" class="anchor" aria-hidden="true" href="#overview"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Overview&lt;/h2&gt;
&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="https://camo.githubusercontent.com/072ef03302b2ba16605c71f8e5e7a19bb700e149/687474703a2f2f692e696d6775722e636f6d2f4a556c514839462e676966"&gt;&lt;img src="https://camo.githubusercontent.com/072ef03302b2ba16605c71f8e5e7a19bb700e149/687474703a2f2f692e696d6775722e636f6d2f4a556c514839462e676966" alt="Instructions Demo" data-canonical-src="http://i.imgur.com/JUlQH9F.gif" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-features" class="anchor" aria-hidden="true" href="#features"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Features&lt;/h2&gt;
&lt;ul class="contains-task-list"&gt;
&lt;li class="task-list-item"&gt;&lt;input type="checkbox" id="" disabled="" class="task-list-item-checkbox" checked=""&gt; &lt;a href="#advanced-usage"&gt;Customizable highlight system&lt;/a&gt;&lt;/li&gt;
&lt;li class="task-list-item"&gt;&lt;input type="checkbox" id="" disabled="" class="task-list-item-checkbox" checked=""&gt; &lt;a href="#providing-custom-views"&gt;Customizable views&lt;/a&gt;&lt;/li&gt;
&lt;li class="task-list-item"&gt;&lt;input type="checkbox" id="" disabled="" class="task-list-item-checkbox" checked=""&gt; &lt;a href="#customizing-how-the-coach-mark-will-show"&gt;Customizable positions&lt;/a&gt;&lt;/li&gt;
&lt;li class="task-list-item"&gt;&lt;input type="checkbox" id="" disabled="" class="task-list-item-checkbox" checked=""&gt; &lt;a href="#let-users-skip-the-tour"&gt;Skipable tour&lt;/a&gt;&lt;/li&gt;
&lt;li class="task-list-item"&gt;&lt;input type="checkbox" id="" disabled="" class="task-list-item-checkbox" checked=""&gt; &lt;a href="#piloting-the-flow-from-the-code"&gt;Pilotable from code&lt;/a&gt;&lt;/li&gt;
&lt;li class="task-list-item"&gt;&lt;input type="checkbox" id="" disabled="" class="task-list-item-checkbox" checked=""&gt; &lt;a href="#usage-within-app-extensions"&gt;App Extensions support&lt;/a&gt;&lt;/li&gt;
&lt;li class="task-list-item"&gt;&lt;input type="checkbox" id="" disabled="" class="task-list-item-checkbox" checked=""&gt; &lt;a href="#animating-coach-marks"&gt;Animatable coach marks&lt;/a&gt;&lt;/li&gt;
&lt;li class="task-list-item"&gt;&lt;input type="checkbox" id="" disabled="" class="task-list-item-checkbox" checked=""&gt; Right-to-left support&lt;/li&gt;
&lt;li class="task-list-item"&gt;&lt;input type="checkbox" id="" disabled="" class="task-list-item-checkbox" checked=""&gt; Size transition support (orientation and multi-tasking)&lt;/li&gt;
&lt;li class="task-list-item"&gt;&lt;input type="checkbox" id="" disabled="" class="task-list-item-checkbox" checked=""&gt; Partial &lt;code&gt;UIVisualEffectView&lt;/code&gt; support&lt;/li&gt;
&lt;li class="task-list-item"&gt;&lt;input type="checkbox" id="" disabled="" class="task-list-item-checkbox"&gt; Cross controllers walkthrough&lt;/li&gt;
&lt;li class="task-list-item"&gt;&lt;input type="checkbox" id="" disabled="" class="task-list-item-checkbox"&gt; Multiple coach marks support&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-requirements" class="anchor" aria-hidden="true" href="#requirements"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Requirements&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Xcode 11 / Swift 5+&lt;/li&gt;
&lt;li&gt;iOS 11.0+&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-asking-questions--contributing" class="anchor" aria-hidden="true" href="#asking-questions--contributing"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Asking Questions / Contributing&lt;/h2&gt;
&lt;h3&gt;&lt;a id="user-content-asking-questions" class="anchor" aria-hidden="true" href="#asking-questions"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Asking questions&lt;/h3&gt;
&lt;p&gt;If you need help with something in particular, ask a question in the &lt;a href="https://gitter.im/ephread/Instructions" rel="nofollow"&gt;Gitter room&lt;/a&gt;.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-contributing" class="anchor" aria-hidden="true" href="#contributing"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Contributing&lt;/h3&gt;
&lt;p&gt;If you want to contribute, be sure to take a look at &lt;a href="https://github.com/ephread/Instructions/blob/master/CONTRIBUTING.md"&gt;the contributing guide&lt;/a&gt;.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-installation" class="anchor" aria-hidden="true" href="#installation"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Installation&lt;/h2&gt;
&lt;h3&gt;&lt;a id="user-content-cocoapods" class="anchor" aria-hidden="true" href="#cocoapods"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;CocoaPods&lt;/h3&gt;
&lt;p&gt;Add Instructions to your Podfile:&lt;/p&gt;
&lt;div class="highlight highlight-source-ruby"&gt;&lt;pre&gt;source &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;https://github.com/CocoaPods/Specs.git&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;
platform &lt;span class="pl-c1"&gt;:ios&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;10.0&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;
use_frameworks!

pod &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;Instructions&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;~&amp;gt; 1.4.0&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Then, run the following command:&lt;/p&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt;$ pod install&lt;/pre&gt;&lt;/div&gt;
&lt;h3&gt;&lt;a id="user-content-carthage" class="anchor" aria-hidden="true" href="#carthage"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Carthage&lt;/h3&gt;
&lt;p&gt;Add Instructions to your Cartfile:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;github "ephread/Instructions" ~&amp;gt; 1.4.0
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;You can then update, build and drag the generated framework into your project:&lt;/p&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt;$ carthage update
$ carthage build&lt;/pre&gt;&lt;/div&gt;
&lt;h3&gt;&lt;a id="user-content-manually" class="anchor" aria-hidden="true" href="#manually"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Manually&lt;/h3&gt;
&lt;p&gt;If you rather stay away from both CocoaPods and Carthage, you can also install Instructions manually, with the cost of managing updates yourself.&lt;/p&gt;
&lt;h4&gt;&lt;a id="user-content-embedded-framework" class="anchor" aria-hidden="true" href="#embedded-framework"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Embedded Framework&lt;/h4&gt;
&lt;ol&gt;
&lt;li&gt;Drag the Instructions.xcodeproj into the project navigator of your application's Xcode project.&lt;/li&gt;
&lt;li&gt;Still in the project navigator, select your application project. The target configuration panel should show up.&lt;/li&gt;
&lt;li&gt;Select the appropriate target and in the "General" panel, scroll down to the section named "Embedded Binaries".&lt;/li&gt;
&lt;li&gt;Click on the + button and select the "Instructions.framework" under the "Product" directory.&lt;/li&gt;
&lt;/ol&gt;
&lt;h2&gt;&lt;a id="user-content-usage" class="anchor" aria-hidden="true" href="#usage"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Usage&lt;/h2&gt;
&lt;h3&gt;&lt;a id="user-content-getting-started" class="anchor" aria-hidden="true" href="#getting-started"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Getting started&lt;/h3&gt;
&lt;p&gt;Open up the controller for which you wish to display coach marks and instantiate a new &lt;code&gt;CoachMarksController&lt;/code&gt;. You should also provide a &lt;code&gt;dataSource&lt;/code&gt;, which is an object conforming to the &lt;code&gt;CoachMarksControllerDataSource&lt;/code&gt; protocol.&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;class&lt;/span&gt; &lt;span class="pl-en"&gt;DefaultViewController&lt;/span&gt;: &lt;span class="pl-e"&gt;UIViewController&lt;/span&gt;, &lt;span class="pl-e"&gt;CoachMarksControllerDataSource&lt;/span&gt;, &lt;span class="pl-e"&gt;CoachMarksControllerDelegate &lt;/span&gt;{
    &lt;span class="pl-k"&gt;let&lt;/span&gt; coachMarksController &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;CoachMarksController&lt;/span&gt;()

    &lt;span class="pl-k"&gt;override&lt;/span&gt; &lt;span class="pl-k"&gt;func&lt;/span&gt; &lt;span class="pl-en"&gt;viewDidLoad&lt;/span&gt;() {
        &lt;span class="pl-c1"&gt;super&lt;/span&gt;.&lt;span class="pl-c1"&gt;viewDidLoad&lt;/span&gt;()

        &lt;span class="pl-c1"&gt;self&lt;/span&gt;.&lt;span class="pl-smi"&gt;coachMarksController&lt;/span&gt;.&lt;span class="pl-smi"&gt;dataSource&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;self&lt;/span&gt;
    }
}&lt;/pre&gt;&lt;/div&gt;
&lt;h4&gt;&lt;a id="user-content-data-source" class="anchor" aria-hidden="true" href="#data-source"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Data Source&lt;/h4&gt;
&lt;p&gt;&lt;code&gt;CoachMarksControllerDataSource&lt;/code&gt; declares three mandatory methods.&lt;/p&gt;
&lt;p&gt;The first one asks for the number of coach marks to display. Let's pretend that you want to display only one coach mark. Note that the &lt;code&gt;CoachMarksController&lt;/code&gt; requesting the information is supplied, allowing you to supply data for multiple &lt;code&gt;CoachMarksController&lt;/code&gt;, within a single dataSource.&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;func&lt;/span&gt; &lt;span class="pl-en"&gt;numberOfCoachMarks&lt;/span&gt;(&lt;span class="pl-en"&gt;for&lt;/span&gt; &lt;span class="pl-smi"&gt;coachMarksController&lt;/span&gt;: CoachMarksController) &lt;span class="pl-k"&gt;-&amp;gt;&lt;/span&gt; &lt;span class="pl-c1"&gt;Int&lt;/span&gt; {
    &lt;span class="pl-k"&gt;return&lt;/span&gt; &lt;span class="pl-c1"&gt;1&lt;/span&gt;
}&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;The second one asks for metadata. This allows you to customize how a coach mark will position and appear, but won't let you define its look (more on this later). Metadata are packaged in a struct named &lt;code&gt;CoachMark&lt;/code&gt;. Note the parameter &lt;code&gt;coachMarkAt&lt;/code&gt;, it gives you the coach mark logical position, much like and &lt;code&gt;IndexPath&lt;/code&gt; would do. &lt;code&gt;coachMarksController&lt;/code&gt; provides you with an easy way to create a default &lt;code&gt;CoachMark&lt;/code&gt; object, from a given view.&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;let&lt;/span&gt; pointOfInterest &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;UIView&lt;/span&gt;()

&lt;span class="pl-k"&gt;func&lt;/span&gt; &lt;span class="pl-en"&gt;coachMarksController&lt;/span&gt;(&lt;span class="pl-en"&gt;_&lt;/span&gt; &lt;span class="pl-smi"&gt;coachMarksController&lt;/span&gt;: CoachMarksController,
                              &lt;span class="pl-en"&gt;coachMarkAt&lt;/span&gt; &lt;span class="pl-smi"&gt;index&lt;/span&gt;: &lt;span class="pl-c1"&gt;Int&lt;/span&gt;) &lt;span class="pl-k"&gt;-&amp;gt;&lt;/span&gt; CoachMark {
    &lt;span class="pl-k"&gt;return&lt;/span&gt; coachMarksController.&lt;span class="pl-smi"&gt;helper&lt;/span&gt;.&lt;span class="pl-c1"&gt;makeCoachMark&lt;/span&gt;(&lt;span class="pl-c1"&gt;for&lt;/span&gt;: pointOfInterest)
}&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;The third one supplies two views (much like &lt;code&gt;cellForRowAtIndexPath&lt;/code&gt;) in the form a Tuple. The &lt;em&gt;body&lt;/em&gt; view is mandatory, as it's the core of the coach mark. The &lt;em&gt;arrow&lt;/em&gt; view is optional.&lt;/p&gt;
&lt;p&gt;But for now, lets just return the default views provided by Instructions.&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;func&lt;/span&gt; &lt;span class="pl-en"&gt;coachMarksController&lt;/span&gt;(&lt;span class="pl-en"&gt;_&lt;/span&gt; &lt;span class="pl-smi"&gt;coachMarksController&lt;/span&gt;: CoachMarksController, &lt;span class="pl-en"&gt;coachMarkViewsAt&lt;/span&gt; &lt;span class="pl-smi"&gt;index&lt;/span&gt;: &lt;span class="pl-c1"&gt;Int&lt;/span&gt;, &lt;span class="pl-en"&gt;madeFrom&lt;/span&gt; &lt;span class="pl-smi"&gt;coachMark&lt;/span&gt;: CoachMark) &lt;span class="pl-k"&gt;-&amp;gt;&lt;/span&gt; (bodyView: CoachMarkBodyView, arrowView: CoachMarkArrowView&lt;span class="pl-k"&gt;?&lt;/span&gt;) {
    &lt;span class="pl-k"&gt;let&lt;/span&gt; coachViews &lt;span class="pl-k"&gt;=&lt;/span&gt; coachMarksController.&lt;span class="pl-smi"&gt;helper&lt;/span&gt;.&lt;span class="pl-c1"&gt;makeDefaultCoachViews&lt;/span&gt;(&lt;span class="pl-c1"&gt;withArrow&lt;/span&gt;: &lt;span class="pl-c1"&gt;true&lt;/span&gt;, &lt;span class="pl-c1"&gt;arrowOrientation&lt;/span&gt;: coachMark.&lt;span class="pl-smi"&gt;arrowOrientation&lt;/span&gt;)

    coachViews.&lt;span class="pl-smi"&gt;bodyView&lt;/span&gt;.&lt;span class="pl-smi"&gt;hintLabel&lt;/span&gt;.&lt;span class="pl-c1"&gt;text&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;Hello! I'm a Coach Mark!&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;
    coachViews.&lt;span class="pl-smi"&gt;bodyView&lt;/span&gt;.&lt;span class="pl-smi"&gt;nextLabel&lt;/span&gt;.&lt;span class="pl-c1"&gt;text&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;Ok!&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;

    &lt;span class="pl-k"&gt;return&lt;/span&gt; (&lt;span class="pl-c1"&gt;bodyView&lt;/span&gt;: coachViews.&lt;span class="pl-smi"&gt;bodyView&lt;/span&gt;, &lt;span class="pl-c1"&gt;arrowView&lt;/span&gt;: coachViews.&lt;span class="pl-smi"&gt;arrowView&lt;/span&gt;)
}&lt;/pre&gt;&lt;/div&gt;
&lt;h4&gt;&lt;a id="user-content-starting-the-coach-marks-flow" class="anchor" aria-hidden="true" href="#starting-the-coach-marks-flow"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Starting the coach marks flow&lt;/h4&gt;
&lt;p&gt;Once the &lt;code&gt;dataSource&lt;/code&gt; is set up, you can start displaying the coach marks. You will most likely supply &lt;code&gt;self&lt;/code&gt; to &lt;code&gt;start&lt;/code&gt;. While the overlay adds itself as a child of the current window (to be on top of everything), the &lt;code&gt;CoachMarksController&lt;/code&gt; will add itself as a child of the view controller you provide. That way, the &lt;code&gt;CoachMarksController&lt;/code&gt; will receive size change events and react accordingly. Be careful, you can't call &lt;code&gt;start&lt;/code&gt; in the &lt;code&gt;viewDidLoad&lt;/code&gt; method, since the view hierarchy has to be set up and ready for Instructions to work properly.&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;override&lt;/span&gt; &lt;span class="pl-k"&gt;func&lt;/span&gt; &lt;span class="pl-en"&gt;viewDidAppear&lt;/span&gt;(&lt;span class="pl-smi"&gt;&lt;span class="pl-en"&gt;animated&lt;/span&gt;&lt;/span&gt;: &lt;span class="pl-c1"&gt;Bool&lt;/span&gt;) {
    &lt;span class="pl-c1"&gt;super&lt;/span&gt;.&lt;span class="pl-c1"&gt;viewDidAppear&lt;/span&gt;(animated)

    &lt;span class="pl-c1"&gt;self&lt;/span&gt;.&lt;span class="pl-smi"&gt;coachMarksController&lt;/span&gt;.&lt;span class="pl-c1"&gt;start&lt;/span&gt;(&lt;span class="pl-c1"&gt;in&lt;/span&gt;: .&lt;span class="pl-c1"&gt;window&lt;/span&gt;(&lt;span class="pl-c1"&gt;over&lt;/span&gt;: &lt;span class="pl-c1"&gt;self&lt;/span&gt;))
}&lt;/pre&gt;&lt;/div&gt;
&lt;h4&gt;&lt;a id="user-content-stopping-the-coach-marks-flow" class="anchor" aria-hidden="true" href="#stopping-the-coach-marks-flow"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Stopping the coach marks flow&lt;/h4&gt;
&lt;p&gt;You should always stop the flow, once the view disappear. To avoid animation artefacts and timing issues, don't forget to add the following code to your &lt;code&gt;viewWillDisappear&lt;/code&gt; method. Calling &lt;code&gt;stop(immediately: true)&lt;/code&gt; will ensure that the flow is stopped immediately upon the disappearance of the view.&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;override&lt;/span&gt; &lt;span class="pl-k"&gt;func&lt;/span&gt; &lt;span class="pl-en"&gt;viewWillDisappear&lt;/span&gt;(&lt;span class="pl-smi"&gt;&lt;span class="pl-en"&gt;animated&lt;/span&gt;&lt;/span&gt;: &lt;span class="pl-c1"&gt;Bool&lt;/span&gt;) {
    &lt;span class="pl-c1"&gt;super&lt;/span&gt;.&lt;span class="pl-c1"&gt;viewWillDisappear&lt;/span&gt;(animated)

    &lt;span class="pl-c1"&gt;self&lt;/span&gt;.&lt;span class="pl-smi"&gt;coachMarksController&lt;/span&gt;.&lt;span class="pl-c1"&gt;stop&lt;/span&gt;(&lt;span class="pl-c1"&gt;immediately&lt;/span&gt;: &lt;span class="pl-c1"&gt;true&lt;/span&gt;)
}&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;You're all set. For more examples you can check the &lt;code&gt;Examples/&lt;/code&gt; directory provided with the library.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-advanced-usage" class="anchor" aria-hidden="true" href="#advanced-usage"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Advanced Usage&lt;/h3&gt;
&lt;h4&gt;&lt;a id="user-content-customizing-general-properties" class="anchor" aria-hidden="true" href="#customizing-general-properties"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Customizing general properties&lt;/h4&gt;
&lt;p&gt;You can customized the background color of the overlay using this property:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;overlay.color&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;You can also make the overlay blur the content sitting behind it. Setting this property to anything else than &lt;code&gt;nil&lt;/code&gt; will disable the &lt;code&gt;overlay.color&lt;/code&gt;:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;overlay.blurEffectStyle: UIBlurEffectStyle?&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Last, you can make the overlay tappable. A tap on the overlay will hide the current coach mark and display the next one.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;overlay.allowTap: Bool&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;g-emoji class="g-emoji" alias="warning" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/26a0.png"&gt;⚠️&lt;/g-emoji&gt; The blurring overlay is not supported in app extensions.&lt;/p&gt;
&lt;h4&gt;&lt;a id="user-content-providing-a-custom-cutout-path" class="anchor" aria-hidden="true" href="#providing-a-custom-cutout-path"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Providing a custom cutout path&lt;/h4&gt;
&lt;p&gt;If you dislike how the default cutout path looks like, you can customize it by providing a block to &lt;code&gt;makeCoachMark(for:)&lt;/code&gt;. The cutout path will automatically be stored in the &lt;code&gt;cutoutPath&lt;/code&gt; property of the returning &lt;code&gt;CoachMark&lt;/code&gt; object:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;var&lt;/span&gt; coachMark &lt;span class="pl-k"&gt;=&lt;/span&gt; coachMarksController.&lt;span class="pl-smi"&gt;helper&lt;/span&gt;.&lt;span class="pl-c1"&gt;makeCoachMark&lt;/span&gt;(&lt;span class="pl-c1"&gt;for&lt;/span&gt;: customView) {
(&lt;span class="pl-c1"&gt;frame&lt;/span&gt;: CGRect) &lt;span class="pl-k"&gt;-&amp;gt;&lt;/span&gt; UIBezierPath &lt;span class="pl-k"&gt;in&lt;/span&gt;
    &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; This will create an oval cutout a bit larger than the view.&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;    &lt;span class="pl-k"&gt;return&lt;/span&gt; &lt;span class="pl-c1"&gt;UIBezierPath&lt;/span&gt;(&lt;span class="pl-c1"&gt;ovalIn&lt;/span&gt;: frame.&lt;span class="pl-c1"&gt;insetBy&lt;/span&gt;(&lt;span class="pl-c1"&gt;dx&lt;/span&gt;: &lt;span class="pl-c1"&gt;-4&lt;/span&gt;, &lt;span class="pl-c1"&gt;dy&lt;/span&gt;: &lt;span class="pl-c1"&gt;-4&lt;/span&gt;))
}&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;code&gt;frame&lt;/code&gt; will be the frame of &lt;code&gt;customView&lt;/code&gt; converted in the &lt;code&gt;coachMarksController.view&lt;/code&gt; referential, so don't have to worry about making sure the coordinates are in the appropriate referential. You can provide any kind of shape, from a simple rectangle to a complex star.&lt;/p&gt;
&lt;h4&gt;&lt;a id="user-content-providing-custom-views" class="anchor" aria-hidden="true" href="#providing-custom-views"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Providing custom views&lt;/h4&gt;
&lt;p&gt;You can (and you should) provide custom views. A coach mark is composed of two views, a &lt;em&gt;body&lt;/em&gt; view and an &lt;em&gt;arrow&lt;/em&gt; view. Note that the term &lt;em&gt;arrow&lt;/em&gt; might be misleading. It doesn't have to be an actual arrow, it can be anything you want.&lt;/p&gt;
&lt;p&gt;A &lt;em&gt;body&lt;/em&gt; view must conform to the &lt;code&gt;CoachMarkBodyView&lt;/code&gt; protocol. An &lt;em&gt;arrow&lt;/em&gt; view must conform to the &lt;code&gt;CoachMarkArrowView&lt;/code&gt; protocol. Both of them must also be subclasses of &lt;code&gt;UIView&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;Returning a &lt;code&gt;CoachMarkBodyView&lt;/code&gt; view is mandatory, while returning a &lt;code&gt;CoachMarkArrowView&lt;/code&gt; is optional.&lt;/p&gt;
&lt;h5&gt;&lt;a id="user-content-coachmarkbodyview-protocol" class="anchor" aria-hidden="true" href="#coachmarkbodyview-protocol"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;CoachMarkBodyView Protocol&lt;/h5&gt;
&lt;p&gt;This protocol defines two properties.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;nextControl: UIControl? { get }&lt;/code&gt; you must implement a getter method for this property in your view, this will let the &lt;code&gt;CoachMarkController&lt;/code&gt; know which control should be tapped, to display the next coach mark. Note that it doesn't have to be a subview, you can return the view itself.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;highlightArrowDelegate: CoachMarkBodyHighlightArrowDelegate?&lt;/code&gt; in case the view itself is the control receiving taps, you might want to forward its highlight state to the &lt;em&gt;arrow&lt;/em&gt; view (so they can look as if they are the same component). The &lt;code&gt;CoachMarkController&lt;/code&gt; will automatically set an appropriate delegate to this property. You'll then be able to do this:&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;override&lt;/span&gt; &lt;span class="pl-k"&gt;var&lt;/span&gt; highlighted&lt;span class="pl-k"&gt;:&lt;/span&gt; &lt;span class="pl-c1"&gt;Bool&lt;/span&gt; {
	&lt;span class="pl-k"&gt;didSet&lt;/span&gt; {
	    &lt;span class="pl-c1"&gt;self&lt;/span&gt;.&lt;span class="pl-smi"&gt;highlightArrowDelegate&lt;/span&gt;&lt;span class="pl-k"&gt;?&lt;/span&gt;.&lt;span class="pl-c1"&gt;highlightArrow&lt;/span&gt;(&lt;span class="pl-c1"&gt;self&lt;/span&gt;.&lt;span class="pl-smi"&gt;highlighted&lt;/span&gt;)
	}
}&lt;/pre&gt;&lt;/div&gt;
&lt;h5&gt;&lt;a id="user-content-taking-orientation-into-account" class="anchor" aria-hidden="true" href="#taking-orientation-into-account"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Taking orientation into account&lt;/h5&gt;
&lt;p&gt;Remember the following method, from the dataSource?&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;func&lt;/span&gt; &lt;span class="pl-en"&gt;coachMarksController&lt;/span&gt;(&lt;span class="pl-en"&gt;_&lt;/span&gt; &lt;span class="pl-smi"&gt;coachMarksController&lt;/span&gt;: CoachMarksController, &lt;span class="pl-en"&gt;coachMarkViewsAt&lt;/span&gt; &lt;span class="pl-smi"&gt;index&lt;/span&gt;: &lt;span class="pl-c1"&gt;Int&lt;/span&gt;, &lt;span class="pl-en"&gt;madeFrom&lt;/span&gt; &lt;span class="pl-smi"&gt;coachMark&lt;/span&gt;: CoachMark) &lt;span class="pl-k"&gt;-&amp;gt;&lt;/span&gt; (bodyView: CoachMarkBodyView, arrowView: CoachMarkArrowView&lt;span class="pl-k"&gt;?&lt;/span&gt;) {
	&lt;span class="pl-k"&gt;let&lt;/span&gt; coachViews &lt;span class="pl-k"&gt;=&lt;/span&gt; coachMarksController.&lt;span class="pl-smi"&gt;helper&lt;/span&gt;.&lt;span class="pl-c1"&gt;makeDefaultCoachViews&lt;/span&gt;(&lt;span class="pl-c1"&gt;withArrow&lt;/span&gt;: &lt;span class="pl-c1"&gt;true&lt;/span&gt;, &lt;span class="pl-c1"&gt;arrowOrientation&lt;/span&gt;: coachMark.&lt;span class="pl-smi"&gt;arrowOrientation&lt;/span&gt;)
}&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;When providing a customized view, you need to provide an &lt;em&gt;arrow&lt;/em&gt; view with the approriate orientation (i. e. in the case of an actual arrow, pointing upward or downward). The &lt;code&gt;CoachMarkController&lt;/code&gt; will tell you which orientation it expects, through the following property: &lt;code&gt;CoachMark.arrowOrientation&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;Browse the &lt;code&gt;Example/&lt;/code&gt; directory for more details.&lt;/p&gt;
&lt;h4&gt;&lt;a id="user-content-presentation-context" class="anchor" aria-hidden="true" href="#presentation-context"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Presentation Context&lt;/h4&gt;
&lt;p&gt;You can choose in which context the coach marks will be displayed, by passing it to `start(in: PresentationContext). The available contexts are:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;.newWindow(over: UIViewController, at: UIWindowLevel?)&lt;/code&gt; – A new window created at the given &lt;code&gt;UIWindowLevel&lt;/code&gt; (not available in app extensions);&lt;/li&gt;
&lt;li&gt;&lt;code&gt;.currentWindow(of: UIViewController)&lt;/code&gt; – The window displaying the given &lt;code&gt;UIViewController&lt;/code&gt;;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;.viewController(_: UIViewController)&lt;/code&gt; – In the &lt;code&gt;view&lt;/code&gt; of the given &lt;code&gt;UIViewController&lt;/code&gt;.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Additionally, you can also provide use &lt;code&gt;window(over: UIViewController)&lt;/code&gt;, which is a convience static method equivalent to calling &lt;code&gt;.newWindow(over: UIViewController, at: UIWindowLevelNormal + 1)&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;&lt;g-emoji class="g-emoji" alias="warning" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/26a0.png"&gt;⚠️&lt;/g-emoji&gt; When using a blur effect on the overlay, setting the window level to anything above &lt;code&gt;UIWindowLevelStatusBar&lt;/code&gt; is not supported.&lt;/p&gt;
&lt;h4&gt;&lt;a id="user-content-customizing-how-the-coach-mark-will-show" class="anchor" aria-hidden="true" href="#customizing-how-the-coach-mark-will-show"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Customizing how the coach mark will show&lt;/h4&gt;
&lt;p&gt;You can customize the following properties:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;gapBetweenBodyAndArrow: CGFloat&lt;/code&gt;: the vertical gap between the &lt;em&gt;body&lt;/em&gt; and the &lt;em&gt;arrow&lt;/em&gt; in a given coach mark.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;pointOfInterest: CGPoint?&lt;/code&gt;: the point toward which the arrow will face. At the moment, it's only used to shift the arrow horizontally and make it sits above or below the point of interest.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;gapBetweenCoachMarkAndCutoutPath: CGFloat&lt;/code&gt;: the gap between the coach mark and the cutout path.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;maxWidth: CGFloat&lt;/code&gt;: the maximum width a coach mark can take. You don't want your coach marks to be too wide, especially on iPads.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;horizontalMargin: CGFloat&lt;/code&gt; is the margin (both leading and trailing) between the edges of the overlay view and the coach mark. Note that if the max width of your coach mark is less than the width of the overlay view, you view will either stack on the left or on the right, leaving space on the other side.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;arrowOrientation: CoachMarkArrowOrientation?&lt;/code&gt; is the orientation of the arrow (not the coach mark, meaning setting this property to &lt;code&gt;.Top&lt;/code&gt; will display the coach mark below the point of interest). Although it's usually pre-computed by the library, you can override it in &lt;code&gt;coachMarksForIndex:&lt;/code&gt; or in &lt;code&gt;coachMarkWillShow:&lt;/code&gt;.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;displayOverCutoutPath: Bool&lt;/code&gt; enables the coach mark to be displayed over the cutout path; please note that arrows won't be visible if you set this property to &lt;code&gt;true&lt;/code&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;disableOverlayTap: Bool&lt;/code&gt; is used to disable the ability to tap on the overlay to show the next coach mark, on a case-by-case basis.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;allowTouchInsideCutoutPath: Bool&lt;/code&gt; is used to allow touch forwarding inside the cutout path. Take a look at &lt;code&gt;TransitionFromCodeViewController&lt;/code&gt;, in the &lt;code&gt;Example/&lt;/code&gt; directory, for more information.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h4&gt;&lt;a id="user-content-animating-coach-marks" class="anchor" aria-hidden="true" href="#animating-coach-marks"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Animating coach marks&lt;/h4&gt;
&lt;p&gt;To animates coach marks, you will need to implement the &lt;code&gt;CoachMarksControllerAnimationDelegate&lt;/code&gt; protocol.&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;func&lt;/span&gt; &lt;span class="pl-en"&gt;coachMarksController&lt;/span&gt;(&lt;span class="pl-en"&gt;_&lt;/span&gt; &lt;span class="pl-smi"&gt;coachMarksController&lt;/span&gt;: CoachMarksController, &lt;span class="pl-en"&gt;fetchAppearanceTransitionOfCoachMark&lt;/span&gt; &lt;span class="pl-smi"&gt;coachMarkView&lt;/span&gt;: UIView, &lt;span class="pl-en"&gt;at&lt;/span&gt; &lt;span class="pl-smi"&gt;index&lt;/span&gt;: &lt;span class="pl-c1"&gt;Int&lt;/span&gt;, &lt;span class="pl-en"&gt;using&lt;/span&gt; &lt;span class="pl-smi"&gt;manager&lt;/span&gt;: CoachMarkTransitionManager)

&lt;span class="pl-k"&gt;func&lt;/span&gt; &lt;span class="pl-en"&gt;coachMarksController&lt;/span&gt;(&lt;span class="pl-en"&gt;_&lt;/span&gt; &lt;span class="pl-smi"&gt;coachMarksController&lt;/span&gt;: CoachMarksController, &lt;span class="pl-en"&gt;fetchDisappearanceTransitionOfCoachMark&lt;/span&gt; &lt;span class="pl-smi"&gt;coachMarkView&lt;/span&gt;: UIView, &lt;span class="pl-en"&gt;at&lt;/span&gt; &lt;span class="pl-smi"&gt;index&lt;/span&gt;: &lt;span class="pl-c1"&gt;Int&lt;/span&gt;, &lt;span class="pl-en"&gt;using&lt;/span&gt; &lt;span class="pl-smi"&gt;manager&lt;/span&gt;: CoachMarkTransitionManager)

&lt;span class="pl-k"&gt;func&lt;/span&gt; &lt;span class="pl-en"&gt;coachMarksController&lt;/span&gt;(&lt;span class="pl-en"&gt;_&lt;/span&gt; &lt;span class="pl-smi"&gt;coachMarksController&lt;/span&gt;: CoachMarksController, &lt;span class="pl-en"&gt;fetchIdleAnimationOfCoachMark&lt;/span&gt; &lt;span class="pl-smi"&gt;coachMarkView&lt;/span&gt;: UIView, &lt;span class="pl-en"&gt;at&lt;/span&gt; &lt;span class="pl-smi"&gt;index&lt;/span&gt;: &lt;span class="pl-c1"&gt;Int&lt;/span&gt;, &lt;span class="pl-en"&gt;using&lt;/span&gt; &lt;span class="pl-smi"&gt;manager&lt;/span&gt;: CoachMarkAnimationManager)&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;All methods from this delegate work in similar ways. First, you will need to specify the general parameters of the animation via &lt;code&gt;manager.parameters&lt;/code&gt; properties. These properties match the configuration parameters that you can provide to &lt;code&gt;UIView.animate&lt;/code&gt;.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;duration: TimeInterval&lt;/code&gt;: the total duration of the animation.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;delay: TimeInterval&lt;/code&gt;: the amount of time to wai before beginning the animations&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;options: UIViewAnimationOptions&lt;/code&gt;: a mask of options indicating how you want to perform the animations (for regular animations).&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;keyframeOptions: UIViewKeyframeAnimationOptions&lt;/code&gt;: a mask of options indicating how you want to perform the animations (for keyframe animations).&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Once you've set the parameters, you should provide your animations by calling &lt;code&gt;manager.animate&lt;/code&gt;. The method signature is different wether you are animating the idle state of coach marks, or making them appear/disappear.&lt;/p&gt;
&lt;p&gt;You should provide your animations in a block passed to the &lt;code&gt;animate&lt;/code&gt; parameter, in a similar fashion to &lt;code&gt;UIView.animate&lt;/code&gt;. If you need to access the animation parameters or the coach mark metadata, a &lt;code&gt;CoachMarkAnimationManagementContext&lt;/code&gt; containing these will be provided to your animation block. You shouldn't capture a reference to manager from the animation block.&lt;/p&gt;
&lt;p&gt;For an implemntation example, you can also take a look a the &lt;code&gt;DelegateViewController&lt;/code&gt; class found in the &lt;code&gt;Example&lt;/code&gt; directory.&lt;/p&gt;
&lt;h5&gt;&lt;a id="user-content-appearance-and-disappearance-specifics" class="anchor" aria-hidden="true" href="#appearance-and-disappearance-specifics"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Appearance and disappearance specifics&lt;/h5&gt;
&lt;p&gt;If you need to define an initial state, you should do so by providing a block to the &lt;code&gt;fromInitialState&lt;/code&gt; property. While directly setting values on &lt;code&gt;coachMarkView&lt;/code&gt; in the method before calling &lt;code&gt;manager.animate()&lt;/code&gt; might work, it's not garanteed to.&lt;/p&gt;
&lt;h4&gt;&lt;a id="user-content-let-users-skip-the-tour" class="anchor" aria-hidden="true" href="#let-users-skip-the-tour"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Let users skip the tour&lt;/h4&gt;
&lt;h5&gt;&lt;a id="user-content-control" class="anchor" aria-hidden="true" href="#control"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Control&lt;/h5&gt;
&lt;p&gt;You can provide the user with a mean to skip the coach marks. First, you will need to set
&lt;code&gt;skipView&lt;/code&gt; with a &lt;code&gt;UIView&lt;/code&gt; conforming to the &lt;code&gt;CoachMarkSkipView&lt;/code&gt; protocol. This protocol defines a single property:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;public&lt;/span&gt; &lt;span class="pl-k"&gt;protocol&lt;/span&gt; &lt;span class="pl-en"&gt;CoachMarkSkipView&lt;/span&gt; : &lt;span class="pl-k"&gt;class&lt;/span&gt; {
    &lt;span class="pl-k"&gt;var&lt;/span&gt; skipControl&lt;span class="pl-k"&gt;:&lt;/span&gt; UIControl&lt;span class="pl-k"&gt;?&lt;/span&gt; { &lt;span class="pl-k"&gt;get&lt;/span&gt; }
}&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;You must implement a getter method for this property in your view. This will let the &lt;code&gt;CoachMarkController&lt;/code&gt; know which control should be tapped, to skip the tour. Note that, again, it doesn't have to be a subview, you can return the view itself.&lt;/p&gt;
&lt;p&gt;As usual, Instructions provides a default implementation of &lt;code&gt;CoachMarkSkipView&lt;/code&gt; named &lt;code&gt;CoachMarkSkipDefaultView&lt;/code&gt;.&lt;/p&gt;
&lt;h5&gt;&lt;a id="user-content-datasource" class="anchor" aria-hidden="true" href="#datasource"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;dataSource&lt;/h5&gt;
&lt;p&gt;To define how the view will position itself, you can use a method from the &lt;code&gt;CoachMarkControllerDataSource&lt;/code&gt; protocol. This method is optional.&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;func&lt;/span&gt; &lt;span class="pl-en"&gt;coachMarksController&lt;/span&gt;(&lt;span class="pl-en"&gt;_&lt;/span&gt; &lt;span class="pl-smi"&gt;coachMarksController&lt;/span&gt;: CoachMarksController, &lt;span class="pl-en"&gt;constraintsForSkipView&lt;/span&gt; &lt;span class="pl-smi"&gt;skipView&lt;/span&gt;: UIView, &lt;span class="pl-en"&gt;inParent&lt;/span&gt; &lt;span class="pl-smi"&gt;parentView&lt;/span&gt;: UIView) &lt;span class="pl-k"&gt;-&amp;gt;&lt;/span&gt; [NSLayoutConstraint]&lt;span class="pl-k"&gt;?&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;This method will be called by the &lt;code&gt;CoachMarksController&lt;/code&gt; before starting the tour and whenever there is a size change. It gives you the &lt;em&gt;skip button&lt;/em&gt; and the view in which it will be positioned and expects an array of &lt;code&gt;NSLayoutConstraints&lt;/code&gt; in return. These constraints will define how the &lt;em&gt;skip button&lt;/em&gt; will be positioned in its parent. You should not add the constraints yourself, just return them.&lt;/p&gt;
&lt;p&gt;Returning &lt;code&gt;nil&lt;/code&gt; will tell the &lt;code&gt;CoachMarksController&lt;/code&gt; to use the defaults constraints, which will position the &lt;em&gt;skip button&lt;/em&gt; at the top of the screen. Returning an empty array is discouraged, as it will most probably lead to an akward positioning.&lt;/p&gt;
&lt;p&gt;For more information about the skip mechanism, you can check the &lt;code&gt;Example/&lt;/code&gt; directory.&lt;/p&gt;
&lt;h4&gt;&lt;a id="user-content-piloting-the-flow-from-the-code" class="anchor" aria-hidden="true" href="#piloting-the-flow-from-the-code"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Piloting the flow from the code&lt;/h4&gt;
&lt;p&gt;Should you ever need to programmatically show the coach mark, &lt;code&gt;CoachMarkController.flow&lt;/code&gt; also provides the following methods:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;func&lt;/span&gt; &lt;span class="pl-en"&gt;showNext&lt;/span&gt;(&lt;span class="pl-en"&gt;numberOfCoachMarksToSkip&lt;/span&gt; &lt;span class="pl-smi"&gt;numberToSkip&lt;/span&gt;: &lt;span class="pl-c1"&gt;Int&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;0&lt;/span&gt;)&lt;/pre&gt;&lt;/div&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;func&lt;/span&gt; &lt;span class="pl-en"&gt;showPrevious&lt;/span&gt;(&lt;span class="pl-en"&gt;numberOfCoachMarksToSkip&lt;/span&gt; &lt;span class="pl-smi"&gt;numberToSkip&lt;/span&gt;: &lt;span class="pl-c1"&gt;Int&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;0&lt;/span&gt;)&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;You can specify a number of coach marks to skip (effectively jumping forward or backward to a further index).&lt;/p&gt;
&lt;p&gt;Take a look at &lt;code&gt;TransitionFromCodeViewController&lt;/code&gt;, in the &lt;code&gt;Example/&lt;/code&gt; directory, to get an idea of how you can leverage this method, in order to ask the user to perform certain actions.&lt;/p&gt;
&lt;h4&gt;&lt;a id="user-content-using-a-delegate" class="anchor" aria-hidden="true" href="#using-a-delegate"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Using a delegate&lt;/h4&gt;
&lt;p&gt;The &lt;code&gt;CoachMarkController&lt;/code&gt; will notify the delegate on multiple occasions. All those methods are optionals.&lt;/p&gt;
&lt;p&gt;First, when a coach mark will show. You might want to change something about the view. For that reason, the &lt;code&gt;CoachMark&lt;/code&gt; metadata structure is passed as an &lt;code&gt;inout&lt;/code&gt; object, so you can update it with new parameters.&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;func&lt;/span&gt; &lt;span class="pl-en"&gt;coachMarksController&lt;/span&gt;(&lt;span class="pl-en"&gt;_&lt;/span&gt; &lt;span class="pl-smi"&gt;coachMarksController&lt;/span&gt;: CoachMarksController, &lt;span class="pl-en"&gt;willShow&lt;/span&gt; &lt;span class="pl-smi"&gt;coachMark&lt;/span&gt;: &lt;span class="pl-k"&gt;inout&lt;/span&gt; CoachMark, &lt;span class="pl-en"&gt;at&lt;/span&gt; &lt;span class="pl-smi"&gt;index&lt;/span&gt;: &lt;span class="pl-c1"&gt;Int&lt;/span&gt;)&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Second, when a coach mark disappears.&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;func&lt;/span&gt; &lt;span class="pl-en"&gt;coachMarksController&lt;/span&gt;(&lt;span class="pl-en"&gt;_&lt;/span&gt; &lt;span class="pl-smi"&gt;coachMarksController&lt;/span&gt;: CoachMarksController, &lt;span class="pl-en"&gt;willHide&lt;/span&gt; &lt;span class="pl-smi"&gt;coachMark&lt;/span&gt;: CoachMark, &lt;span class="pl-en"&gt;at&lt;/span&gt; &lt;span class="pl-smi"&gt;index&lt;/span&gt;: &lt;span class="pl-c1"&gt;Int&lt;/span&gt;)&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Third, when all coach marks have been displayed. &lt;code&gt;didEndShowingBySkipping&lt;/code&gt; specify whether the flow completed because the user requested it to end.&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;func&lt;/span&gt; &lt;span class="pl-en"&gt;coachMarksController&lt;/span&gt;(&lt;span class="pl-en"&gt;_&lt;/span&gt; &lt;span class="pl-smi"&gt;coachMarksController&lt;/span&gt;: CoachMarksController, &lt;span class="pl-en"&gt;didEndShowingBySkipping&lt;/span&gt; &lt;span class="pl-smi"&gt;skipped&lt;/span&gt;: &lt;span class="pl-c1"&gt;Bool&lt;/span&gt;)&lt;/pre&gt;&lt;/div&gt;
&lt;h5&gt;&lt;a id="user-content-react-when-the-user-tap-the-overlay" class="anchor" aria-hidden="true" href="#react-when-the-user-tap-the-overlay"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;React when the user tap the overlay&lt;/h5&gt;
&lt;p&gt;Whenever the user will tap the overlay, you will get notified through:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;func&lt;/span&gt; &lt;span class="pl-en"&gt;shouldHandleOverlayTap&lt;/span&gt;(&lt;span class="pl-en"&gt;in&lt;/span&gt; &lt;span class="pl-smi"&gt;coachMarksController&lt;/span&gt;: CoachMarksController, &lt;span class="pl-en"&gt;at&lt;/span&gt; &lt;span class="pl-smi"&gt;index&lt;/span&gt;: &lt;span class="pl-c1"&gt;Int&lt;/span&gt;) &lt;span class="pl-k"&gt;-&amp;gt;&lt;/span&gt; &lt;span class="pl-c1"&gt;Bool&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Returning &lt;code&gt;true&lt;/code&gt; will let Instructions continue the flow normally, while returning &lt;code&gt;false&lt;/code&gt; will interrupt it. If you choose to interrupt the flow, you're responsible for either stopping or pausing it or manually show the next coach marks (see &lt;a href="#piloting-the-flow-from-the-code"&gt;Piloting the flow from the code&lt;/a&gt;).&lt;/p&gt;
&lt;p&gt;&lt;code&gt;index&lt;/code&gt; is the index of the coach mark currently displayed.&lt;/p&gt;
&lt;h5&gt;&lt;a id="user-content-pausing-and-resuming-the-flow" class="anchor" aria-hidden="true" href="#pausing-and-resuming-the-flow"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Pausing and resuming the flow&lt;/h5&gt;
&lt;p&gt;It's as simple as calling &lt;code&gt;coachMarksController.flow.pause()&lt;/code&gt; and &lt;code&gt;coachMarksController.flow.resume()&lt;/code&gt;. While pausing, you can also choose to hide Instructions's overlay altogether (&lt;code&gt;.pause(and: hideInstructions)&lt;/code&gt;), or only hide the overlay and retain its touch blocking capabilities (&lt;code&gt;.pause(and: hideOverlay)&lt;/code&gt;).&lt;/p&gt;
&lt;h5&gt;&lt;a id="user-content-performing-animations-before-showing-coach-marks" class="anchor" aria-hidden="true" href="#performing-animations-before-showing-coach-marks"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Performing animations before showing coach marks&lt;/h5&gt;
&lt;p&gt;You can perform animation on views, before or after showing a given coach mark.
For instance, you might want to collapse a table view and show only its header, before referring to those headers with a coach mark. Instructions offers a simple way to insert your own animations into the flow.&lt;/p&gt;
&lt;p&gt;For instance, let's say you want to perform an animation &lt;em&gt;before&lt;/em&gt; a coach mark shows.
You'll implement some logic into the &lt;code&gt;coachMarkWillShow&lt;/code&gt; delegate method.
To ensure you don't have to hack something up and turn asynchronous animation blocks into synchronous ones, you can pause the flow, perform the animation and then start the flow again. This will ensure your UI never get stalled.&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;func&lt;/span&gt; &lt;span class="pl-en"&gt;coachMarksController&lt;/span&gt;(&lt;span class="pl-en"&gt;_&lt;/span&gt; &lt;span class="pl-smi"&gt;coachMarksController&lt;/span&gt;: CoachMarksController, &lt;span class="pl-en"&gt;willShow&lt;/span&gt; &lt;span class="pl-smi"&gt;coachMark&lt;/span&gt;: &lt;span class="pl-k"&gt;inout&lt;/span&gt; CoachMark, &lt;span class="pl-en"&gt;at&lt;/span&gt; &lt;span class="pl-smi"&gt;index&lt;/span&gt;: &lt;span class="pl-c1"&gt;Int&lt;/span&gt;) {
	 &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Pause to be able to play the animation and then show the coach mark.&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;    coachMarksController.&lt;span class="pl-smi"&gt;flow&lt;/span&gt;.&lt;span class="pl-c1"&gt;pause&lt;/span&gt;()

    &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Run the animation&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;    UIView.&lt;span class="pl-c1"&gt;animateWithDuration&lt;/span&gt;(&lt;span class="pl-c1"&gt;1&lt;/span&gt;, &lt;span class="pl-c1"&gt;animations&lt;/span&gt;: { () &lt;span class="pl-k"&gt;-&amp;gt;&lt;/span&gt; &lt;span class="pl-c1"&gt;Void&lt;/span&gt; &lt;span class="pl-k"&gt;in&lt;/span&gt;
        &lt;span class="pl-k"&gt;…&lt;/span&gt;
    }, &lt;span class="pl-c1"&gt;completion&lt;/span&gt;: { (&lt;span class="pl-c1"&gt;finished&lt;/span&gt;: &lt;span class="pl-c1"&gt;Bool&lt;/span&gt;) &lt;span class="pl-k"&gt;-&amp;gt;&lt;/span&gt; &lt;span class="pl-c1"&gt;Void&lt;/span&gt; &lt;span class="pl-k"&gt;in&lt;/span&gt;
        &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Once the animation is completed, we update the coach mark,&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;        &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; and start the display again. Since inout parameters cannot be&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;        &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; captured by the closure, you can use the following method to update&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;        &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; the coachmark. It will only work if you paused the flow.&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;/span&gt;        coachMarksController.&lt;span class="pl-smi"&gt;helper&lt;/span&gt;.&lt;span class="pl-c1"&gt;updateCurrentCoachMarkForView&lt;/span&gt;(myView)
        coachMarksController.&lt;span class="pl-smi"&gt;flow&lt;/span&gt;.&lt;span class="pl-c1"&gt;resume&lt;/span&gt;()
    })
}&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;g-emoji class="g-emoji" alias="warning" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/26a0.png"&gt;⚠️&lt;/g-emoji&gt; Since the blurring overlay snapshots the view during coach mark appearance/disappearance,
you should make sure that animations targeting your own view don't occur while a coach mark
is appearing or disappearing. Otherwise, the animation won't be visible.&lt;/p&gt;
&lt;p&gt;You may also want to customize the properties defining the of for the classic transparency overlay, as Instructions will fall back to using the classic type if &lt;code&gt;UIAccessibilityIsReduceTransparencyEnabled()&lt;/code&gt; returns true.&lt;/p&gt;
&lt;h5&gt;&lt;a id="user-content-skipping-a-coach-mark" class="anchor" aria-hidden="true" href="#skipping-a-coach-mark"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Skipping a coach mark&lt;/h5&gt;
&lt;p&gt;You can skip a given coach mark by implementing the following method defined in &lt;code&gt;CoachMarksControllerDelegate&lt;/code&gt;:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;func&lt;/span&gt; &lt;span class="pl-en"&gt;coachMarksController&lt;/span&gt;(&lt;span class="pl-en"&gt;_&lt;/span&gt; &lt;span class="pl-smi"&gt;coachMarksController&lt;/span&gt;: CoachMarksController, &lt;span class="pl-en"&gt;coachMarkWillLoadAt&lt;/span&gt; &lt;span class="pl-smi"&gt;index&lt;/span&gt;: &lt;span class="pl-c1"&gt;Int&lt;/span&gt;) &lt;span class="pl-k"&gt;-&amp;gt;&lt;/span&gt; &lt;span class="pl-c1"&gt;Bool&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;code&gt;coachMarkWillLoadAt:&lt;/code&gt; is called right before a given coach mark will show. To prevent a CoachMark from showing, you can return &lt;code&gt;false&lt;/code&gt; from this method.&lt;/p&gt;
&lt;h5&gt;&lt;a id="user-content-customizing-ornaments-of-the-overlay" class="anchor" aria-hidden="true" href="#customizing-ornaments-of-the-overlay"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Customizing ornaments of the overlay&lt;/h5&gt;
&lt;p&gt;It's possible to add custom views which will be displayed over the overlay by implementing the following method of &lt;code&gt;CoachMarksControllerDelegate&lt;/code&gt;:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;func&lt;/span&gt; &lt;span class="pl-en"&gt;coachMarksController&lt;/span&gt;(&lt;span class="pl-en"&gt;_&lt;/span&gt; &lt;span class="pl-smi"&gt;coachMarksController&lt;/span&gt;: CoachMarksController,
                          &lt;span class="pl-en"&gt;configureOrnamentsOfOverlay&lt;/span&gt; &lt;span class="pl-smi"&gt;overlay&lt;/span&gt;: UIView)&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Just add the ornaments to the provided view (&lt;code&gt;overlay&lt;/code&gt;) and Instructions should take care of the rest. Please note, however, that these ornaments will be displayed over the cutout, but under the coach marks.&lt;/p&gt;
&lt;h4&gt;&lt;a id="user-content-dealing-with-frame-changes" class="anchor" aria-hidden="true" href="#dealing-with-frame-changes"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Dealing with frame changes&lt;/h4&gt;
&lt;p&gt;Since Instructions doesn't hold any reference to the &lt;em&gt;views of interest&lt;/em&gt;, it cannot respond to their
change of frame automatically.&lt;/p&gt;
&lt;p&gt;Instructions provide two methods to deal with frame changes.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;CoachMarkController.prepareForChange()&lt;/code&gt;, called before a change of frame, to hide
the coach mark and the cutout path.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;CoachMarkController.restoreAfterChangeDidComplete()&lt;/code&gt;, called after a change of frame
to show the coach mark and the cutout again.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Although you can call these methods at any time while Instructions is idle, the result will not
look smooth if the coach mark is already displayed. It's better to perform the changes between
two coach marks, by pausing and resuming the flow. &lt;a href="https://github.com/ephread/Instructions/blob/master/Examples/Example/KeyboardViewController.swift"&gt;&lt;code&gt;KeyboardViewController&lt;/code&gt;&lt;/a&gt; shows an
example of this technique.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-usage-within-app-extensions" class="anchor" aria-hidden="true" href="#usage-within-app-extensions"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Usage within App Extensions&lt;/h3&gt;
&lt;p&gt;If you wish to add Instructions within App Extensions, there's additional work you need to perform.
An example is available in the &lt;code&gt;App Extensions Example/&lt;/code&gt; directory.&lt;/p&gt;
&lt;h4&gt;&lt;a id="user-content-dependencies" class="anchor" aria-hidden="true" href="#dependencies"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Dependencies&lt;/h4&gt;
&lt;p&gt;Instructions comes with two shared schemes, &lt;code&gt;Instructions&lt;/code&gt; and &lt;code&gt;InstructionsAppExtensions&lt;/code&gt;. The only differences between the two is that &lt;code&gt;InstructionsAppExtensions&lt;/code&gt; does not depend upon the &lt;code&gt;UIApplication.sharedApplication()&lt;/code&gt;, making it suitable for App Extensions.&lt;/p&gt;
&lt;p&gt;In the following examples, let's consider a project with two targets, one for a regular application (&lt;code&gt;Instructions App Extensions Example&lt;/code&gt;) and another for an app extension (&lt;code&gt;Keyboard Extension&lt;/code&gt;).&lt;/p&gt;
&lt;h4&gt;&lt;a id="user-content-cocoapods-1" class="anchor" aria-hidden="true" href="#cocoapods-1"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;CocoaPods&lt;/h4&gt;
&lt;p&gt;If you're importing Instructions with CocoaPods, you'll need to edit your &lt;code&gt;Podfile&lt;/code&gt; to make it look
like this:&lt;/p&gt;
&lt;div class="highlight highlight-source-ruby"&gt;&lt;pre&gt;target &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;Instructions App Extensions Example&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt; &lt;span class="pl-k"&gt;do&lt;/span&gt;
  pod &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;Instructions&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;~&amp;gt; 1.0.0&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;
&lt;span class="pl-k"&gt;end&lt;/span&gt;

target &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;Keyboard Extension&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt; &lt;span class="pl-k"&gt;do&lt;/span&gt;
  pod &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;InstructionsAppExtensions&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;~&amp;gt; 1.0.0&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;
&lt;span class="pl-k"&gt;end&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;If Instructions is only imported from within App Extension target, you don't need the first block.&lt;/p&gt;
&lt;p&gt;When compiling either targets, CocoaPods will make sure the appropriate flags are set, thus
allowing/forbidding calls to &lt;code&gt;UIApplication.sharedApplication()&lt;/code&gt;.
You don't need to change your code.&lt;/p&gt;
&lt;h4&gt;&lt;a id="user-content-frameworks-carthage--manual-management" class="anchor" aria-hidden="true" href="#frameworks-carthage--manual-management"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Frameworks (Carthage / Manual management)&lt;/h4&gt;
&lt;p&gt;If you're importing Instructions through frameworks, you'll notice that the two shared schemes
(&lt;code&gt;Instructions&lt;/code&gt; and &lt;code&gt;InstructionsAppExtensions&lt;/code&gt;) both result in different frameworks.&lt;/p&gt;
&lt;p&gt;You need to embed both frameworks and link them to the proper targets.
Make sure they look like theses:&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Instructions App Extensions Example&lt;/strong&gt;
&lt;a target="_blank" rel="noopener noreferrer" href="https://camo.githubusercontent.com/e99891789c98b6cd23f6ad9b2d14708e7816088c/687474703a2f2f692e696d6775722e636f6d2f334d334251614f2e706e67"&gt;&lt;img src="https://camo.githubusercontent.com/e99891789c98b6cd23f6ad9b2d14708e7816088c/687474703a2f2f692e696d6775722e636f6d2f334d334251614f2e706e67" alt="Imgur" data-canonical-src="http://i.imgur.com/3M3BQaO.png" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Keyboard Extension&lt;/strong&gt;
&lt;a target="_blank" rel="noopener noreferrer" href="https://camo.githubusercontent.com/d3bf1d5f9e077b68ace557b163ad2e544d2a2be0/687474703a2f2f692e696d6775722e636f6d2f4c417456306f412e706e67"&gt;&lt;img src="https://camo.githubusercontent.com/d3bf1d5f9e077b68ace557b163ad2e544d2a2be0/687474703a2f2f692e696d6775722e636f6d2f4c417456306f412e706e67" alt="Imgur" data-canonical-src="http://i.imgur.com/LAtV0oA.png" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;If you plan to add Instructions only to the App Extension target, you don't need to add &lt;code&gt;Instructions.frameworks&lt;/code&gt;.&lt;/p&gt;
&lt;h5&gt;&lt;a id="user-content-import-statements" class="anchor" aria-hidden="true" href="#import-statements"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Import statements&lt;/h5&gt;
&lt;p&gt;When importing Instructions from files within &lt;code&gt;Instructions App Extensions Example&lt;/code&gt;,
you should use the regular import statement:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;import&lt;/span&gt; &lt;span class="pl-en"&gt;Instructions&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;However, when importing Instructions from files within &lt;code&gt;Keyboard Extension&lt;/code&gt;, you should
use the specific statement:&lt;/p&gt;
&lt;div class="highlight highlight-source-swift"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;import&lt;/span&gt; &lt;span class="pl-en"&gt;InstructionsAppExtensions&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;g-emoji class="g-emoji" alias="warning" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/26a0.png"&gt;⚠️&lt;/g-emoji&gt; &lt;strong&gt;Please be extremely careful&lt;/strong&gt;, as you will be able to import regular &lt;em&gt;Instructions&lt;/em&gt;
from within an app extension without breaking anything. It will work. However, you're at a
high risk of rejection from the Apple Store. Uses of &lt;code&gt;UIApplication.sharedApplication()&lt;/code&gt;
are statically checked during compilation but nothing prevents you from performing the calls
at runtime. Fortunately Xcode should warn you if you've mistakenly linked with a framework
not suited for App Extensions.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-license" class="anchor" aria-hidden="true" href="#license"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;License&lt;/h2&gt;
&lt;p&gt;Instructions is released under the MIT license. See LICENSE for details.&lt;/p&gt;
&lt;/article&gt;&lt;/div&gt;</description><author>ephread</author><guid isPermaLink="false">https://github.com/ephread/Instructions</guid><pubDate>Sat, 25 Jan 2020 00:25:00 GMT</pubDate></item></channel></rss>