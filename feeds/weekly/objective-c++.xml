<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0"><channel><title>GitHub Trending: Objective-C++, This week</title><link>https://github.com/trending/objective-c++?since=weekly</link><description>The top repositories on GitHub for objective-c++, measured weekly</description><pubDate>Mon, 20 Jan 2020 01:06:16 GMT</pubDate><lastBuildDate>Mon, 20 Jan 2020 01:06:16 GMT</lastBuildDate><generator>PyRSS2Gen-1.1.0</generator><docs>http://blogs.law.harvard.edu/tech/rss</docs><ttl>720</ttl><item><title>Unity-Technologies/uaal-example #1 in Objective-C++, This week</title><link>https://github.com/Unity-Technologies/uaal-example</link><description>&lt;p&gt;&lt;i&gt;[No description found.]&lt;/i&gt;&lt;/p&gt;&lt;div id="readme" class="md" data-path="README.md"&gt;&lt;article class="markdown-body entry-content p-5" itemprop="text"&gt;&lt;h1&gt;&lt;a id="user-content-unity-as-a-library-integration-example-to-ios-and-android" class="anchor" aria-hidden="true" href="#unity-as-a-library-integration-example-to-ios-and-android"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Unity as a Library integration example to iOS and Android&lt;/h1&gt;
&lt;p&gt;In some scenario developers using native platform technologies (like Android/Java &amp;amp; iOS/Objective C) want to include in their apps/games features powered by Unity for 3D/2D Real Time Rendering, AR experience, interaction with 3D models, 2D mini games and more.&lt;/p&gt;
&lt;p&gt;Starting with Unity 2019.3.0a2, Unity  introduced a new feature to use Unity as a library in native apps by integrating the Unity runtime components and content in a native platform project. The Unity Runtime Library exposes controls to manage when and how to load/activate/unload within the native application.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Limitations&lt;/strong&gt;
While we tested many scenarios for Unity as a library hosted by a native app, Unity does not control anymore the lifecycle of the runtime, so we cannot guarantee it'll work in all possible use cases.
For example:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Unity as a Library supports rendering only full screen, rendering on a part of the screen isn’t supported.&lt;/li&gt;
&lt;li&gt;Loading more than one instance of the Unity runtime isn’t supported.&lt;/li&gt;
&lt;li&gt;You may need to adapt 3rd party Plug-ins (native or managed) to work properly&lt;/li&gt;
&lt;li&gt;Overhead of having Unity in unloaded state is: 90Mb for Android and 110Mb for iOS&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;How it works&lt;/strong&gt;
The build process overall is still the same, Unity creates the iOS Xcode and Android Gradle projects and generated iOS Xcode and Android Gradle projects have the following structure:
A library part (iOS framework and Android Archive (AAR) file) that includes all source &amp;amp; plugins
A thin launcher part that includes app representation data and runs library&lt;/p&gt;
&lt;p&gt;Step by step explanations on how to include the &lt;a href="docs/ios.md"&gt;iOS&lt;/a&gt; / &lt;a href="docs/android.md"&gt;Android&lt;/a&gt; library part into your native application when needed.&lt;/p&gt;
&lt;/article&gt;&lt;/div&gt;</description><author>Unity-Technologies</author><guid isPermaLink="false">https://github.com/Unity-Technologies/uaal-example</guid><pubDate>Mon, 20 Jan 2020 00:01:00 GMT</pubDate></item></channel></rss>