<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0"><channel><title>GitHub Trending: Groovy, This month</title><link>https://github.com/trending/groovy?since=monthly</link><description>The top repositories on GitHub for groovy, measured monthly</description><pubDate>Wed, 11 Dec 2019 01:06:15 GMT</pubDate><lastBuildDate>Wed, 11 Dec 2019 01:06:15 GMT</lastBuildDate><generator>PyRSS2Gen-1.1.0</generator><docs>http://blogs.law.harvard.edu/tech/rss</docs><ttl>720</ttl><item><title>SmartThingsCommunity/SmartThingsPublic #1 in Groovy, This month</title><link>https://github.com/SmartThingsCommunity/SmartThingsPublic</link><description>&lt;p&gt;&lt;i&gt;SmartThings open-source DeviceTypeHandlers and SmartApps code&lt;/i&gt;&lt;/p&gt;&lt;div id="readme" class="md" data-path="README.md"&gt;&lt;article class="markdown-body entry-content p-5" itemprop="text"&gt;&lt;h1&gt;&lt;a id="user-content-smartthings-public-github-repo" class="anchor" aria-hidden="true" href="#smartthings-public-github-repo"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;SmartThings Public GitHub Repo&lt;/h1&gt;
&lt;p&gt;An official list of SmartApps and Device Types from SmartThings.&lt;/p&gt;
&lt;p&gt;Here are some links to help you get started coding right away:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://docs.smartthings.com/en/latest/tools-and-ide/github-integration.html" rel="nofollow"&gt;GitHub-specific Documentation&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://docs.smartthings.com" rel="nofollow"&gt;Full Documentation&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://ide.smartthings.com" rel="nofollow"&gt;IDE &amp;amp; Simulator&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://community.smartthings.com" rel="nofollow"&gt;Community Forums&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Follow us on the web:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Twitter: &lt;a href="http://twitter.com/smartthingsdev" rel="nofollow"&gt;http://twitter.com/smartthingsdev&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Facebook: &lt;a href="http://facebook.com/smartthingsdevelopers" rel="nofollow"&gt;http://facebook.com/smartthingsdevelopers&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/article&gt;&lt;/div&gt;</description><author>SmartThingsCommunity</author><guid isPermaLink="false">https://github.com/SmartThingsCommunity/SmartThingsPublic</guid><pubDate>Wed, 11 Dec 2019 00:01:00 GMT</pubDate></item><item><title>google/protobuf-gradle-plugin #2 in Groovy, This month</title><link>https://github.com/google/protobuf-gradle-plugin</link><description>&lt;p&gt;&lt;i&gt;Protobuf Plugin for Gradle&lt;/i&gt;&lt;/p&gt;&lt;div id="readme" class="md" data-path="README.md"&gt;&lt;article class="markdown-body entry-content p-5" itemprop="text"&gt;&lt;p&gt;&lt;g-emoji class="g-emoji" alias="exclamation" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/2757.png"&gt;❗️&lt;/g-emoji&gt; Please &lt;a href="https://github.com/google/protobuf-gradle-plugin/releases"&gt;read release notes&lt;/a&gt;
before upgrading the plugin, as usage or compatibility requirements may change.&lt;/p&gt;
&lt;h1&gt;&lt;a id="user-content-protobuf-plugin-for-gradle-" class="anchor" aria-hidden="true" href="#protobuf-plugin-for-gradle-"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Protobuf Plugin for Gradle &lt;a href="https://travis-ci.org/google/protobuf-gradle-plugin" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/f89b073db495fda8fb325378a285011565303d22/68747470733a2f2f7472617669732d63692e6f72672f676f6f676c652f70726f746f6275662d677261646c652d706c7567696e2e7376673f6272616e63683d6d6173746572" alt="Status" data-canonical-src="https://travis-ci.org/google/protobuf-gradle-plugin.svg?branch=master" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/h1&gt;
&lt;p&gt;The Gradle plugin that compiles Protocol Buffer (aka. Protobuf) definition
files (&lt;code&gt;*.proto&lt;/code&gt;) in your project. There are two pieces of its job:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;It assembles the Protobuf Compiler (&lt;code&gt;protoc&lt;/code&gt;) command line and use it to
generate Java source files out of your proto files.&lt;/li&gt;
&lt;li&gt;It adds the generated Java source files to the input of the corresponding
Java compilation unit (&lt;em&gt;sourceSet&lt;/em&gt; in a Java project; &lt;em&gt;variant&lt;/em&gt; in an
Android project), so that they can be compiled along with your Java sources.&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;For more information about the Protobuf Compiler, please refer to
&lt;a href="https://developers.google.com/protocol-buffers/docs/reference/java-generated?csw=1" rel="nofollow"&gt;Google Developers Site&lt;/a&gt;.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-latest-version" class="anchor" aria-hidden="true" href="#latest-version"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Latest Version&lt;/h2&gt;
&lt;p&gt;The latest version is &lt;code&gt;0.8.10&lt;/code&gt;. It requires at least &lt;strong&gt;Gradle 3.0&lt;/strong&gt; and &lt;strong&gt;Java 8&lt;/strong&gt;.
It is available on Maven Central. To add dependency to it:&lt;/p&gt;
&lt;div class="highlight highlight-source-groovy-gradle"&gt;&lt;pre&gt;&lt;span class="pl-en"&gt;buildscript&lt;/span&gt; {
  repositories {
    mavenCentral()
  }
  dependencies {
    classpath &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;com.google.protobuf:protobuf-gradle-plugin:0.8.10&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;
  }
}&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;To try out the head version, you can download the source and build it
with &lt;code&gt;./gradlew install -x test&lt;/code&gt; (we skip tests here because they
require Android SDK), then:&lt;/p&gt;
&lt;div class="highlight highlight-source-groovy-gradle"&gt;&lt;pre&gt;&lt;span class="pl-en"&gt;buildscript&lt;/span&gt; {
  repositories {
    mavenLocal()
  }
  dependencies {
    classpath &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;com.google.protobuf:protobuf-gradle-plugin:0.8.11-SNAPSHOT&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;
  }
}&lt;/pre&gt;&lt;/div&gt;
&lt;h2&gt;&lt;a id="user-content-examples" class="anchor" aria-hidden="true" href="#examples"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Examples&lt;/h2&gt;
&lt;p&gt;Stand-alone examples are available for each of gradle's supported languages.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/google/protobuf-gradle-plugin/tree/master/examples/exampleProject"&gt;Groovy&lt;/a&gt; &lt;em&gt;&lt;strong&gt;(Default)&lt;/strong&gt;&lt;/em&gt;
&lt;ul&gt;
&lt;li&gt;Run &lt;code&gt;../../gradlew build&lt;/code&gt; under the example directory to test it out.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/google/protobuf-gradle-plugin/tree/master/examples/exampleKotlinDslProject"&gt;Kotlin&lt;/a&gt; &lt;em&gt;&lt;strong&gt;(Experimental)&lt;/strong&gt;&lt;/em&gt;
&lt;ul&gt;
&lt;li&gt;Run &lt;code&gt;./gradlew build&lt;/code&gt; under the Kotlin example directory to test it out. This example is set up with Gradle 4.10, the minimum required version.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Directories that start with &lt;code&gt;testProject&lt;/code&gt; can also serve as usage
examples for advanced options, although they cannot be compiled as
individual projects.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-adding-the-plugin-to-your-project" class="anchor" aria-hidden="true" href="#adding-the-plugin-to-your-project"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Adding the plugin to your project&lt;/h2&gt;
&lt;p&gt;This plugin must work with either the Java plugin or the Android plugin.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-using-the-apply-method" class="anchor" aria-hidden="true" href="#using-the-apply-method"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Using the &lt;code&gt;apply&lt;/code&gt; method&lt;/h3&gt;
&lt;p&gt;The Java plugin or the Android plugin must be applied before the Protobuf plugin:&lt;/p&gt;
&lt;div class="highlight highlight-source-groovy-gradle"&gt;&lt;pre&gt;apply &lt;span class="pl-c1"&gt;plugin&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;java&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;
apply &lt;span class="pl-c1"&gt;plugin&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;com.google.protobuf&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;div class="highlight highlight-source-groovy-gradle"&gt;&lt;pre&gt;apply &lt;span class="pl-c1"&gt;plugin&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;com.android.application&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;  &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; or 'com.android.library'&lt;/span&gt;
apply &lt;span class="pl-c1"&gt;plugin&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;com.google.protobuf&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;The experimental Android plugin is not supported yet (#85).&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-using-the-gradle-plugin-dsl" class="anchor" aria-hidden="true" href="#using-the-gradle-plugin-dsl"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Using the Gradle plugin DSL&lt;/h3&gt;
&lt;p&gt;The order of the plugins doesn't matter:&lt;/p&gt;
&lt;div class="highlight highlight-source-groovy-gradle"&gt;&lt;pre&gt;&lt;span class="pl-en"&gt;plugins&lt;/span&gt; {
  id &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;com.google.protobuf&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; version &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;0.8.10&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;
  id &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;java&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;
}&lt;/pre&gt;&lt;/div&gt;
&lt;h2&gt;&lt;a id="user-content-configuring-protobuf-compilation" class="anchor" aria-hidden="true" href="#configuring-protobuf-compilation"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Configuring Protobuf compilation&lt;/h2&gt;
&lt;p&gt;The Protobuf plugin assumes Protobuf files (&lt;code&gt;*.proto&lt;/code&gt;) are organized in the
same way as Java source files, in &lt;em&gt;sourceSets&lt;/em&gt;. The Protobuf files of a
&lt;em&gt;sourceSet&lt;/em&gt; (or &lt;em&gt;variant&lt;/em&gt; in an Android project) are compiled in a single
&lt;code&gt;protoc&lt;/code&gt; run, and the generated files are added to the input of the Java
compilation run of that &lt;em&gt;sourceSet&lt;/em&gt; (or &lt;em&gt;variant&lt;/em&gt;).&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-customizing-source-directories" class="anchor" aria-hidden="true" href="#customizing-source-directories"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Customizing source directories&lt;/h3&gt;
&lt;p&gt;The plugin adds a new sources block named &lt;code&gt;proto&lt;/code&gt; alongside &lt;code&gt;java&lt;/code&gt; to every
sourceSet. By default, it includes all &lt;code&gt;*.proto&lt;/code&gt; files under
&lt;code&gt;src/$sourceSetName/proto&lt;/code&gt;. You can customize it in the same way as you would
customize the &lt;code&gt;java&lt;/code&gt; sources.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Java&lt;/strong&gt; projects: use the top-level &lt;code&gt;sourceSet&lt;/code&gt;:&lt;/p&gt;
&lt;div class="highlight highlight-source-groovy-gradle"&gt;&lt;pre&gt;&lt;span class="pl-en"&gt;sourceSets&lt;/span&gt; {
  main {
    proto {
      &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; In addition to the default 'src/main/proto'&lt;/span&gt;
      srcDir &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;src/main/protobuf&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;
      srcDir &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;src/main/protocolbuffers&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;
      &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; In addition to the default '**/*.proto' (use with caution).&lt;/span&gt;
      &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Using an extension other than 'proto' is NOT recommended,&lt;/span&gt;
      &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; because when proto files are published along with class files, we can&lt;/span&gt;
      &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; only tell the type of a file from its extension.&lt;/span&gt;
      include &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;**/*.protodevel&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;
    }
    java {
      &lt;span class="pl-k"&gt;..&lt;/span&gt;.
    }
  }
  test {
    proto {
      &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; In addition to the default 'src/test/proto'&lt;/span&gt;
      srcDir &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;src/test/protocolbuffers&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;
    }
  }
}&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;strong&gt;Android&lt;/strong&gt; projects: use &lt;code&gt;android.sourceSets&lt;/code&gt;:&lt;/p&gt;
&lt;div class="highlight highlight-source-groovy-gradle"&gt;&lt;pre&gt;&lt;span class="pl-en"&gt;android&lt;/span&gt; {
  sourceSets {
    main {
      proto {
        &lt;span class="pl-k"&gt;..&lt;/span&gt;.
      }
      java {
        &lt;span class="pl-k"&gt;..&lt;/span&gt;.
      }
    }
  }
}&lt;/pre&gt;&lt;/div&gt;
&lt;h3&gt;&lt;a id="user-content-customizing-protobuf-compilation" class="anchor" aria-hidden="true" href="#customizing-protobuf-compilation"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Customizing Protobuf compilation&lt;/h3&gt;
&lt;p&gt;The plugin adds a &lt;code&gt;protobuf&lt;/code&gt; block to the project. It provides all the
configuration knobs.&lt;/p&gt;
&lt;h4&gt;&lt;a id="user-content-locate-external-executables" class="anchor" aria-hidden="true" href="#locate-external-executables"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Locate external executables&lt;/h4&gt;
&lt;p&gt;By default the plugin will search for the &lt;code&gt;protoc&lt;/code&gt; executable in the system
search path. We recommend you to take the advantage of pre-compiled &lt;code&gt;protoc&lt;/code&gt;
that we have published on Maven Central:&lt;/p&gt;
&lt;div class="highlight highlight-source-groovy-gradle"&gt;&lt;pre&gt;&lt;span class="pl-en"&gt;protobuf&lt;/span&gt; {
  &lt;span class="pl-k"&gt;..&lt;/span&gt;.
  &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Configure the protoc executable&lt;/span&gt;
  protoc {
    &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Download from repositories&lt;/span&gt;
    artifact &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;com.google.protobuf:protoc:3.0.0&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;
  }
  &lt;span class="pl-k"&gt;..&lt;/span&gt;.
}&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;You may also specify a local path.&lt;/p&gt;
&lt;div class="highlight highlight-source-groovy-gradle"&gt;&lt;pre&gt;&lt;span class="pl-en"&gt;protobuf&lt;/span&gt; {
  &lt;span class="pl-k"&gt;..&lt;/span&gt;.
  protoc {
    path &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;/usr/local/bin/protoc&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;
  }
  &lt;span class="pl-k"&gt;..&lt;/span&gt;.
}&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Multiple assignments are allowed in the &lt;code&gt;protoc&lt;/code&gt; block. The last one wins.&lt;/p&gt;
&lt;p&gt;You may also run &lt;code&gt;protoc&lt;/code&gt; with codegen plugins.  For a codegen
plugin named as "foo", &lt;code&gt;protoc&lt;/code&gt; will by default use
&lt;code&gt;protoc-gen-foo&lt;/code&gt; from system search path.  You can also specify a
downloadable artifact or a local path for it in the &lt;code&gt;plugins&lt;/code&gt; block,
in the same syntax as in the &lt;code&gt;protoc&lt;/code&gt; block above. This will &lt;strong&gt;not&lt;/strong&gt;
apply the plugins. You need to configure the tasks in the
&lt;code&gt;generateProtoTasks&lt;/code&gt; block introduced below to apply the plugins
defined here.&lt;/p&gt;
&lt;div class="highlight highlight-source-groovy-gradle"&gt;&lt;pre&gt;&lt;span class="pl-en"&gt;protobuf&lt;/span&gt; {
  &lt;span class="pl-k"&gt;..&lt;/span&gt;.
  &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Locate the codegen plugins&lt;/span&gt;
  plugins {
    &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Locate a plugin with name 'grpc'. This step is optional.&lt;/span&gt;
    &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; If you don't locate it, protoc will try to use "protoc-gen-grpc" from&lt;/span&gt;
    &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; system search path.&lt;/span&gt;
    grpc {
      artifact &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;io.grpc:protoc-gen-grpc-java:1.0.0-pre2&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;
      &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; or&lt;/span&gt;
      &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; path = 'tools/protoc-gen-grpc-java'&lt;/span&gt;
    }
    &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Any other plugins&lt;/span&gt;
    &lt;span class="pl-k"&gt;..&lt;/span&gt;.
  }
  &lt;span class="pl-k"&gt;..&lt;/span&gt;.
}&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;The syntax for &lt;code&gt;artifact&lt;/code&gt; follows &lt;a href="https://docs.gradle.org/3.3/userguide/dependency_management.html#sub:classifiers" rel="nofollow"&gt;Artifact Classifiers&lt;/a&gt;
where the default classifier is &lt;code&gt;project.osdetector.classifier&lt;/code&gt; (ie
&lt;code&gt;"${project.osdetector.os}-${project.osdetector.arch}"&lt;/code&gt;) and the default extension is &lt;code&gt;"exe"&lt;/code&gt;.
Non-C++ implementations of codegen plugins can be used if a constant
&lt;code&gt;classifier&lt;/code&gt; is specified (eg &lt;code&gt;"com.example:example-generator:1.0.0:-jvm8_32"&lt;/code&gt;).&lt;/p&gt;
&lt;h4&gt;&lt;a id="user-content-customize-code-generation-tasks" class="anchor" aria-hidden="true" href="#customize-code-generation-tasks"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Customize code generation tasks&lt;/h4&gt;
&lt;p&gt;The Protobuf plugin generates a task for each &lt;code&gt;protoc&lt;/code&gt; run, which is for a
sourceSet in a Java project, or a variant in an Android project. The task has
configuration interfaces that allow you to control the type of outputs, the
codegen plugins to use, and parameters.&lt;/p&gt;
&lt;p&gt;You must configure these tasks in the &lt;code&gt;generateProtoTasks&lt;/code&gt; block, which
provides you helper functions to conveniently access tasks that are tied to a
certain build element, and also ensures you configuration will be picked up
correctly by the plugin.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;DONOTs&lt;/strong&gt;:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;DO NOT assume the names of the tasks, as they may change.&lt;/li&gt;
&lt;li&gt;DO NOT configure the tasks outside of the &lt;code&gt;generateProtoTasks&lt;/code&gt; block,
because there are subtle timing constraints on when the tasks should be
configured.&lt;/li&gt;
&lt;/ul&gt;
&lt;div class="highlight highlight-source-groovy-gradle"&gt;&lt;pre&gt;&lt;span class="pl-en"&gt;protobuf&lt;/span&gt; {
  &lt;span class="pl-k"&gt;..&lt;/span&gt;.
  generateProtoTasks {
    &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; all() returns the collection of all protoc tasks&lt;/span&gt;
    all()&lt;span class="pl-k"&gt;.&lt;/span&gt;each { &lt;span class="pl-v"&gt;task&lt;/span&gt; &lt;span class="pl-k"&gt;-&amp;gt;&lt;/span&gt;
      &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Here you can configure the task&lt;/span&gt;
    }

    &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; In addition to all(), you may select tasks by various criteria:&lt;/span&gt;

    &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; (Java-only) returns tasks for a sourceSet&lt;/span&gt;
    ofSourceSet(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;main&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;)

    &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; (Android-only selectors)&lt;/span&gt;
    &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Returns tasks for a flavor&lt;/span&gt;
    ofFlavor(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;demo&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;)
    &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Returns tasks for a buildType&lt;/span&gt;
    ofBuildType(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;release&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;)
    &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Returns tasks for a variant&lt;/span&gt;
    ofVariant(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;demoRelease&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;)
    &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Returns non-androidTest tasks&lt;/span&gt;
    ofNonTest()
    &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Return androidTest tasks&lt;/span&gt;
    ofTest()
  }
}&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Each code generation task has two collections:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;builtins&lt;/code&gt;: code generators built in &lt;code&gt;protoc&lt;/code&gt;, e.g., &lt;code&gt;java&lt;/code&gt;, &lt;code&gt;cpp&lt;/code&gt;,
&lt;code&gt;python&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;plugins&lt;/code&gt;: code generation plugins that work with &lt;code&gt;protoc&lt;/code&gt;, e.g.,
&lt;code&gt;grpc&lt;/code&gt;. They must be defined in the &lt;code&gt;protobuf.plugins&lt;/code&gt; block in
order to be added to a task.&lt;/li&gt;
&lt;/ul&gt;
&lt;h4&gt;&lt;a id="user-content-configure-what-to-generate" class="anchor" aria-hidden="true" href="#configure-what-to-generate"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Configure what to generate&lt;/h4&gt;
&lt;p&gt;Code generation is done by protoc builtins and plugins.  Each
builtin/plugin generate a certain type of code.  To add or configure a
builtin/plugin on a task, list its name followed by a braces block.
Put options in the braces if wanted.  For example:&lt;/p&gt;
&lt;div class="highlight highlight-source-groovy-gradle"&gt;&lt;pre&gt;task&lt;span class="pl-k"&gt;.&lt;/span&gt;&lt;span class="pl-en"&gt;builtins&lt;/span&gt; {
  &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; This yields&lt;/span&gt;
  &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; "--java_out=example_option1=true,example_option2:/path/to/output"&lt;/span&gt;
  &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; on the protoc commandline, which is equivalent to&lt;/span&gt;
  &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; "--java_out=/path/to/output --java_opt=example_option1=true,example_option2"&lt;/span&gt;
  &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; with the latest version of protoc.&lt;/span&gt;
  java {
    option &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;example_option1=true&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;
    option &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;example_option2&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;
  }
  &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Add cpp output without any option.&lt;/span&gt;
  &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; DO NOT omit the braces if you want this builtin to be added.&lt;/span&gt;
  &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; This yields&lt;/span&gt;
  &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; "--cpp_out=/path/to/output" on the protoc commandline.&lt;/span&gt;
  cpp { }
}

task&lt;span class="pl-k"&gt;.&lt;/span&gt;&lt;span class="pl-en"&gt;plugins&lt;/span&gt; {
  &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Add grpc output without any option.  grpc must have been defined in the&lt;/span&gt;
  &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; protobuf.plugins block.&lt;/span&gt;
  &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; This yields&lt;/span&gt;
  &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; "--grpc_out=/path/to/output" on the protoc commandline.&lt;/span&gt;
  grpc { }
}&lt;/pre&gt;&lt;/div&gt;
&lt;h4&gt;&lt;a id="user-content-default-outputs" class="anchor" aria-hidden="true" href="#default-outputs"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Default outputs&lt;/h4&gt;
&lt;p&gt;&lt;strong&gt;Java&lt;/strong&gt; projects: the &lt;code&gt;java&lt;/code&gt; builtin is added by default: without any further specification, Java classes will be generated during the build process.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Python&lt;/strong&gt; output can be generated by adding the &lt;code&gt;python&lt;/code&gt; builtin:&lt;/p&gt;
&lt;div class="highlight highlight-source-groovy-gradle"&gt;&lt;pre&gt;&lt;span class="pl-en"&gt;protobuf&lt;/span&gt; {
  generatedFilesDir &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;span class="pl-smi"&gt;$p&lt;span class="pl-smi"&gt;rojectDir&lt;/span&gt;&lt;/span&gt;/generated&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;

  generateProtoTasks {
    all()&lt;span class="pl-k"&gt;.&lt;/span&gt;each { &lt;span class="pl-v"&gt;task&lt;/span&gt; &lt;span class="pl-k"&gt;-&amp;gt;&lt;/span&gt;
      task&lt;span class="pl-k"&gt;.&lt;/span&gt;builtins {
        &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Generates Python code in the output folder:&lt;/span&gt;
        python { }

        &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; If you wish to avoid generating Java files:&lt;/span&gt;
        remove java
      }
    }
  }
}&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;See &lt;a href="#change-where-files-are-generated"&gt;this section&lt;/a&gt; for details about where the code will be generated.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Android&lt;/strong&gt; projects: no default output will be added.  Since Protobuf
3.0.0, the
&lt;a href="https://github.com/protocolbuffers/protobuf/blob/v3.9.0/java/lite.md"&gt;lite runtime&lt;/a&gt;
is the recommended Protobuf library for Android.&lt;/p&gt;
&lt;p&gt;For Protobuf versions from 3.0.x through 3.7.x, lite code generation is
provided as a protoc plugin
(&lt;a href="http://search.maven.org/#search%7Cga%7C1%7Ca%3A%22protobuf-lite%22" rel="nofollow"&gt;protobuf-lite&lt;/a&gt;).
Example:&lt;/p&gt;
&lt;div class="highlight highlight-source-groovy-gradle"&gt;&lt;pre&gt;&lt;span class="pl-en"&gt;dependencies&lt;/span&gt; {
  &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; You need to depend on the lite runtime library, not protobuf-java&lt;/span&gt;
  compile &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;com.google.protobuf:protobuf-lite:3.0.0&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;
}

&lt;span class="pl-en"&gt;protobuf&lt;/span&gt; {
  protoc {
    &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; You still need protoc like in the non-Android case&lt;/span&gt;
    artifact &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;com.google.protobuf:protoc:3.7.0&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;
  }
  plugins {
    javalite {
      &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; The codegen for lite comes as a separate artifact&lt;/span&gt;
      artifact &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;com.google.protobuf:protoc-gen-javalite:3.0.0&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;
    }
  }
  generateProtoTasks {
    all()&lt;span class="pl-k"&gt;.&lt;/span&gt;each { &lt;span class="pl-v"&gt;task&lt;/span&gt; &lt;span class="pl-k"&gt;-&amp;gt;&lt;/span&gt;
      task&lt;span class="pl-k"&gt;.&lt;/span&gt;builtins {
        &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; In most cases you don't need the full Java output&lt;/span&gt;
        &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; if you use the lite output.&lt;/span&gt;
        remove java
      }
      task&lt;span class="pl-k"&gt;.&lt;/span&gt;plugins {
        javalite { }
      }
    }
  }
}&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Starting from Protobuf 3.8.0, lite code generation is built into
protoc's "java" output. Example:&lt;/p&gt;
&lt;div class="highlight highlight-source-groovy-gradle"&gt;&lt;pre&gt;&lt;span class="pl-en"&gt;dependencies&lt;/span&gt; {
  &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; You need to depend on the lite runtime library, not protobuf-java&lt;/span&gt;
  compile &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;com.google.protobuf:protobuf-javalite:3.8.0&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;
}

&lt;span class="pl-en"&gt;protobuf&lt;/span&gt; {
  protoc {
    artifact &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;com.google.protobuf:protoc:3.8.0&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;
  }
  generateProtoTasks {
    all()&lt;span class="pl-k"&gt;.&lt;/span&gt;each { &lt;span class="pl-v"&gt;task&lt;/span&gt; &lt;span class="pl-k"&gt;-&amp;gt;&lt;/span&gt;
      task&lt;span class="pl-k"&gt;.&lt;/span&gt;builtins {
        java {
          option &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;lite&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;
        }
      }
    }
  }
}&lt;/pre&gt;&lt;/div&gt;
&lt;h4&gt;&lt;a id="user-content-generate-descriptor-set-files" class="anchor" aria-hidden="true" href="#generate-descriptor-set-files"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Generate descriptor set files&lt;/h4&gt;
&lt;div class="highlight highlight-source-groovy-gradle"&gt;&lt;pre&gt;{ &lt;span class="pl-v"&gt;task&lt;/span&gt; &lt;span class="pl-k"&gt;-&amp;gt;&lt;/span&gt;
  &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; If true, will generate a descriptor_set.desc file under&lt;/span&gt;
  &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; $generatedFilesBaseDir/$sourceSet. Default is false.&lt;/span&gt;
  &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; See --descriptor_set_out in protoc documentation about what it is.&lt;/span&gt;
  task&lt;span class="pl-k"&gt;.&lt;/span&gt;generateDescriptorSet &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;true&lt;/span&gt;

  &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Allows to override the default for the descriptor set location&lt;/span&gt;
  task&lt;span class="pl-k"&gt;.&lt;/span&gt;descriptorSetOptions&lt;span class="pl-k"&gt;.&lt;/span&gt;path &lt;span class="pl-k"&gt;=&lt;/span&gt;
    &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;span class="pl-s1"&gt;&lt;span class="pl-pse"&gt;${&lt;/span&gt;projectDir&lt;span class="pl-pse"&gt;}&lt;/span&gt;&lt;/span&gt;/build/descriptors/{&lt;span class="pl-smi"&gt;$t&lt;span class="pl-smi"&gt;ask&lt;/span&gt;&lt;span class="pl-k"&gt;.&lt;/span&gt;&lt;span class="pl-smi"&gt;sourceSet&lt;/span&gt;&lt;span class="pl-k"&gt;.&lt;/span&gt;&lt;span class="pl-smi"&gt;name&lt;/span&gt;&lt;/span&gt;}.dsc&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;

  &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; If true, the descriptor set will contain line number information&lt;/span&gt;
  &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; and comments. Default is false.&lt;/span&gt;
  task&lt;span class="pl-k"&gt;.&lt;/span&gt;descriptorSetOptions&lt;span class="pl-k"&gt;.&lt;/span&gt;includeSourceInfo &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;true&lt;/span&gt;

  &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; If true, the descriptor set will contain all transitive imports and&lt;/span&gt;
  &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; is therefore self-contained. Default is false.&lt;/span&gt;
  task&lt;span class="pl-k"&gt;.&lt;/span&gt;descriptorSetOptions&lt;span class="pl-k"&gt;.&lt;/span&gt;includeImports &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;true&lt;/span&gt;
}&lt;/pre&gt;&lt;/div&gt;
&lt;h4&gt;&lt;a id="user-content-change-where-files-are-generated" class="anchor" aria-hidden="true" href="#change-where-files-are-generated"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Change where files are generated&lt;/h4&gt;
&lt;p&gt;By default generated Java files are under
&lt;code&gt;$generatedFilesBaseDir/$sourceSet/$builtinPluginName&lt;/code&gt;, where
&lt;code&gt;$generatedFilesBaseDir&lt;/code&gt; is &lt;code&gt;$buildDir/generated/source/proto&lt;/code&gt; by default,
and is configurable. E.g.,&lt;/p&gt;
&lt;div class="highlight highlight-source-groovy-gradle"&gt;&lt;pre&gt;&lt;span class="pl-en"&gt;protobuf&lt;/span&gt; {
  &lt;span class="pl-k"&gt;..&lt;/span&gt;.
  generatedFilesBaseDir &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;span class="pl-smi"&gt;$p&lt;span class="pl-smi"&gt;rojectDir&lt;/span&gt;&lt;/span&gt;/src/generated&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;
}&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;The subdirectory name, which is by default &lt;code&gt;$builtinPluginName&lt;/code&gt;, can also be
changed by setting the &lt;code&gt;outputSubDir&lt;/code&gt; property in the &lt;code&gt;builtins&lt;/code&gt; or
&lt;code&gt;plugins&lt;/code&gt; block of a task configuration within &lt;code&gt;generateProtoTasks&lt;/code&gt; block
(see previous section). E.g.,&lt;/p&gt;
&lt;div class="highlight highlight-source-groovy-gradle"&gt;&lt;pre&gt;{ &lt;span class="pl-v"&gt;task&lt;/span&gt; &lt;span class="pl-k"&gt;-&amp;gt;&lt;/span&gt;
  task&lt;span class="pl-k"&gt;.&lt;/span&gt;plugins {
    grpc {
      &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; Write the generated files under&lt;/span&gt;
      &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; "$generatedFilesBaseDir/$sourceSet/grpcjava"&lt;/span&gt;
      outputSubDir &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;grpcjava&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;
    }
  }
}&lt;/pre&gt;&lt;/div&gt;
&lt;h3&gt;&lt;a id="user-content-protos-in-dependencies" class="anchor" aria-hidden="true" href="#protos-in-dependencies"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Protos in dependencies&lt;/h3&gt;
&lt;p&gt;If a Java project contains proto files, they will be packaged in the jar files
along with the compiled classes.&lt;/p&gt;
&lt;p&gt;Protos in dependencies (e.g. upstream jars) can be put in either in the &lt;code&gt;compile&lt;/code&gt;
configuration or the &lt;code&gt;protobuf&lt;/code&gt; configuration.&lt;/p&gt;
&lt;p&gt;If the dependency is put in the &lt;code&gt;compile&lt;/code&gt; configuration, the proto files are
extracted to an &lt;code&gt;extracted-include-protos&lt;/code&gt; directory and added to the &lt;code&gt;--proto_path&lt;/code&gt;
flag of the protoc command line, so that they can be imported by the proto files
of the current project. The imported proto files will not be compiled since
they have already been compiled in their own projects. Example:&lt;/p&gt;
&lt;div class="highlight highlight-source-groovy-gradle"&gt;&lt;pre&gt;&lt;span class="pl-en"&gt;dependencies&lt;/span&gt; {
  compile project(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;:someProjectWithProtos&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;)
  testCompile files(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;lib/some-testlib-with-protos.jar&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
}&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;If the dependency is put in the &lt;code&gt;protobuf&lt;/code&gt; configuration, the proto files are
extracted to a &lt;code&gt;extracted-protos&lt;/code&gt; directory and added to the protoc command
line as files to compile, in the same protoc invocation as the current project's
proto files (if any). Example:&lt;/p&gt;
&lt;div class="highlight highlight-source-groovy-gradle"&gt;&lt;pre&gt;&lt;span class="pl-en"&gt;dependencies&lt;/span&gt; {
  &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; protos can be from a local package,&lt;/span&gt;
  protobuf files(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;lib/protos.tar.gz&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;)
  &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; ... a local directory,&lt;/span&gt;
  protobuf files(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;ext/&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;)   &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; NEVER use fileTree(). See issue #248.&lt;/span&gt;
  &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; ... or an artifact from a repository&lt;/span&gt;
  testProtobuf &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;com.example:published-protos:1.0.0&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;
}&lt;/pre&gt;&lt;/div&gt;
&lt;h2&gt;&lt;a id="user-content-pre-compiled-protoc-artifacts" class="anchor" aria-hidden="true" href="#pre-compiled-protoc-artifacts"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Pre-compiled &lt;code&gt;protoc&lt;/code&gt; artifacts&lt;/h2&gt;
&lt;p&gt;This &lt;a href="https://repo1.maven.org/maven2/com/google/protobuf/protoc/" rel="nofollow"&gt;Maven Central directory&lt;/a&gt;
lists pre-compiled &lt;code&gt;protoc&lt;/code&gt; artifacts that can be used by this plugin.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-tips-for-ides" class="anchor" aria-hidden="true" href="#tips-for-ides"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Tips for IDEs&lt;/h2&gt;
&lt;h3&gt;&lt;a id="user-content-intellij-idea" class="anchor" aria-hidden="true" href="#intellij-idea"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;IntelliJ IDEA&lt;/h3&gt;
&lt;p&gt;Be sure to enable delegate IDE build/run actions to Gradle so
that Intellij does not use its internal build mechanism to
compile source code. This plugin ensures that code generation
happens before Gradle's build step. If the setting is off,
Intellij's own build system will be used instead of Gradle.&lt;/p&gt;
&lt;p&gt;Enable the setting with:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;Settings -&amp;gt; Build, Execution, Deployment
  -&amp;gt; Build Tools -&amp;gt; Gradle -&amp;gt; Runner
  -&amp;gt; Delegate IDE build/run actions to gradle.
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;This plugin integrates with the &lt;code&gt;idea&lt;/code&gt; plugin and automatically
registers the proto files and generated Java code as sources.&lt;/p&gt;
&lt;div class="highlight highlight-source-groovy-gradle"&gt;&lt;pre&gt;apply &lt;span class="pl-c1"&gt;plugin&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;idea&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;

&lt;span class="pl-en"&gt;protobuf&lt;/span&gt; {
    &lt;span class="pl-k"&gt;..&lt;/span&gt;.
    generatedFilesBaseDir &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;span class="pl-smi"&gt;$p&lt;span class="pl-smi"&gt;rojectDir&lt;/span&gt;&lt;/span&gt;/gen&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;
}

&lt;span class="pl-en"&gt;clean&lt;/span&gt; {
    delete protobuf&lt;span class="pl-k"&gt;.&lt;/span&gt;generatedFilesBaseDir
}

&lt;span class="pl-en"&gt;idea&lt;/span&gt; {
    module {
        &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; proto files and generated Java files are automatically added as&lt;/span&gt;
        &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; source dirs.&lt;/span&gt;
        &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;//&lt;/span&gt; If you have additional sources, add them here:&lt;/span&gt;
        sourceDirs &lt;span class="pl-k"&gt;+&lt;/span&gt;&lt;span class="pl-k"&gt;=&lt;/span&gt; file(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;/path/to/other/sources&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;);
    }
}&lt;/pre&gt;&lt;/div&gt;
&lt;h2&gt;&lt;a id="user-content-testing-the-plugin" class="anchor" aria-hidden="true" href="#testing-the-plugin"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Testing the plugin&lt;/h2&gt;
&lt;p&gt;&lt;code&gt;testProject*&lt;/code&gt; are testing projects that uses this plugin to compile
&lt;code&gt;.proto&lt;/code&gt; files. Because the tests include an Android project, you
need to install
&lt;a href="https://developer.android.com/sdk/index.html#Other" rel="nofollow"&gt;Android SDK Tools&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;After you made any change to the plugin, be sure to run these tests.&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;$ ./gradlew test
&lt;/code&gt;&lt;/pre&gt;
&lt;/article&gt;&lt;/div&gt;</description><author>google</author><guid isPermaLink="false">https://github.com/google/protobuf-gradle-plugin</guid><pubDate>Wed, 11 Dec 2019 00:02:00 GMT</pubDate></item><item><title>gradle/gradle #3 in Groovy, This month</title><link>https://github.com/gradle/gradle</link><description>&lt;p&gt;&lt;i&gt;Adaptable, fast automation for all&lt;/i&gt;&lt;/p&gt;&lt;div id="readme" class="md" data-path="README.md"&gt;&lt;article class="markdown-body entry-content p-5" itemprop="text"&gt;&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="gradle.png"&gt;&lt;img src="gradle.png" width="350px" alt="Gradle Logo" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Gradle is a build tool with a focus on build automation and support for multi-language development. If you are building, testing, publishing, and deploying software on any platform, Gradle offers a flexible model that can support the entire development lifecycle from compiling and packaging code to publishing web sites. Gradle has been designed to support build automation across multiple languages and platforms including Java, Scala, Android, C/C++, and Groovy, and is closely integrated with development tools and continuous integration servers including Eclipse, IntelliJ, and Jenkins.&lt;/p&gt;
&lt;p&gt;For more information about Gradle, please visit: &lt;a href="https://gradle.org" rel="nofollow"&gt;https://gradle.org&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;This project adheres to the &lt;a href="https://gradle.org/conduct/" rel="nofollow"&gt;Gradle Code of Conduct&lt;/a&gt;. By participating, you are expected to uphold this code.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-downloading" class="anchor" aria-hidden="true" href="#downloading"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Downloading&lt;/h2&gt;
&lt;p&gt;You can download released versions and nightly build artifacts from: &lt;a href="https://gradle.org/downloads" rel="nofollow"&gt;https://gradle.org/downloads&lt;/a&gt;&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-installing-from-source" class="anchor" aria-hidden="true" href="#installing-from-source"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Installing from source&lt;/h3&gt;
&lt;p&gt;To create an install from the source tree you can run either of the following:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;./gradlew install -Pgradle_installPath=/usr/local/gradle-source-build
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;This will create a minimal installation; just what's needed to run Gradle (i.e. no docs).&lt;/p&gt;
&lt;p&gt;You can then build a Gradle based project with this installation:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;/usr/local/gradle-source-build/bin/gradle «some task»
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;To create a full installation (includes docs):&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;./gradlew installAll -Pgradle_installPath=/usr/local/gradle-source-build
&lt;/code&gt;&lt;/pre&gt;
&lt;h2&gt;&lt;a id="user-content-contributing" class="anchor" aria-hidden="true" href="#contributing"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Contributing&lt;/h2&gt;
&lt;p&gt;If you're looking to contribute to Gradle or provide a patch/pull request, you can find more info &lt;a href="https://github.com/gradle/gradle/blob/master/CONTRIBUTING.md"&gt;here&lt;/a&gt;.&lt;/p&gt;
&lt;/article&gt;&lt;/div&gt;</description><author>gradle</author><guid isPermaLink="false">https://github.com/gradle/gradle</guid><pubDate>Wed, 11 Dec 2019 00:03:00 GMT</pubDate></item><item><title>SAP/jenkins-library #4 in Groovy, This month</title><link>https://github.com/SAP/jenkins-library</link><description>&lt;p&gt;&lt;i&gt;Jenkins shared library for Continuous Delivery pipelines.&lt;/i&gt;&lt;/p&gt;&lt;div id="readme" class="md" data-path="README.md"&gt;&lt;article class="markdown-body entry-content p-5" itemprop="text"&gt;&lt;p&gt;&lt;a href="https://travis-ci.org/SAP/jenkins-library" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/d54268f68026d00b133c6400eda7cd7f995d829f/68747470733a2f2f7472617669732d63692e6f72672f5341502f6a656e6b696e732d6c6962726172792e7376673f6272616e63683d6d6173746572" alt="Build Status" data-canonical-src="https://travis-ci.org/SAP/jenkins-library.svg?branch=master" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://codeclimate.com/github/SAP/jenkins-library/maintainability" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/fe5237afcedeac1b60a4be877cb930db458461f3/68747470733a2f2f6170692e636f6465636c696d6174652e636f6d2f76312f6261646765732f30653661323333343436313665323962346564302f6d61696e7461696e6162696c697479" alt="Maintainability" data-canonical-src="https://api.codeclimate.com/v1/badges/0e6a23344616e29b4ed0/maintainability" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://codeclimate.com/github/SAP/jenkins-library/test_coverage" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/ff974c1fddff906ed20785611d24d2cb47a8ccc9/68747470733a2f2f6170692e636f6465636c696d6174652e636f6d2f76312f6261646765732f30653661323333343436313665323962346564302f746573745f636f766572616765" alt="Test Coverage" data-canonical-src="https://api.codeclimate.com/v1/badges/0e6a23344616e29b4ed0/test_coverage" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h1&gt;&lt;a id="user-content-project-piper-repository" class="anchor" aria-hidden="true" href="#project-piper-repository"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Project Piper Repository&lt;/h1&gt;
&lt;p&gt;The Project "Piper" offers default pipelines to easily implement CI/CD processes integrating SAP systems. The corresponding "Shared Library" provides a set of "steps" to build your own scenarios beyond defaults.&lt;/p&gt;
&lt;h1&gt;&lt;a id="user-content-user-documentation" class="anchor" aria-hidden="true" href="#user-documentation"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;User Documentation&lt;/h1&gt;
&lt;p&gt;If you want to view the User Documentation of Project Piper please follow this &lt;a href="https://sap.github.io/jenkins-library/" rel="nofollow"&gt;Piper Pages Link&lt;/a&gt;.&lt;/p&gt;
&lt;h1&gt;&lt;a id="user-content-known-issues" class="anchor" aria-hidden="true" href="#known-issues"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Known Issues&lt;/h1&gt;
&lt;p&gt;A list of known issues is available on the &lt;a href="https://github.com/SAP/jenkins-library/issues"&gt;GitHub issues page of this project&lt;/a&gt;.&lt;/p&gt;
&lt;h1&gt;&lt;a id="user-content-how-to-obtain-support" class="anchor" aria-hidden="true" href="#how-to-obtain-support"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;How to obtain support&lt;/h1&gt;
&lt;p&gt;Feel free to open new issues for feature requests, bugs or general feedback on
the &lt;a href="https://github.com/SAP/jenkins-library/issues"&gt;GitHub issues page of this project&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Register to our &lt;a href="https://groups.google.com/forum/#!forum/project-piper" rel="nofollow"&gt;google group&lt;/a&gt; in order to get updates or for asking questions.&lt;/p&gt;
&lt;h1&gt;&lt;a id="user-content-contributing" class="anchor" aria-hidden="true" href="#contributing"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Contributing&lt;/h1&gt;
&lt;p&gt;Read and understand our &lt;a href=".github/CONTRIBUTING.md"&gt;contribution guidelines&lt;/a&gt;
before opening a pull request.&lt;/p&gt;
&lt;h1&gt;&lt;a id="user-content-license" class="anchor" aria-hidden="true" href="#license"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;License&lt;/h1&gt;
&lt;p&gt;Copyright (c) 2019 SAP SE or an SAP affiliate company. All rights reserved.
This file is licensed under the Apache Software License, v. 2 except as noted
otherwise in the &lt;a href="./LICENSE"&gt;LICENSE file&lt;/a&gt;&lt;/p&gt;
&lt;/article&gt;&lt;/div&gt;</description><author>SAP</author><guid isPermaLink="false">https://github.com/SAP/jenkins-library</guid><pubDate>Wed, 11 Dec 2019 00:04:00 GMT</pubDate></item><item><title>spinnaker/clouddriver #5 in Groovy, This month</title><link>https://github.com/spinnaker/clouddriver</link><description>&lt;p&gt;&lt;i&gt;read and write operations across cloud providers&lt;/i&gt;&lt;/p&gt;&lt;div id="readme" class="md" data-path="README.md"&gt;&lt;article class="markdown-body entry-content p-5" itemprop="text"&gt;&lt;h2&gt;&lt;a id="user-content-spinnaker-cloud-provider-service" class="anchor" aria-hidden="true" href="#spinnaker-cloud-provider-service"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Spinnaker Cloud Provider Service&lt;/h2&gt;
&lt;p&gt;&lt;a href="https://travis-ci.org/spinnaker/clouddriver" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/ac588ad730ed609fb14985ed798ab23b491ff5b9/68747470733a2f2f6170692e7472617669732d63692e6f72672f7370696e6e616b65722f636c6f75646472697665722e7376673f6272616e63683d6d6173746572" alt="Build Status" data-canonical-src="https://api.travis-ci.org/spinnaker/clouddriver.svg?branch=master" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;This service is the main integration point for Spinnaker cloud providers like AWS, GCE, CloudFoundry, Azure etc.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-developing-with-intellij" class="anchor" aria-hidden="true" href="#developing-with-intellij"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Developing with Intellij&lt;/h3&gt;
&lt;p&gt;To configure this repo as an Intellij project, run &lt;code&gt;./gradlew idea&lt;/code&gt; in the root directory.&lt;/p&gt;
&lt;p&gt;Some of the modules make use of &lt;a href="https://projectlombok.org/" rel="nofollow"&gt;Lombok&lt;/a&gt;, which will compile correctly on its own. However, for Intellij to make sense of the Lombok annotations, you'll need to install the &lt;a href="https://plugins.jetbrains.com/plugin/6317-lombok-plugin" rel="nofollow"&gt;Lombok plugin&lt;/a&gt; as well as &lt;a href="https://www.jetbrains.com/help/idea/configuring-annotation-processing.html#3" rel="nofollow"&gt;check 'enable' under annotation processing&lt;/a&gt;.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-debugging" class="anchor" aria-hidden="true" href="#debugging"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Debugging&lt;/h3&gt;
&lt;p&gt;To start the JVM in debug mode, set the Java system property &lt;code&gt;DEBUG=true&lt;/code&gt;:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;./gradlew -DDEBUG=true
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;The JVM will then listen for a debugger to be attached on port 7102.  The JVM will &lt;em&gt;not&lt;/em&gt; wait for
the debugger to be attached before starting Clouddriver; the relevant JVM arguments can be seen and
modified as needed in &lt;code&gt;build.gradle&lt;/code&gt;.&lt;/p&gt;
&lt;/article&gt;&lt;/div&gt;</description><author>spinnaker</author><guid isPermaLink="false">https://github.com/spinnaker/clouddriver</guid><pubDate>Wed, 11 Dec 2019 00:05:00 GMT</pubDate></item></channel></rss>