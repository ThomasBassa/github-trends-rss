<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0"><channel><title>GitHub Trending: Emacs Lisp, This month</title><link>https://github.com/trending/emacs-lisp?since=monthly</link><description>The top repositories on GitHub for emacs-lisp, measured monthly</description><pubDate>Tue, 11 Feb 2020 01:06:37 GMT</pubDate><lastBuildDate>Tue, 11 Feb 2020 01:06:37 GMT</lastBuildDate><generator>PyRSS2Gen-1.1.0</generator><docs>http://blogs.law.harvard.edu/tech/rss</docs><ttl>720</ttl><item><title>hlissner/emacs-doom-themes #1 in Emacs Lisp, This month</title><link>https://github.com/hlissner/emacs-doom-themes</link><description>&lt;p&gt;&lt;i&gt;An opinionated pack of modern color-themes&lt;/i&gt;&lt;/p&gt;&lt;div id="readme" class="md" data-path="README.md"&gt;&lt;article class="markdown-body entry-content p-5" itemprop="text"&gt;&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="https://camo.githubusercontent.com/a918642e7742aa7f5aae9e686f48e79bd1a96cb0/68747470733a2f2f696d672e736869656c64732e696f2f6769746875622f7461672f686c6973736e65722f656d6163732d646f6f6d2d7468656d65732e7376673f6c6162656c3d72656c65617365267374796c653d666c61742d737175617265"&gt;&lt;img src="https://camo.githubusercontent.com/a918642e7742aa7f5aae9e686f48e79bd1a96cb0/68747470733a2f2f696d672e736869656c64732e696f2f6769746875622f7461672f686c6973736e65722f656d6163732d646f6f6d2d7468656d65732e7376673f6c6162656c3d72656c65617365267374796c653d666c61742d737175617265" alt="Release tag" data-canonical-src="https://img.shields.io/github/tag/hlissner/emacs-doom-themes.svg?label=release&amp;amp;style=flat-square" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="http://melpa.org/#/doom-themes" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/621f359fdf4553c5252a571785de56a85d53010b/687474703a2f2f6d656c70612e6f72672f7061636b616765732f646f6f6d2d7468656d65732d62616467652e7376673f7374796c653d666c61742d737175617265" alt="MELPA" data-canonical-src="http://melpa.org/packages/doom-themes-badge.svg?style=flat-square" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://travis-ci.org/hlissner/emacs-doom-themes" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/987575e312ca7a4f68f417530468a5f6e190cccf/68747470733a2f2f7472617669732d63692e6f72672f686c6973736e65722f656d6163732d646f6f6d2d7468656d65732e7376673f6272616e63683d6d6173746572267374796c653d666c61742d737175617265" alt="Build Status" data-canonical-src="https://travis-ci.org/hlissner/emacs-doom-themes.svg?branch=master&amp;amp;style=flat-square" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="./LICENSE"&gt;&lt;img src="https://camo.githubusercontent.com/95e854794a291423fe200ec681d09ed63f9fadd1/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f6c6963656e73652d4d49542d677265656e2e7376673f7374796c653d666c61742d737175617265" alt="MIT" data-canonical-src="https://img.shields.io/badge/license-MIT-green.svg?style=flat-square" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h1&gt;&lt;a id="user-content-doom-themes" class="anchor" aria-hidden="true" href="#doom-themes"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;doom-themes&lt;/h1&gt;
&lt;p&gt;DOOM Themes is an opinionated UI plugin and pack of themes extracted from my
&lt;a href="https://github.com/hlissner/.emacs.d"&gt;emacs.d&lt;/a&gt;, inspired by some of my favorite color themes.&lt;/p&gt;
&lt;p&gt;&lt;a href="https://github.com/hlissner/emacs-doom-themes/tree/screenshots"&gt;See the screenshots.&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Table of Contents&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="#theme-list"&gt;Theme list&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#features"&gt;Features&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#install"&gt;Install&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="#doom-emacs"&gt;Doom Emacs&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#manually"&gt;Manually&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="#common-issues"&gt;Common Issues&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#contribute"&gt;Contribute&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-theme-list" class="anchor" aria-hidden="true" href="#theme-list"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Theme list&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Flagship themes
&lt;ul class="contains-task-list"&gt;
&lt;li class="task-list-item"&gt;&lt;input type="checkbox" id="" disabled="" class="task-list-item-checkbox" checked=""&gt; &lt;code&gt;doom-one&lt;/code&gt;: doom-themes' flagship theme, inspired by &lt;a href="http://atom.io" rel="nofollow"&gt;Atom&lt;/a&gt;'s One Dark themes&lt;/li&gt;
&lt;li class="task-list-item"&gt;&lt;input type="checkbox" id="" disabled="" class="task-list-item-checkbox" checked=""&gt; &lt;code&gt;doom-one-light&lt;/code&gt;: light version of doom-one (thanks to &lt;a href="https://github.com/ztlevi"&gt;ztlevi&lt;/a&gt;)&lt;/li&gt;
&lt;li class="task-list-item"&gt;&lt;input type="checkbox" id="" disabled="" class="task-list-item-checkbox" checked=""&gt; &lt;code&gt;doom-vibrant&lt;/code&gt;: a slightly more vibrant version of &lt;code&gt;doom-one&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Additional themes
&lt;ul class="contains-task-list"&gt;
&lt;li class="task-list-item"&gt;&lt;input type="checkbox" id="" disabled="" class="task-list-item-checkbox" checked=""&gt; &lt;code&gt;doom-acario-dark&lt;/code&gt;: an original dark theme (thanks to &lt;a href="https://github.com/gagbo"&gt;gagbo&lt;/a&gt;)&lt;/li&gt;
&lt;li class="task-list-item"&gt;&lt;input type="checkbox" id="" disabled="" class="task-list-item-checkbox" checked=""&gt; &lt;code&gt;doom-acario-light&lt;/code&gt;: an original light theme (thanks to &lt;a href="https://github.com/gagbo"&gt;gagbo&lt;/a&gt;)&lt;/li&gt;
&lt;li class="task-list-item"&gt;&lt;input type="checkbox" id="" disabled="" class="task-list-item-checkbox" checked=""&gt; &lt;code&gt;doom-city-lights&lt;/code&gt;: based on Atom's &lt;a href="http://citylights.xyz/" rel="nofollow"&gt;City lights&lt;/a&gt; (thanks to &lt;a href="https://github.com/fuxialexander"&gt;fuxialexander&lt;/a&gt;)&lt;/li&gt;
&lt;li class="task-list-item"&gt;&lt;input type="checkbox" id="" disabled="" class="task-list-item-checkbox" checked=""&gt; &lt;code&gt;doom-challenger-deep&lt;/code&gt;: based on Vim's &lt;a href="https://github.com/challenger-deep-theme/vim"&gt;Challenger deep&lt;/a&gt; theme (thanks to &lt;a href="https://github.com/fuxialexander"&gt;fuxialexander&lt;/a&gt;)&lt;/li&gt;
&lt;li class="task-list-item"&gt;&lt;input type="checkbox" id="" disabled="" class="task-list-item-checkbox" checked=""&gt; &lt;code&gt;doom-dark+&lt;/code&gt; ported from VS Code's &lt;a href="https://github.com/microsoft/vscode/blob/master/extensions/theme-defaults/themes/dark_plus.json"&gt;Dark+&lt;/a&gt; theme (thanks to &lt;a href="https://github.com/ema2159"&gt;ema2159&lt;/a&gt;)&lt;/li&gt;
&lt;li class="task-list-item"&gt;&lt;input type="checkbox" id="" disabled="" class="task-list-item-checkbox" checked=""&gt; &lt;code&gt;doom-dracula&lt;/code&gt;: an implementation of &lt;a href="https://draculatheme.com/" rel="nofollow"&gt;Dracula&lt;/a&gt; theme (thanks to &lt;a href="https://github.com/fuxialexander"&gt;fuxialexander&lt;/a&gt;)&lt;/li&gt;
&lt;li class="task-list-item"&gt;&lt;input type="checkbox" id="" disabled="" class="task-list-item-checkbox" checked=""&gt; &lt;code&gt;doom-fairy-floss&lt;/code&gt;: a candy colored Sublime theme by &lt;a href="https://sailorhg.github.io/fairyfloss/" rel="nofollow"&gt;sailorhg&lt;/a&gt; (thanks to &lt;a href="https://github.com/ema2159"&gt;ema2159&lt;/a&gt;)&lt;/li&gt;
&lt;li class="task-list-item"&gt;&lt;input type="checkbox" id="" disabled="" class="task-list-item-checkbox" checked=""&gt; &lt;code&gt;doom-gruvbox&lt;/code&gt;: adapted from Morhetz's &lt;a href="https://github.com/morhetz/gruvbox"&gt;Gruvbox&lt;/a&gt; (thanks to &lt;a href="https://github.com/JongW"&gt;JongW&lt;/a&gt;)&lt;/li&gt;
&lt;li class="task-list-item"&gt;&lt;input type="checkbox" id="" disabled="" class="task-list-item-checkbox" checked=""&gt; &lt;code&gt;doom-horizon&lt;/code&gt;: ported from VS Code's &lt;a href="https://github.com/jolaleye/horizon-theme-vscode"&gt;Horizon&lt;/a&gt; (thanks to &lt;a href="https://github.com/kenranunderscore"&gt;karetsu&lt;/a&gt;)&lt;/li&gt;
&lt;li class="task-list-item"&gt;&lt;input type="checkbox" id="" disabled="" class="task-list-item-checkbox" checked=""&gt; &lt;code&gt;doom-Iosvkem&lt;/code&gt;: adapted from &lt;a href="https://github.com/neutaaaaan/iosvkem"&gt;Iosvkem&lt;/a&gt; (thanks to &lt;a href="https://github.com/neutaaaaan"&gt;neutaaaaan&lt;/a&gt;)&lt;/li&gt;
&lt;li class="task-list-item"&gt;&lt;input type="checkbox" id="" disabled="" class="task-list-item-checkbox" checked=""&gt; &lt;code&gt;doom-laserwave&lt;/code&gt;: a clean 80's synthwave / outrun theme inspired by VS Code's &lt;a href="https://github.com/Jaredk3nt/laserwave"&gt;laserwave&lt;/a&gt; (thanks to &lt;a href="https://github.com/hyakt"&gt;hyakt&lt;/a&gt;)&lt;/li&gt;
&lt;li class="task-list-item"&gt;&lt;input type="checkbox" id="" disabled="" class="task-list-item-checkbox" checked=""&gt; &lt;code&gt;doom-material&lt;/code&gt; adapted from &lt;a href="https://github.com/equinusocio/vsc-material-theme"&gt;Material Themes&lt;/a&gt; (thanks to &lt;a href="https://github.com/tam5"&gt;tam5&lt;/a&gt;)&lt;/li&gt;
&lt;li class="task-list-item"&gt;&lt;input type="checkbox" id="" disabled="" class="task-list-item-checkbox" checked=""&gt; &lt;code&gt;doom-manegarm&lt;/code&gt;: an original autumn-inspired dark theme (thanks to &lt;a href="https://github.com/kenranunderscore"&gt;kenranunderscore&lt;/a&gt;)&lt;/li&gt;
&lt;li class="task-list-item"&gt;&lt;input type="checkbox" id="" disabled="" class="task-list-item-checkbox" checked=""&gt; &lt;code&gt;doom-molokai&lt;/code&gt;: based on Textmate's monokai&lt;/li&gt;
&lt;li class="task-list-item"&gt;&lt;input type="checkbox" id="" disabled="" class="task-list-item-checkbox" checked=""&gt; &lt;code&gt;doom-moonlight&lt;/code&gt; ported from VS Code's &lt;a href="https://github.com/atomiks/moonlight-vscode-theme"&gt;Moonlight Theme&lt;/a&gt; (thanks to &lt;a href="https://github.com/Brettm12345"&gt;Brettm12345&lt;/a&gt;)&lt;/li&gt;
&lt;li class="task-list-item"&gt;&lt;input type="checkbox" id="" disabled="" class="task-list-item-checkbox" checked=""&gt; &lt;code&gt;doom-nord&lt;/code&gt;: dark variant of &lt;a href="https://www.nordtheme.com/" rel="nofollow"&gt;Nord&lt;/a&gt; (thanks to &lt;a href="https://github.com/fuxialexander"&gt;fuxialexander&lt;/a&gt;)&lt;/li&gt;
&lt;li class="task-list-item"&gt;&lt;input type="checkbox" id="" disabled="" class="task-list-item-checkbox" checked=""&gt; &lt;code&gt;doom-nord-light&lt;/code&gt;: light variant of &lt;a href="https://www.nordtheme.com/" rel="nofollow"&gt;Nord&lt;/a&gt; (thanks to &lt;a href="https://github.com/fuxialexander"&gt;fuxialexander&lt;/a&gt;)&lt;/li&gt;
&lt;li class="task-list-item"&gt;&lt;input type="checkbox" id="" disabled="" class="task-list-item-checkbox" checked=""&gt; &lt;code&gt;doom-nova&lt;/code&gt;: adapted from &lt;a href="https://trevordmiller.com/projects/nova" rel="nofollow"&gt;Nova&lt;/a&gt; (thanks to &lt;a href="https://github.com/bigardone"&gt;bigardone&lt;/a&gt;)&lt;/li&gt;
&lt;li class="task-list-item"&gt;&lt;input type="checkbox" id="" disabled="" class="task-list-item-checkbox" checked=""&gt; &lt;code&gt;doom-oceanic-next&lt;/code&gt;: adapted from &lt;a href="https://github.com/voronianski/oceanic-next-color-scheme"&gt;Oceanic Next&lt;/a&gt; theme (thanks to &lt;a href="https://github.com/juanwolf"&gt;juanwolf&lt;/a&gt;)&lt;/li&gt;
&lt;li class="task-list-item"&gt;&lt;input type="checkbox" id="" disabled="" class="task-list-item-checkbox" checked=""&gt; &lt;code&gt;doom-opera&lt;/code&gt;: an original dark theme (thanks to &lt;a href="https://github.com/jwintz"&gt;jwintz&lt;/a&gt;)&lt;/li&gt;
&lt;li class="task-list-item"&gt;&lt;input type="checkbox" id="" disabled="" class="task-list-item-checkbox" checked=""&gt; &lt;code&gt;doom-opera-light&lt;/code&gt;: an original light theme (thanks to &lt;a href="https://github.com/jwintz"&gt;jwintz&lt;/a&gt;)&lt;/li&gt;
&lt;li class="task-list-item"&gt;&lt;input type="checkbox" id="" disabled="" class="task-list-item-checkbox" checked=""&gt; &lt;code&gt;doom-outrun-electric&lt;/code&gt;: a neon colored theme inspired in VS Code's &lt;a href="https://github.com/samrap/outrun-theme-vscode"&gt;Outrun Electric&lt;/a&gt; (thanks to &lt;a href="https://github.com/ema2159"&gt;ema2159&lt;/a&gt;)&lt;/li&gt;
&lt;li class="task-list-item"&gt;&lt;input type="checkbox" id="" disabled="" class="task-list-item-checkbox" checked=""&gt; &lt;code&gt;doom-palenight&lt;/code&gt; adapted from &lt;a href="https://github.com/equinusocio/vsc-material-theme"&gt;Material Themes&lt;/a&gt; (thanks to &lt;a href="https://github.com/Brettm12345"&gt;Brettm12345&lt;/a&gt;)&lt;/li&gt;
&lt;li class="task-list-item"&gt;&lt;input type="checkbox" id="" disabled="" class="task-list-item-checkbox" checked=""&gt; &lt;code&gt;doom-peacock&lt;/code&gt;: based on Peacock from &lt;a href="http://daylerees.github.io/" rel="nofollow"&gt;daylerees' themes&lt;/a&gt; (thanks to &lt;a href="https://github.com/teesloane"&gt;teesloane&lt;/a&gt;)&lt;/li&gt;
&lt;li class="task-list-item"&gt;&lt;input type="checkbox" id="" disabled="" class="task-list-item-checkbox" checked=""&gt; &lt;code&gt;doom-snazzy&lt;/code&gt;: a dark theme inspired in Atom's &lt;a href="https://github.com/sindresorhus/hyper-snazzy"&gt;Hyper Snazzy&lt;/a&gt; (thanks to &lt;a href="https://github.com/ar1a"&gt;ar1a&lt;/a&gt;)&lt;/li&gt;
&lt;li class="task-list-item"&gt;&lt;input type="checkbox" id="" disabled="" class="task-list-item-checkbox" checked=""&gt; &lt;code&gt;doom-solarized-dark&lt;/code&gt;: dark variant of &lt;a href="http://ethanschoonover.com/solarized" rel="nofollow"&gt;Solarized&lt;/a&gt; (thanks to &lt;a href="https://github.com/ema2159"&gt;ema2159&lt;/a&gt;)&lt;/li&gt;
&lt;li class="task-list-item"&gt;&lt;input type="checkbox" id="" disabled="" class="task-list-item-checkbox" checked=""&gt; &lt;code&gt;doom-solarized-light&lt;/code&gt;: light variant of &lt;a href="http://ethanschoonover.com/solarized" rel="nofollow"&gt;Solarized&lt;/a&gt; (thanks to &lt;a href="https://github.com/fuxialexander"&gt;fuxialexander&lt;/a&gt;)&lt;/li&gt;
&lt;li class="task-list-item"&gt;&lt;input type="checkbox" id="" disabled="" class="task-list-item-checkbox" checked=""&gt; &lt;code&gt;doom-sourcerer&lt;/code&gt;: based on &lt;a href="https://github.com/xero/sourcerer.vim"&gt;Sourcerer&lt;/a&gt; (thanks to &lt;a href="https://github.com/defphil"&gt;defphil&lt;/a&gt;)&lt;/li&gt;
&lt;li class="task-list-item"&gt;&lt;input type="checkbox" id="" disabled="" class="task-list-item-checkbox" checked=""&gt; &lt;code&gt;doom-spacegrey&lt;/code&gt;: &lt;a href="http://kkga.github.io/spacegray/" rel="nofollow"&gt;I'm sure you've heard of it&lt;/a&gt; (thanks to &lt;a href="https://github.com/teesloane"&gt;teesloane&lt;/a&gt;)&lt;/li&gt;
&lt;li class="task-list-item"&gt;&lt;input type="checkbox" id="" disabled="" class="task-list-item-checkbox" checked=""&gt; &lt;code&gt;doom-tomorrow-day&lt;/code&gt;: &lt;a href="https://github.com/ChrisKempson/Tomorrow-Theme"&gt;Tomorrow&lt;/a&gt;'s light variant (thanks to &lt;a href="https://github.com/emacswatcher"&gt;emacswatcher&lt;/a&gt;)&lt;/li&gt;
&lt;li class="task-list-item"&gt;&lt;input type="checkbox" id="" disabled="" class="task-list-item-checkbox" checked=""&gt; &lt;code&gt;doom-tomorrow-night&lt;/code&gt;: one of the dark variants of &lt;a href="https://github.com/ChrisKempson/Tomorrow-Theme"&gt;Tomorrow&lt;/a&gt; (thanks to &lt;a href="https://github.com/emacswatcher"&gt;emacswatcher&lt;/a&gt;)&lt;/li&gt;
&lt;li class="task-list-item"&gt;&lt;input type="checkbox" id="" disabled="" class="task-list-item-checkbox" checked=""&gt; &lt;code&gt;doom-wilmersdorf&lt;/code&gt;: port of Ian Pan's &lt;a href="https://github.com/ianpan870102/wilmersdorf-emacs-theme"&gt;Wilmersdorf&lt;/a&gt; (thanks to &lt;a href="https://github.com/ema2159"&gt;ema2159&lt;/a&gt;)&lt;/li&gt;
&lt;li class="task-list-item"&gt;&lt;input type="checkbox" id="" disabled="" class="task-list-item-checkbox"&gt; &lt;code&gt;doom-mono-dark&lt;/code&gt; / &lt;code&gt;doom-mono-light&lt;/code&gt;: a minimalistic, monochromatic theme&lt;/li&gt;
&lt;li class="task-list-item"&gt;&lt;input type="checkbox" id="" disabled="" class="task-list-item-checkbox"&gt; &lt;code&gt;doom-tron&lt;/code&gt;: based on Tron Legacy from &lt;a href="http://daylerees.github.io/" rel="nofollow"&gt;daylerees' themes&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-features" class="anchor" aria-hidden="true" href="#features"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Features&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;(doom-themes-visual-bell-config)&lt;/code&gt;: flash the mode-line when the Emacs bell
rings (i.e. an error occurs).&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;(doom-themes-neotree-config)&lt;/code&gt;: a &lt;a href="https://github.com/jaypei/emacs-neotree"&gt;neotree&lt;/a&gt; theme that takes after &lt;a href="http://atom.io" rel="nofollow"&gt;Atom&lt;/a&gt;'s
file drawer, and is simpler than the built in icon theme in neotree
(&lt;a href="/../screenshots/doom-one.png"&gt;screenshot&lt;/a&gt;, &lt;a href="https://github.com/hlissner/emacs-doom-themes/wiki"&gt;more details&lt;/a&gt;).&lt;/p&gt;
&lt;p&gt;This requires &lt;code&gt;all-the-icons&lt;/code&gt;' fonts to be installed: &lt;code&gt;M-x all-the-icons-install-fonts&lt;/code&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;(doom-themes-treemacs-config)&lt;/code&gt;: two &lt;a href="https://github.com/Alexander-Miller/treemacs"&gt;treemacs&lt;/a&gt; icon themes, one that takes after
&lt;a href="http://atom.io" rel="nofollow"&gt;Atom&lt;/a&gt;'s, and a second more colorful implementation (WIP).&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;(doom-themes-org-config)&lt;/code&gt;: corrects and improves some of org-mode's native
fontification.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Re-set &lt;code&gt;org-todo' &amp;amp; &lt;/code&gt;org-headline-done' faces to make them respect
underlying faces (i.e. don't override the :height or :background of
underlying faces).&lt;/li&gt;
&lt;li&gt;Make statistic cookies respect underlying faces.&lt;/li&gt;
&lt;li&gt;Fontify item bullets (make them stand out)&lt;/li&gt;
&lt;li&gt;Fontify item checkboxes (and when they're marked done), like TODOs that
are marked done.&lt;/li&gt;
&lt;li&gt;Fontify dividers/separators (5+ dashes)&lt;/li&gt;
&lt;li&gt;Fontify #hashtags and @at-tags, for personal convenience; see
&lt;code&gt;doom-org-special-tags&lt;/code&gt; to disable this.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Resources that may interest you:&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;To get dimmed sidebars and brighter source buffers (like in the
&lt;a href="https://github.com/hlissner/emacs-doom-themes/tree/screenshots"&gt;screenshots&lt;/a&gt;), see &lt;a href="https://github.com/hlissner/emacs-solaire-mode"&gt;solaire-mode&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;To get line number highlighting for &lt;code&gt;nlinum&lt;/code&gt;, set
&lt;code&gt;nlinum-highlight-current-line&lt;/code&gt; to non-nil (or see &lt;a href="https://melpa.org/#/hlinum" rel="nofollow"&gt;hlinum&lt;/a&gt; for &lt;code&gt;linum&lt;/code&gt;).&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/AnthonyDiGirolamo"&gt;AnthonyDiGirolamo&lt;/a&gt; added doom-one (&lt;a href="https://github.com/AnthonyDiGirolamo/airline-themes/raw/master/screenshots/airline-doom-one-theme.png"&gt;screenshot&lt;/a&gt;) and
doom-molokai (&lt;a href="https://github.com/AnthonyDiGirolamo/airline-themes/raw/master/screenshots/airline-doom-molokai-theme.png"&gt;screenshot&lt;/a&gt;) skins to
&lt;a href="https://github.com/AnthonyDiGirolamo/airline-themes"&gt;airline-themes&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;I'm working on making my modeline more accessible. In the meantime, check
out &lt;a href="https://github.com/hlissner/.emacs.d/blob/master/modules/ui/doom-modeline/config.el"&gt;my mode-line configuration&lt;/a&gt; in my &lt;a href="https://github.com/hlissner/.emacs.d"&gt;emacs.d&lt;/a&gt;.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-install" class="anchor" aria-hidden="true" href="#install"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Install&lt;/h2&gt;
&lt;h3&gt;&lt;a id="user-content-doom-emacs" class="anchor" aria-hidden="true" href="#doom-emacs"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Doom Emacs&lt;/h3&gt;
&lt;p&gt;The built-in &lt;code&gt;:ui doom&lt;/code&gt; module installs &lt;code&gt;doom-themes&lt;/code&gt; for you, and loads
&lt;code&gt;doom-one&lt;/code&gt; by default. You can change the theme by changing the &lt;code&gt;doom-theme&lt;/code&gt;
variable from &lt;code&gt;~/.doom.d/config.el&lt;/code&gt;:&lt;/p&gt;
&lt;div class="highlight highlight-source-emacs-lisp"&gt;&lt;pre&gt;(&lt;span class="pl-k"&gt;setq&lt;/span&gt; doom-theme &lt;span class="pl-c1"&gt;'doom-city-lights&lt;/span&gt;)&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Or by loading it manually:&lt;/p&gt;
&lt;div class="highlight highlight-source-emacs-lisp"&gt;&lt;pre&gt;(&lt;span class="pl-c1"&gt;load-theme&lt;/span&gt; &lt;span class="pl-c1"&gt;'doom-city-lights&lt;/span&gt; &lt;span class="pl-c1"&gt;t&lt;/span&gt;)&lt;/pre&gt;&lt;/div&gt;
&lt;h3&gt;&lt;a id="user-content-manually" class="anchor" aria-hidden="true" href="#manually"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Manually&lt;/h3&gt;
&lt;p&gt;&lt;code&gt;doom-themes&lt;/code&gt; is available on MELPA.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/raxod502/straight.el"&gt;Straight&lt;/a&gt; users can install it with
&lt;code&gt;M-x straight-use-package RET doom-themes&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;And package.el users: &lt;code&gt;M-x package-install RET doom-themes&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Here is a example configuration for &lt;code&gt;doom-theme&lt;/code&gt;:&lt;/p&gt;
&lt;div class="highlight highlight-source-emacs-lisp"&gt;&lt;pre&gt;(&lt;span class="pl-c1"&gt;use-package&lt;/span&gt; doom-themes
  &lt;span class="pl-c1"&gt;:config&lt;/span&gt;
  &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt;; Global settings (defaults)&lt;/span&gt;
  (&lt;span class="pl-k"&gt;setq&lt;/span&gt; doom-themes-enable-bold &lt;span class="pl-c1"&gt;t&lt;/span&gt;    &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt; if nil, bold is universally disabled&lt;/span&gt;
        doom-themes-enable-italic &lt;span class="pl-c1"&gt;t&lt;/span&gt;) &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt; if nil, italics is universally disabled&lt;/span&gt;
  (&lt;span class="pl-c1"&gt;load-theme&lt;/span&gt; &lt;span class="pl-c1"&gt;'doom-one&lt;/span&gt; &lt;span class="pl-c1"&gt;t&lt;/span&gt;)

  &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt;; Enable flashing mode-line on errors&lt;/span&gt;
  (doom-themes-visual-bell-config)
  
  &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt;; Enable custom neotree theme (all-the-icons must be installed!)&lt;/span&gt;
  (doom-themes-neotree-config)
  &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt;; or for treemacs users&lt;/span&gt;
  (&lt;span class="pl-k"&gt;setq&lt;/span&gt; doom-themes-treemacs-theme &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;doom-colors&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;) &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt; use the colorful treemacs theme&lt;/span&gt;
  (doom-themes-treemacs-config)
  
  &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt;; Corrects (and improves) org-mode's native fontification.&lt;/span&gt;
  (doom-themes-org-config))&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;a href="https://github.com/hlissner/emacs-doom-themes/wiki"&gt;The wiki contains details for customizing the neotree theme&lt;/a&gt;.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-common-issues" class="anchor" aria-hidden="true" href="#common-issues"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Common Issues&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;If you use &lt;code&gt;nlinum&lt;/code&gt; or &lt;code&gt;linum&lt;/code&gt; in org-mode, the larger headline sizes in some
themes &lt;a href="https://github.com/hlissner/emacs-doom-themes/issues/86"&gt;could bleed into the line numbers&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Fix this by setting :height explicitly for your line number plugins, after
you've loaded the theme. e.g.&lt;/p&gt;
&lt;div class="highlight highlight-source-emacs-lisp"&gt;&lt;pre&gt;(&lt;span class="pl-k"&gt;let&lt;/span&gt; ((height (&lt;span class="pl-c1"&gt;face-attribute&lt;/span&gt; &lt;span class="pl-c1"&gt;'default&lt;/span&gt; &lt;span class="pl-c1"&gt;:height&lt;/span&gt;)))
  &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt;; for all linum/nlinum users&lt;/span&gt;
  (&lt;span class="pl-c1"&gt;set-face-attribute&lt;/span&gt; &lt;span class="pl-c1"&gt;'linum&lt;/span&gt; &lt;span class="pl-c1"&gt;nil&lt;/span&gt; &lt;span class="pl-c1"&gt;:height&lt;/span&gt; height)
  &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt;; only for &lt;span class="pl-smi"&gt;`linum-relative'&lt;/span&gt; users:&lt;/span&gt;
  (&lt;span class="pl-c1"&gt;set-face-attribute&lt;/span&gt; &lt;span class="pl-c1"&gt;'linum-relative-current-face&lt;/span&gt; &lt;span class="pl-c1"&gt;nil&lt;/span&gt; &lt;span class="pl-c1"&gt;:height&lt;/span&gt; height)
  &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt;; only for &lt;span class="pl-smi"&gt;`nlinum-relative'&lt;/span&gt; users:&lt;/span&gt;
  (&lt;span class="pl-c1"&gt;set-face-attribute&lt;/span&gt; &lt;span class="pl-c1"&gt;'nlinum-relative-current-face&lt;/span&gt; &lt;span class="pl-c1"&gt;nil&lt;/span&gt; &lt;span class="pl-c1"&gt;:height&lt;/span&gt; height))&lt;/pre&gt;&lt;/div&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-contribute" class="anchor" aria-hidden="true" href="#contribute"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Contribute&lt;/h2&gt;
&lt;p&gt;I welcome contributions of any kind, be they pull requests, bug reports or elisp
pointers. Additional theme and plugin support requests are welcome too.&lt;/p&gt;
&lt;/article&gt;&lt;/div&gt;</description><author>hlissner</author><guid isPermaLink="false">https://github.com/hlissner/emacs-doom-themes</guid><pubDate>Tue, 11 Feb 2020 00:01:00 GMT</pubDate></item><item><title>hlissner/doom-emacs #2 in Emacs Lisp, This month</title><link>https://github.com/hlissner/doom-emacs</link><description>&lt;p&gt;&lt;i&gt;An Emacs configuration for the stubborn martian vimmer&lt;/i&gt;&lt;/p&gt;&lt;div id="readme" class="md" data-path="README.md"&gt;&lt;article class="markdown-body entry-content p-5" itemprop="text"&gt;&lt;a href="http://doomemacs.org" rel="nofollow"&gt;
  &lt;img src="https://camo.githubusercontent.com/d38622bbeea8e0a3a1c42e21d2839363d21b4627/68747470733a2f2f696d672e736869656c64732e696f2f6769746875622f7461672f686c6973736e65722f646f6f6d2d656d6163732e7376673f6c6162656c3d72656c6561736526636f6c6f723d6f72616e6765" alt="Made with Doom Emacs" data-canonical-src="https://img.shields.io/github/tag/hlissner/doom-emacs.svg?label=release&amp;amp;color=orange" style="max-width:100%;"&gt;
&lt;/a&gt;
&lt;a href="https://emacs.org" rel="nofollow"&gt;
  &lt;img src="https://camo.githubusercontent.com/145199dd89d8ed47968846fe8dcdde64b838ffab/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f4d6164655f666f722d456d6163735f32362e312b2d626c756576696f6c65742e737667" alt="Made for Emacs 26.1+" data-canonical-src="https://img.shields.io/badge/Made_for-Emacs_26.1+-blueviolet.svg" style="max-width:100%;"&gt;
&lt;/a&gt;
&lt;a href="https://github.com/hlissner/doom-emacs/actions"&gt;
  &lt;img src="https://github.com/hlissner/doom-emacs/workflows/CI/badge.svg" alt="Build status: develop" style="max-width:100%;"&gt;
&lt;/a&gt;
&lt;a href="https://discord.gg/qvGgnVx" rel="nofollow"&gt;
  &lt;img src="https://camo.githubusercontent.com/48087b2da5b43d9130b73e6e8ad3e7b42caa3330/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f446973636f72642d626c75652e7376673f6c6f676f3d646973636f7264266c6162656c3d6a6f696e" alt="Join our discord server" align="right" data-canonical-src="https://img.shields.io/badge/Discord-blue.svg?logo=discord&amp;amp;label=join" style="max-width:100%;"&gt;
&lt;/a&gt;
&lt;br&gt;&lt;br&gt;
&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="https://raw.githubusercontent.com/hlissner/doom-emacs/screenshots/main.png"&gt;&lt;img src="https://raw.githubusercontent.com/hlissner/doom-emacs/screenshots/main.png" alt="Doom Emacs Screenshot" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p align="center"&gt;
  &lt;b&gt;&lt;a href="/../../tree/screenshots"&gt;Screenshots&lt;/a&gt;&lt;/b&gt;
  |
  &lt;b&gt;&lt;a href="docs/getting_started.org"&gt;Get started&lt;/a&gt;&lt;/b&gt;
  |
  &lt;b&gt;&lt;a href="docs/contributing.org"&gt;Contribute&lt;/a&gt;&lt;/b&gt;
  |
  &lt;b&gt;&lt;a href="docs/index.org"&gt;Documentation&lt;/a&gt;&lt;/b&gt;
  |
  &lt;b&gt;&lt;a href="docs/faq.org"&gt;FAQ&lt;/a&gt;&lt;/b&gt;
&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;&lt;strong&gt;Quick start&lt;/strong&gt;&lt;/p&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt;git clone https://github.com/hlissner/doom-emacs &lt;span class="pl-k"&gt;~&lt;/span&gt;/.emacs.d
&lt;span class="pl-k"&gt;~&lt;/span&gt;/.emacs.d/bin/doom install&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;More details, including dependencies and how to install Emacs, can be found &lt;a href="docs/getting_started.org#install"&gt;in
the documentation&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Table of Contents&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="#what-is-doom-emacs"&gt;What is Doom Emacs&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="#dooms-mantras"&gt;Doom's mantras&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#features"&gt;Features&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="#getting-help"&gt;Getting Help&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="#community"&gt;Community&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#troubleshooting"&gt;Troubleshooting&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#contributing"&gt;Contributing&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h1&gt;&lt;a id="user-content-what-is-doom-emacs" class="anchor" aria-hidden="true" href="#what-is-doom-emacs"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;What is Doom Emacs&lt;/h1&gt;
&lt;a href="http://ultravioletbat.deviantart.com/art/Yay-Evil-111710573" rel="nofollow"&gt;
  &lt;img src="https://github.com/hlissner/doom-emacs/raw/screenshots/cacochan.png" align="right" style="max-width:100%;"&gt;
&lt;/a&gt;
&lt;p&gt;It is a story as old as time. A stubborn, shell-dwelling, and melodramatic
vimmer -- envious of the features of modern text editors -- spirals into despair
before succumbing to the &lt;a href="https://github.com/emacs-evil/evil"&gt;dark side&lt;/a&gt;. This is his config.&lt;/p&gt;
&lt;p&gt;Doom is a configuration framework for &lt;a href="https://www.gnu.org/software/emacs/" rel="nofollow"&gt;GNU
Emacs&lt;/a&gt; tailored for Emacs bankruptcy
veterans who want less framework in their frameworks and the performance of a
hand rolled config (or better). It can be a foundation for your own config or a
resource for Emacs enthusiasts to learn more about our favorite OS.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-dooms-mantras" class="anchor" aria-hidden="true" href="#dooms-mantras"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Doom's mantras&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Gotta go fast.&lt;/strong&gt; Startup and run-time performance are priorities. Doom goes
beyond lazy loading packages by modifying them to be snappier and load lazier!&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Close to metal.&lt;/strong&gt; There's less between you and vanilla Emacs by design.
There's less to grok, on top of Emacs.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Readability counts.&lt;/strong&gt; Internals ought to be written as if reading them were
part of the user experience, and it is! Modules should be syntactically sweet.
Backend logic should be functional (as much as elisp permits), abstraction
light and (hopefully) documented.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Opinionated, but not stubborn.&lt;/strong&gt; Doom is a bundle of reasonable defaults and
curated opinions, but all of it should be optional. Use as little or as much
of it as you like.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Your system, your rules.&lt;/strong&gt; There are more ways to set up your development
environment than there are dislikes on Youtube Rewind '18, so Doom leaves it
to you. Doom will not &lt;em&gt;automatically&lt;/em&gt; install system dependencies (and will
coerce its plugins not to do so either). Use &lt;code&gt;doom doctor&lt;/code&gt; to figure out
what's missing.&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-features" class="anchor" aria-hidden="true" href="#features"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Features&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Minimalistic good looks inspired by modern editors.&lt;/li&gt;
&lt;li&gt;A modular architecture for a more organized Emacs configuration.&lt;/li&gt;
&lt;li&gt;A custom elisp library to help simplify your config.&lt;/li&gt;
&lt;li&gt;(Optional) Vim-emulation powered by &lt;a href="https://github.com/emacs-evil/evil"&gt;evil-mode&lt;/a&gt;, including
ports of popular vim plugins and functionality.&lt;/li&gt;
&lt;li&gt;A declarative &lt;a href="core/autoload/packages.el"&gt;package management system&lt;/a&gt; (powered by
&lt;a href="https://github.com/raxod502/straight.el"&gt;straight.el&lt;/a&gt;) with a command line interface. Install packages
from anywhere, not just (M)ELPA.&lt;/li&gt;
&lt;li&gt;A curated set of sane defaults for all packages, all (major) OSes, and Emacs
itself.&lt;/li&gt;
&lt;li&gt;Support for &lt;em&gt;many&lt;/em&gt; programming languages. Too many to list. Includes syntax
highlighting, linters/checker integration, inline code evaluation, code
completion (where possible), REPLs, documentation lookups, snippets, and more!&lt;/li&gt;
&lt;li&gt;Support for &lt;em&gt;many&lt;/em&gt; tools, like docker, pass, ansible, terraform, and more.&lt;/li&gt;
&lt;li&gt;A Spacemacs-esque &lt;a href="modules/config/default/+evil-bindings.el"&gt;keybinding scheme&lt;/a&gt;, centered around leader
and localleader prefix keys (&lt;kbd&gt;SPC&lt;/kbd&gt; and &lt;kbd&gt;SPC&lt;/kbd&gt;&lt;kbd&gt;m&lt;/kbd&gt;, by
default).&lt;/li&gt;
&lt;li&gt;A rule-based &lt;a href="modules/ui/popup/README.org"&gt;popup management system&lt;/a&gt; that dictates how
temporary or disposable buffers are displayed (and disposed of).&lt;/li&gt;
&lt;li&gt;Automatic indentation detection and &lt;a href="http://editorconfig.org/" rel="nofollow"&gt;editorconfig&lt;/a&gt;
integration. Let someone else argue about tabs vs &lt;strong&gt;_*&lt;strong&gt;spaces&lt;/strong&gt;*_&lt;/strong&gt;.&lt;/li&gt;
&lt;li&gt;Project-management tools and framework-specific minor modes with their own
snippets libraries.&lt;/li&gt;
&lt;li&gt;Project search (and replace) utilities, powered by &lt;a href="https://github.com/BurntSushi/ripgrep"&gt;ripgrep&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;Isolated and persistent workspaces (also substitutes for vim tabs).&lt;/li&gt;
&lt;li&gt;An envvar file generator that captures a snapshot of your shell environment
for Doom to load at startup. No more struggling to get Emacs to inherit your
&lt;code&gt;PATH&lt;/code&gt;, among other things.&lt;/li&gt;
&lt;/ul&gt;
&lt;h1&gt;&lt;a id="user-content-getting-help" class="anchor" aria-hidden="true" href="#getting-help"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Getting Help&lt;/h1&gt;
&lt;h2&gt;&lt;a id="user-content-community" class="anchor" aria-hidden="true" href="#community"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Community&lt;/h2&gt;
&lt;p&gt;We have &lt;a href="https://discord.gg/qvGgnVx" rel="nofollow"&gt;a Discord server&lt;/a&gt;! Hop on and say hi!&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-troubleshooting" class="anchor" aria-hidden="true" href="#troubleshooting"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Troubleshooting&lt;/h2&gt;
&lt;p&gt;Encountered strange behavior or an error? Here are some things to try before you
shoot off that bug report:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Run &lt;code&gt;bin/doom refresh&lt;/code&gt;. This ensures Doom is properly set up and its autoloads
files are up-to-date.&lt;/li&gt;
&lt;li&gt;If you have byte-compiled your config (with &lt;code&gt;bin/doom compile&lt;/code&gt;), see if
&lt;code&gt;bin/doom clean&lt;/code&gt; makes the issue go away. Never debug issues with a
byte-compiled config, it will make your job harder.&lt;/li&gt;
&lt;li&gt;Run &lt;code&gt;bin/doom doctor&lt;/code&gt; to detect common issues in your development environment.&lt;/li&gt;
&lt;li&gt;Search Doom's issue tracker for mention of any error messages you've received.&lt;/li&gt;
&lt;li&gt;&lt;a href="docs/faq.org"&gt;Visit our FAQ&lt;/a&gt; to see if your issue is listed.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;If all else fails, &lt;a href="https://github.com/hlissner/doom-emacs/issues/new"&gt;file that bug report&lt;/a&gt;! Please include the
behavior you've observed, the behavior you expected, and any error messages or
warnings logged to the *Messages* buffer (can be opened with &lt;kbd&gt;SPC h
e&lt;/kbd&gt; or &lt;code&gt;M-x view-echo-area-messages&lt;/code&gt;).&lt;/p&gt;
&lt;p&gt;It's a great help if you included a backtrace with errors, i.e. &lt;code&gt;M-x toggle-debug-on-error&lt;/code&gt; then recreating the error(s).&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-contributing" class="anchor" aria-hidden="true" href="#contributing"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Contributing&lt;/h2&gt;
&lt;p&gt;Doom (and my Emacs work in general) is a labor of love and incurable madness,
done on my spare time. If you'd like to support my work, there are many things
you can do to help; I welcome any contribution!&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;I love pull requests and bug reports. Check out the &lt;a href="docs/contributing.org"&gt;Contributing
Guidelines&lt;/a&gt; to find out how you can help out.&lt;/li&gt;
&lt;li&gt;I welcome Elisp pointers! Don't hesitate to &lt;a href="https://github.com/hlissner/doom-emacs/issues/new"&gt;tell me my Elisp-fu
sucks&lt;/a&gt; (but please tell me why).&lt;/li&gt;
&lt;li&gt;Hop on &lt;a href="https://discord.gg/qvGgnVx" rel="nofollow"&gt;our Discord server&lt;/a&gt; and say hi! Help others out, hang out
or talk to me about Emacs, or gamedev, or programming, machine learning,
physics, pixel art, anime, gaming -- anything you like. Nourish this lonely
soul!&lt;/li&gt;
&lt;li&gt;If you'd like to support my work financially, consider buying me a drink
through &lt;a href="https://liberapay.com/hlissner/donate" rel="nofollow"&gt;liberapay&lt;/a&gt; or &lt;a href="https://paypal.me/henriklissner/10" rel="nofollow"&gt;paypal&lt;/a&gt;. Donations are a
great help. My work here contends with studies, ventures in indie gamedev, and
my freelance work.&lt;/li&gt;
&lt;/ul&gt;
&lt;/article&gt;&lt;/div&gt;</description><author>hlissner</author><guid isPermaLink="false">https://github.com/hlissner/doom-emacs</guid><pubDate>Tue, 11 Feb 2020 00:02:00 GMT</pubDate></item><item><title>bbatsov/projectile #3 in Emacs Lisp, This month</title><link>https://github.com/bbatsov/projectile</link><description>&lt;p&gt;&lt;i&gt;Project Interaction Library for Emacs&lt;/i&gt;&lt;/p&gt;&lt;div id="readme" class="md" data-path="README.md"&gt;&lt;article class="markdown-body entry-content p-5" itemprop="text"&gt;&lt;p&gt;&lt;a href="http://www.gnu.org/licenses/gpl-3.0.txt" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/1ba3411d21f0105e0df26c7e29aa214578d377b5/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f6c6963656e73652d47504c5f332d677265656e2e737667" alt="License GPL 3" data-canonical-src="https://img.shields.io/badge/license-GPL_3-green.svg" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="http://melpa.org/#/projectile" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/0e90708b9c315c9786d078cbf46c05fc3133924f/687474703a2f2f6d656c70612e6f72672f7061636b616765732f70726f6a656374696c652d62616467652e737667" alt="MELPA" data-canonical-src="http://melpa.org/packages/projectile-badge.svg" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="http://stable.melpa.org/#/projectile" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/828b1b4081f34ea857ec4119962e616e9a9d723b/687474703a2f2f737461626c652e6d656c70612e6f72672f7061636b616765732f70726f6a656374696c652d62616467652e737667" alt="MELPA Stable" data-canonical-src="http://stable.melpa.org/packages/projectile-badge.svg" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://travis-ci.org/bbatsov/projectile" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/c8892d7c0feb3d33d66ea003f96e4b0ac52bf9f6/68747470733a2f2f7472617669732d63692e6f72672f62626174736f762f70726f6a656374696c652e706e673f6272616e63683d6d6173746572" alt="Build Status" data-canonical-src="https://travis-ci.org/bbatsov/projectile.png?branch=master" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://www.patreon.com/bbatsov" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/451cb702b2e60e29c1a84aa24a17a1a8d313639e/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f70617472656f6e2d646f6e6174652d6f72616e67652e737667" alt="Patreon" data-canonical-src="https://img.shields.io/badge/patreon-donate-orange.svg" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-synopsis" class="anchor" aria-hidden="true" href="#synopsis"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Synopsis&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;Projectile&lt;/strong&gt; is a project interaction library for Emacs. Its goal is to
provide a nice set of features operating on a project level without
introducing external dependencies (when feasible). For instance -
finding project files has a portable implementation written in pure
Emacs Lisp without the use of GNU &lt;code&gt;find&lt;/code&gt; (but for performance sake an
indexing mechanism backed by external commands exists as well).&lt;/p&gt;
&lt;p&gt;Projectile tries to be practical - portability is great, but if some
external tools could speed up some task substantially and the tools
are available, Projectile will leverage them.&lt;/p&gt;
&lt;p&gt;This library provides easy project management and navigation. The
concept of a project is pretty basic - just a folder containing
special file. Currently &lt;code&gt;git&lt;/code&gt;, &lt;code&gt;mercurial&lt;/code&gt;, &lt;code&gt;darcs&lt;/code&gt; and &lt;code&gt;bazaar&lt;/code&gt; repos
are considered projects by default. So are &lt;code&gt;lein&lt;/code&gt;, &lt;code&gt;maven&lt;/code&gt;, &lt;code&gt;sbt&lt;/code&gt;,
&lt;code&gt;scons&lt;/code&gt;, &lt;code&gt;rebar&lt;/code&gt; and &lt;code&gt;bundler&lt;/code&gt; projects. If you want to mark a folder
manually as a project just create an empty &lt;code&gt;.projectile&lt;/code&gt; file in
it. Some of Projectile's features:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;jump to a file in project&lt;/li&gt;
&lt;li&gt;jump to files at point in project&lt;/li&gt;
&lt;li&gt;jump to a directory in project&lt;/li&gt;
&lt;li&gt;jump to a file in a directory&lt;/li&gt;
&lt;li&gt;jump to a project buffer&lt;/li&gt;
&lt;li&gt;jump to a test in project&lt;/li&gt;
&lt;li&gt;toggle between files with same names but different extensions (e.g. &lt;code&gt;.h&lt;/code&gt; &amp;lt;-&amp;gt; &lt;code&gt;.c/.cpp&lt;/code&gt;, &lt;code&gt;Gemfile&lt;/code&gt; &amp;lt;-&amp;gt; &lt;code&gt;Gemfile.lock&lt;/code&gt;)&lt;/li&gt;
&lt;li&gt;toggle between code and its test (e.g. &lt;code&gt;main.service.js&lt;/code&gt; &amp;lt;-&amp;gt; &lt;code&gt;main.service.spec.js&lt;/code&gt;)&lt;/li&gt;
&lt;li&gt;jump to recently visited files in the project&lt;/li&gt;
&lt;li&gt;switch between projects you have worked on&lt;/li&gt;
&lt;li&gt;kill all project buffers&lt;/li&gt;
&lt;li&gt;replace in project&lt;/li&gt;
&lt;li&gt;multi-occur in project buffers&lt;/li&gt;
&lt;li&gt;grep in project&lt;/li&gt;
&lt;li&gt;regenerate project etags or gtags (requires &lt;a href="https://github.com/leoliu/ggtags"&gt;ggtags&lt;/a&gt;).&lt;/li&gt;
&lt;li&gt;visit project in dired&lt;/li&gt;
&lt;li&gt;run make in a project with a single key chord&lt;/li&gt;
&lt;li&gt;check for dirty repositories&lt;/li&gt;
&lt;li&gt;toggle read-only mode for the entire project&lt;/li&gt;
&lt;li&gt;support for multiple minibuffer completion/selection libraries (e.g. &lt;code&gt;ido&lt;/code&gt;, &lt;code&gt;ivy&lt;/code&gt; and &lt;code&gt;helm&lt;/code&gt;)&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Here's a glimpse of Projectile in action (using &lt;code&gt;ivy&lt;/code&gt;):&lt;/p&gt;
&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="doc/screenshots/projectile-demo.gif"&gt;&lt;img src="doc/screenshots/projectile-demo.gif" alt="Projectile Screenshot" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;In this short demo you can see:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;finding files in a project&lt;/li&gt;
&lt;li&gt;switching between implementation and test&lt;/li&gt;
&lt;li&gt;switching between projects&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;You can support my work on Projectile via
&lt;a href="https://www.paypal.me/bbatsov" rel="nofollow"&gt;PayPal&lt;/a&gt;,
&lt;a href="https://www.patreon.com/bbatsov" rel="nofollow"&gt;Patreon&lt;/a&gt; and
&lt;a href="https://github.com/sponsors/bbatsov"&gt;GitHub Sponsors&lt;/a&gt;.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-quickstart" class="anchor" aria-hidden="true" href="#quickstart"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Quickstart&lt;/h2&gt;
&lt;p&gt;The instructions that follow are meant to get you from zero to a running Projectile setup
in a minute.  Visit the
&lt;a href="https://docs.projectile.mx" rel="nofollow"&gt;user manual&lt;/a&gt; for (way) more
details.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-installation" class="anchor" aria-hidden="true" href="#installation"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Installation&lt;/h3&gt;
&lt;p&gt;&lt;code&gt;package.el&lt;/code&gt; is the built-in package manager in Emacs.&lt;/p&gt;
&lt;p&gt;Projectile is available on the two major &lt;code&gt;package.el&lt;/code&gt; community
maintained repos -
&lt;a href="http://stable.melpa.org" rel="nofollow"&gt;MELPA Stable&lt;/a&gt;
and &lt;a href="http://melpa.org" rel="nofollow"&gt;MELPA&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;You can install Projectile with the following command:&lt;/p&gt;
&lt;p&gt;&lt;kbd&gt;M-x&lt;/kbd&gt; &lt;code&gt;package-install&lt;/code&gt; &lt;kbd&gt;[RET]&lt;/kbd&gt; &lt;code&gt;projectile&lt;/code&gt; &lt;kbd&gt;[RET]&lt;/kbd&gt;&lt;/p&gt;
&lt;p&gt;Alternatively, users of Debian 9 or later or Ubuntu 16.04 or later may
simply &lt;code&gt;apt-get install elpa-projectile&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;Finally add this to your Emacs config:&lt;/p&gt;
&lt;div class="highlight highlight-source-emacs-lisp"&gt;&lt;pre&gt;(projectile-mode &lt;span class="pl-c1"&gt;+1&lt;/span&gt;)
(&lt;span class="pl-c1"&gt;define-key&lt;/span&gt; projectile-mode-map (&lt;span class="pl-c1"&gt;kbd&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;s-p&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;) &lt;span class="pl-c1"&gt;'projectile-command-map&lt;/span&gt;)
(&lt;span class="pl-c1"&gt;define-key&lt;/span&gt; projectile-mode-map (&lt;span class="pl-c1"&gt;kbd&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;C-c p&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;) &lt;span class="pl-c1"&gt;'projectile-command-map&lt;/span&gt;)&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Those keymap prefixes are just a suggestion. Feel free to put there whatever works best for you.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-basic-usage" class="anchor" aria-hidden="true" href="#basic-usage"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Basic Usage&lt;/h3&gt;
&lt;p&gt;Enable &lt;code&gt;projectile-mode&lt;/code&gt;, open a file in one of your projects and type a command such as &lt;kbd&gt;C-c p f&lt;/kbd&gt;.&lt;/p&gt;
&lt;p&gt;See the user manual for more details.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-caveats" class="anchor" aria-hidden="true" href="#caveats"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Caveats&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Some operations like search (grep) depend (presently) on external
utilities such as &lt;code&gt;find&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;Using Projectile over TRAMP might be slow in certain cases.&lt;/li&gt;
&lt;li&gt;Some commands might misbehave on complex project setups (e.g. a git project with submodules)&lt;/li&gt;
&lt;li&gt;Projectile was mostly tested on Unix OS-es (e.g. GNU/Linux and macOS), so some functionality might not work well on Windows&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-known-issues" class="anchor" aria-hidden="true" href="#known-issues"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Known issues&lt;/h2&gt;
&lt;p&gt;Check out the project's
&lt;a href="https://github.com/bbatsov/projectile/issues?sort=created&amp;amp;direction=desc&amp;amp;state=open"&gt;issue list&lt;/a&gt;
a list of unresolved issues. By the way - feel free to fix any of them
and sent me a pull request. :-)&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-contributors" class="anchor" aria-hidden="true" href="#contributors"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Contributors&lt;/h2&gt;
&lt;p&gt;Here's a &lt;a href="https://github.com/bbatsov/projectile/contributors"&gt;list&lt;/a&gt; of all the people who have contributed to the
development of Projectile.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-changelog" class="anchor" aria-hidden="true" href="#changelog"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Changelog&lt;/h2&gt;
&lt;p&gt;A fairly extensive changelog is available &lt;a href="CHANGELOG.md"&gt;here&lt;/a&gt;.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-license" class="anchor" aria-hidden="true" href="#license"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;License&lt;/h2&gt;
&lt;p&gt;Copyright © 2011-2020 Bozhidar Batsov and
&lt;a href="https://github.com/bbatsov/projectile/contributors"&gt;contributors&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Distributed under the GNU General Public License, version 3&lt;/p&gt;
&lt;/article&gt;&lt;/div&gt;</description><author>bbatsov</author><guid isPermaLink="false">https://github.com/bbatsov/projectile</guid><pubDate>Tue, 11 Feb 2020 00:03:00 GMT</pubDate></item><item><title>magit/magit #4 in Emacs Lisp, This month</title><link>https://github.com/magit/magit</link><description>&lt;p&gt;&lt;i&gt;It's Magit! A Git porcelain inside Emacs.&lt;/i&gt;&lt;/p&gt;&lt;div id="readme" class="md" data-path="README.md"&gt;&lt;article class="markdown-body entry-content p-5" itemprop="text"&gt;&lt;div align="center"&gt;&lt;a target="_blank" rel="noopener noreferrer" href="https://camo.githubusercontent.com/bddaa4a80ffc50dc7a2900ca62a97039a66a35fc/68747470733a2f2f6d616769742e76632f6173736574732f6d616769742d3136387832303070782e706e67"&gt;&lt;img src="https://camo.githubusercontent.com/bddaa4a80ffc50dc7a2900ca62a97039a66a35fc/68747470733a2f2f6d616769742e76632f6173736574732f6d616769742d3136387832303070782e706e67" data-canonical-src="https://magit.vc/assets/magit-168x200px.png" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/div&gt;
&lt;h2 align="center"&gt;&lt;a id="user-content-a-git-porcelain-inside-emacs" class="anchor" aria-hidden="true" href="#a-git-porcelain-inside-emacs"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;A Git Porcelain inside Emacs&lt;/h2&gt;
&lt;p align="center"&gt;
  &lt;a href="https://magit.vc" rel="nofollow"&gt;&lt;b&gt;homepage&lt;/b&gt;&lt;/a&gt; |
  &lt;a href="https://magit.vc/manual" rel="nofollow"&gt;&lt;b&gt;manual&lt;/b&gt;&lt;/a&gt; |
  &lt;a href="https://magit.vc/manual/magit/FAQ.html" rel="nofollow"&gt;&lt;b&gt;faq&lt;/b&gt;&lt;/a&gt; |
  &lt;a href="https://github.com/magit/magit/wiki"&gt;&lt;b&gt;wiki&lt;/b&gt;&lt;/a&gt; |
  &lt;a href="https://groups.google.com/forum/?fromgroups#!forum/magit" rel="nofollow"&gt;&lt;b&gt;mailing list&lt;/b&gt;&lt;/a&gt; |
  &lt;a href="https://emacs.stackexchange.com/questions/tagged/magit" rel="nofollow"&gt;&lt;b&gt;forum&lt;/b&gt;&lt;/a&gt; |
  &lt;a href="https://twitter.com/magit_emacs" rel="nofollow"&gt;&lt;b&gt;news&lt;/b&gt;&lt;/a&gt;
&lt;/p&gt;
&lt;hr&gt;
&lt;p align="justify"&gt;
  Magit is an interface to the version control system
  &lt;a href="https://git-scm.com" rel="nofollow"&gt;Git&lt;/a&gt;, implemented as an
  &lt;a href="https://www.gnu.org/software/emacs" rel="nofollow"&gt;Emacs&lt;/a&gt; package.
  Magit aspires to be a complete Git porcelain.  While we cannot
  (yet) claim that Magit wraps and improves upon each and every Git
  command, it is complete enough to allow even experienced Git users
  to perform almost all of their daily version control tasks directly
  from within Emacs.  While many fine Git clients exist, only Magit
  and Git itself deserve to be called porcelains.
&lt;/p&gt;
&lt;hr&gt;
&lt;div align="center"&gt;
  Keeping its users &lt;a href="https://magit.vc/quotes" rel="nofollow"&gt;this excited&lt;/a&gt; is
  &lt;a href="https://magit.vc/stats/authors.html#cumulated_added_lines_of_code_per_author" rel="nofollow"&gt;
    a lot of work
  &lt;/a&gt;.
  If Magit makes you &lt;br&gt; more productive too,
  then &lt;b&gt;please consider making a donation&lt;/b&gt;.
&lt;/div&gt;
&lt;div align="center"&gt;
  &lt;em&gt;Thank you! — Jonas Bernoulli&lt;/em&gt;
&lt;/div&gt;
&lt;br&gt;
&lt;div align="center"&gt;
  &lt;a href="https://github.com/sponsors/tarsius"&gt;
    &lt;img title="Donate using Github Sponsors" alt="Donate using Github Sponsors" src="https://camo.githubusercontent.com/149a9a6ef2aacd3393c62471339a4fefd9798b30/68747470733a2f2f6d616769742e76632f6173736574732f6769746875622d73706f6e736f72732d353070782e706e67" data-canonical-src="https://magit.vc/assets/github-sponsors-50px.png" style="max-width:100%;"&gt;&lt;/a&gt;
    
  &lt;a href="https://magit.vc/donate/#iban" rel="nofollow"&gt;
     &lt;img title="Donate using IBAN" alt="Donate using IBAN" src="https://camo.githubusercontent.com/b92dd41b2b92a121bc8dc3f72c8120927bd5da8b/68747470733a2f2f6d616769742e76632f6173736574732f6962616e2d353070782e706e67" data-canonical-src="https://magit.vc/assets/iban-50px.png" style="max-width:100%;"&gt;&lt;/a&gt;
    
  &lt;a href="https://magit.vc/donate/#zelle" rel="nofollow"&gt;
     &lt;img title="Donate using Zelle (USA bank transfer)" alt="Donate using Zelle (USA bank transfer)" src="https://camo.githubusercontent.com/c99ee781d095dc1864b0d24e908d98342f1a22dc/68747470733a2f2f6d616769742e76632f6173736574732f7a656c6c652d353070782e706e67" data-canonical-src="https://magit.vc/assets/zelle-50px.png" style="max-width:100%;"&gt;&lt;/a&gt;
    
  &lt;a href="https://www.paypal.me/JonasBernoulli/20" rel="nofollow"&gt;
    &lt;img title="Donate using PayPal" alt="Donate using PayPal" src="https://camo.githubusercontent.com/8d272c225e13cd2be472b15c4819fdbb2759d705/68747470733a2f2f6d616769742e76632f6173736574732f70617970616c2e706e67" data-canonical-src="https://magit.vc/assets/paypal.png" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;/div&gt;
&lt;br&gt;
&lt;div align="center"&gt;
  Some alternative donation methods are &lt;a href="https://magit.vc/donate" rel="nofollow"&gt;available&lt;/a&gt;.
&lt;/div&gt;
&lt;hr&gt;
&lt;h1&gt;&lt;a id="user-content-getting-started" class="anchor" aria-hidden="true" href="#getting-started"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Getting Started&lt;/h1&gt;
&lt;p&gt;If you are new to Magit, then either one of the following two
articles should help understanding how it differs from other Git
clients.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="https://emacsair.me/2017/09/01/magit-walk-through" rel="nofollow"&gt;Visual Magit walk-through&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;If you are completely new to Magit, then this article is a good
visual introduction.&lt;/p&gt;
&lt;p&gt;Almost everything that you see in Magit can be acted on by pressing
some key, but that's not obvious from just seeing how Magit looks.
The screenshots and accompanying text of this article explain how to
perform a variety of actions on Magit's output.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="https://emacsair.me/2017/09/01/the-magical-git-interface" rel="nofollow"&gt;Magit, the magical Git interface&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Magit differs significantly from other Git interfaces, and its
advantages are not immediately obvious simply from looking at a few
screenshots as presented in the preceding article.&lt;/p&gt;
&lt;p&gt;This article discusses Magit's properties in somewhat more abstract
terms.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h1&gt;&lt;a id="user-content-support" class="anchor" aria-hidden="true" href="#support"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Support&lt;/h1&gt;
&lt;p&gt;When something doesn't work as expected then please first see the
&lt;a href="https://magit.vc/manual/magit/FAQ.html" rel="nofollow"&gt;FAQ&lt;/a&gt;.  Then also try the list of &lt;a href="https://github.com/magit/magit/issues"&gt;open issues&lt;/a&gt; and use
the search box at the top of that page to find older related issues.
You should also consult the &lt;a href="https://magit.vc/manual" rel="nofollow"&gt;manual&lt;/a&gt; and ask a general-purpose
search engine.&lt;/p&gt;
&lt;p&gt;If that doesn't answer your question, then ask for help on the
&lt;strong&gt;&lt;a href="https://emacs.stackexchange.com/questions/tagged/magit" rel="nofollow"&gt;Emacs Stackexchange site&lt;/a&gt;&lt;/strong&gt; or the &lt;a href="https://groups.google.com/forum/?fromgroups#!forum/magit" rel="nofollow"&gt;mailing list&lt;/a&gt;.
We only use the GitHub issue tracker for feature requests and bug
reports, so please don't ask for help there.&lt;/p&gt;
&lt;h1&gt;&lt;a id="user-content-contributing" class="anchor" aria-hidden="true" href="#contributing"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Contributing&lt;/h1&gt;
&lt;p&gt;To report bugs and suggest new feature use the
&lt;a href="https://github.com/magit/magit/issues"&gt;issue tracker&lt;/a&gt;.  If you have some code which you would like
to be merged, then open a &lt;a href="https://github.com/magit/magit/pulls"&gt;pull request&lt;/a&gt;. Please also see
&lt;a href="https://github.com/magit/magit/blob/master/.github/CONTRIBUTING.md"&gt;CONTRIBUTING.md&lt;/a&gt;.&lt;/p&gt;
&lt;h1&gt;&lt;a id="user-content-acknowledgments" class="anchor" aria-hidden="true" href="#acknowledgments"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Acknowledgments&lt;/h1&gt;
&lt;p&gt;Magit was started by &lt;a href="https://github.com/mvollmer"&gt;Marius Vollmer&lt;/a&gt;, and is now maintained
by &lt;a href="https://emacsair.me" rel="nofollow"&gt;Jonas Bernoulli&lt;/a&gt;, &lt;a href="https://github.com/kyleam"&gt;Kyle Meyer&lt;/a&gt;, and
&lt;a href="https://github.com/npostavs"&gt;Noam Postavsky&lt;/a&gt;.  Other former maintainers are
&lt;a href="http://dudebout.com" rel="nofollow"&gt;Nicolas Dudebout&lt;/a&gt;, &lt;a href="https://github.com/pjweisberg"&gt;Peter J. Weisberg&lt;/a&gt;,
&lt;a href="https://github.com/philjackson"&gt;Phil Jackson&lt;/a&gt;, &lt;a href="https://github.com/vanicat"&gt;Rémi Vanicat&lt;/a&gt;, and &lt;a href="http://www.hodique.info" rel="nofollow"&gt;Yann Hodique&lt;/a&gt;.
Many more people have &lt;a href="https://magit.vc/stats/authors.html" rel="nofollow"&gt;contributed code&lt;/a&gt; and suggested
features.&lt;/p&gt;
&lt;p&gt;Over the years a lot of people supported development financially,
including the &lt;a href="https://github.com/magit/magit/blob/master/Documentation/BACKERS.md"&gt;1987 backers&lt;/a&gt; of the 2017 crowdfunding
campaign.&lt;/p&gt;
&lt;p&gt;Thanks to all of you, may (the history of) the source be with you!&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;&lt;a href="https://xkcd.com/859" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/1e16245d2267cba3325db3c5bb1ffe2de83e6a4f/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f2532382d2532302532302532302d7265642e737667" alt="Paren Xkcb" data-canonical-src="https://img.shields.io/badge/%28-%20%20%20-red.svg" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="http://www.gnu.org/licenses/gpl-3.0.txt" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/2213171f5fa7ce05c74b04b8df2a686d83a89123/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f6c6963656e73652d47504c5f76332d677265656e2e737667" alt="GPL v3" data-canonical-src="https://img.shields.io/badge/license-GPL_v3-green.svg" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://travis-ci.org/magit/magit" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/2c8a7ed255c7e504d2bd01e19bddbc4a7eba78b7/68747470733a2f2f7472617669732d63692e6f72672f6d616769742f6d616769742e7376673f6272616e63683d6d6173746572" alt="Build Status" data-canonical-src="https://travis-ci.org/magit/magit.svg?branch=master" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://melpa.org/#/magit" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/d1d4664f50bb53a1eeeb9956d299a21769b6fa15/68747470733a2f2f6d656c70612e6f72672f7061636b616765732f6d616769742d62616467652e737667" alt="Melpa" data-canonical-src="https://melpa.org/packages/magit-badge.svg" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://stable.melpa.org/#/magit" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/64a094b6d437b55511a0131fa53f02fe3b29f472/68747470733a2f2f737461626c652e6d656c70612e6f72672f7061636b616765732f6d616769742d62616467652e737667" alt="Melpa Stable" data-canonical-src="https://stable.melpa.org/packages/magit-badge.svg" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://xkcd.com/1597" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/08fde55330a7da6aba5b5eb03ce0c2c12d8eebee/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f786b63642d6769742d6f72616e67652e737667" alt="Git Xkcd" data-canonical-src="https://img.shields.io/badge/xkcd-git-orange.svg" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://magit.vc/manual/magit" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/e925ce7917bcabfba088c0dc5e93d9423ecca6d3/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f656965726c6567656e64652d576f6c6c6d696c63687361752d677265656e2e737667" alt="Eierlegende Wollmilchsau" data-canonical-src="https://img.shields.io/badge/eierlegende-Wollmilchsau-green.svg" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://magit.vc/stats/authors.html#commits_per_author" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/37bb8d3c39bf72ad9d89662433a9a41d5b95d6f7/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f73776973732d6d6164652d7265642e7376673f636f6c6f72413d45313141323726636f6c6f72423d353535353535" alt="Swiss Made" data-canonical-src="https://img.shields.io/badge/swiss-made-red.svg?colorA=E11A27&amp;amp;colorB=555555" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://en.wikipedia.org/wiki/Browser_wars" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/7ab3143e0944c3109cd717d7dd8e111507d89b15/68747470733a2f2f6d616769742e76632f6173736574732f6e657473636170652d323070782e706e67" alt="Netscape" data-canonical-src="https://magit.vc/assets/netscape-20px.png" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;/article&gt;&lt;/div&gt;</description><author>magit</author><guid isPermaLink="false">https://github.com/magit/magit</guid><pubDate>Tue, 11 Feb 2020 00:04:00 GMT</pubDate></item><item><title>Alexander-Miller/treemacs #5 in Emacs Lisp, This month</title><link>https://github.com/Alexander-Miller/treemacs</link><description>&lt;p&gt;&lt;i&gt;[No description found.]&lt;/i&gt;&lt;/p&gt;&lt;div id="readme" class="org" data-path="README.org"&gt;&lt;article class="markdown-body entry-content p-5" itemprop="text"&gt;&lt;p&gt;&lt;a href="https://gitter.im/treemacs/community" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/5b239b2ea58d8857151d7136447bdddef78227ef/68747470733a2f2f6261646765732e6769747465722e696d2f416c6578616e6465722d4d696c6c65722f747265656d6163732e706e67" alt="https://badges.gitter.im/Alexander-Miller/treemacs.png" data-canonical-src="https://badges.gitter.im/Alexander-Miller/treemacs.png" style="max-width:100%;"&gt;&lt;/a&gt;
  &lt;a href="https://melpa.org/#/treemacs" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/198299674034941bf401ad794c2209a81e46c8b2/68747470733a2f2f6d656c70612e6f72672f7061636b616765732f747265656d6163732d62616467652e737667" alt="https://melpa.org/packages/treemacs-badge.svg" data-canonical-src="https://melpa.org/packages/treemacs-badge.svg" style="max-width:100%;"&gt;&lt;/a&gt;
  &lt;a href="https://stable.melpa.org/#/treemacs" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/4a2a3b41806c9ee6799e995dfe48dbbb9ce4e520/68747470733a2f2f737461626c652e6d656c70612e6f72672f7061636b616765732f747265656d6163732d62616467652e737667" alt="https://stable.melpa.org/packages/treemacs-badge.svg" data-canonical-src="https://stable.melpa.org/packages/treemacs-badge.svg" style="max-width:100%;"&gt;&lt;/a&gt;
  &lt;a href="https://travis-ci.org/Alexander-Miller/treemacs" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/6c26724bd82f15a28e02df0c370e07436a3d8f16/68747470733a2f2f7472617669732d63692e6f72672f416c6578616e6465722d4d696c6c65722f747265656d6163732e7376673f6272616e63683d6d6173746572" alt="https://travis-ci.org/Alexander-Miller/treemacs.svg?branch=master" data-canonical-src="https://travis-ci.org/Alexander-Miller/treemacs.svg?branch=master" style="max-width:100%;"&gt;&lt;/a&gt;
  &lt;a href="http://spacemacs.org" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/8f5ee1d9b7278ed2c63f1f89e9a583ec59b52b6b/68747470733a2f2f63646e2e7261776769742e636f6d2f73796c3230626e722f73706163656d6163732f343432643032353737396461326636326663383663323038323730333639373731346462363531342f6173736574732f73706163656d6163732d62616467652e737667" alt="https://cdn.rawgit.com/syl20bnr/spacemacs/442d025779da2f62fc86c2082703697714db6514/assets/spacemacs-badge.svg" data-canonical-src="https://cdn.rawgit.com/syl20bnr/spacemacs/442d025779da2f62fc86c2082703697714db6514/assets/spacemacs-badge.svg" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h1&gt;&lt;a id="user-content-treemacs---a-tree-layout-file-explorer-for-emacs" class="anchor" aria-hidden="true" href="#treemacs---a-tree-layout-file-explorer-for-emacs"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Treemacs - a tree layout file explorer for Emacs&lt;/h1&gt;
&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="screenshots/screenshot.png"&gt;&lt;img src="screenshots/screenshot.png" alt="screenshots/screenshot.png" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h1&gt;&lt;a id="user-content-content" class="anchor" aria-hidden="true" href="#content"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Content&lt;/h1&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;a href="#quick-feature-overview"&gt;Quick Feature Overview&lt;/a&gt;
    &lt;ul&gt;
      &lt;li&gt;&lt;a href="#fancy-gifs"&gt;Fancy Gifs!&lt;/a&gt;&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;&lt;a href="#quick-start"&gt;Quick Start&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href="#detailed-feature-list"&gt;Detailed Feature List&lt;/a&gt;
    &lt;ul&gt;
      &lt;li&gt;&lt;a href="#projects-and-workspaces"&gt;Projects and Workspaces&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href="#conveniently-editing-your-projects-and-workspaces"&gt;Conveniently Editing Your Projects and Workspaces&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href="#navigation-without-projects-and-workspaces"&gt;Navigation without Projects and Workspaces&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href="#frame-locality"&gt;Frame Locality&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href="#mouse-interface"&gt;Mouse Interface&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href="#follow-mode"&gt;Follow-mode&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href="#tag-follow-mode"&gt;Tag-follow-mode&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href="#fringe-indicator-mode"&gt;Fringe-indicator-mode&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href="#git-mode"&gt;Git-mode&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href="#filewatch-mode"&gt;Filewatch-mode&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href="#session-persistence"&gt;Session Persistence&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href="#terminal-compatibility"&gt;Terminal Compatibility&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href="#tag-view"&gt;Tag View&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href="#current-directory-awareness"&gt;Current-Directory Awareness&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href="#tramp-support"&gt;Tramp Support&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href="#org-support"&gt;Org Support&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href="#theme-support"&gt;Theme Support&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href="#additional-packages"&gt;Additional Packages&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href="#treemacs-as-a-framework"&gt;Treemacs as a Framework&lt;/a&gt;&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;&lt;a href="#installation"&gt;Installation&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href="#configuration"&gt;Configuration&lt;/a&gt;
    &lt;ul&gt;
      &lt;li&gt;&lt;a href="#variables"&gt;Variables&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href="#faces"&gt;Faces&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href="#evil-compatibility"&gt;Evil compatibility&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href="#customizing-themes-and-icons"&gt;Customizing Themes and Icons&lt;/a&gt;&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;&lt;a href="#keymap"&gt;Keymap&lt;/a&gt;
    &lt;ul&gt;
      &lt;li&gt;&lt;a href="#unbound-functions"&gt;Unbound functions&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href="#default-keymaps"&gt;Default keymaps&lt;/a&gt;&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;&lt;a href="#compatibility"&gt;Compatibility&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href="#faq"&gt;FAQ&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href="#contributing"&gt;Contributing&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href="#working-with-the-code-base"&gt;Working With The Code Base&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href="#dependencies"&gt;Dependencies&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h1&gt;&lt;a id="user-content-quick-feature-overview" class="anchor" aria-hidden="true" href="#quick-feature-overview"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Quick Feature Overview&lt;/h1&gt;
&lt;p&gt;Treemacs is a file and project explorer similar to NeoTree or vim’s NerdTree, but largely inspired by the Project
  Explorer in Eclipse. It shows the file system outlines of your projects in a simple tree layout allowing quick
  navigation and exploration, while also possessing &lt;b&gt;basic&lt;/b&gt; file management utilities. Specifically a quick feature
  overview looks as follows:&lt;/p&gt;
&lt;dl&gt;
  &lt;dt&gt;Project management&lt;/dt&gt;&lt;dd&gt;Treemacs lets you view multiple file trees - projects - at once and quickly add or remove them,
    and groups projects in workspaces.&lt;/dd&gt;
  &lt;dt&gt;Easy navigation&lt;/dt&gt;&lt;dd&gt;quickly move between projects or use shortcuts to jump to parent or neighbouring nodes.&lt;/dd&gt;
  &lt;dt&gt;Versatile file access&lt;/dt&gt;&lt;dd&gt;decide exactly how and where a file will be opened, including using &lt;code&gt;ace-window&lt;/code&gt; to choose
    a window or launching an external application.&lt;/dd&gt;
  &lt;dt&gt;Understanding of frames&lt;/dt&gt;&lt;dd&gt;every frame will receive its own treemacs buffer that will live and die with that frame.&lt;/dd&gt;
  &lt;dt&gt;Finding of files and tags&lt;/dt&gt;&lt;dd&gt;Treemacs can follow along and keep in focus the currently selected file or even the tag
    at point using, either manually or automatically using either &lt;code&gt;treemacs-follow-mode&lt;/code&gt; or &lt;code&gt;treemacs-tag-follow-mode&lt;/code&gt;.&lt;/dd&gt;
  &lt;dt&gt;Git Integration&lt;/dt&gt;&lt;dd&gt;Treemacs can use different faces for files and directories based on their git status.
    The git process is run asynchronously, minimizing its performance impact.&lt;/dd&gt;
  &lt;dt&gt;&lt;a href="https://github.com/deb0ch/emacs-winum"&gt;Winum&lt;/a&gt; &amp;amp; &lt;a href="https://github.com/abo-abo/ace-window"&gt;ace-window&lt;/a&gt; compatibility&lt;/dt&gt;&lt;dd&gt;The presence of treemacs will not interfere with winum’s and ace-window’s
    usual layouts.&lt;/dd&gt;
  &lt;dt&gt;&lt;a href="https://github.com/bbatsov/projectile"&gt;Projectile&lt;/a&gt; integration&lt;/dt&gt;&lt;dd&gt;the &lt;code&gt;treemacs-projectile&lt;/code&gt; package lets you quickly add your projectile projects to the
    treemacs workspace.&lt;/dd&gt;
  &lt;dt&gt;Simple mouse interface&lt;/dt&gt;&lt;dd&gt;Left clicks will work the same as you’re used to from with graphical applications&lt;/dd&gt;
  &lt;dt&gt;Session persistence&lt;/dt&gt;&lt;dd&gt;Treemacs automatically saves and restores your workspaces.&lt;/dd&gt;
  &lt;dt&gt;Dashing good looks&lt;/dt&gt;&lt;dd&gt;Treemacs uses (optionally resizable) png images in HD 22x22 resolution for its icons (quantity
    is, of course, another matter). When run in a terminal a simple fallback is used.&lt;/dd&gt;
  &lt;dt&gt;Tag view&lt;/dt&gt;&lt;dd&gt;Treemacs can display files’ tags. All file types that Emacs can generate a (semantic) imenu index for are
    supported.&lt;/dd&gt;
  &lt;dt&gt;Visual feedback&lt;/dt&gt;&lt;dd&gt;When it would otherwise be difficult to see the message in the minibuffer success/failure is
    indicated with pulse.el.&lt;/dd&gt;
  &lt;dt&gt;Theming support&lt;/dt&gt;&lt;dd&gt;Treemacs supports using multiple icon themes that can be changed at will.&lt;/dd&gt;
  &lt;dt&gt;Ease of use&lt;/dt&gt;&lt;dd&gt;Treemacs offers many configuration options, but comes with a set of (what hopefully should be) sane
    defaults. Installation aside there are two obligatory pieces of setup: 1) Choosing convenient keybindings to run
    treemacs and 2) If you use evil: requiring &lt;code&gt;treemacs-evil&lt;/code&gt; to integrate treemacs with evil and enable j/k navigation.
    More on both below. You can also summon a helpful hydra with &lt;code&gt;?&lt;/code&gt; that will remind you of treemacs’ many keybindings
    and features.&lt;/dd&gt;
  &lt;dt&gt;Bookmark integration&lt;/dt&gt;&lt;dd&gt;Running &lt;code&gt;bookmark-set&lt;/code&gt; on a Treemacs item will store a bookmark to Treemacs buffer for that item.&lt;/dd&gt;
&lt;/dl&gt;
&lt;h2&gt;&lt;a id="user-content-fancy-gifs" class="anchor" aria-hidden="true" href="#fancy-gifs"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Fancy Gifs!&lt;/h2&gt;
&lt;p&gt;Various ways to open files:
  &lt;a target="_blank" rel="noopener noreferrer" href="screenshots/open-files.gif"&gt;&lt;img src="screenshots/open-files.gif" alt="screenshots/open-files.gif" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Workspace administration with org-mode:
  &lt;a target="_blank" rel="noopener noreferrer" href="screenshots/workspace-edit.gif"&gt;&lt;img src="screenshots/workspace-edit.gif" alt="screenshots/workspace-edit.gif" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Automatic reaction to changes in the file system:
  &lt;a target="_blank" rel="noopener noreferrer" href="screenshots/filewatch.gif"&gt;&lt;img src="screenshots/filewatch.gif" alt="screenshots/filewatch.gif" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Automatic reaction to changes in git:
  &lt;a target="_blank" rel="noopener noreferrer" href="screenshots/git.gif"&gt;&lt;img src="screenshots/git.gif" alt="screenshots/git.gif" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Full-featured mouse interface:
  &lt;a target="_blank" rel="noopener noreferrer" href="screenshots/mouse-interface.gif"&gt;&lt;img src="screenshots/mouse-interface.gif" alt="screenshots/mouse-interface.gif" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Resizable icons:
  &lt;a target="_blank" rel="noopener noreferrer" href="screenshots/icon-resize.gif"&gt;&lt;img src="screenshots/icon-resize.gif" alt="screenshots/icon-resize.gif" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h1&gt;&lt;a id="user-content-quick-start" class="anchor" aria-hidden="true" href="#quick-start"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Quick Start&lt;/h1&gt;
&lt;p&gt;If you don’t care about reading the full readme here’s a list of some bare bones basics to get you started:&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;First of all: press &lt;code&gt;?&lt;/code&gt; to summon the helpful hydra:
    &lt;a target="_blank" rel="noopener noreferrer" href="screenshots/hydra.png"&gt;&lt;img src="screenshots/hydra.png" alt="screenshots/hydra.png" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;If you use evil don’t forget to also install &lt;code&gt;treemacs-evil&lt;/code&gt;&lt;/li&gt;
  &lt;li&gt;If you use projectile you can install &lt;code&gt;treemacs-projectile&lt;/code&gt; to allow quickly add your projectile projects to
    treemacs.&lt;/li&gt;
  &lt;li&gt;Treemacs doesn’t bind any global keys, you need to use whatever fits you best. A full install setup can be found
    &lt;a href="#installation"&gt;below&lt;/a&gt;. Otherwise just add a keybind for &lt;code&gt;treemacs&lt;/code&gt;.&lt;/li&gt;
  &lt;li&gt;For navigation use n/p (j/k when evil), M-n/M-p to move to same-height neighbour u to go to parent, and C-n/C-k to
    move between projects.&lt;/li&gt;
  &lt;li&gt;There’s half a dozen different ways to open nodes, all bound under o as prefix. Pick your favourite.&lt;/li&gt;
  &lt;li&gt;TAB and RET are particularly configurable. See &lt;code&gt;treemacs-TAB/RET-actions-config&lt;/code&gt;.&lt;/li&gt;
  &lt;li&gt;Projects administration is bound under the &lt;code&gt;C-c C-p&lt;/code&gt; prefix.&lt;/li&gt;
&lt;/ul&gt;
&lt;h1&gt;&lt;a id="user-content-detailed-feature-list" class="anchor" aria-hidden="true" href="#detailed-feature-list"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Detailed Feature List&lt;/h1&gt;
&lt;h2&gt;&lt;a id="user-content-projects-and-workspaces" class="anchor" aria-hidden="true" href="#projects-and-workspaces"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Projects and Workspaces&lt;/h2&gt;
&lt;p&gt;If you’ve previously used a different explorer like NeoTree or NerdTree - or an earlier version of treemacs for that
  matter - you are probably used to a display system wherein you see exactly a single file tree whose exact root you can
  arbitrarily change. This system makes it difficult to work on and switch between multiple projects. Treemacs used to
  (and still does) remedy that limitation by making every treemacs buffer unique to its frame, but it has now been
  redesigned to be able to display multiple file trees - projects - at once.&lt;/p&gt;
&lt;p&gt;In treemacs a workspace is simply a (named) collection of projects, while a project mostly consists of 2 things: its
  location in the file system and its name. This is the info that you need to provide when you want to add a new project
  to your workspace. Just like projects you can add, remove, rename and switch between workspaces at any time.&lt;/p&gt;
&lt;p&gt;This design approach has various advantages and disadvantages. It is now no longer possible to “free roam” in the file
  system with treemacs, i.e. you can no longer arbitrarily switch the single file tree’s root to the directory at point or
  the current root’s parent. Another restriction is that the same part of the file system may not appear more than once as
  part of the workspace. For example it is not possible to have both /Documents and /Documents/ProjectX as projects in the
  same workspace, since internally treemacs heavily relies on every node having a unique natural key in its absolute path.
  Nonetheless the pros certainly outweigh the cons, as a multiroot setup allows to work on multiple projects with any
  combination concern/buffer separating frameworks, be it persp, eyebrowse, or projectile. It also opens the potential for
  concurrent display not only of the file system, but e.g. the currently open buffers.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-workspace-selection" class="anchor" aria-hidden="true" href="#workspace-selection"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Workspace Selection&lt;/h3&gt;
&lt;p&gt;On first load treemacs will select a workspace in the following manner:&lt;/p&gt;
&lt;p&gt;If the current buffer is editing a file then treemacs will try to find the first workspace with a project containing
  that file. If that fails treemacs will simply fall back on the &lt;i&gt;first&lt;/i&gt; element in the list of all workspace.&lt;/p&gt;
&lt;p&gt;The order of workspaces is the same that you see when calling &lt;code&gt;treemacs-edit-workspaces&lt;/code&gt; (see next chapter). You can set
  the fall backback workspace by calling &lt;code&gt;treemacs-set-fallback-workspace&lt;/code&gt;.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-conveniently-editing-your-projects-and-workspaces" class="anchor" aria-hidden="true" href="#conveniently-editing-your-projects-and-workspaces"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Conveniently Editing Your Projects and Workspaces&lt;/h2&gt;
&lt;p&gt;There are two ways to edit your projects and workspaces: call up single add/remove/rename/switch commands under either
  the &lt;code&gt;C-c C-p&lt;/code&gt; or &lt;code&gt;C-c C-w&lt;/code&gt; prefix, or call &lt;code&gt;treemacs-edit-workspaces&lt;/code&gt; and edit your entire layout in the form of a
  single org-mode buffer.&lt;/p&gt;
&lt;p&gt;The used org-format is quite simple: level 1 headlines are names of workspaces, level 2 headlines are names of projects
  in a workspace, and every project’s path is given as a description list, starting with a &lt;code&gt;-&lt;/code&gt; (and an optional leading
  space). Empty lines and lines starting with &lt;code&gt;#&lt;/code&gt; are ignored, and everything else leads to an error.&lt;/p&gt;
&lt;p&gt;You needn’t worry about making mistakes either. If there’s something wrong when you call &lt;code&gt;treemacs-finish-edit&lt;/code&gt;
  (C-c C-c) then treemacs will point you at the incorrect line and tell you what’s missing:&lt;/p&gt;
&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="screenshots/workspace-edit.png"&gt;&lt;img src="screenshots/workspace-edit.png" alt="screenshots/workspace-edit.png" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;(Note that the list with the path property allows an indentation of 0 or 1 spaces only. The much greater visible
  indentation is caused by &lt;code&gt;org-indent-mode&lt;/code&gt;)&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-navigation-without-projects-and-workspaces" class="anchor" aria-hidden="true" href="#navigation-without-projects-and-workspaces"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Navigation without Projects and Workspaces&lt;/h2&gt;
&lt;p&gt;If a strict workspace and project structure, as described above, is too stringent for your use-case you can, under
  certain circumstances, use treemacs to freely navigate through your your file system, similar to dired: When your
  workspace contains &lt;i&gt;exactly&lt;/i&gt; a single project you can use &lt;code&gt;h&lt;/code&gt; and &lt;code&gt;l&lt;/code&gt; (or &lt;code&gt;treemacs-root-up&lt;/code&gt; and &lt;code&gt;treemacs-root-down&lt;/code&gt;) to
  arbitrarily change the single project’s root. &lt;code&gt;h&lt;/code&gt; will navigate one level upward in the file system, &lt;code&gt;l&lt;/code&gt; will move into
  the directory at point.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-frame-locality" class="anchor" aria-hidden="true" href="#frame-locality"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Frame Locality&lt;/h2&gt;
&lt;p&gt;Treemacs buffers have a limited scope they are visible in: the frames they are created in. A treemacs buffer, once
  created, lives alongside and inside its frame, and is also destroyed with that frame. Calling &lt;code&gt;treemacs&lt;/code&gt; while inside a
  new frame will create a new buffer for it, regardless how many other treemacs buffers already exist. While there can be
  multiple unique treemacs buffer they will all still show the same workspace and the same projects.&lt;/p&gt;
&lt;p&gt;A treemacs buffer that does not belong to a frame may still be made visible by manually selecting in the buffer list.
  This would break various assumptions in treemacs’ code base and effectively falls under undefined behaviour - a bad idea
  all around.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-mouse-interface" class="anchor" aria-hidden="true" href="#mouse-interface"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Mouse Interface&lt;/h2&gt;
&lt;p&gt;Treemacs handles left clicks in much the same way as modern graphical applications do: a single click sets the focus, a
  double click expands or collapses a directory or tag section node and visits a file/moves to a tag for a file/tag node.&lt;/p&gt;
&lt;p&gt;Additionally tag sections can be expanded or collapsed by a single click on the file/tag section icon.&lt;/p&gt;
&lt;p&gt;If you prefer to expand/collpase nodes with a single mouse click you can also use &lt;code&gt;treemacs-single-click-expand-action&lt;/code&gt;:&lt;/p&gt;
&lt;div class="highlight highlight-source-emacs-lisp"&gt;&lt;pre&gt;(&lt;span class="pl-c1"&gt;define-key&lt;/span&gt; treemacs-mode-map [mouse-1] &lt;span class="pl-c1"&gt;#&lt;span class="pl-c1"&gt;'treemacs-single-click-expand-action&lt;/span&gt;&lt;/span&gt;)&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;A right click popup-menu is also available:&lt;/p&gt;
&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="screenshots/right-click.png"&gt;&lt;img src="screenshots/right-click.png" alt="screenshots/right-click.png" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;You can also open a file in a specific window by dragging using left click from treemacs to the required window.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-follow-mode" class="anchor" aria-hidden="true" href="#follow-mode"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Follow-mode&lt;/h2&gt;
&lt;p&gt;&lt;code&gt;treemacs-follow-mode&lt;/code&gt; is a global minor mode which allows the treemacs view to always move its focus to the currently
  selected file. This mode runs on an idle timer - the exact duration of inactivity (in seconds) before a move is called
  is determined by &lt;code&gt;treemacs-tag-follow-delay&lt;/code&gt;.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-tag-follow-mode" class="anchor" aria-hidden="true" href="#tag-follow-mode"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Tag-follow-mode&lt;/h2&gt;
&lt;p&gt;&lt;code&gt;treemacs-tag-follow-mode&lt;/code&gt; is a global minor mode which extends and effectively replaces &lt;code&gt;treemacs-follow-mode&lt;/code&gt;. When
  activated it follows not just the current file, but also the current tag. This works alongside treemacs’ integration
  with imenu, so all file types providing an imenu implementation are compatible.&lt;/p&gt;
&lt;p&gt;This mode, like follow-mode, runs on an idle timer - the exact duration of inactivity (in seconds) before a move is
  called is determined by &lt;code&gt;treemacs-tag-follow-delay&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;Note that in order to move to a tag in treemacs the treemacs buffer’s window needs to be temporarily selected, which
  will reset &lt;code&gt;blink-cursor-mode&lt;/code&gt;’s timer if it is enabled. This will result in the cursor blinking seemingly pausing for a
  short time and giving the appearance of the tag follow action lasting much longer than it really does.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-fringe-indicator-mode" class="anchor" aria-hidden="true" href="#fringe-indicator-mode"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Fringe-indicator-mode&lt;/h2&gt;
&lt;p&gt;&lt;code&gt;treemacs-fringe-indicator-mode&lt;/code&gt; is a global minor mode that displays a little icon in the fringe that moves with the cursor.
  It can make the selected line more visible if &lt;code&gt;hl-line-mode&lt;/code&gt; doesn’t stand out with your theme.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-git-mode" class="anchor" aria-hidden="true" href="#git-mode"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Git-mode&lt;/h2&gt;
&lt;p&gt;&lt;code&gt;treemacs-git-mode&lt;/code&gt; is a global minor mode which enables treemacs to check for files’ and directories’ git status
  information and highlight them accordingly (see also the &lt;code&gt;treemacs-git-...&lt;/code&gt; faces). The mode is available in 3 variants:
  &lt;code&gt;simple&lt;/code&gt;, &lt;code&gt;extended&lt;/code&gt; and &lt;code&gt;deferred&lt;/code&gt;:&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;The simple variant starts a git status process and parses its output in elisp. The parsing is kept quick and simple,
    so some info is missed: this version includes git status information only for files, but not directories.&lt;/li&gt;
  &lt;li&gt;The extended variant highlights both files and directories. This greatly increases the complexity and length of the
    parsing process, and is therefore done in an asynchronous python process for the sake of performance. The extended
    variant requires python3 to work.&lt;/li&gt;
  &lt;li&gt;The deferred variant is the same as extended, except the tasks of rendering nodes and highlighting them are
    separated. The former happens immediately, the latter after &lt;code&gt;treemacs-deferred-git-apply-delay&lt;/code&gt; seconds of idle time.
    This may be faster (if not in truth then at least in appereance) as the git process is given a much greater amount of
    time to finish. The downside is that the effect of nodes changing their colors may be somewhat jarring, though this
    effect is largely mitigated due to the use of a caching layer.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;When called interactively &lt;code&gt;treemacs-git-mode&lt;/code&gt; will ask for the variant to use. In lisp code an appropriate symbol can
  be directly passed to the minor mode function:&lt;/p&gt;
&lt;div class="highlight highlight-source-emacs-lisp"&gt;&lt;pre&gt;(treemacs-git-mode &lt;span class="pl-c1"&gt;'deferred&lt;/span&gt;)&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;All versions use an asynchronous git process and are optimized to not do more work than necessary, so their performance
  cost should, for the most part, be the constant amount of time it takes to fork a subprocess. For repositories where
  this is not the case &lt;code&gt;treemacs-max-git-entries&lt;/code&gt; (default value 5000) will limit the number of git status entries
  treemacs will process before ignoring the rest.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-filewatch-mode" class="anchor" aria-hidden="true" href="#filewatch-mode"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Filewatch-mode&lt;/h2&gt;
&lt;p&gt;&lt;code&gt;treemacs-filewatch-mode&lt;/code&gt; is a global minor mode which enables treemacs to watch the files it is displaying for changes
  and automatically refresh itself when it detects a change in the file system that it decides is relevant.&lt;/p&gt;
&lt;p&gt;A change event is relevant for treemacs if a new file has been created or deleted or a file has been changed and
  &lt;code&gt;treemacs-git-mode&lt;/code&gt; is enabled. Events caused by files that are ignored as per &lt;code&gt;treemacs-ignored-file-predicates&lt;/code&gt; are
  likewise counted as not relevant.&lt;/p&gt;
&lt;p&gt;The refresh is not called immediately after an event was received, treemacs instead waits &lt;code&gt;treemacs-file-event-delay&lt;/code&gt; ms
  to see if any more files have changed to avoid having to refresh multiple times over a short period of time. Treemacs
  will not refresh the entire view to make the detected changes visible, but will instead only make updates to the
  directories where the change(s) happened. Using this mode is therefore by far not as expensive as a full refresh on
  every change and save.&lt;/p&gt;
&lt;p&gt;The mode only applies to directories opened &lt;b&gt;after&lt;/b&gt; this mode has been activated. This means that to enable file
  watching in an already existing treemacs buffer it needs to be killed and rebuilt. Turning off this mode is, on the
  other hand, instantaneous - it will immediately turn off all existing file watch processes and outstanding refresh
  actions.&lt;/p&gt;
&lt;p&gt;&lt;span&gt;Known limitations&lt;/span&gt;:
  Staging and committing changes does not produce any file change events of its own, if you use &lt;code&gt;treemacs-git-mode&lt;/code&gt; you
  still need to do a manual refresh to see your files’ faces go from ‘changed’ and ‘untracked’ to ‘unchanged’ after a
  commit.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-session-persistence" class="anchor" aria-hidden="true" href="#session-persistence"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Session Persistence&lt;/h2&gt;
&lt;p&gt;Treemacs’ sessions - your workspace and the projects it contains - are saved when Emacs shuts down and restored when
  treemacs is first loaded. This persistence process is fully automatic and independant, and should therefore be fully
  compatible with &lt;code&gt;desktop-save-mode&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;The persisted state is saved under &lt;code&gt;user-emacs-directory/.cache/treemacs-persist&lt;/code&gt; by default. The exact file location
  is saved in the variable &lt;code&gt;treemacs-persist-file&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;If something goes wrong when loading the file the erroneous state will be saved in &lt;code&gt;treemacs-last-error-persist-file&lt;/code&gt;
  for debugging.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-terminal-compatibility" class="anchor" aria-hidden="true" href="#terminal-compatibility"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Terminal Compatibility&lt;/h2&gt;
&lt;p&gt;When run in a terminal treemacs will fall back to a much simpler rendering system, foregoing its usual png icons and
  using simple &lt;code&gt;+&lt;/code&gt; and &lt;code&gt;-&lt;/code&gt; characters instead. The exact characters used are &lt;a href="#custom-icons"&gt;highly customizable&lt;/a&gt;.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-tag-view" class="anchor" aria-hidden="true" href="#tag-view"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Tag View&lt;/h2&gt;
&lt;p&gt;Treemacs is able to display not only the file system, but also tags found in individual files. The tags list is sourced
  using emacs’ builtin imenu functionality, so all file types that emacs can generate an imenu index for are supported.&lt;/p&gt;
&lt;p&gt;Imenu caches its result, so to avoid stale tag lists setting &lt;code&gt;imenu-auto-rescan&lt;/code&gt; to t is recommended. Tags generated
  with the help of &lt;code&gt;semantic-mode&lt;/code&gt; are likewise supported.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-ggtags" class="anchor" aria-hidden="true" href="#ggtags"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;ggtags&lt;/h3&gt;
&lt;p&gt;Treemacs can show the tags produced by ggtags if you switch a buffer’s imenu index function to use ggtags:&lt;/p&gt;
&lt;div class="highlight highlight-source-emacs-lisp"&gt;&lt;pre&gt;(&lt;span class="pl-c1"&gt;setq-local&lt;/span&gt; imenu-create-index-function &lt;span class="pl-c1"&gt;#&lt;span class="pl-c1"&gt;'ggtags-build-imenu-index&lt;/span&gt;&lt;/span&gt;)&lt;/pre&gt;&lt;/div&gt;
&lt;h2&gt;&lt;a id="user-content-current-directory-awareness" class="anchor" aria-hidden="true" href="#current-directory-awareness"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Current-Directory Awareness&lt;/h2&gt;
&lt;p&gt;Treemacs always sets the &lt;code&gt;default-directory&lt;/code&gt; variable based on the (nearest) path at the current node, falling back to
  your home directory when there is no node or path at point. That means that various commands like &lt;code&gt;find-file&lt;/code&gt;,
  &lt;code&gt;magit-status&lt;/code&gt; or &lt;code&gt;helm-projectile-ag&lt;/code&gt; will correctly act based on the current directory or project context.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-tramp-support" class="anchor" aria-hidden="true" href="#tramp-support"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Tramp Support&lt;/h2&gt;
&lt;p&gt;Treemacs supports projects on remote directories, e.g. &lt;code&gt;/scp:remote-server:path/to/directory&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;However tramp support has some restrictions: &lt;code&gt;treemacs-use-collapsed-directories&lt;/code&gt; has no effect on remote directories.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-org-support" class="anchor" aria-hidden="true" href="#org-support"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Org Support&lt;/h2&gt;
&lt;p&gt;Treemacs supports storing links to its file nodes by means of &lt;code&gt;org-store-link&lt;/code&gt;.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-theme-support" class="anchor" aria-hidden="true" href="#theme-support"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Theme Support&lt;/h2&gt;
&lt;p&gt;Using a different treemacs theme works the same way as using a different Emacs theme: just call &lt;code&gt;treemacs-load-theme&lt;/code&gt;,
  either programmatically or interactively. In the former case you need to supply the name of the theme as a string, like
  this:&lt;/p&gt;
&lt;div class="highlight highlight-source-emacs-lisp"&gt;&lt;pre&gt;(treemacs-load-theme &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;Default&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Do keep in mind that by default treemacs’ theme support is all theory: the standard installation includes only the
  default theme; this feature is meant to easily allow &lt;b&gt;others&lt;/b&gt; to extend, create and distribute themes for treemacs.&lt;/p&gt;
&lt;p&gt;A detailed explanation on modifying themes and icons can be found in the &lt;a href="#customizing-themes-and-icons"&gt;Configuration&lt;/a&gt; section.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-additional-packages" class="anchor" aria-hidden="true" href="#additional-packages"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Additional Packages&lt;/h2&gt;
&lt;p&gt;Next to treemacs itself you can optionally install:&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-treemacs-evil" class="anchor" aria-hidden="true" href="#treemacs-evil"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;treemacs-evil&lt;/h3&gt;
&lt;p&gt;Must be installed and loaded if you use evil. The keybindings and the cursor will not be setup properly otherwise. It’ll
  also enable navigation with j/k instead of n/p.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-treemacs-projectile" class="anchor" aria-hidden="true" href="#treemacs-projectile"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;treemacs-projectile&lt;/h3&gt;
&lt;p&gt;Allows to quickly add your projectile projects to the treemacs workspace.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-treemacs-magit" class="anchor" aria-hidden="true" href="#treemacs-magit"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;treemacs-magit&lt;/h3&gt;
&lt;p&gt;A small utility package to fill the small gaps left by using filewatch-mode and git-mode in conjunction with magit: it
  will inform treemacs about (un)staging of files and commits happening in magit.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-treemacs-icons-dired" class="anchor" aria-hidden="true" href="#treemacs-icons-dired"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;treemacs-icons-dired&lt;/h3&gt;
&lt;p&gt;Allows you to use treemacs icons in dired buffers with &lt;code&gt;treemacs-icons-dired-mode&lt;/code&gt;:
  &lt;a target="_blank" rel="noopener noreferrer" href="screenshots/dired-icons.png"&gt;&lt;img src="screenshots/dired-icons.png" alt="screenshots/dired-icons.png" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-treemacs-persp" class="anchor" aria-hidden="true" href="#treemacs-persp"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;treemacs-persp&lt;/h3&gt;
&lt;p&gt;Integration with persp-mode that allows treemacs buffers to be unique inside the active perspective instead of the
  default frame-based buffer scope.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-treemacs-as-a-framework" class="anchor" aria-hidden="true" href="#treemacs-as-a-framework"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Treemacs as a Framework&lt;/h2&gt;
&lt;p&gt;Treemacs can be extended to display arbitrary nodes as well as be used as a general rendering backend for any tree-like
  structures. &lt;a href="Extensions.org"&gt;See here&lt;/a&gt; for an extended tutorial and demonstration.&lt;/p&gt;
&lt;h1&gt;&lt;a id="user-content-installation" class="anchor" aria-hidden="true" href="#installation"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Installation&lt;/h1&gt;
&lt;p&gt;Treemacs is included in Spacemacs (for now only on the dev branch). If you are using the development version of
  Spacemacs you can simply add treemacs to &lt;code&gt;dotspacemacs-configuration-layers&lt;/code&gt; to replace the default NeoTree. Check &lt;code&gt;SPC
  h SPC treemacs&lt;/code&gt; for details. Otherwise you will need to add treemacs to &lt;code&gt;dotspacemacs-additional-packages&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;Treemacs is also available on MELPA. If you just want to quickly start using it grab the &lt;code&gt;use-package&lt;/code&gt; example below,
  and customize it as needed (remove &lt;code&gt;treemacs-evil&lt;/code&gt; if you don’t use it, customize the keybindings to you taste, etc).&lt;/p&gt;
&lt;p&gt;Either way keep in mind that treemacs has &lt;i&gt;no default keybindings&lt;/i&gt; for its globally callable initialization functions. Each
  user is supposed to select keybindings for functions like &lt;code&gt;treemacs-find-file&lt;/code&gt; based on whatever they find convenient.&lt;/p&gt;
&lt;p&gt;You can find an exhaustive overview of all functions, their keybindings and functions you need to bind yourself &lt;a href="#keymap"&gt;below&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;The following &lt;code&gt;use-package&lt;/code&gt; snippet includes a list of &lt;i&gt;all&lt;/i&gt; of treemacs’ configuration variables in their default
  setting. Setting them all yourself is not necessary, they are only listed here to encourage discoverability.&lt;/p&gt;
&lt;div class="highlight highlight-source-emacs-lisp"&gt;&lt;pre&gt;(&lt;span class="pl-c1"&gt;use-package&lt;/span&gt; treemacs
  &lt;span class="pl-c1"&gt;:ensure&lt;/span&gt; &lt;span class="pl-c1"&gt;t&lt;/span&gt;
  &lt;span class="pl-c1"&gt;:defer&lt;/span&gt; &lt;span class="pl-c1"&gt;t&lt;/span&gt;
  &lt;span class="pl-c1"&gt;:init&lt;/span&gt;
  (&lt;span class="pl-c1"&gt;with-eval-after-load&lt;/span&gt; &lt;span class="pl-c1"&gt;'winum&lt;/span&gt;
    (&lt;span class="pl-c1"&gt;define-key&lt;/span&gt; winum-keymap (&lt;span class="pl-c1"&gt;kbd&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;M-0&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;) &lt;span class="pl-c1"&gt;#&lt;span class="pl-c1"&gt;'treemacs-select-window&lt;/span&gt;&lt;/span&gt;))
  &lt;span class="pl-c1"&gt;:config&lt;/span&gt;
  (&lt;span class="pl-k"&gt;progn&lt;/span&gt;
    (&lt;span class="pl-k"&gt;setq&lt;/span&gt; treemacs-collapse-dirs                 (&lt;span class="pl-k"&gt;if&lt;/span&gt; treemacs-python-executable &lt;span class="pl-c1"&gt;3&lt;/span&gt; &lt;span class="pl-c1"&gt;0&lt;/span&gt;)
          treemacs-deferred-git-apply-delay      &lt;span class="pl-c1"&gt;0.5&lt;/span&gt;
          treemacs-directory-name-transformer    &lt;span class="pl-c1"&gt;#&lt;span class="pl-c1"&gt;'identity&lt;/span&gt;&lt;/span&gt;
          treemacs-display-in-side-window        &lt;span class="pl-c1"&gt;t&lt;/span&gt;
          treemacs-eldoc-display                 &lt;span class="pl-c1"&gt;t&lt;/span&gt;
          treemacs-file-event-delay              &lt;span class="pl-c1"&gt;5000&lt;/span&gt;
          treemacs-file-extension-regex          treemacs-last-period-regex-value
          treemacs-file-follow-delay             &lt;span class="pl-c1"&gt;0.2&lt;/span&gt;
          treemacs-file-name-transformer         &lt;span class="pl-c1"&gt;#&lt;span class="pl-c1"&gt;'identity&lt;/span&gt;&lt;/span&gt;
          treemacs-follow-after-init             &lt;span class="pl-c1"&gt;t&lt;/span&gt;
          treemacs-git-command-pipe              &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;
          treemacs-goto-tag-strategy             &lt;span class="pl-c1"&gt;'refetch-index&lt;/span&gt;
          treemacs-indentation                   &lt;span class="pl-c1"&gt;2&lt;/span&gt;
          treemacs-indentation-string            &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt; &lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;
          treemacs-is-never-other-window         &lt;span class="pl-c1"&gt;nil&lt;/span&gt;
          treemacs-max-git-entries               &lt;span class="pl-c1"&gt;5000&lt;/span&gt;
          treemacs-missing-project-action        &lt;span class="pl-c1"&gt;'ask&lt;/span&gt;
          treemacs-no-png-images                 &lt;span class="pl-c1"&gt;nil&lt;/span&gt;
          treemacs-no-delete-other-windows       &lt;span class="pl-c1"&gt;t&lt;/span&gt;
          treemacs-project-follow-cleanup        &lt;span class="pl-c1"&gt;nil&lt;/span&gt;
          treemacs-persist-file                  (&lt;span class="pl-c1"&gt;expand-file-name&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;.cache/treemacs-persist&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; user-emacs-directory)
          treemacs-position                      &lt;span class="pl-c1"&gt;'left&lt;/span&gt;
          treemacs-recenter-distance             &lt;span class="pl-c1"&gt;0.1&lt;/span&gt;
          treemacs-recenter-after-file-follow    &lt;span class="pl-c1"&gt;nil&lt;/span&gt;
          treemacs-recenter-after-tag-follow     &lt;span class="pl-c1"&gt;nil&lt;/span&gt;
          treemacs-recenter-after-project-jump   &lt;span class="pl-c1"&gt;'always&lt;/span&gt;
          treemacs-recenter-after-project-expand &lt;span class="pl-c1"&gt;'on-distance&lt;/span&gt;
          treemacs-show-cursor                   &lt;span class="pl-c1"&gt;nil&lt;/span&gt;
          treemacs-show-hidden-files             &lt;span class="pl-c1"&gt;t&lt;/span&gt;
          treemacs-silent-filewatch              &lt;span class="pl-c1"&gt;nil&lt;/span&gt;
          treemacs-silent-refresh                &lt;span class="pl-c1"&gt;nil&lt;/span&gt;
          treemacs-sorting                       &lt;span class="pl-c1"&gt;'alphabetic-asc&lt;/span&gt;
          treemacs-space-between-root-nodes      &lt;span class="pl-c1"&gt;t&lt;/span&gt;
          treemacs-tag-follow-cleanup            &lt;span class="pl-c1"&gt;t&lt;/span&gt;
          treemacs-tag-follow-delay              &lt;span class="pl-c1"&gt;1.5&lt;/span&gt;
          treemacs-width                         &lt;span class="pl-c1"&gt;35&lt;/span&gt;)

    &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt;; The default width and height of the icons is 22 pixels. If you are&lt;/span&gt;
    &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt;; using a Hi-DPI display, uncomment this to double the icon size.&lt;/span&gt;
    &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt;;(treemacs-resize-icons 44)&lt;/span&gt;

    (treemacs-follow-mode &lt;span class="pl-c1"&gt;t&lt;/span&gt;)
    (treemacs-filewatch-mode &lt;span class="pl-c1"&gt;t&lt;/span&gt;)
    (treemacs-fringe-indicator-mode &lt;span class="pl-c1"&gt;t&lt;/span&gt;)
    (&lt;span class="pl-k"&gt;pcase&lt;/span&gt; (&lt;span class="pl-k"&gt;cons&lt;/span&gt; (&lt;span class="pl-k"&gt;not&lt;/span&gt; (&lt;span class="pl-k"&gt;null&lt;/span&gt; (&lt;span class="pl-c1"&gt;executable-find&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;git&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)))
                 (&lt;span class="pl-k"&gt;not&lt;/span&gt; (&lt;span class="pl-k"&gt;null&lt;/span&gt; treemacs-python-executable)))
      (`(&lt;span class="pl-c1"&gt;t&lt;/span&gt; &lt;span class="pl-k"&gt;.&lt;/span&gt; &lt;span class="pl-c1"&gt;t&lt;/span&gt;)
       (treemacs-git-mode &lt;span class="pl-c1"&gt;'deferred&lt;/span&gt;))
      (`(&lt;span class="pl-c1"&gt;t&lt;/span&gt; &lt;span class="pl-k"&gt;.&lt;/span&gt; _)
       (treemacs-git-mode &lt;span class="pl-c1"&gt;'simple&lt;/span&gt;))))
  &lt;span class="pl-c1"&gt;:bind&lt;/span&gt;
  (&lt;span class="pl-c1"&gt;:map&lt;/span&gt; global-map
        (&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;M-0&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;       &lt;span class="pl-k"&gt;.&lt;/span&gt; treemacs-select-window)
        (&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;C-x t 1&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;   &lt;span class="pl-k"&gt;.&lt;/span&gt; treemacs-delete-other-windows)
        (&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;C-x t t&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;   &lt;span class="pl-k"&gt;.&lt;/span&gt; treemacs)
        (&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;C-x t B&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;   &lt;span class="pl-k"&gt;.&lt;/span&gt; treemacs-bookmark)
        (&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;C-x t C-t&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; &lt;span class="pl-k"&gt;.&lt;/span&gt; treemacs-find-file)
        (&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;C-x t M-t&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; &lt;span class="pl-k"&gt;.&lt;/span&gt; treemacs-find-tag)))

(&lt;span class="pl-c1"&gt;use-package&lt;/span&gt; treemacs-evil
  &lt;span class="pl-c1"&gt;:after&lt;/span&gt; treemacs evil
  &lt;span class="pl-c1"&gt;:ensure&lt;/span&gt; &lt;span class="pl-c1"&gt;t&lt;/span&gt;)

(&lt;span class="pl-c1"&gt;use-package&lt;/span&gt; treemacs-projectile
  &lt;span class="pl-c1"&gt;:after&lt;/span&gt; treemacs projectile
  &lt;span class="pl-c1"&gt;:ensure&lt;/span&gt; &lt;span class="pl-c1"&gt;t&lt;/span&gt;)

(&lt;span class="pl-c1"&gt;use-package&lt;/span&gt; treemacs-icons-dired
  &lt;span class="pl-c1"&gt;:after&lt;/span&gt; treemacs dired
  &lt;span class="pl-c1"&gt;:ensure&lt;/span&gt; &lt;span class="pl-c1"&gt;t&lt;/span&gt;
  &lt;span class="pl-c1"&gt;:config&lt;/span&gt; (treemacs-icons-dired-mode))

(&lt;span class="pl-c1"&gt;use-package&lt;/span&gt; treemacs-magit
  &lt;span class="pl-c1"&gt;:after&lt;/span&gt; treemacs magit
  &lt;span class="pl-c1"&gt;:ensure&lt;/span&gt; &lt;span class="pl-c1"&gt;t&lt;/span&gt;)

(&lt;span class="pl-c1"&gt;use-package&lt;/span&gt; treemacs-persp
  &lt;span class="pl-c1"&gt;:after&lt;/span&gt; treemacs persp-mode
  &lt;span class="pl-c1"&gt;:ensure&lt;/span&gt; &lt;span class="pl-c1"&gt;t&lt;/span&gt;
  &lt;span class="pl-c1"&gt;:config&lt;/span&gt; (treemacs-set-scope-type &lt;span class="pl-c1"&gt;'Perspectives&lt;/span&gt;))&lt;/pre&gt;&lt;/div&gt;
&lt;h1&gt;&lt;a id="user-content-configuration" class="anchor" aria-hidden="true" href="#configuration"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Configuration&lt;/h1&gt;
&lt;h2&gt;&lt;a id="user-content-variables" class="anchor" aria-hidden="true" href="#variables"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Variables&lt;/h2&gt;
&lt;p&gt;Treemacs offers the following configuration options (&lt;code&gt;describe-variable&lt;/code&gt; will usually offers more details):&lt;/p&gt;
&lt;table&gt;
  &lt;tbody&gt;&lt;tr&gt;&lt;th&gt;Variable&lt;/th&gt;&lt;th&gt;Default&lt;/th&gt;&lt;th&gt;Description&lt;/th&gt;&lt;/tr&gt;
  &lt;tr&gt;&lt;td&gt;treemacs-indentation&lt;/td&gt;&lt;td&gt;2&lt;/td&gt;&lt;td&gt;The number of times each level is indented in the file tree. If specified as ‘(INTEGER px), indentation will be a single INTEGER pixels wide space.&lt;/td&gt;&lt;/tr&gt;
  &lt;tr&gt;&lt;td&gt;treemacs-indentation-string&lt;/td&gt;&lt;td&gt;” ”&lt;/td&gt;&lt;td&gt;The string that is used to create indentation when &lt;code&gt;treemacs-indentation&lt;/code&gt; is not specified as pixels.&lt;/td&gt;&lt;/tr&gt;
  &lt;tr&gt;&lt;td&gt;treemacs-width&lt;/td&gt;&lt;td&gt;35&lt;/td&gt;&lt;td&gt;Width of the treemacs window.&lt;/td&gt;&lt;/tr&gt;
  &lt;tr&gt;&lt;td&gt;treemacs-show-hidden-files&lt;/td&gt;&lt;td&gt;t&lt;/td&gt;&lt;td&gt;Dotfiles will be shown if this is set to t and be hidden otherwise.&lt;/td&gt;&lt;/tr&gt;
  &lt;tr&gt;&lt;td&gt;treemacs-follow-after-init&lt;/td&gt;&lt;td&gt;nil&lt;/td&gt;&lt;td&gt;When t follow the currently selected file after initializing the treemacs buffer, regardless of &lt;code&gt;treemacs-follow-mode&lt;/code&gt; setting.&lt;/td&gt;&lt;/tr&gt;
  &lt;tr&gt;&lt;td&gt;treemacs-sorting&lt;/td&gt;&lt;td&gt;alphabetic-asc&lt;/td&gt;&lt;td&gt;Indicates how treemacs will sort its files and directories. (Files will always be shown after directories.)&lt;/td&gt;&lt;/tr&gt;
  &lt;tr&gt;&lt;td&gt;treemacs-ignored-file-predicates&lt;/td&gt;&lt;td&gt;(treemacs–std-ignore-file-predicate)&lt;/td&gt;&lt;td&gt;List of predicates to test for files and directories ignored by Emacs. Ignored files will &lt;b&gt;never&lt;/b&gt; be shown in the treemacs buffer.&lt;/td&gt;&lt;/tr&gt;
  &lt;tr&gt;&lt;td&gt;treemacs-pre-file-insert-predicates&lt;/td&gt;&lt;td&gt;nil&lt;/td&gt;&lt;td&gt;List of predicates to test for files and directories not to be rendered. Unlike &lt;code&gt;treemacs-ignored-file-predicates&lt;/code&gt; these predicates apply when files’ git status information is available.&lt;/td&gt;&lt;/tr&gt;
  &lt;tr&gt;&lt;td&gt;treemacs-file-event-delay&lt;/td&gt;&lt;td&gt;5000&lt;/td&gt;&lt;td&gt;How long (in milliseconds) to collect file events before refreshing. See also &lt;code&gt;treemacs-filewatch-mode&lt;/code&gt;.&lt;/td&gt;&lt;/tr&gt;
  &lt;tr&gt;&lt;td&gt;treemacs-goto-tag-strategy&lt;/td&gt;&lt;td&gt;refetch-index&lt;/td&gt;&lt;td&gt;Indicates how to move to a tag when its buffer is dead.&lt;/td&gt;&lt;/tr&gt;
  &lt;tr&gt;&lt;td&gt;treemacs-default-visit-action&lt;/td&gt;&lt;td&gt;treemacs-visit-node-no-split&lt;/td&gt;&lt;td&gt;Default action for opening a node (e.g. file, directory, tag). &lt;code&gt;treemacs-visit-file-default&lt;/code&gt; action in &lt;code&gt;treemacs-*-actions-config&lt;/code&gt; calls this function.&lt;/td&gt;&lt;/tr&gt;
  &lt;tr&gt;&lt;td&gt;treemacs-RET-actions-config&lt;/td&gt;&lt;td&gt;Prefers visiting nodes over closing/opening&lt;/td&gt;&lt;td&gt;Alist defining the behaviour of &lt;code&gt;treemacs-RET-action&lt;/code&gt;.&lt;/td&gt;&lt;/tr&gt;
  &lt;tr&gt;&lt;td&gt;treemacs-TAB-actions-config&lt;/td&gt;&lt;td&gt;Prefers closing/opening nodes over visiting&lt;/td&gt;&lt;td&gt;Alist defining the behaviour of &lt;code&gt;treemacs-TAB-action&lt;/code&gt;.&lt;/td&gt;&lt;/tr&gt;
  &lt;tr&gt;&lt;td&gt;treemacs-doubleclick-actions-config&lt;/td&gt;&lt;td&gt;Closes/opens tags and visits files&lt;/td&gt;&lt;td&gt;Alist defining the behaviour of &lt;code&gt;treemacs-doubleclick-action&lt;/code&gt;.&lt;/td&gt;&lt;/tr&gt;
  &lt;tr&gt;&lt;td&gt;treemacs-collapse-dirs&lt;/td&gt;&lt;td&gt;0&lt;/td&gt;&lt;td&gt;Collapse this many directories into one, when possible. A directory is collapsible when its content consists of nothing but another directory.&lt;/td&gt;&lt;/tr&gt;
  &lt;tr&gt;&lt;td&gt;treemacs-silent-refresh&lt;/td&gt;&lt;td&gt;nil&lt;/td&gt;&lt;td&gt;When non-nil a completed refresh will not be announced with a log message. This applies both to manual refreshing as well as automatic (due to &lt;code&gt;treemacs-filewatch-mode&lt;/code&gt;).&lt;/td&gt;&lt;/tr&gt;
  &lt;tr&gt;&lt;td&gt;treemacs-silent-filewatch&lt;/td&gt;&lt;td&gt;nil&lt;/td&gt;&lt;td&gt;When non-nil a refresh due to &lt;code&gt;filewatch-mode&lt;/code&gt; will cause no log message.&lt;/td&gt;&lt;/tr&gt;
  &lt;tr&gt;&lt;td&gt;treemacs-is-never-other-window&lt;/td&gt;&lt;td&gt;nil&lt;/td&gt;&lt;td&gt;Prevents treemacs from being selected with &lt;code&gt;other-window&lt;/code&gt;.&lt;/td&gt;&lt;/tr&gt;
  &lt;tr&gt;&lt;td&gt;treemacs-position&lt;/td&gt;&lt;td&gt;left&lt;/td&gt;&lt;td&gt;Position of treemacs buffer. Valid values are &lt;code&gt;left&lt;/code&gt;, &lt;code&gt;right&lt;/code&gt;.&lt;/td&gt;&lt;/tr&gt;
  &lt;tr&gt;&lt;td&gt;treemacs-tag-follow-delay&lt;/td&gt;&lt;td&gt;1.5&lt;/td&gt;&lt;td&gt;Delay in seconds of inactivity for &lt;code&gt;treemacs-tag-follow-mode&lt;/code&gt; to trigger.&lt;/td&gt;&lt;/tr&gt;
  &lt;tr&gt;&lt;td&gt;treemacs-tag-follow-cleanup&lt;/td&gt;&lt;td&gt;t&lt;/td&gt;&lt;td&gt;When non-nil &lt;code&gt;treemacs-tag-follow-mode&lt;/code&gt; will keep only the current file’s tags visible.&lt;/td&gt;&lt;/tr&gt;
  &lt;tr&gt;&lt;td&gt;treemacs-project-follow-cleanup&lt;/td&gt;&lt;td&gt;nil&lt;/td&gt;&lt;td&gt;When non-nil &lt;code&gt;treemacs-follow-mode&lt;/code&gt; will keep only the current project expanded and all others closed.&lt;/td&gt;&lt;/tr&gt;
  &lt;tr&gt;&lt;td&gt;treemacs-no-png-images&lt;/td&gt;&lt;td&gt;nil&lt;/td&gt;&lt;td&gt;When non-nil treemacs will use TUI string icons even when running in a GUI.&lt;/td&gt;&lt;/tr&gt;
  &lt;tr&gt;&lt;td&gt;treemacs-python-executable&lt;/td&gt;&lt;td&gt;(treemacs–find-python3)&lt;/td&gt;&lt;td&gt;Python 3 binary used by treemacs.&lt;/td&gt;&lt;/tr&gt;
  &lt;tr&gt;&lt;td&gt;treemacs-recenter-after-file-follow&lt;/td&gt;&lt;td&gt;nil&lt;/td&gt;&lt;td&gt;Decides if and when to call &lt;code&gt;recenter&lt;/code&gt; when &lt;code&gt;treemacs-follow-mode&lt;/code&gt; moves to a new file.&lt;/td&gt;&lt;/tr&gt;
  &lt;tr&gt;&lt;td&gt;treemacs-recenter-after-tag-follow&lt;/td&gt;&lt;td&gt;nil&lt;/td&gt;&lt;td&gt;Decides if and when to call &lt;code&gt;recenter&lt;/code&gt; when &lt;code&gt;treemacs-tag-follow-mode&lt;/code&gt; moves to a new tag.&lt;/td&gt;&lt;/tr&gt;
  &lt;tr&gt;&lt;td&gt;treemacs-recenter-after-project-jump&lt;/td&gt;&lt;td&gt;‘always&lt;/td&gt;&lt;td&gt;Decides if and when to call &lt;code&gt;recenter&lt;/code&gt; when navigating between projects.&lt;/td&gt;&lt;/tr&gt;
  &lt;tr&gt;&lt;td&gt;treemacs-recenter-after-project-expand&lt;/td&gt;&lt;td&gt;‘on-distance&lt;/td&gt;&lt;td&gt;Decides if and when to call &lt;code&gt;recenter&lt;/code&gt; when expanding a project node.&lt;/td&gt;&lt;/tr&gt;
  &lt;tr&gt;&lt;td&gt;treemacs-recenter-distance&lt;/td&gt;&lt;td&gt;0.1&lt;/td&gt;&lt;td&gt;Minimum distance from window top/bottom (0.1 = 10%) before treemacs calls &lt;code&gt;recenter&lt;/code&gt; in tag/file-follow-mode.&lt;/td&gt;&lt;/tr&gt;
  &lt;tr&gt;&lt;td&gt;treemacs-pulse-on-success&lt;/td&gt;&lt;td&gt;t&lt;/td&gt;&lt;td&gt;When non-nil treemacs will pulse the current line as a success indicator, e.g. when creating a file.&lt;/td&gt;&lt;/tr&gt;
  &lt;tr&gt;&lt;td&gt;treemacs-pulse-on-failure&lt;/td&gt;&lt;td&gt;t&lt;/td&gt;&lt;td&gt;When non-nil treemacs will pulse the current line as a failure indicator, e.g. when failing to find a file’s tags.&lt;/td&gt;&lt;/tr&gt;
  &lt;tr&gt;&lt;td&gt;treemacs-elisp-imenu-expression&lt;/td&gt;&lt;td&gt;[too large to list]&lt;/td&gt;&lt;td&gt;The imenu expression treemacs uses in elisp buffers.&lt;/td&gt;&lt;/tr&gt;
  &lt;tr&gt;&lt;td&gt;treemacs-persist-file&lt;/td&gt;&lt;td&gt;~/.emacs.d/.cache/treemacs-persist&lt;/td&gt;&lt;td&gt;Path to the file treemacs uses to persist its state.&lt;/td&gt;&lt;/tr&gt;
  &lt;tr&gt;&lt;td&gt;treemacs-last-error-persist-file&lt;/td&gt;&lt;td&gt;~/.emacs.d/.cache/treemacs-persist-at-last-error&lt;/td&gt;&lt;td&gt;Path to the file treemacs uses to persist its state.&lt;/td&gt;&lt;/tr&gt;
  &lt;tr&gt;&lt;td&gt;treemacs-space-between-root-nodes&lt;/td&gt;&lt;td&gt;t&lt;/td&gt;&lt;td&gt;When non-nil treemacs will separate root nodes with an empty line.&lt;/td&gt;&lt;/tr&gt;
  &lt;tr&gt;&lt;td&gt;treemacs-wrap-around&lt;/td&gt;&lt;td&gt;t&lt;/td&gt;&lt;td&gt;When non-nil treemacs will wrap around at the buffer edges when moving between lines.&lt;/td&gt;&lt;/tr&gt;
  &lt;tr&gt;&lt;td&gt;treemacs–fringe-indicator-bitmap&lt;/td&gt;&lt;td&gt;[vertical bar]&lt;/td&gt;&lt;td&gt;The fringe bitmap used by the fringe-indicator minor mode.&lt;/td&gt;&lt;/tr&gt;
  &lt;tr&gt;&lt;td&gt;treemacs-deferred-git-apply-delay&lt;/td&gt;&lt;td&gt;0.5&lt;/td&gt;&lt;td&gt;Seconds of idle time for git highlighting to apply when using the deferred &lt;code&gt;treemacs-git-mode&lt;/code&gt;.&lt;/td&gt;&lt;/tr&gt;
  &lt;tr&gt;&lt;td&gt;treemacs-file-follow-delay&lt;/td&gt;&lt;td&gt;0.2&lt;/td&gt;&lt;td&gt;Delay in seconds of idle time for treemacs to follow the selected window.&lt;/td&gt;&lt;/tr&gt;
  &lt;tr&gt;&lt;td&gt;treemacs-display-in-side-window&lt;/td&gt;&lt;td&gt;t&lt;/td&gt;&lt;td&gt;When non-nil treemacs will use a dedicated &lt;a href="https://www.gnu.org/software/emacs/draft/manual/html_node/elisp/Side-Windows.html" rel="nofollow"&gt;side-window&lt;/a&gt;.&lt;/td&gt;&lt;/tr&gt;
  &lt;tr&gt;&lt;td&gt;treemacs-max-git-entries&lt;/td&gt;&lt;td&gt;5000&lt;/td&gt;&lt;td&gt;Maximum number of git status entries treemacs will process. Anything above that number will be ignored.&lt;/td&gt;&lt;/tr&gt;
  &lt;tr&gt;&lt;td&gt;treemacs-missing-project-action&lt;/td&gt;&lt;td&gt;ask&lt;/td&gt;&lt;td&gt;When a persisted project is missing from filesystem, &lt;code&gt;ask&lt;/code&gt; will prompt for action, &lt;code&gt;keep&lt;/code&gt; will keep the project in the project list, and &lt;code&gt;remove&lt;/code&gt; will remove it from it without prompt.&lt;/td&gt;&lt;/tr&gt;
  &lt;tr&gt;&lt;td&gt;treemacs-show-cursor&lt;/td&gt;&lt;td&gt;nil&lt;/td&gt;&lt;td&gt;When non-nil the cursor will stay visible in the treemacs buffer.&lt;/td&gt;&lt;/tr&gt;
  &lt;tr&gt;&lt;td&gt;treemacs-git-command-pipe&lt;/td&gt;&lt;td&gt;””&lt;/td&gt;&lt;td&gt;Text to be appended to treemacs’ git command. Useful for filtering with something like grep.&lt;/td&gt;&lt;/tr&gt;
  &lt;tr&gt;&lt;td&gt;treemacs-no-delete-other-windows&lt;/td&gt;&lt;td&gt;t&lt;/td&gt;&lt;td&gt;Prevents the treemacs window from being deleted by commands like &lt;code&gt;delete-other-windows&lt;/code&gt; and &lt;code&gt;magit-status&lt;/code&gt;.&lt;/td&gt;&lt;/tr&gt;
  &lt;tr&gt;&lt;td&gt;treemacs-eldoc-display&lt;/td&gt;&lt;td&gt;t&lt;/td&gt;&lt;td&gt;Enables eldoc display of the file path at point. Requires &lt;code&gt;eldoc-mode&lt;/code&gt;.&lt;/td&gt;&lt;/tr&gt;
  &lt;tr&gt;&lt;td&gt;treemacs-bookmark-title-template&lt;/td&gt;&lt;td&gt;“Treemacs - ${project}: ${label}”&lt;/td&gt;&lt;td&gt;When using &lt;code&gt;bookmark-set&lt;/code&gt; in Treemacs, the default template for a bookmark label. The following patterns are available: “${project}”, “${label}”, “${label:N}”, ${label-path}”, “${label-path:N}”, “${file-path}”, “${file-path:N}”.&lt;/td&gt;&lt;/tr&gt;
  &lt;tr&gt;&lt;td&gt;treemacs-file-extension-regex&lt;/td&gt;&lt;td&gt;Text after last period&lt;/td&gt;&lt;td&gt;Determines how treemacs detects a file extension. Can be set to use text after first or last period.&lt;/td&gt;&lt;/tr&gt;
  &lt;tr&gt;&lt;td&gt;treemacs-directory-name-transformer&lt;/td&gt;&lt;td&gt;identity&lt;/td&gt;&lt;td&gt;Transformer function that is applied to directory names before rendering for any sort of cosmetic effect.&lt;/td&gt;&lt;/tr&gt;
  &lt;tr&gt;&lt;td&gt;treemacs-file-name-transformer&lt;/td&gt;&lt;td&gt;identity&lt;/td&gt;&lt;td&gt;Transformer function that is applied to file names before rendering for any sort of cosmetic effect.&lt;/td&gt;&lt;/tr&gt;
&lt;/tbody&gt;&lt;/table&gt;
&lt;h2&gt;&lt;a id="user-content-faces" class="anchor" aria-hidden="true" href="#faces"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Faces&lt;/h2&gt;
&lt;p&gt;Treemacs defines and uses the following faces:&lt;/p&gt;
&lt;table&gt;
  &lt;tbody&gt;&lt;tr&gt;&lt;th&gt;Face&lt;/th&gt;&lt;th&gt;Based on&lt;/th&gt;&lt;th&gt;Description&lt;/th&gt;&lt;/tr&gt;
  &lt;tr&gt;&lt;td&gt;treemacs-directory-face&lt;/td&gt;&lt;td&gt;font-lock-function-name-face&lt;/td&gt;&lt;td&gt;Face used for directories.&lt;/td&gt;&lt;/tr&gt;
  &lt;tr&gt;&lt;td&gt;treemacs-directory-collapsed-face&lt;/td&gt;&lt;td&gt;treemacs-directory-face&lt;/td&gt;&lt;td&gt;Face used for collapsed part of directories.&lt;/td&gt;&lt;/tr&gt;
  &lt;tr&gt;&lt;td&gt;treemacs-file-face&lt;/td&gt;&lt;td&gt;default&lt;/td&gt;&lt;td&gt;Face used for files.&lt;/td&gt;&lt;/tr&gt;
  &lt;tr&gt;&lt;td&gt;treemacs-root-face&lt;/td&gt;&lt;td&gt;font-lock-constant-face&lt;/td&gt;&lt;td&gt;Face used for project roots.&lt;/td&gt;&lt;/tr&gt;
  &lt;tr&gt;&lt;td&gt;treemacs-root-unreadable-face&lt;/td&gt;&lt;td&gt;treemacs-root-face&lt;/td&gt;&lt;td&gt;Face used for local unreadable project roots.&lt;/td&gt;&lt;/tr&gt;
  &lt;tr&gt;&lt;td&gt;treemacs-root-remote-face&lt;/td&gt;&lt;td&gt;font-lock-function-name-face, treemacs-root-face&lt;/td&gt;&lt;td&gt;Face used for readable remote (Tramp) project roots.&lt;/td&gt;&lt;/tr&gt;
  &lt;tr&gt;&lt;td&gt;treemacs-root-remote-unreadable-face&lt;/td&gt;&lt;td&gt;treemacs-root-unreadable-face&lt;/td&gt;&lt;td&gt;Face used for unreadable remote (Tramp) project roots.&lt;/td&gt;&lt;/tr&gt;
  &lt;tr&gt;&lt;td&gt;treemacs-root-remote-disconnected-face&lt;/td&gt;&lt;td&gt;warning, treemacs-root-face&lt;/td&gt;&lt;td&gt;Face used for disconnected remote (Tramp) project roots.&lt;/td&gt;&lt;/tr&gt;
  &lt;tr&gt;&lt;td&gt;treemacs-tags-face&lt;/td&gt;&lt;td&gt;font-lock-builtin-face&lt;/td&gt;&lt;td&gt;Face used for tags.&lt;/td&gt;&lt;/tr&gt;
  &lt;tr&gt;&lt;td&gt;treemacs-help-title-face&lt;/td&gt;&lt;td&gt;font-lock-constant-face&lt;/td&gt;&lt;td&gt;Face used for the title of the helpful hydra.&lt;/td&gt;&lt;/tr&gt;
  &lt;tr&gt;&lt;td&gt;treemacs-help-column-face&lt;/td&gt;&lt;td&gt;font-lock-keyword-face&lt;/td&gt;&lt;td&gt;Face used for the column headers of the helpful hydra.&lt;/td&gt;&lt;/tr&gt;
  &lt;tr&gt;&lt;td&gt;treemacs-git-*-face&lt;/td&gt;&lt;td&gt;various font lock faces&lt;/td&gt;&lt;td&gt;Faces used by treemacs for various git states.&lt;/td&gt;&lt;/tr&gt;
  &lt;tr&gt;&lt;td&gt;treemacs-term-node-face&lt;/td&gt;&lt;td&gt;font-lock-string-face&lt;/td&gt;&lt;td&gt;Face for directory node symbols used by treemacs when it runs in a terminal.&lt;/td&gt;&lt;/tr&gt;
  &lt;tr&gt;&lt;td&gt;treemacs-on-success-pulse-face&lt;/td&gt;&lt;td&gt;:fg #111111 :bg #669966&lt;/td&gt;&lt;td&gt;Pulse face used when pulsing on a successful action.&lt;/td&gt;&lt;/tr&gt;
  &lt;tr&gt;&lt;td&gt;treemacs-on-failure-puse-face&lt;/td&gt;&lt;td&gt;:fg #111111 :bg #ab3737&lt;/td&gt;&lt;td&gt;Pulse face used when pulsing on a failed action.&lt;/td&gt;&lt;/tr&gt;
&lt;/tbody&gt;&lt;/table&gt;
&lt;h2&gt;&lt;a id="user-content-evil-compatibility" class="anchor" aria-hidden="true" href="#evil-compatibility"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Evil compatibility&lt;/h2&gt;
&lt;p&gt;To make treemacs get along with evil-mode you need to install and load &lt;code&gt;treemacs-evil&lt;/code&gt;. It does not define any functions
  or offer any configuration options, making sure it is loaded is sufficient.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-customizing-themes-and-icons" class="anchor" aria-hidden="true" href="#customizing-themes-and-icons"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Customizing Themes and Icons&lt;/h2&gt;
&lt;h3&gt;&lt;a id="user-content-creating-and-modifying-themes" class="anchor" aria-hidden="true" href="#creating-and-modifying-themes"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Creating and Modifying Themes&lt;/h3&gt;
&lt;p&gt;Creating and modifying themes and icons is all done in a single step using dedicated macros.&lt;/p&gt;
&lt;p&gt;To create a theme use &lt;code&gt;treemacs-create-theme&lt;/code&gt;. It requires the name of the theme and accepts 3 optional keyword
  arguments: the directory the theme’s icons are stored in (if it’s using png icons), the name of the theme it’s extending
  and the config, a final form that’s responsible for creating all the theme’s icons. A config will typically consist of
  nothing but calls to &lt;code&gt;treemacs-create-icon&lt;/code&gt;:&lt;/p&gt;
&lt;div class="highlight highlight-source-emacs-lisp"&gt;&lt;pre&gt;(treemacs-create-theme &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;Default&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;
  &lt;span class="pl-c1"&gt;:icon-directory&lt;/span&gt; (f-join treemacs-dir &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;icons/default&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
  &lt;span class="pl-c1"&gt;:config&lt;/span&gt;
  (&lt;span class="pl-k"&gt;progn&lt;/span&gt;
    (treemacs-create-icon &lt;span class="pl-c1"&gt;:file&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;root.png&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;   &lt;span class="pl-c1"&gt;:fallback&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;            &lt;span class="pl-c1"&gt;:extensions&lt;/span&gt; (root))
    (treemacs-create-icon &lt;span class="pl-c1"&gt;:file&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;emacs.png&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;  &lt;span class="pl-c1"&gt;:fallback&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;🗏 &lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;          &lt;span class="pl-c1"&gt;:extensions&lt;/span&gt; (&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;el&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;elc&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;))
    (treemacs-create-icon &lt;span class="pl-c1"&gt;:file&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;readme.png&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; &lt;span class="pl-c1"&gt;:fallback&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;🗏 &lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;          &lt;span class="pl-c1"&gt;:extensions&lt;/span&gt; (&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;readme.md&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;))
    (treemacs-create-icon &lt;span class="pl-c1"&gt;:icon&lt;/span&gt; (all-the-icons-icon-for-file &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;yaml&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;) &lt;span class="pl-c1"&gt;:extensions&lt;/span&gt; (&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;yml&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;yaml&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;))))&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;The &lt;code&gt;:file&lt;/code&gt; argument is relative to the icon directory of the theme being created. When not using image icons the
  &lt;code&gt;:icon-directory&lt;/code&gt; argument can be omitted and the &lt;code&gt;:file&lt;/code&gt; argument can be switched for &lt;code&gt;:icon&lt;/code&gt; to supply the icon string
  directly. The TUI fallback is also optional, ” ” is used by default. Finally the list of extensions determines which
  file extensions the icon should be used for.&lt;/p&gt;
&lt;p&gt;For treemacs an extension is either the entire file name or the text after the last period (unless
  &lt;code&gt;treemacs-file-extension-regex&lt;/code&gt; is customized). This means it can match normal file names like “init.el”, extensionless
  file names like “Makefile”. Because the full name is checked first it is possible to give special files their own icon,
  for example “Readme.md” can use a different icon than normal markdown files.&lt;/p&gt;
&lt;p&gt;Instead of a string extension a symbol can also be used. In this case treemacs will also create a variable for that icon
  named &lt;code&gt;treemacs-icon-$symbol&lt;/code&gt;. Treemacs uses several such icon variables and any new theme should define their own
  versions (it it’s not extending the default theme). The following icons are used:&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;root&lt;/li&gt;
  &lt;li&gt;dir-closed&lt;/li&gt;
  &lt;li&gt;dir-open&lt;/li&gt;
  &lt;li&gt;fallback&lt;/li&gt;
  &lt;li&gt;tag-open&lt;/li&gt;
  &lt;li&gt;tag-closed&lt;/li&gt;
  &lt;li&gt;tag-leaf&lt;/li&gt;
  &lt;li&gt;error&lt;/li&gt;
  &lt;li&gt;info&lt;/li&gt;
  &lt;li&gt;warning&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Analogous to creating a new theme &lt;code&gt;treemacs-modify-theme&lt;/code&gt; can be used to change, or add to, an existing theme:&lt;/p&gt;
&lt;div class="highlight highlight-source-emacs-lisp"&gt;&lt;pre&gt;(treemacs-modify-theme &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;Default&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;
  &lt;span class="pl-c1"&gt;:icon-directory&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;/other/icons/dir&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;
  &lt;span class="pl-c1"&gt;:config&lt;/span&gt;
  (&lt;span class="pl-k"&gt;progn&lt;/span&gt;
    (treemacs-create-icon &lt;span class="pl-c1"&gt;:icon&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;+&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; &lt;span class="pl-c1"&gt;:extensions&lt;/span&gt; (dir-closed))
    (treemacs-create-icon &lt;span class="pl-c1"&gt;:icon&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;-&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; &lt;span class="pl-c1"&gt;:extensions&lt;/span&gt; (dir-open))))&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Finally keep in mind that treemacs’ icons are all buffer-local values, and will most likely not be defined when trying
  to access their values directly. When you need to programmatically access some of treemacs’ icons you should use
  &lt;code&gt;treemacs-get-icon-value&lt;/code&gt;:&lt;/p&gt;
&lt;div class="highlight highlight-source-emacs-lisp"&gt;&lt;pre&gt;(treemacs-get-icon-value &lt;span class="pl-c1"&gt;'root&lt;/span&gt; &lt;span class="pl-c1"&gt;nil&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;Default&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
(treemacs-get-icon-value &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;org&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; &lt;span class="pl-c1"&gt;t&lt;/span&gt;)&lt;/pre&gt;&lt;/div&gt;
&lt;h3&gt;&lt;a id="user-content-custom-icons" class="anchor" aria-hidden="true" href="#custom-icons"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Custom Icons&lt;/h3&gt;
&lt;p&gt;Treemacs also offers a quick and straighforward way to add a (gui) icon to the currently active theme, without caring
  for its name or declaring icon directories:&lt;/p&gt;
&lt;div class="highlight highlight-source-emacs-lisp"&gt;&lt;pre&gt;(&lt;span class="pl-k"&gt;defvar&lt;/span&gt; &lt;span class="pl-en"&gt;treemacs-custom-html-icon&lt;/span&gt; (all-the-icons-icon-for-file &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;name.html&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;))
(treemacs-define-custom-icon treemacs-custom-html-icon &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;html&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;htm&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;b&gt;Important&lt;/b&gt;: There is a restriction that all icons must must be exactly 2 characters long. That’s including the space
  that will separate an icon from the filename.&lt;/p&gt;
&lt;h4&gt;&lt;a id="user-content-icons-according-to-auto-mode-alist" class="anchor" aria-hidden="true" href="#icons-according-to-auto-mode-alist"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Icons according to &lt;code&gt;auto-mode-alist&lt;/code&gt;&lt;/h4&gt;
&lt;p&gt;For some file extensions, like “.cc” or “.hh”, it is not immediately obvious which major mode will open these files, and
  thus which icon they should be assigned. Treemacs offers the option that automate this decision based on
  &lt;code&gt;auto-mode-alist&lt;/code&gt;. You can use the function &lt;code&gt;treemacs-map-icons-with-auto-mode-alist&lt;/code&gt; to change the assigned icons for a
  list of file extensions based on the major mode the icons are mapped to in &lt;code&gt;auto-mode-alist&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;&lt;code&gt;treemacs-map-icons-with-auto-mode-alist&lt;/code&gt; takes 2 arguments: first a list of file extensions, then an alist that decides
  which icon should be used for which mapped major mode. For example the code to decide the icons for “.hh” and “.cc”
  files with &lt;code&gt;auto-mode-alist&lt;/code&gt; would look like this:&lt;/p&gt;
&lt;div class="highlight highlight-source-emacs-lisp"&gt;&lt;pre&gt;(treemacs-map-icons-with-auto-mode-alist
 '(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;.cc&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;.hh&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
 '((&lt;span class="pl-c1"&gt;c-mode&lt;/span&gt;   &lt;span class="pl-k"&gt;.&lt;/span&gt; (treemacs-get-icon-value &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;c&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;))
   (&lt;span class="pl-c1"&gt;c++-mode&lt;/span&gt; &lt;span class="pl-k"&gt;.&lt;/span&gt; (treemacs-get-icon-value &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;cpp&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;))))&lt;/pre&gt;&lt;/div&gt;
&lt;h4&gt;&lt;a id="user-content-gui-vs-tui" class="anchor" aria-hidden="true" href="#gui-vs-tui"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;GUI vs TUI&lt;/h4&gt;
&lt;p&gt;It is possible to force treemacs to use the simple TUI icons in GUI mode by setting &lt;code&gt;treemacs-no-png-images&lt;/code&gt; to t.&lt;/p&gt;
&lt;h4&gt;&lt;a id="user-content-resizing-icons" class="anchor" aria-hidden="true" href="#resizing-icons"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Resizing Icons&lt;/h4&gt;
&lt;p&gt;If your emacs has been compiled with imagemagick support you can arbitrarily change the size of treemacs’ icons by
  (interactively or programmatically) calling &lt;code&gt;treemacs-resize-icons&lt;/code&gt;.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-indent-guide" class="anchor" aria-hidden="true" href="#indent-guide"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Indent guide&lt;/h3&gt;
&lt;p&gt;Not really part of the icons, but a useful visual feature nonetheless: An indent guide like effect can be created by
  selecting appropriate values for &lt;code&gt;treemacs-indentation&lt;/code&gt; and &lt;code&gt;treemacs-indentation-string&lt;/code&gt;:&lt;/p&gt;
&lt;div class="highlight highlight-source-emacs-lisp"&gt;&lt;pre&gt;(&lt;span class="pl-k"&gt;setq&lt;/span&gt; treemacs-indentation-string (&lt;span class="pl-c1"&gt;propertize&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt; ⫶ &lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; &lt;span class="pl-c1"&gt;'face&lt;/span&gt; &lt;span class="pl-c1"&gt;'font-lock-comment-face&lt;/span&gt;)
      treemacs-indentation &lt;span class="pl-c1"&gt;1&lt;/span&gt;)&lt;/pre&gt;&lt;/div&gt;
&lt;h1&gt;&lt;a id="user-content-keymap" class="anchor" aria-hidden="true" href="#keymap"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Keymap&lt;/h1&gt;
&lt;h2&gt;&lt;a id="user-content-unbound-functions" class="anchor" aria-hidden="true" href="#unbound-functions"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Unbound functions&lt;/h2&gt;
&lt;p&gt;These functions are not bound to any keys by default. It’s left up to users to find the most convenient key binds.&lt;/p&gt;
&lt;table&gt;
  &lt;tbody&gt;&lt;tr&gt;&lt;th&gt;Action&lt;/th&gt;&lt;th&gt;Description&lt;/th&gt;&lt;/tr&gt;
  &lt;tr&gt;&lt;td&gt;treemacs&lt;/td&gt;&lt;td&gt;Show/Hide/Initialize treemacs.&lt;/td&gt;&lt;/tr&gt;
  &lt;tr&gt;&lt;td&gt;treemacs-bookmark&lt;/td&gt;&lt;td&gt;Find a bookmark in treemacs.&lt;/td&gt;&lt;/tr&gt;
  &lt;tr&gt;&lt;td&gt;treemacs-find-file&lt;/td&gt;&lt;td&gt;Find and focus the current file in treemacs.&lt;/td&gt;&lt;/tr&gt;
  &lt;tr&gt;&lt;td&gt;treemacs-find-tag&lt;/td&gt;&lt;td&gt;Find and focus the current tag in treemacs.&lt;/td&gt;&lt;/tr&gt;
  &lt;tr&gt;&lt;td&gt;treemacs-select-window&lt;/td&gt;&lt;td&gt;Select the treemacs window if it is visible. Call &lt;code&gt;treemacs&lt;/code&gt; if it is not.&lt;/td&gt;&lt;/tr&gt;
  &lt;tr&gt;&lt;td&gt;treemacs-delete-other-windows&lt;/td&gt;&lt;td&gt;Same as &lt;code&gt;delete-other-windows&lt;/code&gt;, but will not delete the treemacs window.&lt;/td&gt;&lt;/tr&gt;
  &lt;tr&gt;&lt;td&gt;treemacs-show-changelog&lt;/td&gt;&lt;td&gt;Opens a buffer showing the changelog.&lt;/td&gt;&lt;/tr&gt;
  &lt;tr&gt;&lt;td&gt;treemacs-load-theme&lt;/td&gt;&lt;td&gt;Load a different icon theme.&lt;/td&gt;&lt;/tr&gt;
  &lt;tr&gt;&lt;td&gt;treemacs-projectile&lt;/td&gt;&lt;td&gt;Add a project from projectile to treemacs.&lt;/td&gt;&lt;/tr&gt;
  &lt;tr&gt;&lt;td&gt;treemacs-add-and-display-current-project&lt;/td&gt;&lt;td&gt;Add current project to treemacs and open it.&lt;/td&gt;&lt;/tr&gt;
  &lt;tr&gt;&lt;td&gt;treemacs-select-scope-type&lt;/td&gt;&lt;td&gt;Select the scope of treemacs buffers in which they are unique&lt;/td&gt;&lt;/tr&gt;
&lt;/tbody&gt;&lt;/table&gt;
&lt;h2&gt;&lt;a id="user-content-default-keymaps" class="anchor" aria-hidden="true" href="#default-keymaps"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Default keymaps&lt;/h2&gt;
&lt;p&gt;Treemacs’ keybindings are distributed to several keymaps, based on common keybindings:&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-project-keybinds-prefix-c-c-c-p" class="anchor" aria-hidden="true" href="#project-keybinds-prefix-c-c-c-p"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Project Keybinds (Prefix &lt;code&gt;C-c C-p&lt;/code&gt;)&lt;/h3&gt;
&lt;table&gt;
  &lt;tbody&gt;&lt;tr&gt;&lt;th&gt;Key&lt;/th&gt;&lt;th&gt;Action&lt;/th&gt;&lt;th&gt;Description&lt;/th&gt;&lt;/tr&gt;
  &lt;tr&gt;&lt;td&gt;C-c C-p a&lt;/td&gt;&lt;td&gt;treemacs-add-project-to-workspace&lt;/td&gt;&lt;td&gt;Select a new project to add to the treemacs workspace.&lt;/td&gt;&lt;/tr&gt;
  &lt;tr&gt;&lt;td&gt;C-c C-p p&lt;/td&gt;&lt;td&gt;treemacs-projectile&lt;/td&gt;&lt;td&gt;Select a projectile project to add to the workspace.&lt;/td&gt;&lt;/tr&gt;
  &lt;tr&gt;&lt;td&gt;C-c C-p d&lt;/td&gt;&lt;td&gt;treemacs-remove-project-from-workspace&lt;/td&gt;&lt;td&gt;Remove project at point from the workspace.&lt;/td&gt;&lt;/tr&gt;
  &lt;tr&gt;&lt;td&gt;C-c C-p r&lt;/td&gt;&lt;td&gt;treemacs-rename-project&lt;/td&gt;&lt;td&gt;Rename project at point.&lt;/td&gt;&lt;/tr&gt;
  &lt;tr&gt;&lt;td&gt;C-c C-p c c&lt;/td&gt;&lt;td&gt;treemacs-collapse-project&lt;/td&gt;&lt;td&gt;Collapse project at point.&lt;/td&gt;&lt;/tr&gt;
  &lt;tr&gt;&lt;td&gt;C-c C-p c o/S-TAB&lt;/td&gt;&lt;td&gt;treemacs-collapse-all-projects&lt;/td&gt;&lt;td&gt;Collapse all projects.&lt;/td&gt;&lt;/tr&gt;
  &lt;tr&gt;&lt;td&gt;C-c C-p c o&lt;/td&gt;&lt;td&gt;treemacs-collapse-all-projects&lt;/td&gt;&lt;td&gt;Collapse all projects except the project at point.&lt;/td&gt;&lt;/tr&gt;
&lt;/tbody&gt;&lt;/table&gt;
&lt;h3&gt;&lt;a id="user-content-workspaces-keybinds-prefix-c-c-c-w" class="anchor" aria-hidden="true" href="#workspaces-keybinds-prefix-c-c-c-w"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Workspaces Keybinds (Prefix &lt;code&gt;C-c C-w&lt;/code&gt;)&lt;/h3&gt;
&lt;table&gt;
  &lt;tbody&gt;&lt;tr&gt;&lt;th&gt;Key&lt;/th&gt;&lt;th&gt;Action&lt;/th&gt;&lt;th&gt;Description&lt;/th&gt;&lt;/tr&gt;
  &lt;tr&gt;&lt;td&gt;C-c C-w r&lt;/td&gt;&lt;td&gt;treemacs-rename-workspace&lt;/td&gt;&lt;td&gt;Rename a workspace.&lt;/td&gt;&lt;/tr&gt;
  &lt;tr&gt;&lt;td&gt;C-c C-w a&lt;/td&gt;&lt;td&gt;treemacs-create-workspace&lt;/td&gt;&lt;td&gt;Create a new workspace.&lt;/td&gt;&lt;/tr&gt;
  &lt;tr&gt;&lt;td&gt;C-c C-w d&lt;/td&gt;&lt;td&gt;treemacs-remove-workspace&lt;/td&gt;&lt;td&gt;Delete a workspace.&lt;/td&gt;&lt;/tr&gt;
  &lt;tr&gt;&lt;td&gt;C-c C-w s&lt;/td&gt;&lt;td&gt;treemacs-switch-workspace&lt;/td&gt;&lt;td&gt;Switch the current workspace.&lt;/td&gt;&lt;/tr&gt;
  &lt;tr&gt;&lt;td&gt;C-c C-w e&lt;/td&gt;&lt;td&gt;treemacs-edit-workspaces&lt;/td&gt;&lt;td&gt;Edit workspace layout via org-mode.&lt;/td&gt;&lt;/tr&gt;
  &lt;tr&gt;&lt;td&gt;C-c C-w f&lt;/td&gt;&lt;td&gt;treemacs-set-fallback-workspace&lt;/td&gt;&lt;td&gt;Select the default fallback workspace.&lt;/td&gt;&lt;/tr&gt;
&lt;/tbody&gt;&lt;/table&gt;
&lt;h3&gt;&lt;a id="user-content-node-visit-keybinds-prefix-o" class="anchor" aria-hidden="true" href="#node-visit-keybinds-prefix-o"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Node Visit Keybinds (Prefix &lt;code&gt;o&lt;/code&gt;)&lt;/h3&gt;
&lt;table&gt;
  &lt;tbody&gt;&lt;tr&gt;&lt;th&gt;Key&lt;/th&gt;&lt;th&gt;Action&lt;/th&gt;&lt;th&gt;Description&lt;/th&gt;&lt;/tr&gt;
  &lt;tr&gt;&lt;td&gt;ov&lt;/td&gt;&lt;td&gt;treemacs-visit-node-vertical-split&lt;/td&gt;&lt;td&gt;Open current file or tag by vertically splitting &lt;code&gt;next-window&lt;/code&gt;.&lt;/td&gt;&lt;/tr&gt;
  &lt;tr&gt;&lt;td&gt;oh&lt;/td&gt;&lt;td&gt;treemacs-visit-node-horizontal-split&lt;/td&gt;&lt;td&gt;Open current file or tag by horizontally splitting &lt;code&gt;next-window&lt;/code&gt;.&lt;/td&gt;&lt;/tr&gt;
  &lt;tr&gt;&lt;td&gt;oo/RET&lt;/td&gt;&lt;td&gt;treemacs-visit-node-no-split&lt;/td&gt;&lt;td&gt;Open current file or tag, performing no split and using &lt;code&gt;next-window&lt;/code&gt; directly.&lt;/td&gt;&lt;/tr&gt;
  &lt;tr&gt;&lt;td&gt;oaa&lt;/td&gt;&lt;td&gt;treemacs-visit-node-ace&lt;/td&gt;&lt;td&gt;Open current file or tag, using ace-window to decide which window to open the file in.&lt;/td&gt;&lt;/tr&gt;
  &lt;tr&gt;&lt;td&gt;oah&lt;/td&gt;&lt;td&gt;treemacs-visit-node-ace-horizontal-split&lt;/td&gt;&lt;td&gt;Open current file or tag by horizontally splitting a window selected by ace-window.&lt;/td&gt;&lt;/tr&gt;
  &lt;tr&gt;&lt;td&gt;oav&lt;/td&gt;&lt;td&gt;treemacs-visit-node-ace-vertical-split&lt;/td&gt;&lt;td&gt;Open current file or tag by vertically splitting a window selected by ace-window.&lt;/td&gt;&lt;/tr&gt;
  &lt;tr&gt;&lt;td&gt;or&lt;/td&gt;&lt;td&gt;treemacs-visit-node-in-most-recently-used-window&lt;/td&gt;&lt;td&gt;Open current file or tag in the most recently used window.&lt;/td&gt;&lt;/tr&gt;
  &lt;tr&gt;&lt;td&gt;ox&lt;/td&gt;&lt;td&gt;treemacs-visit-node-in-external-application&lt;/td&gt;&lt;td&gt;Open current file according to its mime type in an external application. Linux, Windows and Mac are supported.&lt;/td&gt;&lt;/tr&gt;
&lt;/tbody&gt;&lt;/table&gt;
&lt;h3&gt;&lt;a id="user-content-toggle-keybinds-prefix-t" class="anchor" aria-hidden="true" href="#toggle-keybinds-prefix-t"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Toggle Keybinds (Prefix &lt;code&gt;t&lt;/code&gt;)&lt;/h3&gt;
&lt;table&gt;
  &lt;tbody&gt;&lt;tr&gt;&lt;th&gt;Key&lt;/th&gt;&lt;th&gt;Action&lt;/th&gt;&lt;th&gt;Description&lt;/th&gt;&lt;/tr&gt;
  &lt;tr&gt;&lt;td&gt;th&lt;/td&gt;&lt;td&gt;treemacs-toggle-show-dotfiles&lt;/td&gt;&lt;td&gt;Toggle the hiding and displaying of dotfiles.&lt;/td&gt;&lt;/tr&gt;
  &lt;tr&gt;&lt;td&gt;tw&lt;/td&gt;&lt;td&gt;treemacs-toggle-fixed-width&lt;/td&gt;&lt;td&gt;Toggle whether the treemacs window should have a fixed width. See also treemacs-width.&lt;/td&gt;&lt;/tr&gt;
  &lt;tr&gt;&lt;td&gt;tf&lt;/td&gt;&lt;td&gt;treemacs-follow-mode&lt;/td&gt;&lt;td&gt;Toggle &lt;code&gt;treemacs-follow-mode&lt;/code&gt;.&lt;/td&gt;&lt;/tr&gt;
  &lt;tr&gt;&lt;td&gt;ta&lt;/td&gt;&lt;td&gt;treemacs-filewatch-mode&lt;/td&gt;&lt;td&gt;Toggle &lt;code&gt;treemacs-filewatch-mode&lt;/code&gt;.&lt;/td&gt;&lt;/tr&gt;
  &lt;tr&gt;&lt;td&gt;tv&lt;/td&gt;&lt;td&gt;treemacs-fringe-indicator-mode&lt;/td&gt;&lt;td&gt;Toggle &lt;code&gt;treemacs-fringe-indicator-mode&lt;/code&gt;.&lt;/td&gt;&lt;/tr&gt;
&lt;/tbody&gt;&lt;/table&gt;
&lt;h3&gt;&lt;a id="user-content-copy-keybinds-prefix-y" class="anchor" aria-hidden="true" href="#copy-keybinds-prefix-y"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Copy Keybinds (Prefix &lt;code&gt;y&lt;/code&gt;)&lt;/h3&gt;
&lt;table&gt;
  &lt;tbody&gt;&lt;tr&gt;&lt;th&gt;Key&lt;/th&gt;&lt;th&gt;Action&lt;/th&gt;&lt;th&gt;Description&lt;/th&gt;&lt;/tr&gt;
  &lt;tr&gt;&lt;td&gt;yy&lt;/td&gt;&lt;td&gt;treemacs-copy-path-at-point&lt;/td&gt;&lt;td&gt;Copy the absolute path of the node at point.&lt;/td&gt;&lt;/tr&gt;
  &lt;tr&gt;&lt;td&gt;yr&lt;/td&gt;&lt;td&gt;treemacs-copy-project-root&lt;/td&gt;&lt;td&gt;Copy the absolute path of the project root for the node at point.&lt;/td&gt;&lt;/tr&gt;
  &lt;tr&gt;&lt;td&gt;yf&lt;/td&gt;&lt;td&gt;treemacs-copy-file&lt;/td&gt;&lt;td&gt;Copy the file at point.&lt;/td&gt;&lt;/tr&gt;
&lt;/tbody&gt;&lt;/table&gt;
&lt;h3&gt;&lt;a id="user-content-general-keybinds" class="anchor" aria-hidden="true" href="#general-keybinds"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;General Keybinds&lt;/h3&gt;
&lt;table&gt;
  &lt;tbody&gt;&lt;tr&gt;&lt;th&gt;Key&lt;/th&gt;&lt;th&gt;Action&lt;/th&gt;&lt;th&gt;Description&lt;/th&gt;&lt;/tr&gt;
  &lt;tr&gt;&lt;td&gt;?&lt;/td&gt;&lt;td&gt;treemacs-helpful-hydra&lt;/td&gt;&lt;td&gt;Summon the helpful hydra to show you the treemacs keymap.&lt;/td&gt;&lt;/tr&gt;
  &lt;tr&gt;&lt;td&gt;j/n&lt;/td&gt;&lt;td&gt;treemacs-next-line&lt;/td&gt;&lt;td&gt;Go to the next line.&lt;/td&gt;&lt;/tr&gt;
  &lt;tr&gt;&lt;td&gt;k/p&lt;/td&gt;&lt;td&gt;treemacs-previous-line&lt;/td&gt;&lt;td&gt;Go to the previous line.&lt;/td&gt;&lt;/tr&gt;
  &lt;tr&gt;&lt;td&gt;M-J/N&lt;/td&gt;&lt;td&gt;treemacs-next-line-other-window&lt;/td&gt;&lt;td&gt;Go to the next line in &lt;code&gt;next-window&lt;/code&gt;.&lt;/td&gt;&lt;/tr&gt;
  &lt;tr&gt;&lt;td&gt;M-K/P&lt;/td&gt;&lt;td&gt;treemacs-previous-line-other-window&lt;/td&gt;&lt;td&gt;Go to the previous line in &lt;code&gt;next-window&lt;/code&gt;..&lt;/td&gt;&lt;/tr&gt;
  &lt;tr&gt;&lt;td&gt;&amp;lt;PgUp&amp;gt;&lt;/td&gt;&lt;td&gt;treemacs-next-page-other-window&lt;/td&gt;&lt;td&gt;Go to the next page in &lt;code&gt;next-window&lt;/code&gt;.&lt;/td&gt;&lt;/tr&gt;
  &lt;tr&gt;&lt;td&gt;&amp;lt;PgDn&amp;gt;&lt;/td&gt;&lt;td&gt;treemacs-previous-page-other-window&lt;/td&gt;&lt;td&gt;Go to the previous page in &lt;code&gt;next-window&lt;/code&gt;..&lt;/td&gt;&lt;/tr&gt;
  &lt;tr&gt;&lt;td&gt;M-j/M-n&lt;/td&gt;&lt;td&gt;treemacs-next-neighbour&lt;/td&gt;&lt;td&gt;Go to the next same-level neighbour of the current node.&lt;/td&gt;&lt;/tr&gt;
  &lt;tr&gt;&lt;td&gt;M-k/M-p&lt;/td&gt;&lt;td&gt;treemacs-previous-neighbour&lt;/td&gt;&lt;td&gt;Go to the previous same-level neighbour of the current node.&lt;/td&gt;&lt;/tr&gt;
  &lt;tr&gt;&lt;td&gt;u&lt;/td&gt;&lt;td&gt;treemacs-goto-parent-node&lt;/td&gt;&lt;td&gt;Go to parent of node at point, if possible.&lt;/td&gt;&lt;/tr&gt;
  &lt;tr&gt;&lt;td&gt;&amp;lt;M-Up&amp;gt;&lt;/td&gt;&lt;td&gt;treemacs-move-project-up&lt;/td&gt;&lt;td&gt;Switch positions of project at point and the one above it.&lt;/td&gt;&lt;/tr&gt;
  &lt;tr&gt;&lt;td&gt;&amp;lt;M-Down&amp;gt;&lt;/td&gt;&lt;td&gt;treemacs-move-project-down&lt;/td&gt;&lt;td&gt;Switch positions of project at point and the one below it.&lt;/td&gt;&lt;/tr&gt;
  &lt;tr&gt;&lt;td&gt;w&lt;/td&gt;&lt;td&gt;treemacs-set-width&lt;/td&gt;&lt;td&gt;Set a new value for the width of the treemacs window.&lt;/td&gt;&lt;/tr&gt;
  &lt;tr&gt;&lt;td&gt;RET&lt;/td&gt;&lt;td&gt;treemacs-RET-action&lt;/td&gt;&lt;td&gt;Run the action defined in &lt;code&gt;treemacs-RET-actions-config&lt;/code&gt; for the current node.&lt;/td&gt;&lt;/tr&gt;
  &lt;tr&gt;&lt;td&gt;TAB&lt;/td&gt;&lt;td&gt;treemacs-TAB-action&lt;/td&gt;&lt;td&gt;Run the action defined in &lt;code&gt;treemacs-TAB-actions-config&lt;/code&gt; for the current node.&lt;/td&gt;&lt;/tr&gt;
  &lt;tr&gt;&lt;td&gt;g/r/gr&lt;/td&gt;&lt;td&gt;treemacs-refresh&lt;/td&gt;&lt;td&gt;Refresh the project at point.&lt;/td&gt;&lt;/tr&gt;
  &lt;tr&gt;&lt;td&gt;d&lt;/td&gt;&lt;td&gt;treemacs-delete&lt;/td&gt;&lt;td&gt;Delete node at point.&lt;/td&gt;&lt;/tr&gt;
  &lt;tr&gt;&lt;td&gt;R&lt;/td&gt;&lt;td&gt;treemacs-rename&lt;/td&gt;&lt;td&gt;Rename node at point.&lt;/td&gt;&lt;/tr&gt;
  &lt;tr&gt;&lt;td&gt;cf&lt;/td&gt;&lt;td&gt;treemacs-create-file&lt;/td&gt;&lt;td&gt;Create a file.&lt;/td&gt;&lt;/tr&gt;
  &lt;tr&gt;&lt;td&gt;cd&lt;/td&gt;&lt;td&gt;treemacs-create-dir&lt;/td&gt;&lt;td&gt;Create a directory.&lt;/td&gt;&lt;/tr&gt;
  &lt;tr&gt;&lt;td&gt;q&lt;/td&gt;&lt;td&gt;treemacs-quit&lt;/td&gt;&lt;td&gt;Hide the treemacs window.&lt;/td&gt;&lt;/tr&gt;
  &lt;tr&gt;&lt;td&gt;Q&lt;/td&gt;&lt;td&gt;treemacs-kill-buffer&lt;/td&gt;&lt;td&gt;Delete the treemacs buffer.&lt;/td&gt;&lt;/tr&gt;
  &lt;tr&gt;&lt;td&gt;P&lt;/td&gt;&lt;td&gt;treemacs-peek&lt;/td&gt;&lt;td&gt;Peek at the file (or tag) at point without fully opening it.&lt;/td&gt;&lt;/tr&gt;
  &lt;tr&gt;&lt;td&gt;yy&lt;/td&gt;&lt;td&gt;treemacs-copy-path-at-point&lt;/td&gt;&lt;td&gt;Copy the absolute path of the node at point.&lt;/td&gt;&lt;/tr&gt;
  &lt;tr&gt;&lt;td&gt;yr&lt;/td&gt;&lt;td&gt;treemacs-copy-project-root&lt;/td&gt;&lt;td&gt;Copy the absolute path of the project root for the node at point.&lt;/td&gt;&lt;/tr&gt;
  &lt;tr&gt;&lt;td&gt;yf&lt;/td&gt;&lt;td&gt;treemacs-copy-file&lt;/td&gt;&lt;td&gt;Copy the file at point.&lt;/td&gt;&lt;/tr&gt;
  &lt;tr&gt;&lt;td&gt;m&lt;/td&gt;&lt;td&gt;treemacs-move-file&lt;/td&gt;&lt;td&gt;Move the file at point.&lt;/td&gt;&lt;/tr&gt;
  &lt;tr&gt;&lt;td&gt;s&lt;/td&gt;&lt;td&gt;treemacs-resort&lt;/td&gt;&lt;td&gt;Set a new value for &lt;code&gt;treemacs-sorting&lt;/code&gt;.&lt;/td&gt;&lt;/tr&gt;
  &lt;tr&gt;&lt;td&gt;b&lt;/td&gt;&lt;td&gt;treemacs-add-bookmark&lt;/td&gt;&lt;td&gt;Bookmark the currently selected files’s, dir’s or tag’s location.&lt;/td&gt;&lt;/tr&gt;
  &lt;tr&gt;&lt;td&gt;h&lt;/td&gt;&lt;td&gt;treemacs-root-up&lt;/td&gt;&lt;td&gt;Move treemacs’ root one level upward. Only works with a single project in the workspace.&lt;/td&gt;&lt;/tr&gt;
  &lt;tr&gt;&lt;td&gt;l&lt;/td&gt;&lt;td&gt;treemacs-root-down&lt;/td&gt;&lt;td&gt;Move treemacs’ root into the directory at point. Only works with a single project in the workspace.&lt;/td&gt;&lt;/tr&gt;
  &lt;tr&gt;&lt;td&gt;H&lt;/td&gt;&lt;td&gt;treemacs-collapse-parent-node&lt;/td&gt;&lt;td&gt;Collapse the parent of the node at point.&lt;/td&gt;&lt;/tr&gt;
  &lt;tr&gt;&lt;td&gt;\!&lt;/td&gt;&lt;td&gt;treemacs-run-shell-command-for-current-node&lt;/td&gt;&lt;td&gt;Run an asynchronous shell command on the current node, replacing “$path” with its path.&lt;/td&gt;&lt;/tr&gt;
  &lt;tr&gt;&lt;td&gt;M-!&lt;/td&gt;&lt;td&gt;treemacs-run-shell-command-in-project-root&lt;/td&gt;&lt;td&gt;Run an asynchronous shell command in the root of the current project, replacing “$path” with its path.&lt;/td&gt;&lt;/tr&gt;
&lt;/tbody&gt;&lt;/table&gt;
&lt;h1&gt;&lt;a id="user-content-compatibility" class="anchor" aria-hidden="true" href="#compatibility"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Compatibility&lt;/h1&gt;
&lt;p&gt;The correctness of treemacs’ display behaviour is, to a large degree, ensured through window properties and reacting to
  changes in the window configuration. The packages most likely to cause trouble for treemacs are therefore those that
  interfere with Emacs’ buffer spawning and window splitting behaviour. Treemacs is included in Spacemacs and I am a
  Spacemacs user, therefore treemacs guarantees first-class support &amp;amp; compatibility for window-managing packages used in
  Spacemacs, namely &lt;a href="https://github.com/Bad-ptr/persp-mode.el"&gt;persp&lt;/a&gt;, &lt;a href="https://github.com/wasamasa/eyebrowse"&gt;eyebrowse&lt;/a&gt;, &lt;a href="https://github.com/m2ym/popwin-el"&gt;popwin&lt;/a&gt; and &lt;a href="https://github.com/bmag/emacs-purpose"&gt;window-purpose&lt;/a&gt;, as well as &lt;a href="https://github.com/wasamasa/shackle"&gt;shackle&lt;/a&gt;. For everything else there may be
  issues and, depending on the complexity of the problem, I may decide it is not worth fixing.&lt;/p&gt;
&lt;p&gt;Aside from this there are the following known incompatibilities:&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;Any package invoking &lt;code&gt;font-lock-ensure&lt;/code&gt; in the treemacs buffer. This will reset the faces of treemacs’ buttons (once)
    and is a known &lt;a href="https://debbugs.gnu.org/cgi/bugreport.cgi?bug=28599" rel="nofollow"&gt;emacs bug&lt;/a&gt;.&lt;/li&gt;
  &lt;li&gt;A possible cause of this issue using an old version of swiper.&lt;/li&gt;
  &lt;li&gt;Rainbow mode activated in treemacs will likewise produce this behaviour. Make sure not to include rainbow-mode as
    part of &lt;code&gt;special-mode-hook&lt;/code&gt;, since this is the mode &lt;code&gt;treemacs-mode&lt;/code&gt; is derived from.&lt;/li&gt;
&lt;/ul&gt;
&lt;h1&gt;&lt;a id="user-content-faq" class="anchor" aria-hidden="true" href="#faq"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;FAQ&lt;/h1&gt;
&lt;ul&gt;
  &lt;li&gt;How do I hide files I don’t want to see?
    &lt;p&gt;You need to define a predicate function and add it to &lt;code&gt;treemacs-ignored-file-predicates&lt;/code&gt;. This function accepts two
      arguments, a file’s name and its absolute path, and must return non-nil when treemacs should hide that file.&lt;/p&gt;
    &lt;p&gt;For example the code to ignore files eiter called “foo” or located in ”&lt;i&gt;x/y/z&lt;/i&gt;” would look like this:&lt;/p&gt;
    &lt;div class="highlight highlight-source-emacs-lisp"&gt;&lt;pre&gt;(&lt;span class="pl-c1"&gt;with-eval-after-load&lt;/span&gt; &lt;span class="pl-c1"&gt;'treemacs&lt;/span&gt;

  (&lt;span class="pl-k"&gt;defun&lt;/span&gt; &lt;span class="pl-e"&gt;treemacs-ignore-example&lt;/span&gt; (&lt;span class="pl-v"&gt;filename&lt;/span&gt; &lt;span class="pl-v"&gt;absolute-path&lt;/span&gt;)
    (&lt;span class="pl-k"&gt;or&lt;/span&gt; (&lt;span class="pl-c1"&gt;string-equal&lt;/span&gt; filename &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;foo&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
        (&lt;span class="pl-c1"&gt;string-prefix-p&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;/x/y/z/&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; absolute-path)))

  (&lt;span class="pl-c1"&gt;add-to-list&lt;/span&gt; &lt;span class="pl-c1"&gt;'treemacs-ignored-file-predicates&lt;/span&gt; &lt;span class="pl-c1"&gt;#&lt;span class="pl-c1"&gt;'treemacs-ignore-example&lt;/span&gt;&lt;/span&gt;))
    &lt;/pre&gt;&lt;/div&gt;
  &lt;/li&gt;
  &lt;li&gt;How do I keep treemacs from showing files that are ignored by git?
    &lt;p&gt;Short answer:&lt;/p&gt;
    &lt;div class="highlight highlight-source-emacs-lisp"&gt;&lt;pre&gt;(&lt;span class="pl-c1"&gt;with-eval-after-load&lt;/span&gt; &lt;span class="pl-c1"&gt;'treemacs&lt;/span&gt;
  (&lt;span class="pl-c1"&gt;add-to-list&lt;/span&gt; &lt;span class="pl-c1"&gt;'treemacs-pre-file-insert-predicates&lt;/span&gt; &lt;span class="pl-c1"&gt;#&lt;span class="pl-c1"&gt;'treemacs-is-file-git-ignored?&lt;/span&gt;&lt;/span&gt;))
    &lt;/pre&gt;&lt;/div&gt;
    &lt;p&gt;A slightly longer explanation about how you can hook into the render process can be found in the documentation string
      of &lt;code&gt;treemacs-pre-file-insert-predicates&lt;/code&gt;.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;Why am I seeing no file icons and only +/- for directories?
    &lt;p&gt;Treemacs will permanently fall back on its simple TUI icons if it detects that the emacs instance it is run in cannot
      create images. You can test this by evaluating &lt;code&gt;(create-image "" 'png)&lt;/code&gt;. If this code returns an error like “Invalid
      image type ´png´” your emacs does not support images.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;How do I get treemacs to stop telling me when it’s been refreshed, especially with filewatch-mode?
    &lt;p&gt;See &lt;code&gt;treemacs-silent-refresh&lt;/code&gt; and &lt;code&gt;treemacs-silent-filewatch&lt;/code&gt;.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;ENOSPC / No space left on device
    &lt;p&gt;You may run into this error when you use filewatch-mode. The solution is to increase the number of allowed user
      watches, as described in &lt;a href="https://stackoverflow.com/questions/16748737/grunt-watch-error-waiting-fatal-error-watch-enospc" rel="nofollow"&gt;this link&lt;/a&gt;. You’ll also want to see what’s responsible for setting all those file watches in
      the first place, since treemacs only watches the directories it is displaying and so won’t produce more than a couple
      dozen watches at best.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;Why is treemacs warning me about not being able to find some background colors and falling back to something else?
    &lt;p&gt;Treemacs needs those colors to make sure that background colors of its icons correctly align with hl-line-mode. Png
      images’ backgrounds are not highlighted by hl-line-mode by default, treemacs is manually correcting this every time
      hl-line’s overlay is moved. To make that correction work it needs to know two colors: the current theme’s &lt;code&gt;default&lt;/code&gt;
      background, and its &lt;code&gt;hl-line&lt;/code&gt; background color. If treemacs cannot find hl-lines’s background color it falls back to
      the default background color. If it cannot even find the default background it will fall back to #2d2d31. The
      warnings serve to inform you of that fallback.&lt;/p&gt;
    &lt;p&gt;If your theme does not define a required color you can set it yourself before treemacs loads like this:&lt;/p&gt;
    &lt;div class="highlight highlight-source-emacs-lisp"&gt;&lt;pre&gt;(&lt;span class="pl-c1"&gt;set-face-attribute&lt;/span&gt; &lt;span class="pl-c1"&gt;'hl-line&lt;/span&gt; &lt;span class="pl-c1"&gt;nil&lt;/span&gt; &lt;span class="pl-c1"&gt;:background&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;#333333&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
    &lt;/pre&gt;&lt;/div&gt;
    &lt;p&gt;If you just want to disable the warnings you can do so by defining the variable &lt;code&gt;treemacs-no-load-time-warnings&lt;/code&gt;. Its
      exact value is irrelevant, all that matters is that it exists at all. Since the warnings are issues when treemacs is
      first being loaded the variable must be defined &lt;b&gt;before&lt;/b&gt; treemacs is initialized. This is best achieved by adding the
      line &lt;code&gt;(defvar treemacs-no-load-time-warnings t)&lt;/code&gt; to treemacs’ use-package &lt;code&gt;:init&lt;/code&gt; block.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;Can I expand &lt;b&gt;everything&lt;/b&gt; under a node?
    &lt;p&gt;Yes, you just need to expand it with a &lt;a href="https://www.emacswiki.org/emacs/PrefixArgument" rel="nofollow"&gt;prefix argument&lt;/a&gt;. Closing nodes with a prefix argument works as well. In this
      case treemacs will forget about the nodes opened below the one that was closed and not reopen them automatically.&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;
&lt;h1&gt;&lt;a id="user-content-contributing" class="anchor" aria-hidden="true" href="#contributing"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Contributing&lt;/h1&gt;
&lt;p&gt;Contributions are very much welcome, but should fit the general scope and style of treemacs. The following is a list of
  guidelines that should be met (exceptions confirm the rule):&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;There should be one commit per feature.&lt;/li&gt;
  &lt;li&gt;Commit messages should start with a note in brackets that roughly describes the area the commit relates to, for
    example &lt;code&gt;[Icons]&lt;/code&gt; if you add an icon.&lt;/li&gt;
  &lt;li&gt;Code must be in the right place (what with the codebase being split in many small files). If there is no right place
    it probably goes into treemacs-core-utils.el which is where all the general implementation details go.&lt;/li&gt;
  &lt;li&gt;New features must be documented in the readme (for example mentioning new config options in the &lt;a href="#variables"&gt;Config Table&lt;/a&gt;).&lt;/li&gt;
  &lt;li&gt;There must not be any compiler warnings.&lt;/li&gt;
  &lt;li&gt;The test suite must pass.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Treemacs uses cask to setup a local testing environment and a Makefile that simplifies compiling and testing the
  codebase. First run &lt;code&gt;cask install&lt;/code&gt; to locally pull treemacs’ dependencies. Then you can use the following Makefile
  targets:&lt;/p&gt;
&lt;dl&gt;
  &lt;dt&gt;make prepare&lt;/dt&gt;&lt;dd&gt;Downloads and updates Cask’s dependencies. Is a dependency of the &lt;code&gt;test&lt;/code&gt; and &lt;code&gt;compile&lt;/code&gt; targets.&lt;/dd&gt;
  &lt;dt&gt;make compile&lt;/dt&gt;&lt;dd&gt;Compiles the code base (and treats compiler warnings as errors).&lt;/dd&gt;
  &lt;dt&gt;make clean&lt;/dt&gt;&lt;dd&gt;Removes the generated .elc files.&lt;/dd&gt;
  &lt;dt&gt;make lint&lt;/dt&gt;&lt;dd&gt;Runs first &lt;code&gt;compile&lt;/code&gt; then &lt;code&gt;clean&lt;/code&gt;, even if the former fails.&lt;/dd&gt;
  &lt;dt&gt;make test&lt;/dt&gt;&lt;dd&gt;Runs the testsuite, once in a graphical environment and once in the terminal.&lt;/dd&gt;
&lt;/dl&gt;
&lt;p&gt;Finally if you want to just add an icon you can take &lt;a href="https://github.com/Alexander-Miller/treemacs/commit/94df3e36af865dab2c76b549b1a61f418e3bf5be"&gt;this commit&lt;/a&gt; as an example (though the icons have since been moved
  into their own module in &lt;code&gt;treemacs-icons.el&lt;/code&gt;).&lt;/p&gt;
&lt;h1&gt;&lt;a id="user-content-working-with-the-code-base" class="anchor" aria-hidden="true" href="#working-with-the-code-base"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Working With The Code Base&lt;/h1&gt;
&lt;p&gt;If you want to delve into the treemacs’ code base, check out &lt;a href="https://github.com/Alexander-Miller/treemacs/wiki"&gt;the wiki&lt;/a&gt; for some general pointers.&lt;/p&gt;
&lt;h1&gt;&lt;a id="user-content-dependencies" class="anchor" aria-hidden="true" href="#dependencies"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Dependencies&lt;/h1&gt;
&lt;ul&gt;
  &lt;li&gt;emacs &amp;gt;= 25.2&lt;/li&gt;
  &lt;li&gt;f.el&lt;/li&gt;
  &lt;li&gt;s.el&lt;/li&gt;
  &lt;li&gt;dash&lt;/li&gt;
  &lt;li&gt;cl-lib&lt;/li&gt;
  &lt;li&gt;ace-window&lt;/li&gt;
  &lt;li&gt;pfuture&lt;/li&gt;
  &lt;li&gt;ht&lt;/li&gt;
  &lt;li&gt;hydra&lt;/li&gt;
  &lt;li&gt;(optionally) evil&lt;/li&gt;
  &lt;li&gt;(optionally) projectile&lt;/li&gt;
  &lt;li&gt;(optionally) winum&lt;/li&gt;
  &lt;li&gt;(optionally) python(3)&lt;/li&gt;
&lt;/ul&gt;
&lt;/article&gt;&lt;/div&gt;</description><author>Alexander-Miller</author><guid isPermaLink="false">https://github.com/Alexander-Miller/treemacs</guid><pubDate>Tue, 11 Feb 2020 00:05:00 GMT</pubDate></item><item><title>emacs-lsp/lsp-mode #6 in Emacs Lisp, This month</title><link>https://github.com/emacs-lsp/lsp-mode</link><description>&lt;p&gt;&lt;i&gt;Emacs client/library for the Language Server Protocol&lt;/i&gt;&lt;/p&gt;&lt;div id="readme" class="org" data-path="README.org"&gt;&lt;article class="markdown-body entry-content p-5" itemprop="text"&gt;&lt;p&gt;&lt;a href="https://melpa.org/#/lsp-mode" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/9af67d09707b47dd26115a48505d481f9dcdd805/68747470733a2f2f6d656c70612e6f72672f7061636b616765732f6c73702d6d6f64652d62616467652e737667" alt="https://melpa.org/packages/lsp-mode-badge.svg" data-canonical-src="https://melpa.org/packages/lsp-mode-badge.svg" style="max-width:100%;"&gt;&lt;/a&gt;
  &lt;a href="https://stable.melpa.org/#/lsp-mode" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/7a2cc5cd5fb1a171dde8e45435a353f849853123/68747470733a2f2f737461626c652e6d656c70612e6f72672f7061636b616765732f6c73702d6d6f64652d62616467652e737667" alt="https://stable.melpa.org/packages/lsp-mode-badge.svg" data-canonical-src="https://stable.melpa.org/packages/lsp-mode-badge.svg" style="max-width:100%;"&gt;&lt;/a&gt;
  &lt;a href="https://gitter.im/emacs-lsp/lsp-mode" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/40a1fe7a717b706a101e6e1d917dfdb3f422a8c3/68747470733a2f2f6261646765732e6769747465722e696d2f656d6163732d6c73702f6c73702d6d6f64652e737667" alt="https://badges.gitter.im/emacs-lsp/lsp-mode.svg" data-canonical-src="https://badges.gitter.im/emacs-lsp/lsp-mode.svg" style="max-width:100%;"&gt;&lt;/a&gt;
  &lt;a href="https://travis-ci.org/emacs-lsp/lsp-mode" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/5674691682ca175709f1682ede1931f44a188aef/68747470733a2f2f7472617669732d63692e6f72672f656d6163732d6c73702f6c73702d6d6f64652e7376673f6272616e63683d6d6173746572" alt="https://travis-ci.org/emacs-lsp/lsp-mode.svg?branch=master" data-canonical-src="https://travis-ci.org/emacs-lsp/lsp-mode.svg?branch=master" style="max-width:100%;"&gt;&lt;/a&gt;
  &lt;a href="https://coveralls.io/github/emacs-lsp/lsp-mode" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/536576b840965fd3ec331aeec141a1dc36469075/68747470733a2f2f636f766572616c6c732e696f2f7265706f732f6769746875622f656d6163732d6c73702f6c73702d6d6f64652f62616467652e737667" alt="https://coveralls.io/repos/github/emacs-lsp/lsp-mode/badge.svg" data-canonical-src="https://coveralls.io/repos/github/emacs-lsp/lsp-mode/badge.svg" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="examples/logo.png"&gt;&lt;img src="examples/logo.png" alt="examples/logo.png" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h1&gt;&lt;a id="user-content-language-server-protocol-support-for-emacs" class="anchor" aria-hidden="true" href="#language-server-protocol-support-for-emacs"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Language Server Protocol Support for Emacs&lt;/h1&gt;
&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="examples/head.png"&gt;&lt;img src="examples/head.png" alt="examples/head.png" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-table-of-contents" class="anchor" aria-hidden="true" href="#table-of-contents"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Table of Contents&lt;/h2&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;a href="#language-server-protocol-support-for-emacs"&gt;Language Server Protocol Support for Emacs&lt;/a&gt;
    &lt;ul&gt;
      &lt;li&gt;&lt;a href="#why"&gt;Why?&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href="#overview"&gt;Overview&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href="#installation"&gt;Installation&lt;/a&gt;
        &lt;ul&gt;
          &lt;li&gt;&lt;a href="#install-via-melpa"&gt;Install via melpa&lt;/a&gt;&lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
      &lt;li&gt;&lt;a href="#configuration"&gt;Configuration&lt;/a&gt;
        &lt;ul&gt;
          &lt;li&gt;&lt;a href="#install-language-server"&gt;Install language server&lt;/a&gt;&lt;/li&gt;
          &lt;li&gt;&lt;a href="#configure-lsp-mode"&gt;Configure lsp-mode&lt;/a&gt;
            &lt;ul&gt;
              &lt;li&gt;&lt;a href="#vanilla-emacs"&gt;Vanilla Emacs&lt;/a&gt;&lt;/li&gt;
              &lt;li&gt;&lt;a href="#spacemacs"&gt;Spacemacs&lt;/a&gt;&lt;/li&gt;
              &lt;li&gt;&lt;a href="#use-package"&gt;use-package&lt;/a&gt;&lt;/li&gt;
              &lt;li&gt;&lt;a href="#docker"&gt;Docker&lt;/a&gt;&lt;/li&gt;
            &lt;/ul&gt;
          &lt;/li&gt;
          &lt;li&gt;&lt;a href="#performance"&gt;Performance&lt;/a&gt;
            &lt;ul&gt;
              &lt;li&gt;&lt;a href="#reporting-performance-problems"&gt;Reporting performance problems&lt;/a&gt;&lt;/li&gt;
            &lt;/ul&gt;
          &lt;/li&gt;
          &lt;li&gt;&lt;a href="#how-does-it-work"&gt;How does it work?&lt;/a&gt;&lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
      &lt;li&gt;&lt;a href="#supported-languages"&gt;Supported languages&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href="#commands"&gt;Commands&lt;/a&gt;
        &lt;ul&gt;
          &lt;li&gt;&lt;a href="#which-key-integration"&gt;which-key integration&lt;/a&gt;&lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
      &lt;li&gt;&lt;a href="#settings"&gt;Settings&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href="#screenshots"&gt;Screenshots&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href="#extensions"&gt;Extensions&lt;/a&gt;
        &lt;ul&gt;
          &lt;li&gt;&lt;a href="#tramp"&gt;TRAMP&lt;/a&gt;
            &lt;ul&gt;
              &lt;li&gt;&lt;a href="#how-does-it-work-1"&gt;How does it work?&lt;/a&gt;&lt;/li&gt;
              &lt;li&gt;&lt;a href="#sample-configuration"&gt;Sample configuration&lt;/a&gt;&lt;/li&gt;
              &lt;li&gt;&lt;a href="#dealing-with-stderr"&gt;Dealing with stderr&lt;/a&gt;&lt;/li&gt;
            &lt;/ul&gt;
          &lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
      &lt;li&gt;&lt;a href="#limitations"&gt;Limitations&lt;/a&gt;
        &lt;ul&gt;
          &lt;li&gt;&lt;a href="#file-watches"&gt;File watches&lt;/a&gt;&lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
      &lt;li&gt;&lt;a href="#contributions"&gt;Contributions&lt;/a&gt;
        &lt;ul&gt;
          &lt;li&gt;&lt;a href="#members"&gt;Members&lt;/a&gt;&lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
      &lt;li&gt;&lt;a href="#troubleshooting"&gt;Troubleshooting&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href="#adding-support-for-languages"&gt;Adding support for languages&lt;/a&gt;
        &lt;ul&gt;
          &lt;li&gt;&lt;a href="#registering-server"&gt;Registering server&lt;/a&gt;&lt;/li&gt;
          &lt;li&gt;&lt;a href="#sections"&gt;Sections&lt;/a&gt;&lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
      &lt;li&gt;&lt;a href="#faq"&gt;FAQ&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href="#see-also"&gt;See also&lt;/a&gt;&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-why" class="anchor" aria-hidden="true" href="#why"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Why?&lt;/h2&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;g-emoji class="g-emoji" alias="heart" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/2764.png"&gt;❤️&lt;/g-emoji&gt; &lt;b&gt;Community Driven&lt;/b&gt;&lt;/li&gt;
  &lt;li&gt;&lt;g-emoji class="g-emoji" alias="gem" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f48e.png"&gt;💎&lt;/g-emoji&gt; &lt;b&gt;Fully featured&lt;/b&gt; - supports &lt;b&gt;all&lt;/b&gt; features in Language Server Protocol v3.14.&lt;/li&gt;
  &lt;li&gt;&lt;g-emoji class="g-emoji" alias="rocket" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f680.png"&gt;🚀&lt;/g-emoji&gt; &lt;b&gt;Easy to configure&lt;/b&gt; - works out of the box and automatically upgrades if additional packages are present&lt;/li&gt;
  &lt;li&gt;&lt;g-emoji class="g-emoji" alias="star2" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f31f.png"&gt;🌟&lt;/g-emoji&gt; &lt;b&gt;Flexible&lt;/b&gt; - could be configured as full-blown IDE with flashy UI or minimal distraction free&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-overview" class="anchor" aria-hidden="true" href="#overview"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Overview&lt;/h2&gt;
&lt;p&gt;Client for &lt;a href="https://github.com/Microsoft/language-server-protocol/"&gt;Language Server Protocol&lt;/a&gt; (v3.14). &lt;a href="https://github.com/emacs-lsp/lsp-mode"&gt;lsp-mode&lt;/a&gt; aims to provide IDE-like experience by providing optional integration with the most popular Emacs packages like &lt;code&gt;company&lt;/code&gt;, &lt;code&gt;flycheck&lt;/code&gt; and &lt;code&gt;projectile&lt;/code&gt;.&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;Non-blocking asynchronous calls&lt;/li&gt;
  &lt;li&gt;Real-time Diagnostics/linting (via &lt;code&gt;flymake&lt;/code&gt; when Emacs &amp;gt; 26, requires flymake&amp;gt;=1.0.5 or builtin &lt;a href="https://github.com/flycheck/flycheck"&gt;flycheck&lt;/a&gt;)&lt;/li&gt;
  &lt;li&gt;Code completion - &lt;code&gt;completion-at-point&lt;/code&gt; or external &lt;a href="https://github.com/tigersoldier/company-lsp"&gt;company-lsp&lt;/a&gt;. If you want to use experimental &lt;code&gt;company-capf&lt;/code&gt; integration you may force it by setting &lt;code&gt;company-capf&lt;/code&gt; to &lt;code&gt;t&lt;/code&gt;.&lt;/li&gt;
  &lt;li&gt;Hovers - using &lt;a href="https://github.com/emacs-lsp/lsp-ui"&gt;lsp-ui&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;Code actions - using &lt;code&gt;lsp-execute-code-action&lt;/code&gt; or &lt;a href="https://github.com/emacs-lsp/lsp-ui"&gt;lsp-ui&lt;/a&gt; sideline.&lt;/li&gt;
  &lt;li&gt;Code outline - using builtin &lt;a href="https://www.gnu.org/software/emacs/manual/html_node/emacs/Imenu.html" rel="nofollow"&gt;imenu&lt;/a&gt; or &lt;code&gt;helm-imenu&lt;/code&gt;&lt;/li&gt;
  &lt;li&gt;Code navigation - using builtin &lt;a href="https://www.gnu.org/software/emacs/manual/html_node/emacs/Xref.html" rel="nofollow"&gt;xref&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;Code lens (references/implementations) - using builtin &lt;a href="https://www.gnu.org/software/emacs/manual/html_node/emacs/Xref.html" rel="nofollow"&gt;xref&lt;/a&gt; or fancy tree rendering via &lt;a href="https://github.com/emacs-lsp/lsp-treemacs"&gt;lsp-treemacs&lt;/a&gt;.&lt;/li&gt;
  &lt;li&gt;Symbol highlights&lt;/li&gt;
  &lt;li&gt;Formatting&lt;/li&gt;
  &lt;li&gt;Debugger - &lt;a href="https://github.com/yyoncho/dap-mode/"&gt;dap-mode&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;Helm integration - &lt;a href="https://github.com/emacs-lsp/helm-lsp/"&gt;helm-lsp&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;Ivy integration - &lt;a href="https://github.com/emacs-lsp/lsp-ivy/"&gt;lsp-ivy&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;Treemacs integration - &lt;a href="https://github.com/emacs-lsp/lsp-treemacs"&gt;lsp-treemacs&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;Semantic highlighting (as currently implemented by JDT LS and unreleased builds of clangd, cf. &lt;a href="https://github.com/microsoft/vscode-languageserver-node/pull/367"&gt;Semantic highlighting spec&lt;/a&gt;)&lt;/li&gt;
  &lt;li&gt;&lt;a href="https://github.com/justbur/emacs-which-key/"&gt;which-key&lt;/a&gt; integration for better discovery&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-installation" class="anchor" aria-hidden="true" href="#installation"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Installation&lt;/h2&gt;
&lt;h3&gt;&lt;a id="user-content-install-via-melpa" class="anchor" aria-hidden="true" href="#install-via-melpa"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Install via melpa&lt;/h3&gt;
&lt;p&gt;The recommended way to install &lt;code&gt;lsp-mode&lt;/code&gt; is via &lt;code&gt;package.el&lt;/code&gt; - the built-in package manager in Emacs. &lt;code&gt;lsp-mode&lt;/code&gt; is available on the two major &lt;code&gt;package.el&lt;/code&gt; community maintained repos - &lt;a href="http://stable.melpa.org" rel="nofollow"&gt;MELPA Stable&lt;/a&gt; and &lt;a href="http://melpa.org" rel="nofollow"&gt;MELPA&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;M-x &lt;code&gt;package-install&lt;/code&gt; [RET] &lt;code&gt;lsp-mode&lt;/code&gt; [RET]&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-configuration" class="anchor" aria-hidden="true" href="#configuration"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Configuration&lt;/h2&gt;
&lt;h3&gt;&lt;a id="user-content-install-language-server" class="anchor" aria-hidden="true" href="#install-language-server"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Install language server&lt;/h3&gt;
&lt;p&gt;Check the table bellow with the list of supported servers and the corresponding instructions on how to install the server.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-configure-lsp-mode" class="anchor" aria-hidden="true" href="#configure-lsp-mode"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Configure lsp-mode&lt;/h3&gt;
&lt;h4&gt;&lt;a id="user-content-vanilla-emacs" class="anchor" aria-hidden="true" href="#vanilla-emacs"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Vanilla Emacs&lt;/h4&gt;
&lt;p&gt;You could go minimal and use &lt;code&gt;lsp-mode&lt;/code&gt; as it is without external packages with the built-in &lt;code&gt;flymake&lt;/code&gt; and &lt;code&gt;completion-at-point&lt;/code&gt; or you could install the following extensions for better experience:&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;install &lt;a href="https://github.com/emacs-lsp/lsp-ui"&gt;lsp-ui&lt;/a&gt; for fancy sideline, popup documentation, VScode-like peek UI, etc.&lt;/li&gt;
  &lt;li&gt;install &lt;a href="https://github.com/flycheck/flycheck"&gt;flycheck&lt;/a&gt; if you prefer the more popular &lt;code&gt;flycheck&lt;/code&gt; over renewed &lt;code&gt;flymake&lt;/code&gt;. &lt;code&gt;lsp-mode&lt;/code&gt; will automatically pick it up.&lt;/li&gt;
  &lt;li&gt;install &lt;a href="https://github.com/tigersoldier/company-lsp"&gt;company-lsp&lt;/a&gt; if you want to use &lt;code&gt;company-mode&lt;/code&gt; for completion(optional, if not installed &lt;code&gt;lsp-mode&lt;/code&gt; will integrate with &lt;code&gt;company&lt;/code&gt; via &lt;code&gt;company-capf&lt;/code&gt;).&lt;/li&gt;
  &lt;li&gt;install &lt;a href="https://github.com/emacs-lsp/lsp-treemacs"&gt;lsp-treemacs&lt;/a&gt; for various three based UI controls (symbols, errors overview, call hierarchy, etc.)&lt;/li&gt;
  &lt;li&gt;install &lt;a href="https://github.com/emacs-lsp/helm-lsp"&gt;helm-lsp&lt;/a&gt; provides on type completion afternative of &lt;code&gt;xref-apropos&lt;/code&gt; using &lt;code&gt;helm&lt;/code&gt;.&lt;/li&gt;
  &lt;li&gt;install &lt;a href="https://github.com/emacs-lsp/lsp-ivy"&gt;lsp-ivy&lt;/a&gt; provides on type completion afternative of &lt;code&gt;xref-apropos&lt;/code&gt; using &lt;code&gt;ivy&lt;/code&gt;.&lt;/li&gt;
  &lt;li&gt;install &lt;a href="https://github.com/emacs-lsp/dap-mode"&gt;dap-mode&lt;/a&gt; if your language is supported by the debugger.&lt;/li&gt;
&lt;/ul&gt;
&lt;div class="highlight highlight-source-emacs-lisp"&gt;&lt;pre&gt;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt;; if you want to change prefix for lsp-mode keybindings.&lt;/span&gt;
(&lt;span class="pl-k"&gt;setq&lt;/span&gt; lsp-keymap-prefix &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;s-l&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)

(&lt;span class="pl-c1"&gt;require&lt;/span&gt; &lt;span class="pl-c1"&gt;'lsp-mode&lt;/span&gt;)
(&lt;span class="pl-c1"&gt;add-hook&lt;/span&gt; &lt;span class="pl-c1"&gt;'XXX-mode-hook&lt;/span&gt; &lt;span class="pl-c1"&gt;#&lt;span class="pl-c1"&gt;'lsp&lt;/span&gt;&lt;/span&gt;)&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;where &lt;code&gt;XXX&lt;/code&gt; could be major mode like &lt;code&gt;python&lt;/code&gt;, &lt;code&gt;java&lt;/code&gt;, &lt;code&gt;c++&lt;/code&gt;. Alternatively, if you want to minimize you configuration you may use &lt;code&gt;prog-mode-hook&lt;/code&gt;. In case you do that, &lt;code&gt;lsp&lt;/code&gt; will try to start for each programming mode and echo a message when there is no client registered for the current mode or if the corresponding server is not present. In addition, &lt;code&gt;lsp-mode&lt;/code&gt; will automatically detect and configure &lt;a href="https://github.com/emacs-lsp/lsp-ui"&gt;lsp-ui&lt;/a&gt; and &lt;a href="https://github.com/tigersoldier/company-lsp"&gt;company-lsp&lt;/a&gt;. To turn off that behavior you could set &lt;code&gt;lsp-auto-configure&lt;/code&gt; to &lt;code&gt;nil&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;To defer LSP server startup (and DidOpen notifications) until the buffer is visible you can use &lt;code&gt;lsp-deferred&lt;/code&gt; instead of &lt;code&gt;lsp&lt;/code&gt;:&lt;/p&gt;
&lt;div class="highlight highlight-source-emacs-lisp"&gt;&lt;pre&gt;(&lt;span class="pl-c1"&gt;add-hook&lt;/span&gt; &lt;span class="pl-c1"&gt;'XXX-mode-hook&lt;/span&gt; &lt;span class="pl-c1"&gt;#&lt;span class="pl-c1"&gt;'lsp-deferred&lt;/span&gt;&lt;/span&gt;)&lt;/pre&gt;&lt;/div&gt;
&lt;h4&gt;&lt;a id="user-content-spacemacs" class="anchor" aria-hidden="true" href="#spacemacs"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Spacemacs&lt;/h4&gt;
&lt;p&gt;&lt;a href="https://github.com/emacs-lsp/lsp-mode"&gt;lsp-mode&lt;/a&gt; is included in spacemacs develop branch. Add &lt;code&gt;lsp&lt;/code&gt; to &lt;code&gt;dotspacemacs-configuration-layers&lt;/code&gt; and configure the language that you want to use to be backed by &lt;code&gt;lsp&lt;/code&gt; backend.&lt;/p&gt;
&lt;h4&gt;&lt;a id="user-content-use-package" class="anchor" aria-hidden="true" href="#use-package"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;use-package&lt;/h4&gt;
&lt;p&gt;Replace &lt;code&gt;(require 'lsp-mode)&lt;/code&gt; with the following if you use use-package.&lt;/p&gt;
&lt;div class="highlight highlight-source-emacs-lisp"&gt;&lt;pre&gt;(&lt;span class="pl-c1"&gt;use-package&lt;/span&gt; lsp-mode
  &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt;; set prefix for lsp-command-keymap (few alternatives - "C-l", "C-c l")&lt;/span&gt;
  &lt;span class="pl-c1"&gt;:init&lt;/span&gt; (&lt;span class="pl-k"&gt;setq&lt;/span&gt; lsp-keymap-prefix &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;s-l&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
  &lt;span class="pl-c1"&gt;:hook&lt;/span&gt; (&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt;; replace XXX-mode with concrete major-mode(e. g. python-mode)&lt;/span&gt;
         (XXX-mode &lt;span class="pl-k"&gt;.&lt;/span&gt; lsp)
         &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt;; if you want which-key integration&lt;/span&gt;
         (lsp-mode &lt;span class="pl-k"&gt;.&lt;/span&gt; lsp-enable-which-key-integration))
  &lt;span class="pl-c1"&gt;:commands&lt;/span&gt; lsp)

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt;; optionally&lt;/span&gt;
(&lt;span class="pl-c1"&gt;use-package&lt;/span&gt; lsp-ui &lt;span class="pl-c1"&gt;:commands&lt;/span&gt; lsp-ui-mode)
(&lt;span class="pl-c1"&gt;use-package&lt;/span&gt; company-lsp &lt;span class="pl-c1"&gt;:commands&lt;/span&gt; company-lsp)
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt;; if you are helm user&lt;/span&gt;
(&lt;span class="pl-c1"&gt;use-package&lt;/span&gt; helm-lsp &lt;span class="pl-c1"&gt;:commands&lt;/span&gt; helm-lsp-workspace-symbol)
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt;; if you are ivy user&lt;/span&gt;
(&lt;span class="pl-c1"&gt;use-package&lt;/span&gt; lsp-ivy &lt;span class="pl-c1"&gt;:commands&lt;/span&gt; lsp-ivy-workspace-symbol)
(&lt;span class="pl-c1"&gt;use-package&lt;/span&gt; lsp-treemacs &lt;span class="pl-c1"&gt;:commands&lt;/span&gt; lsp-treemacs-errors-list)

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt;; optionally if you want to use debugger&lt;/span&gt;
(&lt;span class="pl-c1"&gt;use-package&lt;/span&gt; dap-mode)
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt;; (use-package dap-LANGUAGE) to load the dap adapter for your language&lt;/span&gt;

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt;; optional if you want which-key integration&lt;/span&gt;
(&lt;span class="pl-c1"&gt;use-package&lt;/span&gt; which-key
  &lt;span class="pl-c1"&gt;:config&lt;/span&gt;
  (which-key-mode))
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;To defer LSP server startup (and DidOpen notifications) until the buffer is visible you can use &lt;code&gt;lsp-deferred&lt;/code&gt; instead of &lt;code&gt;lsp&lt;/code&gt;:&lt;/p&gt;
&lt;div class="highlight highlight-source-emacs-lisp"&gt;&lt;pre&gt;(&lt;span class="pl-c1"&gt;use-package&lt;/span&gt; lsp-mode
  &lt;span class="pl-c1"&gt;:hook&lt;/span&gt; (XXX-mode &lt;span class="pl-k"&gt;.&lt;/span&gt; lsp-deferred)
  &lt;span class="pl-c1"&gt;:commands&lt;/span&gt; (lsp lsp-deferred))&lt;/pre&gt;&lt;/div&gt;
&lt;h4&gt;&lt;a id="user-content-docker" class="anchor" aria-hidden="true" href="#docker"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Docker&lt;/h4&gt;
&lt;p&gt;Refer to &lt;a href="https://github.com/emacs-lsp/lsp-docker/"&gt;lsp-docker&lt;/a&gt; README which provide a guide how you can run &lt;code&gt;lsp-mode&lt;/code&gt; in &lt;code&gt;docker&lt;/code&gt; container.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-performance" class="anchor" aria-hidden="true" href="#performance"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Performance&lt;/h3&gt;
&lt;p&gt;When configured properly &lt;code&gt;lsp-mode&lt;/code&gt;’s performance is on par with mainstream
  LSP clients (e. g. &lt;code&gt;VScode&lt;/code&gt;, &lt;code&gt;Theia&lt;/code&gt;, etc). Here are steps to achieve
  optimal results.&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;Use Emacs 27+ with native json support. In order to validate that you
    match this criteria do &lt;code&gt;M-: (functionp 'json-serialize) RET&lt;/code&gt;. Benchmarks
    show that Emacs 27 is &lt;code&gt;~15 times&lt;/code&gt; faster than Emacs when using Elisp json
    parser implementation.&lt;/li&gt;
  &lt;li&gt;Adjust &lt;code&gt;gc-cons-threshold&lt;/code&gt;. The default setting is too low for
    &lt;code&gt;lsp-mode&lt;/code&gt;’s needs due to the fact that client/server communication
    generates a lot of memory/garbage. You have two options:
    &lt;ul&gt;
      &lt;li&gt;Set it to big number(100mb) like most of the popular starter kits like
        Spacemacs/Doom/Prelude, etc do:&lt;/li&gt;
    &lt;/ul&gt;
    &lt;div class="highlight highlight-source-emacs-lisp"&gt;&lt;pre&gt;(&lt;span class="pl-k"&gt;setq&lt;/span&gt; gc-cons-threshold &lt;span class="pl-c1"&gt;100000000&lt;/span&gt;)
    &lt;/pre&gt;&lt;/div&gt;
    &lt;ul&gt;
      &lt;li&gt;Follow the method recommended by Gnu Emacs Maintainer Eli Zaretskii:
        “My suggestion is to repeatedly multiply gc-cons-threshold by 2 until
        you stop seeing significant improvements in responsiveness, and in any
        case not to increase by a factor larger than 100 or somesuch. If even a
        100-fold increase doesn’t help, there’s some deeper problem with the
        Lisp code which produces so much garbage, or maybe GC is not the reason
        for slowdown.”
        Source: &lt;a href="https://www.reddit.com/r/emacs/comments/brc05y/is_lspmode_too_slow_to_use_for_anyone_else/eofulix/" rel="nofollow"&gt;https://www.reddit.com/r/emacs/comments/brc05y/is_lspmode_too_slow_to_use_for_anyone_else/eofulix/&lt;/a&gt;&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;Increase the amount of data which Emacs reads from the process. Again the
    emacs default is too low 4k considering that the some of the language
    server responses are in 800k - 3M range.&lt;/li&gt;
&lt;/ul&gt;
&lt;div class="highlight highlight-source-emacs-lisp"&gt;&lt;pre&gt;(&lt;span class="pl-k"&gt;setq&lt;/span&gt; read-process-output-max (&lt;span class="pl-k"&gt;*&lt;/span&gt; &lt;span class="pl-c1"&gt;1024&lt;/span&gt; &lt;span class="pl-c1"&gt;1024&lt;/span&gt;)) &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt;; 1mb&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;ul&gt;
  &lt;li&gt;Optional: use &lt;code&gt;company-capf&lt;/code&gt; . Although &lt;code&gt;company-lsp&lt;/code&gt; also supports
    caching &lt;code&gt;lsp-mode&lt;/code&gt;’s &lt;code&gt;company-capf&lt;/code&gt; does that by default. To achieve that
    uninstall &lt;code&gt;company-lsp&lt;/code&gt; or put these lines in your config:&lt;/li&gt;
&lt;/ul&gt;
&lt;div class="highlight highlight-source-emacs-lisp"&gt;&lt;pre&gt;(&lt;span class="pl-k"&gt;setq&lt;/span&gt; lsp-prefer-capf &lt;span class="pl-c1"&gt;t&lt;/span&gt;)&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;i&gt;Note:&lt;/i&gt; - to verify which &lt;code&gt;company&lt;/code&gt; backend implementation you are using
  do &lt;code&gt;M-x company-diag&lt;/code&gt; when performing auto-completion.&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;Optional: Disable &lt;code&gt;lsp-ui&lt;/code&gt;. Normally, &lt;code&gt;lsp-ui&lt;/code&gt; is very fast but in some
    systems (especially when using &lt;code&gt;Windows&lt;/code&gt;) &lt;code&gt;lsp-ui&lt;/code&gt; overlays and popups might
    slow down emacs.&lt;/li&gt;
  &lt;li&gt;Optional: fine tune &lt;code&gt;lsp-idle-delay&lt;/code&gt;. This variable determines how often
    lsp-mode will refresh the highlights, lenses, links, etc while you type.&lt;/li&gt;
&lt;/ul&gt;
&lt;div class="highlight highlight-source-emacs-lisp"&gt;&lt;pre&gt;(&lt;span class="pl-k"&gt;setq&lt;/span&gt; lsp-idle-delay &lt;span class="pl-c1"&gt;0.500&lt;/span&gt;)&lt;/pre&gt;&lt;/div&gt;
&lt;h4&gt;&lt;a id="user-content-reporting-performance-problems" class="anchor" aria-hidden="true" href="#reporting-performance-problems"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Reporting performance problems&lt;/h4&gt;
&lt;p&gt;If you have tried all of the non-optional steps from the list and &lt;code&gt;emacs&lt;/code&gt; is
  still not very responsive please open a PR with the following information:&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;Collect &lt;b&gt;lsp-log&lt;/b&gt; data after setting &lt;code&gt;lsp-print-performance&lt;/code&gt; to &lt;code&gt;t&lt;/code&gt;.&lt;/li&gt;
&lt;/ul&gt;
&lt;div class="highlight highlight-source-emacs-lisp"&gt;&lt;pre&gt;(&lt;span class="pl-k"&gt;setq&lt;/span&gt; lsp-print-performance &lt;span class="pl-c1"&gt;t&lt;/span&gt;)&lt;/pre&gt;&lt;/div&gt;
&lt;ul&gt;
  &lt;li&gt;Include emacs performance report. Use the following step to collect it:
    &lt;ul&gt;
      &lt;li&gt;&lt;code&gt;M-x profiler-start&lt;/code&gt; and select &lt;code&gt;CPU&lt;/code&gt;&lt;/li&gt;
      &lt;li&gt;Reproduce the slow behavior.&lt;/li&gt;
      &lt;li&gt;&lt;code&gt;M-x profiler-stop&lt;/code&gt;&lt;/li&gt;
      &lt;li&gt;In the profiler report expand all nodes by doing &lt;code&gt;C-u TAB&lt;/code&gt;.&lt;/li&gt;
    &lt;/ul&gt;
    &lt;p&gt;&lt;i&gt;Note:&lt;/i&gt; - &lt;code&gt;lsp-mode&lt;/code&gt; is just a frontend and the performance depends on
      server as well. Some servers (e. g. Palantir’s Python Language Server)
      might be slow when performing auto-completion.&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;&lt;a id="user-content-how-does-it-work" class="anchor" aria-hidden="true" href="#how-does-it-work"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;How does it work?&lt;/h3&gt;
&lt;p&gt;&lt;code&gt;lsp-mode&lt;/code&gt; has predefined list of server configurations (loaded in &lt;code&gt;lsp-clients.el&lt;/code&gt;) containing a mapping from &lt;code&gt;major-mode&lt;/code&gt; to the server configuration or by using activation function. In addition to the default server configuration located in &lt;code&gt;lsp-clients.el&lt;/code&gt; there are few languages servers which require separate package(check &lt;a href="#supported-languages"&gt;Supported languages&lt;/a&gt;). When you open a file from a particular project &lt;code&gt;lsp-mode&lt;/code&gt; and call &lt;code&gt;lsp&lt;/code&gt; command &lt;code&gt;lsp-mode&lt;/code&gt; will look for server registrations able to handle current file. If there is such client &lt;code&gt;lsp-mode&lt;/code&gt; will look for the project root. If you open a file from the project for the first time you will be prompted to define the current project root. Once the project root is selected it is saved in &lt;code&gt;lsp-session&lt;/code&gt; file and it will be loaded the next time you start Emacs so you no longer will be asked for a project root when you open a file from that project. Later if you want to change the project root you may use &lt;code&gt;lsp-workspace-folder-remove&lt;/code&gt; to remove the project and call &lt;code&gt;lsp-workspace-folder-add&lt;/code&gt; to add the root. If you want to force starting a particular language server in a file you may use &lt;code&gt;C-u&lt;/code&gt; &lt;code&gt;M-x&lt;/code&gt; &lt;code&gt;lsp&lt;/code&gt; which will prompt you to select language server to start.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-supported-languages" class="anchor" aria-hidden="true" href="#supported-languages"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Supported languages&lt;/h2&gt;
&lt;p&gt;Some of the servers are directly supported by &lt;code&gt;lsp-mode&lt;/code&gt; by requiring
  &lt;code&gt;lsp-clients.el&lt;/code&gt; while others require installing additional packages which provide
  server specific functionality.&lt;/p&gt;
&lt;table&gt;
  &lt;tbody&gt;&lt;tr&gt;&lt;th&gt;Language&lt;/th&gt;&lt;th&gt;Language Server&lt;/th&gt;&lt;th&gt;Built-in&lt;/th&gt;&lt;th&gt;Installation command&lt;/th&gt;&lt;th&gt;Debugger&lt;/th&gt;&lt;/tr&gt;
  &lt;tr&gt;&lt;td&gt;Ada&lt;/td&gt;&lt;td&gt;&lt;a href="https://github.com/AdaCore/ada_language_server"&gt;ada_language_server&lt;/a&gt;&lt;/td&gt;&lt;td&gt;Yes&lt;/td&gt;&lt;td&gt;&lt;a href="https://github.com/AdaCore/ada_language_server#install"&gt;Installation instructions&lt;/a&gt;&lt;/td&gt;&lt;td&gt;Yes (gdb)&lt;/td&gt;&lt;/tr&gt;
  &lt;tr&gt;&lt;td&gt;Angular&lt;/td&gt;&lt;td&gt;&lt;a href="https://github.com/angular/vscode-ng-language-service/"&gt;vscode-ng-language-service&lt;/a&gt;&lt;/td&gt;&lt;td&gt;Yes&lt;/td&gt;&lt;td&gt;&lt;a href="https://github.com/emacs-lsp/lsp-mode/wiki/Install-Angular-Language-server"&gt;Installation instructions&lt;/a&gt;&lt;/td&gt;&lt;td&gt;Not relevant&lt;/td&gt;&lt;/tr&gt;
  &lt;tr&gt;&lt;td&gt;Bash&lt;/td&gt;&lt;td&gt;&lt;a href="https://github.com/mads-hartmann/bash-language-server"&gt;bash-language-server&lt;/a&gt;&lt;/td&gt;&lt;td&gt;Yes&lt;/td&gt;&lt;td&gt;npm i -g bash-language-server&lt;/td&gt;&lt;td&gt;&lt;/td&gt;&lt;/tr&gt;
  &lt;tr&gt;&lt;td&gt;C++&lt;/td&gt;&lt;td&gt;&lt;a href="https://github.com/MaskRay/ccls"&gt;ccls&lt;/a&gt;&lt;/td&gt;&lt;td&gt;&lt;a href="https://github.com/MaskRay/emacs-ccls"&gt;emacs-ccls&lt;/a&gt;&lt;/td&gt;&lt;td&gt;&lt;a href="https://github.com/MaskRay/ccls"&gt;ccls&lt;/a&gt;&lt;/td&gt;&lt;td&gt;Yes (gdb or lldb)&lt;/td&gt;&lt;/tr&gt;
  &lt;tr&gt;&lt;td&gt;C++&lt;/td&gt;&lt;td&gt;&lt;a href="https://clang.llvm.org/extra/clangd.html" rel="nofollow"&gt;clangd&lt;/a&gt;&lt;/td&gt;&lt;td&gt;Yes&lt;/td&gt;&lt;td&gt;&lt;a href="https://clang.llvm.org/extra/clangd.html" rel="nofollow"&gt;clangd&lt;/a&gt;&lt;/td&gt;&lt;td&gt;Yes (gdb or lldb)&lt;/td&gt;&lt;/tr&gt;
  &lt;tr&gt;&lt;td&gt;C++&lt;/td&gt;&lt;td&gt;&lt;a href="https://github.com/cquery-project/cquery"&gt;cquery&lt;/a&gt;&lt;/td&gt;&lt;td&gt;&lt;a href="https://github.com/cquery-project/emacs-cquery"&gt;emacs-cquery&lt;/a&gt;&lt;/td&gt;&lt;td&gt;&lt;a href="https://github.com/cquery-project/cquery"&gt;cquery&lt;/a&gt;&lt;/td&gt;&lt;td&gt;Yes (gdb or lldb)&lt;/td&gt;&lt;/tr&gt;
  &lt;tr&gt;&lt;td&gt;C#&lt;/td&gt;&lt;td&gt;&lt;a href="https://github.com/OmniSharp/omnisharp-roslyn"&gt;OmniSharp-Roslyn&lt;/a&gt;&lt;/td&gt;&lt;td&gt;Yes&lt;/td&gt;&lt;td&gt;&lt;a href="https://github.com/OmniSharp/omnisharp-roslyn"&gt;OmniSharp-Roslyn&lt;/a&gt;&lt;/td&gt;&lt;td&gt;No&lt;/td&gt;&lt;/tr&gt;
  &lt;tr&gt;&lt;td&gt;Clojure&lt;/td&gt;&lt;td&gt;&lt;a href="https://github.com/snoe/clojure-lsp"&gt;clojure-lsp&lt;/a&gt;&lt;/td&gt;&lt;td&gt;Yes&lt;/td&gt;&lt;td&gt;&lt;a href="https://github.com/snoe/clojure-lsp"&gt;clojure-lsp&lt;/a&gt;&lt;/td&gt;&lt;td&gt;&lt;/td&gt;&lt;/tr&gt;
  &lt;tr&gt;&lt;td&gt;CMake&lt;/td&gt;&lt;td&gt;&lt;a href="https://github.com/regen100/cmake-language-server"&gt;cmake-language-server&lt;/a&gt;&lt;/td&gt;&lt;td&gt;Yes&lt;/td&gt;&lt;td&gt;&lt;code&gt;pip install cmake-language-server&lt;/code&gt;&lt;/td&gt;&lt;td&gt;Not relevant&lt;/td&gt;&lt;/tr&gt;
  &lt;tr&gt;&lt;td&gt;Crystal&lt;/td&gt;&lt;td&gt;&lt;a href="https://github.com/crystal-lang-tools/scry"&gt;scry&lt;/a&gt;&lt;/td&gt;&lt;td&gt;Yes&lt;/td&gt;&lt;td&gt;&lt;a href="https://github.com/crystal-lang-tools/scry"&gt;scry&lt;/a&gt;&lt;/td&gt;&lt;td&gt;&lt;/td&gt;&lt;/tr&gt;
  &lt;tr&gt;&lt;td&gt;CSS/LessCSS/SASS/SCSS&lt;/td&gt;&lt;td&gt;&lt;a href="https://github.com/vscode-langservers/vscode-css-languageserver-bin"&gt;css&lt;/a&gt;&lt;/td&gt;&lt;td&gt;Yes&lt;/td&gt;&lt;td&gt;npm install -g vscode-css-languageserver-bin&lt;/td&gt;&lt;td&gt;&lt;/td&gt;&lt;/tr&gt;
  &lt;tr&gt;&lt;td&gt;Dart&lt;/td&gt;&lt;td&gt;&lt;a href="https://github.com/dart-lang/sdk/blob/master/pkg/analysis_server/tool/lsp_spec/README.md"&gt;dart_analysis_server&lt;/a&gt;&lt;/td&gt;&lt;td&gt;Yes&lt;/td&gt;&lt;td&gt;built into dart-sdk&lt;/td&gt;&lt;td&gt;&lt;/td&gt;&lt;/tr&gt;
  &lt;tr&gt;&lt;td&gt;Dhall&lt;/td&gt;&lt;td&gt;&lt;a href="https://github.com/dhall-lang/dhall-haskell/tree/master/dhall-lsp-server"&gt;dhall-lsp-server&lt;/a&gt;&lt;/td&gt;&lt;td&gt;Yes&lt;/td&gt;&lt;td&gt;&lt;a href="https://github.com/dhall-lang/dhall-haskell/tree/master/dhall-lsp-server#installation"&gt;Installation instructions&lt;/a&gt;&lt;/td&gt;&lt;td&gt;No&lt;/td&gt;&lt;/tr&gt;
  &lt;tr&gt;&lt;td&gt;Dockerfile&lt;/td&gt;&lt;td&gt;&lt;a href="https://github.com/rcjsuen/dockerfile-language-server-nodejs"&gt;dockerfile-language-server-nodejs&lt;/a&gt;&lt;/td&gt;&lt;td&gt;Yes&lt;/td&gt;&lt;td&gt;npm install -g dockerfile-language-server-nodejs&lt;/td&gt;&lt;td&gt;&lt;/td&gt;&lt;/tr&gt;
  &lt;tr&gt;&lt;td&gt;Dart&lt;/td&gt;&lt;td&gt;&lt;a href="https://github.com/natebosch/dart_language_server"&gt;dart_language_server&lt;/a&gt;&lt;/td&gt;&lt;td&gt;Yes&lt;/td&gt;&lt;td&gt;pub global activate dart_language_server&lt;/td&gt;&lt;td&gt;&lt;/td&gt;&lt;/tr&gt;
  &lt;tr&gt;&lt;td&gt;Elixir&lt;/td&gt;&lt;td&gt;&lt;a href="https://github.com/JakeBecker/elixir-ls"&gt;elixir-ls&lt;/a&gt;&lt;/td&gt;&lt;td&gt;Yes&lt;/td&gt;&lt;td&gt;&lt;a href="https://github.com/JakeBecker/elixir-ls"&gt;elixir-ls&lt;/a&gt;&lt;/td&gt;&lt;td&gt;Yes&lt;/td&gt;&lt;/tr&gt;
  &lt;tr&gt;&lt;td&gt;Elm&lt;/td&gt;&lt;td&gt;&lt;a href="https://github.com/elm-tooling/elm-language-server"&gt;elmLS&lt;/a&gt;&lt;/td&gt;&lt;td&gt;Yes&lt;/td&gt;&lt;td&gt;npm i -g @elm-tooling/elm-language-server, or clone the repository and follow installation instructions&lt;/td&gt;&lt;td&gt;No&lt;/td&gt;&lt;/tr&gt;
  &lt;tr&gt;&lt;td&gt;Erlang&lt;/td&gt;&lt;td&gt;&lt;a href="https://github.com/erlang-ls/erlang_ls"&gt;erlang_ls&lt;/a&gt;&lt;/td&gt;&lt;td&gt;Yes&lt;/td&gt;&lt;td&gt;&lt;a href="https://github.com/erlang-ls/erlang_ls"&gt;erlang_ls&lt;/a&gt;&lt;/td&gt;&lt;td&gt;&lt;/td&gt;&lt;/tr&gt;
  &lt;tr&gt;&lt;td&gt;Eslint&lt;/td&gt;&lt;td&gt;&lt;a href="https://github.com/Microsoft/vscode-eslint"&gt;eslint&lt;/a&gt;&lt;/td&gt;&lt;td&gt;Yes&lt;/td&gt;&lt;td&gt;&lt;a href="https://github.com/emacs-lsp/lsp-mode/wiki/LSP-ESlint-integration"&gt;LSP ESLint Guide&lt;/a&gt;&lt;/td&gt;&lt;td&gt;N/A&lt;/td&gt;&lt;/tr&gt;
  &lt;tr&gt;&lt;td&gt;F#&lt;/td&gt;&lt;td&gt;&lt;a href="https://github.com/fsharp/FsAutoComplete"&gt;fsautocomplete&lt;/a&gt;&lt;/td&gt;&lt;td&gt;Yes&lt;/td&gt;&lt;td&gt;Automatic by &lt;a href="https://github.com/emacs-lsp/lsp-mode/blob/master/lsp-fsharp.el"&gt;lsp-fsharp&lt;/a&gt;&lt;/td&gt;&lt;td&gt;No&lt;/td&gt;&lt;/tr&gt;
  &lt;tr&gt;&lt;td&gt;Fortran&lt;/td&gt;&lt;td&gt;&lt;a href="https://github.com/hansec/fortran-language-server"&gt;fortran-language-server&lt;/a&gt;&lt;/td&gt;&lt;td&gt;Yes&lt;/td&gt;&lt;td&gt;pip install fortran-language-server&lt;/td&gt;&lt;td&gt;Yes&lt;/td&gt;&lt;/tr&gt;
  &lt;tr&gt;&lt;td&gt;Go&lt;/td&gt;&lt;td&gt;&lt;a href="https://github.com/golang/tools/tree/master/gopls"&gt;gopls&lt;/a&gt;&lt;/td&gt;&lt;td&gt;Yes&lt;/td&gt;&lt;td&gt;&lt;code&gt;go get golang.org/x/tools/gopls@latest&lt;/code&gt; &lt;a href="https://github.com/golang/tools/blob/master/gopls/doc/user.md#installation"&gt;docs&lt;/a&gt;&lt;/td&gt;&lt;td&gt;Yes&lt;/td&gt;&lt;/tr&gt;
  &lt;tr&gt;&lt;td&gt;Go&lt;/td&gt;&lt;td&gt;&lt;a href="https://github.com/saibing/bingo"&gt;bingo&lt;/a&gt;&lt;/td&gt;&lt;td&gt;Yes&lt;/td&gt;&lt;td&gt;&lt;a href="https://github.com/saibing/bingo/wiki/Install"&gt;bingo&lt;/a&gt;&lt;/td&gt;&lt;td&gt;Yes&lt;/td&gt;&lt;/tr&gt;
  &lt;tr&gt;&lt;td&gt;Groovy&lt;/td&gt;&lt;td&gt;&lt;a href="https://github.com/prominic/groovy-language-server"&gt;groovy-language-server&lt;/a&gt;&lt;/td&gt;&lt;td&gt;Yes&lt;/td&gt;&lt;td&gt;&lt;a href="https://github.com/prominic/groovy-language-server"&gt;groovy-language-server&lt;/a&gt;&lt;/td&gt;&lt;td&gt;&lt;/td&gt;&lt;/tr&gt;
  &lt;tr&gt;&lt;td&gt;Hack&lt;/td&gt;&lt;td&gt;&lt;a href="https://docs.hhvm.com/hhvm/" rel="nofollow"&gt;hhvm&lt;/a&gt;&lt;/td&gt;&lt;td&gt;Yes&lt;/td&gt;&lt;td&gt;&lt;a href="https://docs.hhvm.com/hhvm/installation/introduction" rel="nofollow"&gt;hhvm&lt;/a&gt;&lt;/td&gt;&lt;td&gt;&lt;/td&gt;&lt;/tr&gt;
  &lt;tr&gt;&lt;td&gt;HTML&lt;/td&gt;&lt;td&gt;&lt;a href="https://github.com/vscode-langservers/vscode-html-languageserver"&gt;html&lt;/a&gt;&lt;/td&gt;&lt;td&gt;Yes&lt;/td&gt;&lt;td&gt;npm install -g vscode-html-languageserver-bin&lt;/td&gt;&lt;td&gt;&lt;/td&gt;&lt;/tr&gt;
  &lt;tr&gt;&lt;td&gt;Haskell&lt;/td&gt;&lt;td&gt;&lt;a href="https://github.com/haskell/haskell-ide-engine"&gt;IDE engine&lt;/a&gt;&lt;/td&gt;&lt;td&gt;&lt;a href="https://github.com/emacs-lsp/lsp-haskell"&gt;lsp-haskell&lt;/a&gt;&lt;/td&gt;&lt;td&gt;&lt;a href="https://github.com/haskell/haskell-ide-engine"&gt;IDE engine&lt;/a&gt;&lt;/td&gt;&lt;td&gt;&lt;/td&gt;&lt;/tr&gt;
  &lt;tr&gt;&lt;td&gt;Lua&lt;/td&gt;&lt;td&gt;&lt;a href="https://github.com/EmmyLua/EmmyLua-LanguageServer"&gt;EmmyLua&lt;/a&gt;&lt;/td&gt;&lt;td&gt;Yes&lt;/td&gt;&lt;td&gt;&lt;a href="https://github.com/emacs-lsp/lsp-mode/wiki/Install-EmmyLua-Language-server"&gt;Installation&lt;/a&gt;&lt;/td&gt;&lt;td&gt;&lt;/td&gt;&lt;/tr&gt;
  &lt;tr&gt;&lt;td&gt;Java&lt;/td&gt;&lt;td&gt;&lt;a href="https://github.com/eclipse/eclipse.jdt.ls"&gt;Eclipse JDT LS&lt;/a&gt;&lt;/td&gt;&lt;td&gt;&lt;a href="https://github.com/emacs-lsp/lsp-java"&gt;lsp-java&lt;/a&gt;&lt;/td&gt;&lt;td&gt;Automatic by &lt;a href="https://github.com/emacs-lsp/lsp-java"&gt;lsp-java&lt;/a&gt;&lt;/td&gt;&lt;td&gt;Yes&lt;/td&gt;&lt;/tr&gt;
  &lt;tr&gt;&lt;td&gt;JavaScript/TypeScript&lt;/td&gt;&lt;td&gt;&lt;a href="https://github.com/theia-ide/typescript-language-server"&gt;typescript-language-server&lt;/a&gt;  (recommended)&lt;/td&gt;&lt;td&gt;Yes&lt;/td&gt;&lt;td&gt;npm i -g typescript-language-server; npm i -g typescript&lt;/td&gt;&lt;td&gt;Yes (Firefox/Chrome)&lt;/td&gt;&lt;/tr&gt;
  &lt;tr&gt;&lt;td&gt;JavaScript/TypeScript&lt;/td&gt;&lt;td&gt;&lt;a href="https://github.com/sourcegraph/javascript-typescript-langserver"&gt;javascript-typescript-stdio&lt;/a&gt;&lt;/td&gt;&lt;td&gt;Yes&lt;/td&gt;&lt;td&gt;npm i -g javascript-typescript-langserver&lt;/td&gt;&lt;td&gt;Yes (Firefox/Chrome)&lt;/td&gt;&lt;/tr&gt;
  &lt;tr&gt;&lt;td&gt;JavaScript Flow&lt;/td&gt;&lt;td&gt;&lt;a href="https://flow.org" rel="nofollow"&gt;flow&lt;/a&gt; (add-on if working on a Flow file)&lt;/td&gt;&lt;td&gt;Yes&lt;/td&gt;&lt;td&gt;&lt;a href="https://flow.org" rel="nofollow"&gt;flow&lt;/a&gt;&lt;/td&gt;&lt;td&gt;Yes (Firefox/Chrome)&lt;/td&gt;&lt;/tr&gt;
  &lt;tr&gt;&lt;td&gt;Json&lt;/td&gt;&lt;td&gt;&lt;a href="https://github.com/vscode-langservers/vscode-json-languageserver"&gt;vscode-json-languageserver&lt;/a&gt;&lt;/td&gt;&lt;td&gt;Yes&lt;/td&gt;&lt;td&gt;Automatic or manual by &lt;code&gt;npm i -g vscode-json-languageserver&lt;/code&gt;&lt;/td&gt;&lt;td&gt;&lt;/td&gt;&lt;/tr&gt;
  &lt;tr&gt;&lt;td&gt;Julia&lt;/td&gt;&lt;td&gt;&lt;a href="https://github.com/non-Jedi/lsp-julia"&gt;lsp-julia&lt;/a&gt;&lt;/td&gt;&lt;td&gt;&lt;a href="https://github.com/non-Jedi/lsp-julia"&gt;lsp-julia&lt;/a&gt;&lt;/td&gt;&lt;td&gt;&lt;a href="https://github.com/JuliaEditorSupport/LanguageServer.jl"&gt;LanguageServer.jl&lt;/a&gt;&lt;/td&gt;&lt;td&gt;&lt;/td&gt;&lt;/tr&gt;
  &lt;tr&gt;&lt;td&gt;Kotlin&lt;/td&gt;&lt;td&gt;&lt;a href="https://github.com/fwcd/KotlinLanguageServer"&gt;kotlin-language-server&lt;/a&gt;&lt;/td&gt;&lt;td&gt;Yes&lt;/td&gt;&lt;td&gt;&lt;a href="https://github.com/fwcd/KotlinLanguageServer"&gt;kotlin-language-server&lt;/a&gt;&lt;/td&gt;&lt;td&gt;&lt;/td&gt;&lt;/tr&gt;
  &lt;tr&gt;&lt;td&gt;Nim&lt;/td&gt;&lt;td&gt;&lt;a href="https://github.com/PMunch/nimlsp"&gt;nimlsp&lt;/a&gt;&lt;/td&gt;&lt;td&gt;Yes&lt;/td&gt;&lt;td&gt;&lt;code&gt;nimble install nimlsp&lt;/code&gt;&lt;/td&gt;&lt;td&gt;No&lt;/td&gt;&lt;/tr&gt;
  &lt;tr&gt;&lt;td&gt;OCaml&lt;/td&gt;&lt;td&gt;&lt;a href="https://github.com/ocaml-lsp/ocaml-language-server"&gt;ocaml-language-server&lt;/a&gt;&lt;/td&gt;&lt;td&gt;Yes&lt;/td&gt;&lt;td&gt;&lt;a href="https://github.com/ocaml-lsp/ocaml-language-server"&gt;ocaml-language-server&lt;/a&gt;&lt;/td&gt;&lt;td&gt;&lt;/td&gt;&lt;/tr&gt;
  &lt;tr&gt;&lt;td&gt;OCaml&lt;/td&gt;&lt;td&gt;&lt;a href="https://github.com/ocaml/ocaml-lsp"&gt;ocaml-lsp-server&lt;/a&gt;&lt;/td&gt;&lt;td&gt;Yes&lt;/td&gt;&lt;td&gt;&lt;a href="https://github.com/ocaml/ocaml-lsp"&gt;ocaml-lsp-server&lt;/a&gt;&lt;/td&gt;&lt;td&gt;&lt;/td&gt;&lt;/tr&gt;
  &lt;tr&gt;&lt;td&gt;PHP(recommended)&lt;/td&gt;&lt;td&gt;&lt;a href="https://github.com/bmewburn/vscode-intelephense"&gt;intelephense&lt;/a&gt;&lt;/td&gt;&lt;td&gt;Yes&lt;/td&gt;&lt;td&gt;npm i intelephense -g&lt;/td&gt;&lt;td&gt;Yes&lt;/td&gt;&lt;/tr&gt;
  &lt;tr&gt;&lt;td&gt;PHP&lt;/td&gt;&lt;td&gt;&lt;a href="https://github.com/felixfbecker/php-language-server"&gt;php-language-server&lt;/a&gt;&lt;/td&gt;&lt;td&gt;Yes&lt;/td&gt;&lt;td&gt;&lt;a href="https://github.com/felixfbecker/php-language-server"&gt;php-language-server&lt;/a&gt;&lt;/td&gt;&lt;td&gt;Yes&lt;/td&gt;&lt;/tr&gt;
  &lt;tr&gt;&lt;td&gt;Powershell&lt;/td&gt;&lt;td&gt;&lt;a href="https://github.com/PowerShell/PowerShellEditorServices"&gt;PowerShellEditorServices&lt;/a&gt;&lt;/td&gt;&lt;td&gt;Yes&lt;/td&gt;&lt;td&gt;Automatic&lt;/td&gt;&lt;td&gt;Yes&lt;/td&gt;&lt;/tr&gt;
  &lt;tr&gt;&lt;td&gt;Python&lt;/td&gt;&lt;td&gt;&lt;a href="https://github.com/palantir/python-language-server"&gt;pyls&lt;/a&gt;&lt;/td&gt;&lt;td&gt;Yes&lt;/td&gt;&lt;td&gt;pip install ‘python-language-server[all]’&lt;/td&gt;&lt;td&gt;Yes&lt;/td&gt;&lt;/tr&gt;
  &lt;tr&gt;&lt;td&gt;Python(Microsoft)&lt;/td&gt;&lt;td&gt;&lt;a href="https://github.com/Microsoft/python-language-server"&gt;Microsoft Python Language Server&lt;/a&gt;&lt;/td&gt;&lt;td&gt;&lt;a href="https://github.com/emacs-lsp/lsp-python-ms"&gt;lsp-python-ms&lt;/a&gt;&lt;/td&gt;&lt;td&gt;&lt;a href="https://github.com/emacs-lsp/lsp-python-ms"&gt;lsp-python-ms&lt;/a&gt;&lt;/td&gt;&lt;td&gt;Yes&lt;/td&gt;&lt;/tr&gt;
  &lt;tr&gt;&lt;td&gt;R&lt;/td&gt;&lt;td&gt;&lt;a href="https://github.com/REditorSupport/languageserver"&gt;languageserver&lt;/a&gt;&lt;/td&gt;&lt;td&gt;Yes&lt;/td&gt;&lt;td&gt;install.packages(“languageserver”)&lt;/td&gt;&lt;td&gt;No&lt;/td&gt;&lt;/tr&gt;
  &lt;tr&gt;&lt;td&gt;Ruby&lt;/td&gt;&lt;td&gt;&lt;a href="https://github.com/castwide/solargraph"&gt;solargraph&lt;/a&gt;&lt;/td&gt;&lt;td&gt;Yes&lt;/td&gt;&lt;td&gt;gem install solargraph&lt;/td&gt;&lt;td&gt;Yes&lt;/td&gt;&lt;/tr&gt;
  &lt;tr&gt;&lt;td&gt;Rust&lt;/td&gt;&lt;td&gt;&lt;a href="https://github.com/rust-lang/rls"&gt;rls&lt;/a&gt;&lt;/td&gt;&lt;td&gt;Yes&lt;/td&gt;&lt;td&gt;&lt;a href="https://github.com/rust-lang/rls"&gt;rls&lt;/a&gt;&lt;/td&gt;&lt;td&gt;Yes&lt;/td&gt;&lt;/tr&gt;
  &lt;tr&gt;&lt;td&gt;Rust&lt;/td&gt;&lt;td&gt;&lt;a href="https://github.com/rust-analyzer/rust-analyzer"&gt;rust-analyzer&lt;/a&gt;&lt;/td&gt;&lt;td&gt;Yes&lt;/td&gt;&lt;td&gt;&lt;a href="https://github.com/rust-analyzer/rust-analyzer#language-server-quick-start"&gt;rust-analyzer&lt;/a&gt;&lt;/td&gt;&lt;td&gt;&lt;/td&gt;&lt;/tr&gt;
  &lt;tr&gt;&lt;td&gt;Scala&lt;/td&gt;&lt;td&gt;&lt;a href="https://scalameta.org/metals" rel="nofollow"&gt;Metals&lt;/a&gt;&lt;/td&gt;&lt;td&gt;Yes&lt;/td&gt;&lt;td&gt;&lt;a href="https://scalameta.org/metals/docs/editors/emacs.html" rel="nofollow"&gt;Metals&lt;/a&gt;&lt;/td&gt;&lt;td&gt;&lt;/td&gt;&lt;/tr&gt;
  &lt;tr&gt;&lt;td&gt;Swift&lt;/td&gt;&lt;td&gt;&lt;a href="https://github.com/apple/sourcekit-lsp"&gt;sourcekit-LSP&lt;/a&gt;&lt;/td&gt;&lt;td&gt;&lt;a href="https://github.com/emacs-lsp/lsp-sourcekit"&gt;lsp-sourcekit&lt;/a&gt;&lt;/td&gt;&lt;td&gt;&lt;a href="https://github.com/apple/sourcekit-lsp"&gt;sourcekit-LSP&lt;/a&gt;&lt;/td&gt;&lt;td&gt;Yes (via llvm debug adapter)&lt;/td&gt;&lt;/tr&gt;
  &lt;tr&gt;&lt;td&gt;Terraform&lt;/td&gt;&lt;td&gt;&lt;a href="https://github.com/juliosueiras/terraform-lsp"&gt;terraform-lsp&lt;/a&gt;&lt;/td&gt;&lt;td&gt;No&lt;/td&gt;&lt;td&gt;Git clone outside of &lt;code&gt;$GOPATH&lt;/code&gt;; go install. (Requires go &amp;gt; 1.11)&lt;/td&gt;&lt;td&gt;No&lt;/td&gt;&lt;/tr&gt;
  &lt;tr&gt;&lt;td&gt;TeX, LaTeX, etc.&lt;/td&gt;&lt;td&gt;&lt;a href="https://github.com/astoff/digestif"&gt;Digestif&lt;/a&gt;&lt;/td&gt;&lt;td&gt;Yes&lt;/td&gt;&lt;td&gt;luarocks --server &lt;a href="http://luarocks.org/dev" rel="nofollow"&gt;http://luarocks.org/dev&lt;/a&gt; install digestif&lt;/td&gt;&lt;td&gt;&lt;/td&gt;&lt;/tr&gt;
  &lt;tr&gt;&lt;td&gt;Verilog/SystemVerilog&lt;/td&gt;&lt;td&gt;&lt;a href="https://github.com/suoto/hdl_checker"&gt;hdl_checker&lt;/a&gt;&lt;/td&gt;&lt;td&gt;Yes&lt;/td&gt;&lt;td&gt;pip install hdl-checker –upgrade&lt;/td&gt;&lt;td&gt;No&lt;/td&gt;&lt;/tr&gt;
  &lt;tr&gt;&lt;td&gt;VHDL&lt;/td&gt;&lt;td&gt;&lt;a href="http://www.vhdltool.com" rel="nofollow"&gt;VHDL Tool&lt;/a&gt;&lt;/td&gt;&lt;td&gt;Yes&lt;/td&gt;&lt;td&gt;Download from &lt;a href="http://www.vhdltool.com/download" rel="nofollow"&gt;http://www.vhdltool.com/download&lt;/a&gt;&lt;/td&gt;&lt;td&gt;No&lt;/td&gt;&lt;/tr&gt;
  &lt;tr&gt;&lt;td&gt;Vimscript&lt;/td&gt;&lt;td&gt;&lt;a href="https://github.com/iamcco/vim-language-server"&gt;vim-language-server&lt;/a&gt;&lt;/td&gt;&lt;td&gt;Yes&lt;/td&gt;&lt;td&gt;npm install -g vim-language-server&lt;/td&gt;&lt;td&gt;n/a&lt;/td&gt;&lt;/tr&gt;
  &lt;tr&gt;&lt;td&gt;Vue&lt;/td&gt;&lt;td&gt;&lt;a href="https://github.com/vuejs/vetur/tree/master/server"&gt;vue-language-server&lt;/a&gt;&lt;/td&gt;&lt;td&gt;Yes&lt;/td&gt;&lt;td&gt;npm install -g vue-language-server&lt;/td&gt;&lt;td&gt;Yes (Firefox/Chrome)&lt;/td&gt;&lt;/tr&gt;
  &lt;tr&gt;&lt;td&gt;XML&lt;/td&gt;&lt;td&gt;&lt;a href="https://github.com/angelozerr/lsp4xml"&gt;lsp4xml&lt;/a&gt;&lt;/td&gt;&lt;td&gt;Yes&lt;/td&gt;&lt;td&gt;Download from &lt;a href="https://github.com/angelozerr/lsp4xml/releases"&gt;lsp4xml releases&lt;/a&gt;&lt;/td&gt;&lt;td&gt;&lt;/td&gt;&lt;/tr&gt;
  &lt;tr&gt;&lt;td&gt;YAML&lt;/td&gt;&lt;td&gt;&lt;a href="https://github.com/redhat-developer/yaml-language-server"&gt;yaml&lt;/a&gt;&lt;/td&gt;&lt;td&gt;Yes&lt;/td&gt;&lt;td&gt;npm install -g yaml-language-server&lt;/td&gt;&lt;td&gt;&lt;/td&gt;&lt;/tr&gt;
&lt;/tbody&gt;&lt;/table&gt;
&lt;h2&gt;&lt;a id="user-content-commands" class="anchor" aria-hidden="true" href="#commands"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Commands&lt;/h2&gt;
&lt;p&gt;When using &lt;code&gt;lsp-mode&lt;/code&gt; most of the features depend on server capabilities.
  &lt;code&gt;lsp-mode&lt;/code&gt; provides default bindings which are dynamically enabled/disabled
  based on the server functionality. All the commands are configured
  &lt;code&gt;lsp-command-map&lt;/code&gt; which is bound to &lt;code&gt;lsp-keymap-prefix&lt;/code&gt; (default &lt;code&gt;s-l&lt;/code&gt;).&lt;/p&gt;
&lt;table&gt;
  &lt;tbody&gt;&lt;tr&gt;&lt;th&gt;Keybinding&lt;/th&gt;&lt;th&gt;Description&lt;/th&gt;&lt;/tr&gt;
  &lt;tr&gt;&lt;td&gt;&lt;code&gt;s-l s s&lt;/code&gt;&lt;/td&gt;&lt;td&gt;Entry point for the server startup.&lt;/td&gt;&lt;/tr&gt;
  &lt;tr&gt;&lt;td&gt;&lt;code&gt;s-l s r&lt;/code&gt;&lt;/td&gt;&lt;td&gt;Restart language server&lt;/td&gt;&lt;/tr&gt;
  &lt;tr&gt;&lt;td&gt;&lt;code&gt;s-l s q&lt;/code&gt;&lt;/td&gt;&lt;td&gt;Shutdown language server&lt;/td&gt;&lt;/tr&gt;
  &lt;tr&gt;&lt;td&gt;&lt;code&gt;s-l s d&lt;/code&gt;&lt;/td&gt;&lt;td&gt;Describes current dession&lt;/td&gt;&lt;/tr&gt;
  &lt;tr&gt;&lt;td&gt;&lt;code&gt;s-l s D&lt;/code&gt;&lt;/td&gt;&lt;td&gt;Disconnect the buffer from the language server keeping the server running.&lt;/td&gt;&lt;/tr&gt;
  &lt;tr&gt;&lt;td&gt;&lt;code&gt;s-l = =&lt;/code&gt;&lt;/td&gt;&lt;td&gt;Ask the server to format this document.&lt;/td&gt;&lt;/tr&gt;
  &lt;tr&gt;&lt;td&gt;&lt;code&gt;s-l = r&lt;/code&gt;&lt;/td&gt;&lt;td&gt;Ask the server to format the region, or if none is selected, the current line.&lt;/td&gt;&lt;/tr&gt;
  &lt;tr&gt;&lt;td&gt;&lt;code&gt;s-l F a&lt;/code&gt;&lt;/td&gt;&lt;td&gt;Add new project root to the list of workspace folders.&lt;/td&gt;&lt;/tr&gt;
  &lt;tr&gt;&lt;td&gt;&lt;code&gt;s-l F r&lt;/code&gt;&lt;/td&gt;&lt;td&gt;Remove project root from the list of workspace folders.&lt;/td&gt;&lt;/tr&gt;
  &lt;tr&gt;&lt;td&gt;&lt;code&gt;s-l F b&lt;/code&gt;&lt;/td&gt;&lt;td&gt;Remove project root from the workspace blacklist.&lt;/td&gt;&lt;/tr&gt;
  &lt;tr&gt;&lt;td&gt;&lt;code&gt;s-l T l&lt;/code&gt;&lt;/td&gt;&lt;td&gt;Toggle code-lens overlays.&lt;/td&gt;&lt;/tr&gt;
  &lt;tr&gt;&lt;td&gt;&lt;code&gt;s-l T L&lt;/code&gt;&lt;/td&gt;&lt;td&gt;Toggle client-server protocol logging.&lt;/td&gt;&lt;/tr&gt;
  &lt;tr&gt;&lt;td&gt;&lt;code&gt;s-l T h&lt;/code&gt;&lt;/td&gt;&lt;td&gt;Toggle symbol highlighting.&lt;/td&gt;&lt;/tr&gt;
  &lt;tr&gt;&lt;td&gt;&lt;code&gt;s-l T S&lt;/code&gt;&lt;/td&gt;&lt;td&gt;Toggle minor mode for showing information for current line in sideline. (requires &lt;code&gt;lsp-ui&lt;/code&gt;)&lt;/td&gt;&lt;/tr&gt;
  &lt;tr&gt;&lt;td&gt;&lt;code&gt;s-l T d&lt;/code&gt;&lt;/td&gt;&lt;td&gt;Toggle minor mode for showing hover information in child frame. (requires &lt;code&gt;lsp-ui&lt;/code&gt;)&lt;/td&gt;&lt;/tr&gt;
  &lt;tr&gt;&lt;td&gt;&lt;code&gt;s-l T s&lt;/code&gt;&lt;/td&gt;&lt;td&gt;Toggle signature auto activate.&lt;/td&gt;&lt;/tr&gt;
  &lt;tr&gt;&lt;td&gt;&lt;code&gt;s-l T f&lt;/code&gt;&lt;/td&gt;&lt;td&gt;Toggle on type formatting.&lt;/td&gt;&lt;/tr&gt;
  &lt;tr&gt;&lt;td&gt;&lt;code&gt;s-l T T&lt;/code&gt;&lt;/td&gt;&lt;td&gt;Toggle global minor mode for synchronizing &lt;code&gt;lsp-mode&lt;/code&gt; workspace folders and &lt;code&gt;treemacs&lt;/code&gt; projects. (requires &lt;code&gt;lsp-treemacs&lt;/code&gt;)&lt;/td&gt;&lt;/tr&gt;
  &lt;tr&gt;&lt;td&gt;&lt;code&gt;s-l g g&lt;/code&gt;&lt;/td&gt;&lt;td&gt;Find definitions of the symbol under point.&lt;/td&gt;&lt;/tr&gt;
  &lt;tr&gt;&lt;td&gt;&lt;code&gt;s-l g r&lt;/code&gt;&lt;/td&gt;&lt;td&gt;Find references of the symbol under point.&lt;/td&gt;&lt;/tr&gt;
  &lt;tr&gt;&lt;td&gt;&lt;code&gt;s-l g i&lt;/code&gt;&lt;/td&gt;&lt;td&gt;Find implementations of the symbol under point.&lt;/td&gt;&lt;/tr&gt;
  &lt;tr&gt;&lt;td&gt;&lt;code&gt;s-l g t&lt;/code&gt;&lt;/td&gt;&lt;td&gt;Find type definitions of the symbol under point.&lt;/td&gt;&lt;/tr&gt;
  &lt;tr&gt;&lt;td&gt;&lt;code&gt;s-l g d&lt;/code&gt;&lt;/td&gt;&lt;td&gt;Find declarations of the symbol under point.&lt;/td&gt;&lt;/tr&gt;
  &lt;tr&gt;&lt;td&gt;&lt;code&gt;s-l g h&lt;/code&gt;&lt;/td&gt;&lt;td&gt;Show the incoming call hierarchy for the symbol at point. (requires &lt;code&gt;lsp-treemacs&lt;/code&gt;)&lt;/td&gt;&lt;/tr&gt;
  &lt;tr&gt;&lt;td&gt;&lt;code&gt;s-l g a&lt;/code&gt;&lt;/td&gt;&lt;td&gt;Find all meaningful symbols that match pattern.&lt;/td&gt;&lt;/tr&gt;
  &lt;tr&gt;&lt;td&gt;&lt;code&gt;s-l h h&lt;/code&gt;&lt;/td&gt;&lt;td&gt;Display the type signature and documentation of the thing at&lt;/td&gt;&lt;/tr&gt;
  &lt;tr&gt;&lt;td&gt;&lt;code&gt;s-l h s&lt;/code&gt;&lt;/td&gt;&lt;td&gt;Activate signature help.&lt;/td&gt;&lt;/tr&gt;
  &lt;tr&gt;&lt;td&gt;&lt;code&gt;s-l h g&lt;/code&gt;&lt;/td&gt;&lt;td&gt;Trigger display hover information popup and hide it on next typing.&lt;/td&gt;&lt;/tr&gt;
  &lt;tr&gt;&lt;td&gt;&lt;code&gt;s-l r r&lt;/code&gt;&lt;/td&gt;&lt;td&gt;Rename the symbol (and all references to it).&lt;/td&gt;&lt;/tr&gt;
  &lt;tr&gt;&lt;td&gt;&lt;code&gt;s-l r o&lt;/code&gt;&lt;/td&gt;&lt;td&gt;Perform the source.organizeImports code action, if available.&lt;/td&gt;&lt;/tr&gt;
  &lt;tr&gt;&lt;td&gt;&lt;code&gt;s-l a a&lt;/code&gt;&lt;/td&gt;&lt;td&gt;Execute code action action.&lt;/td&gt;&lt;/tr&gt;
  &lt;tr&gt;&lt;td&gt;&lt;code&gt;s-l a l&lt;/code&gt;&lt;/td&gt;&lt;td&gt;Click lsp lens using ‘avy’ package.&lt;/td&gt;&lt;/tr&gt;
  &lt;tr&gt;&lt;td&gt;&lt;code&gt;s-l a h&lt;/code&gt;&lt;/td&gt;&lt;td&gt;Highlight symbol at point.&lt;/td&gt;&lt;/tr&gt;
  &lt;tr&gt;&lt;td&gt;&lt;code&gt;s-l G g&lt;/code&gt;&lt;/td&gt;&lt;td&gt;Peek definitions to the identifier at point. (requires &lt;code&gt;lsp-ui&lt;/code&gt;)&lt;/td&gt;&lt;/tr&gt;
  &lt;tr&gt;&lt;td&gt;&lt;code&gt;s-l G r&lt;/code&gt;&lt;/td&gt;&lt;td&gt;Peek references to the identifier at point. (requires &lt;code&gt;lsp-ui&lt;/code&gt;)&lt;/td&gt;&lt;/tr&gt;
  &lt;tr&gt;&lt;td&gt;&lt;code&gt;s-l G i&lt;/code&gt;&lt;/td&gt;&lt;td&gt;Peek implementation locations of the symbol at point. (requires &lt;code&gt;lsp-ui&lt;/code&gt;)&lt;/td&gt;&lt;/tr&gt;
  &lt;tr&gt;&lt;td&gt;&lt;code&gt;s-l G s&lt;/code&gt;&lt;/td&gt;&lt;td&gt;Peek symbols in the worskpace. (requires &lt;code&gt;lsp-ui&lt;/code&gt;)&lt;/td&gt;&lt;/tr&gt;
&lt;/tbody&gt;&lt;/table&gt;
&lt;h3&gt;&lt;a id="user-content-which-key-integration" class="anchor" aria-hidden="true" href="#which-key-integration"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;which-key integration&lt;/h3&gt;
&lt;p&gt;To enable &lt;a href="https://github.com/justbur/emacs-which-key/"&gt;which-key&lt;/a&gt; integration put that in your config.&lt;/p&gt;
&lt;div class="highlight highlight-source-emacs-lisp"&gt;&lt;pre&gt;(&lt;span class="pl-c1"&gt;with-eval-after-load&lt;/span&gt; &lt;span class="pl-c1"&gt;'lsp-mode&lt;/span&gt;
  (&lt;span class="pl-c1"&gt;add-hook&lt;/span&gt; &lt;span class="pl-c1"&gt;'lsp-mode-hook&lt;/span&gt; &lt;span class="pl-c1"&gt;#&lt;span class="pl-c1"&gt;'lsp-enable-which-key-integration&lt;/span&gt;&lt;/span&gt;))&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="examples/which-key.png"&gt;&lt;img src="examples/which-key.png" alt="examples/which-key.png" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-settings" class="anchor" aria-hidden="true" href="#settings"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Settings&lt;/h2&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;code&gt;lsp-log-io&lt;/code&gt; - If non-nil, print all messages to and from the language server to &lt;code&gt;*lsp-log*&lt;/code&gt;.&lt;/li&gt;
  &lt;li&gt;&lt;code&gt;lsp-print-performance&lt;/code&gt; - If non-nil, print performance info. to &lt;code&gt;*lsp-log*&lt;/code&gt;.&lt;/li&gt;
  &lt;li&gt;&lt;code&gt;lsp-inhibit-message&lt;/code&gt; - If non-nil, inhibit the message echo via &lt;code&gt;inhibit-message&lt;/code&gt;.&lt;/li&gt;
  &lt;li&gt;&lt;code&gt;lsp-report-if-no-buffer&lt;/code&gt; - If non nil the errors will be reported even when the file is not open.&lt;/li&gt;
  &lt;li&gt;&lt;code&gt;lsp-keep-workspace-alive&lt;/code&gt; - If non nil keep workspace alive when the last workspace buffer is closed.&lt;/li&gt;
  &lt;li&gt;&lt;code&gt;lsp-enable-snippet&lt;/code&gt; - Enable/disable snippet completion support.&lt;/li&gt;
  &lt;li&gt;&lt;code&gt;lsp-auto-guess-root&lt;/code&gt; - Automatically guess the project root using projectile/project. Do &lt;b&gt;not&lt;/b&gt; use this setting unless you are familiar with &lt;code&gt;lsp-mode&lt;/code&gt; internals and you are sure that all of your projects are following &lt;code&gt;projectile=/=project.el&lt;/code&gt; conventions.&lt;/li&gt;
  &lt;li&gt;&lt;code&gt;lsp-restart&lt;/code&gt; - Defines how server exited event must be handled.&lt;/li&gt;
  &lt;li&gt;&lt;code&gt;lsp-session-file&lt;/code&gt; - File where session information is stored.&lt;/li&gt;
  &lt;li&gt;&lt;code&gt;lsp-auto-configure&lt;/code&gt; - Auto configure &lt;code&gt;lsp-mode&lt;/code&gt;. When set to t &lt;code&gt;lsp-mode&lt;/code&gt; will auto-configure &lt;code&gt;lsp-ui&lt;/code&gt; and &lt;code&gt;company-lsp&lt;/code&gt;.&lt;/li&gt;
  &lt;li&gt;&lt;code&gt;lsp-document-sync-method&lt;/code&gt; - How to sync the document with the language server.&lt;/li&gt;
  &lt;li&gt;&lt;code&gt;lsp-auto-execute-action&lt;/code&gt; - Auto-execute single action.&lt;/li&gt;
  &lt;li&gt;&lt;code&gt;lsp-eldoc-render-all&lt;/code&gt; - Display all of the info returned by &lt;code&gt;document/onHover&lt;/code&gt;. If this is nil, &lt;code&gt;eldoc&lt;/code&gt; will show only the symbol information.&lt;/li&gt;
  &lt;li&gt;&lt;code&gt;lsp-enable-completion-at-point&lt;/code&gt; - Enable &lt;code&gt;completion-at-point&lt;/code&gt; integration.&lt;/li&gt;
  &lt;li&gt;&lt;code&gt;lsp-enable-xref&lt;/code&gt; - Enable xref integration.&lt;/li&gt;
  &lt;li&gt;&lt;code&gt;lsp-diagnostics-package&lt;/code&gt; - Specifies which package to use for diagnostics. Choose from &lt;code&gt;:auto&lt;/code&gt;, &lt;code&gt;:flycheck&lt;/code&gt;, &lt;code&gt;:flymake&lt;/code&gt; and &lt;code&gt;:none&lt;/code&gt;. Default is &lt;code&gt;:auto&lt;/code&gt; which means use &lt;code&gt;:flycheck&lt;/code&gt; if present.&lt;/li&gt;
  &lt;li&gt;&lt;code&gt;lsp-enable-indentation&lt;/code&gt; - Indent regions using the file formatting functionality provided by the language server.&lt;/li&gt;
  &lt;li&gt;&lt;code&gt;lsp-enable-on-type-formatting&lt;/code&gt; - Enable &lt;code&gt;textDocument/onTypeFormatting&lt;/code&gt; integration.&lt;/li&gt;
  &lt;li&gt;&lt;code&gt;lsp-before-save-edits&lt;/code&gt; - If non-nil, &lt;code&gt;lsp-mode&lt;/code&gt; will apply edits suggested by the language server before saving a document.&lt;/li&gt;
  &lt;li&gt;&lt;code&gt;lsp-imenu-show-container-name&lt;/code&gt; - Display the symbol’s container name in an imenu entry.&lt;/li&gt;
  &lt;li&gt;&lt;code&gt;lsp-imenu-container-name-separator&lt;/code&gt; - Separator string to use to separate the container name from the symbol while displaying imenu entries.&lt;/li&gt;
  &lt;li&gt;&lt;code&gt;lsp-imenu-sort-methods&lt;/code&gt; - How to sort the imenu items. The value is a list of &lt;code&gt;kind&lt;/code&gt;, &lt;code&gt;name&lt;/code&gt; or &lt;code&gt;position&lt;/code&gt;. Priorities are determined by the index of the element.&lt;/li&gt;
  &lt;li&gt;&lt;code&gt;lsp-response-timeout&lt;/code&gt; - Number of seconds to wait for a response from the language server before timing out.&lt;/li&gt;
  &lt;li&gt;&lt;code&gt;lsp-enable-file-watchers&lt;/code&gt; - If non-nil lsp-mode will watch the files in the workspace if the server has requested that.&lt;/li&gt;
  &lt;li&gt;&lt;code&gt;lsp-server-trace&lt;/code&gt; - Request trace mode on the language server.&lt;/li&gt;
  &lt;li&gt;&lt;code&gt;lsp-enable-semantic-highlighting&lt;/code&gt; - Enable experimental semantic highlighting support&lt;/li&gt;
  &lt;li&gt;&lt;code&gt;lsp-enable-imenu&lt;/code&gt; - If non-nil, automatically enable imenu integration when server provides &lt;code&gt;textDocument/documentSymbol&lt;/code&gt;.&lt;/li&gt;
  &lt;li&gt;&lt;code&gt;lsp-signature-auto-activate&lt;/code&gt; - Auto activate signature when trigger char is pressed.&lt;/li&gt;
  &lt;li&gt;&lt;code&gt;lsp-signature-render-documentation&lt;/code&gt; - Include signature documentation in signature help.&lt;/li&gt;
  &lt;li&gt;&lt;code&gt;lsp-enable-text-document-color&lt;/code&gt; - Enable &lt;code&gt;textDocument/documentColor&lt;/code&gt; when server supports it.&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-screenshots" class="anchor" aria-hidden="true" href="#screenshots"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Screenshots&lt;/h2&gt;
&lt;ul&gt;
  &lt;li&gt;RUST Completion with company-lsp
    &lt;a target="_blank" rel="noopener noreferrer" href="examples/completion.png"&gt;&lt;img src="examples/completion.png" alt="examples/completion.png" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;Typescript references using lsp-ui
    &lt;a target="_blank" rel="noopener noreferrer" href="examples/references.png"&gt;&lt;img src="examples/references.png" alt="examples/references.png" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;Debugging Python using dap-mode
    &lt;a target="_blank" rel="noopener noreferrer" href="examples/python_debugging.png"&gt;&lt;img src="examples/python_debugging.png" alt="examples/python_debugging.png" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;Call hierarchy via ccls
    &lt;a target="_blank" rel="noopener noreferrer" href="examples/call-hierarchy-ccls.png"&gt;&lt;img src="examples/call-hierarchy-ccls.png" alt="examples/call-hierarchy-ccls.png" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;Metals Doctor
    &lt;a target="_blank" rel="noopener noreferrer" href="examples/metals-doctor.png"&gt;&lt;img src="examples/metals-doctor.png" alt="examples/metals-doctor.png" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;Semantic highlighting as provided by clangd (built from unreleased 10.0 branch). In this screenshot, all other font-locking has been disabled (hence no syntax highlighting of comments or basic keywords such as &lt;code&gt;auto&lt;/code&gt;)
    &lt;a target="_blank" rel="noopener noreferrer" href="examples/clangd_semantic_highlighting.png"&gt;&lt;img src="examples/clangd_semantic_highlighting.png" alt="examples/clangd_semantic_highlighting.png" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-extensions" class="anchor" aria-hidden="true" href="#extensions"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Extensions&lt;/h2&gt;
&lt;h3&gt;&lt;a id="user-content-tramp" class="anchor" aria-hidden="true" href="#tramp"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;TRAMP&lt;/h3&gt;
&lt;p&gt;LSP mode has support for tramp buffers with the following requirements:&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;The language server has to be present on the remote server.&lt;/li&gt;
  &lt;li&gt;Having multi folder language server (like &lt;a href="https://github.com/eclipse/eclipse.jdt.ls"&gt;Eclipse JDT LS&lt;/a&gt;) cannot have local and remote workspace folders.&lt;/li&gt;
&lt;/ul&gt;
&lt;h4&gt;&lt;a id="user-content-how-does-it-work-1" class="anchor" aria-hidden="true" href="#how-does-it-work-1"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;How does it work?&lt;/h4&gt;
&lt;p&gt;&lt;code&gt;lsp-mode&lt;/code&gt; detects whether a particular file is located on remote machine and looks for a client which matches current file and it is marked as &lt;code&gt;:remote?&lt;/code&gt; t. Then &lt;code&gt;lsp-mode&lt;/code&gt; starts the client through tramp.&lt;/p&gt;
&lt;h4&gt;&lt;a id="user-content-sample-configuration" class="anchor" aria-hidden="true" href="#sample-configuration"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Sample configuration&lt;/h4&gt;
&lt;p&gt;Here it is example how you can configure python language server to work when using &lt;code&gt;TRAMP&lt;/code&gt;. Note that if you are trying to convert existing language server configuration you should copy all of it’s properties(e. g. &lt;code&gt;:request-handlers&lt;/code&gt;, &lt;code&gt;activation-fn&lt;/code&gt;, etc).&lt;/p&gt;
&lt;div class="highlight highlight-source-emacs-lisp"&gt;&lt;pre&gt;(lsp-register-client
 (make-lsp-client &lt;span class="pl-c1"&gt;:new-connection&lt;/span&gt; (lsp-tramp-connection &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;&amp;lt;insert your LS's binary name or path here&amp;gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
                  &lt;span class="pl-c1"&gt;:major-modes&lt;/span&gt; '(&lt;span class="pl-c1"&gt;python-mode&lt;/span&gt;)
                  &lt;span class="pl-c1"&gt;:remote?&lt;/span&gt; &lt;span class="pl-c1"&gt;t&lt;/span&gt;
                  &lt;span class="pl-c1"&gt;:server-id&lt;/span&gt; &lt;span class="pl-c1"&gt;'pyls-remote&lt;/span&gt;))&lt;/pre&gt;&lt;/div&gt;
&lt;h4&gt;&lt;a id="user-content-dealing-with-stderr" class="anchor" aria-hidden="true" href="#dealing-with-stderr"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Dealing with stderr&lt;/h4&gt;
&lt;p&gt;With TRAMP, Emacs does not have an easy way to distinguish stdout and stderr, so when the underlying LSP process writes to stderr, it breaks the &lt;code&gt;lsp-mode&lt;/code&gt; parser. As a workaround, &lt;code&gt;lsp-mode&lt;/code&gt; is redirecting stderr to &lt;code&gt;/tmp/&amp;lt;process-name&amp;gt;-&amp;lt;id&amp;gt;~stderr&lt;/code&gt;.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-limitations" class="anchor" aria-hidden="true" href="#limitations"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Limitations&lt;/h2&gt;
&lt;h3&gt;&lt;a id="user-content-file-watches" class="anchor" aria-hidden="true" href="#file-watches"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;File watches&lt;/h3&gt;
&lt;p&gt;When some of the workspaces that are active in the current project requests file notifications via &lt;code&gt;workspace/didChangeWatchedFiles&lt;/code&gt; &lt;code&gt;lsp-mode&lt;/code&gt; will start monitoring each of the folders in the workspace for changes. In case your project contains a lot of files you might want to disable file monitoring via &lt;code&gt;lsp-enable-file-watchers&lt;/code&gt; (you may use dir-locals).&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-contributions" class="anchor" aria-hidden="true" href="#contributions"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Contributions&lt;/h2&gt;
&lt;p&gt;Contributions are very much welcome.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-members" class="anchor" aria-hidden="true" href="#members"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Members&lt;/h3&gt;
&lt;p&gt;Here it is a list of the current &lt;code&gt;lsp-mode&lt;/code&gt; members and what they are primary working on/responsible for.&lt;/p&gt;
&lt;table&gt;
  &lt;tbody&gt;&lt;tr&gt;&lt;th&gt;Member&lt;/th&gt;&lt;th&gt;Responsible for:&lt;/th&gt;&lt;/tr&gt;
  &lt;tr&gt;&lt;td&gt;&lt;a href="https://github.com/TOTBWF"&gt;TOTBWF&lt;/a&gt;&lt;/td&gt;&lt;td&gt;&lt;code&gt;F#&lt;/code&gt;&lt;/td&gt;&lt;/tr&gt;
  &lt;tr&gt;&lt;td&gt;&lt;a href="https://github.com/brotzeit"&gt;brotzeit&lt;/a&gt;&lt;/td&gt;&lt;td&gt;&lt;code&gt;Rust&lt;/code&gt;&lt;/td&gt;&lt;/tr&gt;
  &lt;tr&gt;&lt;td&gt;&lt;a href="https://github.com/dsyzling"&gt;dsyzling&lt;/a&gt;&lt;/td&gt;&lt;td&gt;&lt;code&gt;Scala&lt;/code&gt;&lt;/td&gt;&lt;/tr&gt;
  &lt;tr&gt;&lt;td&gt;&lt;a href="https://github.com/kurnevsky"&gt;kurnevsky&lt;/a&gt;&lt;/td&gt;&lt;td&gt;&lt;code&gt;Scala&lt;/code&gt; &amp;amp; &lt;code&gt;Rust&lt;/code&gt;&lt;/td&gt;&lt;/tr&gt;
  &lt;tr&gt;&lt;td&gt;&lt;a href="https://github.com/seagle0128"&gt;seagle0128&lt;/a&gt;&lt;/td&gt;&lt;td&gt;&lt;code&gt;Go&lt;/code&gt; &amp;amp; &lt;code&gt;MS Python Language Server&lt;/code&gt;&lt;/td&gt;&lt;/tr&gt;
  &lt;tr&gt;&lt;td&gt;&lt;a href="https://github.com/sebastiansturm"&gt;sebastiansturm&lt;/a&gt;&lt;/td&gt;&lt;td&gt;&lt;code&gt;lsp-mode&lt;/code&gt; core &amp;amp; &lt;code&gt;C++&lt;/code&gt;&lt;/td&gt;&lt;/tr&gt;
  &lt;tr&gt;&lt;td&gt;&lt;a href="https://github.com/vibhavp"&gt;vibhavp&lt;/a&gt;&lt;/td&gt;&lt;td&gt;&lt;code&gt;lsp-mode&lt;/code&gt; core&lt;/td&gt;&lt;/tr&gt;
  &lt;tr&gt;&lt;td&gt;&lt;a href="https://github.com/yyoncho"&gt;yyoncho&lt;/a&gt;&lt;/td&gt;&lt;td&gt;&lt;code&gt;lsp-mode&lt;/code&gt; core and &lt;code&gt;Java&lt;/code&gt;&lt;/td&gt;&lt;/tr&gt;
&lt;/tbody&gt;&lt;/table&gt;
&lt;h2&gt;&lt;a id="user-content-troubleshooting" class="anchor" aria-hidden="true" href="#troubleshooting"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Troubleshooting&lt;/h2&gt;
&lt;ul&gt;
  &lt;li&gt;set &lt;code&gt;lsp-log-io&lt;/code&gt; to &lt;code&gt;t&lt;/code&gt; to inspect communication between client and the server. Use &lt;code&gt;lsp-workspace-show-log&lt;/code&gt; to switch to the corresponding log buffer.&lt;/li&gt;
  &lt;li&gt;&lt;code&gt;lsp-describe-session&lt;/code&gt; will show the current projects roots + the started severs and allows inspecting the server capabilities.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="examples/describe.png"&gt;&lt;img src="examples/describe.png" alt="examples/describe.png" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-adding-support-for-languages" class="anchor" aria-hidden="true" href="#adding-support-for-languages"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Adding support for languages&lt;/h2&gt;
&lt;h3&gt;&lt;a id="user-content-registering-server" class="anchor" aria-hidden="true" href="#registering-server"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Registering server&lt;/h3&gt;
&lt;p&gt;Here it is the minimal configuration that is needed for new language server registration. Refer to the documentation of &lt;code&gt;lsp-client.el&lt;/code&gt; for the additional settings supported on registration time. &lt;code&gt;lsp-language-id-configuration&lt;/code&gt; must be updated to contain the corresponding mode -&amp;gt; language id - in this case &lt;code&gt;(python-mode . "python")&lt;/code&gt;&lt;/p&gt;
&lt;div class="highlight highlight-source-emacs-lisp"&gt;&lt;pre&gt;(&lt;span class="pl-k"&gt;defvar&lt;/span&gt; &lt;span class="pl-en"&gt;lsp-language-id-configuration&lt;/span&gt;
  '(...
    (&lt;span class="pl-c1"&gt;python-mode&lt;/span&gt; &lt;span class="pl-k"&gt;.&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;python&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
    ...))
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt;; if you are adding the support for your language server in separate repo use&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt;; (add-to-list 'lsp-language-id-configuration '(python-mode . "python"))&lt;/span&gt;

(lsp-register-client
 (make-lsp-client &lt;span class="pl-c1"&gt;:new-connection&lt;/span&gt; (lsp-stdio-connection &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;pyls&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
                  &lt;span class="pl-c1"&gt;:major-modes&lt;/span&gt; '(&lt;span class="pl-c1"&gt;python-mode&lt;/span&gt;)
                  &lt;span class="pl-c1"&gt;:server-id&lt;/span&gt; &lt;span class="pl-c1"&gt;'pyls&lt;/span&gt;))&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;If the language server supports environment variables to control additional behavior, you can register that by using the &lt;code&gt;:environment-fn&lt;/code&gt; function, like the Bash language client does:&lt;/p&gt;
&lt;div class="highlight highlight-source-emacs-lisp"&gt;&lt;pre&gt;(lsp-register-client
 (make-lsp-client &lt;span class="pl-c1"&gt;:new-connection&lt;/span&gt; (lsp-stdio-connection '(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;bash-language-server&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;start&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;))
                  &lt;span class="pl-c1"&gt;:major-modes&lt;/span&gt; '(&lt;span class="pl-c1"&gt;sh-mode&lt;/span&gt;)
                  &lt;span class="pl-c1"&gt;:priority&lt;/span&gt; &lt;span class="pl-c1"&gt;-1&lt;/span&gt;
                  &lt;span class="pl-c1"&gt;:environment-fn&lt;/span&gt; (&lt;span class="pl-k"&gt;lambda&lt;/span&gt; ()
                                    ((&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;EXPLAINSHELL_ENDPOINT&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; &lt;span class="pl-k"&gt;.&lt;/span&gt; lsp-bash-explainshell-endpoint)
                                     (&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;HIGHLIGHT_PARSING_ERRORS&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; &lt;span class="pl-k"&gt;.&lt;/span&gt; lsp-bash-highlight-parsing-errors)))
                  &lt;span class="pl-c1"&gt;:server-id&lt;/span&gt; &lt;span class="pl-c1"&gt;'bash-ls&lt;/span&gt;))&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;code&gt;lsp-bash-explainshell-endpoint&lt;/code&gt; and &lt;code&gt;lsp-bash-highlight-parsing-errors&lt;/code&gt; are language client &lt;code&gt;defcustom&lt;/code&gt; that expose supported server environment settings in a type-safe way. If you change any of those variables, restart the language server with &lt;code&gt;lsp-restart-workspace&lt;/code&gt; for the changes to be applied.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-sections" class="anchor" aria-hidden="true" href="#sections"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Sections&lt;/h3&gt;
&lt;p&gt;&lt;code&gt;lsp-mode&lt;/code&gt; provides tools to bridge emacs &lt;code&gt;defcustom&lt;/code&gt; as a language configuration sections properties(see &lt;a href="https://microsoft.github.io/language-server-protocol/specification#workspace_configuration" rel="nofollow"&gt;specification workspace/configuration&lt;/a&gt;). In addition you may use &lt;code&gt;lsp-generate-settings&lt;/code&gt; from &lt;a href="https://github.com/emacs-lsp/lsp-mode/blob/master/scripts/lsp-generate-settings.el"&gt;Generate Settings script&lt;/a&gt; to generate &lt;code&gt;defcustom&lt;/code&gt; from &lt;code&gt;package.json&lt;/code&gt; VScode plugin manifest. Example:&lt;/p&gt;
&lt;div class="highlight highlight-source-emacs-lisp"&gt;&lt;pre&gt;(&lt;span class="pl-k"&gt;defcustom&lt;/span&gt; &lt;span class="pl-en"&gt;lsp-foo-language-server-property&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;bar&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;
  &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;Demo property.&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;
  &lt;span class="pl-c1"&gt;:group&lt;/span&gt; &lt;span class="pl-c1"&gt;'foo-ls&lt;/span&gt;
  &lt;span class="pl-c1"&gt;:risky&lt;/span&gt; &lt;span class="pl-c1"&gt;t&lt;/span&gt;)

(lsp-register-custom-settings '((&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;foo.section.property&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; lsp-foo-language-server-property)))

(lsp-configuration-section  &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;foo&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt;; =&amp;gt;  (("foo" ("settings" ("property" . "bar"))))&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h2&gt;&lt;a id="user-content-faq" class="anchor" aria-hidden="true" href="#faq"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;FAQ&lt;/h2&gt;
&lt;ul&gt;
  &lt;li&gt;How do I troubleshoot “Server FOO-LS:pid exited with status signal. Do you want to restart it? (y or n)”?
    &lt;ul&gt;
      &lt;li&gt;This message indicates that the language server has crashed for some
        reason. You may check the server stderr which is &lt;code&gt;*FOO-LS::stderr*&lt;/code&gt;. If
        you get this message on startup you may try to run the exact command that
        &lt;code&gt;lsp-mode&lt;/code&gt; is running in the terminal. You may find it in &lt;code&gt;*lsp-log*&lt;/code&gt;
        buffer.&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;How to configure a server with local variables?
    &lt;ul&gt;
      &lt;li&gt;Add &lt;code&gt;lsp&lt;/code&gt; server call to &lt;code&gt;hack-local-variables-hook&lt;/code&gt; which runs right after the local variables are loaded.
        &lt;div class="highlight highlight-source-emacs-lisp"&gt;&lt;pre&gt;(&lt;span class="pl-c1"&gt;add-hook&lt;/span&gt; &lt;span class="pl-c1"&gt;'hack-local-variables-hook&lt;/span&gt;
          (&lt;span class="pl-k"&gt;lambda&lt;/span&gt; () (&lt;span class="pl-k"&gt;when&lt;/span&gt; (&lt;span class="pl-c1"&gt;derived-mode-p&lt;/span&gt; &lt;span class="pl-c1"&gt;'XXX-mode&lt;/span&gt;) (lsp))))
        &lt;/pre&gt;&lt;/div&gt;
      &lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;I have multiple language servers registered for language FOO. Which one will be used when opening a project?
    &lt;ul&gt;
      &lt;li&gt;The one with highest priority wins. &lt;code&gt;lsp-clients.el&lt;/code&gt; predefined servers have
        priority -1, lower than external packages (priority 0 if unspecified). If a
        server is registered with &lt;code&gt;:add-on?&lt;/code&gt; flag set to &lt;code&gt;t&lt;/code&gt; it will be started in
        parallel to the other servers that are registered for the current mode.&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;I have multiple language servers for language &lt;code&gt;FOO&lt;/code&gt; and I want to select the server per project, what can I do?
    &lt;ul&gt;
      &lt;li&gt;You may create &lt;code&gt;dir-local&lt;/code&gt; for each of the projects and specify list of
        &lt;code&gt;lsp-enabled-clients&lt;/code&gt;. This will narrow the list of the clients that are
        going to be tested for the project.&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;The completion does not work fine and inserts arguments and placeholders, what I am doing wrong?
    &lt;ul&gt;
      &lt;li&gt;Snippet support works only with &lt;code&gt;company-lsp&lt;/code&gt; so if you are using
        &lt;code&gt;completion-at-point&lt;/code&gt; the snippets won’t be expanded and you should
        either disable them by setting &lt;code&gt;lsp-enable-snippet&lt;/code&gt; to &lt;code&gt;nil&lt;/code&gt; or you
        should switch to &lt;code&gt;company-lsp&lt;/code&gt;. Note also that &lt;code&gt;company-tng&lt;/code&gt; frontend
        does not support snippet expansion(see &lt;a href="https://github.com/company-mode/company-mode/issues/891"&gt;company-mode#891&lt;/a&gt;)&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;How to automatically follow &lt;code&gt;lsp-ui-log&lt;/code&gt;?
    &lt;ul&gt;
      &lt;li&gt;Go into the log buffer and execute the following snippet(source: &lt;a href="https://stackoverflow.com/questions/12663061/emacs-auto-scrolling-log-buffer" rel="nofollow"&gt;Emacs auto scrolling log buffer&lt;/a&gt;)&lt;/li&gt;
    &lt;/ul&gt;
    &lt;div class="highlight highlight-source-emacs-lisp"&gt;&lt;pre&gt;(&lt;span class="pl-k"&gt;set&lt;/span&gt; (&lt;span class="pl-c1"&gt;make-local-variable&lt;/span&gt; &lt;span class="pl-c1"&gt;'window-point-insertion-type&lt;/span&gt;) &lt;span class="pl-c1"&gt;t&lt;/span&gt;)
    &lt;/pre&gt;&lt;/div&gt;
  &lt;/li&gt;
  &lt;li&gt;I am getting “Package ‘spinner-1.7.3’ is unavailable” when trying to install &lt;code&gt;lsp-mode&lt;/code&gt;.
    &lt;ul&gt;
      &lt;li&gt;This is caused by GPG keys used by the ELPA package manager not being up
        to date. You may fix by installing: &lt;a href="https://elpa.gnu.org/packages/gnu-elpa-keyring-update.html" rel="nofollow"&gt;gnu-elpa-keyring-update&lt;/a&gt;&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;Json completion doesn’t seem working?
    &lt;ul&gt;
      &lt;li&gt;The latest &lt;a href="https://www.npmjs.com/package/vscode-json-languageserver/v/1.2.2" rel="nofollow"&gt;vscode-json-languageserver&lt;/a&gt; is broken. You will need to install the earlier version of it &lt;code&gt;npm i vscode-json-languageserver@1.2.1&lt;/code&gt;&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;The flycheck does not work in &lt;code&gt;typescript&lt;/code&gt;, &lt;code&gt;html&lt;/code&gt; and &lt;code&gt;javascript&lt;/code&gt; blocks in &lt;code&gt;vue-mode&lt;/code&gt;. How to fix that?
    &lt;ul&gt;
      &lt;li&gt;This is caused by the fact that &lt;code&gt;vue-mode&lt;/code&gt; uses multiple major modes in
        single file and the &lt;code&gt;lsp-ui&lt;/code&gt; checker may not associated with the major mode
        at point. You could fix that by adding the following lines to your config.
        &lt;div class="highlight highlight-source-emacs-lisp"&gt;&lt;pre&gt;(&lt;span class="pl-c1"&gt;with-eval-after-load&lt;/span&gt; &lt;span class="pl-c1"&gt;'lsp-mode&lt;/span&gt;
  (&lt;span class="pl-k"&gt;mapc&lt;/span&gt; &lt;span class="pl-c1"&gt;#&lt;span class="pl-c1"&gt;'lsp-flycheck-add-mode&lt;/span&gt;&lt;/span&gt; '(&lt;span class="pl-c1"&gt;typescript-mode&lt;/span&gt; js-mode css-mode vue-html-mode)))
        &lt;/pre&gt;&lt;/div&gt;
      &lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-see-also" class="anchor" aria-hidden="true" href="#see-also"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;See also&lt;/h2&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;a href="https://github.com/emacs-lsp/lsp-docker/"&gt;lsp-docker&lt;/a&gt; - provide docker image with preconfigured language servers with corresponding emacs configuration.&lt;/li&gt;
  &lt;li&gt;&lt;a href="https://github.com/sebastiencs/company-box/"&gt;company-box&lt;/a&gt; - &lt;code&gt;company&lt;/code&gt; frontend with icons.&lt;/li&gt;
  &lt;li&gt;&lt;a href="https://github.com/emacs-lsp/dap-mode"&gt;dap-mode&lt;/a&gt; - Debugger integration for &lt;code&gt;lsp-mode&lt;/code&gt;.&lt;/li&gt;
  &lt;li&gt;&lt;a href="https://github.com/joaotavora/eglot"&gt;eglot&lt;/a&gt; - An alternative minimal LSP implementation.&lt;/li&gt;
  &lt;li&gt;&lt;a href="https://github.com/justbur/emacs-which-key/"&gt;which-key&lt;/a&gt; - Emacs package that displays available keybindings in popup&lt;/li&gt;
  &lt;li&gt;&lt;a href="https://github.com/bbatsov/projectile/"&gt;projectile&lt;/a&gt; - Project Interaction Library for Emacs&lt;/li&gt;
&lt;/ul&gt;
&lt;/article&gt;&lt;/div&gt;</description><author>emacs-lsp</author><guid isPermaLink="false">https://github.com/emacs-lsp/lsp-mode</guid><pubDate>Tue, 11 Feb 2020 00:06:00 GMT</pubDate></item><item><title>emacs-evil/evil #7 in Emacs Lisp, This month</title><link>https://github.com/emacs-evil/evil</link><description>&lt;p&gt;&lt;i&gt;The extensible vi layer for Emacs.&lt;/i&gt;&lt;/p&gt;&lt;div id="readme" class="md" data-path="README.md"&gt;&lt;article class="markdown-body entry-content p-5" itemprop="text"&gt;&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="https://raw.githubusercontent.com/emacs-evil/evil/master/doc/logo.png"&gt;&lt;img src="https://raw.githubusercontent.com/emacs-evil/evil/master/doc/logo.png" alt="An extensible vi layer for Emacs" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href="https://travis-ci.org/emacs-evil/evil" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/9fc8dff9b4c535f17a789c81937dd32e38822c23/68747470733a2f2f7472617669732d63692e6f72672f656d6163732d6576696c2f6576696c2e7376673f6272616e63683d6d6173746572" alt="Build Status" data-canonical-src="https://travis-ci.org/emacs-evil/evil.svg?branch=master" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://melpa.org/#/evil" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/bd97222c6e281edeeb067bf6f5926b7c7b16519a/68747470733a2f2f6d656c70612e6f72672f7061636b616765732f6576696c2d62616467652e737667" alt="MELPA" data-canonical-src="https://melpa.org/packages/evil-badge.svg" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://stable.melpa.org/#/evil" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/d508a703cde2d4c7f4ac64e5b4bb25d24161bf0c/68747470733a2f2f737461626c652e6d656c70612e6f72672f7061636b616765732f6576696c2d62616467652e737667" alt="MELPA Stable" data-canonical-src="https://stable.melpa.org/packages/evil-badge.svg" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://evil.readthedocs.io/en/latest/?badge=latest" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/5e5f5413354f75f41ad51c9280a6d1bdace0b586/68747470733a2f2f72656164746865646f63732e6f72672f70726f6a656374732f6576696c2f62616467652f3f76657273696f6e3d6c6174657374" alt="Documentation Status" data-canonical-src="https://readthedocs.org/projects/evil/badge/?version=latest" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://www.gnu.org/licenses/gpl-3.0" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/bf135a9cea09d0ea4bba410582c0e70ec8222736/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f4c6963656e73652d47504c25323076332d626c75652e737667" alt="License: GPL v3" data-canonical-src="https://img.shields.io/badge/License-GPL%20v3-blue.svg" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Evil is an &lt;strong&gt;e&lt;/strong&gt;xtensible &lt;strong&gt;vi&lt;/strong&gt; &lt;strong&gt;l&lt;/strong&gt;ayer
for &lt;a href="http://www.gnu.org/software/emacs/" rel="nofollow"&gt;Emacs&lt;/a&gt;. It emulates the main features
of &lt;a href="http://www.vim.org/" rel="nofollow"&gt;Vim&lt;/a&gt;, and provides facilities for writing custom
extensions. Also see our page on &lt;a href="http://emacswiki.org/emacs/Evil" rel="nofollow"&gt;EmacsWiki&lt;/a&gt;.&lt;/p&gt;
&lt;h1&gt;&lt;a id="user-content-installation" class="anchor" aria-hidden="true" href="#installation"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Installation&lt;/h1&gt;
&lt;p&gt;See the
&lt;a href="https://evil.readthedocs.io/en/latest/overview.html#installation-via-package-el" rel="nofollow"&gt;official documentation&lt;/a&gt;
for installation instructions. We recommend using &lt;em&gt;package.el&lt;/em&gt;.&lt;/p&gt;
&lt;p&gt;As a quickstart, you can add the following code to your Emacs init
file.&lt;/p&gt;
&lt;div class="highlight highlight-source-emacs-lisp"&gt;&lt;pre&gt;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt;; Set up package.el to work with MELPA&lt;/span&gt;
(&lt;span class="pl-c1"&gt;require&lt;/span&gt; &lt;span class="pl-c1"&gt;'package&lt;/span&gt;)
(&lt;span class="pl-c1"&gt;add-to-list&lt;/span&gt; &lt;span class="pl-c1"&gt;'package-archives&lt;/span&gt;
             '(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;melpa&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; &lt;span class="pl-k"&gt;.&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;https://melpa.org/packages/&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;))
(&lt;span class="pl-c1"&gt;package-initialize&lt;/span&gt;)
(&lt;span class="pl-c1"&gt;package-refresh-contents&lt;/span&gt;)

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt;; Download Evil&lt;/span&gt;
(&lt;span class="pl-k"&gt;unless&lt;/span&gt; (&lt;span class="pl-c1"&gt;package-installed-p&lt;/span&gt; &lt;span class="pl-c1"&gt;'evil&lt;/span&gt;)
  (&lt;span class="pl-c1"&gt;package-install&lt;/span&gt; &lt;span class="pl-c1"&gt;'evil&lt;/span&gt;))

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt;; Enable Evil&lt;/span&gt;
(&lt;span class="pl-c1"&gt;require&lt;/span&gt; &lt;span class="pl-c1"&gt;'evil&lt;/span&gt;)
(evil-mode &lt;span class="pl-c1"&gt;1&lt;/span&gt;)&lt;/pre&gt;&lt;/div&gt;
&lt;h2&gt;&lt;a id="user-content-dependencies" class="anchor" aria-hidden="true" href="#dependencies"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Dependencies&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Evil requires Emacs 24.1 or later.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Evil requires &lt;a href="http://www.emacswiki.org/emacs/UndoTree" rel="nofollow"&gt;undo-tree.el&lt;/a&gt; in the
&lt;code&gt;load-path&lt;/code&gt; for linear undo and undo branches.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;For the motions &lt;code&gt;g;&lt;/code&gt; &lt;code&gt;g,&lt;/code&gt; and for the last-change-register &lt;code&gt;.&lt;/code&gt;, Evil requires the
&lt;a href="https://github.com/emacs-evil/goto-chg"&gt;goto-chg.el&lt;/a&gt; package,
which provides the functions &lt;code&gt;goto-last-change&lt;/code&gt; and &lt;code&gt;goto-last-change-reverse&lt;/code&gt;.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;For Emacs 24.1 and 24.2 Evil also requires
&lt;a href="https://elpa.gnu.org/packages/cl-lib.html" rel="nofollow"&gt;cl-lib&lt;/a&gt;.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h1&gt;&lt;a id="user-content-documentation" class="anchor" aria-hidden="true" href="#documentation"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Documentation&lt;/h1&gt;
&lt;p&gt;The latest version of the documentation is readable online
&lt;a href="https://evil.readthedocs.io/en/latest/index.html" rel="nofollow"&gt;here&lt;/a&gt;. It is also
available as
&lt;a href="https://readthedocs.org/projects/evil/downloads/pdf/latest/" rel="nofollow"&gt;PDF&lt;/a&gt; and
as &lt;a href="https://readthedocs.org/projects/evil/downloads/epub/latest/" rel="nofollow"&gt;EPUB&lt;/a&gt;.&lt;/p&gt;
&lt;h1&gt;&lt;a id="user-content-mailing-list" class="anchor" aria-hidden="true" href="#mailing-list"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Mailing list&lt;/h1&gt;
&lt;p&gt;Evil is discussed at the
&lt;a href="http://lists.ourproject.org/cgi-bin/mailman/listinfo/implementations-list" rel="nofollow"&gt;gmane.emacs.vim-emulation&lt;/a&gt;
mailing list.&lt;/p&gt;
&lt;h1&gt;&lt;a id="user-content-irc" class="anchor" aria-hidden="true" href="#irc"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;IRC&lt;/h1&gt;
&lt;p&gt;Visit us on &lt;code&gt;irc.freenode.net #evil-mode&lt;/code&gt;.&lt;/p&gt;
&lt;h1&gt;&lt;a id="user-content-contribution" class="anchor" aria-hidden="true" href="#contribution"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Contribution&lt;/h1&gt;
&lt;p&gt;See
&lt;a href="https://github.com/emacs-evil/evil/blob/master/CONTRIBUTING.md"&gt;CONTRIBUTING.md&lt;/a&gt;
for guidelines for issues and pull requests.&lt;/p&gt;
&lt;/article&gt;&lt;/div&gt;</description><author>emacs-evil</author><guid isPermaLink="false">https://github.com/emacs-evil/evil</guid><pubDate>Tue, 11 Feb 2020 00:07:00 GMT</pubDate></item><item><title>a-schaefers/systemE #8 in Emacs Lisp, This month</title><link>https://github.com/a-schaefers/systemE</link><description>&lt;p&gt;&lt;i&gt;🤣 A lightweight systemd replacement written in Emacs lisp 🤣&lt;/i&gt;&lt;/p&gt;&lt;div id="readme" class="md" data-path="README.md"&gt;&lt;article class="markdown-body entry-content p-5" itemprop="text"&gt;&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="emacs.png"&gt;&lt;img src="emacs.png" alt="Logo" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h1&gt;&lt;a id="user-content-systeme" class="anchor" aria-hidden="true" href="#systeme"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;systemE&lt;/h1&gt;
&lt;p&gt;A lightweight systemd replacement written in Emacs lisp&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-what-people-are-saying" class="anchor" aria-hidden="true" href="#what-people-are-saying"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;What people are saying&lt;/h2&gt;
&lt;blockquote&gt;
&lt;p&gt;"Kind of taking that whole "Emacs is an operating system" thing a bit too far, aren't we?"&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;"At last we have solved the init controversy."&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;"Well I guess while you're writing this you aren't creating atomic robots to take over the earth."&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;To quote Strong Bad, this is impressive, disturbing, and makes me uncomfortable!&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;So close to GNU/Emacs/Linux&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;I think this is really cool, but calling it a "systemd replacement" feels like click bait to me.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;It's called a joke, guys.
The README is literally full of them.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;systemd and its ecosystem isn't built inside of Emacs.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;That's because systemd is a mild editor lacking a decent lisp os&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/blockquote&gt;
&lt;h2&gt;&lt;a id="user-content-about" class="anchor" aria-hidden="true" href="#about"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;About&lt;/h2&gt;
&lt;p&gt;Using the tooling in this repo, I am able to boot from linux to sinit as PID1, and from there to Emacs acting as PID2 using --script mode, performing all typical rc.boot system initialization using Emacs lisp until we hit the getty.&lt;/p&gt;
&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="screenshot.jpg"&gt;&lt;img src="screenshot.jpg" alt="Logo" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-status" class="anchor" aria-hidden="true" href="#status"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Status&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;The rc.boot.el and rc.shutdown.el scripts are finished and I use them on my local machine. No support for fancy stuff like luks is planned.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;We still depend on &lt;a href="https://core.suckless.org/sinit/" rel="nofollow"&gt;suckless "sinit"&lt;/a&gt; for PID1 (Emacs is PID2) and this needs to be rewritten in in a lisp. While &lt;strong&gt;it is easy to execute Emacs as PID 1&lt;/strong&gt;, &lt;a href="http://www.informatimago.com/linux/emacs-on-user-mode-linux.html" rel="nofollow"&gt;as evidenced here&lt;/a&gt;, Emacs does not reap zombies and I do not know how to make it reap them yet. I have found Emacs listens for the URS1 and URS2 signals, but not SIGCHLD which is what we need. We also need to figure out how to call wait () after that.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;We still depend on busybox runit for a process supervisor and this needs to be reimplemented in elisp, or atleast converted to gnu shepherd. An Elisp service supervisor that could be communicated to using emacsclient as root would be really fun.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;One pain point is getting a statically compiled Emacs. We don't require this, but it sure would be nice. Unfortunately, when I statically compile Emacs using musl, it results in a broken Emacs.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-this-repo-is-technically-a-kiss-linux-overlay" class="anchor" aria-hidden="true" href="#this-repo-is-technically-a-kiss-linux-overlay"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;This repo is technically a &lt;a href="https://getkiss.org" rel="nofollow"&gt;kiss linux&lt;/a&gt; overlay&lt;/h2&gt;
&lt;p&gt;I recommend Kiss linux.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-the-ever-growing-list-of-helpful--credits--thank-yous" class="anchor" aria-hidden="true" href="#the-ever-growing-list-of-helpful--credits--thank-yous"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;The ever-growing list of Helpful / Credits / Thank You's&lt;/h3&gt;
&lt;div class="highlight highlight-source-emacs-lisp"&gt;&lt;pre&gt;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt;; https://github.com/kisslinux/init/blob/master/lib/init/rc.boot&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt;; https://github.com/kisslinux/init/blob/master/lib/init/rc.shutdown&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt;; https://gist.github.com/lunaryorn/91a7734a8c1d93a8d1b0d3f85fe18b1e&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt;; https://busybox.net/FAQ.html#job_control&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt;; https://stackoverflow.com/questions/23299314/finding-the-exit-code-of-a-shell-command-in-elisp&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt;; https://github.com/Sweets/hummingbird&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt;; https://felipec.wordpress.com/2013/11/04/init&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt;; https://www.emacswiki.org/emacs/PersistentProcesses&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt;; https://stackoverflow.com/questions/17479529/self-contained-portable-emacs&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;/article&gt;&lt;/div&gt;</description><author>a-schaefers</author><guid isPermaLink="false">https://github.com/a-schaefers/systemE</guid><pubDate>Tue, 11 Feb 2020 00:08:00 GMT</pubDate></item><item><title>syl20bnr/spacemacs #9 in Emacs Lisp, This month</title><link>https://github.com/syl20bnr/spacemacs</link><description>&lt;p&gt;&lt;i&gt;A community-driven Emacs distribution - The best editor is neither Emacs nor Vim,  it's Emacs *and* Vim!&lt;/i&gt;&lt;/p&gt;&lt;div id="readme" class="md" data-path="README.md"&gt;&lt;article class="markdown-body entry-content p-5" itemprop="text"&gt;&lt;p&gt;&lt;a name="user-content-top"&gt;&lt;/a&gt;
&lt;a href="http://spacemacs.org" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/8f5ee1d9b7278ed2c63f1f89e9a583ec59b52b6b/68747470733a2f2f63646e2e7261776769742e636f6d2f73796c3230626e722f73706163656d6163732f343432643032353737396461326636326663383663323038323730333639373731346462363531342f6173736574732f73706163656d6163732d62616467652e737667" alt="Made with Spacemacs" data-canonical-src="https://cdn.rawgit.com/syl20bnr/spacemacs/442d025779da2f62fc86c2082703697714db6514/assets/spacemacs-badge.svg" style="max-width:100%;"&gt;&lt;/a&gt;&lt;a href="http://www.twitter.com/spacemacs" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/7cf10772eb6ccebe92d678c452a971e6e2778653/687474703a2f2f692e696d6775722e636f6d2f7458536f5468462e706e67" alt="Twitter" align="right" data-canonical-src="http://i.imgur.com/tXSoThF.png" style="max-width:100%;"&gt;&lt;/a&gt;&lt;br&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;p align="center"&gt;&lt;a target="_blank" rel="noopener noreferrer" href="/doc/img/title2.png"&gt;&lt;img src="/doc/img/title2.png" alt="Spacemacs" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p align="center"&gt;
&lt;b&gt;&lt;a href="http://spacemacs.org/doc/DOCUMENTATION#orgheadline5" rel="nofollow"&gt;philosophy&lt;/a&gt;&lt;/b&gt;
|
&lt;b&gt;&lt;a href="http://spacemacs.org/doc/DOCUMENTATION#orgheadline8" rel="nofollow"&gt;for whom?&lt;/a&gt;&lt;/b&gt;
|
&lt;b&gt;&lt;a href="http://spacemacs.org/doc/DOCUMENTATION#orgheadline7" rel="nofollow"&gt;screenshots&lt;/a&gt;&lt;/b&gt;
|
&lt;b&gt;&lt;a href="http://spacemacs.org/doc/DOCUMENTATION.html" rel="nofollow"&gt;documentation&lt;/a&gt;&lt;/b&gt;
|
&lt;b&gt;&lt;a href="CONTRIBUTING.org"&gt;contribute&lt;/a&gt;&lt;/b&gt;
|
&lt;b&gt;&lt;a href="http://spacemacs.org/doc/DOCUMENTATION#achievements" rel="nofollow"&gt;achievements&lt;/a&gt;&lt;/b&gt;
|
&lt;b&gt;&lt;a href="http://spacemacs.org/doc/FAQ" rel="nofollow"&gt;FAQ&lt;/a&gt;&lt;/b&gt;
&lt;/p&gt;
&lt;hr&gt;
&lt;p align="center"&gt;
&lt;a href="https://gitter.im/syl20bnr/spacemacs?utm_source=badge&amp;amp;utm_medium=badge&amp;amp;utm_campaign=pr-badge&amp;amp;utm_content=badge" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/80bf7c9122b2d8f4dbadfc434c9074c1754267ae/68747470733a2f2f6261646765732e6769747465722e696d2f4a6f696e20436861742e737667" alt="Gitter" data-canonical-src="https://badges.gitter.im/Join Chat.svg" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://travis-ci.org/syl20bnr/spacemacs" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/b724760fb5fb9a3cc9dcb3ed5fca8d102d076062/68747470733a2f2f7472617669732d63692e6f72672f73796c3230626e722f73706163656d6163732e737667" alt="Build Status" data-canonical-src="https://travis-ci.org/syl20bnr/spacemacs.svg" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://www.paypal.com/cgi-bin/webscr?cmd=_s-xclick&amp;amp;hosted_button_id=ESFVNPKP4Y742" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/516248018619132b396881c0b21749c34d6ccfbd/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f50617970616c2d446f6e6174652d626c75652e737667" alt="Donate" data-canonical-src="https://img.shields.io/badge/Paypal-Donate-blue.svg" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://shop.spreadshirt.com/spacemacs-shop" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/f1b306f89bf6fade603509713a098316a4948ef2/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f53686f702d542d2d5368697274732d626c75652e737667" alt="Donate" data-canonical-src="https://img.shields.io/badge/Shop-T--Shirts-blue.svg" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="http://www.slant.co/topics/12/~what-are-the-best-programming-text-editors" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/2e66996b76fc392f4936160dc3f627f663d1a68a/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f536c616e742d5265636f6d6d656e642d6666363962342e737667" alt="Recommend it" data-canonical-src="https://img.shields.io/badge/Slant-Recommend-ff69b4.svg" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;&lt;strong&gt;Quick Install:&lt;/strong&gt;&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;git clone https://github.com/syl20bnr/spacemacs ~/.emacs.d
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;strong&gt;Table of Contents&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="#introduction"&gt;Introduction&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#features"&gt;Features&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#documentation"&gt;Documentation&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#getting-help"&gt;Getting Help&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#prerequisites"&gt;Prerequisites&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="#emacs"&gt;Emacs&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="#linux-distros"&gt;Linux distros&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#macos"&gt;macOS&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#windows"&gt;Windows&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="#install"&gt;Install&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="#default-installation"&gt;Default installation&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#alternate-installations"&gt;Alternate installations&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="#modify-home-environment-variable"&gt;Modify HOME environment variable&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#modify-spacemacs-start-directory-variable"&gt;Modify spacemacs-start-directory variable&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="#spacemacs-logo"&gt;Spacemacs logo&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="#update"&gt;Update&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="#automatic-update-on-master-branch"&gt;Automatic update (on master branch)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#manual-update-on-master-branch"&gt;Manual update (on master branch)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#on-develop-branch"&gt;On develop branch&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#revert-to-a-specific-version"&gt;Revert to a specific version&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="#quotes"&gt;Quotes&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#contributions"&gt;Contributions&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#communities"&gt;Communities&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#license"&gt;License&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#supporting-spacemacs"&gt;Supporting Spacemacs&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h1&gt;&lt;a id="user-content-introduction" class="anchor" aria-hidden="true" href="#introduction"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Introduction&lt;/h1&gt;
&lt;p&gt;Spacemacs is a new way to experience Emacs -- a sophisticated and
polished set-up focused on ergonomics, mnemonics and consistency.&lt;/p&gt;
&lt;p&gt;Just clone it, launch it, then press the space bar to explore the
interactive list of carefully-chosen key bindings. You can also press
the home buffer's &lt;code&gt;[?]&lt;/code&gt; button for some great first key bindings to
try.&lt;/p&gt;
&lt;p&gt;Spacemacs can be used naturally by both Emacs and Vim users -- you can
even mix the two editing styles. Switching easily between input styles
makes Spacemacs a great tool for pair-programming.&lt;/p&gt;
&lt;p&gt;Spacemacs is currently in beta, and contributions are very welcome.&lt;/p&gt;
&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="doc/img/spacemacs-python.png"&gt;&lt;img src="doc/img/spacemacs-python.png" alt="spacemacs_python" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h1&gt;&lt;a id="user-content-features" class="anchor" aria-hidden="true" href="#features"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Features&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Great documentation:&lt;/strong&gt; access documentation in Emacs with
&lt;kbd&gt;SPC h SPC&lt;/kbd&gt;.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Beautiful GUI:&lt;/strong&gt; you'll love the distraction free UI and its functional
mode-line.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Excellent ergonomics:&lt;/strong&gt; all the key bindings are accessible by pressing
the &lt;kbd&gt;space bar&lt;/kbd&gt; or &lt;kbd&gt;alt-m&lt;/kbd&gt;.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Mnemonic key bindings:&lt;/strong&gt; commands have mnemonic prefixes like
&lt;kbd&gt;SPC b&lt;/kbd&gt; for all the buffer commands or &lt;kbd&gt;SPC p&lt;/kbd&gt; for the
project commands.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Batteries included:&lt;/strong&gt; discover hundreds of ready-to-use packages nicely
organised in configuration layers following a set of
&lt;a href="http://spacemacs.org/doc/CONVENTIONS" rel="nofollow"&gt;conventions&lt;/a&gt;.&lt;/li&gt;
&lt;/ul&gt;
&lt;h1&gt;&lt;a id="user-content-documentation" class="anchor" aria-hidden="true" href="#documentation"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Documentation&lt;/h1&gt;
&lt;p&gt;Comprehensive documentation is available for each layer by pressing
&lt;kbd&gt;SPC h SPC&lt;/kbd&gt;.&lt;/p&gt;
&lt;p&gt;You can also check the &lt;a href="http://spacemacs.org/doc/DOCUMENTATION" rel="nofollow"&gt;general documentation&lt;/a&gt;,
&lt;a href="http://spacemacs.org/doc/QUICK_START" rel="nofollow"&gt;quick start guide&lt;/a&gt; and the &lt;a href="http://spacemacs.org/doc/FAQ" rel="nofollow"&gt;FAQ&lt;/a&gt;.&lt;/p&gt;
&lt;h1&gt;&lt;a id="user-content-getting-help" class="anchor" aria-hidden="true" href="#getting-help"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Getting Help&lt;/h1&gt;
&lt;p&gt;If you need help, ask your question in the &lt;a href="https://gitter.im/syl20bnr/spacemacs" rel="nofollow"&gt;Gitter Chat&lt;/a&gt; and a member of the
community will help you out.&lt;/p&gt;
&lt;p&gt;If you prefer IRC, connect to the &lt;a href="https://irc.gitter.im/" rel="nofollow"&gt;Gitter Chat IRC server&lt;/a&gt; and join the
&lt;code&gt;#syl20bnr/spacemacs&lt;/code&gt; channel.&lt;/p&gt;
&lt;h1&gt;&lt;a id="user-content-prerequisites" class="anchor" aria-hidden="true" href="#prerequisites"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Prerequisites&lt;/h1&gt;
&lt;h2&gt;&lt;a id="user-content-emacs" class="anchor" aria-hidden="true" href="#emacs"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Emacs&lt;/h2&gt;
&lt;p&gt;Spacemacs requires Emacs 24.4 or above. The development version of Emacs (at the
time of writing, this is 25.2) is not &lt;em&gt;officially&lt;/em&gt; supported, but should
nevertheless be expected to work.&lt;/p&gt;
&lt;p&gt;Some modes require third-party tools that you'll have to install via your
favorite package manager.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-linux-distros" class="anchor" aria-hidden="true" href="#linux-distros"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Linux distros&lt;/h3&gt;
&lt;p&gt;Install Emacs from the package manager of your Linux distribution.&lt;/p&gt;
&lt;p&gt;You should install the "emacs" package, not the "xemacs" package.
XEmacs is an old fork of Emacs. The X in its name is unrelated to X11.
Both Emacs and XEmacs have graphical support.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Note:&lt;/strong&gt; Ubuntu LTS 12.04 and 14.04 repositories have only Emacs 24.3
available. You have to &lt;a href="https://www.gnu.org/software/emacs/manual/html_node/efaq/Installing-Emacs.html" rel="nofollow"&gt;build from source&lt;/a&gt; Emacs 24.4 or greater,
as Spacemacs won't work with 24.3. The same may be true for other distributions
as well.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-macos" class="anchor" aria-hidden="true" href="#macos"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;macOS&lt;/h3&gt;
&lt;p&gt;The recommended way of installing Emacs on macOS is using &lt;a href="http://brew.sh" rel="nofollow"&gt;homebrew&lt;/a&gt;:&lt;/p&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt;$ brew tap d12frosted/emacs-plus
$ brew install emacs-plus
$ brew linkapps emacs-plus&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;em&gt;Note:&lt;/em&gt; these homebrew commands will install GNU Emacs, and link it to your
&lt;code&gt;/Applications&lt;/code&gt; directory. You still need to run the &lt;code&gt;git clone&lt;/code&gt; mentioned at
the start of this file. That will populate your &lt;code&gt;~/.emacs.d&lt;/code&gt; directory, which is
what transforms a regular GNU Emacs into Spacemacs.&lt;/p&gt;
&lt;p&gt;&lt;em&gt;Note:&lt;/em&gt; the proposed &lt;code&gt;emacs-plus&lt;/code&gt; tap is identical to the &lt;code&gt;emacs&lt;/code&gt; formulae, it
just builds GNU Emacs with support of several features by default along with
providing Spacemacs icon.
See &lt;a href="https://github.com/d12frosted/homebrew-emacs-plus"&gt;emacs-plus&lt;/a&gt; for more
information.&lt;/p&gt;
&lt;p&gt;&lt;em&gt;Note&lt;/em&gt;: to have the title bar match your theme background color,
consider using instead:&lt;/p&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt;$ brew install emacs-plus --HEAD --with-natural-title-bars&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;em&gt;Note:&lt;/em&gt; after you have completed the &lt;a href="#install"&gt;install process&lt;/a&gt; below, it is
also recommended to add the &lt;a href="http://spacemacs.org/layers/+os/osx/README.html" rel="nofollow"&gt;osx layer&lt;/a&gt; to your &lt;a href="http://spacemacs.org/doc/DOCUMENTATION#orgheadline45" rel="nofollow"&gt;dotfile&lt;/a&gt;. Install
instructions are available in the &lt;a href="http://spacemacs.org/layers/+os/osx/README.html" rel="nofollow"&gt;osx layer&lt;/a&gt; documentation.&lt;/p&gt;
&lt;p&gt;&lt;em&gt;Note:&lt;/em&gt; if the powerline separators on the spaceline are a different (less
saturated) color than the rest of the line, you can add following snippet to
&lt;code&gt;dotspacemacs/user-config&lt;/code&gt; in your &lt;code&gt;.spacemacs&lt;/code&gt; file.&lt;/p&gt;
&lt;div class="highlight highlight-source-emacs-lisp"&gt;&lt;pre&gt;(&lt;span class="pl-k"&gt;setq&lt;/span&gt; ns-use-srgb-colorspace &lt;span class="pl-c1"&gt;nil&lt;/span&gt;)&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Keep in mind that this is not ideal solution as it affects all colours in Emacs.
Another option is to use different powerline separator. For example, &lt;code&gt;alternate&lt;/code&gt;
and &lt;code&gt;bar&lt;/code&gt; diminishes the difference. And using &lt;code&gt;utf-8&lt;/code&gt; separator makes it go
away completely without the need to change colour space. In order to change
powerline separator put following snippet in &lt;code&gt;dotspacemacs/user-config&lt;/code&gt;.&lt;/p&gt;
&lt;pre lang="eslip"&gt;&lt;code&gt;(setq powerline-default-separator 'utf-8)
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;For more information about powerline separators, please refer to appropriate
section in &lt;a href="http://spacemacs.org/doc/DOCUMENTATION" rel="nofollow"&gt;Documentation&lt;/a&gt;.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-windows" class="anchor" aria-hidden="true" href="#windows"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Windows&lt;/h3&gt;
&lt;p&gt;You can download good quality builds from the &lt;a href="http://emacsbinw64.sourceforge.net/" rel="nofollow"&gt;emacs-w64 project&lt;/a&gt;.
It is recommended to install the most recent &lt;a href="https://sourceforge.net/projects/emacsbinw64/files/release/" rel="nofollow"&gt;stable build&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Be sure to declare a environment variable named &lt;code&gt;HOME&lt;/code&gt; pointing to your user
directory &lt;code&gt;C:\Users\&amp;lt;username&amp;gt;&lt;/code&gt;. Then you can clone Spacemacs in this directory.&lt;/p&gt;
&lt;p&gt;Sometimes you'll get the following error when you first start Emacs:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;The directory ~/.emacs.d/server is unsafe
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;To fix it change the owner of the directory &lt;code&gt;~/.emacs.d/server&lt;/code&gt;:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;from Properties select the Tab “Security”,&lt;/li&gt;
&lt;li&gt;select the button “Advanced”,&lt;/li&gt;
&lt;li&gt;select the Tab “Owner”&lt;/li&gt;
&lt;li&gt;change the owner to your account name&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Source: &lt;a href="http://stackoverflow.com/questions/885793/emacs-error-when-calling-server-start" rel="nofollow"&gt;Stack Overflow&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;For efficient searches we recommend to install &lt;code&gt;pt&lt;/code&gt; (&lt;a href="https://github.com/monochromegane/the_platinum_searcher"&gt;the platinum searcher&lt;/a&gt;).
&lt;code&gt;pt&lt;/code&gt; version 1.7.7 or higher is required.&lt;/p&gt;
&lt;h1&gt;&lt;a id="user-content-install" class="anchor" aria-hidden="true" href="#install"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Install&lt;/h1&gt;
&lt;h2&gt;&lt;a id="user-content-default-installation" class="anchor" aria-hidden="true" href="#default-installation"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Default installation&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;If you have an existing Emacs configuration, back it up first:&lt;/p&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt;&lt;span class="pl-c1"&gt;cd&lt;/span&gt; &lt;span class="pl-k"&gt;~&lt;/span&gt;
mv .emacs.d .emacs.d.bak
mv .emacs .emacs.bak&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Don't forget to backup and &lt;em&gt;remove&lt;/em&gt; &lt;code&gt;~/.emacs&lt;/code&gt; file otherwise Spacemacs
&lt;strong&gt;WILL NOT&lt;/strong&gt; load since that file prevents Emacs from loading the proper
initialization file.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Clone the repository:&lt;/p&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt;git clone https://github.com/syl20bnr/spacemacs &lt;span class="pl-k"&gt;~&lt;/span&gt;/.emacs.d&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;code&gt;master&lt;/code&gt; is the stable branch and it is &lt;em&gt;immutable&lt;/em&gt;, &lt;strong&gt;DO NOT&lt;/strong&gt; make any
modification to it or you will break the update mechanism. If you want to
fork Spacemacs safely use the &lt;code&gt;develop&lt;/code&gt; branch where you handle the update
manually.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;(Optional) Install the &lt;a href="https://github.com/adobe-fonts/source-code-pro"&gt;Source Code Pro&lt;/a&gt; font.&lt;/p&gt;
&lt;p&gt;If you are running in terminal you'll also need to change font settings of
your terminal.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Launch Emacs. Spacemacs will automatically install the packages it requires.
If you get an error regarding package downloads then you may try to disable
the HTTPS protocol by starting Emacs with&lt;/p&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt;emacs --insecure&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Or you can set the &lt;code&gt;dotspacemacs-elpa-https&lt;/code&gt; to &lt;code&gt;nil&lt;/code&gt; in your dotfile to
remove the need to start Emacs with &lt;code&gt;--insecure&lt;/code&gt; argument. You may wish to
clear out your &lt;code&gt;.emacs.d/elpa&lt;/code&gt; directory before doing this, so that any
corrupted packages you may have downloaded will be re-installed.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Restart Emacs to complete the installation.&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;If the mode-line turns red then be sure to consult the &lt;a href="http://spacemacs.org/doc/FAQ" rel="nofollow"&gt;FAQ&lt;/a&gt;.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-alternate-installations" class="anchor" aria-hidden="true" href="#alternate-installations"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Alternate installations&lt;/h2&gt;
&lt;p&gt;It may be useful to clone Spacemacs outside Emacs dotdirectory &lt;code&gt;~/.emacs.d&lt;/code&gt; so
you can try Spacemacs without replacing completely our own configuration.
There is currently two possibilities to support alternative location for
Spacemacs configuration.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-modify-home-environment-variable" class="anchor" aria-hidden="true" href="#modify-home-environment-variable"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Modify HOME environment variable&lt;/h3&gt;
&lt;p&gt;This solution is ideal to quickly try Spacemacs without compromising your
existing configuration.&lt;/p&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt;mkdir &lt;span class="pl-k"&gt;~&lt;/span&gt;/spacemacs
git clone https://github.com/syl20bnr/spacemacs.git &lt;span class="pl-k"&gt;~&lt;/span&gt;/spacemacs/.emacs.d
HOME=&lt;span class="pl-k"&gt;~&lt;/span&gt;/spacemacs emacs&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Note: If you're on Fish shell, you will need to modify the last command to: &lt;code&gt;env HOME=$HOME/spacemacs emacs&lt;/code&gt;&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-modify-spacemacs-start-directory-variable" class="anchor" aria-hidden="true" href="#modify-spacemacs-start-directory-variable"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Modify spacemacs-start-directory variable&lt;/h3&gt;
&lt;p&gt;This solution is better suited to "embed" Spacemacs into your own configuration.
Say you cloned Spacemacs in &lt;code&gt;~/.emacs.d/spacemacs/&lt;/code&gt; then drop these lines in
&lt;code&gt;~/.emacs.d/init.el&lt;/code&gt;:&lt;/p&gt;
&lt;div class="highlight highlight-source-emacs-lisp"&gt;&lt;pre&gt;(&lt;span class="pl-k"&gt;setq&lt;/span&gt; spacemacs-start-directory &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;~/.emacs.d/spacemacs/&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
(&lt;span class="pl-c1"&gt;load-file&lt;/span&gt; (&lt;span class="pl-c1"&gt;concat&lt;/span&gt; spacemacs-start-directory &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;init.el&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;))&lt;/pre&gt;&lt;/div&gt;
&lt;h2&gt;&lt;a id="user-content-spacemacs-logo" class="anchor" aria-hidden="true" href="#spacemacs-logo"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Spacemacs logo&lt;/h2&gt;
&lt;p&gt;For Ubuntu users, follow this guide to
&lt;a href="http://splendidabacus.com/posts/2015/03/spacemacs-unity-icon/" rel="nofollow"&gt;change the logo in Unity&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;For Mac users, you need to &lt;a href="https://github.com/nashamri/spacemacs-logo"&gt;download the .icns version of the logo&lt;/a&gt;,
then &lt;a href="http://www.idownloadblog.com/2014/07/16/how-to-change-app-icon-mac/" rel="nofollow"&gt;change the logo on Dock&lt;/a&gt;.&lt;/p&gt;
&lt;h1&gt;&lt;a id="user-content-update" class="anchor" aria-hidden="true" href="#update"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Update&lt;/h1&gt;
&lt;p&gt;Spacemacs has a built-in notification of a new version when you are on the
&lt;code&gt;master&lt;/code&gt; branch. If you are on the &lt;code&gt;develop&lt;/code&gt; branch then you'll have to
update Spacemacs manually by updating your repository.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-automatic-update-on-master-branch" class="anchor" aria-hidden="true" href="#automatic-update-on-master-branch"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Automatic update (on master branch)&lt;/h2&gt;
&lt;p&gt;When a new version is available a little arrow appears in the mode-line.&lt;/p&gt;
&lt;p&gt;Its color depends on the number of versions available since your last update.
Green means that your current version is recent, orange and red mean that your
current version is older.&lt;/p&gt;
&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="doc/img/powerline-update.png"&gt;&lt;img src="doc/img/powerline-update.png" alt="powerline_update" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Click on the arrow to update Spacemacs to the last version.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-manual-update-on-master-branch" class="anchor" aria-hidden="true" href="#manual-update-on-master-branch"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Manual update (on master branch)&lt;/h2&gt;
&lt;p&gt;(Remove the angle brackets when typing the lines below into your shell.)&lt;/p&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt;git fetch
git reset --hard &lt;span class="pl-k"&gt;&amp;lt;&lt;/span&gt;tag version which you are updating to&lt;span class="pl-k"&gt;&amp;gt;&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h2&gt;&lt;a id="user-content-on-develop-branch" class="anchor" aria-hidden="true" href="#on-develop-branch"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;On develop branch&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;Update Emacs packages by clicking (press &lt;code&gt;RET&lt;/code&gt;) on the &lt;code&gt;[Update Packages]&lt;/code&gt; link of
the starting page.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Close Emacs and update the git repository:&lt;/p&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt;git pull --rebase&lt;/pre&gt;&lt;/div&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Restart Emacs to complete the upgrade.&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h2&gt;&lt;a id="user-content-revert-to-a-specific-version" class="anchor" aria-hidden="true" href="#revert-to-a-specific-version"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Revert to a specific version&lt;/h2&gt;
&lt;p&gt;To revert to a specific version you just have to checkout the corresponding
branch, for instance to revert to the last &lt;code&gt;0.103&lt;/code&gt;:&lt;/p&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt;git checkout origin/release-0.103&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;strong&gt;After you update, either manually, or automatically, you are advised to update
your packages by clicking the &lt;code&gt;[Update Packages]&lt;/code&gt; button on the Spacemacs Home
Buffer.&lt;/strong&gt;&lt;/p&gt;
&lt;h1&gt;&lt;a id="user-content-quotes" class="anchor" aria-hidden="true" href="#quotes"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Quotes&lt;/h1&gt;
&lt;p&gt;&lt;a href="https://gitter.im/syl20bnr/spacemacs?at=568e627a0cdaaa62045a7df6" rel="nofollow"&gt;Quote&lt;/a&gt; by &lt;a href="https://github.com/ashnur"&gt;ashnur&lt;/a&gt;:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;«I feel that spacemacs is an aircraft carrier and I am playing table tennis on the deck as a freerider.»
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;a href="https://gitter.im/syl20bnr/spacemacs?at=5768456c6577f032450cfedb" rel="nofollow"&gt;Quote&lt;/a&gt; by &lt;a href="https://github.com/deuill"&gt;deuill&lt;/a&gt;:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;«I LOVE SPACEMACS AND MAGIT

 That is all»
&lt;/code&gt;&lt;/pre&gt;
&lt;h1&gt;&lt;a id="user-content-contributions" class="anchor" aria-hidden="true" href="#contributions"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Contributions&lt;/h1&gt;
&lt;p&gt;Spacemacs is a community-driven project, it needs &lt;em&gt;you&lt;/em&gt; to keep it up to
date and propose great and useful configuration for all the things!&lt;/p&gt;
&lt;p&gt;Before contributing be sure to consult the
&lt;a href="CONTRIBUTING.org"&gt;contribution guidelines&lt;/a&gt; and &lt;a href="http://spacemacs.org/doc/CONVENTIONS" rel="nofollow"&gt;conventions&lt;/a&gt;.&lt;/p&gt;
&lt;h1&gt;&lt;a id="user-content-communities" class="anchor" aria-hidden="true" href="#communities"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Communities&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://gitter.im/syl20bnr/spacemacs" rel="nofollow"&gt;Gitter Chat&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://emacs.stackexchange.com/questions/tagged/spacemacs" rel="nofollow"&gt;Stack Exchange&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.reddit.com/r/spacemacs" rel="nofollow"&gt;Reddit&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h1&gt;&lt;a id="user-content-license" class="anchor" aria-hidden="true" href="#license"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;License&lt;/h1&gt;
&lt;p&gt;The license is GPLv3 for all parts specific to Spacemacs, this includes:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;the initialization and core files&lt;/li&gt;
&lt;li&gt;all the layer files&lt;/li&gt;
&lt;li&gt;the documentation&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;For the packages shipped in this repository you can refer to the files header.&lt;/p&gt;
&lt;p&gt;&lt;a href="https://github.com/nashamri/spacemacs-logo"&gt;Spacemacs logo&lt;/a&gt; by &lt;a href="https://github.com/nashamri"&gt;Nasser Alshammari&lt;/a&gt; released under a &lt;a href="http://creativecommons.org/licenses/by-sa/4.0/" rel="nofollow"&gt;Creative Commons Attribution-ShareAlike 4.0 International License.&lt;/a&gt;&lt;/p&gt;
&lt;h1&gt;&lt;a id="user-content-supporting-spacemacs" class="anchor" aria-hidden="true" href="#supporting-spacemacs"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Supporting Spacemacs&lt;/h1&gt;
&lt;p&gt;The best way to support Spacemacs is to contribute to it either by reporting
bugs, helping the community on the &lt;a href="https://gitter.im/syl20bnr/spacemacs" rel="nofollow"&gt;Gitter Chat&lt;/a&gt; or sending pull requests.&lt;/p&gt;
&lt;p&gt;You can show your love for the project by getting cool Spacemacs t-shirts, mugs
and more in the &lt;a href="https://shop.spreadshirt.com/spacemacs-shop" rel="nofollow"&gt;Spacemacs Shop&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;If you want to show your support financially you can contribute to &lt;a href="https://salt.bountysource.com/teams/spacemacs" rel="nofollow"&gt;Bountysource&lt;/a&gt; or buy a drink for the
maintainer by clicking on the &lt;a href="#top"&gt;Paypal badge&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;If you used spacemacs in a project and you want to show that fact, you can use
the spacemacs badge: &lt;a href="http://spacemacs.org" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/8f5ee1d9b7278ed2c63f1f89e9a583ec59b52b6b/68747470733a2f2f63646e2e7261776769742e636f6d2f73796c3230626e722f73706163656d6163732f343432643032353737396461326636326663383663323038323730333639373731346462363531342f6173736574732f73706163656d6163732d62616467652e737667" alt="Built with Spacemacs" data-canonical-src="https://cdn.rawgit.com/syl20bnr/spacemacs/442d025779da2f62fc86c2082703697714db6514/assets/spacemacs-badge.svg" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;For Markdown:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;[![Built with Spacemacs](https://cdn.rawgit.com/syl20bnr/spacemacs/442d025779da2f62fc86c2082703697714db6514/assets/spacemacs-badge.svg)](http://spacemacs.org)
&lt;/code&gt;&lt;/pre&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;For HTML:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;&amp;lt;a href="http://spacemacs.org"&amp;gt;&amp;lt;img src="https://cdn.rawgit.com/syl20bnr/spacemacs/442d025779da2f62fc86c2082703697714db6514/assets/spacemacs-badge.svg" /&amp;gt;&amp;lt;/a&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;For Org-mode:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;[[http://spacemacs.org][file:https://cdn.rawgit.com/syl20bnr/spacemacs/442d025779da2f62fc86c2082703697714db6514/assets/spacemacs-badge.svg]]
&lt;/code&gt;&lt;/pre&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Thank you!&lt;/p&gt;
&lt;/article&gt;&lt;/div&gt;</description><author>syl20bnr</author><guid isPermaLink="false">https://github.com/syl20bnr/spacemacs</guid><pubDate>Tue, 11 Feb 2020 00:09:00 GMT</pubDate></item><item><title>emacs-mirror/emacs #10 in Emacs Lisp, This month</title><link>https://github.com/emacs-mirror/emacs</link><description>&lt;p&gt;&lt;i&gt;Mirror of GNU Emacs&lt;/i&gt;&lt;/p&gt;&lt;div id="readme" class="" data-path="README"&gt;&lt;div class="plain"&gt;&lt;pre style="white-space: pre-wrap"&gt;Copyright (C) 2001-2020 Free Software Foundation, Inc.
See the end of the file for license conditions.


This directory tree holds version 28.0.50 of GNU Emacs, the extensible,
customizable, self-documenting real-time display editor.

The file INSTALL in this directory says how to build and install GNU
Emacs on various systems, once you have unpacked or checked out the
entire Emacs file tree.

See the file etc/NEWS for information on new features and other
user-visible changes in recent versions of Emacs.

The file etc/PROBLEMS contains information on many common problems that
occur in building, installing and running Emacs.

The file CONTRIBUTE contains information on contributing to Emacs as a
developer.

You may encounter bugs in this release.  If you do, please report
them; your bug reports are valuable contributions to the FSF, since
they allow us to notice and fix problems on machines we don't have, or
in code we don't use often.  Please send bug reports to the mailing
list bug-gnu-emacs@gnu.org.  If possible, use M-x report-emacs-bug.

See the "Bugs" section of the Emacs manual for more information on how
to report bugs.  (The file 'BUGS' in this directory explains how you
can find and read that section using the Info files that come with
Emacs.)  For a list of mailing lists related to Emacs, see
&amp;lt;&lt;a href="https://savannah.gnu.org/mail/?group=emacs" rel="nofollow"&gt;https://savannah.gnu.org/mail/?group=emacs&lt;/a&gt;&amp;gt;.  For the complete
list of GNU mailing lists, see &amp;lt;&lt;a href="https://lists.gnu.org/" rel="nofollow"&gt;https://lists.gnu.org/&lt;/a&gt;&amp;gt;.

The 'etc' subdirectory contains several other files, named in capital
letters, which you might consider looking at when installing GNU
Emacs.

The file 'configure' is a shell script to acclimate Emacs to the
oddities of your processor and operating system.  It creates the file
'Makefile' (a script for the 'make' program), which automates the
process of building and installing Emacs.  See INSTALL for more
detailed information.

The file 'configure.ac' is the input used by the autoconf program to
construct the 'configure' script.

The shell script 'autogen.sh' generates 'configure' and other files by
running Autoconf (which in turn uses GNU m4), and configures files in
the .git subdirectory if you are using Git.  If you want to use it,
you will need to install recent versions of these build tools.  This
should be needed only if you edit files like 'configure.ac' that
specify Emacs's autobuild procedure.

The file 'Makefile.in' is a template used by 'configure' to create
'Makefile'.

The file 'make-dist' is a shell script to build a distribution tar
file from the current Emacs tree, containing only those files
appropriate for distribution.  If you make extensive changes to Emacs,
this script will help you distribute your version to others.

There are several subdirectories:

'src'       holds the C code for Emacs (the Emacs Lisp interpreter and
            its primitives, the redisplay code, and some basic editing
            functions).
'lisp'      holds the Emacs Lisp code for Emacs (most everything else).
'leim'      holds the original source files for the generated files
            in lisp/leim.  These form the library of Emacs input methods,
            required to type international characters that can't be
            directly produced by your keyboard.
'lib'       holds source code for libraries used by Emacs and its utilities
'lib-src'   holds the source code for some utility programs for use by or
            with Emacs, like movemail and etags.
'lwlib'     holds the sources of the Lucid Widget Library used on X.
'oldXMenu'  source files from X11R2 XMenu library, used in non-toolkit builds.
'etc'       holds miscellaneous architecture-independent data files Emacs
            uses, like the tutorial text and tool bar images.
            The contents of the 'lisp', 'leim', 'info', and 'doc'
            subdirectories are architecture-independent too.
'info'      holds the Info documentation tree for Emacs.
'doc/emacs' holds the source code for the Emacs Manual.  If you modify the
            manual sources, you will need the 'makeinfo' program to produce
            an updated manual.  'makeinfo' is part of the GNU Texinfo
            package; you need a suitably recent version of Texinfo.
'doc/lispref'   holds the source code for the Emacs Lisp reference manual.
'doc/lispintro' holds the source code for the Introduction to Programming
                in Emacs Lisp manual.
'msdos'     holds configuration files for compiling Emacs under MS-DOS.
'nextstep'  holds instructions and some other files for compiling the
            Nextstep port of Emacs, for GNUstep and macOS Cocoa.
'nt'        holds code and documentation for building Emacs on MS-Windows.
'test'      holds tests for various aspects of Emacs's functionality.
'modules'   holds the modhelp.py helper script.
'admin'     holds files used by Emacs developers, and Unicode data files.
'build-aux' holds auxiliary files used during the build.
'm4'        holds Autoconf macros used for generating the configure script.

   Building Emacs on non-Posix platforms requires tools that aren't part
of the standard distribution of the OS.  The platform-specific README
files and installation instructions should list the required tools.


NOTE ON COPYRIGHT YEARS

In copyright notices where the copyright holder is the Free Software
Foundation, then where a range of years appears, this is an inclusive
range that applies to every year in the range.  For example: 2005-2008
represents the years 2005, 2006, 2007, and 2008.


This file is part of GNU Emacs.

GNU Emacs is free software: you can redistribute it and/or modify
it under the terms of the GNU General Public License as published by
the Free Software Foundation, either version 3 of the License, or
(at your option) any later version.

GNU Emacs is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
GNU General Public License for more details.

You should have received a copy of the GNU General Public License
along with GNU Emacs.  If not, see &amp;lt;&lt;a href="https://www.gnu.org/licenses/" rel="nofollow"&gt;https://www.gnu.org/licenses/&lt;/a&gt;&amp;gt;.
&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;</description><author>emacs-mirror</author><guid isPermaLink="false">https://github.com/emacs-mirror/emacs</guid><pubDate>Tue, 11 Feb 2020 00:10:00 GMT</pubDate></item><item><title>flycheck/flycheck #11 in Emacs Lisp, This month</title><link>https://github.com/flycheck/flycheck</link><description>&lt;p&gt;&lt;i&gt;On the fly syntax checking for GNU Emacs&lt;/i&gt;&lt;/p&gt;&lt;div id="readme" class="md" data-path="README.md"&gt;&lt;article class="markdown-body entry-content p-5" itemprop="text"&gt;&lt;h1&gt;&lt;a id="" class="anchor" aria-hidden="true" href="#"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;a href="https://www.flycheck.org" rel="nofollow"&gt;&lt;img src="https://raw.githubusercontent.com/flycheck/flycheck/master/doc/_static/logo.png" alt="Flycheck" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/h1&gt;
&lt;p&gt;&lt;a href="https://github.com/flycheck/flycheck/blob/master/COPYING"&gt;&lt;img src="https://camo.githubusercontent.com/38a497ca55f91c76e1bf6a45e1346f41c7c3b2fa/68747470733a2f2f696d672e736869656c64732e696f2f6769746875622f6c6963656e73652f666c79636865636b2f666c79636865636b2e737667" alt="License GPL 3" data-canonical-src="https://img.shields.io/github/license/flycheck/flycheck.svg" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://gitter.im/flycheck/flycheck" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/34b419bfe87339b87e49fe9d3367bffc9e18e2bd/68747470733a2f2f696d672e736869656c64732e696f2f6769747465722f726f6f6d2f666c79636865636b2f666c79636865636b2e737667" alt="Join the chat" data-canonical-src="https://img.shields.io/gitter/room/flycheck/flycheck.svg" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://stable.melpa.org/#/flycheck" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/bb21afc5143865c9262a430985b2942363be5183/687474703a2f2f737461626c652e6d656c70612e6f72672f7061636b616765732f666c79636865636b2d62616467652e737667" alt="MELPA stable version" data-canonical-src="http://stable.melpa.org/packages/flycheck-badge.svg" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://travis-ci.org/flycheck/flycheck" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/3c562a74259583ea9e010550d7b27081c43f0e7f/68747470733a2f2f696d672e736869656c64732e696f2f7472617669732f666c79636865636b2f666c79636865636b2f6d61737465722e737667" alt="Build Status" data-canonical-src="https://img.shields.io/travis/flycheck/flycheck/master.svg" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href="https://www.flycheck.org" rel="nofollow"&gt;https://www.flycheck.org&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Modern on-the-fly syntax checking extension for GNU Emacs.  &lt;a href="https://www.flycheck.org/en/latest/#try-out" rel="nofollow"&gt;Try it&lt;/a&gt;!&lt;/p&gt;
&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="https://raw.githubusercontent.com/flycheck/flycheck/master/doc/images/flycheck-annotated.png"&gt;&lt;img src="https://raw.githubusercontent.com/flycheck/flycheck/master/doc/images/flycheck-annotated.png" alt="" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;For a more gentle introduction read the &lt;a href="https://www.flycheck.org/en/latest/user/installation.html" rel="nofollow"&gt;Installation&lt;/a&gt; instructions and go
through &lt;a href="https://www.flycheck.org/en/latest/user/quickstart.html" rel="nofollow"&gt;Quickstart&lt;/a&gt; guide.&lt;/p&gt;
&lt;p&gt;Please ask questions about Flycheck on &lt;a href="https://emacs.stackexchange.com/questions/tagged/flycheck" rel="nofollow"&gt;Stack Exchange&lt;/a&gt; or in our
&lt;a href="https://gitter.im/flycheck/flycheck" rel="nofollow"&gt;Gitter chat&lt;/a&gt;, and report bugs to our &lt;a href="https://github.com/flycheck/flycheck/issues"&gt;issue tracker&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;We welcome all kinds of contributions, whether you write patches, open pull
requests, write documentation, help others with Flycheck issues, or just tell
other people about your experiences with Flycheck.  Please take a look at our
&lt;a href="https://www.flycheck.org/en/latest/contributor/contributing.html" rel="nofollow"&gt;Contributor’s Guide&lt;/a&gt; for help and guidance about contributing to
Flycheck.&lt;/p&gt;
&lt;p&gt;We strive to create a safe, friendly and welcoming environment in the Flycheck
community and have a &lt;a href="https://www.flycheck.org/en/latest/community/conduct.html" rel="nofollow"&gt;Code of Conduct&lt;/a&gt; that defines acceptable and welcome
behaviour as well as sanctions for violations.  All contributors and all
participants are expected to follow it, on Github, Gitter, Emacs.SX or any other
place that’s part of Flycheck’s broader community.&lt;/p&gt;
&lt;p&gt;Flycheck is free software: you can redistribute it and/or modify it under the
terms of the &lt;a href="https://github.com/flycheck/flycheck/blob/master/COPYING"&gt;GNU General Public License&lt;/a&gt; as published by the Free
Software Foundation, either version 3 of the License, or (at your option) any
later version.&lt;/p&gt;
&lt;p&gt;Flycheck is distributed in the hope that it will be useful, but WITHOUT ANY
WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A
PARTICULAR PURPOSE.  See the &lt;a href="https://github.com/flycheck/flycheck/blob/master/COPYING"&gt;GNU General Public License&lt;/a&gt; for more
details.&lt;/p&gt;
&lt;/article&gt;&lt;/div&gt;</description><author>flycheck</author><guid isPermaLink="false">https://github.com/flycheck/flycheck</guid><pubDate>Tue, 11 Feb 2020 00:11:00 GMT</pubDate></item><item><title>jwiegley/use-package #12 in Emacs Lisp, This month</title><link>https://github.com/jwiegley/use-package</link><description>&lt;p&gt;&lt;i&gt;A use-package declaration for simplifying your .emacs&lt;/i&gt;&lt;/p&gt;&lt;div id="readme" class="md" data-path="README.md"&gt;&lt;article class="markdown-body entry-content p-5" itemprop="text"&gt;&lt;h1&gt;&lt;a id="user-content-use-package" class="anchor" aria-hidden="true" href="#use-package"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;code&gt;use-package&lt;/code&gt;&lt;/h1&gt;
&lt;p&gt;&lt;a href="https://gitter.im/use-package/Lobby?utm_source=badge&amp;amp;utm_medium=badge&amp;amp;utm_campaign=pr-badge&amp;amp;utm_content=badge" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/aaf22fcf54c86823689c20fd4e01f6eb53c22408/68747470733a2f2f6261646765732e6769747465722e696d2f7573652d7061636b6167652f4c6f6262792e737667" alt="Join the chat at https://gitter.im/use-package/Lobby" data-canonical-src="https://badges.gitter.im/use-package/Lobby.svg" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://travis-ci.org/jwiegley/use-package" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/ac1dfb9d155cd71ac61fe6135f13b072fa68e413/68747470733a2f2f7472617669732d63692e6f72672f6a776965676c65792f7573652d7061636b6167652e7376673f6272616e63683d6d6173746572" alt="Build Status" data-canonical-src="https://travis-ci.org/jwiegley/use-package.svg?branch=master" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="http://melpa.milkbox.net/#/use-package" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/9e2b993215bec6257e83bb37be402ef9b5a37d95/687474703a2f2f6d656c70612e6d696c6b626f782e6e65742f7061636b616765732f7573652d7061636b6167652d62616467652e737667" alt="MELPA" data-canonical-src="http://melpa.milkbox.net/packages/use-package-badge.svg" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://stable.melpa.org/#/use-package" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/61b06b0a52fee3022aaaa74c5998ba2d961d1c42/68747470733a2f2f737461626c652e6d656c70612e6f72672f7061636b616765732f7573652d7061636b6167652d62616467652e737667" alt="MELPA Stable" data-canonical-src="https://stable.melpa.org/packages/use-package-badge.svg" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;The &lt;code&gt;use-package&lt;/code&gt; macro allows you to isolate package configuration in your
&lt;code&gt;.emacs&lt;/code&gt; file in a way that is both performance-oriented and, well, tidy.  I
created it because I have over 80 packages that I use in Emacs, and things
were getting difficult to manage.  Yet with this utility my total load time is
around 2 seconds, with no loss of functionality!&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;NOTE&lt;/strong&gt;: &lt;code&gt;use-package&lt;/code&gt; is &lt;strong&gt;not&lt;/strong&gt; a package manager! Although &lt;code&gt;use-package&lt;/code&gt;
does have the useful capability to interface with package managers (see
&lt;a href="#package-installation"&gt;below&lt;/a&gt;), its primary purpose is for the configuration
and loading of packages.&lt;/p&gt;
&lt;p&gt;Notes for users upgrading to 2.x are located &lt;a href="#upgrading-to-2x"&gt;at the bottom&lt;/a&gt;.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="#installing-use-package"&gt;Installing use-package&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#getting-started"&gt;Getting started&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#key-binding"&gt;Key-binding&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="#binding-to-keymaps"&gt;Binding to keymaps&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#binding-within-local-keymaps"&gt;Binding within local keymaps&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="#modes-and-interpreters"&gt;Modes and interpreters&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#magic-handlers"&gt;Magic handlers&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#hooks"&gt;Hooks&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#package-customization"&gt;Package customization&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="#customizing-variables"&gt;Customizing variables&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#customizing-faces"&gt;Customizing faces&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="#notes-about-lazy-loading"&gt;Notes about lazy loading&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#information-about-package-loads"&gt;Information about package loads&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#conditional-loading"&gt;Conditional loading&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="#conditional-loading-before-preface"&gt;Conditional loading before :preface&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#loading-packages-in-sequence"&gt;Loading packages in a sequence&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#prevent-loading-if-dependencies-are-missing"&gt;Prevent loading if dependencies are missing&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="#byte-compiling-your-emacs"&gt;Byte compiling your .emacs&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="#prevent-a-package-from-loading-at-compile-time"&gt;Prevent a package from loading at compile-time&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="#extending-the-load-path"&gt;Extending the load-path&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#catching-errors-during-use-package-expansion"&gt;Catching errors during use-package expansion&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#diminishing-and-delighting-minor-modes"&gt;Diminishing and delighting minor modes&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#package-installation"&gt;Package installation&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="#usage-with-other-package-managers"&gt;Usage with other package managers&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="#gathering-statistics"&gt;Gathering Statistics&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#keyword-extensions"&gt;Keyword Extensions&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="#use-package-ensure-system-package"&gt;use-package-ensure-system-package&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#use-package-chords"&gt;use-package-chords&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#how-to-create-an-extension"&gt;How to create an extension&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="#first-step-add-the-keyword"&gt;First step: Add the keyword&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#second-step-create-a-normalizer"&gt;Second step: Create a normalizer&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#third-step-create-a-handler"&gt;Third step: Create a handler&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#fourth-step-test-it-out"&gt;Fourth step: Test it out&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="#some-timing-results"&gt;Some timing results&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="#upgrading-to-2x"&gt;Upgrading to 2.x&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="#semantics-of-init-is-now-consistent"&gt;Semantics of :init is now consistent&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#idle-has-been-removed"&gt;:idle has been removed&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#defer-now-accepts-an-optional-numeric-argument"&gt;:defer now accepts an optional numeric argument&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#add-preface-occurring-before-everything-except-disabled"&gt;Add :preface, occuring before everything except :disabled&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#add-functions-for-declaring-functions-to-the-byte-compiler"&gt;Add :functions, for declaring functions to the byte-compiler&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#use-packageel-is-no-longer-needed-at-runtime"&gt;use-package.el is no longer needed at runtime&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-installing-use-package" class="anchor" aria-hidden="true" href="#installing-use-package"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Installing use-package&lt;/h2&gt;
&lt;p&gt;Either clone from this GitHub repository or install from
&lt;a href="http://melpa.milkbox.net/" rel="nofollow"&gt;MELPA&lt;/a&gt; (recommended).&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-getting-started" class="anchor" aria-hidden="true" href="#getting-started"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Getting started&lt;/h2&gt;
&lt;p&gt;Here is the simplest &lt;code&gt;use-package&lt;/code&gt; declaration:&lt;/p&gt;
&lt;div class="highlight highlight-source-emacs-lisp"&gt;&lt;pre&gt;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt;; This is only needed once, near the top of the file&lt;/span&gt;
(&lt;span class="pl-c1"&gt;eval-when-compile&lt;/span&gt;
  &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt;; Following line is not needed if use-package.el is in ~/.emacs.d&lt;/span&gt;
  (&lt;span class="pl-c1"&gt;add-to-list&lt;/span&gt; &lt;span class="pl-c1"&gt;'load-path&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;&amp;lt;path where use-package is installed&amp;gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
  (&lt;span class="pl-c1"&gt;require&lt;/span&gt; &lt;span class="pl-c1"&gt;'use-package&lt;/span&gt;))

(&lt;span class="pl-c1"&gt;use-package&lt;/span&gt; foo)&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;This loads in the package &lt;code&gt;foo&lt;/code&gt;, but only if &lt;code&gt;foo&lt;/code&gt; is available on your
system. If not, a warning is logged to the &lt;code&gt;*Messages*&lt;/code&gt; buffer.&lt;/p&gt;
&lt;p&gt;Use the &lt;code&gt;:init&lt;/code&gt; keyword to execute code before a package is loaded.  It
accepts one or more forms, up to the next keyword:&lt;/p&gt;
&lt;div class="highlight highlight-source-emacs-lisp"&gt;&lt;pre&gt;(&lt;span class="pl-c1"&gt;use-package&lt;/span&gt; foo
  &lt;span class="pl-c1"&gt;:init&lt;/span&gt;
  (&lt;span class="pl-k"&gt;setq&lt;/span&gt; foo-variable &lt;span class="pl-c1"&gt;t&lt;/span&gt;))&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Similarly, &lt;code&gt;:config&lt;/code&gt; can be used to execute code after a package is loaded.
In cases where loading is done lazily (see more about autoloading below), this
execution is deferred until after the autoload occurs:&lt;/p&gt;
&lt;div class="highlight highlight-source-emacs-lisp"&gt;&lt;pre&gt;(&lt;span class="pl-c1"&gt;use-package&lt;/span&gt; foo
  &lt;span class="pl-c1"&gt;:init&lt;/span&gt;
  (&lt;span class="pl-k"&gt;setq&lt;/span&gt; foo-variable &lt;span class="pl-c1"&gt;t&lt;/span&gt;)
  &lt;span class="pl-c1"&gt;:config&lt;/span&gt;
  (foo-mode &lt;span class="pl-c1"&gt;1&lt;/span&gt;))&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;As you might expect, you can use &lt;code&gt;:init&lt;/code&gt; and &lt;code&gt;:config&lt;/code&gt; together:&lt;/p&gt;
&lt;div class="highlight highlight-source-emacs-lisp"&gt;&lt;pre&gt;(&lt;span class="pl-c1"&gt;use-package&lt;/span&gt; color-moccur
  &lt;span class="pl-c1"&gt;:commands&lt;/span&gt; (isearch-moccur isearch-all)
  &lt;span class="pl-c1"&gt;:bind&lt;/span&gt; ((&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;M-s O&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; &lt;span class="pl-k"&gt;.&lt;/span&gt; moccur)
         &lt;span class="pl-c1"&gt;:map&lt;/span&gt; isearch-mode-map
         (&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;M-o&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; &lt;span class="pl-k"&gt;.&lt;/span&gt; isearch-moccur)
         (&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;M-O&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; &lt;span class="pl-k"&gt;.&lt;/span&gt; isearch-moccur-all))
  &lt;span class="pl-c1"&gt;:init&lt;/span&gt;
  (&lt;span class="pl-k"&gt;setq&lt;/span&gt; isearch-lazy-highlight &lt;span class="pl-c1"&gt;t&lt;/span&gt;)
  &lt;span class="pl-c1"&gt;:config&lt;/span&gt;
  (&lt;span class="pl-c1"&gt;use-package&lt;/span&gt; moccur-edit))&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;In this case, I want to autoload the commands &lt;code&gt;isearch-moccur&lt;/code&gt; and
&lt;code&gt;isearch-all&lt;/code&gt; from &lt;code&gt;color-moccur.el&lt;/code&gt;, and bind keys both at the global level
and within the &lt;code&gt;isearch-mode-map&lt;/code&gt; (see next section).  When the package is
actually loaded (by using one of these commands), &lt;code&gt;moccur-edit&lt;/code&gt; is also
loaded, to allow editing of the &lt;code&gt;moccur&lt;/code&gt; buffer.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-key-binding" class="anchor" aria-hidden="true" href="#key-binding"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Key-binding&lt;/h2&gt;
&lt;p&gt;Another common thing to do when loading a module is to bind a key to primary
commands within that module:&lt;/p&gt;
&lt;div class="highlight highlight-source-emacs-lisp"&gt;&lt;pre&gt;(&lt;span class="pl-c1"&gt;use-package&lt;/span&gt; ace-jump-mode
  &lt;span class="pl-c1"&gt;:bind&lt;/span&gt; (&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;C-.&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; &lt;span class="pl-k"&gt;.&lt;/span&gt; ace-jump-mode))&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;This does two things: first, it creates an autoload for the &lt;code&gt;ace-jump-mode&lt;/code&gt;
command and defers loading of &lt;code&gt;ace-jump-mode&lt;/code&gt; until you actually use it.
Second, it binds the key &lt;code&gt;C-.&lt;/code&gt; to that command.  After loading, you can use
&lt;code&gt;M-x describe-personal-keybindings&lt;/code&gt; to see all such keybindings you've set
throughout your &lt;code&gt;.emacs&lt;/code&gt; file.&lt;/p&gt;
&lt;p&gt;A more literal way to do the exact same thing is:&lt;/p&gt;
&lt;div class="highlight highlight-source-emacs-lisp"&gt;&lt;pre&gt;(&lt;span class="pl-c1"&gt;use-package&lt;/span&gt; ace-jump-mode
  &lt;span class="pl-c1"&gt;:commands&lt;/span&gt; ace-jump-mode
  &lt;span class="pl-c1"&gt;:init&lt;/span&gt;
  (bind-key &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;C-.&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; &lt;span class="pl-c1"&gt;'ace-jump-mode&lt;/span&gt;))&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;When you use the &lt;code&gt;:commands&lt;/code&gt; keyword, it creates autoloads for those commands
and defers loading of the module until they are used.  Since the &lt;code&gt;:init&lt;/code&gt; form
is always run -- even if &lt;code&gt;ace-jump-mode&lt;/code&gt; might not be on your system --
remember to restrict &lt;code&gt;:init&lt;/code&gt; code to only what would succeed either way.&lt;/p&gt;
&lt;p&gt;The &lt;code&gt;:bind&lt;/code&gt; keyword takes either a cons or a list of conses:&lt;/p&gt;
&lt;div class="highlight highlight-source-emacs-lisp"&gt;&lt;pre&gt;(&lt;span class="pl-c1"&gt;use-package&lt;/span&gt; hi-lock
  &lt;span class="pl-c1"&gt;:bind&lt;/span&gt; ((&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;M-o l&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; &lt;span class="pl-k"&gt;.&lt;/span&gt; highlight-lines-matching-regexp)
         (&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;M-o r&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; &lt;span class="pl-k"&gt;.&lt;/span&gt; highlight-regexp)
         (&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;M-o w&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; &lt;span class="pl-k"&gt;.&lt;/span&gt; highlight-phrase)))&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;The &lt;code&gt;:commands&lt;/code&gt; keyword likewise takes either a symbol or a list of symbols.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;NOTE&lt;/strong&gt;: inside strings, special keys like &lt;code&gt;tab&lt;/code&gt; or &lt;code&gt;F1&lt;/code&gt;-&lt;code&gt;Fn&lt;/code&gt; have to be written inside angle brackets, e.g. &lt;code&gt;"C-&amp;lt;up&amp;gt;"&lt;/code&gt;.
Standalone special keys (and some combinations) can be written in square brackets, e.g. &lt;code&gt;[tab]&lt;/code&gt; instead of &lt;code&gt;"&amp;lt;tab&amp;gt;"&lt;/code&gt;. The syntax for the keybindings is similar to
the "kbd" syntax: see &lt;a href="https://www.gnu.org/software/emacs/manual/html_node/emacs/Init-Rebinding.html" rel="nofollow"&gt;https://www.gnu.org/software/emacs/manual/html_node/emacs/Init-Rebinding.html&lt;/a&gt;
for more information.&lt;/p&gt;
&lt;p&gt;Examples:&lt;/p&gt;
&lt;div class="highlight highlight-source-emacs-lisp"&gt;&lt;pre&gt;(&lt;span class="pl-c1"&gt;use-package&lt;/span&gt; helm
  &lt;span class="pl-c1"&gt;:bind&lt;/span&gt; ((&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;M-x&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; &lt;span class="pl-k"&gt;.&lt;/span&gt; helm-M-x)
         (&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;M-&amp;lt;f5&amp;gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; &lt;span class="pl-k"&gt;.&lt;/span&gt; helm-find-files)
         ([f10] &lt;span class="pl-k"&gt;.&lt;/span&gt; helm-buffers-list)
         ([S-f10] &lt;span class="pl-k"&gt;.&lt;/span&gt; helm-recentf)))&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Furthermore, &lt;a href="https://www.gnu.org/software/emacs/manual/html_node/elisp/Remapping-Commands.html" rel="nofollow"&gt;remapping commands&lt;/a&gt;
with &lt;code&gt;:bind&lt;/code&gt; and &lt;code&gt;bind-key&lt;/code&gt; works as expected, because when the
binding is a vector, it is passed straight to &lt;code&gt;define-key&lt;/code&gt;. So the
following example will rebind &lt;code&gt;M-q&lt;/code&gt; (originally &lt;code&gt;fill-paragraph&lt;/code&gt;) to
&lt;code&gt;unfill-toggle&lt;/code&gt;:&lt;/p&gt;
&lt;div class="highlight highlight-source-emacs-lisp"&gt;&lt;pre&gt;(&lt;span class="pl-c1"&gt;use-package&lt;/span&gt; unfill
  &lt;span class="pl-c1"&gt;:bind&lt;/span&gt; ([remap fill-paragraph] &lt;span class="pl-k"&gt;.&lt;/span&gt; unfill-toggle))&lt;/pre&gt;&lt;/div&gt;
&lt;h3&gt;&lt;a id="user-content-binding-to-keymaps" class="anchor" aria-hidden="true" href="#binding-to-keymaps"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Binding to keymaps&lt;/h3&gt;
&lt;p&gt;Normally &lt;code&gt;:bind&lt;/code&gt; expects that commands are functions that will be autoloaded
from the given package. However, this does not work if one of those commands
is actually a keymap, since keymaps are not functions, and cannot be
autoloaded using Emacs' &lt;code&gt;autoload&lt;/code&gt; mechanism.&lt;/p&gt;
&lt;p&gt;To handle this case, &lt;code&gt;use-package&lt;/code&gt; offers a special, limited variant of
&lt;code&gt;:bind&lt;/code&gt; called &lt;code&gt;:bind-keymap&lt;/code&gt;. The only difference is that the "commands"
bound to by &lt;code&gt;:bind-keymap&lt;/code&gt; must be keymaps defined in the package, rather than
command functions. This is handled behind the scenes by generating custom code
that loads the package containing the keymap, and then re-executes your
keypress after the first load, to reinterpret that keypress as a prefix key.&lt;/p&gt;
&lt;p&gt;For example:&lt;/p&gt;
&lt;div class="highlight highlight-source-emacs-lisp"&gt;&lt;pre&gt;(&lt;span class="pl-c1"&gt;use-package&lt;/span&gt; projectile
  &lt;span class="pl-c1"&gt;:bind-keymap&lt;/span&gt;
  (&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;C-c p&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; &lt;span class="pl-k"&gt;.&lt;/span&gt; projectile-command-map))&lt;/pre&gt;&lt;/div&gt;
&lt;h3&gt;&lt;a id="user-content-binding-within-local-keymaps" class="anchor" aria-hidden="true" href="#binding-within-local-keymaps"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Binding within local keymaps&lt;/h3&gt;
&lt;p&gt;Slightly different from binding a key to a keymap, is binding a key &lt;em&gt;within&lt;/em&gt; a
local keymap that only exists after the package is loaded.  &lt;code&gt;use-package&lt;/code&gt;
supports this with a &lt;code&gt;:map&lt;/code&gt; modifier, taking the local keymap to bind to:&lt;/p&gt;
&lt;div class="highlight highlight-source-emacs-lisp"&gt;&lt;pre&gt;(&lt;span class="pl-c1"&gt;use-package&lt;/span&gt; helm
  &lt;span class="pl-c1"&gt;:bind&lt;/span&gt; (&lt;span class="pl-c1"&gt;:map&lt;/span&gt; helm-command-map
         (&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;C-c h&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; &lt;span class="pl-k"&gt;.&lt;/span&gt; helm-execute-persistent-action)))&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;The effect of this statement is to wait until &lt;code&gt;helm&lt;/code&gt; has loaded, and then to
bind the key &lt;code&gt;C-c h&lt;/code&gt; to &lt;code&gt;helm-execute-persistent-action&lt;/code&gt; within Helm's local
keymap, &lt;code&gt;helm-mode-map&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;Multiple uses of &lt;code&gt;:map&lt;/code&gt; may be specified. Any binding occurring before the
first use of &lt;code&gt;:map&lt;/code&gt; are applied to the global keymap:&lt;/p&gt;
&lt;div class="highlight highlight-source-emacs-lisp"&gt;&lt;pre&gt;(&lt;span class="pl-c1"&gt;use-package&lt;/span&gt; &lt;span class="pl-c1"&gt;term&lt;/span&gt;
  &lt;span class="pl-c1"&gt;:bind&lt;/span&gt; ((&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;C-c t&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; &lt;span class="pl-k"&gt;.&lt;/span&gt; &lt;span class="pl-c1"&gt;term&lt;/span&gt;)
         &lt;span class="pl-c1"&gt;:map&lt;/span&gt; term-mode-map
         (&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;M-p&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; &lt;span class="pl-k"&gt;.&lt;/span&gt; term-send-up)
         (&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;M-n&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; &lt;span class="pl-k"&gt;.&lt;/span&gt; term-send-down)
         &lt;span class="pl-c1"&gt;:map&lt;/span&gt; term-raw-map
         (&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;M-o&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; &lt;span class="pl-k"&gt;.&lt;/span&gt; other-window)
         (&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;M-p&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; &lt;span class="pl-k"&gt;.&lt;/span&gt; term-send-up)
         (&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;M-n&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; &lt;span class="pl-k"&gt;.&lt;/span&gt; term-send-down)))&lt;/pre&gt;&lt;/div&gt;
&lt;h2&gt;&lt;a id="user-content-modes-and-interpreters" class="anchor" aria-hidden="true" href="#modes-and-interpreters"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Modes and interpreters&lt;/h2&gt;
&lt;p&gt;Similar to &lt;code&gt;:bind&lt;/code&gt;, you can use &lt;code&gt;:mode&lt;/code&gt; and &lt;code&gt;:interpreter&lt;/code&gt; to establish a
deferred binding within the &lt;code&gt;auto-mode-alist&lt;/code&gt; and &lt;code&gt;interpreter-mode-alist&lt;/code&gt;
variables. The specifier to either keyword can be a cons cell, a list of cons
cells, or a string or regexp:&lt;/p&gt;
&lt;div class="highlight highlight-source-emacs-lisp"&gt;&lt;pre&gt;(&lt;span class="pl-c1"&gt;use-package&lt;/span&gt; ruby-mode
  &lt;span class="pl-c1"&gt;:mode&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;span class="pl-cce"&gt;\\&lt;/span&gt;.rb&lt;span class="pl-cce"&gt;\\&lt;/span&gt;'&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;
  &lt;span class="pl-c1"&gt;:interpreter&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;ruby&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt;; The package is "python" but the mode is "python-mode":&lt;/span&gt;
(&lt;span class="pl-c1"&gt;use-package&lt;/span&gt; python
  &lt;span class="pl-c1"&gt;:mode&lt;/span&gt; (&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;span class="pl-cce"&gt;\\&lt;/span&gt;.py&lt;span class="pl-cce"&gt;\\&lt;/span&gt;'&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; &lt;span class="pl-k"&gt;.&lt;/span&gt; python-mode)
  &lt;span class="pl-c1"&gt;:interpreter&lt;/span&gt; (&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;python&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; &lt;span class="pl-k"&gt;.&lt;/span&gt; python-mode))&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;If you aren't using &lt;code&gt;:commands&lt;/code&gt;, &lt;code&gt;:bind&lt;/code&gt;, &lt;code&gt;:bind*&lt;/code&gt;, &lt;code&gt;:bind-keymap&lt;/code&gt;,
&lt;code&gt;:bind-keymap*&lt;/code&gt;, &lt;code&gt;:mode&lt;/code&gt;, &lt;code&gt;:interpreter&lt;/code&gt;, or &lt;code&gt;:hook&lt;/code&gt; (all of which imply &lt;code&gt;:defer&lt;/code&gt;; see
the docstring for &lt;code&gt;use-package&lt;/code&gt; for a brief description of each), you can
still defer loading with the &lt;code&gt;:defer&lt;/code&gt; keyword:&lt;/p&gt;
&lt;div class="highlight highlight-source-emacs-lisp"&gt;&lt;pre&gt;(&lt;span class="pl-c1"&gt;use-package&lt;/span&gt; ace-jump-mode
  &lt;span class="pl-c1"&gt;:defer&lt;/span&gt; &lt;span class="pl-c1"&gt;t&lt;/span&gt;
  &lt;span class="pl-c1"&gt;:init&lt;/span&gt;
  (&lt;span class="pl-c1"&gt;autoload&lt;/span&gt; &lt;span class="pl-c1"&gt;'ace-jump-mode&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;ace-jump-mode&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; &lt;span class="pl-c1"&gt;nil&lt;/span&gt; &lt;span class="pl-c1"&gt;t&lt;/span&gt;)
  (bind-key &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;C-.&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; &lt;span class="pl-c1"&gt;'ace-jump-mode&lt;/span&gt;))&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;This does exactly the same thing as the following:&lt;/p&gt;
&lt;div class="highlight highlight-source-emacs-lisp"&gt;&lt;pre&gt;(&lt;span class="pl-c1"&gt;use-package&lt;/span&gt; ace-jump-mode
  &lt;span class="pl-c1"&gt;:bind&lt;/span&gt; (&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;C-.&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; &lt;span class="pl-k"&gt;.&lt;/span&gt; ace-jump-mode))&lt;/pre&gt;&lt;/div&gt;
&lt;h2&gt;&lt;a id="user-content-magic-handlers" class="anchor" aria-hidden="true" href="#magic-handlers"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Magic handlers&lt;/h2&gt;
&lt;p&gt;Similar to &lt;code&gt;:mode&lt;/code&gt; and &lt;code&gt;:interpreter&lt;/code&gt;, you can also use &lt;code&gt;:magic&lt;/code&gt; and
&lt;code&gt;:magic-fallback&lt;/code&gt; to cause certain function to be run if the beginning of a
file matches a given regular expression. The difference between the two is
that &lt;code&gt;:magic-fallback&lt;/code&gt; has a lower priority than &lt;code&gt;:mode&lt;/code&gt;. For example:&lt;/p&gt;
&lt;div class="highlight highlight-source-emacs-lisp"&gt;&lt;pre&gt;(&lt;span class="pl-c1"&gt;use-package&lt;/span&gt; pdf-tools
  &lt;span class="pl-c1"&gt;:load-path&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;site-lisp/pdf-tools/lisp&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;
  &lt;span class="pl-c1"&gt;:magic&lt;/span&gt; (&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;%PDF&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; &lt;span class="pl-k"&gt;.&lt;/span&gt; pdf-view-mode)
  &lt;span class="pl-c1"&gt;:config&lt;/span&gt;
  (pdf-tools-install &lt;span class="pl-c1"&gt;:no-query&lt;/span&gt;))&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;This registers an autoloaded command for &lt;code&gt;pdf-view-mode&lt;/code&gt;, defers loading of
&lt;code&gt;pdf-tools&lt;/code&gt;, and runs &lt;code&gt;pdf-view-mode&lt;/code&gt; if the beginning of a buffer matches the
string &lt;code&gt;"%PDF"&lt;/code&gt;.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-hooks" class="anchor" aria-hidden="true" href="#hooks"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Hooks&lt;/h2&gt;
&lt;p&gt;The &lt;code&gt;:hook&lt;/code&gt; keyword allows adding functions onto package hooks. Thus,
all of the following are equivalent:&lt;/p&gt;
&lt;div class="highlight highlight-source-emacs-lisp"&gt;&lt;pre&gt;(&lt;span class="pl-c1"&gt;use-package&lt;/span&gt; ace-jump-mode
  &lt;span class="pl-c1"&gt;:hook&lt;/span&gt; prog-mode)

(&lt;span class="pl-c1"&gt;use-package&lt;/span&gt; ace-jump-mode
  &lt;span class="pl-c1"&gt;:hook&lt;/span&gt; (&lt;span class="pl-c1"&gt;prog-mode&lt;/span&gt; &lt;span class="pl-k"&gt;.&lt;/span&gt; ace-jump-mode))

(&lt;span class="pl-c1"&gt;use-package&lt;/span&gt; ace-jump-mode
  &lt;span class="pl-c1"&gt;:commands&lt;/span&gt; ace-jump-mode
  &lt;span class="pl-c1"&gt;:init&lt;/span&gt;
  (&lt;span class="pl-c1"&gt;add-hook&lt;/span&gt; &lt;span class="pl-c1"&gt;'prog-mode-hook&lt;/span&gt; &lt;span class="pl-c1"&gt;#&lt;span class="pl-c1"&gt;'ace-jump-mode&lt;/span&gt;&lt;/span&gt;))&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;And likewise, when multiple hooks should be applied, the following are also
equivalent:&lt;/p&gt;
&lt;div class="highlight highlight-source-emacs-lisp"&gt;&lt;pre&gt;(&lt;span class="pl-c1"&gt;use-package&lt;/span&gt; ace-jump-mode
  &lt;span class="pl-c1"&gt;:hook&lt;/span&gt; (&lt;span class="pl-c1"&gt;prog-mode&lt;/span&gt; text-mode))

(&lt;span class="pl-c1"&gt;use-package&lt;/span&gt; ace-jump-mode
  &lt;span class="pl-c1"&gt;:hook&lt;/span&gt; ((&lt;span class="pl-c1"&gt;prog-mode&lt;/span&gt; text-mode) &lt;span class="pl-k"&gt;.&lt;/span&gt; ace-jump-mode))

(&lt;span class="pl-c1"&gt;use-package&lt;/span&gt; ace-jump-mode
  &lt;span class="pl-c1"&gt;:hook&lt;/span&gt; ((&lt;span class="pl-c1"&gt;prog-mode&lt;/span&gt; &lt;span class="pl-k"&gt;.&lt;/span&gt; ace-jump-mode)
         (&lt;span class="pl-c1"&gt;text-mode&lt;/span&gt; &lt;span class="pl-k"&gt;.&lt;/span&gt; ace-jump-mode)))

(&lt;span class="pl-c1"&gt;use-package&lt;/span&gt; ace-jump-mode
  &lt;span class="pl-c1"&gt;:commands&lt;/span&gt; ace-jump-mode
  &lt;span class="pl-c1"&gt;:init&lt;/span&gt;
  (&lt;span class="pl-c1"&gt;add-hook&lt;/span&gt; &lt;span class="pl-c1"&gt;'prog-mode-hook&lt;/span&gt; &lt;span class="pl-c1"&gt;#&lt;span class="pl-c1"&gt;'ace-jump-mode&lt;/span&gt;&lt;/span&gt;)
  (&lt;span class="pl-c1"&gt;add-hook&lt;/span&gt; &lt;span class="pl-c1"&gt;'text-mode-hook&lt;/span&gt; &lt;span class="pl-c1"&gt;#&lt;span class="pl-c1"&gt;'ace-jump-mode&lt;/span&gt;&lt;/span&gt;))&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;When using &lt;code&gt;:hook&lt;/code&gt; omit the "-hook" suffix if you specify the hook
explicitly, as this is appended by default. For example the following
code will not work as it attempts to add to the &lt;code&gt;prog-mode-hook-hook&lt;/code&gt;
which does not exist:&lt;/p&gt;
&lt;div class="highlight highlight-source-emacs-lisp"&gt;&lt;pre&gt;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt;; DOES NOT WORK&lt;/span&gt;
(&lt;span class="pl-c1"&gt;use-package&lt;/span&gt; ace-jump-mode
  &lt;span class="pl-c1"&gt;:hook&lt;/span&gt; (&lt;span class="pl-c1"&gt;prog-mode-hook&lt;/span&gt; &lt;span class="pl-k"&gt;.&lt;/span&gt; ace-jump-mode))&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;If you do not like this behaviour, set &lt;code&gt;use-package-hook-name-suffix&lt;/code&gt;
to nil. By default the value of this variable is "-hook".&lt;/p&gt;
&lt;p&gt;The use of &lt;code&gt;:hook&lt;/code&gt;, as with &lt;code&gt;:bind&lt;/code&gt;, &lt;code&gt;:mode&lt;/code&gt;, &lt;code&gt;:interpreter&lt;/code&gt;, etc., causes the
functions being hooked to implicitly be read as &lt;code&gt;:commands&lt;/code&gt; (meaning they will
establish interactive &lt;code&gt;autoload&lt;/code&gt; definitions for that module, if not already
defined as functions), and so &lt;code&gt;:defer t&lt;/code&gt; is also implied by &lt;code&gt;:hook&lt;/code&gt;.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-package-customization" class="anchor" aria-hidden="true" href="#package-customization"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Package customization&lt;/h2&gt;
&lt;h3&gt;&lt;a id="user-content-customizing-variables" class="anchor" aria-hidden="true" href="#customizing-variables"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Customizing variables.&lt;/h3&gt;
&lt;p&gt;The &lt;code&gt;:custom&lt;/code&gt; keyword allows customization of package custom variables.&lt;/p&gt;
&lt;div class="highlight highlight-source-emacs-lisp"&gt;&lt;pre&gt;(&lt;span class="pl-c1"&gt;use-package&lt;/span&gt; comint
  &lt;span class="pl-c1"&gt;:custom&lt;/span&gt;
  (comint-buffer-maximum-size &lt;span class="pl-c1"&gt;20000&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;Increase comint buffer size.&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
  (comint-prompt-read-only &lt;span class="pl-c1"&gt;t&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;Make the prompt read only.&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;))&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;The documentation string is not mandatory.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;NOTE&lt;/strong&gt;: these are only for people who wish to keep customizations with their
accompanying use-package declarations. Functionally, the only benefit over
using &lt;code&gt;setq&lt;/code&gt; in a &lt;code&gt;:config&lt;/code&gt; block is that customizations might execute code
when values are assigned. If you currently use &lt;code&gt;M-x customize-option&lt;/code&gt; and save
to a settings file, you do not want to use this option.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-customizing-faces" class="anchor" aria-hidden="true" href="#customizing-faces"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Customizing faces&lt;/h3&gt;
&lt;p&gt;The &lt;code&gt;:custom-face&lt;/code&gt; keyword allows customization of package custom faces.&lt;/p&gt;
&lt;div class="highlight highlight-source-emacs-lisp"&gt;&lt;pre&gt;(&lt;span class="pl-c1"&gt;use-package&lt;/span&gt; eruby-mode
  &lt;span class="pl-c1"&gt;:custom-face&lt;/span&gt;
  (eruby-standard-face ((&lt;span class="pl-c1"&gt;t&lt;/span&gt; (&lt;span class="pl-c1"&gt;:slant&lt;/span&gt; &lt;span class="pl-c1"&gt;italic&lt;/span&gt;)))))&lt;/pre&gt;&lt;/div&gt;
&lt;h2&gt;&lt;a id="user-content-notes-about-lazy-loading" class="anchor" aria-hidden="true" href="#notes-about-lazy-loading"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Notes about lazy loading&lt;/h2&gt;
&lt;p&gt;In almost all cases you don't need to manually specify &lt;code&gt;:defer t&lt;/code&gt;.  This is
implied whenever &lt;code&gt;:bind&lt;/code&gt; or &lt;code&gt;:mode&lt;/code&gt; or &lt;code&gt;:interpreter&lt;/code&gt; is used.  Typically, you
only need to specify &lt;code&gt;:defer&lt;/code&gt; if you know for a fact that some other package
will do something to cause your package to load at the appropriate time, and
thus you would like to defer loading even though use-package isn't creating
any autoloads for you.&lt;/p&gt;
&lt;p&gt;You can override package deferral with the &lt;code&gt;:demand&lt;/code&gt; keyword.  Thus, even if
you use &lt;code&gt;:bind&lt;/code&gt;, using &lt;code&gt;:demand&lt;/code&gt; will force loading to occur immediately and
not establish an autoload for the bound key.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-information-about-package-loads" class="anchor" aria-hidden="true" href="#information-about-package-loads"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Information about package loads&lt;/h2&gt;
&lt;p&gt;When a package is loaded, and if you have &lt;code&gt;use-package-verbose&lt;/code&gt; set to &lt;code&gt;t&lt;/code&gt;, or
if the package takes longer than 0.1s to load, you will see a message to
indicate this loading activity in the &lt;code&gt;*Messages*&lt;/code&gt; buffer.  The same will
happen for configuration, or &lt;code&gt;:config&lt;/code&gt; blocks that take longer than 0.1s to
execute.  In general, you should keep &lt;code&gt;:init&lt;/code&gt; forms as simple and quick as
possible, and put as much as you can get away with into the &lt;code&gt;:config&lt;/code&gt; block.
This way, deferred loading can help your Emacs to start as quickly as
possible.&lt;/p&gt;
&lt;p&gt;Additionally, if an error occurs while initializing or configuring a package,
this will not stop your Emacs from loading.  Rather, the error will be
captured by &lt;code&gt;use-package&lt;/code&gt;, and reported to a special &lt;code&gt;*Warnings*&lt;/code&gt; popup
buffer, so that you can debug the situation in an otherwise functional Emacs.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-conditional-loading" class="anchor" aria-hidden="true" href="#conditional-loading"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Conditional loading&lt;/h2&gt;
&lt;p&gt;You can use the &lt;code&gt;:if&lt;/code&gt; keyword to predicate the loading and initialization of
modules.&lt;/p&gt;
&lt;p&gt;For example, I only want &lt;code&gt;edit-server&lt;/code&gt; running for my main,
graphical Emacs, not for other Emacsen I may start at the command line:&lt;/p&gt;
&lt;div class="highlight highlight-source-emacs-lisp"&gt;&lt;pre&gt;(&lt;span class="pl-c1"&gt;use-package&lt;/span&gt; edit-server
  &lt;span class="pl-c1"&gt;:if&lt;/span&gt; window-system
  &lt;span class="pl-c1"&gt;:init&lt;/span&gt;
  (&lt;span class="pl-c1"&gt;add-hook&lt;/span&gt; &lt;span class="pl-c1"&gt;'after-init-hook&lt;/span&gt; &lt;span class="pl-c1"&gt;'server-start&lt;/span&gt; &lt;span class="pl-c1"&gt;t&lt;/span&gt;)
  (&lt;span class="pl-c1"&gt;add-hook&lt;/span&gt; &lt;span class="pl-c1"&gt;'after-init-hook&lt;/span&gt; &lt;span class="pl-c1"&gt;'edit-server-start&lt;/span&gt; &lt;span class="pl-c1"&gt;t&lt;/span&gt;))&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;In another example, we can load things conditional on the operating system:&lt;/p&gt;
&lt;div class="highlight highlight-source-emacs-lisp"&gt;&lt;pre&gt;(&lt;span class="pl-c1"&gt;use-package&lt;/span&gt; exec-path-from-shell
  &lt;span class="pl-c1"&gt;:if&lt;/span&gt; (&lt;span class="pl-c1"&gt;memq&lt;/span&gt; window-system '(mac ns))
  &lt;span class="pl-c1"&gt;:ensure&lt;/span&gt; &lt;span class="pl-c1"&gt;t&lt;/span&gt;
  &lt;span class="pl-c1"&gt;:config&lt;/span&gt;
  (exec-path-from-shell-initialize))&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;The &lt;code&gt;:disabled&lt;/code&gt; keyword can turn off a module you're having difficulties with,
or stop loading something you're not using at the present time:&lt;/p&gt;
&lt;div class="highlight highlight-source-emacs-lisp"&gt;&lt;pre&gt;(&lt;span class="pl-c1"&gt;use-package&lt;/span&gt; ess-site
  &lt;span class="pl-c1"&gt;:disabled&lt;/span&gt;
  &lt;span class="pl-c1"&gt;:commands&lt;/span&gt; R)&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;When byte-compiling your &lt;code&gt;.emacs&lt;/code&gt; file, disabled declarations are omitted
from the output entirely, to accelerate startup times.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;NOTE&lt;/strong&gt;: &lt;code&gt;:when&lt;/code&gt; is provided as an alias for &lt;code&gt;:if&lt;/code&gt;, and &lt;code&gt;:unless foo&lt;/code&gt; means
the same thing as &lt;code&gt;:if (not foo)&lt;/code&gt;. For example, the following will also stop
&lt;code&gt;:ensure&lt;/code&gt; from happening on Mac systems:&lt;/p&gt;
&lt;div class="highlight highlight-source-emacs-lisp"&gt;&lt;pre&gt;(&lt;span class="pl-k"&gt;when&lt;/span&gt; (&lt;span class="pl-c1"&gt;memq&lt;/span&gt; window-system '(mac ns))
  (&lt;span class="pl-c1"&gt;use-package&lt;/span&gt; exec-path-from-shell
    &lt;span class="pl-c1"&gt;:ensure&lt;/span&gt; &lt;span class="pl-c1"&gt;t&lt;/span&gt;
    &lt;span class="pl-c1"&gt;:config&lt;/span&gt;
    (exec-path-from-shell-initialize)))&lt;/pre&gt;&lt;/div&gt;
&lt;h3&gt;&lt;a id="user-content-conditional-loading-before-preface" class="anchor" aria-hidden="true" href="#conditional-loading-before-preface"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Conditional loading before :preface&lt;/h3&gt;
&lt;p&gt;If you need to conditionalize a use-package form so that the condition occurs
before even the &lt;code&gt;:preface&lt;/code&gt; is executed, simply use &lt;code&gt;when&lt;/code&gt; around the
use-package form itself:&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-loading-packages-in-sequence" class="anchor" aria-hidden="true" href="#loading-packages-in-sequence"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Loading packages in sequence&lt;/h3&gt;
&lt;p&gt;Sometimes it only makes sense to configure a package after another has been
loaded, because certain variables or functions are not in scope until that
time. This can achieved using an &lt;code&gt;:after&lt;/code&gt; keyword that allows a fairly rich
description of the exact conditions when loading should occur. Here is an
example:&lt;/p&gt;
&lt;div class="highlight highlight-source-emacs-lisp"&gt;&lt;pre&gt;(&lt;span class="pl-c1"&gt;use-package&lt;/span&gt; hydra
  &lt;span class="pl-c1"&gt;:load-path&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;site-lisp/hydra&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)

(&lt;span class="pl-c1"&gt;use-package&lt;/span&gt; ivy
  &lt;span class="pl-c1"&gt;:load-path&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;site-lisp/swiper&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)

(&lt;span class="pl-c1"&gt;use-package&lt;/span&gt; ivy-hydra
  &lt;span class="pl-c1"&gt;:after&lt;/span&gt; (ivy hydra))&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;In this case, because all of these packages are demand-loaded in the order
they occur, the use of &lt;code&gt;:after&lt;/code&gt; is not strictly necessary. By using it,
however, the above code becomes order-independent, without an implicit
depedence on the nature of your init file.&lt;/p&gt;
&lt;p&gt;By default, &lt;code&gt;:after (foo bar)&lt;/code&gt; is the same as &lt;code&gt;:after (:all foo bar)&lt;/code&gt;, meaning
that loading of the given package will not happen until both &lt;code&gt;foo&lt;/code&gt; and &lt;code&gt;bar&lt;/code&gt;
have been loaded. Here are some of the other possibilities:&lt;/p&gt;
&lt;div class="highlight highlight-source-emacs-lisp"&gt;&lt;pre&gt;&lt;span class="pl-c1"&gt;:after&lt;/span&gt; (foo bar)
&lt;span class="pl-c1"&gt;:after&lt;/span&gt; (&lt;span class="pl-c1"&gt;:all&lt;/span&gt; foo bar)
&lt;span class="pl-c1"&gt;:after&lt;/span&gt; (&lt;span class="pl-c1"&gt;:any&lt;/span&gt; foo bar)
&lt;span class="pl-c1"&gt;:after&lt;/span&gt; (&lt;span class="pl-c1"&gt;:all&lt;/span&gt; (&lt;span class="pl-c1"&gt;:any&lt;/span&gt; foo bar) (&lt;span class="pl-c1"&gt;:any&lt;/span&gt; baz quux))
&lt;span class="pl-c1"&gt;:after&lt;/span&gt; (&lt;span class="pl-c1"&gt;:any&lt;/span&gt; (&lt;span class="pl-c1"&gt;:all&lt;/span&gt; foo bar) (&lt;span class="pl-c1"&gt;:all&lt;/span&gt; baz quux))&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;When you nest selectors, such as &lt;code&gt;(:any (:all foo bar) (:all baz quux))&lt;/code&gt;, it
means that the package will be loaded when either both &lt;code&gt;foo&lt;/code&gt; and &lt;code&gt;bar&lt;/code&gt; have
been loaded, or both &lt;code&gt;baz&lt;/code&gt; and &lt;code&gt;quux&lt;/code&gt; have been loaded.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;NOTE&lt;/strong&gt;: pay attention if you set &lt;code&gt;use-package-always-defer&lt;/code&gt; to t, and also use
the &lt;code&gt;:after&lt;/code&gt; keyword, as you will need to specify how the declared package is
to be loaded: e.g., by some &lt;code&gt;:bind&lt;/code&gt;. If you're not using one of the mechanisms
that registers autoloads, such as &lt;code&gt;:bind&lt;/code&gt; or &lt;code&gt;:hook&lt;/code&gt;, and your package manager
does not provide autoloads, it's possible that without adding &lt;code&gt;:demand t&lt;/code&gt; to
those declarations, your package will never be loaded.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-prevent-loading-if-dependencies-are-missing" class="anchor" aria-hidden="true" href="#prevent-loading-if-dependencies-are-missing"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Prevent loading if dependencies are missing&lt;/h3&gt;
&lt;p&gt;While the &lt;code&gt;:after&lt;/code&gt; keyword delays loading until the dependencies are loaded,
the somewhat simpler &lt;code&gt;:requires&lt;/code&gt; keyword simply never loads the package if the
dependencies are not available at the time the &lt;code&gt;use-package&lt;/code&gt; declaration is
encountered. By "available" in this context it means that &lt;code&gt;foo&lt;/code&gt; is available
if &lt;code&gt;(featurep 'foo)&lt;/code&gt; evaluates to a non-nil value. For example:&lt;/p&gt;
&lt;div class="highlight highlight-source-emacs-lisp"&gt;&lt;pre&gt;(&lt;span class="pl-c1"&gt;use-package&lt;/span&gt; abbrev
  &lt;span class="pl-c1"&gt;:requires&lt;/span&gt; foo)&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;This is the same as:&lt;/p&gt;
&lt;div class="highlight highlight-source-emacs-lisp"&gt;&lt;pre&gt;(&lt;span class="pl-c1"&gt;use-package&lt;/span&gt; abbrev
  &lt;span class="pl-c1"&gt;:if&lt;/span&gt; (&lt;span class="pl-c1"&gt;featurep&lt;/span&gt; &lt;span class="pl-c1"&gt;'foo&lt;/span&gt;))&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;As a convenience, a list of such packages may be specified:&lt;/p&gt;
&lt;div class="highlight highlight-source-emacs-lisp"&gt;&lt;pre&gt;(&lt;span class="pl-c1"&gt;use-package&lt;/span&gt; abbrev
  &lt;span class="pl-c1"&gt;:requires&lt;/span&gt; (foo bar baz))&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;For more complex logic, such as that supported by &lt;code&gt;:after&lt;/code&gt;, simply use &lt;code&gt;:if&lt;/code&gt;
and the appropriate Lisp expression.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-byte-compiling-your-emacs" class="anchor" aria-hidden="true" href="#byte-compiling-your-emacs"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Byte-compiling your .emacs&lt;/h2&gt;
&lt;p&gt;Another feature of &lt;code&gt;use-package&lt;/code&gt; is that it always loads every file that it
can when &lt;code&gt;.emacs&lt;/code&gt; is being byte-compiled.  This helps to silence spurious
warnings about unknown variables and functions.&lt;/p&gt;
&lt;p&gt;However, there are times when this is just not enough.  For those times, use
the &lt;code&gt;:defines&lt;/code&gt; and &lt;code&gt;:functions&lt;/code&gt; keywords to introduce dummy variable and
function declarations solely for the sake of the byte-compiler:&lt;/p&gt;
&lt;div class="highlight highlight-source-emacs-lisp"&gt;&lt;pre&gt;(&lt;span class="pl-c1"&gt;use-package&lt;/span&gt; texinfo
  &lt;span class="pl-c1"&gt;:defines&lt;/span&gt; texinfo-section-list
  &lt;span class="pl-c1"&gt;:commands&lt;/span&gt; texinfo-mode
  &lt;span class="pl-c1"&gt;:init&lt;/span&gt;
  (&lt;span class="pl-c1"&gt;add-to-list&lt;/span&gt; &lt;span class="pl-c1"&gt;'auto-mode-alist&lt;/span&gt; '(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;span class="pl-cce"&gt;\\&lt;/span&gt;.texi$&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; &lt;span class="pl-k"&gt;.&lt;/span&gt; texinfo-mode)))&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;If you need to silence a missing function warning, you can use &lt;code&gt;:functions&lt;/code&gt;:&lt;/p&gt;
&lt;div class="highlight highlight-source-emacs-lisp"&gt;&lt;pre&gt;(&lt;span class="pl-c1"&gt;use-package&lt;/span&gt; ruby-mode
  &lt;span class="pl-c1"&gt;:mode&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;span class="pl-cce"&gt;\\&lt;/span&gt;.rb&lt;span class="pl-cce"&gt;\\&lt;/span&gt;'&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;
  &lt;span class="pl-c1"&gt;:interpreter&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;ruby&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;
  &lt;span class="pl-c1"&gt;:functions&lt;/span&gt; inf-ruby-keys
  &lt;span class="pl-c1"&gt;:config&lt;/span&gt;
  (&lt;span class="pl-k"&gt;defun&lt;/span&gt; &lt;span class="pl-e"&gt;my-ruby-mode-hook&lt;/span&gt; ()
    (&lt;span class="pl-c1"&gt;require&lt;/span&gt; &lt;span class="pl-c1"&gt;'inf-ruby&lt;/span&gt;)
    (inf-ruby-keys))

  (&lt;span class="pl-c1"&gt;add-hook&lt;/span&gt; &lt;span class="pl-c1"&gt;'ruby-mode-hook&lt;/span&gt; &lt;span class="pl-c1"&gt;'my-ruby-mode-hook&lt;/span&gt;))&lt;/pre&gt;&lt;/div&gt;
&lt;h3&gt;&lt;a id="user-content-prevent-a-package-from-loading-at-compile-time" class="anchor" aria-hidden="true" href="#prevent-a-package-from-loading-at-compile-time"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Prevent a package from loading at compile-time&lt;/h3&gt;
&lt;p&gt;Normally, &lt;code&gt;use-package&lt;/code&gt; will load each package at compile time before
compiling the configuration, to ensure that any necessary symbols are in scope
to satisfy the byte-compiler.  At times this can cause problems, since a
package may have special loading requirements, and all that you want to use
&lt;code&gt;use-package&lt;/code&gt; for is to add a configuration to the &lt;code&gt;eval-after-load&lt;/code&gt; hook.  In
such cases, use the &lt;code&gt;:no-require&lt;/code&gt; keyword:&lt;/p&gt;
&lt;div class="highlight highlight-source-emacs-lisp"&gt;&lt;pre&gt;(&lt;span class="pl-c1"&gt;use-package&lt;/span&gt; foo
  &lt;span class="pl-c1"&gt;:no-require&lt;/span&gt; &lt;span class="pl-c1"&gt;t&lt;/span&gt;
  &lt;span class="pl-c1"&gt;:config&lt;/span&gt;
  (&lt;span class="pl-c1"&gt;message&lt;/span&gt; &lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;span class="pl-s"&gt;This is evaluated when &lt;span class="pl-smi"&gt;`foo'&lt;/span&gt; is loaded&lt;/span&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;))&lt;/pre&gt;&lt;/div&gt;
&lt;h2&gt;&lt;a id="user-content-extending-the-load-path" class="anchor" aria-hidden="true" href="#extending-the-load-path"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Extending the load-path&lt;/h2&gt;
&lt;p&gt;If your package needs a directory added to the &lt;code&gt;load-path&lt;/code&gt; in order to load,
use &lt;code&gt;:load-path&lt;/code&gt;.  This takes a symbol, a function, a string or a list of
strings.  If the path is relative, it is expanded within
&lt;code&gt;user-emacs-directory&lt;/code&gt;:&lt;/p&gt;
&lt;div class="highlight highlight-source-emacs-lisp"&gt;&lt;pre&gt;(&lt;span class="pl-c1"&gt;use-package&lt;/span&gt; ess-site
  &lt;span class="pl-c1"&gt;:load-path&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;site-lisp/ess/lisp/&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;
  &lt;span class="pl-c1"&gt;:commands&lt;/span&gt; R)&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;strong&gt;NOTE&lt;/strong&gt;: when using a symbol or a function to provide a dynamically generated
list of paths, you must inform the byte-compiler of this definition so the
value is available at byte-compilation time.  This is done by using the
special form &lt;code&gt;eval-and-compile&lt;/code&gt; (as opposed to &lt;code&gt;eval-when-compile&lt;/code&gt;).  Further,
this value is fixed at whatever was determined during compilation, to avoid
looking up the same information again on each startup:&lt;/p&gt;
&lt;div class="highlight highlight-source-emacs-lisp"&gt;&lt;pre&gt;(&lt;span class="pl-c1"&gt;eval-and-compile&lt;/span&gt;
  (&lt;span class="pl-k"&gt;defun&lt;/span&gt; &lt;span class="pl-e"&gt;ess-site-load-path&lt;/span&gt; ()
    (&lt;span class="pl-c1"&gt;shell-command&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;find ~ -path ess/lisp&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)))

(&lt;span class="pl-c1"&gt;use-package&lt;/span&gt; ess-site
  &lt;span class="pl-c1"&gt;:load-path&lt;/span&gt; (&lt;span class="pl-k"&gt;lambda&lt;/span&gt; () (&lt;span class="pl-k"&gt;list&lt;/span&gt; (ess-site-load-path)))
  &lt;span class="pl-c1"&gt;:commands&lt;/span&gt; R)&lt;/pre&gt;&lt;/div&gt;
&lt;h2&gt;&lt;a id="user-content-catching-errors-during-use-package-expansion" class="anchor" aria-hidden="true" href="#catching-errors-during-use-package-expansion"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Catching errors during use-package expansion&lt;/h2&gt;
&lt;p&gt;By default, if &lt;code&gt;use-package-expand-minimally&lt;/code&gt; is nil (the default),
use-package will attempts to catch and report errors that occur during
expansion of use-package declarations in your init file. Setting
&lt;code&gt;use-package-expand-minimally&lt;/code&gt; to t completely disables this checking.&lt;/p&gt;
&lt;p&gt;This behavior may be overridden locally using the &lt;code&gt;:catch&lt;/code&gt; keyword. If &lt;code&gt;t&lt;/code&gt; or
&lt;code&gt;nil&lt;/code&gt;, it enables or disables catching errors at load time. It can also be a
function taking two arguments: the keyword being processed at the time the
error was encountered, and the error object (as generated by
&lt;code&gt;condition-case&lt;/code&gt;). For example:&lt;/p&gt;
&lt;div class="highlight highlight-source-emacs-lisp"&gt;&lt;pre&gt;(&lt;span class="pl-c1"&gt;use-package&lt;/span&gt; example
  &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt;; Note that errors are never trapped in the preface, since doing so would&lt;/span&gt;
  &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt;; hide definitions from the byte-compiler.&lt;/span&gt;
  &lt;span class="pl-c1"&gt;:preface&lt;/span&gt; (&lt;span class="pl-c1"&gt;message&lt;/span&gt; &lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;span class="pl-s"&gt;I'm here at byte-compile and load time.&lt;/span&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;)
  &lt;span class="pl-c1"&gt;:init&lt;/span&gt; (&lt;span class="pl-c1"&gt;message&lt;/span&gt; &lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;span class="pl-s"&gt;I'm always here at startup&lt;/span&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;)
  &lt;span class="pl-c1"&gt;:config&lt;/span&gt;
  (&lt;span class="pl-c1"&gt;message&lt;/span&gt; &lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;span class="pl-s"&gt;I'm always here after the package is loaded&lt;/span&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;)
  (&lt;span class="pl-c1"&gt;error&lt;/span&gt; &lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;span class="pl-s"&gt;oops&lt;/span&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;)
  &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt;; Don't try to (require 'example), this is just an example!&lt;/span&gt;
  &lt;span class="pl-c1"&gt;:no-require&lt;/span&gt; &lt;span class="pl-c1"&gt;t&lt;/span&gt;
  &lt;span class="pl-c1"&gt;:catch&lt;/span&gt; (&lt;span class="pl-k"&gt;lambda&lt;/span&gt; (&lt;span class="pl-v"&gt;keyword&lt;/span&gt; &lt;span class="pl-v"&gt;err&lt;/span&gt;)
           (&lt;span class="pl-c1"&gt;message&lt;/span&gt; (&lt;span class="pl-c1"&gt;error-message-string&lt;/span&gt; err))))&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Evaluating the above form will print these messages:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;I’m here at byte-compile and load time.
I’m always here at startup
Configuring package example...
I’m always here after the package is loaded
oops
&lt;/code&gt;&lt;/pre&gt;
&lt;h2&gt;&lt;a id="user-content-diminishing-and-delighting-minor-modes" class="anchor" aria-hidden="true" href="#diminishing-and-delighting-minor-modes"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Diminishing and delighting minor modes&lt;/h2&gt;
&lt;p&gt;&lt;code&gt;use-package&lt;/code&gt; also provides built-in support for the diminish and
delight utilities -- if you have them installed. Their purpose is to
remove or change minor mode strings in your mode-line.&lt;/p&gt;
&lt;p&gt;&lt;a href="https://github.com/myrjola/diminish.el"&gt;diminish&lt;/a&gt; is invoked with
the &lt;code&gt;:diminish&lt;/code&gt; keyword, which is passed either a minor mode symbol, a
cons of the symbol and its replacement string, or just a replacement
string, in which case the minor mode symbol is guessed to be the
package name with "-mode" appended at the end:&lt;/p&gt;
&lt;div class="highlight highlight-source-emacs-lisp"&gt;&lt;pre&gt;(&lt;span class="pl-c1"&gt;use-package&lt;/span&gt; abbrev
  &lt;span class="pl-c1"&gt;:diminish&lt;/span&gt; abbrev-mode
  &lt;span class="pl-c1"&gt;:config&lt;/span&gt;
  (&lt;span class="pl-k"&gt;if&lt;/span&gt; (&lt;span class="pl-c1"&gt;file-exists-p&lt;/span&gt; abbrev-file-name)
      (&lt;span class="pl-c1"&gt;quietly-read-abbrev-file&lt;/span&gt;)))&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;a href="https://elpa.gnu.org/packages/delight.html" rel="nofollow"&gt;delight&lt;/a&gt; is invoked with
the &lt;code&gt;:delight&lt;/code&gt; keyword, which is passed a minor mode symbol, a
replacement string or
quoted
&lt;a href="https://www.gnu.org/software/emacs/manual/html_node/elisp/Mode-Line-Data.html" rel="nofollow"&gt;mode-line data&lt;/a&gt; (in
which case the minor mode symbol is guessed to be the package name
with "-mode" appended at the end), both of these, or several lists of
both. If no arguments are provided, the default mode name is hidden
completely.&lt;/p&gt;
&lt;div class="highlight highlight-source-emacs-lisp"&gt;&lt;pre&gt;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt;; Don't show anything for rainbow-mode.&lt;/span&gt;
(&lt;span class="pl-c1"&gt;use-package&lt;/span&gt; rainbow-mode
  &lt;span class="pl-c1"&gt;:delight&lt;/span&gt;)

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt;; Don't show anything for auto-revert-mode, which doesn't match&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt;; its package name.&lt;/span&gt;
(&lt;span class="pl-c1"&gt;use-package&lt;/span&gt; autorevert
  &lt;span class="pl-c1"&gt;:delight&lt;/span&gt; auto-revert-mode)

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt;; Remove the mode name for projectile-mode, but show the project name.&lt;/span&gt;
(&lt;span class="pl-c1"&gt;use-package&lt;/span&gt; projectile
  &lt;span class="pl-c1"&gt;:delight&lt;/span&gt; '(&lt;span class="pl-c1"&gt;:eval&lt;/span&gt; (&lt;span class="pl-c1"&gt;concat&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt; &lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; (projectile-project-name))))

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt;; Completely hide visual-line-mode and change auto-fill-mode to " AF".&lt;/span&gt;
(&lt;span class="pl-c1"&gt;use-package&lt;/span&gt; emacs
  &lt;span class="pl-c1"&gt;:delight&lt;/span&gt;
  (&lt;span class="pl-c1"&gt;auto-fill-function&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt; AF&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
  (&lt;span class="pl-c1"&gt;visual-line-mode&lt;/span&gt;))&lt;/pre&gt;&lt;/div&gt;
&lt;h2&gt;&lt;a id="user-content-package-installation" class="anchor" aria-hidden="true" href="#package-installation"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Package installation&lt;/h2&gt;
&lt;p&gt;You can use &lt;code&gt;use-package&lt;/code&gt; to load packages from ELPA with &lt;code&gt;package.el&lt;/code&gt;. This
is particularly useful if you share your &lt;code&gt;.emacs&lt;/code&gt; among several machines; the
relevant packages are downloaded automatically once declared in your &lt;code&gt;.emacs&lt;/code&gt;.
The &lt;code&gt;:ensure&lt;/code&gt; keyword causes the package(s) to be installed automatically if
not already present on your system:&lt;/p&gt;
&lt;div class="highlight highlight-source-emacs-lisp"&gt;&lt;pre&gt;(&lt;span class="pl-c1"&gt;use-package&lt;/span&gt; magit
  &lt;span class="pl-c1"&gt;:ensure&lt;/span&gt; &lt;span class="pl-c1"&gt;t&lt;/span&gt;)&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;If you need to install a different package from the one named by
&lt;code&gt;use-package&lt;/code&gt;, you can specify it like this:&lt;/p&gt;
&lt;div class="highlight highlight-source-emacs-lisp"&gt;&lt;pre&gt;(&lt;span class="pl-c1"&gt;use-package&lt;/span&gt; tex
  &lt;span class="pl-c1"&gt;:ensure&lt;/span&gt; auctex)&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Enable &lt;code&gt;use-package-always-ensure&lt;/code&gt; if you wish this behavior to be global
for all packages:&lt;/p&gt;
&lt;div class="highlight highlight-source-emacs-lisp"&gt;&lt;pre&gt;(&lt;span class="pl-c1"&gt;require&lt;/span&gt; &lt;span class="pl-c1"&gt;'use-package-ensure&lt;/span&gt;)
(&lt;span class="pl-k"&gt;setq&lt;/span&gt; use-package-always-ensure &lt;span class="pl-c1"&gt;t&lt;/span&gt;)&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;strong&gt;NOTE&lt;/strong&gt;: &lt;code&gt;:ensure&lt;/code&gt; will install a package if it is not already installed, but
it does not keep it up-to-date. If you want to keep your packages updated
automatically, one option is to use
&lt;a href="https://github.com/rranelli/auto-package-update.el"&gt;auto-package-update&lt;/a&gt;,
like&lt;/p&gt;
&lt;div class="highlight highlight-source-emacs-lisp"&gt;&lt;pre&gt;(&lt;span class="pl-c1"&gt;use-package&lt;/span&gt; auto-package-update
  &lt;span class="pl-c1"&gt;:config&lt;/span&gt;
  (&lt;span class="pl-k"&gt;setq&lt;/span&gt; auto-package-update-delete-old-versions &lt;span class="pl-c1"&gt;t&lt;/span&gt;)
  (&lt;span class="pl-k"&gt;setq&lt;/span&gt; auto-package-update-hide-results &lt;span class="pl-c1"&gt;t&lt;/span&gt;)
  (auto-package-update-maybe))&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Lastly, when running on Emacs 24.4 or later, use-package can pin a package to
a specific archive, allowing you to mix and match packages from different
archives.  The primary use-case for this is preferring packages from the
&lt;code&gt;melpa-stable&lt;/code&gt; and &lt;code&gt;gnu&lt;/code&gt; archives, but using specific packages from &lt;code&gt;melpa&lt;/code&gt;
when you need to track newer versions than what is available in the &lt;code&gt;stable&lt;/code&gt;
archives is also a valid use-case.&lt;/p&gt;
&lt;p&gt;By default &lt;code&gt;package.el&lt;/code&gt; prefers &lt;code&gt;melpa&lt;/code&gt; over &lt;code&gt;melpa-stable&lt;/code&gt; due to the
versioning &lt;code&gt;(&amp;gt; evil-20141208.623 evil-1.0.9)&lt;/code&gt;, so even if you are tracking
only a single package from &lt;code&gt;melpa&lt;/code&gt;, you will need to tag all the non-&lt;code&gt;melpa&lt;/code&gt;
packages with the appropriate archive. If this really annoys you, then you can
set &lt;code&gt;use-package-always-pin&lt;/code&gt; to set a default.&lt;/p&gt;
&lt;p&gt;If you want to manually keep a package updated and ignore upstream updates,
you can pin it to &lt;code&gt;manual&lt;/code&gt;, which as long as there is no repository by that
name, will Just Work(tm).&lt;/p&gt;
&lt;p&gt;&lt;code&gt;use-package&lt;/code&gt; throws an error if you try to pin a package to an archive that
has not been configured using &lt;code&gt;package-archives&lt;/code&gt; (apart from the magic
&lt;code&gt;manual&lt;/code&gt; archive mentioned above):&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;Archive 'foo' requested for package 'bar' is not available.
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Example:&lt;/p&gt;
&lt;div class="highlight highlight-source-emacs-lisp"&gt;&lt;pre&gt;(&lt;span class="pl-c1"&gt;use-package&lt;/span&gt; company
  &lt;span class="pl-c1"&gt;:ensure&lt;/span&gt; &lt;span class="pl-c1"&gt;t&lt;/span&gt;
  &lt;span class="pl-c1"&gt;:pin&lt;/span&gt; &lt;span class="pl-c1"&gt;melpa-stable&lt;/span&gt;)

(&lt;span class="pl-c1"&gt;use-package&lt;/span&gt; evil
  &lt;span class="pl-c1"&gt;:ensure&lt;/span&gt; &lt;span class="pl-c1"&gt;t&lt;/span&gt;)
  &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt;; no :pin needed, as package.el will choose the version in melpa&lt;/span&gt;

(&lt;span class="pl-c1"&gt;use-package&lt;/span&gt; adaptive-wrap
  &lt;span class="pl-c1"&gt;:ensure&lt;/span&gt; &lt;span class="pl-c1"&gt;t&lt;/span&gt;
  &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt;; as this package is available only in the gnu archive, this is&lt;/span&gt;
  &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt;; technically not needed, but it helps to highlight where it&lt;/span&gt;
  &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt;; comes from&lt;/span&gt;
  &lt;span class="pl-c1"&gt;:pin&lt;/span&gt; &lt;span class="pl-c1"&gt;gnu&lt;/span&gt;)

(&lt;span class="pl-c1"&gt;use-package&lt;/span&gt; &lt;span class="pl-c1"&gt;org&lt;/span&gt;
  &lt;span class="pl-c1"&gt;:ensure&lt;/span&gt; &lt;span class="pl-c1"&gt;t&lt;/span&gt;
  &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt;; ignore org-mode from upstream and use a manually installed version&lt;/span&gt;
  &lt;span class="pl-c1"&gt;:pin&lt;/span&gt; manual)&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;strong&gt;NOTE&lt;/strong&gt;: the &lt;code&gt;:pin&lt;/code&gt; argument has no effect on emacs versions &amp;lt; 24.4.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-usage-with-other-package-managers" class="anchor" aria-hidden="true" href="#usage-with-other-package-managers"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Usage with other package managers&lt;/h3&gt;
&lt;p&gt;By overriding &lt;code&gt;use-package-ensure-function&lt;/code&gt; and/or
&lt;code&gt;use-package-pre-ensure-function&lt;/code&gt;, other package managers can override
&lt;code&gt;:ensure&lt;/code&gt; to use them instead of &lt;code&gt;package.el&lt;/code&gt;. At the present time,
the only package manager that does this
is &lt;a href="https://github.com/raxod502/straight.el"&gt;&lt;code&gt;straight.el&lt;/code&gt;&lt;/a&gt;.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-gathering-statistics" class="anchor" aria-hidden="true" href="#gathering-statistics"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Gathering Statistics&lt;/h2&gt;
&lt;p&gt;If you'd like to see how many packages you've loaded, what stage of
initialization they've reached, and how much aggregate time they've
spent (roughly), you can enable &lt;code&gt;use-package-compute-statistics&lt;/code&gt; after
loading &lt;code&gt;use-package&lt;/code&gt; but before any &lt;code&gt;use-package&lt;/code&gt; forms, and then run
the command &lt;code&gt;M-x use-package-report&lt;/code&gt; to see the results. The buffer
displayed is a tabulated list. You can use &lt;code&gt;S&lt;/code&gt; in a column to sort the
rows based on it.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-keyword-extensions" class="anchor" aria-hidden="true" href="#keyword-extensions"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Keyword Extensions&lt;/h2&gt;
&lt;p&gt;Starting with version 2.0, &lt;code&gt;use-package&lt;/code&gt; is based on an extensible
framework that makes it easy for package authors to add new keywords,
or modify the behavior of existing keywords.&lt;/p&gt;
&lt;p&gt;Some keyword extensions are now included in the &lt;code&gt;use-package&lt;/code&gt;
distribution and can be optionally installed.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-use-package-ensure-system-package" class="anchor" aria-hidden="true" href="#use-package-ensure-system-package"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;code&gt;(use-package-ensure-system-package)&lt;/code&gt;&lt;/h3&gt;
&lt;p&gt;The &lt;code&gt;:ensure-system-package&lt;/code&gt; keyword allows you to ensure system
binaries exist alongside your package declarations.&lt;/p&gt;
&lt;p&gt;First, you will want to make sure &lt;code&gt;exec-path&lt;/code&gt; is cognisant of all
binary package names that you would like to ensure are
installed. &lt;a href="https://github.com/purcell/exec-path-from-shell"&gt;&lt;code&gt;exec-path-from-shell&lt;/code&gt;&lt;/a&gt;
is often a good way to do this.&lt;/p&gt;
&lt;p&gt;To enable the extension after you've loaded &lt;code&gt;use-package&lt;/code&gt;:&lt;/p&gt;
&lt;div class="highlight highlight-source-emacs-lisp"&gt;&lt;pre&gt;(&lt;span class="pl-c1"&gt;use-package&lt;/span&gt; use-package-ensure-system-package
  &lt;span class="pl-c1"&gt;:ensure&lt;/span&gt; &lt;span class="pl-c1"&gt;t&lt;/span&gt;)&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Here’s an example of usage:&lt;/p&gt;
&lt;div class="highlight highlight-source-emacs-lisp"&gt;&lt;pre&gt;(&lt;span class="pl-c1"&gt;use-package&lt;/span&gt; rg
  &lt;span class="pl-c1"&gt;:ensure-system-package&lt;/span&gt; rg)&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;This will expect a global binary package to exist called &lt;code&gt;rg&lt;/code&gt;. If it
does not, it will use your system package manager (using the package
&lt;a href="https://gitlab.com/jabranham/system-packages" rel="nofollow"&gt;&lt;code&gt;system-packages&lt;/code&gt;&lt;/a&gt;) to
attempt an install of a binary by the same name asynchronously. For
example, for most &lt;code&gt;macOS&lt;/code&gt; users this would call: &lt;code&gt;brew install rg&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;If the package is named differently than the binary, you can use a
cons in the form of  &lt;code&gt;(binary . package-name)&lt;/code&gt;, i.e.:&lt;/p&gt;
&lt;div class="highlight highlight-source-emacs-lisp"&gt;&lt;pre&gt;(&lt;span class="pl-c1"&gt;use-package&lt;/span&gt; rg
  &lt;span class="pl-c1"&gt;:ensure-system-package&lt;/span&gt;
  (rg &lt;span class="pl-k"&gt;.&lt;/span&gt; ripgrep))&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;In the previous &lt;code&gt;macOS&lt;/code&gt; example, this would call: &lt;code&gt;brew install ripgrep&lt;/code&gt; if &lt;code&gt;rg&lt;/code&gt; was not found.&lt;/p&gt;
&lt;p&gt;What if you want to customize the install command further?&lt;/p&gt;
&lt;div class="highlight highlight-source-emacs-lisp"&gt;&lt;pre&gt;(&lt;span class="pl-c1"&gt;use-package&lt;/span&gt; tern
  &lt;span class="pl-c1"&gt;:ensure-system-package&lt;/span&gt; (tern &lt;span class="pl-k"&gt;.&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;npm i -g tern&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;))&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;code&gt;:ensure-system-package&lt;/code&gt; can also take a cons where its &lt;code&gt;cdr&lt;/code&gt; is a
string that will get called by &lt;code&gt;(async-shell-command)&lt;/code&gt; to install if
it isn’t found.&lt;/p&gt;
&lt;p&gt;You may also pass in a list of cons-es:&lt;/p&gt;
&lt;div class="highlight highlight-source-emacs-lisp"&gt;&lt;pre&gt;(&lt;span class="pl-c1"&gt;use-package&lt;/span&gt; ruby-mode
  &lt;span class="pl-c1"&gt;:ensure-system-package&lt;/span&gt;
  ((rubocop     &lt;span class="pl-k"&gt;.&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;gem install rubocop&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
   (ruby-lint   &lt;span class="pl-k"&gt;.&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;gem install ruby-lint&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
   (ripper-tags &lt;span class="pl-k"&gt;.&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;gem install ripper-tags&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
   (pry         &lt;span class="pl-k"&gt;.&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;gem install pry&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)))&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Finally, in case the package dependency does not provide a global
executable, you can ensure packages exist by checking the presence of
a file path by providing a string like so:&lt;/p&gt;
&lt;div class="highlight highlight-source-emacs-lisp"&gt;&lt;pre&gt;(&lt;span class="pl-c1"&gt;use-package&lt;/span&gt; dash-at-point
  &lt;span class="pl-c1"&gt;:if&lt;/span&gt; (&lt;span class="pl-k"&gt;eq&lt;/span&gt; system-type &lt;span class="pl-c1"&gt;'darwin&lt;/span&gt;)
  &lt;span class="pl-c1"&gt;:ensure-system-package&lt;/span&gt;
  (&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;/Applications/Dash.app&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; &lt;span class="pl-k"&gt;.&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;brew cask install dash&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;))&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;code&gt;:ensure-system-package&lt;/code&gt; will use &lt;code&gt;system-packages-install&lt;/code&gt; to install
system packages, except where a custom command has been specified, in
which case it will be executed verbatim by &lt;code&gt;async-shell-command&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;Configuration variables &lt;code&gt;system-packages-package-manager&lt;/code&gt; and
&lt;code&gt;system-packages-use-sudo&lt;/code&gt; will be honoured, but not for custom
commands. Custom commands should include the call to sudo in the
command if needed.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-use-package-chords" class="anchor" aria-hidden="true" href="#use-package-chords"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;code&gt;(use-package-chords)&lt;/code&gt;&lt;/h3&gt;
&lt;p&gt;The &lt;code&gt;:chords&lt;/code&gt; keyword allows you to define
&lt;a href="http://www.emacswiki.org/emacs/key-chord.el" rel="nofollow"&gt;&lt;code&gt;key-chord&lt;/code&gt;&lt;/a&gt; bindings
for &lt;code&gt;use-package&lt;/code&gt; declarations in the same manner as the &lt;code&gt;:bind&lt;/code&gt;
keyword.&lt;/p&gt;
&lt;p&gt;To enable the extension:&lt;/p&gt;
&lt;div class="highlight highlight-source-emacs-lisp"&gt;&lt;pre&gt;(&lt;span class="pl-c1"&gt;use-package&lt;/span&gt; use-package-chords
  &lt;span class="pl-c1"&gt;:ensure&lt;/span&gt; &lt;span class="pl-c1"&gt;t&lt;/span&gt;
  &lt;span class="pl-c1"&gt;:config&lt;/span&gt; (key-chord-mode &lt;span class="pl-c1"&gt;1&lt;/span&gt;))&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Then you can define your chord bindings in the same manner as &lt;code&gt;:bind&lt;/code&gt; using a cons or a list of conses:&lt;/p&gt;
&lt;div class="highlight highlight-source-emacs-lisp"&gt;&lt;pre&gt;(&lt;span class="pl-c1"&gt;use-package&lt;/span&gt; ace-jump-mode
  &lt;span class="pl-c1"&gt;:chords&lt;/span&gt; ((&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;jj&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; &lt;span class="pl-k"&gt;.&lt;/span&gt; ace-jump-char-mode)
           (&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;jk&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; &lt;span class="pl-k"&gt;.&lt;/span&gt; ace-jump-word-mode)
           (&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;jl&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; &lt;span class="pl-k"&gt;.&lt;/span&gt; ace-jump-line-mode)))&lt;/pre&gt;&lt;/div&gt;
&lt;h3&gt;&lt;a id="user-content-how-to-create-an-extension" class="anchor" aria-hidden="true" href="#how-to-create-an-extension"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;How to create an extension&lt;/h3&gt;
&lt;h4&gt;&lt;a id="user-content-first-step-add-the-keyword" class="anchor" aria-hidden="true" href="#first-step-add-the-keyword"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;First step: Add the keyword&lt;/h4&gt;
&lt;p&gt;The first step is to add your keyword at the right place in
&lt;code&gt;use-package-keywords&lt;/code&gt;.  This list determines the order in which things will
happen in the expanded code.  You should never change this order, but it gives
you a framework within which to decide when your keyword should fire.&lt;/p&gt;
&lt;h4&gt;&lt;a id="user-content-second-step-create-a-normalizer" class="anchor" aria-hidden="true" href="#second-step-create-a-normalizer"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Second step: Create a normalizer&lt;/h4&gt;
&lt;p&gt;Define a normalizer for your keyword by defining a function named after the
keyword, for example:&lt;/p&gt;
&lt;div class="highlight highlight-source-emacs-lisp"&gt;&lt;pre&gt;(&lt;span class="pl-k"&gt;defun&lt;/span&gt; &lt;span class="pl-e"&gt;use-package-normalize/:pin&lt;/span&gt; (&lt;span class="pl-v"&gt;name-symbol&lt;/span&gt; &lt;span class="pl-v"&gt;keyword&lt;/span&gt; &lt;span class="pl-v"&gt;args&lt;/span&gt;)
  (use-package-only-one (&lt;span class="pl-c1"&gt;symbol-name&lt;/span&gt; keyword) args
    (&lt;span class="pl-k"&gt;lambda&lt;/span&gt; (&lt;span class="pl-v"&gt;label&lt;/span&gt; &lt;span class="pl-v"&gt;arg&lt;/span&gt;)
      (&lt;span class="pl-k"&gt;cond&lt;/span&gt;
       ((&lt;span class="pl-c1"&gt;stringp&lt;/span&gt; arg) arg)
       ((&lt;span class="pl-c1"&gt;symbolp&lt;/span&gt; arg) (&lt;span class="pl-c1"&gt;symbol-name&lt;/span&gt; arg))
       (&lt;span class="pl-c1"&gt;t&lt;/span&gt;
        (use-package-error
         &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;:pin wants an archive name (a string)&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;))))))&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;The job of the normalizer is take a list of arguments (possibly nil), and turn
it into the single argument (which could still be a list) that should appear
in the final property list used by &lt;code&gt;use-package&lt;/code&gt;.&lt;/p&gt;
&lt;h4&gt;&lt;a id="user-content-third-step-create-a-handler" class="anchor" aria-hidden="true" href="#third-step-create-a-handler"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Third step: Create a handler&lt;/h4&gt;
&lt;p&gt;Once you have a normalizer, you must create a handler for the keyword:&lt;/p&gt;
&lt;div class="highlight highlight-source-emacs-lisp"&gt;&lt;pre&gt;(&lt;span class="pl-k"&gt;defun&lt;/span&gt; &lt;span class="pl-e"&gt;use-package-handler/:pin&lt;/span&gt; (&lt;span class="pl-v"&gt;name-symbol&lt;/span&gt; &lt;span class="pl-v"&gt;keyword&lt;/span&gt; &lt;span class="pl-v"&gt;archive-name&lt;/span&gt; &lt;span class="pl-v"&gt;rest&lt;/span&gt; &lt;span class="pl-v"&gt;state&lt;/span&gt;)
  (&lt;span class="pl-k"&gt;let&lt;/span&gt; ((body (use-package-process-keywords name-symbol rest state)))
    &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt;; This happens at macro expansion time, not when the expanded code is&lt;/span&gt;
    &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt;; compiled or evaluated.&lt;/span&gt;
    (&lt;span class="pl-k"&gt;if&lt;/span&gt; (&lt;span class="pl-k"&gt;null&lt;/span&gt; archive-name)
        body
      (use-package-pin-package name-symbol archive-name)
      (use-package-concat
       body
       `((&lt;span class="pl-k"&gt;push&lt;/span&gt; '(&lt;span class="pl-c1"&gt;&lt;span class="pl-mi1"&gt;,&lt;/span&gt;name-symbol&lt;/span&gt; &lt;span class="pl-k"&gt;.&lt;/span&gt; &lt;span class="pl-c1"&gt;&lt;span class="pl-mi1"&gt;,&lt;/span&gt;archive-name&lt;/span&gt;)
               package-pinned-packages))))))&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Handlers can affect the handling of keywords in two ways.  First, it can
modify the &lt;code&gt;state&lt;/code&gt; plist before recursively processing the remaining keywords,
to influence keywords that pay attention to the state (one example is the
state keyword &lt;code&gt;:deferred&lt;/code&gt;, not to be confused with the &lt;code&gt;use-package&lt;/code&gt; keyword
&lt;code&gt;:defer&lt;/code&gt;).  Then, once the remaining keywords have been handled and their
resulting forms returned, the handler may manipulate, extend, or just ignore
those forms.&lt;/p&gt;
&lt;p&gt;The task of each handler is to return a &lt;em&gt;list of forms&lt;/em&gt; representing code to
be inserted.  It does not need to be a &lt;code&gt;progn&lt;/code&gt; list, as this is handled
automatically in other places.  Thus it is very common to see the idiom of
using &lt;code&gt;use-package-concat&lt;/code&gt; to add new functionality before or after a code
body, so that only the minimum code necessary is emitted as the result of a
&lt;code&gt;use-package&lt;/code&gt; expansion.&lt;/p&gt;
&lt;h4&gt;&lt;a id="user-content-fourth-step-test-it-out" class="anchor" aria-hidden="true" href="#fourth-step-test-it-out"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Fourth step: Test it out&lt;/h4&gt;
&lt;p&gt;After the keyword has been inserted into &lt;code&gt;use-package-keywords&lt;/code&gt;, and a
normalizer and a handler defined, you can now test it by seeing how usages of
the keyword will expand.  For this, use &lt;code&gt;M-x pp-macroexpand-last-sexp&lt;/code&gt; with
the cursor set immediately after the &lt;code&gt;(use-package ...)&lt;/code&gt; expression.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-some-timing-results" class="anchor" aria-hidden="true" href="#some-timing-results"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Some timing results&lt;/h2&gt;
&lt;p&gt;On my Retina iMac, the "Mac port" variant of Emacs 24.4 loads in 0.57s, with
around 218 packages configured (nearly all of them lazy-loaded).  However, I
experience no loss of functionality, just a bit of latency when I'm first
starting to use Emacs (due to the autoloading).  Since I also use idle-loading
for many packages, perceived latency is typically reduced overall.&lt;/p&gt;
&lt;p&gt;On Linux, the same configuration loads in 0.32s.&lt;/p&gt;
&lt;p&gt;If I don't use Emacs graphically, I can test the absolute minimum times.  This
is done by running:&lt;/p&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt;&lt;span class="pl-k"&gt;time&lt;/span&gt; emacs -l init.elc -batch --eval &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;(message "Hello, world!")&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;On the Mac I see an average of 0.36s for the same configuration, and on Linux
0.26s.&lt;/p&gt;
&lt;h1&gt;&lt;a id="user-content-upgrading-to-2x" class="anchor" aria-hidden="true" href="#upgrading-to-2x"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Upgrading to 2.x&lt;/h1&gt;
&lt;h2&gt;&lt;a id="user-content-semantics-of-init-is-now-consistent" class="anchor" aria-hidden="true" href="#semantics-of-init-is-now-consistent"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Semantics of :init is now consistent&lt;/h2&gt;
&lt;p&gt;The meaning of &lt;code&gt;:init&lt;/code&gt; has been changed: It now &lt;em&gt;always&lt;/em&gt; happens before
package load, whether &lt;code&gt;:config&lt;/code&gt; has been deferred or not.  This means that
some uses of &lt;code&gt;:init&lt;/code&gt; in your configuration may need to be changed to &lt;code&gt;:config&lt;/code&gt;
(in the non-deferred case).  For the deferred case, the behavior is unchanged
from before.&lt;/p&gt;
&lt;p&gt;Also, because &lt;code&gt;:init&lt;/code&gt; and &lt;code&gt;:config&lt;/code&gt; now mean "before" and "after", the &lt;code&gt;:pre-&lt;/code&gt;
and &lt;code&gt;:post-&lt;/code&gt; keywords are gone, as they should no longer be necessary.&lt;/p&gt;
&lt;p&gt;Lastly, an effort has been made to make your Emacs start even in the presence
of use-package configuration failures.  So after this change, be sure to check
your &lt;code&gt;*Messages*&lt;/code&gt; buffer.  Most likely, you will have several instances where
you are using &lt;code&gt;:init&lt;/code&gt;, but should be using &lt;code&gt;:config&lt;/code&gt; (this was the case for me
in a number of places).&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-idle-has-been-removed" class="anchor" aria-hidden="true" href="#idle-has-been-removed"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;:idle has been removed&lt;/h2&gt;
&lt;p&gt;I am removing this feature for now because it can result in a nasty
inconsistency.  Consider the following definition:&lt;/p&gt;
&lt;div class="highlight highlight-source-emacs-lisp"&gt;&lt;pre&gt;(&lt;span class="pl-c1"&gt;use-package&lt;/span&gt; vkill
  &lt;span class="pl-c1"&gt;:commands&lt;/span&gt; vkill
  &lt;span class="pl-c1"&gt;:idle&lt;/span&gt; (some-important-configuration-here)
  &lt;span class="pl-c1"&gt;:bind&lt;/span&gt; (&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;C-x L&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; &lt;span class="pl-k"&gt;.&lt;/span&gt; vkill-and-helm-occur)
  &lt;span class="pl-c1"&gt;:init&lt;/span&gt;
  (&lt;span class="pl-k"&gt;defun&lt;/span&gt; &lt;span class="pl-e"&gt;vkill-and-helm-occur&lt;/span&gt; ()
    (&lt;span class="pl-k"&gt;interactive&lt;/span&gt;)
    (vkill)
    (&lt;span class="pl-c1"&gt;call-interactively&lt;/span&gt; &lt;span class="pl-c1"&gt;#&lt;span class="pl-c1"&gt;'helm-occur&lt;/span&gt;&lt;/span&gt;))

  &lt;span class="pl-c1"&gt;:config&lt;/span&gt;
  (&lt;span class="pl-k"&gt;setq&lt;/span&gt; vkill-show-all-processes &lt;span class="pl-c1"&gt;t&lt;/span&gt;))&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;If I load my Emacs and wait until the idle timer fires, then this is the
sequence of events:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;:init :idle &amp;lt;load&amp;gt; :config
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;But if I load Emacs and immediately type C-x L without waiting for the idle
timer to fire, this is the sequence of events:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;:init &amp;lt;load&amp;gt; :config :idle
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;It's possible that the user could use &lt;code&gt;featurep&lt;/code&gt; in their idle to test for
this case, but that's a subtlety I'd rather avoid.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-defer-now-accepts-an-optional-numeric-argument" class="anchor" aria-hidden="true" href="#defer-now-accepts-an-optional-numeric-argument"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;:defer now accepts an optional numeric argument&lt;/h2&gt;
&lt;p&gt;&lt;code&gt;:defer [N]&lt;/code&gt; causes the package to be loaded -- if it has not already been --
after &lt;code&gt;N&lt;/code&gt; seconds of idle time.&lt;/p&gt;
&lt;div class="highlight highlight-source-emacs-lisp"&gt;&lt;pre&gt;(&lt;span class="pl-c1"&gt;use-package&lt;/span&gt; back-button
  &lt;span class="pl-c1"&gt;:commands&lt;/span&gt; (back-button-mode)
  &lt;span class="pl-c1"&gt;:defer&lt;/span&gt; &lt;span class="pl-c1"&gt;2&lt;/span&gt;
  &lt;span class="pl-c1"&gt;:init&lt;/span&gt;
  (&lt;span class="pl-k"&gt;setq&lt;/span&gt; back-button-show-toolbar-buttons &lt;span class="pl-c1"&gt;nil&lt;/span&gt;)
  &lt;span class="pl-c1"&gt;:config&lt;/span&gt;
  (back-button-mode &lt;span class="pl-c1"&gt;1&lt;/span&gt;))&lt;/pre&gt;&lt;/div&gt;
&lt;h2&gt;&lt;a id="user-content-add-preface-occurring-before-everything-except-disabled" class="anchor" aria-hidden="true" href="#add-preface-occurring-before-everything-except-disabled"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Add :preface, occurring before everything except :disabled&lt;/h2&gt;
&lt;p&gt;&lt;code&gt;:preface&lt;/code&gt; can be used to establish function and variable definitions that
will 1) make the byte-compiler happy (it won't complain about functions whose
definitions are unknown because you have them within a guard block), and 2)
allow you to define code that can be used in an &lt;code&gt;:if&lt;/code&gt; test.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;NOTE&lt;/strong&gt;: whatever is specified within &lt;code&gt;:preface&lt;/code&gt; is evaluated both at load
time and at byte-compilation time, in order to ensure that definitions are
seen by both the Lisp evaluator and the byte-compiler, so you should avoid
having any side-effects in your preface, and restrict it merely to symbol
declarations and definitions.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-add-functions-for-declaring-functions-to-the-byte-compiler" class="anchor" aria-hidden="true" href="#add-functions-for-declaring-functions-to-the-byte-compiler"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Add :functions, for declaring functions to the byte-compiler&lt;/h2&gt;
&lt;p&gt;What &lt;code&gt;:defines&lt;/code&gt; does for variables, &lt;code&gt;:functions&lt;/code&gt; does for functions.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-use-packageel-is-no-longer-needed-at-runtime" class="anchor" aria-hidden="true" href="#use-packageel-is-no-longer-needed-at-runtime"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;use-package.el is no longer needed at runtime&lt;/h2&gt;
&lt;p&gt;This means you should put the following at the top of your Emacs, to further
reduce load time:&lt;/p&gt;
&lt;div class="highlight highlight-source-emacs-lisp"&gt;&lt;pre&gt;(&lt;span class="pl-c1"&gt;eval-when-compile&lt;/span&gt;
  (&lt;span class="pl-c1"&gt;require&lt;/span&gt; &lt;span class="pl-c1"&gt;'use-package&lt;/span&gt;))
(&lt;span class="pl-c1"&gt;require&lt;/span&gt; &lt;span class="pl-c1"&gt;'diminish&lt;/span&gt;)                &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt;; if you use :diminish&lt;/span&gt;
(&lt;span class="pl-c1"&gt;require&lt;/span&gt; &lt;span class="pl-c1"&gt;'bind-key&lt;/span&gt;)                &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt;; if you use any :bind variant&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;/article&gt;&lt;/div&gt;</description><author>jwiegley</author><guid isPermaLink="false">https://github.com/jwiegley/use-package</guid><pubDate>Tue, 11 Feb 2020 00:12:00 GMT</pubDate></item><item><title>magit/forge #13 in Emacs Lisp, This month</title><link>https://github.com/magit/forge</link><description>&lt;p&gt;&lt;i&gt;Work with Git forges from the comfort of Magit&lt;/i&gt;&lt;/p&gt;&lt;div id="readme" class="md" data-path="README.md"&gt;&lt;article class="markdown-body entry-content p-5" itemprop="text"&gt;&lt;h1&gt;&lt;a id="user-content-work-with-git-forges-from-the-comfort-of-magit" class="anchor" aria-hidden="true" href="#work-with-git-forges-from-the-comfort-of-magit"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Work with Git forges from the comfort of Magit&lt;/h1&gt;
&lt;p&gt;Work with Git forges, such as Github and Gitlab, from the comfort
of Magit and the rest of Emacs.&lt;/p&gt;
&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="https://camo.githubusercontent.com/9423ad7d207ae729570e8f7948c0fe16a563f962/687474703a2f2f726561646d652e656d6163736169722e6d652f666f7267652d7374617475732e706e67"&gt;&lt;img src="https://camo.githubusercontent.com/9423ad7d207ae729570e8f7948c0fe16a563f962/687474703a2f2f726561646d652e656d6163736169722e6d652f666f7267652d7374617475732e706e67" alt="screenshot-status" data-canonical-src="http://readme.emacsair.me/forge-status.png" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="https://camo.githubusercontent.com/9fe9b5156a8608ef05aa23341295743309035c5c/687474703a2f2f726561646d652e656d6163736169722e6d652f666f7267652d746f7069632e706e67"&gt;&lt;img src="https://camo.githubusercontent.com/9fe9b5156a8608ef05aa23341295743309035c5c/687474703a2f2f726561646d652e656d6163736169722e6d652f666f7267652d746f7069632e706e67" alt="screenshot-topic" data-canonical-src="http://readme.emacsair.me/forge-topic.png" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Please see the &lt;a href="https://magit.vc/manual/forge" rel="nofollow"&gt;manual&lt;/a&gt; and the &lt;a href="https://emacsair.me/2018/12/19/forge-0.1" rel="nofollow"&gt;announcement&lt;/a&gt; for more information.&lt;/p&gt;
&lt;/article&gt;&lt;/div&gt;</description><author>magit</author><guid isPermaLink="false">https://github.com/magit/forge</guid><pubDate>Tue, 11 Feb 2020 00:13:00 GMT</pubDate></item><item><title>melpa/melpa #14 in Emacs Lisp, This month</title><link>https://github.com/melpa/melpa</link><description>&lt;p&gt;&lt;i&gt;Recipes and build machinery for the biggest Emacs package repo&lt;/i&gt;&lt;/p&gt;&lt;div id="readme" class="md" data-path="README.md"&gt;&lt;article class="markdown-body entry-content p-5" itemprop="text"&gt;&lt;h1&gt;&lt;a id="user-content-melpa" class="anchor" aria-hidden="true" href="#melpa"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;MELPA&lt;/h1&gt;
&lt;p&gt;&lt;a href="https://travis-ci.org/melpa/melpa" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/f70a965c98a8de20ac05d341d955a21773f6df6c/68747470733a2f2f7472617669732d63692e6f72672f6d656c70612f6d656c70612e706e673f6272616e63683d6d6173746572" alt="Build Status" data-canonical-src="https://travis-ci.org/melpa/melpa.png?branch=master" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;MELPA is a growing collection of &lt;code&gt;package.el&lt;/code&gt;-compatible Emacs Lisp
packages built automatically on our server from the upstream source
code using simple recipes. (Think of it as a server-side version of
&lt;a href="https://github.com/dimitri/el-get"&gt;el-get&lt;/a&gt;, or even
&lt;a href="https://github.com/Homebrew/homebrew"&gt;Homebrew&lt;/a&gt;.)&lt;/p&gt;
&lt;p&gt;Packages are updated at intervals throughout the day.&lt;/p&gt;
&lt;p&gt;To browse available packages, check out the
&lt;a href="https://melpa.org/" rel="nofollow"&gt;archive index page&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Adding packages is as simple as submitting a new recipe as a pull request;
read on for details.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-table-of-contents" class="anchor" aria-hidden="true" href="#table-of-contents"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Table of Contents&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="#usage"&gt;Usage&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#contributing"&gt;Contributing&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#recipe-format"&gt;Recipe Format&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#build-scripts"&gt;Build Scripts&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#api"&gt;API&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#mirrors"&gt;Mirrors&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#about"&gt;About&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-usage" class="anchor" aria-hidden="true" href="#usage"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Usage&lt;/h2&gt;
&lt;p&gt;To use the MELPA repository, you'll need an Emacs with
&lt;code&gt;package.el&lt;/code&gt;, ie. Emacs 24.1 or greater.&lt;/p&gt;
&lt;p&gt;Enable installation of packages from MELPA by adding an entry to
&lt;code&gt;package-archives&lt;/code&gt; after &lt;code&gt;(require 'package)&lt;/code&gt; and before the call to
&lt;code&gt;package-initialize&lt;/code&gt; in your &lt;code&gt;init.el&lt;/code&gt; or &lt;code&gt;.emacs&lt;/code&gt; file:&lt;/p&gt;
&lt;div class="highlight highlight-source-emacs-lisp"&gt;&lt;pre&gt;(&lt;span class="pl-c1"&gt;require&lt;/span&gt; &lt;span class="pl-c1"&gt;'package&lt;/span&gt;)
(&lt;span class="pl-k"&gt;let*&lt;/span&gt; ((no-ssl (&lt;span class="pl-k"&gt;and&lt;/span&gt; (&lt;span class="pl-c1"&gt;memq&lt;/span&gt; system-type '(windows-nt ms-dos))
                    (&lt;span class="pl-k"&gt;not&lt;/span&gt; (&lt;span class="pl-c1"&gt;gnutls-available-p&lt;/span&gt;))))
       (proto (&lt;span class="pl-k"&gt;if&lt;/span&gt; no-ssl &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;http&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;https&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)))
  (&lt;span class="pl-k"&gt;when&lt;/span&gt; no-ssl (&lt;span class="pl-c1"&gt;warn&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;span class="pl-cce"&gt;\&lt;/span&gt;&lt;/span&gt;
&lt;span class="pl-s"&gt;Your version of Emacs does not support SSL connections,&lt;/span&gt;
&lt;span class="pl-s"&gt;which is unsafe because it allows man-in-the-middle attacks.&lt;/span&gt;
&lt;span class="pl-s"&gt;There are two things you can do about this warning:&lt;/span&gt;
&lt;span class="pl-s"&gt;1. Install an Emacs version that does support SSL and be safe.&lt;/span&gt;
&lt;span class="pl-s"&gt;2. Remove this warning from your init file so you won't see it again.&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;))
  (&lt;span class="pl-c1"&gt;add-to-list&lt;/span&gt; &lt;span class="pl-c1"&gt;'package-archives&lt;/span&gt; (&lt;span class="pl-k"&gt;cons&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;melpa&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; (&lt;span class="pl-c1"&gt;concat&lt;/span&gt; proto &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;://melpa.org/packages/&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)) &lt;span class="pl-c1"&gt;t&lt;/span&gt;)
  &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt;; Comment/uncomment this line to enable MELPA Stable if desired.  See `package-archive-priorities`&lt;/span&gt;
  &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt;; and `package-pinned-packages`. Most users will not need or want to do this.&lt;/span&gt;
  &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt;;(add-to-list 'package-archives (cons "melpa-stable" (concat proto "://stable.melpa.org/packages/")) t)&lt;/span&gt;
  )
(&lt;span class="pl-c1"&gt;package-initialize&lt;/span&gt;)&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Then just use &lt;code&gt;M-x package-list-packages&lt;/code&gt; to browse and install
packages from MELPA and elsewhere.&lt;/p&gt;
&lt;p&gt;Note that you'll need to run &lt;code&gt;M-x package-refresh-contents&lt;/code&gt; or &lt;code&gt;M-x package-list-packages&lt;/code&gt; to ensure that Emacs has fetched the MELPA
package list before you can install packages with &lt;code&gt;M-x package-install&lt;/code&gt; or similar.&lt;/p&gt;
&lt;p&gt;Instead of the messy code above, you can of course use something like
the following instead:&lt;/p&gt;
&lt;div class="highlight highlight-source-emacs-lisp"&gt;&lt;pre&gt;(&lt;span class="pl-c1"&gt;require&lt;/span&gt; &lt;span class="pl-c1"&gt;'package&lt;/span&gt;)
(&lt;span class="pl-c1"&gt;add-to-list&lt;/span&gt; &lt;span class="pl-c1"&gt;'package-archives&lt;/span&gt; '(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;melpa&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; &lt;span class="pl-k"&gt;.&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;https://melpa.org/packages/&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;) &lt;span class="pl-c1"&gt;t&lt;/span&gt;)
(&lt;span class="pl-c1"&gt;package-initialize&lt;/span&gt;)&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Before doing so you should understand what it does though.  To make
sure of that, you should read the official
&lt;a href="https://www.gnu.org/software/emacs/manual/html_node/emacs/Packages.html" rel="nofollow"&gt;documentation&lt;/a&gt;
from the Emacs manual.  Also note that the calls to &lt;code&gt;require&lt;/code&gt; and
&lt;code&gt;package-initialize&lt;/code&gt; may be unnecessary depending on the Emacs version
you use.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-melpa-stable" class="anchor" aria-hidden="true" href="#melpa-stable"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;MELPA Stable&lt;/h3&gt;
&lt;p&gt;Packages in MELPA are built directly from the latest package source
code in the upstream repositories, but we also build and publish
packages corresponding to the latest tagged code in those
repositories, where version tags exist. These packages are published
in a separate package archive called &lt;a href="https://stable.melpa.org" rel="nofollow"&gt;MELPA
Stable&lt;/a&gt;. Most users should prefer MELPA over
MELPA Stable.&lt;/p&gt;
&lt;p&gt;Some notes:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;If you leave the original MELPA server in your &lt;code&gt;package-archives&lt;/code&gt;
then by default you will get the &lt;em&gt;development&lt;/em&gt; versions of packages
and not the stable ones, because the development versions are higher.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;If your Emacs has the variables &lt;code&gt;package-pinned-packages&lt;/code&gt; (available
in 24.4 and later) and/or &lt;code&gt;package-archive-priorities&lt;/code&gt;, you can
customize or modify those variables as needed.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;You can use the
&lt;a href="https://github.com/milkypostman/package-filter"&gt;package-filter.el&lt;/a&gt;
package which we provide.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;You will probably want to remove all packages and then reinstall
them. Any packages you already have installed from MELPA will never
get "updated" to the stable version because of the way version
numbering is handled.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Note that the MELPA maintainers do not use MELPA Stable themselves,
and do not particularly recommend its use.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-contributing" class="anchor" aria-hidden="true" href="#contributing"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Contributing&lt;/h2&gt;
&lt;p&gt;See the &lt;a href="CONTRIBUTING.org"&gt;CONTRIBUTING.org&lt;/a&gt; document.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-recipe-format" class="anchor" aria-hidden="true" href="#recipe-format"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Recipe Format&lt;/h2&gt;
&lt;p&gt;Packages are specified by files in the &lt;code&gt;recipes&lt;/code&gt; directory.  You can
contribute a new package by adding a new file under &lt;code&gt;recipes&lt;/code&gt; using
the following form (&lt;code&gt;[...]&lt;/code&gt; denotes optional or conditional values),&lt;/p&gt;
&lt;div class="highlight highlight-source-emacs-lisp"&gt;&lt;pre&gt;(&amp;lt;package-name&lt;span class="pl-k"&gt;&amp;gt;&lt;/span&gt;
 &lt;span class="pl-c1"&gt;:fetcher&lt;/span&gt; [git|github|gitlab|hg|bitbucket]
 [&lt;span class="pl-c1"&gt;:url&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;&amp;lt;repo url&amp;gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;]
 [&lt;span class="pl-c1"&gt;:repo&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;github-gitlab-or-bitbucket-user/repo-name&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;]
 [&lt;span class="pl-c1"&gt;:commit&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;commit&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;]
 [&lt;span class="pl-c1"&gt;:branch&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;branch&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;]
 [&lt;span class="pl-c1"&gt;:version-regexp&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;&amp;lt;regexp&amp;gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;]
 [&lt;span class="pl-c1"&gt;:files&lt;/span&gt; (&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;&amp;lt;file1&amp;gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; ...)])&lt;/pre&gt;&lt;/div&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;package-name&lt;/code&gt;
a lisp symbol that has the same name as the package being specified.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;:fetcher&lt;/code&gt; specifies the type of repository that &lt;code&gt;:url&lt;/code&gt; or &lt;code&gt;:repo&lt;/code&gt;
points to.  MELPA supports &lt;a href="http://git-scm.com/" rel="nofollow"&gt;&lt;code&gt;git&lt;/code&gt;&lt;/a&gt;, &lt;a href="https://github.com/"&gt;&lt;code&gt;github&lt;/code&gt;&lt;/a&gt;,
&lt;a href="https://gitlab.com/" rel="nofollow"&gt;&lt;code&gt;gitlab&lt;/code&gt;&lt;/a&gt;, &lt;a href="https://www.mercurial-scm.org/" rel="nofollow"&gt;&lt;code&gt;hg&lt;/code&gt;&lt;/a&gt; (Mercurial), and
&lt;a href="https://bitbucket.org/" rel="nofollow"&gt;&lt;code&gt;bitbucket&lt;/code&gt;&lt;/a&gt;.  The &lt;code&gt;bitbucket&lt;/code&gt; fetcher derives from
&lt;code&gt;hg&lt;/code&gt;, so you have to use &lt;code&gt;git&lt;/code&gt; for Git repositories hosted on
Bitbucket.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;:url&lt;/code&gt;
specifies the URL of the version control repository. &lt;em&gt;required for
the &lt;code&gt;git&lt;/code&gt;, and &lt;code&gt;hg&lt;/code&gt; fetchers.&lt;/em&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;:repo&lt;/code&gt; specifies the github/gitlab/bitbucket repository and is of the form
&lt;code&gt;user/repo-name&lt;/code&gt;. &lt;em&gt;required for the &lt;code&gt;github&lt;/code&gt;, &lt;code&gt;gitlab&lt;/code&gt;, and &lt;code&gt;bitbucket&lt;/code&gt; fetchers&lt;/em&gt;.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;:commit&lt;/code&gt;
specifies the commit of the git repo to checkout. The value
will be passed to &lt;code&gt;git reset&lt;/code&gt; in a repo where &lt;code&gt;upstream&lt;/code&gt; is the
original repository. Can therefore be either a SHA, if pointing at a
specific commit, or a full ref prefixed with "origin/". Only used by
the &lt;code&gt;git&lt;/code&gt;-based fetchers.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;:branch&lt;/code&gt;
specifies the branch of the git repo to use. This is like &lt;code&gt;:commit&lt;/code&gt;, but
it adds the "origin/" prefix automatically.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;:version-regexp&lt;/code&gt; is a regular expression for extracting a
version-string from the repository tags.  The default matches
typical version tags such as &lt;code&gt;1.0&lt;/code&gt;, &lt;code&gt;R16&lt;/code&gt; or &lt;code&gt;v4.3.5&lt;/code&gt;, so you should
not override it unless necessary.  For an unusual tag like
"OTP-18.1.5", we might add &lt;code&gt;:version-regexp "[^0-9]*\\(.*\\)"&lt;/code&gt; to
strip the "OTP-" prefix.  The captured portion of the regexp must be
parseable by Emacs' &lt;code&gt;version-to-list&lt;/code&gt; function.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;:files&lt;/code&gt; optional property specifying the elisp and info files used to build the
package. Please do not override this if the default value (below) is adequate, which
it should usually be:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;  ("*.el" "*.el.in" "dir"
   "*.info" "*.texi" "*.texinfo"
   "doc/dir" "doc/*.info" "doc/*.texi" "doc/*.texinfo"
   (:exclude ".dir-locals.el" "test.el" "tests.el" "*-test.el" "*-tests.el"))
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;This option is necessary when there are multiple packages in the
repository and thus the package should only be built from a subset of
&lt;code&gt;.el&lt;/code&gt; files. For example, elisp test files should not normally be
packaged. &lt;em&gt;Any file specified at any path in the repository is copied
to the root of the package.&lt;/em&gt; More complex options are available,
submit an &lt;a href="https://github.com/melpa/melpa/issues"&gt;Issue&lt;/a&gt; if the
specified package requires more complex file specification.&lt;/p&gt;
&lt;p&gt;If the package merely requires some additional files, for example for
bundling external dependencies, but is otherwise fine with the defaults, it's
recommended to use &lt;code&gt;:defaults&lt;/code&gt; as the very first element of this list, which
causes the default value shown above to be prepended to the specified file list.&lt;/p&gt;
&lt;p&gt;Note that elisp in subdirectories is never included by default, so
you might find it convenient to separate auxiliary files such as tests into
subdirectories to keep packaging simple.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;&lt;a id="user-content-example-single-file-repository" class="anchor" aria-hidden="true" href="#example-single-file-repository"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Example: Single File Repository&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://github.com/nonsequitur/smex"&gt;smex&lt;/a&gt; is a repository that
contains two files:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;README.markdown&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;smex.el&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Since there is only one &lt;code&gt;.el&lt;/code&gt; file, this package only needs the &lt;code&gt;:url&lt;/code&gt;
and &lt;code&gt;:fetcher&lt;/code&gt; specified,&lt;/p&gt;
&lt;div class="highlight highlight-source-emacs-lisp"&gt;&lt;pre&gt;(smex &lt;span class="pl-c1"&gt;:repo&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;nonsequitur/smex&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; &lt;span class="pl-c1"&gt;:fetcher&lt;/span&gt; github)&lt;/pre&gt;&lt;/div&gt;
&lt;h3&gt;&lt;a id="user-content-example-multiple-packages-in-one-repository" class="anchor" aria-hidden="true" href="#example-multiple-packages-in-one-repository"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Example: Multiple Packages in one Repository&lt;/h3&gt;
&lt;p&gt;Assume we have a repository containing three libraries &lt;code&gt;mypackage.el&lt;/code&gt;,
&lt;code&gt;helm-mypackage.el&lt;/code&gt;, and &lt;code&gt;persp-mypackage.el&lt;/code&gt;.  The latter two
libraries are optional and users who don't want to use the packages
&lt;code&gt;helm&lt;/code&gt; and/or &lt;code&gt;perspective&lt;/code&gt; should not be forced to install them just
so they can install &lt;code&gt;mypackage&lt;/code&gt;.  These libraries should therefore be
distributed as separate packages.&lt;/p&gt;
&lt;p&gt;The three packages have to be declared in three separate files
&lt;code&gt;recipes/mypackage&lt;/code&gt;, &lt;code&gt;recipes/helm-mypackage&lt;/code&gt;, and
&lt;code&gt;recipes/persp-mypackage&lt;/code&gt;:&lt;/p&gt;
&lt;div class="highlight highlight-source-emacs-lisp"&gt;&lt;pre&gt;(mypackage &lt;span class="pl-c1"&gt;:repo&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;someuser/mypackage&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;
           &lt;span class="pl-c1"&gt;:fetcher&lt;/span&gt; github
           &lt;span class="pl-c1"&gt;:files&lt;/span&gt; (&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;mypackage.el&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;))&lt;/pre&gt;&lt;/div&gt;
&lt;div class="highlight highlight-source-emacs-lisp"&gt;&lt;pre&gt;(helm-mypackage &lt;span class="pl-c1"&gt;:repo&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;someuser/mypackage&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;
                &lt;span class="pl-c1"&gt;:fetcher&lt;/span&gt; github
                &lt;span class="pl-c1"&gt;:files&lt;/span&gt; (&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;helm-mypackage.el&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;))&lt;/pre&gt;&lt;/div&gt;
&lt;div class="highlight highlight-source-emacs-lisp"&gt;&lt;pre&gt;(persp-mypackage &lt;span class="pl-c1"&gt;:repo&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;someuser/mypackage&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;
                 &lt;span class="pl-c1"&gt;:fetcher&lt;/span&gt; github
                 &lt;span class="pl-c1"&gt;:files&lt;/span&gt; (&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;persp-mypackage.el&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;))&lt;/pre&gt;&lt;/div&gt;
&lt;h3&gt;&lt;a id="user-content-example-multiple-files-in-multiple-directories" class="anchor" aria-hidden="true" href="#example-multiple-files-in-multiple-directories"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Example: Multiple Files in Multiple Directories&lt;/h3&gt;
&lt;p&gt;There are special cases where creation of the package comes from many
different sub-directories in the repository and the destination
sub-directories need to be explicitly set.&lt;/p&gt;
&lt;p&gt;Consider the &lt;code&gt;flymake-perlcritic&lt;/code&gt; recipe,&lt;/p&gt;
&lt;div class="highlight highlight-source-emacs-lisp"&gt;&lt;pre&gt;(flymake-perlcritic &lt;span class="pl-c1"&gt;:repo&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;illusori/emacs-flymake-perlcritic&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;
                    &lt;span class="pl-c1"&gt;:fetcher&lt;/span&gt; github
                    &lt;span class="pl-c1"&gt;:files&lt;/span&gt; (&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;*.el&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; (&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;bin&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;bin/flymake_perlcritic&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)))&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;which will result in a package structure of,&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;flymake-perlcritic-YYYMMDD
|-- bin
|   `-- flymake_perlcritic
|-- flymake-perlcritic-pkg.el
`-- flymake-perlcritic.el
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Notice that specifying an entry in &lt;code&gt;:files&lt;/code&gt; that is a list takes the
first element to be the destination directory.  These can be embedded
further, such as the following---hypothetical---entry for &lt;code&gt;:files&lt;/code&gt;,&lt;/p&gt;
&lt;div class="highlight highlight-source-emacs-lisp"&gt;&lt;pre&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;*.el&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; (&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;snippets&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;
         (&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;html-mode&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;snippets/html-mode/*&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
         (&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;python-mode&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;snippets/python-mode/*&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)))&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;which would result in a package with &lt;code&gt;*.el&lt;/code&gt; in something like,&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;package-YYYYMMDD
|-- snippets
|   |-- html-mode
|   |   |-- div
|   |   `-- html
|   `-- python-mode
|       |-- for
|       `-- main
`-- package.el
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;But a better solution, given that we probably want to copy the
&lt;em&gt;entire&lt;/em&gt; &lt;code&gt;snippets&lt;/code&gt; directory to the root of the package, we could
just specify that directory.  Consider the &lt;code&gt;pony-mode&lt;/code&gt; recipe,&lt;/p&gt;
&lt;div class="highlight highlight-source-emacs-lisp"&gt;&lt;pre&gt;(pony-mode
 &lt;span class="pl-c1"&gt;:repo&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;davidmiller/pony-mode&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;
 &lt;span class="pl-c1"&gt;:fetcher&lt;/span&gt; github
 &lt;span class="pl-c1"&gt;:files&lt;/span&gt; (&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;src/*.el&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;snippets&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;))&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;which generates the package,&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;pony-mode-YYYYMMDD
|-- pony-mode-pkg.el
|-- pony-mode.el
|-- pony-tpl.el
`-- snippets
    |-- html-mode
    |   |-- bl
    |   |-- ex
    |   |-- for
    |   |-- if
    |   |-- loa
    |   |-- sup
    |   |-- testc
    |   `-- {{
    `-- python-mode
        |-- auth-view
        |-- bn
        |-- model
        |-- modelform
        |-- render-to
        |-- testc
        `-- view
&lt;/code&gt;&lt;/pre&gt;
&lt;h2&gt;&lt;a id="user-content-build-scripts" class="anchor" aria-hidden="true" href="#build-scripts"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Build Scripts&lt;/h2&gt;
&lt;p&gt;Building MELPA is all based around using the &lt;code&gt;Makefile&lt;/code&gt; included in
the root repository directory. Described below are the actions that
accepted by the &lt;code&gt;Makefile&lt;/code&gt;.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;all&lt;/code&gt; -- Builds all packages under the &lt;code&gt;recipes/&lt;/code&gt; directory and compiles the &lt;code&gt;index.html&lt;/code&gt; file for the &lt;a href="https://melpa.org" rel="nofollow"&gt;melpa&lt;/a&gt; website.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;recipes/&amp;lt;NAME&amp;gt;&lt;/code&gt; -- Build individual recipe &lt;code&gt;&amp;lt;NAME&amp;gt;&lt;/code&gt;. Built packages
are put in the &lt;code&gt;packages/&lt;/code&gt; folder with version corresponding to the
date of the latest commit that modified at least one of the files
specified by the recipe; given according to the &lt;code&gt;%Y%m%d&lt;/code&gt; format.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;json&lt;/code&gt; -- build all JSON files.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;archive.json&lt;/code&gt; -- construct the &lt;code&gt;archive.json&lt;/code&gt; file that will contain a JSON object of all compiled packages.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;recipes.json&lt;/code&gt; -- construct the &lt;code&gt;recipes.json&lt;/code&gt; file containing a JSON object of all packages available for building.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;clean&lt;/code&gt; -- clean everything.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;html&lt;/code&gt; -- build &lt;code&gt;index.html&lt;/code&gt;.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;clean-working&lt;/code&gt; -- remove all repositories that have been checked out to the &lt;code&gt;working/&lt;/code&gt; directory.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;clean-packages&lt;/code&gt; -- remove all compiled packages from the &lt;code&gt;packages&lt;/code&gt; directory.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;clean-json&lt;/code&gt; -- remove all JSON files.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Note that these scripts require an Emacs with &lt;code&gt;package.el&lt;/code&gt; installed,
such as Emacs 24. If you have an older version of Emacs, you can get a
suitable &lt;code&gt;package.el&lt;/code&gt; &lt;a href="https://git.savannah.gnu.org/gitweb/?p=emacs.git;a=blob_plain;hb=ba08b24186711eaeb3748f3d1f23e2c2d9ed0d09;f=lisp/emacs-lisp/package.el" rel="nofollow"&gt;here&lt;/a&gt;.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-api" class="anchor" aria-hidden="true" href="#api"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;API&lt;/h2&gt;
&lt;p&gt;All repository code is contained in the file
&lt;code&gt;package-build/package-build.el&lt;/code&gt;.  That code is maintained in a
&lt;a href="https://github.com/melpa/package-build"&gt;separate repository&lt;/a&gt;: the version
in the MELPA repository is imported using &lt;code&gt;git subtree&lt;/code&gt;.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-functions" class="anchor" aria-hidden="true" href="#functions"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Functions&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;(package-build-all)&lt;/code&gt; : build packages for all recipes in the
directory specified by &lt;code&gt;package-build-recipes-dir&lt;/code&gt;.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;(package-build-archive NAME)&lt;/code&gt; : interactive elisp function to build
a single archive. NAME is a symbol for the package to be built.
Packages are staged in the directory specified by
&lt;code&gt;package-build-working-dir&lt;/code&gt; and built packages are placed in the
directory specified by &lt;code&gt;package-build-archive-dir&lt;/code&gt;. Packages are
versioned based on the most recent commit date to package files based
on commits to upstream package repository. For multi-file packages,
the file &lt;code&gt;&amp;lt;NAME&amp;gt;-pkg.el&lt;/code&gt; is automatically generated and contains
&lt;em&gt;description&lt;/em&gt;, &lt;em&gt;version&lt;/em&gt;, and &lt;em&gt;requires&lt;/em&gt; information determined by
searching &lt;code&gt;&amp;lt;NAME&amp;gt;-pkg.el&lt;/code&gt;, &lt;code&gt;&amp;lt;NAME&amp;gt;.el&lt;/code&gt;, and &lt;code&gt;&amp;lt;NAME&amp;gt;-pkg.el.in&lt;/code&gt;, if
they exist in the repository.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;&lt;a id="user-content-variables" class="anchor" aria-hidden="true" href="#variables"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Variables&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;package-build-working-dir&lt;/code&gt; : Staging area containing package
repositories and package directories being built.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;package-build-archive-dir&lt;/code&gt; : Location to store &lt;code&gt;archive-contents&lt;/code&gt; and
any built packages.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;package-build-recipes-dir&lt;/code&gt; : Directory containing MELPA compatible
recipes.  See &lt;a href="#recipe-format"&gt;Recipe Format&lt;/a&gt; section for more details.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-configuration" class="anchor" aria-hidden="true" href="#configuration"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Configuration&lt;/h2&gt;
&lt;p&gt;Packages end up in the &lt;code&gt;packages/&lt;/code&gt; directory by default.
This can be configured using the &lt;code&gt;package-build-archive-dir&lt;/code&gt; variable.&lt;/p&gt;
&lt;p&gt;Repositories are checked out to the &lt;code&gt;working/&lt;/code&gt; directory by default.
This can be configured using the &lt;code&gt;package-build-working-dir&lt;/code&gt; variable.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-mirrors" class="anchor" aria-hidden="true" href="#mirrors"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Mirrors&lt;/h2&gt;
&lt;p&gt;Official mirrors are available (with many thanks to mirrorservice.org)
so that if melpa.org is down, packages can still be installed.  The
following are the HTTP/HTTPS URLs to use in &lt;code&gt;package-archives&lt;/code&gt; for
MELPA and MELPA Stable respectively:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://www.mirrorservice.org/sites/melpa.org/packages/" rel="nofollow"&gt;http://www.mirrorservice.org/sites/melpa.org/packages/&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.mirrorservice.org/sites/melpa.org/packages/" rel="nofollow"&gt;https://www.mirrorservice.org/sites/melpa.org/packages/&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://www.mirrorservice.org/sites/stable.melpa.org/packages/" rel="nofollow"&gt;http://www.mirrorservice.org/sites/stable.melpa.org/packages/&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.mirrorservice.org/sites/stable.melpa.org/packages/" rel="nofollow"&gt;https://www.mirrorservice.org/sites/stable.melpa.org/packages/&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Only the packages are mirrored, not the web site front-end itself.&lt;/p&gt;
&lt;p&gt;&lt;em&gt;We are NOT responsible for the contents of any UNOFFICIAL mirror of
our packages.&lt;/em&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-about" class="anchor" aria-hidden="true" href="#about"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;About&lt;/h2&gt;
&lt;p&gt;&lt;em&gt;MELPA&lt;/em&gt; is &lt;em&gt;Milkypostman's ELPA&lt;/em&gt; or &lt;em&gt;Milkypostman's Experimental Lisp
Package Archive&lt;/em&gt; if you're not into the whole brevity thing.&lt;/p&gt;
&lt;/article&gt;&lt;/div&gt;</description><author>melpa</author><guid isPermaLink="false">https://github.com/melpa/melpa</guid><pubDate>Tue, 11 Feb 2020 00:14:00 GMT</pubDate></item><item><title>mhayashi1120/Emacs-wgrep #15 in Emacs Lisp, This month</title><link>https://github.com/mhayashi1120/Emacs-wgrep</link><description>&lt;p&gt;&lt;i&gt;Writable grep buffer and apply the changes to files&lt;/i&gt;&lt;/p&gt;&lt;div id="readme" class="md" data-path="README.md"&gt;&lt;article class="markdown-body entry-content p-5" itemprop="text"&gt;&lt;h1&gt;&lt;a id="user-content-wgrepel" class="anchor" aria-hidden="true" href="#wgrepel"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;wgrep.el&lt;/h1&gt;
&lt;h2&gt;&lt;a id="user-content-summary" class="anchor" aria-hidden="true" href="#summary"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Summary:&lt;/h2&gt;
&lt;p&gt;wgrep allows you to edit a grep buffer and apply those changes to
the file buffer like &lt;code&gt;sed&lt;/code&gt; interactively. No need to learn sed
script, just learn Emacs.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-install" class="anchor" aria-hidden="true" href="#install"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Install:&lt;/h2&gt;
&lt;p&gt;Put this file into load-path'ed directory, and byte compile it if
desired. And put the following expression into your ~/.emacs.&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;(require 'wgrep)
&lt;/code&gt;&lt;/pre&gt;
&lt;h2&gt;&lt;a id="user-content-usage" class="anchor" aria-hidden="true" href="#usage"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Usage:&lt;/h2&gt;
&lt;p&gt;You can edit the text in the &lt;em&gt;grep&lt;/em&gt; buffer after typing &lt;code&gt;C-c C-p&lt;/code&gt; .
After that the changed text is highlighted.
The following keybindings are defined:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;C-c C-e&lt;/code&gt;: Apply the changes to file buffers.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;C-c C-u&lt;/code&gt;: All changes are unmarked and ignored.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;C-c C-d&lt;/code&gt;: Mark as delete to current line (including newline).&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;C-c C-r&lt;/code&gt;: Remove the changes in the region (these changes are not
applied to the files. Of course, the remaining
changes can still be applied to the files.)&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;C-c C-p&lt;/code&gt;: Toggle read-only area.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;C-c C-k&lt;/code&gt;: Discard all changes and exit.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;C-x C-q&lt;/code&gt;: Exit wgrep mode.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;To save all buffers that wgrep has changed, run&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;pre&gt;&lt;code&gt;M-x wgrep-save-all-buffers
&lt;/code&gt;&lt;/pre&gt;
&lt;ul&gt;
&lt;li&gt;To save buffer automatically when &lt;code&gt;wgrep-finish-edit&lt;/code&gt;.&lt;/li&gt;
&lt;/ul&gt;
&lt;pre&gt;&lt;code&gt;(setq wgrep-auto-save-buffer t)
&lt;/code&gt;&lt;/pre&gt;
&lt;ul&gt;
&lt;li&gt;You can change the default key binding to switch to wgrep.&lt;/li&gt;
&lt;/ul&gt;
&lt;pre&gt;&lt;code&gt;(setq wgrep-enable-key "r")
&lt;/code&gt;&lt;/pre&gt;
&lt;ul&gt;
&lt;li&gt;To apply all changes regardless of whether or not buffer is read-only.&lt;/li&gt;
&lt;/ul&gt;
&lt;pre&gt;&lt;code&gt;(setq wgrep-change-readonly-file t)
&lt;/code&gt;&lt;/pre&gt;
&lt;h3&gt;&lt;a id="user-content-trivial-features" class="anchor" aria-hidden="true" href="#trivial-features"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Trivial features:&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;wdired.el like interface.&lt;/li&gt;
&lt;li&gt;Support GNU grep &lt;code&gt;--context&lt;/code&gt; (&lt;code&gt;-A&lt;/code&gt; &lt;code&gt;-B&lt;/code&gt; and &lt;code&gt;-C&lt;/code&gt;) option.&lt;/li&gt;
&lt;li&gt;Can handle too many files.&lt;/li&gt;
&lt;li&gt;Can handle newline insertion in &lt;em&gt;grep&lt;/em&gt; buffer.&lt;/li&gt;
&lt;li&gt;Delete whole line include newline.&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;&lt;a id="user-content-similar-softwares" class="anchor" aria-hidden="true" href="#similar-softwares"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Similar softwares:&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://www.gnu.org/software/sed/" rel="nofollow"&gt;GNU sed&lt;/a&gt;
&lt;a href="https://github.com/syohex/emacs-helm-ag"&gt;helm-ag&lt;/a&gt; has a similar feature.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-history" class="anchor" aria-hidden="true" href="#history"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;History:&lt;/h2&gt;
&lt;p&gt;This program was forked from Matsushita Akihisa's &lt;a href="http://www.bookshelf.jp/elc/grep-edit.el" rel="nofollow"&gt;grep-edit.el
v2.11&lt;/a&gt;.  As this website is
now inaccessible,
&lt;a href="https://www.emacswiki.org/emacs/grep-edit.el" rel="nofollow"&gt;emacswiki.org's&lt;/a&gt; copy
may be consulted.&lt;/p&gt;
&lt;p&gt;Imported version can be downloaded from this orphan commit:
&lt;a href="https://github.com/mhayashi1120/Emacs-wgrep/tree/import-original-author/"&gt;https://github.com/mhayashi1120/Emacs-wgrep/tree/import-original-author/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Following added implementations and differences.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Support GNU grep context option -A -B and -C&lt;/li&gt;
&lt;li&gt;Some bugfix. (wrong coloring text etc..)&lt;/li&gt;
&lt;li&gt;wdired.el like interface.&lt;/li&gt;
&lt;li&gt;Remove all advice.&lt;/li&gt;
&lt;li&gt;Bind to local variables. (grep-a-lot.el works well)&lt;/li&gt;
&lt;li&gt;After save buffer, colored face will be removed.&lt;/li&gt;
&lt;li&gt;Change face easy to see.&lt;/li&gt;
&lt;li&gt;Reinforce checking error.&lt;/li&gt;
&lt;li&gt;Support removing whole line include new-line.&lt;/li&gt;
&lt;/ul&gt;
&lt;/article&gt;&lt;/div&gt;</description><author>mhayashi1120</author><guid isPermaLink="false">https://github.com/mhayashi1120/Emacs-wgrep</guid><pubDate>Tue, 11 Feb 2020 00:15:00 GMT</pubDate></item><item><title>seagle0128/doom-modeline #16 in Emacs Lisp, This month</title><link>https://github.com/seagle0128/doom-modeline</link><description>&lt;p&gt;&lt;i&gt;A fancy and fast mode-line inspired by minimalism design.&lt;/i&gt;&lt;/p&gt;&lt;div id="readme" class="md" data-path="README.md"&gt;&lt;article class="markdown-body entry-content p-5" itemprop="text"&gt;&lt;h1&gt;&lt;a id="user-content-doom-modeline" class="anchor" aria-hidden="true" href="#doom-modeline"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;doom-modeline&lt;/h1&gt;
&lt;p&gt;&lt;a href="https://travis-ci.org/seagle0128/doom-modeline" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/c0d95bf2fd233a8073459473cc8ac19fb1ae5f09/68747470733a2f2f7472617669732d63692e6f72672f736561676c65303132382f646f6f6d2d6d6f64656c696e652e7376673f6272616e63683d6d6173746572" alt="Build Status" data-canonical-src="https://travis-ci.org/seagle0128/doom-modeline.svg?branch=master" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://melpa.org/#/doom-modeline" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/fed98cd520f09cc748ff43349d1248dd3cd5802e/68747470733a2f2f6d656c70612e6f72672f7061636b616765732f646f6f6d2d6d6f64656c696e652d62616467652e737667" alt="MELPA" data-canonical-src="https://melpa.org/packages/doom-modeline-badge.svg" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://stable.melpa.org/#/doom-modeline" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/62a5aead52832f644f8985d860a49f29a54b5057/68747470733a2f2f737461626c652e6d656c70612e6f72672f7061636b616765732f646f6f6d2d6d6f64656c696e652d62616467652e737667" alt="MELPA Stable" data-canonical-src="https://stable.melpa.org/packages/doom-modeline-badge.svg" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="LICENSE"&gt;&lt;img src="https://camo.githubusercontent.com/3ff3f8b43676ebcaa5049d1e12537434b9359e35/687474703a2f2f696d672e736869656c64732e696f2f3a6c6963656e73652d67706c332d626c75652e737667" alt="License" data-canonical-src="http://img.shields.io/:license-gpl3-blue.svg" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Table of Contents&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="#doom-modeline"&gt;doom-modeline&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="#feature"&gt;Feature&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#screenshots"&gt;Screenshots&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#install"&gt;Install&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="#manual"&gt;Manual&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#use-package"&gt;Use-package&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="#customize"&gt;Customize&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#faq"&gt;FAQ&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;A fancy and fast mode-line inspired by minimalism design.&lt;/p&gt;
&lt;p&gt;It's integrated into &lt;a href="https://github.com/seagle0128/.emacs.d"&gt;Centaur Emacs&lt;/a&gt;, &lt;a href="https://github.com/hlissner/doom-emacs"&gt;Doom
Emacs&lt;/a&gt; and
&lt;a href="https://github.com/syl20bnr/spacemacs"&gt;Spacemacs&lt;/a&gt;.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-feature" class="anchor" aria-hidden="true" href="#feature"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Feature&lt;/h2&gt;
&lt;p&gt;The &lt;code&gt;doom-modeline&lt;/code&gt; was designed for minimalism, and offers:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;A match count panel (for &lt;code&gt;anzu&lt;/code&gt;, &lt;code&gt;iedit&lt;/code&gt;, &lt;code&gt;multiple-cursors&lt;/code&gt;, &lt;code&gt;symbol-overlay&lt;/code&gt;,
&lt;code&gt;evil-search&lt;/code&gt; and &lt;code&gt;evil-substitute&lt;/code&gt;)&lt;/li&gt;
&lt;li&gt;An indicator for recording a macro&lt;/li&gt;
&lt;li&gt;Current environment version (e.g. &lt;code&gt;python&lt;/code&gt;, &lt;code&gt;ruby&lt;/code&gt;, &lt;code&gt;go&lt;/code&gt;, etc.) in the major-mode&lt;/li&gt;
&lt;li&gt;A customizable mode-line height (see &lt;code&gt;doom-modeline-height&lt;/code&gt;)&lt;/li&gt;
&lt;li&gt;A minor modes segment which is compatible with &lt;code&gt;minions&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;An error/warning count segment for &lt;code&gt;flymake&lt;/code&gt;/&lt;code&gt;flycheck&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;A workspace number segment for &lt;code&gt;eyebrowse&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;A perspective name segment for &lt;code&gt;persp-mode&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;A window number segment for &lt;code&gt;ace-window&lt;/code&gt;, &lt;code&gt;winum&lt;/code&gt; and &lt;code&gt;window-numbering&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;An indicator for modal editing state, including &lt;code&gt;evil&lt;/code&gt;, &lt;code&gt;overwrite&lt;/code&gt;, &lt;code&gt;god&lt;/code&gt;, &lt;code&gt;ryo&lt;/code&gt; and
&lt;code&gt;xah-fly-keys&lt;/code&gt;, etc.&lt;/li&gt;
&lt;li&gt;An indicator for &lt;code&gt;battery&lt;/code&gt; status&lt;/li&gt;
&lt;li&gt;An indicator for current input method&lt;/li&gt;
&lt;li&gt;An indicator for debug state&lt;/li&gt;
&lt;li&gt;An indicator for remote host&lt;/li&gt;
&lt;li&gt;An indicator for LSP state with &lt;code&gt;lsp-mode&lt;/code&gt; or &lt;code&gt;eglot&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;An indicator for GitHub notifications&lt;/li&gt;
&lt;li&gt;An indicator for unread emails with &lt;code&gt;mu4e-alert&lt;/code&gt; and &lt;code&gt;gnus&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;An indicator for IRC notifications with &lt;code&gt;circe&lt;/code&gt;, &lt;code&gt;rcirc&lt;/code&gt; or &lt;code&gt;erc&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;An indicator for buffer position which is compatible with &lt;code&gt;nyan-mode&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;An indicator for party &lt;code&gt;parrot&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;An indicator for PDF page number with &lt;code&gt;pdf-tools&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;An indicator for markdown/org preview with &lt;code&gt;grip&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Truncated file name, file icon, buffer state and project name in buffer
information segment, which is compatible with &lt;code&gt;project&lt;/code&gt;, &lt;code&gt;projectile&lt;/code&gt; and
&lt;code&gt;find-file-in-project&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;New mode-line for &lt;code&gt;Info-mode&lt;/code&gt; buffers&lt;/li&gt;
&lt;li&gt;New package mode-line for &lt;code&gt;paradox&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;New mode-line for &lt;code&gt;helm&lt;/code&gt; buffers&lt;/li&gt;
&lt;li&gt;New mode-line for &lt;code&gt;git-timemachine&lt;/code&gt; buffers&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-screenshots" class="anchor" aria-hidden="true" href="#screenshots"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Screenshots&lt;/h2&gt;
&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="https://user-images.githubusercontent.com/140797/49694177-10dcd280-fbc0-11e8-8d21-971ede6afdb5.png"&gt;&lt;img src="https://user-images.githubusercontent.com/140797/49694177-10dcd280-fbc0-11e8-8d21-971ede6afdb5.png" alt="modeline" title="Mode-line" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="https://user-images.githubusercontent.com/140797/49694189-6913d480-fbc0-11e8-93ae-9578455dcd2c.png"&gt;&lt;img src="https://user-images.githubusercontent.com/140797/49694189-6913d480-fbc0-11e8-93ae-9578455dcd2c.png" alt="search_replace" title="Search and Replace" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="https://user-images.githubusercontent.com/140797/49694199-cc056b80-fbc0-11e8-9bb1-533b1e64da66.png"&gt;&lt;img src="https://user-images.githubusercontent.com/140797/49694199-cc056b80-fbc0-11e8-9bb1-533b1e64da66.png" alt="macro" title="Macro" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="https://user-images.githubusercontent.com/140797/51301117-0805d900-1a69-11e9-957d-b4c7a70a1cf8.png"&gt;&lt;img src="https://user-images.githubusercontent.com/140797/51301117-0805d900-1a69-11e9-957d-b4c7a70a1cf8.png" alt="no_icons" title="No Icons" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="https://user-images.githubusercontent.com/140797/50414928-3c63ec00-0853-11e9-9b26-6a1df278d332.png"&gt;&lt;img src="https://user-images.githubusercontent.com/140797/50414928-3c63ec00-0853-11e9-9b26-6a1df278d332.png" alt="color_icon_cpp" title="Color C++ icon" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="https://user-images.githubusercontent.com/140797/50415081-1428bd00-0854-11e9-9ae5-91805290c524.png"&gt;&lt;img src="https://user-images.githubusercontent.com/140797/50415081-1428bd00-0854-11e9-9ae5-91805290c524.png" alt="color_icon_java" title="Color Java icon" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="https://user-images.githubusercontent.com/140797/50415381-9f568280-0855-11e9-9478-34a6dd614d96.png"&gt;&lt;img src="https://user-images.githubusercontent.com/140797/50415381-9f568280-0855-11e9-9478-34a6dd614d96.png" alt="color_icon_elisp" title="Color Elisp icon" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="https://user-images.githubusercontent.com/140797/68990534-332aa600-088f-11ea-920f-20c9527a6466.png"&gt;&lt;img src="https://user-images.githubusercontent.com/140797/68990534-332aa600-088f-11ea-920f-20c9527a6466.png" alt="evil_normal_state_icon" title="Evil Normal State icon" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="https://user-images.githubusercontent.com/140797/68990540-4dfd1a80-088f-11ea-8e53-ab77af4c58c2.png"&gt;&lt;img src="https://user-images.githubusercontent.com/140797/68990540-4dfd1a80-088f-11ea-8e53-ab77af4c58c2.png" alt="evil_insert_state_icon" title="Evil Insert State icon" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="https://user-images.githubusercontent.com/140797/49694476-b8103880-fbc5-11e8-9c18-91f5e9258333.png"&gt;&lt;img src="https://user-images.githubusercontent.com/140797/49694476-b8103880-fbc5-11e8-9c18-91f5e9258333.png" alt="evil_normal_state" title="Evil Normal State" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="https://user-images.githubusercontent.com/140797/49694461-8b5c2100-fbc5-11e8-993e-d97baa9f01af.png"&gt;&lt;img src="https://user-images.githubusercontent.com/140797/49694461-8b5c2100-fbc5-11e8-993e-d97baa9f01af.png" alt="evil_insert_state" title="Evil Insert State" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="https://user-images.githubusercontent.com/140797/53592864-c751c180-3bc9-11e9-9914-493007c013d5.png"&gt;&lt;img src="https://user-images.githubusercontent.com/140797/53592864-c751c180-3bc9-11e9-9914-493007c013d5.png" alt="lsp_version" title="Perspective, LSP, Version, VCS and Flycheck" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="https://user-images.githubusercontent.com/140797/49694481-e0983280-fbc5-11e8-8cb2-c8d2e782bcdb.png"&gt;&lt;img src="https://user-images.githubusercontent.com/140797/49694481-e0983280-fbc5-11e8-8cb2-c8d2e782bcdb.png" alt="perspective" title="Perspective, LSP, Version and VCS" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="https://user-images.githubusercontent.com/140797/53592683-64602a80-3bc9-11e9-8054-91f79aa930b9.png"&gt;&lt;img src="https://user-images.githubusercontent.com/140797/53592683-64602a80-3bc9-11e9-8054-91f79aa930b9.png" alt="notifications" title="Notifications" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="https://user-images.githubusercontent.com/140797/50301291-de857c00-04c1-11e9-84c5-bfbc8de8295f.png"&gt;&lt;img src="https://user-images.githubusercontent.com/140797/50301291-de857c00-04c1-11e9-84c5-bfbc8de8295f.png" alt="minions" title="Minions and minor modes" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="https://user-images.githubusercontent.com/140797/50302008-c57dca80-04c3-11e9-8578-50154ef4f9f0.png"&gt;&lt;img src="https://user-images.githubusercontent.com/140797/50302008-c57dca80-04c3-11e9-8578-50154ef4f9f0.png" alt="debug" title="Debug state" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="https://user-images.githubusercontent.com/140797/51301061-da209480-1a68-11e9-9f64-905d889df9d6.png"&gt;&lt;img src="https://user-images.githubusercontent.com/140797/51301061-da209480-1a68-11e9-9f64-905d889df9d6.png" alt="nyan_parrot" title="Nyan and Parrot" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="https://user-images.githubusercontent.com/140797/69004814-20c67000-0954-11ea-8489-f5a527a80574.png"&gt;&lt;img src="https://user-images.githubusercontent.com/140797/69004814-20c67000-0954-11ea-8489-f5a527a80574.png" alt="irc" title="IRC Notifications" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="https://user-images.githubusercontent.com/140797/53593622-ba35d200-3bcb-11e9-85b3-38d64d05c127.png"&gt;&lt;img src="https://user-images.githubusercontent.com/140797/53593622-ba35d200-3bcb-11e9-85b3-38d64d05c127.png" alt="battery" title="Battery" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="https://user-images.githubusercontent.com/140797/57503916-e769d380-7324-11e9-906d-44c79f7408a3.png"&gt;&lt;img src="https://user-images.githubusercontent.com/140797/57503916-e769d380-7324-11e9-906d-44c79f7408a3.png" alt="package" title="Package" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="https://user-images.githubusercontent.com/140797/57506248-d96c8080-732d-11e9-8167-644c8fc4e0db.png"&gt;&lt;img src="https://user-images.githubusercontent.com/140797/57506248-d96c8080-732d-11e9-8167-644c8fc4e0db.png" alt="info" title="Info" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="https://user-images.githubusercontent.com/140797/57506112-6531dd00-732d-11e9-8a5e-22166f42dd4c.png"&gt;&lt;img src="https://user-images.githubusercontent.com/140797/57506112-6531dd00-732d-11e9-8a5e-22166f42dd4c.png" alt="helm" title="Helm" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-install" class="anchor" aria-hidden="true" href="#install"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Install&lt;/h2&gt;
&lt;h3&gt;&lt;a id="user-content-manual" class="anchor" aria-hidden="true" href="#manual"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Manual&lt;/h3&gt;
&lt;p&gt;From melpa, &lt;code&gt;M-x package-install RET doom-modeline RET&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;In &lt;code&gt;init.el&lt;/code&gt;,&lt;/p&gt;
&lt;div class="highlight highlight-source-emacs-lisp"&gt;&lt;pre&gt;(&lt;span class="pl-c1"&gt;require&lt;/span&gt; &lt;span class="pl-c1"&gt;'doom-modeline&lt;/span&gt;)
(doom-modeline-mode &lt;span class="pl-c1"&gt;1&lt;/span&gt;)&lt;/pre&gt;&lt;/div&gt;
&lt;h3&gt;&lt;a id="user-content-use-package" class="anchor" aria-hidden="true" href="#use-package"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Use-package&lt;/h3&gt;
&lt;div class="highlight highlight-source-emacs-lisp"&gt;&lt;pre&gt;(&lt;span class="pl-c1"&gt;use-package&lt;/span&gt; doom-modeline
      &lt;span class="pl-c1"&gt;:ensure&lt;/span&gt; &lt;span class="pl-c1"&gt;t&lt;/span&gt;
      &lt;span class="pl-c1"&gt;:hook&lt;/span&gt; (after-init &lt;span class="pl-k"&gt;.&lt;/span&gt; doom-modeline-mode))&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;This package requires the fonts included with &lt;code&gt;all-the-icons&lt;/code&gt; to be installed.
Run &lt;code&gt;M-x all-the-icons-install-fonts&lt;/code&gt; to do so. Please refer to the
&lt;a href="https://github.com/domtronn/all-the-icons.el#installation"&gt;installation guide&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Strongly recommend to use
&lt;a href="https://github.com/hlissner/emacs-doom-themes"&gt;doom-themes&lt;/a&gt; at the same time.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-customize" class="anchor" aria-hidden="true" href="#customize"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Customize&lt;/h2&gt;
&lt;p&gt;Run &lt;code&gt;M-x customize-group RET doom-modeline RET&lt;/code&gt; or set the variables.&lt;/p&gt;
&lt;div class="highlight highlight-source-emacs-lisp"&gt;&lt;pre&gt;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt;; How tall the mode-line should be. It's only respected in GUI.&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt;; If the actual char height is larger, it respects the actual height.&lt;/span&gt;
(&lt;span class="pl-k"&gt;setq&lt;/span&gt; doom-modeline-height &lt;span class="pl-c1"&gt;25&lt;/span&gt;)

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt;; How wide the mode-line bar should be. It's only respected in GUI.&lt;/span&gt;
(&lt;span class="pl-k"&gt;setq&lt;/span&gt; doom-modeline-bar-width &lt;span class="pl-c1"&gt;3&lt;/span&gt;)

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt;; How to detect the project root.&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt;; The default priority of detection is &lt;span class="pl-smi"&gt;`ffip'&lt;/span&gt; &amp;gt; &lt;span class="pl-smi"&gt;`projectile'&lt;/span&gt; &amp;gt; &lt;span class="pl-smi"&gt;`project'&lt;/span&gt;.&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt;; nil means to use &lt;span class="pl-smi"&gt;`default-directory'&lt;/span&gt;.&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt;; The project management packages have some issues on detecting project root.&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt;; e.g. &lt;span class="pl-smi"&gt;`projectile'&lt;/span&gt; doesn't handle symlink folders well, while &lt;span class="pl-smi"&gt;`project'&lt;/span&gt; is unable&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt;; to hanle sub-projects.&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt;; You can specify one if you encounter the issue.&lt;/span&gt;
(&lt;span class="pl-k"&gt;setq&lt;/span&gt; doom-modeline-project-detection &lt;span class="pl-c1"&gt;'project&lt;/span&gt;)

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt;; Determines the style used by &lt;span class="pl-smi"&gt;`doom-modeline-buffer-file-name'&lt;/span&gt;.&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt;;&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt;; Given ~/Projects/FOSS/emacs/lisp/comint.el&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt;;   auto =&amp;gt; emacs/lisp/comint.el (in a project) or comint.el&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt;;   truncate-upto-project =&amp;gt; ~/P/F/emacs/lisp/comint.el&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt;;   truncate-from-project =&amp;gt; ~/Projects/FOSS/emacs/l/comint.el&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt;;   truncate-with-project =&amp;gt; emacs/l/comint.el&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt;;   truncate-except-project =&amp;gt; ~/P/F/emacs/l/comint.el&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt;;   truncate-upto-root =&amp;gt; ~/P/F/e/lisp/comint.el&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt;;   truncate-all =&amp;gt; ~/P/F/e/l/comint.el&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt;;   relative-from-project =&amp;gt; emacs/lisp/comint.el&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt;;   relative-to-project =&amp;gt; lisp/comint.el&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt;;   file-name =&amp;gt; comint.el&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt;;   buffer-name =&amp;gt; comint.el&amp;lt;2&amp;gt; (uniquify buffer name)&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt;;&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt;; If you are experiencing the laggy issue, especially while editing remote files&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt;; with tramp, please try &lt;span class="pl-smi"&gt;`file-name'&lt;/span&gt; style.&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt;; Please refer to https://github.com/bbatsov/projectile/issues/657.&lt;/span&gt;
(&lt;span class="pl-k"&gt;setq&lt;/span&gt; doom-modeline-buffer-file-name-style &lt;span class="pl-c1"&gt;'auto&lt;/span&gt;)

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt;; Whether display icons in mode-line. Respects &lt;span class="pl-smi"&gt;`all-the-icons-color-icons'&lt;/span&gt;.&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt;; While using the server mode in GUI, should set the value explicitly.&lt;/span&gt;
(&lt;span class="pl-k"&gt;setq&lt;/span&gt; doom-modeline-icon (&lt;span class="pl-c1"&gt;display-graphic-p&lt;/span&gt;))

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt;; Whether display the icon for &lt;span class="pl-smi"&gt;`major-mode'&lt;/span&gt;. Respects &lt;span class="pl-smi"&gt;`doom-modeline-icon'&lt;/span&gt;.&lt;/span&gt;
(&lt;span class="pl-k"&gt;setq&lt;/span&gt; doom-modeline-major-mode-icon &lt;span class="pl-c1"&gt;t&lt;/span&gt;)

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt;; Whether display the colorful icon for &lt;span class="pl-smi"&gt;`major-mode'&lt;/span&gt;.&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt;; Respects &lt;span class="pl-smi"&gt;`doom-modeline-major-mode-icon'&lt;/span&gt;.&lt;/span&gt;
(&lt;span class="pl-k"&gt;setq&lt;/span&gt; doom-modeline-major-mode-color-icon &lt;span class="pl-c1"&gt;t&lt;/span&gt;)

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt;; Whether display the icon for the buffer state. It respects &lt;span class="pl-smi"&gt;`doom-modeline-icon'&lt;/span&gt;.&lt;/span&gt;
(&lt;span class="pl-k"&gt;setq&lt;/span&gt; doom-modeline-buffer-state-icon &lt;span class="pl-c1"&gt;t&lt;/span&gt;)

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt;; Whether display the modification icon for the buffer.&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt;; Respects &lt;span class="pl-smi"&gt;`doom-modeline-icon'&lt;/span&gt; and &lt;span class="pl-smi"&gt;`doom-modeline-buffer-state-icon'&lt;/span&gt;.&lt;/span&gt;
(&lt;span class="pl-k"&gt;setq&lt;/span&gt; doom-modeline-buffer-modification-icon &lt;span class="pl-c1"&gt;t&lt;/span&gt;)

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt;; Whether to use unicode as a fallback (instead of ASCII) when not using icons.&lt;/span&gt;
(&lt;span class="pl-k"&gt;setq&lt;/span&gt; doom-modeline-unicode-fallback &lt;span class="pl-c1"&gt;nil&lt;/span&gt;)

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt;; Whether display the minor modes in mode-line.&lt;/span&gt;
(&lt;span class="pl-k"&gt;setq&lt;/span&gt; doom-modeline-minor-modes &lt;span class="pl-c1"&gt;nil&lt;/span&gt;)

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt;; If non-nil, a word count will be added to the selection-info modeline segment.&lt;/span&gt;
(&lt;span class="pl-k"&gt;setq&lt;/span&gt; doom-modeline-enable-word-count &lt;span class="pl-c1"&gt;nil&lt;/span&gt;)

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt;; Major modes in which to display word count continuously.&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt;; Also applies to any derived modes. Respects &lt;span class="pl-smi"&gt;`doom-modeline-enable-word-count'&lt;/span&gt;.&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt;; If it brings the sluggish issue, disable &lt;span class="pl-smi"&gt;`doom-modeline-enable-word-count'&lt;/span&gt; or&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt;; remove the modes from &lt;span class="pl-smi"&gt;`doom-modeline-continuous-word-count-modes'&lt;/span&gt;.&lt;/span&gt;
(&lt;span class="pl-k"&gt;setq&lt;/span&gt; doom-modeline-continuous-word-count-modes '(&lt;span class="pl-c1"&gt;markdown-mode&lt;/span&gt; gfm-mode org-mode))

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt;; Whether display the buffer encoding.&lt;/span&gt;
(&lt;span class="pl-k"&gt;setq&lt;/span&gt; doom-modeline-buffer-encoding &lt;span class="pl-c1"&gt;t&lt;/span&gt;)

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt;; Whether display the indentation information.&lt;/span&gt;
(&lt;span class="pl-k"&gt;setq&lt;/span&gt; doom-modeline-indent-info &lt;span class="pl-c1"&gt;nil&lt;/span&gt;)

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt;; If non-nil, only display one number for checker information if applicable.&lt;/span&gt;
(&lt;span class="pl-k"&gt;setq&lt;/span&gt; doom-modeline-checker-simple-format &lt;span class="pl-c1"&gt;t&lt;/span&gt;)

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt;; The maximum number displayed for notifications.&lt;/span&gt;
(&lt;span class="pl-k"&gt;setq&lt;/span&gt; doom-modeline-number-limit &lt;span class="pl-c1"&gt;99&lt;/span&gt;)

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt;; The maximum displayed length of the branch name of version control.&lt;/span&gt;
(&lt;span class="pl-k"&gt;setq&lt;/span&gt; doom-modeline-vcs-max-length &lt;span class="pl-c1"&gt;12&lt;/span&gt;)

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt;; Whether display the perspective name. Non-nil to display in mode-line.&lt;/span&gt;
(&lt;span class="pl-k"&gt;setq&lt;/span&gt; doom-modeline-persp-name &lt;span class="pl-c1"&gt;t&lt;/span&gt;)

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt;; If non nil the default perspective name is displayed in the mode-line.&lt;/span&gt;
(&lt;span class="pl-k"&gt;setq&lt;/span&gt; doom-modeline-display-default-persp-name &lt;span class="pl-c1"&gt;nil&lt;/span&gt;)

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt;; Whether display the &lt;span class="pl-smi"&gt;`lsp'&lt;/span&gt; state. Non-nil to display in mode-line.&lt;/span&gt;
(&lt;span class="pl-k"&gt;setq&lt;/span&gt; doom-modeline-lsp &lt;span class="pl-c1"&gt;t&lt;/span&gt;)

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt;; Whether display the GitHub notifications. It requires &lt;span class="pl-smi"&gt;`ghub'&lt;/span&gt; package.&lt;/span&gt;
(&lt;span class="pl-k"&gt;setq&lt;/span&gt; doom-modeline-github &lt;span class="pl-c1"&gt;nil&lt;/span&gt;)

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt;; The interval of checking GitHub.&lt;/span&gt;
(&lt;span class="pl-k"&gt;setq&lt;/span&gt; doom-modeline-github-interval (&lt;span class="pl-k"&gt;*&lt;/span&gt; &lt;span class="pl-c1"&gt;30&lt;/span&gt; &lt;span class="pl-c1"&gt;60&lt;/span&gt;))

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt;; Whether display the modal state icon.&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt;; Including &lt;span class="pl-smi"&gt;`evil'&lt;/span&gt;, &lt;span class="pl-smi"&gt;`overwrite'&lt;/span&gt;, &lt;span class="pl-smi"&gt;`god'&lt;/span&gt;, &lt;span class="pl-smi"&gt;`ryo'&lt;/span&gt; and &lt;span class="pl-smi"&gt;`xah-fly-keys'&lt;/span&gt;, etc.&lt;/span&gt;
(&lt;span class="pl-k"&gt;setq&lt;/span&gt; doom-modeline-modal-icon &lt;span class="pl-c1"&gt;t&lt;/span&gt;)

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt;; Whether display the mu4e notifications. It requires &lt;span class="pl-smi"&gt;`mu4e-alert'&lt;/span&gt; package.&lt;/span&gt;
(&lt;span class="pl-k"&gt;setq&lt;/span&gt; doom-modeline-mu4e &lt;span class="pl-c1"&gt;nil&lt;/span&gt;)

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt;; Whether display the gnus notifications.&lt;/span&gt;
(&lt;span class="pl-k"&gt;setq&lt;/span&gt; doom-modeline-gnus &lt;span class="pl-c1"&gt;t&lt;/span&gt;)

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt;; Wheter gnus should automatically be updated and how often (set to nil to disable)&lt;/span&gt;
(&lt;span class="pl-k"&gt;setq&lt;/span&gt; doom-modeline-gnus-timer &lt;span class="pl-c1"&gt;2&lt;/span&gt;)

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt;; Whether display the IRC notifications. It requires &lt;span class="pl-smi"&gt;`circe'&lt;/span&gt; or &lt;span class="pl-smi"&gt;`erc'&lt;/span&gt; package.&lt;/span&gt;
(&lt;span class="pl-k"&gt;setq&lt;/span&gt; doom-modeline-irc &lt;span class="pl-c1"&gt;t&lt;/span&gt;)

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt;; Function to stylize the irc buffer names.&lt;/span&gt;
(&lt;span class="pl-k"&gt;setq&lt;/span&gt; doom-modeline-irc-stylize &lt;span class="pl-c1"&gt;'identity&lt;/span&gt;)

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt;; Whether display the environment version.&lt;/span&gt;
(&lt;span class="pl-k"&gt;setq&lt;/span&gt; doom-modeline-env-version &lt;span class="pl-c1"&gt;t&lt;/span&gt;)
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt;; Or for individual languages&lt;/span&gt;
(&lt;span class="pl-k"&gt;setq&lt;/span&gt; doom-modeline-env-enable-python &lt;span class="pl-c1"&gt;t&lt;/span&gt;)
(&lt;span class="pl-k"&gt;setq&lt;/span&gt; doom-modeline-env-enable-ruby &lt;span class="pl-c1"&gt;t&lt;/span&gt;)
(&lt;span class="pl-k"&gt;setq&lt;/span&gt; doom-modeline-env-enable-perl &lt;span class="pl-c1"&gt;t&lt;/span&gt;)
(&lt;span class="pl-k"&gt;setq&lt;/span&gt; doom-modeline-env-enable-go &lt;span class="pl-c1"&gt;t&lt;/span&gt;)
(&lt;span class="pl-k"&gt;setq&lt;/span&gt; doom-modeline-env-enable-elixir &lt;span class="pl-c1"&gt;t&lt;/span&gt;)
(&lt;span class="pl-k"&gt;setq&lt;/span&gt; doom-modeline-env-enable-rust &lt;span class="pl-c1"&gt;t&lt;/span&gt;)

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt;; Change the executables to use for the language version string&lt;/span&gt;
(&lt;span class="pl-k"&gt;setq&lt;/span&gt; doom-modeline-env-python-executable &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;python&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;) &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt; or &lt;span class="pl-smi"&gt;`python-shell-interpreter'&lt;/span&gt;&lt;/span&gt;
(&lt;span class="pl-k"&gt;setq&lt;/span&gt; doom-modeline-env-ruby-executable &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;ruby&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
(&lt;span class="pl-k"&gt;setq&lt;/span&gt; doom-modeline-env-perl-executable &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;perl&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
(&lt;span class="pl-k"&gt;setq&lt;/span&gt; doom-modeline-env-go-executable &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;go&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
(&lt;span class="pl-k"&gt;setq&lt;/span&gt; doom-modeline-env-elixir-executable &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;iex&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
(&lt;span class="pl-k"&gt;setq&lt;/span&gt; doom-modeline-env-rust-executable &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;rustc&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt;; What to dispaly as the version while a new one is being loaded&lt;/span&gt;
(&lt;span class="pl-k"&gt;setq&lt;/span&gt; doom-modeline-env-load-string &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;...&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt;; Hooks that run before/after the modeline version string is updated&lt;/span&gt;
(&lt;span class="pl-k"&gt;setq&lt;/span&gt; doom-modeline-before-update-env-hook &lt;span class="pl-c1"&gt;nil&lt;/span&gt;)
(&lt;span class="pl-k"&gt;setq&lt;/span&gt; doom-modeline-after-update-env-hook &lt;span class="pl-c1"&gt;nil&lt;/span&gt;)&lt;/pre&gt;&lt;/div&gt;
&lt;h2&gt;&lt;a id="user-content-faq" class="anchor" aria-hidden="true" href="#faq"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;FAQ&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;I am experiencing the laggy issue, how to resolve it?&lt;/p&gt;
&lt;p&gt;Add this configuration into your init file:&lt;/p&gt;
&lt;div class="highlight highlight-source-emacs-lisp"&gt;&lt;pre&gt;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt;; Don’t compact font caches during GC.&lt;/span&gt;
(&lt;span class="pl-k"&gt;setq&lt;/span&gt; inhibit-compacting-font-caches &lt;span class="pl-c1"&gt;t&lt;/span&gt;)&lt;/pre&gt;&lt;/div&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;A ridiculous path is displayed on mode-line while visiting a symbolink.&lt;/p&gt;
&lt;p&gt;It's the default behaviors of Vanilla Emacs. If you want to display the real
names, please put this into your init file.&lt;/p&gt;
&lt;div class="highlight highlight-source-emacs-lisp"&gt;&lt;pre&gt;(&lt;span class="pl-k"&gt;setq&lt;/span&gt; find-file-visit-truename &lt;span class="pl-c1"&gt;t&lt;/span&gt;)&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;If the file is controlled by vc, refer to the documentation of
&lt;code&gt;vc-follow-symlinks&lt;/code&gt;.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Can I add my mode-line segments myself? How to do that?&lt;/p&gt;
&lt;p&gt;Of course. Just add the segments into &lt;code&gt;global-mode-string&lt;/code&gt;.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Why doesn't change of branch reflect in modeline?&lt;/p&gt;
&lt;p&gt;Actually it's related to &lt;code&gt;magit&lt;/code&gt; and &lt;code&gt;vc-mode&lt;/code&gt;.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Workaround:
&lt;ul&gt;
&lt;li&gt;Revert the buffers manually.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;(setq auto-revert-check-vc-info t)&lt;/code&gt; brings the performance issue.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Refer to:
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://magit.vc/manual/magit/The-mode_002dline-information-isn_0027t-always-up_002dto_002ddate.html" rel="nofollow"&gt;The mode-line information isn’t always
up-to-date&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/magit/magit/issues/2687"&gt;Maybe provide an alternative to VC's mode-line
information&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;How can I define my own mode-line?&lt;/p&gt;
&lt;p&gt;Use &lt;code&gt;doom-modeline-def-modeline&lt;/code&gt; to define your own mode-line and set it as
default.&lt;/p&gt;
&lt;p&gt;For example:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Define your custom doom-modeline&lt;/li&gt;
&lt;/ul&gt;
&lt;div class="highlight highlight-source-emacs-lisp"&gt;&lt;pre&gt;(doom-modeline-def-modeline &lt;span class="pl-c1"&gt;'my-simple-line&lt;/span&gt;
  '(bar matches buffer-info remote-host buffer-position parrot selection-info)
  '(misc-info minor-modes input-method buffer-encoding major-mode process vcs checker))&lt;/pre&gt;&lt;/div&gt;
&lt;ul&gt;
&lt;li&gt;Set it to default using the &lt;code&gt;doom-modeline-mode-hook&lt;/code&gt;:&lt;/li&gt;
&lt;/ul&gt;
&lt;div class="highlight highlight-source-emacs-lisp"&gt;&lt;pre&gt;(&lt;span class="pl-k"&gt;defun&lt;/span&gt; &lt;span class="pl-e"&gt;setup-custom-doom-modeline&lt;/span&gt; ()
  (doom-modeline-set-modeline &lt;span class="pl-c1"&gt;'my-simple-line&lt;/span&gt; &lt;span class="pl-c1"&gt;'default&lt;/span&gt;))

(&lt;span class="pl-c1"&gt;add-hook&lt;/span&gt; &lt;span class="pl-c1"&gt;'doom-modeline-mode-hook&lt;/span&gt; &lt;span class="pl-c1"&gt;'setup-custom-doom-modeline&lt;/span&gt;)&lt;/pre&gt;&lt;/div&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;How to specify font size in modeline?&lt;/p&gt;
&lt;p&gt;For example:&lt;/p&gt;
&lt;div class="highlight highlight-source-emacs-lisp"&gt;&lt;pre&gt;(&lt;span class="pl-k"&gt;setq&lt;/span&gt; doom-modeline-height &lt;span class="pl-c1"&gt;1&lt;/span&gt;)
(&lt;span class="pl-c1"&gt;set-face-attribute&lt;/span&gt; &lt;span class="pl-c1"&gt;'mode-line&lt;/span&gt; &lt;span class="pl-c1"&gt;nil&lt;/span&gt; &lt;span class="pl-c1"&gt;:height&lt;/span&gt; &lt;span class="pl-c1"&gt;100&lt;/span&gt;)
(&lt;span class="pl-c1"&gt;set-face-attribute&lt;/span&gt; &lt;span class="pl-c1"&gt;'mode-line-inactive&lt;/span&gt; &lt;span class="pl-c1"&gt;nil&lt;/span&gt; &lt;span class="pl-c1"&gt;:height&lt;/span&gt; &lt;span class="pl-c1"&gt;100&lt;/span&gt;)&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;or&lt;/p&gt;
&lt;div class="highlight highlight-source-emacs-lisp"&gt;&lt;pre&gt;(&lt;span class="pl-c1"&gt;custom-set-faces&lt;/span&gt;
  '(&lt;span class="pl-c1"&gt;mode-line&lt;/span&gt; ((&lt;span class="pl-c1"&gt;t&lt;/span&gt; (&lt;span class="pl-c1"&gt;:height&lt;/span&gt; &lt;span class="pl-c1"&gt;0.9&lt;/span&gt;))))
  '(&lt;span class="pl-c1"&gt;mode-line-inactive&lt;/span&gt; ((&lt;span class="pl-c1"&gt;t&lt;/span&gt; (&lt;span class="pl-c1"&gt;:height&lt;/span&gt; &lt;span class="pl-c1"&gt;0.9&lt;/span&gt;)))))&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Please refer to &lt;a href="https://github.com/seagle0128/doom-modeline/issues/189"&gt;#189&lt;/a&gt;.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;How to disable symbolic links expanding in mode-line?&lt;/p&gt;
&lt;p&gt;If you encounter the issue like this&lt;/p&gt;
&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="https://user-images.githubusercontent.com/9449246/62822565-c3f93380-bb74-11e9-95f6-f9c24a6cbd14.png"&gt;&lt;img src="https://user-images.githubusercontent.com/9449246/62822565-c3f93380-bb74-11e9-95f6-f9c24a6cbd14.png" alt="Screenshot" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;please try this setting&lt;/p&gt;
&lt;div class="highlight highlight-source-emacs-lisp"&gt;&lt;pre&gt;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt;; built-in &lt;span class="pl-smi"&gt;`project'&lt;/span&gt; on 26+&lt;/span&gt;
(&lt;span class="pl-k"&gt;setq&lt;/span&gt; doom-modeline-project-detection &lt;span class="pl-c1"&gt;'project&lt;/span&gt;)
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt;; or &lt;span class="pl-smi"&gt;`find-in-project'&lt;/span&gt; if it's installed&lt;/span&gt;
(&lt;span class="pl-k"&gt;setq&lt;/span&gt; doom-modeline-project-detection &lt;span class="pl-c1"&gt;'ffip&lt;/span&gt;)&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;For more details, refer to
&lt;a href="https://github.com/seagle0128/doom-modeline/issues/209"&gt;#209&lt;/a&gt; and
&lt;a href="https://github.com/seagle0128/doom-modeline/issues/224"&gt;#224&lt;/a&gt;.&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h2&gt;&lt;a id="user-content-donate" class="anchor" aria-hidden="true" href="#donate"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Donate&lt;/h2&gt;
&lt;p&gt;If you think it's helpful for you, please consider paying a cup of coffee for
me. Thank you! &lt;g-emoji class="g-emoji" alias="smile" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f604.png"&gt;😄&lt;/g-emoji&gt;&lt;/p&gt;
&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="https://user-images.githubusercontent.com/140797/65818854-44204900-e248-11e9-9cc5-3e6339587cd8.png"&gt;&lt;img src="https://user-images.githubusercontent.com/140797/65818854-44204900-e248-11e9-9cc5-3e6339587cd8.png" alt="Alipay" width="120" style="max-width:100%;"&gt;&lt;/a&gt;
    
&lt;a target="_blank" rel="noopener noreferrer" href="https://user-images.githubusercontent.com/140797/65818844-366ac380-e248-11e9-931c-4bd872d0566b.png"&gt;&lt;img src="https://user-images.githubusercontent.com/140797/65818844-366ac380-e248-11e9-931c-4bd872d0566b.png" alt="Wechat Pay" width="120" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;a href="https://paypal.me/seagle0128" rel="nofollow"&gt;
&lt;img src="https://camo.githubusercontent.com/f3812b749e19f7290b675529697840e7b5f1d0d4/68747470733a2f2f7777772e70617970616c6f626a656374732e636f6d2f6469676974616c6173736574732f632f776562736974652f6d61726b6574696e672f617061632f43322f6c6f676f732d627574746f6e732f6f7074696d697a652f34345f477265795f50617950616c5f50696c6c5f427574746f6e2e706e67" alt="PayPal" width="120" data-canonical-src="https://www.paypalobjects.com/digitalassets/c/website/marketing/apac/C2/logos-buttons/optimize/44_Grey_PayPal_Pill_Button.png" style="max-width:100%;"&gt;
&lt;/a&gt;
    
&lt;a href="https://www.buymeacoffee.com/s9giES1" rel="nofollow"&gt;
&lt;img src="https://camo.githubusercontent.com/be06971baed9105260e0ed5c03746108c30b527f/68747470733a2f2f63646e2e6275796d6561636f666665652e636f6d2f627574746f6e732f64656661756c742d6f72616e67652e706e67" alt="Buy Me A Coffee" width="160" data-canonical-src="https://cdn.buymeacoffee.com/buttons/default-orange.png" style="max-width:100%;"&gt;
&lt;/a&gt;
&lt;/article&gt;&lt;/div&gt;</description><author>seagle0128</author><guid isPermaLink="false">https://github.com/seagle0128/doom-modeline</guid><pubDate>Tue, 11 Feb 2020 00:16:00 GMT</pubDate></item><item><title>joddie/macrostep #17 in Emacs Lisp, This month</title><link>https://github.com/joddie/macrostep</link><description>&lt;p&gt;&lt;i&gt;interactive macro-expander for Emacs&lt;/i&gt;&lt;/p&gt;&lt;div id="readme" class="org" data-path="README.org"&gt;&lt;article class="markdown-body entry-content p-5" itemprop="text"&gt;&lt;h1&gt;&lt;a id="user-content-macrostep-interactive-macro-expander" class="anchor" aria-hidden="true" href="#macrostep-interactive-macro-expander"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;macrostep: interactive macro-expander&lt;/h1&gt;
&lt;p&gt;&lt;code&gt;macrostep&lt;/code&gt; is an Emacs minor mode for interactively stepping
  through the expansion of macros in Emacs Lisp source code.  It lets
  you see exactly what happens at each step of the expansion process
  by pretty-printing the expanded forms inline in the source buffer,
  which is temporarily read-only while macro expansions are visible.
  You can expand and collapse macro forms one step at a time, and
  evaluate or instrument the expansions for debugging with Edebug as
  normal (but see “Bugs and known limitations”, below).
  Single-stepping through the expansion is particularly useful for
  debugging macros that expand into another macro form.  These can be
  difficult to debug with Emacs’ built-in &lt;code&gt;macroexpand&lt;/code&gt;, which
  continues expansion until the top-level form is no longer a macro
  call.&lt;/p&gt;
&lt;p&gt;Both globally-visible macros as defined by &lt;code&gt;defmacro&lt;/code&gt; and local
  macros bound by &lt;code&gt;(cl-)macrolet&lt;/code&gt; or another macro-defining form can
  be expanded.  Within macro expansions, calls to macros and compiler
  macros are fontified specially: macro forms using
  &lt;code&gt;macrostep-macro-face&lt;/code&gt;, and functions with compiler macros using
  &lt;code&gt;macrostep-compiler-macro-face&lt;/code&gt;.  Uninterned symbols (gensyms) are
  fontified based on which step in the expansion created them, to
  distinguish them both from normal symbols and from other gensyms
  with the same print name.&lt;/p&gt;
&lt;p&gt;As of version 0.9, it is also possible to extend &lt;code&gt;macrostep&lt;/code&gt; to
  work with other languages with macro systems in addition to Emacs
  Lisp.  An extension for Common Lisp (via SLIME) is in the works;
  contributions for other languages are welcome.  See “Extending
  macrostep” below for details.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-key-bindings-and-usage" class="anchor" aria-hidden="true" href="#key-bindings-and-usage"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Key-bindings and usage&lt;/h2&gt;
&lt;p&gt;The standard keybindings in &lt;code&gt;macrostep-mode&lt;/code&gt; are the following:&lt;/p&gt;
&lt;dl&gt;
  &lt;dt&gt;e, =, RET&lt;/dt&gt;&lt;dd&gt;expand the macro form following point one step&lt;/dd&gt;
  &lt;dt&gt;c, u, DEL&lt;/dt&gt;&lt;dd&gt;collapse the form following point&lt;/dd&gt;
  &lt;dt&gt;q, C-c C-c&lt;/dt&gt;&lt;dd&gt;collapse all expanded forms and exit macrostep-mode&lt;/dd&gt;
  &lt;dt&gt;n, TAB&lt;/dt&gt;&lt;dd&gt;jump to the next macro form in the expansion&lt;/dd&gt;
  &lt;dt&gt;p, M-TAB&lt;/dt&gt;&lt;dd&gt;jump to the previous macro form in the expansion&lt;/dd&gt;
&lt;/dl&gt;
&lt;p&gt;It’s not very useful to enable and disable macrostep-mode
  directly.  Instead, bind &lt;code&gt;macrostep-expand&lt;/code&gt; to a key in
  &lt;code&gt;emacs-lisp-mode-map&lt;/code&gt;, for example C-c e:&lt;/p&gt;
&lt;div class="highlight highlight-source-emacs-lisp"&gt;&lt;pre&gt;(&lt;span class="pl-c1"&gt;define-key&lt;/span&gt; emacs-lisp-mode-map (&lt;span class="pl-c1"&gt;kbd&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;C-c e&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;) &lt;span class="pl-c1"&gt;'macrostep-expand&lt;/span&gt;)&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;You can then enter macrostep-mode and expand a macro form
  completely by typing &lt;code&gt;C-c e e e ...&lt;/code&gt; as many times as necessary.&lt;/p&gt;
&lt;p&gt;Exit macrostep-mode by typing &lt;code&gt;q&lt;/code&gt; or &lt;code&gt;C-c C-c&lt;/code&gt;, or by successively
  typing &lt;code&gt;c&lt;/code&gt; to collapse all surrounding expansions.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-customization-options" class="anchor" aria-hidden="true" href="#customization-options"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Customization options&lt;/h2&gt;
&lt;p&gt;Type &lt;code&gt;M-x customize-group RET macrostep RET&lt;/code&gt; to customize options
  and faces.&lt;/p&gt;
&lt;p&gt;To display macro expansions in a separate window, instead of inline
  in the source buffer, customize
  &lt;code&gt;macrostep-expand-in-separate-buffer&lt;/code&gt; to &lt;code&gt;t&lt;/code&gt;.  The default is
  &lt;code&gt;nil&lt;/code&gt;.  Whichever default behavior is selected, the alternative
  behavior can be obtained temporarily by giving a prefix argument to
  &lt;code&gt;macrostep-expand&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;To have &lt;code&gt;macrostep&lt;/code&gt; ignore compiler macros, customize
  &lt;code&gt;macrostep-expand-compiler-macros&lt;/code&gt; to &lt;code&gt;nil&lt;/code&gt;.  The default is &lt;code&gt;t&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;Customize the faces &lt;code&gt;macrostep-macro-face&lt;/code&gt;,
  &lt;code&gt;macrostep-compiler-macro-face&lt;/code&gt;, and &lt;code&gt;macrostep-gensym-1&lt;/code&gt; through
  &lt;code&gt;macrostep-gensym-5&lt;/code&gt; to alter the appearance of macro expansions.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-locally-bound-macros" class="anchor" aria-hidden="true" href="#locally-bound-macros"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Locally-bound macros&lt;/h2&gt;
&lt;p&gt;As of version 0.9, &lt;code&gt;macrostep&lt;/code&gt; can expand calls to a locally-bound
  macro, whether defined by a surrounding &lt;code&gt;(cl-)macrolet&lt;/code&gt; form, or by
  another macro-defining macro.  In other words, it is possible to
  expand the inner &lt;code&gt;local-macro&lt;/code&gt; forms in both the following
  examples, whether &lt;code&gt;local-macro&lt;/code&gt; is defined by an enclosing
  &lt;code&gt;cl-macrolet&lt;/code&gt; –&lt;/p&gt;
&lt;div class="highlight highlight-source-emacs-lisp"&gt;&lt;pre&gt;(&lt;span class="pl-c1"&gt;cl-macrolet&lt;/span&gt; ((local-macro (&lt;span class="pl-c1"&gt;&amp;amp;rest&lt;/span&gt; args)
                `(expansion of &lt;span class="pl-c1"&gt;&lt;span class="pl-mi1"&gt;,&lt;/span&gt;args&lt;/span&gt;)))
  (local-macro (do-something)))&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;– or by a macro which expands into &lt;code&gt;cl-macrolet&lt;/code&gt;, provided that
  its definition of macro is evaluated prior to calling
  &lt;code&gt;macrostep-expand&lt;/code&gt;:&lt;/p&gt;
&lt;div class="highlight highlight-source-emacs-lisp"&gt;&lt;pre&gt;(&lt;span class="pl-k"&gt;defmacro&lt;/span&gt; &lt;span class="pl-e"&gt;with-local-macro&lt;/span&gt; (&lt;span class="pl-c1"&gt;&amp;amp;rest&lt;/span&gt; &lt;span class="pl-v"&gt;body&lt;/span&gt;)
  `(&lt;span class="pl-c1"&gt;cl-macrolet&lt;/span&gt; ((local-macro (&lt;span class="pl-c1"&gt;&amp;amp;rest&lt;/span&gt; args)
                   `(expansion of &lt;span class="pl-c1"&gt;&lt;span class="pl-mi1"&gt;,&lt;/span&gt;args&lt;/span&gt;)))
     &lt;span class="pl-c1"&gt;,@body&lt;/span&gt;))

(with-local-macro
    (local-macro (&lt;span class="pl-c1"&gt;do&lt;/span&gt; something (else)))&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;See the &lt;code&gt;with-js&lt;/code&gt; macro in Emacs’s &lt;code&gt;js.el&lt;/code&gt; for a real example of
  the latter kind of macro.&lt;/p&gt;
&lt;p&gt;Expansion of locally-bound macros is implemented by instrumenting
  Emacs Lisp’s macro-expander to capture the environment at point.  A
  similar trick is used to detect macro- and compiler-macro calls
  within expanded text so that they can be fontified accurately.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-expanding-sub-forms" class="anchor" aria-hidden="true" href="#expanding-sub-forms"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Expanding sub-forms&lt;/h2&gt;
&lt;p&gt;By moving point around in the macro expansion using
  &lt;code&gt;macrostep-next-macro&lt;/code&gt; and &lt;code&gt;macrostep-prev-macro&lt;/code&gt; (bound to the &lt;code&gt;n&lt;/code&gt;
  and &lt;code&gt;p&lt;/code&gt; keys), it is possible to expand other macro calls within
  the expansion before expanding the outermost form.  This can
  sometimes be useful, although it does not correspond to the real
  order of macro expansion in Emacs Lisp, which proceeds by fully
  expanding the outer form to a non-macro form before expanding
  sub-forms.&lt;/p&gt;
&lt;p&gt;The main reason to expand sub-forms out of order is to help with
  debugging macros which programmatically expand their arguments in
  order to rewrite them.  Expanding the arguments of such a macro
  lets you visualise what the macro definition would compute via
  &lt;code&gt;macroexpand-all&lt;/code&gt;.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-extending-macrostep-for-other-languages" class="anchor" aria-hidden="true" href="#extending-macrostep-for-other-languages"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Extending macrostep for other languages&lt;/h2&gt;
&lt;p&gt;Since version 0.9, it is possible to extend macrostep to work with
  other languages besides Emacs Lisp.  In typical Emacs fashion, this
  is implemented by setting buffer-local variables to different
  function values.  Six buffer-local variables define the
  language-specific part of the implementation:&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;code&gt;macrostep-sexp-bounds-function&lt;/code&gt;&lt;/li&gt;
  &lt;li&gt;&lt;code&gt;macrostep-sexp-at-point-function&lt;/code&gt;&lt;/li&gt;
  &lt;li&gt;&lt;code&gt;macrostep-environment-at-point-function&lt;/code&gt;&lt;/li&gt;
  &lt;li&gt;&lt;code&gt;macrostep-expand-1-function&lt;/code&gt;&lt;/li&gt;
  &lt;li&gt;&lt;code&gt;macrostep-print-function&lt;/code&gt;&lt;/li&gt;
  &lt;li&gt;&lt;code&gt;macrostep-macro-form-p-function&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Typically, an implementation for another language would set these
  variables in a major-mode hook.  See the docstrings of each
  variable for details on how each one is called and what it should
  return.  At a minimum, another language implementation needs to
  provide &lt;code&gt;macrostep-sexp-at-point-function&lt;/code&gt;,
  &lt;code&gt;macrostep-expand-1-function&lt;/code&gt;, and &lt;code&gt;macrostep-print-function&lt;/code&gt;.
  Lisp-like languages may be able to reuse the default
  &lt;code&gt;macrostep-sexp-bounds-function&lt;/code&gt; if they provide another
  implementation of &lt;code&gt;macrostep-macro-form-p-function&lt;/code&gt;.  Languages
  which do not implement locally-defined macros can set
  &lt;code&gt;macrostep-environment-at-point-function&lt;/code&gt; to &lt;code&gt;ignore&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;Note that the core &lt;code&gt;macrostep&lt;/code&gt; machinery only interprets the return
  value of &lt;code&gt;macrostep-sexp-bounds-function&lt;/code&gt;, so implementations for
  other languages can use any internal representations of code and
  environments which is convenient.  Although the terminology is
  Lisp-specific, there is no reason that implementations could not be
  provided for non-Lisp languages with macro systems, provided there
  is some way of identifying macro calls and calling the compiler /
  preprocessor to obtain their expansions.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-bugs-and-known-limitations" class="anchor" aria-hidden="true" href="#bugs-and-known-limitations"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Bugs and known limitations&lt;/h2&gt;
&lt;p&gt;You can evaluate and edebug macro-expanded forms and step through
  the macro-expanded version, but the form that &lt;code&gt;eval-defun&lt;/code&gt; and
  friends read from the buffer won’t have the uninterned symbols of
  the real macro expansion.  This will probably work OK with CL-style
  gensyms, but may cause problems with &lt;code&gt;make-symbol&lt;/code&gt; symbols if they
  have the same print name as another symbol in the expansion. It’s
  possible that using &lt;code&gt;print-circle&lt;/code&gt; and &lt;code&gt;print-gensym&lt;/code&gt; could get
  around this.&lt;/p&gt;
&lt;p&gt;Please send other bug reports and feature requests to the author.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-acknowledgements" class="anchor" aria-hidden="true" href="#acknowledgements"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Acknowledgements&lt;/h2&gt;
&lt;p&gt;Thanks to:&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;John Wiegley for fixing a bug with the face definitions under
    Emacs 24 &amp;amp; for plugging macrostep in his &lt;a href="http://youtu.be/RvPFZL6NJNQ" rel="nofollow"&gt;EmacsConf presentation&lt;/a&gt;!&lt;/li&gt;
  &lt;li&gt;George Kettleborough for bug reports, and patches to highlight
    the expanded region and properly handle backquotes.&lt;/li&gt;
  &lt;li&gt;Nic Ferrier for suggesting support for local definitions within
    macrolet forms&lt;/li&gt;
  &lt;li&gt;Luís Oliveira for suggesting and implementing SLIME support&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;code&gt;macrostep&lt;/code&gt; was originally inspired by J. V. Toups’s ‘Deep Emacs
  Lisp’ articles (&lt;a href="http://dorophone.blogspot.co.uk/2011/04/deep-emacs-part-1.html" rel="nofollow"&gt;part 1&lt;/a&gt;, &lt;a href="http://dorophone.blogspot.co.uk/2011/04/deep-emacs-lisp-part-2.html" rel="nofollow"&gt;part 2&lt;/a&gt;, &lt;a href="http://dorophone.blogspot.co.uk/2011/05/monadic-parser-combinators-in-elisp.html" rel="nofollow"&gt;screencast&lt;/a&gt;).&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-changelog" class="anchor" aria-hidden="true" href="#changelog"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Changelog&lt;/h2&gt;
&lt;ul&gt;
  &lt;li&gt;v0.9, 2015-10-01:
    &lt;ul&gt;
      &lt;li&gt;separate into Elisp-specific and generic components&lt;/li&gt;
      &lt;li&gt;highlight and expand compiler macros&lt;/li&gt;
      &lt;li&gt;improve local macro expansion and macro form identification by
        instrumenting &lt;code&gt;macroexpand(-all)&lt;/code&gt;&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;v0.8, 2014-05-29: fix a bug with printing the first element of
    lists&lt;/li&gt;
  &lt;li&gt;v0.7, 2014-05-11: expand locally-defined macros within
    &lt;code&gt;(cl-)macrolet&lt;/code&gt; forms&lt;/li&gt;
  &lt;li&gt;v0.6, 2013-05-04: better handling of quote and backquote&lt;/li&gt;
  &lt;li&gt;v0.5, 2013-04-16: highlight region, maintain cleaner buffer state&lt;/li&gt;
  &lt;li&gt;v0.4, 2013-04-07: only enter macrostep-mode on successful
    macro-expansion&lt;/li&gt;
  &lt;li&gt;v0.3, 2012-10-30: print dotted lists correctly. autoload
    definitions.&lt;/li&gt;
&lt;/ul&gt;
&lt;/article&gt;&lt;/div&gt;</description><author>joddie</author><guid isPermaLink="false">https://github.com/joddie/macrostep</guid><pubDate>Tue, 11 Feb 2020 00:17:00 GMT</pubDate></item><item><title>Wilfred/helpful #18 in Emacs Lisp, This month</title><link>https://github.com/Wilfred/helpful</link><description>&lt;p&gt;&lt;i&gt;A better Emacs *help* buffer&lt;/i&gt;&lt;/p&gt;&lt;div id="readme" class="md" data-path="README.md"&gt;&lt;article class="markdown-body entry-content p-5" itemprop="text"&gt;&lt;h1&gt;&lt;a id="user-content-helpful----" class="anchor" aria-hidden="true" href="#helpful----"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Helpful &lt;a href="https://travis-ci.org/Wilfred/helpful" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/27e475ac93f0681dcdf1c69d5465bf8365fc387f/68747470733a2f2f7472617669732d63692e6f72672f57696c667265642f68656c7066756c2e7376673f6272616e63683d6d6173746572" alt="Build Status" data-canonical-src="https://travis-ci.org/Wilfred/helpful.svg?branch=master" style="max-width:100%;"&gt;&lt;/a&gt; &lt;a href="https://coveralls.io/github/Wilfred/helpful?branch=master" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/9ca18518777ac8111c7210ca064b6ae88b55654b/68747470733a2f2f636f766572616c6c732e696f2f7265706f732f6769746875622f57696c667265642f68656c7066756c2f62616467652e7376673f6272616e63683d6d6173746572" alt="Coverage Status" data-canonical-src="https://coveralls.io/repos/github/Wilfred/helpful/badge.svg?branch=master" style="max-width:100%;"&gt;&lt;/a&gt; &lt;a href="http://melpa.org/#/helpful" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/c2c444fd7ea9209b84d331a08c511da9c0335b9e/687474703a2f2f6d656c70612e6f72672f7061636b616765732f68656c7066756c2d62616467652e737667" alt="MELPA" data-canonical-src="http://melpa.org/packages/helpful-badge.svg" style="max-width:100%;"&gt;&lt;/a&gt; &lt;a href="https://github.com/Aaronepower/tokei"&gt;&lt;img src="https://camo.githubusercontent.com/9f86e527d27e0ebd83f15f62fbe8081501126739/68747470733a2f2f746f6b65692e72732f62312f6769746875622f77696c667265642f68656c7066756c" alt="" data-canonical-src="https://tokei.rs/b1/github/wilfred/helpful" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/h1&gt;
&lt;p&gt;Helpful is an alternative to the built-in Emacs help that provides
much more contextual information.&lt;/p&gt;
&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="screenshots/helpful.png"&gt;&lt;img src="screenshots/helpful.png" alt="screenshot" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-usage" class="anchor" aria-hidden="true" href="#usage"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Usage&lt;/h2&gt;
&lt;p&gt;Install from MELPA, then call one of the following commands:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;helpful-callable&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;helpful-function&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;helpful-macro&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;helpful-command&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;helpful-key&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;helpful-variable&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;helpful-at-point&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;If you want to replace the default Emacs help keybindings, you can do
so:&lt;/p&gt;
&lt;div class="highlight highlight-source-emacs-lisp"&gt;&lt;pre&gt;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt;; Note that the built-in &lt;span class="pl-smi"&gt;`describe-function'&lt;/span&gt; includes both functions&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt;; and macros. &lt;span class="pl-smi"&gt;`helpful-function'&lt;/span&gt; is functions only, so we provide&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt;; &lt;span class="pl-smi"&gt;`helpful-callable'&lt;/span&gt; as a drop-in replacement.&lt;/span&gt;
(&lt;span class="pl-c1"&gt;global-set-key&lt;/span&gt; (&lt;span class="pl-c1"&gt;kbd&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;C-h f&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;) &lt;span class="pl-c1"&gt;#&lt;span class="pl-c1"&gt;'helpful-callable&lt;/span&gt;&lt;/span&gt;)

(&lt;span class="pl-c1"&gt;global-set-key&lt;/span&gt; (&lt;span class="pl-c1"&gt;kbd&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;C-h v&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;) &lt;span class="pl-c1"&gt;#&lt;span class="pl-c1"&gt;'helpful-variable&lt;/span&gt;&lt;/span&gt;)
(&lt;span class="pl-c1"&gt;global-set-key&lt;/span&gt; (&lt;span class="pl-c1"&gt;kbd&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;C-h k&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;) &lt;span class="pl-c1"&gt;#&lt;span class="pl-c1"&gt;'helpful-key&lt;/span&gt;&lt;/span&gt;)&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;I also recommend the following keybindings to get the most out of
helpful:&lt;/p&gt;
&lt;div class="highlight highlight-source-emacs-lisp"&gt;&lt;pre&gt;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt;; Lookup the current symbol at point. C-c C-d is a common keybinding&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt;; for this in lisp modes.&lt;/span&gt;
(&lt;span class="pl-c1"&gt;global-set-key&lt;/span&gt; (&lt;span class="pl-c1"&gt;kbd&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;C-c C-d&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;) &lt;span class="pl-c1"&gt;#&lt;span class="pl-c1"&gt;'helpful-at-point&lt;/span&gt;&lt;/span&gt;)

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt;; Look up *F*unctions (excludes macros).&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt;;&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt;; By default, C-h F is bound to &lt;span class="pl-smi"&gt;`Info-goto-emacs-command-node'&lt;/span&gt;. Helpful&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt;; already links to the manual, if a function is referenced there.&lt;/span&gt;
(&lt;span class="pl-c1"&gt;global-set-key&lt;/span&gt; (&lt;span class="pl-c1"&gt;kbd&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;C-h F&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;) &lt;span class="pl-c1"&gt;#&lt;span class="pl-c1"&gt;'helpful-function&lt;/span&gt;&lt;/span&gt;)

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt;; Look up *C*ommands.&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt;;&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt;; By default, C-h C is bound to describe &lt;span class="pl-smi"&gt;`describe-coding-system'&lt;/span&gt;. I&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt;; don't find this very useful, but it's frequently useful to only&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt;; look at interactive functions.&lt;/span&gt;
(&lt;span class="pl-c1"&gt;global-set-key&lt;/span&gt; (&lt;span class="pl-c1"&gt;kbd&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;C-h C&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;) &lt;span class="pl-c1"&gt;#&lt;span class="pl-c1"&gt;'helpful-command&lt;/span&gt;&lt;/span&gt;)&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;a href="https://github.com/abo-abo/swiper"&gt;Ivy&lt;/a&gt; users can use Helpful with
counsel commands:&lt;/p&gt;
&lt;div class="highlight highlight-source-emacs-lisp"&gt;&lt;pre&gt;(&lt;span class="pl-k"&gt;setq&lt;/span&gt; counsel-describe-function-function &lt;span class="pl-c1"&gt;#&lt;span class="pl-c1"&gt;'helpful-callable&lt;/span&gt;&lt;/span&gt;)
(&lt;span class="pl-k"&gt;setq&lt;/span&gt; counsel-describe-variable-function &lt;span class="pl-c1"&gt;#&lt;span class="pl-c1"&gt;'helpful-variable&lt;/span&gt;&lt;/span&gt;)&lt;/pre&gt;&lt;/div&gt;
&lt;h2&gt;&lt;a id="user-content-features" class="anchor" aria-hidden="true" href="#features"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Features&lt;/h2&gt;
&lt;h3&gt;&lt;a id="user-content-source-code" class="anchor" aria-hidden="true" href="#source-code"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Source code&lt;/h3&gt;
&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="screenshots/helpful_source.png"&gt;&lt;img src="screenshots/helpful_source.png" alt="screenshot" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Helpful will try really hard to show the source code. It shows the
source code for interactively defined functions (unlike the built-in
Help) and falls back to the raw sexp if no source is available.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-view-callers" class="anchor" aria-hidden="true" href="#view-callers"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;View Callers&lt;/h3&gt;
&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="screenshots/helpful_refs.png"&gt;&lt;img src="screenshots/helpful_refs.png" alt="screenshot" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Helpful will show you where a function is being called!&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-prettier-docstrings" class="anchor" aria-hidden="true" href="#prettier-docstrings"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Prettier Docstrings&lt;/h3&gt;
&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="screenshots/helpful_docstring.png"&gt;&lt;img src="screenshots/helpful_docstring.png" alt="screenshot" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Docstrings in helpful:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Highlight the summary (the first sentence)&lt;/li&gt;
&lt;li&gt;Include cross-references to other functions/variables&lt;/li&gt;
&lt;li&gt;Linkify references to Info nodes&lt;/li&gt;
&lt;li&gt;Hide superfluous punctuation&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="screenshots/helpful_view_in_manual.png"&gt;&lt;img src="screenshots/helpful_view_in_manual.png" alt="screenshot" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;If a symbol is also documented in the Info manual, helpful will
provide a link to the relevant section too.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-symbol-properties" class="anchor" aria-hidden="true" href="#symbol-properties"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Symbol Properties&lt;/h3&gt;
&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="screenshots/helpful_props.png"&gt;&lt;img src="screenshots/helpful_props.png" alt="screenshot" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Helpful will show you the properties that have been applied to the
current symbol. This provides visibility of features
like edebug or byte-code optimisation.&lt;/p&gt;
&lt;p&gt;Helpful will also highlight any symbol aliases.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-describe-commands" class="anchor" aria-hidden="true" href="#describe-commands"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Describe Commands&lt;/h3&gt;
&lt;p&gt;Helpful provides a separate &lt;code&gt;helpful-command&lt;/code&gt; function, for when you
just want to view interactive functions.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-view-keymaps" class="anchor" aria-hidden="true" href="#view-keymaps"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;View Keymaps&lt;/h3&gt;
&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="screenshots/helpful_bindings.png"&gt;&lt;img src="screenshots/helpful_bindings.png" alt="screenshot" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Helpful displays any keybindings that apply to interactive functions.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-integrated-tooling" class="anchor" aria-hidden="true" href="#integrated-tooling"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Integrated Tooling&lt;/h3&gt;
&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="screenshots/helpful_tools.png"&gt;&lt;img src="screenshots/helpful_tools.png" alt="screenshot" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;You can trace, debug or disassemble functions from inside
Helpful. This is discoverable and doesn't require memorisation of
commands.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-aliases" class="anchor" aria-hidden="true" href="#aliases"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Aliases&lt;/h3&gt;
&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="screenshots/helpful_aliases.png"&gt;&lt;img src="screenshots/helpful_aliases.png" alt="screenshot" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;If a function has multiple aliases in Emacs, Helpful will show all of
the aliases defined.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-inspirations" class="anchor" aria-hidden="true" href="#inspirations"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Inspirations&lt;/h2&gt;
&lt;p&gt;This project has been heavily influenced by:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.emacswiki.org/emacs/help+.el" rel="nofollow"&gt;help+.el&lt;/a&gt;, help-fns+.el, help-mode+.el&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=pQQTScuApWk" rel="nofollow"&gt;Dave Williams' demo of Lucid's Energize&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-license" class="anchor" aria-hidden="true" href="#license"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;License&lt;/h2&gt;
&lt;p&gt;GPLv3+.&lt;/p&gt;
&lt;p&gt;I am providing code in the repository to you under an open source
license. Because this is my personal repository, the license you
receive to my code is from me and not my employer.&lt;/p&gt;
&lt;/article&gt;&lt;/div&gt;</description><author>Wilfred</author><guid isPermaLink="false">https://github.com/Wilfred/helpful</guid><pubDate>Tue, 11 Feb 2020 00:18:00 GMT</pubDate></item><item><title>joshwnj/json-mode #19 in Emacs Lisp, This month</title><link>https://github.com/joshwnj/json-mode</link><description>&lt;p&gt;&lt;i&gt;Major mode for editing JSON files with emacs&lt;/i&gt;&lt;/p&gt;&lt;div id="readme" class="md" data-path="README.md"&gt;&lt;article class="markdown-body entry-content p-5" itemprop="text"&gt;&lt;h1&gt;&lt;a id="user-content-json-modeel" class="anchor" aria-hidden="true" href="#json-modeel"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;json-mode.el&lt;/h1&gt;
&lt;p&gt;Major mode for editing JSON files.&lt;/p&gt;
&lt;p&gt;Extends the builtin js-mode to add better syntax highlighting for JSON
and some nice editing keybindings.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-install" class="anchor" aria-hidden="true" href="#install"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Install&lt;/h2&gt;
&lt;pre&gt;&lt;code&gt;M-x package-install json-mode
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;You need to have the &lt;a href="https://melpa.org/" rel="nofollow"&gt;MELPA repository&lt;/a&gt; or &lt;a href="https://stable.melpa.org/" rel="nofollow"&gt;MELPA Stable repository&lt;/a&gt; enabled in emacs for this to work.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-default-keybindings" class="anchor" aria-hidden="true" href="#default-keybindings"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Default Keybindings&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;C-c C-f&lt;/code&gt;: format the region/buffer with &lt;code&gt;json-reformat&lt;/code&gt; (&lt;a href="https://github.com/gongo/json-reformat"&gt;https://github.com/gongo/json-reformat&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;code&gt;C-c C-p&lt;/code&gt;: display a path to the object at point with &lt;code&gt;json-snatcher&lt;/code&gt; (&lt;a href="https://github.com/Sterlingg/json-snatcher"&gt;https://github.com/Sterlingg/json-snatcher&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;code&gt;C-c P&lt;/code&gt;: copy a path to the object at point to the kill ring with &lt;code&gt;json-snatcher&lt;/code&gt; (&lt;a href="https://github.com/Sterlingg/json-snatcher"&gt;https://github.com/Sterlingg/json-snatcher&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;code&gt;C-c C-t&lt;/code&gt;: Toggle between &lt;code&gt;true&lt;/code&gt; and &lt;code&gt;false&lt;/code&gt; at point&lt;/li&gt;
&lt;li&gt;&lt;code&gt;C-c C-k&lt;/code&gt;: Replace the sexp at point with &lt;code&gt;null&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;C-c C-i&lt;/code&gt;: Increment the number at point&lt;/li&gt;
&lt;li&gt;&lt;code&gt;C-c C-d&lt;/code&gt;: Decrement the number at point&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-indent-width" class="anchor" aria-hidden="true" href="#indent-width"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Indent Width&lt;/h2&gt;
&lt;p&gt;See &lt;a href="https://github.com/gongo/json-reformat#configuration"&gt;https://github.com/gongo/json-reformat#configuration&lt;/a&gt; for details on setting the indent width.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-license" class="anchor" aria-hidden="true" href="#license"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;License&lt;/h2&gt;
&lt;p&gt;This program is free software; you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation, either version 3 of the License, or (at your option) any later version.&lt;/p&gt;
&lt;p&gt;This program is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU General Public License for more details.&lt;/p&gt;
&lt;p&gt;You should have received a copy of the GNU General Public License along with this program. If not, see &lt;a href="http://www.gnu.org/licenses/" rel="nofollow"&gt;http://www.gnu.org/licenses/&lt;/a&gt;.&lt;/p&gt;
&lt;/article&gt;&lt;/div&gt;</description><author>joshwnj</author><guid isPermaLink="false">https://github.com/joshwnj/json-mode</guid><pubDate>Tue, 11 Feb 2020 00:19:00 GMT</pubDate></item><item><title>Fuco1/smartparens #20 in Emacs Lisp, This month</title><link>https://github.com/Fuco1/smartparens</link><description>&lt;p&gt;&lt;i&gt;Minor mode for Emacs that deals with parens pairs and tries to be smart about it.&lt;/i&gt;&lt;/p&gt;&lt;div id="readme" class="md" data-path="README.md"&gt;&lt;article class="markdown-body entry-content p-5" itemprop="text"&gt;&lt;h1&gt;&lt;a id="user-content-smartparens" class="anchor" aria-hidden="true" href="#smartparens"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Smartparens&lt;/h1&gt;
&lt;p&gt;&lt;a href="https://gitter.im/smartparens/Lobby?utm_source=badge&amp;amp;utm_medium=badge&amp;amp;utm_campaign=pr-badge&amp;amp;utm_content=badge" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/d08add002d119601f7a6345befd6d45953420188/68747470733a2f2f6261646765732e6769747465722e696d2f736d617274706172656e732f4c6f6262792e737667" alt="Join the chat at https://gitter.im/smartparens/Lobby" data-canonical-src="https://badges.gitter.im/smartparens/Lobby.svg" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="http://melpa.org/#/smartparens" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/45b968f4bf2700559d44346e0bda2063ec1c946a/687474703a2f2f6d656c70612e6f72672f7061636b616765732f736d617274706172656e732d62616467652e737667" alt="MELPA" data-canonical-src="http://melpa.org/packages/smartparens-badge.svg" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="http://smartparens.readthedocs.io/en/latest/?badge=latest" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/4be3ddd2be833601a7cb2aaa99bfbfca560ae159/68747470733a2f2f72656164746865646f63732e6f72672f70726f6a656374732f736d617274706172656e732f62616467652f3f76657273696f6e3d6c6174657374" alt="Documentation Status" data-canonical-src="https://readthedocs.org/projects/smartparens/badge/?version=latest" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="http://stable.melpa.org/#/smartparens" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/e18d0cbd04a18fa0be604c495020e2d4d835967d/687474703a2f2f737461626c652e6d656c70612e6f72672f7061636b616765732f736d617274706172656e732d62616467652e737667" alt="MELPA Stable" data-canonical-src="http://stable.melpa.org/packages/smartparens-badge.svg" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="http://smartparens.readthedocs.io/en/latest/?badge=stable" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/3a78473ebedd7f3035057062d5d1397d0c3bbc71/68747470733a2f2f72656164746865646f63732e6f72672f70726f6a656374732f736d617274706172656e732f62616467652f3f76657273696f6e3d737461626c65" alt="Documentation Status" data-canonical-src="https://readthedocs.org/projects/smartparens/badge/?version=stable" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://travis-ci.org/Fuco1/smartparens" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/3822b0fd20ce9b8c0d75add64a7b659acc1ded84/68747470733a2f2f7472617669732d63692e6f72672f4675636f312f736d617274706172656e732e706e673f6272616e63683d6d6173746572" alt="Build Status" data-canonical-src="https://travis-ci.org/Fuco1/smartparens.png?branch=master" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://coveralls.io/github/Fuco1/smartparens" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/483c32a82306fbba74d8c26394c01016d3280a68/68747470733a2f2f636f766572616c6c732e696f2f7265706f732f6769746875622f4675636f312f736d617274706172656e732f62616467652e737667" alt="Coverage Status" data-canonical-src="https://coveralls.io/repos/github/Fuco1/smartparens/badge.svg" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://www.paypal.com/cgi-bin/webscr?cmd=_s-xclick&amp;amp;hosted_button_id=A5PMGVKCQBT88" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/bce14c8e2e39ba0464551b34602b4c60c182526b/68747470733a2f2f7777772e70617970616c6f626a656374732e636f6d2f656e5f55532f692f62746e2f62746e5f646f6e6174655f4c472e676966" alt="Paypal logo" data-canonical-src="https://www.paypalobjects.com/en_US/i/btn/btn_donate_LG.gif" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://www.patreon.com/user?u=3282358&amp;amp;ty=h" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/b2f1ffbe2a7180fd71d0ec398f9b27f7bb942fc8/68747470733a2f2f63352e70617472656f6e2e636f6d2f65787465726e616c2f6c6f676f2f6c6f676f6d61726b4f72616e67652e737667" alt="Patreon" data-canonical-src="https://c5.patreon.com/external/logo/logomarkOrange.svg" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Table of Contents&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="#smartparens"&gt;Smartparens&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="#getting-started"&gt;Getting Started&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#usage"&gt;Usage&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#contributing"&gt;Contributing&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="#language-support"&gt;Language Support&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="#supporting-smartparens"&gt;Supporting Smartparens&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#related-projects"&gt;Related Projects&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Smartparens is a minor mode for dealing with pairs in Emacs.&lt;/p&gt;
&lt;p&gt;It can automatically insert pairs:&lt;/p&gt;
&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="images/smartparens-insert.gif"&gt;&lt;img src="images/smartparens-insert.gif" alt="smartparens insert" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;wrap, unwrap and rewrap pairs:&lt;/p&gt;
&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="images/smartparens-wrap.gif"&gt;&lt;img src="images/smartparens-wrap.gif" alt="smartparens wrapping" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;expand and contract pairs:&lt;/p&gt;
&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="images/smartparens-slurp.gif"&gt;&lt;img src="images/smartparens-slurp.gif" alt="smartparens slurping" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;navigate pairs:&lt;/p&gt;
&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="images/smartparens-navigate.gif"&gt;&lt;img src="images/smartparens-navigate.gif" alt="smartparens navigating" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;and much more!&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-getting-started" class="anchor" aria-hidden="true" href="#getting-started"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Getting Started&lt;/h2&gt;
&lt;p&gt;We generally target GNU Emacs version 24.3 and newer, however,
everything should work mostly fine on anything newer than version 24.&lt;/p&gt;
&lt;p&gt;You can install smartparens from &lt;a href="http://melpa.org/" rel="nofollow"&gt;MELPA&lt;/a&gt;.  Once
installed, enable the &lt;a href="https://github.com/Fuco1/smartparens/wiki/Default-configuration"&gt;default configuration&lt;/a&gt;:&lt;/p&gt;
&lt;div class="highlight highlight-source-emacs-lisp"&gt;&lt;pre&gt;(&lt;span class="pl-c1"&gt;require&lt;/span&gt; &lt;span class="pl-c1"&gt;'smartparens-config&lt;/span&gt;)&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;You can now use smartparens with &lt;code&gt;M-x smartparens-mode&lt;/code&gt;. To
automatically enable smartparens in a programming mode:&lt;/p&gt;
&lt;div class="highlight highlight-source-emacs-lisp"&gt;&lt;pre&gt;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt;; Always start smartparens mode in js-mode.&lt;/span&gt;
(&lt;span class="pl-c1"&gt;add-hook&lt;/span&gt; &lt;span class="pl-c1"&gt;'js-mode-hook&lt;/span&gt; &lt;span class="pl-c1"&gt;#&lt;span class="pl-c1"&gt;'smartparens-mode&lt;/span&gt;&lt;/span&gt;)&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;You may want to try &lt;code&gt;smartparens-strict-mode&lt;/code&gt;. This enforces that
pairs are always balanced, so commands like &lt;code&gt;kill-line&lt;/code&gt; keep your code
well-formed.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-usage" class="anchor" aria-hidden="true" href="#usage"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Usage&lt;/h2&gt;
&lt;p&gt;Inside Emacs, &lt;code&gt;M-x sp-cheat-sheet&lt;/code&gt; will show you all the commands
available, with examples.&lt;/p&gt;
&lt;p&gt;There's also a
&lt;a href="http://ebzzry.io/en/emacs-pairs/" rel="nofollow"&gt;great article demonstrating movement and editing in smartparens&lt;/a&gt;
and &lt;a href="https://github.com/Fuco1/smartparens/wiki"&gt;extensive documentation in the wiki&lt;/a&gt;.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-contributing" class="anchor" aria-hidden="true" href="#contributing"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Contributing&lt;/h2&gt;
&lt;p&gt;We love pull requests. Please include tests. Smartparens uses
&lt;a href="https://github.com/rejeep/ert-runner.el"&gt;ert-runner&lt;/a&gt; for testing. To
run all the tests, run:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;$ cask exec ert-runner
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Alternatively, you can open the individual files in Emacs, then
&lt;code&gt;M-x eval-buffer&lt;/code&gt; &lt;code&gt;M-x ert&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;You can learn more about how we test on the &lt;a href="https://github.com/Fuco1/smartparens/wiki/Testing"&gt;testing&lt;/a&gt; wiki page.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-language-support" class="anchor" aria-hidden="true" href="#language-support"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Language Support&lt;/h3&gt;
&lt;p&gt;Smartparens has a default configuration that works well for most
languages. For language-specific behaviour, smartparens has a separate
&lt;code&gt;smartparens-FOO.el&lt;/code&gt; file for every language and
&lt;code&gt;smartparens-config.el&lt;/code&gt; loads these automatically.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-supporting-smartparens" class="anchor" aria-hidden="true" href="#supporting-smartparens"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Supporting Smartparens&lt;/h2&gt;
&lt;p&gt;If you want to support this project, you can:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Contribute code. If you have an idea that is not yet implemented and
will benefit this project, feel free to implement it and submit a
pull request. If you have any concerns whether your contribution
will be accepted, ask beforehand. You can email the author or
&lt;a href="https://github.com/Fuco1/smartparens/issues/new"&gt;start an issue&lt;/a&gt; on
the tracker.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Contribute ideas. Even if you can't code Emacs Lisp, you can still
contribute valuable ideas for other programmers to implement. Simply
&lt;a href="https://github.com/Fuco1/smartparens/issues/new"&gt;start new issue&lt;/a&gt;
on the tracker and submit your suggestion.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;You can make a financial donation through
&lt;a href="https://www.paypal.com/cgi-bin/webscr?cmd=_s-xclick&amp;amp;hosted_button_id=A5PMGVKCQBT88" rel="nofollow"&gt;PayPal&lt;/a&gt;
or &lt;a href="https://www.patreon.com/user?u=3282358&amp;amp;ty=h" rel="nofollow"&gt;Patreon&lt;/a&gt;.  If you
like smartparens and can spare a modest amount on a donation, feel
free to do so.  These donations are expressions of your gratitude
and are used for my personal "rewards" (books, games, music etc.).
You can also gift me a game on
&lt;a href="http://steamcommunity.com/profiles/76561198265034071/wishlist" rel="nofollow"&gt;Steam&lt;/a&gt;
or buy something on
&lt;a href="http://www.amazon.com/gp/registry/wishlist/2I8DOQH8OZEUR" rel="nofollow"&gt;Amazon&lt;/a&gt;.
Regardless of the donations, smartparens will always be free both as
in beer and as in speech.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-related-projects" class="anchor" aria-hidden="true" href="#related-projects"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Related Projects&lt;/h2&gt;
&lt;p&gt;Other Emacs projects that deal with pairs include:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/capitaomorte/autopair"&gt;autopair&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://code.google.com/p/emacs-textmate/" rel="nofollow"&gt;textmate&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rejeep/wrap-region"&gt;wrap-region&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://www.emacswiki.org/emacs/ElectricPair" rel="nofollow"&gt;electric-pair-mode&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://emacswiki.org/emacs/ParEdit" rel="nofollow"&gt;paredit&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Smartparens aims to provide a superset of these features, in all
programming languages.&lt;/p&gt;
&lt;/article&gt;&lt;/div&gt;</description><author>Fuco1</author><guid isPermaLink="false">https://github.com/Fuco1/smartparens</guid><pubDate>Tue, 11 Feb 2020 00:20:00 GMT</pubDate></item><item><title>tarsius/hl-todo #21 in Emacs Lisp, This month</title><link>https://github.com/tarsius/hl-todo</link><description>&lt;p&gt;&lt;i&gt;Highlight TODO keywords&lt;/i&gt;&lt;/p&gt;&lt;div id="readme" class="md" data-path="README.md"&gt;&lt;article class="markdown-body entry-content p-5" itemprop="text"&gt;&lt;h2&gt;&lt;a id="user-content-highlight-todo-and-similar-keywords-in-comments-and-strings" class="anchor" aria-hidden="true" href="#highlight-todo-and-similar-keywords-in-comments-and-strings"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Highlight TODO and similar keywords in comments and strings&lt;/h2&gt;
&lt;p&gt;To highlight keywords turn on &lt;code&gt;hl-todo-mode&lt;/code&gt; in individual buffers
or use the the global variant &lt;code&gt;global-hl-todo-mode&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;You can customize the keywords that are recognized by customizing
&lt;code&gt;hl-todo-keyword-faces&lt;/code&gt; either through the customization interface
or by setting the variable directly in your init file, for example:&lt;/p&gt;
&lt;div class="highlight highlight-source-emacs-lisp"&gt;&lt;pre&gt;(&lt;span class="pl-k"&gt;setq&lt;/span&gt; hl-todo-keyword-faces
      '((&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;TODO&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;   &lt;span class="pl-k"&gt;.&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;#FF0000&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
        (&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;FIXME&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;  &lt;span class="pl-k"&gt;.&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;#FF0000&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
        (&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;DEBUG&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;  &lt;span class="pl-k"&gt;.&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;#A020F0&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
        (&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;GOTCHA&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; &lt;span class="pl-k"&gt;.&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;#FF4500&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
        (&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;STUB&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;   &lt;span class="pl-k"&gt;.&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;#1E90FF&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)))&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;This package also provides commands for moving to the next or
previous keyword, to invoke &lt;code&gt;occur&lt;/code&gt; with a regexp that matches all
known keywords, and to insert a keyword.  If you want to use these
commands, then you should bind them in &lt;code&gt;hl-todo-mode-map&lt;/code&gt;, e.g.:&lt;/p&gt;
&lt;div class="highlight highlight-source-emacs-lisp"&gt;&lt;pre&gt;(&lt;span class="pl-c1"&gt;define-key&lt;/span&gt; hl-todo-mode-map (&lt;span class="pl-c1"&gt;kbd&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;C-c p&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;) &lt;span class="pl-c1"&gt;'hl-todo-previous&lt;/span&gt;)
(&lt;span class="pl-c1"&gt;define-key&lt;/span&gt; hl-todo-mode-map (&lt;span class="pl-c1"&gt;kbd&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;C-c n&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;) &lt;span class="pl-c1"&gt;'hl-todo-next&lt;/span&gt;)
(&lt;span class="pl-c1"&gt;define-key&lt;/span&gt; hl-todo-mode-map (&lt;span class="pl-c1"&gt;kbd&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;C-c o&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;) &lt;span class="pl-c1"&gt;'hl-todo-occur&lt;/span&gt;)
(&lt;span class="pl-c1"&gt;define-key&lt;/span&gt; hl-todo-mode-map (&lt;span class="pl-c1"&gt;kbd&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;C-c i&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;) &lt;span class="pl-c1"&gt;'hl-todo-insert&lt;/span&gt;)&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;See &lt;a href="https://www.emacswiki.org/emacs/FixmeMode" rel="nofollow"&gt;this list&lt;/a&gt; on the
Emacswiki for other packages that implement the same basic features,
but which might also provide additional features that you might like,
but which I don't deem necessary.&lt;/p&gt;
&lt;/article&gt;&lt;/div&gt;</description><author>tarsius</author><guid isPermaLink="false">https://github.com/tarsius/hl-todo</guid><pubDate>Tue, 11 Feb 2020 00:21:00 GMT</pubDate></item><item><title>alphapapa/magit-todos #22 in Emacs Lisp, This month</title><link>https://github.com/alphapapa/magit-todos</link><description>&lt;p&gt;&lt;i&gt;Show source files' TODOs (and FIXMEs, etc) in Magit status buffer&lt;/i&gt;&lt;/p&gt;&lt;div id="readme" class="org" data-path="README.org"&gt;&lt;article class="markdown-body entry-content p-5" itemprop="text"&gt;&lt;a href="https://alphapapa.github.io/dont-tread-on-emacs/" rel="nofollow"&gt;&lt;img src="dont-tread-on-emacs-150.png" align="right" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;h1&gt;&lt;a id="user-content-magit-todos" class="anchor" aria-hidden="true" href="#magit-todos"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;magit-todos&lt;/h1&gt;
&lt;p&gt;&lt;a href="https://melpa.org/#/magit-todos" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/421defdc996993c177c013db38773ad5c9631086/68747470733a2f2f6d656c70612e6f72672f7061636b616765732f6d616769742d746f646f732d62616467652e737667" alt="https://melpa.org/packages/magit-todos-badge.svg" data-canonical-src="https://melpa.org/packages/magit-todos-badge.svg" style="max-width:100%;"&gt;&lt;/a&gt; &lt;a href="https://stable.melpa.org/#/magit-todos" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/7fbc303366753c06b9a7bdd6a1d4a666fd62443f/68747470733a2f2f737461626c652e6d656c70612e6f72672f7061636b616765732f6d616769742d746f646f732d62616467652e737667" alt="https://stable.melpa.org/packages/magit-todos-badge.svg" data-canonical-src="https://stable.melpa.org/packages/magit-todos-badge.svg" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;This package displays keyword entries from source code comments and Org files in the Magit status buffer.  Activating an item jumps to it in its file.  By default, it uses keywords from &lt;a href="https://github.com/tarsius/hl-todo"&gt;hl-todo&lt;/a&gt;, minus a few (like &lt;code&gt;NOTE&lt;/code&gt;).&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-contents" class="anchor" aria-hidden="true" href="#contents"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Contents&lt;/h2&gt;
  &lt;ul&gt;
    &lt;li&gt;&lt;a href="#screenshots"&gt;Screenshots&lt;/a&gt;&lt;/li&gt;
    &lt;li&gt;&lt;a href="#installation"&gt;Installation&lt;/a&gt;&lt;/li&gt;
    &lt;li&gt;&lt;a href="#usage"&gt;Usage&lt;/a&gt;&lt;/li&gt;
    &lt;li&gt;&lt;a href="#changelog"&gt;Changelog&lt;/a&gt;&lt;/li&gt;
    &lt;li&gt;&lt;a href="#credits"&gt;Credits&lt;/a&gt;&lt;/li&gt;
  &lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-screenshots" class="anchor" aria-hidden="true" href="#screenshots"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Screenshots&lt;/h2&gt;
&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="screenshots/matrix.png"&gt;&lt;img src="screenshots/matrix.png" alt="screenshots/matrix.png" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Items from Org files can be displayed, and can be fontified like in Org buffers:&lt;/p&gt;
&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="screenshots/fancy-org.png"&gt;&lt;img src="screenshots/fancy-org.png" alt="screenshots/fancy-org.png" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Items can also be automatically grouped in a customizable way, which can be helpful in large repos:&lt;/p&gt;
&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="screenshots/emacs-grouped.png"&gt;&lt;img src="screenshots/emacs-grouped.png" alt="screenshots/emacs-grouped.png" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;This shows grouping items by the first path component, then keyword, then filename, and with optional keyword header fontification:&lt;/p&gt;
&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="screenshots/emacs-grouped-by-path.png"&gt;&lt;img src="screenshots/emacs-grouped-by-path.png" alt="screenshots/emacs-grouped-by-path.png" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Items in &lt;code&gt;KEYWORD(username):&lt;/code&gt; format are also read:&lt;/p&gt;
&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="screenshots/thiderman.png"&gt;&lt;img src="screenshots/thiderman.png" alt="screenshots/thiderman.png" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Items specific to the current branch (or &lt;code&gt;git diff&lt;/code&gt;) can be displayed in a separate list:&lt;/p&gt;
&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="screenshots/branch-list.png"&gt;&lt;img src="screenshots/branch-list.png" alt="screenshots/branch-list.png" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-installation" class="anchor" aria-hidden="true" href="#installation"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Installation&lt;/h2&gt;
&lt;h3&gt;&lt;a id="user-content-external-scanner" class="anchor" aria-hidden="true" href="#external-scanner"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;External scanner&lt;/h3&gt;
&lt;p&gt;One of the following external scanners is required:&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;a href="https://github.com/BurntSushi/ripgrep"&gt;ripgrep&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;code&gt;git grep&lt;/code&gt; (built with PCRE support)&lt;/li&gt;
  &lt;li&gt;GNU &lt;code&gt;grep&lt;/code&gt; (built with PCRE support)&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Most Linux systems should have the latter two by default, but some non-standard systems may not.  For example, on MacOS you may use &lt;a href="https://brew.sh/" rel="nofollow"&gt;Homebrew&lt;/a&gt; to install &lt;code&gt;ripgrep&lt;/code&gt;, or &lt;code&gt;git&lt;/code&gt; with PCRE support, like: &lt;code&gt;brew reinstall --with-pcre2 git&lt;/code&gt;.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-emacs-package" class="anchor" aria-hidden="true" href="#emacs-package"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Emacs package&lt;/h3&gt;
&lt;p&gt;If you installed from MELPA, you’re done!&lt;/p&gt;
&lt;h4&gt;&lt;a id="user-content-manually" class="anchor" aria-hidden="true" href="#manually"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Manually&lt;/h4&gt;
&lt;p&gt;Install these required packages:&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;code&gt;async&lt;/code&gt;&lt;/li&gt;
  &lt;li&gt;&lt;code&gt;dash&lt;/code&gt;&lt;/li&gt;
  &lt;li&gt;&lt;code&gt;f&lt;/code&gt;&lt;/li&gt;
  &lt;li&gt;&lt;code&gt;hl-todo&lt;/code&gt;&lt;/li&gt;
  &lt;li&gt;&lt;code&gt;magit&lt;/code&gt;&lt;/li&gt;
  &lt;li&gt;&lt;code&gt;pcre2el&lt;/code&gt;&lt;/li&gt;
  &lt;li&gt;&lt;code&gt;s&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Then put this file in your &lt;code&gt;load-path&lt;/code&gt;, and put this in your init file:&lt;/p&gt;
&lt;div class="highlight highlight-source-emacs-lisp"&gt;&lt;pre&gt;(&lt;span class="pl-c1"&gt;require&lt;/span&gt; &lt;span class="pl-c1"&gt;'magit-todos&lt;/span&gt;)&lt;/pre&gt;&lt;/div&gt;
&lt;h2&gt;&lt;a id="user-content-usage" class="anchor" aria-hidden="true" href="#usage"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Usage&lt;/h2&gt;
&lt;p&gt;Activate &lt;code&gt;magit-todos-mode&lt;/code&gt;.  Then open a Magit status buffer, or run &lt;code&gt;magit-todos-list&lt;/code&gt; to show a dedicated to-do list buffer.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-key-bindings" class="anchor" aria-hidden="true" href="#key-bindings"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Key bindings&lt;/h3&gt;
&lt;p&gt;&lt;b&gt;In Magit status buffer:&lt;/b&gt;&lt;/p&gt;
&lt;dl&gt;
  &lt;dt&gt;&lt;kbd&gt;j T&lt;/kbd&gt;&lt;/dt&gt;&lt;dd&gt;Jump to the to-do list.  If the section is empty (e.g. when using manual updates), it will scan for items.&lt;/dd&gt;
&lt;/dl&gt;
&lt;p&gt;&lt;b&gt;With point in to-do list:&lt;/b&gt;&lt;/p&gt;
&lt;dl&gt;
  &lt;dt&gt;&lt;kbd&gt;b&lt;/kbd&gt;&lt;/dt&gt;&lt;dd&gt;Show branch (&lt;code&gt;git diff&lt;/code&gt;) to-do list.&lt;/dd&gt;
  &lt;dt&gt;&lt;kbd&gt;B&lt;/kbd&gt;&lt;/dt&gt;&lt;dd&gt;Set commit reference used in branch to-do list.&lt;/dd&gt;
  &lt;dt&gt;&lt;kbd&gt;j T&lt;/kbd&gt;&lt;/dt&gt;&lt;dd&gt;When configured for manual updates, manually update the to-do list.&lt;/dd&gt;
  &lt;dt&gt;&lt;kbd&gt;j l&lt;/kbd&gt;&lt;/dt&gt;&lt;dd&gt;Open dedicated to-do list buffer.&lt;/dd&gt;
  &lt;dt&gt;&lt;kbd&gt;RET&lt;/kbd&gt;&lt;/dt&gt;&lt;dd&gt;Show item at point, or open dedicated buffer if point is on top heading.&lt;/dd&gt;
  &lt;dt&gt;&lt;kbd&gt;SPC&lt;/kbd&gt;&lt;/dt&gt;&lt;dd&gt;Peek at the item at point.&lt;/dd&gt;
&lt;/dl&gt;
&lt;h3&gt;&lt;a id="user-content-commands" class="anchor" aria-hidden="true" href="#commands"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Commands&lt;/h3&gt;
&lt;dl&gt;
  &lt;dt&gt;&lt;code&gt;magit-todos-mode&lt;/code&gt;&lt;/dt&gt;&lt;dd&gt;Activate &lt;code&gt;magit-todos-mode&lt;/code&gt;, which automatically inserts the to-do list in Magit status buffers.&lt;/dd&gt;
  &lt;dt&gt;&lt;code&gt;magit-todos-list&lt;/code&gt;&lt;/dt&gt;&lt;dd&gt;Display the to-do list in a separate buffer.  This also works outside of git repos.&lt;/dd&gt;
&lt;/dl&gt;
&lt;p&gt;Helm and Ivy are also supported.  Note that the &lt;code&gt;helm&lt;/code&gt; and &lt;code&gt;ivy&lt;/code&gt; packages are not required, nor does this package depend on them; they are only used if present.  Note as well that these commands can be used directly from source buffers, independently of Magit.&lt;/p&gt;
&lt;dl&gt;
  &lt;dt&gt;&lt;code&gt;helm-magit-todos&lt;/code&gt;&lt;/dt&gt;&lt;dd&gt;Display the project to-do list with Helm.&lt;/dd&gt;
  &lt;dt&gt;&lt;code&gt;ivy-magit-todos&lt;/code&gt;&lt;/dt&gt;&lt;dd&gt;Display the project to-do list with Ivy.&lt;/dd&gt;
&lt;/dl&gt;
&lt;h3&gt;&lt;a id="user-content-tips" class="anchor" aria-hidden="true" href="#tips"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Tips&lt;/h3&gt;
&lt;ul&gt;
  &lt;li&gt;Customize settings in the &lt;code&gt;magit-todos&lt;/code&gt; group.&lt;/li&gt;
  &lt;li&gt;Use dir-local variables to set per-repository settings.  For example, to exclude files and directories from being scanned for to-dos in a repo:
    &lt;ol&gt;
      &lt;li&gt;From a buffer in the repo’s directory (like a &lt;code&gt;magit-status&lt;/code&gt; buffer), run the command &lt;code&gt;add-dir-local-variable&lt;/code&gt;.&lt;/li&gt;
      &lt;li&gt;Choose the mode &lt;code&gt;magit-status-mode&lt;/code&gt;.&lt;/li&gt;
      &lt;li&gt;Choose the variable &lt;code&gt;magit-todos-exclude-globs&lt;/code&gt;.&lt;/li&gt;
      &lt;li&gt;Input the glob value, like &lt;code&gt;("*.html")&lt;/code&gt; to exclude HTML files.  (Note that the input is read as a lisp value, and this variable must be a list of strings.)&lt;/li&gt;
      &lt;li&gt;Now Emacs will remember that setting in that repository.  (You may also want to commit the &lt;code&gt;.dir-locals.el&lt;/code&gt; file to the repo.)&lt;/li&gt;
    &lt;/ol&gt;
  &lt;/li&gt;
  &lt;li&gt;The &lt;code&gt;magit-todos-list&lt;/code&gt; command also works outside of git repos.&lt;/li&gt;
&lt;/ul&gt;
&lt;h4&gt;&lt;a id="user-content-tramp" class="anchor" aria-hidden="true" href="#tramp"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;TRAMP&lt;/h4&gt;
&lt;p&gt;&lt;code&gt;magit-todos&lt;/code&gt; attempts to work in remote repositories accessed via TRAMP.  Note that if TRAMP can’t find the scanner configured in &lt;code&gt;magit-todos-scanner&lt;/code&gt;, you may need to use directory-local variables to either add the correct path to &lt;code&gt;tramp-remote-path&lt;/code&gt; or choose a different scanner.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-changelog" class="anchor" aria-hidden="true" href="#changelog"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Changelog&lt;/h2&gt;
&lt;h3&gt;&lt;a id="user-content-151" class="anchor" aria-hidden="true" href="#151"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;1.5.1&lt;/h3&gt;
&lt;p&gt;&lt;b&gt;Fixes&lt;/b&gt;&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;Add insertion function to end of &lt;code&gt;magit-status-sections-hook&lt;/code&gt;.&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;&lt;a id="user-content-15" class="anchor" aria-hidden="true" href="#15"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;1.5&lt;/h3&gt;
&lt;p&gt;&lt;b&gt;Added&lt;/b&gt;&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;Support for remote repositories accessed via TRAMP.  See &lt;a href="#TRAMP"&gt;usage notes&lt;/a&gt;.&lt;/li&gt;
  &lt;li&gt;Ivy history support.  (Thanks to &lt;a href="https://github.com/leungbk"&gt;Brian Leung&lt;/a&gt;.)&lt;/li&gt;
  &lt;li&gt;Option &lt;code&gt;magit-todos-branch-list-merge-base-ref&lt;/code&gt;.&lt;/li&gt;
  &lt;li&gt;Command &lt;code&gt;magit-todos-branch-list-set-commit&lt;/code&gt;, bound to &lt;code&gt;B&lt;/code&gt; with point in a to-do section.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;b&gt;Changed&lt;/b&gt;&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;Branch todo list now uses &lt;code&gt;git merge-base&lt;/code&gt; to determine the ancestor commit to compare to &lt;code&gt;HEAD&lt;/code&gt;.&lt;/li&gt;
  &lt;li&gt;Enable list-wide key bindings on both headings and to-do items.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;b&gt;Removed&lt;/b&gt;&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;Option &lt;code&gt;magit-todos-branch-list-commit-ref&lt;/code&gt;, replaced by option &lt;code&gt;magit-todos-branch-list-merge-base-ref&lt;/code&gt;.&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;&lt;a id="user-content-143" class="anchor" aria-hidden="true" href="#143"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;1.4.3&lt;/h3&gt;
&lt;p&gt;&lt;b&gt;Fixed&lt;/b&gt;&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;Don’t use &lt;code&gt;--help&lt;/code&gt; option when testing &lt;code&gt;git grep&lt;/code&gt; command, because it can launch a Web browser on some configurations or platforms (see &lt;a href="https://github.com/alphapapa/magit-todos/issues/43"&gt;#43&lt;/a&gt;).&lt;/li&gt;
  &lt;li&gt;Caching when branch diff list is displayed.&lt;/li&gt;
  &lt;li&gt;Commands &lt;code&gt;magit-section-forward&lt;/code&gt; / &lt;code&gt;backward&lt;/code&gt; sometimes skipped sections (see &lt;a href="https://github.com/alphapapa/magit-todos/issues/66"&gt;#66&lt;/a&gt;).&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;&lt;a id="user-content-142" class="anchor" aria-hidden="true" href="#142"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;1.4.2&lt;/h3&gt;
&lt;p&gt;&lt;b&gt;Fixed&lt;/b&gt;&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;Refreshing &lt;code&gt;magit-todos-list&lt;/code&gt; buffer.  (&lt;a href="https://github.com/alphapapa/magit-todos/issues/92"&gt;#92&lt;/a&gt;.  Thanks to &lt;a href="https://github.com/filalex77"&gt;Oleksii Filonenko&lt;/a&gt; and &lt;a href="https://github.com/hlissner"&gt;Henrik Lissner&lt;/a&gt; for reporting.)&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;&lt;a id="user-content-141" class="anchor" aria-hidden="true" href="#141"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;1.4.1&lt;/h3&gt;
&lt;p&gt;&lt;b&gt;Fixed&lt;/b&gt;&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;Compiler warning.&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;&lt;a id="user-content-14" class="anchor" aria-hidden="true" href="#14"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;1.4&lt;/h3&gt;
&lt;p&gt;&lt;b&gt;Added&lt;/b&gt;&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;Commands &lt;code&gt;helm-magit-todos&lt;/code&gt; and &lt;code&gt;ivy-magit-todos&lt;/code&gt;, which display items with Helm and Ivy.  (Note that Helm and Ivy are not required, nor does this package depend on them; they are only used if present.)&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;b&gt;Fixed&lt;/b&gt;&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;Warn about files containing lines too long for Emacs’s regexp matcher to handle, rather than aborting the scan (&lt;a href="https://github.com/alphapapa/magit-todos/issues/63"&gt;#63&lt;/a&gt;).&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;b&gt;Updated&lt;/b&gt;&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;Use &lt;code&gt;magit-setup-buffer&lt;/code&gt; instead of &lt;code&gt;magit-mode-setup&lt;/code&gt;.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;b&gt;Internal&lt;/b&gt;&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;Add synchronous mode to scanner functions, which return results directly usable by other code.&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;&lt;a id="user-content-13" class="anchor" aria-hidden="true" href="#13"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;1.3&lt;/h3&gt;
&lt;p&gt;&lt;b&gt;Added&lt;/b&gt;&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;Branch diff task list.  See new options &lt;code&gt;magit-todos-branch-list&lt;/code&gt; and &lt;code&gt;magit-todos-branch-list-commit-ref&lt;/code&gt;, and command &lt;code&gt;magit-todos-branch-list-toggle&lt;/code&gt;, bound to &lt;code&gt;b&lt;/code&gt; with point on to-do list heading.  (&lt;a href="https://github.com/alphapapa/magit-todos/issues/30"&gt;#30&lt;/a&gt;, &lt;a href="https://github.com/alphapapa/magit-todos/issues/77"&gt;#77&lt;/a&gt;, &lt;a href="https://github.com/alphapapa/magit-todos/pull/82"&gt;#82&lt;/a&gt;.  Thanks to &lt;a href="https://github.com/itamarst"&gt;Itamar Turner-Trauring&lt;/a&gt; and &lt;a href="https://github.com/arronmabrey"&gt;Arron Mabrey&lt;/a&gt; for the suggestion, and to &lt;a href="https://github.com/smaret"&gt;Sébastien Maret&lt;/a&gt; for implementing the commit-ref option.)&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;b&gt;Internal&lt;/b&gt;&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;Put newline in section headings.  (&lt;a href="https://github.com/alphapapa/magit-todos/pull/68"&gt;#68&lt;/a&gt;.  Thanks to &lt;a href="https://github.com/vermiculus"&gt;Sean Allred&lt;/a&gt;.)&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;&lt;a id="user-content-12" class="anchor" aria-hidden="true" href="#12"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;1.2&lt;/h3&gt;
&lt;p&gt;&lt;b&gt;Added&lt;/b&gt;&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;Allow &lt;code&gt;magit-todos-list&lt;/code&gt; to work outside git repos.&lt;/li&gt;
  &lt;li&gt;Option &lt;code&gt;magit-todos-keyword-suffix&lt;/code&gt; replaces &lt;code&gt;magit-todos-require-colon&lt;/code&gt;, allowing for common and custom suffixes after item keywords (e.g. to match items like &lt;code&gt;TODO(user):&lt;/code&gt;).  (Fixes &lt;a href="https://github.com/alphapapa/magit-todos/issues/56"&gt;#56&lt;/a&gt;.  Thanks to &lt;a href="https://github.com/thiderman"&gt;Lowe Thiderman&lt;/a&gt; for suggesting.)&lt;/li&gt;
  &lt;li&gt;Optionally group and sort by item suffixes (e.g. handy when suffixes contain usernames).&lt;/li&gt;
  &lt;li&gt;Bind &lt;kbd&gt;RET&lt;/kbd&gt; on top-level &lt;code&gt;TODOs&lt;/code&gt; section heading to &lt;code&gt;magit-todos-list&lt;/code&gt; command.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;b&gt;Fixed&lt;/b&gt;&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;Don’t fontify section item counts.  (Thanks to &lt;a href="https://github.com/m-cat"&gt;Marcin Swieczkowski&lt;/a&gt;.)&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;b&gt;Worked Around&lt;/b&gt;&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;Issue in &lt;code&gt;async&lt;/code&gt; regarding deleted buffers/processes.  This is not an ideal solution, but it solves the problem for now.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;b&gt;Removed&lt;/b&gt;&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;Option &lt;code&gt;magit-todos-require-colon&lt;/code&gt;, replaced by &lt;code&gt;magit-todos-keyword-suffix&lt;/code&gt;.&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;&lt;a id="user-content-118" class="anchor" aria-hidden="true" href="#118"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;1.1.8&lt;/h3&gt;
&lt;p&gt;&lt;b&gt;Fixed&lt;/b&gt;&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;Properly unbind key when mode is disabled. (&lt;a href="https://github.com/alphapapa/magit-todos/pull/74"&gt;#74&lt;/a&gt;.  Thanks to &lt;a href="https://github.com/akirak"&gt;Akira Komamura&lt;/a&gt;.)&lt;/li&gt;
  &lt;li&gt;Don’t show message when key is already bound correctly.  (&lt;a href="https://github.com/alphapapa/magit-todos/pull/75"&gt;#75&lt;/a&gt;.  Thanks to &lt;a href="https://github.com/akirak"&gt;Akira Komamura&lt;/a&gt;.)&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;&lt;a id="user-content-117" class="anchor" aria-hidden="true" href="#117"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;1.1.7&lt;/h3&gt;
&lt;p&gt;&lt;b&gt;Fixed&lt;/b&gt;&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;Disable undo in hidden Org fontification buffer.&lt;/li&gt;
  &lt;li&gt;Expand top-level to-do list in &lt;code&gt;magit-todos-list&lt;/code&gt; buffer.&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;&lt;a id="user-content-116" class="anchor" aria-hidden="true" href="#116"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;1.1.6&lt;/h3&gt;
&lt;p&gt;&lt;b&gt;Fixed&lt;/b&gt;&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;Insert root section in &lt;code&gt;magit-todos-list&lt;/code&gt; command.  (Really fixes &lt;a href="https://github.com/alphapapa/magit-todos/issues/55"&gt;#55&lt;/a&gt;.  Thanks to &lt;a href="https://github.com/tarsius"&gt;Jonas Bernoulli&lt;/a&gt;.)&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;&lt;a id="user-content-115" class="anchor" aria-hidden="true" href="#115"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;1.1.5&lt;/h3&gt;
&lt;p&gt;&lt;b&gt;Fixed&lt;/b&gt;&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;Hide process buffers.  (Thanks to &lt;a href="https://github.com/purcell"&gt;Steve Purcell&lt;/a&gt;.)&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;&lt;a id="user-content-114" class="anchor" aria-hidden="true" href="#114"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;1.1.4&lt;/h3&gt;
&lt;p&gt;&lt;b&gt;Fixes&lt;/b&gt;&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;code&gt;magit-todos-depth&lt;/code&gt; number-to-string conversion.&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;&lt;a id="user-content-113" class="anchor" aria-hidden="true" href="#113"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;1.1.3&lt;/h3&gt;
&lt;p&gt;&lt;b&gt;Fixes&lt;/b&gt;&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;Update &lt;code&gt;magit-todos-list&lt;/code&gt; for Magit &lt;a href="https://github.com/magit/magit/commit/40616d7ba57b7c491513e4130d82371460f9e94d"&gt;change&lt;/a&gt;.  (Fixes &lt;a href="https://github.com/alphapapa/magit-todos/issues/55"&gt;#55&lt;/a&gt;.  Thanks to &lt;a href="https://github.com/Oghma"&gt;Matteo Lisotto&lt;/a&gt;.)&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;&lt;a id="user-content-112" class="anchor" aria-hidden="true" href="#112"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;1.1.2&lt;/h3&gt;
&lt;p&gt;&lt;b&gt;Fixes&lt;/b&gt;&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;Convert &lt;code&gt;magit-todos-depth&lt;/code&gt; setting appropriately for &lt;code&gt;rg&lt;/code&gt; scanner.&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;&lt;a id="user-content-111" class="anchor" aria-hidden="true" href="#111"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;1.1.1&lt;/h3&gt;
&lt;p&gt;&lt;b&gt;Fixes&lt;/b&gt;&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;Ensure mode is activated in &lt;code&gt;magit-todos-update&lt;/code&gt; command.  (Fixes #54.  Thanks to &lt;a href="https://github.com/smaret"&gt;Sebastien Maret&lt;/a&gt;.)&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;&lt;a id="user-content-11" class="anchor" aria-hidden="true" href="#11"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;1.1&lt;/h3&gt;
&lt;p&gt;&lt;b&gt;Additions&lt;/b&gt;&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;Dedicated to-do list buffer.&lt;/li&gt;
  &lt;li&gt;Option &lt;code&gt;magit-todos-exclude-globs&lt;/code&gt;, a list of glob patterns to ignore when searching for to-do items.&lt;/li&gt;
  &lt;li&gt;Kill running scans when Magit status buffer is closed.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;b&gt;Changes&lt;/b&gt;&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;Remove dependency on &lt;code&gt;a&lt;/code&gt;.&lt;/li&gt;
  &lt;li&gt;Remove dependency on &lt;code&gt;anaphora&lt;/code&gt;.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;b&gt;Fixes&lt;/b&gt;&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;Add missing &lt;code&gt;cl-&lt;/code&gt; prefix.  Thanks to &lt;a href="https://github.com/jellelicht"&gt;Jelle Licht&lt;/a&gt;.&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;&lt;a id="user-content-104" class="anchor" aria-hidden="true" href="#104"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;1.0.4&lt;/h3&gt;
&lt;p&gt;&lt;b&gt;Fixes&lt;/b&gt;&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;Fix &lt;code&gt;find|grep&lt;/code&gt; scanner (&lt;a href="https://github.com/alphapapa/magit-todos/issues/46"&gt;issue 46&lt;/a&gt;).  Thanks to &lt;a href="https://github.com/Ambrevar"&gt;Pierre Neidhardt&lt;/a&gt;.&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;&lt;a id="user-content-103" class="anchor" aria-hidden="true" href="#103"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;1.0.3&lt;/h3&gt;
&lt;p&gt;&lt;b&gt;Fixes&lt;/b&gt;&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;Define variables earlier to avoid compiler warnings.&lt;/li&gt;
  &lt;li&gt;Remove unused var &lt;code&gt;magit-todos-ignore-file-suffixes&lt;/code&gt;.&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;&lt;a id="user-content-102" class="anchor" aria-hidden="true" href="#102"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;1.0.2&lt;/h3&gt;
&lt;p&gt;&lt;b&gt;Fixes&lt;/b&gt;&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;code&gt;regexp-quote&lt;/code&gt; item keywords when jumping to an item.  (Fixes #36.  Thanks to &lt;a href="https://github.com/dfeich"&gt;Derek Feichtinger&lt;/a&gt;.)&lt;/li&gt;
  &lt;li&gt;Ensure &lt;code&gt;grep&lt;/code&gt; supports &lt;code&gt;--perl-regexp&lt;/code&gt;.&lt;/li&gt;
  &lt;li&gt;Warn when unable to find a suitable scanner (i.e. &lt;code&gt;rg&lt;/code&gt;, or a PCRE-compatible version of &lt;code&gt;git&lt;/code&gt; or &lt;code&gt;grep&lt;/code&gt;).&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;&lt;a id="user-content-101" class="anchor" aria-hidden="true" href="#101"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;1.0.1&lt;/h3&gt;
&lt;p&gt;&lt;b&gt;Fixes&lt;/b&gt;&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;Test whether &lt;code&gt;git grep&lt;/code&gt; supports &lt;code&gt;--perl-regexp&lt;/code&gt; by checking its &lt;code&gt;--help&lt;/code&gt; output, rather than doing a search and checking for an error.&lt;/li&gt;
  &lt;li&gt;&lt;code&gt;message&lt;/code&gt; instead of &lt;code&gt;error&lt;/code&gt; for weird behavior.  (This message exists to help track down an inconsequential bug.)&lt;/li&gt;
  &lt;li&gt;Remove unused &lt;code&gt;magit-todos-ignore-directories&lt;/code&gt; option.  (To be replaced in a future release.)&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;&lt;a id="user-content-100" class="anchor" aria-hidden="true" href="#100"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;1.0.0&lt;/h3&gt;
&lt;p&gt;Initial release.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-credits" class="anchor" aria-hidden="true" href="#credits"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Credits&lt;/h2&gt;
&lt;ul&gt;
  &lt;li&gt;This package was inspired by &lt;a href="https://github.com/danielma/magit-org-todos.el"&gt;magit-org-todos&lt;/a&gt;.&lt;/li&gt;
  &lt;li&gt;The &lt;code&gt;ag&lt;/code&gt; support was made much simpler by the great &lt;a href="https://github.com/joddie/pcre2el"&gt;pcre2el&lt;/a&gt; package by Jon Oddie.&lt;/li&gt;
  &lt;li&gt;Thanks to &lt;a href="https://github.com/zhaojiangbin"&gt;Jiangbin Zhao&lt;/a&gt; for his extensive testing and feedback.&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-license" class="anchor" aria-hidden="true" href="#license"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;License&lt;/h2&gt;
&lt;p&gt;GPLv3&lt;/p&gt;
&lt;/article&gt;&lt;/div&gt;</description><author>alphapapa</author><guid isPermaLink="false">https://github.com/alphapapa/magit-todos</guid><pubDate>Tue, 11 Feb 2020 00:22:00 GMT</pubDate></item><item><title>ericdanan/counsel-projectile #23 in Emacs Lisp, This month</title><link>https://github.com/ericdanan/counsel-projectile</link><description>&lt;p&gt;&lt;i&gt;Ivy UI for Projectile&lt;/i&gt;&lt;/p&gt;&lt;div id="readme" class="md" data-path="README.md"&gt;&lt;article class="markdown-body entry-content p-5" itemprop="text"&gt;&lt;p&gt;&lt;a href="https://melpa.org/#/counsel-projectile" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/6a925f2876c6c743d7f62389b149ff6f0f7994c4/68747470733a2f2f6d656c70612e6f72672f7061636b616765732f636f756e73656c2d70726f6a656374696c652d62616467652e737667" alt="MELPA" data-canonical-src="https://melpa.org/packages/counsel-projectile-badge.svg" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://stable.melpa.org/#/counsel-projectile" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/6910f1c0552e6e050fdd171a7618d36c13456cbd/68747470733a2f2f737461626c652e6d656c70612e6f72672f7061636b616765732f636f756e73656c2d70726f6a656374696c652d62616467652e737667" alt="MELPA Stable" data-canonical-src="https://stable.melpa.org/packages/counsel-projectile-badge.svg" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://github.com/ericdanan/counsel-projectile/releases"&gt;&lt;img src="https://camo.githubusercontent.com/b5aab98db39e3df5886513674f6ad1661abb5781/68747470733a2f2f696d672e736869656c64732e696f2f6769746875622f636f6d6d6974732d73696e63652f6572696364616e616e2f636f756e73656c2d70726f6a656374696c652f6c61746573742e737667" alt="Github commits (since latest release)" data-canonical-src="https://img.shields.io/github/commits-since/ericdanan/counsel-projectile/latest.svg" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Table of Contents&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="#description"&gt;Description&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#news"&gt;News&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#installation"&gt;Installation&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#usage"&gt;Usage&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="#getting-started"&gt;Getting started&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#summary-of-interactive-commands"&gt;Summary of interactive commands&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#the-counsel-projectile-command"&gt;The &lt;code&gt;counsel-projectile&lt;/code&gt; command&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#the-counsel-projectile-switch-project-command"&gt;The &lt;code&gt;counsel-projectile-switch-project&lt;/code&gt; command&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#the-counsel-projectile-find-file-command"&gt;The &lt;code&gt;counsel-projectile-find-file&lt;/code&gt; command&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#the-counsel-projectile-find-file-dwim-command"&gt;The &lt;code&gt;counsel-projectile-find-file-dwim&lt;/code&gt; command&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#the-counsel-projectile-find-dir-command"&gt;The &lt;code&gt;counsel-projectile-find-dir&lt;/code&gt; command&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#the-counsel-projectile-switch-to-buffer-command"&gt;The &lt;code&gt;counsel-projectile-switch-to-buffer&lt;/code&gt; command&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#the-counsel-projectile-grep-command"&gt;The &lt;code&gt;counsel-projectile-grep&lt;/code&gt; command&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#the-counsel-projectile-git-grep-command"&gt;The &lt;code&gt;counsel-projectile-git-grep&lt;/code&gt; command&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#the-counsel-projectile-ag-command"&gt;The &lt;code&gt;counsel-projectile-ag&lt;/code&gt; command&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#the-counsel-projectile-rg-command"&gt;The &lt;code&gt;counsel-projectile-rg&lt;/code&gt; command&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#the-counsel-projectile-org-capture-command"&gt;The &lt;code&gt;counsel-projectile-org-capture&lt;/code&gt; command&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#the-counsel-projectile-org-agenda-command"&gt;The &lt;code&gt;counsel-projectile-org-agenda&lt;/code&gt; command&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="#configuration"&gt;Configuration&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="#enabling-counsel-projectile-mode-when-emacs-starts"&gt;Enabling counsel-projectile mode when emacs starts&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#customizing-counsel-projectile-key-bindings"&gt;Customizing counsel-projectile key bindings&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#customizing-action-lists"&gt;Customizing action lists&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#setting-counsel-projectile-org-capture-templates"&gt;Setting &lt;code&gt;counsel-projectile-org-capture&lt;/code&gt; templates&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#removing-the-current-project-or-buffer-from-the-list-of-candidates"&gt;Removing the current project or buffer from the list of candidates&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#initial-input-for-the-project-search-commands"&gt;Initial input for the project search commands&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#matcher-for-counsel-projectile-find-file"&gt;Matcher for &lt;code&gt;counsel-projectile-find-file&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#sorting-candidates"&gt;Sorting candidates&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="#upgrading"&gt;Upgrading&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="#breaking-changes-in-version-03"&gt;Breaking changes in version &lt;code&gt;0.3&lt;/code&gt;&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="#key-bindings"&gt;Key bindings&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="#breaking-changes-in-version-02"&gt;Breaking changes in version &lt;code&gt;0.2&lt;/code&gt;&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="#key-bindings-1"&gt;Key bindings&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#action-lists"&gt;Action lists&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#minibuffer-keymap"&gt;Minibuffer keymap&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="#contributors"&gt;Contributors&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h1&gt;&lt;a id="user-content-description" class="anchor" aria-hidden="true" href="#description"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Description&lt;/h1&gt;
&lt;p&gt;&lt;a href="https://github.com/bbatsov/projectile"&gt;Projectile&lt;/a&gt; has native support for using &lt;a href="https://github.com/abo-abo/swiper"&gt;ivy&lt;/a&gt; as its completion system. Counsel-projectile provides further ivy integration into projectile by taking advantage of ivy's support for selecting from a list of actions and applying an action without leaving the completion session. Concretely, counsel-projectile defines replacements for existing projectile commands as well as new commands that have no projectile counterparts. A minor mode is also provided that adds key bindings for all these commands on top of the projectile key bindings.&lt;/p&gt;
&lt;h1&gt;&lt;a id="user-content-news" class="anchor" aria-hidden="true" href="#news"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;News&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;[2019-01-27] New version &lt;code&gt;0.3&lt;/code&gt;. If you are upgrading from &lt;code&gt;0.2&lt;/code&gt;, please read &lt;a href="#breaking-changes-in-version-03"&gt;here&lt;/a&gt; about breaking changes.&lt;/li&gt;
&lt;li&gt;[2018-01-05] Package now available on MELPA Stable.&lt;/li&gt;
&lt;li&gt;[2017-12-18] New version &lt;code&gt;0.2&lt;/code&gt;. If you are upgrading from &lt;code&gt;0.1&lt;/code&gt;, please read &lt;a href="#breaking-changes-in-version-02"&gt;here&lt;/a&gt; about breaking changes.&lt;/li&gt;
&lt;li&gt;[2016-04-12] First version &lt;code&gt;0.1&lt;/code&gt;.&lt;/li&gt;
&lt;/ul&gt;
&lt;h1&gt;&lt;a id="user-content-installation" class="anchor" aria-hidden="true" href="#installation"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Installation&lt;/h1&gt;
&lt;p&gt;Install the package from &lt;a href="https://melpa.org" rel="nofollow"&gt;MELPA&lt;/a&gt;, &lt;a href="https://stable.melpa.org" rel="nofollow"&gt;MELPA Stable&lt;/a&gt;, or &lt;a href="https://github.com/dimitri/el-get"&gt;el-get&lt;/a&gt;, or clone this repository somewhere in your load path.&lt;/p&gt;
&lt;h1&gt;&lt;a id="user-content-usage" class="anchor" aria-hidden="true" href="#usage"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Usage&lt;/h1&gt;
&lt;h2&gt;&lt;a id="user-content-getting-started" class="anchor" aria-hidden="true" href="#getting-started"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Getting started&lt;/h2&gt;
&lt;p&gt;To turn on counsel-projectile mode, either call the command &lt;code&gt;counsel-projectile-mode&lt;/code&gt; or use the Customize interface to toggle on the variable &lt;code&gt;counsel-projectile-mode&lt;/code&gt;. This will turn on projectile mode, thus enabling all projectile key bindings, and add the counsel-projectile key bindings on top of them.&lt;/p&gt;
&lt;p&gt;Note that starting with projectile version &lt;code&gt;1.1&lt;/code&gt;, the projectile (and counsel-projectile) key bindings are only available after you select a keymap prefix for them. For instance, to select &lt;kbd&gt;C-c p&lt;/kbd&gt; as prefix (the default prior to version &lt;code&gt;1.1&lt;/code&gt;), you need to execute the following form:&lt;/p&gt;
&lt;div class="highlight highlight-source-emacs-lisp"&gt;&lt;pre&gt;(&lt;span class="pl-c1"&gt;define-key&lt;/span&gt; projectile-mode-map (&lt;span class="pl-c1"&gt;kbd&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;C-c p&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;) &lt;span class="pl-c1"&gt;'projectile-command-map&lt;/span&gt;)&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;The counsel-projectile key bindings either remap existing projectile commands to their counsel-projectile replacements (e.g. &lt;kbd&gt;C-c p f&lt;/kbd&gt; now calls &lt;code&gt;counsel-projectile-find-file&lt;/code&gt; instead of &lt;code&gt;projectile-find-file&lt;/code&gt;) or bind keys to counsel-projectile commands that have no projectile counterparts (e.g. &lt;kbd&gt;C-c p SPC&lt;/kbd&gt; calls the command &lt;code&gt;counsel-projectile&lt;/code&gt;).&lt;/p&gt;
&lt;p&gt;Calling the command &lt;code&gt;counsel-projectile-mode&lt;/code&gt; once again or toggling off the variable &lt;code&gt;counsel-projectile-mode&lt;/code&gt; disables the counsel-projectile key bindings and turns off projectile mode.&lt;/p&gt;
&lt;p&gt;Note that if you turn on projectile mode but not counsel-projectile mode, the counsel-projectile commands can still be called with &lt;kbd&gt;M-x&lt;/kbd&gt;, only the key bindings for these commands are not enabled.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-summary-of-interactive-commands" class="anchor" aria-hidden="true" href="#summary-of-interactive-commands"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Summary of interactive commands&lt;/h2&gt;
&lt;p&gt;Replacements for existing commands:&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th align="left"&gt;Key binding&lt;/th&gt;
&lt;th align="left"&gt;Command&lt;/th&gt;
&lt;th align="left"&gt;Description&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td align="left"&gt;&lt;kbd&gt;C-c p p&lt;/kbd&gt;&lt;/td&gt;
&lt;td align="left"&gt;&lt;code&gt;counsel-projectile-switch-project&lt;/code&gt;&lt;/td&gt;
&lt;td align="left"&gt;Switch project&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="left"&gt;&lt;kbd&gt;C-c p f&lt;/kbd&gt;&lt;/td&gt;
&lt;td align="left"&gt;&lt;code&gt;counsel-projectile-find-file&lt;/code&gt;&lt;/td&gt;
&lt;td align="left"&gt;Jump to a project file&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="left"&gt;&lt;kbd&gt;C-c p g&lt;/kbd&gt;&lt;/td&gt;
&lt;td align="left"&gt;&lt;code&gt;counsel-projectile-find-file-dwim&lt;/code&gt;&lt;/td&gt;
&lt;td align="left"&gt;Jump to a project file using completion based on context&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="left"&gt;&lt;kbd&gt;C-c p d&lt;/kbd&gt;&lt;/td&gt;
&lt;td align="left"&gt;&lt;code&gt;counsel-projectile-find-dir&lt;/code&gt;&lt;/td&gt;
&lt;td align="left"&gt;Jump to a project directory&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="left"&gt;&lt;kbd&gt;C-c p b&lt;/kbd&gt;&lt;/td&gt;
&lt;td align="left"&gt;&lt;code&gt;counsel-projectile-switch-to-buffer&lt;/code&gt;&lt;/td&gt;
&lt;td align="left"&gt;Jump to a project buffer&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="left"&gt;&lt;kbd&gt;C-c p s g&lt;/kbd&gt;&lt;/td&gt;
&lt;td align="left"&gt;&lt;code&gt;counsel-projectile-grep&lt;/code&gt;&lt;/td&gt;
&lt;td align="left"&gt;Search project with grep&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="left"&gt;&lt;kbd&gt;C-c p s s&lt;/kbd&gt;&lt;/td&gt;
&lt;td align="left"&gt;&lt;code&gt;counsel-projectile-ag&lt;/code&gt;&lt;/td&gt;
&lt;td align="left"&gt;Search project with ag&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="left"&gt;&lt;kbd&gt;C-c p s r&lt;/kbd&gt;&lt;/td&gt;
&lt;td align="left"&gt;&lt;code&gt;counsel-projectile-rg&lt;/code&gt;&lt;/td&gt;
&lt;td align="left"&gt;Search project with rg&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;New commands:&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th align="left"&gt;Key binding&lt;/th&gt;
&lt;th align="left"&gt;Command&lt;/th&gt;
&lt;th align="left"&gt;Description&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td align="left"&gt;&lt;kbd&gt;C-c p SPC&lt;/kbd&gt;&lt;/td&gt;
&lt;td align="left"&gt;&lt;code&gt;counsel-projectile&lt;/code&gt;&lt;/td&gt;
&lt;td align="left"&gt;Jump to a project buffer or file, or switch project&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="left"&gt;&lt;kbd&gt;C-c p s i&lt;/kbd&gt;&lt;/td&gt;
&lt;td align="left"&gt;&lt;code&gt;counsel-projectile-git-grep&lt;/code&gt;&lt;/td&gt;
&lt;td align="left"&gt;Search project with git grep&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="left"&gt;&lt;kbd&gt;C-c p O c&lt;/kbd&gt;&lt;/td&gt;
&lt;td align="left"&gt;&lt;code&gt;counsel-projectile-org-capture&lt;/code&gt;&lt;/td&gt;
&lt;td align="left"&gt;Capture into project&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="left"&gt;&lt;kbd&gt;C-c p O a&lt;/kbd&gt;&lt;/td&gt;
&lt;td align="left"&gt;&lt;code&gt;counsel-projectile-org-agenda&lt;/code&gt;&lt;/td&gt;
&lt;td align="left"&gt;Open project agenda&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h2&gt;&lt;a id="user-content-the-counsel-projectile-command" class="anchor" aria-hidden="true" href="#the-counsel-projectile-command"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;The &lt;code&gt;counsel-projectile&lt;/code&gt; command&lt;/h2&gt;
&lt;p&gt;Default key binding: &lt;kbd&gt;C-c p SPC&lt;/kbd&gt;.&lt;/p&gt;
&lt;p&gt;This command lets you quickly jump to a project buffer or file. It uses ivy to display in the minibuffer a list of all project buffers as well as all project files that are not currently visited by a buffer. Buffers are fontified according to their major mode and files are fontified as virtual buffers, as in the command &lt;code&gt;ivy-switch-buffer&lt;/code&gt;. As in all ivy commands, you can use &lt;kbd&gt;M-o&lt;/kbd&gt; / &lt;kbd&gt;C-M-o&lt;/kbd&gt; + &lt;kbd&gt;key&lt;/kbd&gt; to select from a list of actions to apply (or &lt;kbd&gt;M-RET&lt;/kbd&gt; / &lt;kbd&gt;C-M-RET&lt;/kbd&gt; to apply the default action) to the selected candidate:&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th align="left"&gt;Key&lt;/th&gt;
&lt;th align="left"&gt;Action&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td align="left"&gt;&lt;kbd&gt;o&lt;/kbd&gt;&lt;/td&gt;
&lt;td align="left"&gt;Open buffer or file in current window (default action)&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="left"&gt;&lt;kbd&gt;j&lt;/kbd&gt;&lt;/td&gt;
&lt;td align="left"&gt;Open buffer or file in other window&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="left"&gt;&lt;kbd&gt;k&lt;/kbd&gt;&lt;/td&gt;
&lt;td align="left"&gt;Kill buffer or delete file&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="left"&gt;&lt;kbd&gt;x&lt;/kbd&gt;&lt;/td&gt;
&lt;td align="left"&gt;Open file externally (does nothing for buffers)&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="left"&gt;&lt;kbd&gt;r&lt;/kbd&gt;&lt;/td&gt;
&lt;td align="left"&gt;Open file as root (does nothing for buffers)&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="left"&gt;&lt;kbd&gt;m&lt;/kbd&gt;&lt;/td&gt;
&lt;td align="left"&gt;Find file manually: call &lt;code&gt;counsel-find-file&lt;/code&gt; from buffer or file's directory&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="left"&gt;&lt;kbd&gt;p&lt;/kbd&gt;&lt;/td&gt;
&lt;td align="left"&gt;Switch project: call &lt;code&gt;counsel-projectile-switch-project&lt;/code&gt; (see below)&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;The key binding &lt;kbd&gt;C-c C-k&lt;/kbd&gt; can also be used from the minibuffer to kill the buffer corresponding to the current candidate (same as &lt;kbd&gt;C-M-o k&lt;/kbd&gt;).&lt;/p&gt;
&lt;p&gt;If not called inside a project, &lt;code&gt;counsel-projectile&lt;/code&gt; first offers to select a project to switch to by calling &lt;code&gt;counsel-projectile-switch-project&lt;/code&gt; (see below). Once you select a project and hit &lt;kbd&gt;RET&lt;/kbd&gt;, it lets you jump to a buffer or file in this project as described above.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-the-counsel-projectile-switch-project-command" class="anchor" aria-hidden="true" href="#the-counsel-projectile-switch-project-command"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;The &lt;code&gt;counsel-projectile-switch-project&lt;/code&gt; command&lt;/h2&gt;
&lt;p&gt;Default key binding: &lt;kbd&gt;C-c p p&lt;/kbd&gt;.&lt;/p&gt;
&lt;p&gt;This command is a replacement for &lt;code&gt;projectile-switch-project&lt;/code&gt;. It adds the possibility to select from a list of switch-project actions to apply to the selected project:&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th align="left"&gt;Key&lt;/th&gt;
&lt;th align="left"&gt;Action&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td align="left"&gt;&lt;kbd&gt;o&lt;/kbd&gt;&lt;/td&gt;
&lt;td align="left"&gt;Jump to a project buffer or file: call &lt;code&gt;counsel-projectile&lt;/code&gt; (default action; see above)&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="left"&gt;&lt;kbd&gt;f&lt;/kbd&gt;&lt;/td&gt;
&lt;td align="left"&gt;Jump to a project file: call &lt;code&gt;counsel-projectile-find-file&lt;/code&gt; (see below)&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="left"&gt;&lt;kbd&gt;d&lt;/kbd&gt;&lt;/td&gt;
&lt;td align="left"&gt;Jump to a project directory: call &lt;code&gt;counsel-projectile-find-dir&lt;/code&gt; (see below)&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="left"&gt;&lt;kbd&gt;D&lt;/kbd&gt;&lt;/td&gt;
&lt;td align="left"&gt;Open project in dired&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="left"&gt;&lt;kbd&gt;b&lt;/kbd&gt;&lt;/td&gt;
&lt;td align="left"&gt;Jump to a project buffer: call &lt;code&gt;counsel-projectile-switch-to-buffer&lt;/code&gt; (see below)&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="left"&gt;&lt;kbd&gt;m&lt;/kbd&gt;&lt;/td&gt;
&lt;td align="left"&gt;Find file manually: call &lt;code&gt;counsel-find-file&lt;/code&gt; from the project root&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="left"&gt;&lt;kbd&gt;S&lt;/kbd&gt;&lt;/td&gt;
&lt;td align="left"&gt;Save all project buffers&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="left"&gt;&lt;kbd&gt;k&lt;/kbd&gt;&lt;/td&gt;
&lt;td align="left"&gt;Kill all project buffers&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="left"&gt;&lt;kbd&gt;K&lt;/kbd&gt;&lt;/td&gt;
&lt;td align="left"&gt;Remove project from the list of known projects&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="left"&gt;&lt;kbd&gt;c&lt;/kbd&gt;&lt;/td&gt;
&lt;td align="left"&gt;Run project compilation command&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="left"&gt;&lt;kbd&gt;C&lt;/kbd&gt;&lt;/td&gt;
&lt;td align="left"&gt;Run project configure command&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="left"&gt;&lt;kbd&gt;E&lt;/kbd&gt;&lt;/td&gt;
&lt;td align="left"&gt;Edit project directory-local variables&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="left"&gt;&lt;kbd&gt;v&lt;/kbd&gt;&lt;/td&gt;
&lt;td align="left"&gt;Open project in vc-dir / magit / monky&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="left"&gt;&lt;kbd&gt;s g&lt;/kbd&gt;&lt;/td&gt;
&lt;td align="left"&gt;Search project with grep: call &lt;code&gt;counsel-projectile-grep&lt;/code&gt; (see below)&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="left"&gt;&lt;kbd&gt;s i&lt;/kbd&gt;&lt;/td&gt;
&lt;td align="left"&gt;Search project with git grep: call &lt;code&gt;counsel-projectile-git-grep&lt;/code&gt; (see below)&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="left"&gt;&lt;kbd&gt;s s&lt;/kbd&gt;&lt;/td&gt;
&lt;td align="left"&gt;Search project with ag: call &lt;code&gt;counsel-projectile-ag&lt;/code&gt; (see below)&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="left"&gt;&lt;kbd&gt;s r&lt;/kbd&gt;&lt;/td&gt;
&lt;td align="left"&gt;Search project with rg: call &lt;code&gt;counsel-projectile-rg&lt;/code&gt; (see below)&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="left"&gt;&lt;kbd&gt;x s&lt;/kbd&gt;&lt;/td&gt;
&lt;td align="left"&gt;Invoke shell from the project root&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="left"&gt;&lt;kbd&gt;x e&lt;/kbd&gt;&lt;/td&gt;
&lt;td align="left"&gt;Invoke eshell from the project root&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="left"&gt;&lt;kbd&gt;x t&lt;/kbd&gt;&lt;/td&gt;
&lt;td align="left"&gt;Invoke term from the project root&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="left"&gt;&lt;kbd&gt;x v&lt;/kbd&gt;&lt;/td&gt;
&lt;td align="left"&gt;Invoke vterm from the project root&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="left"&gt;&lt;kbd&gt;O c&lt;/kbd&gt;&lt;/td&gt;
&lt;td align="left"&gt;Capture into project: call &lt;code&gt;counsel-projectile-org-capture&lt;/code&gt; (see below)&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="left"&gt;&lt;kbd&gt;O a&lt;/kbd&gt;&lt;/td&gt;
&lt;td align="left"&gt;Open project agenda: call &lt;code&gt;counsel-projectile-org-agenda&lt;/code&gt; (see below)&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h2&gt;&lt;a id="user-content-the-counsel-projectile-find-file-command" class="anchor" aria-hidden="true" href="#the-counsel-projectile-find-file-command"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;The &lt;code&gt;counsel-projectile-find-file&lt;/code&gt; command&lt;/h2&gt;
&lt;p&gt;Default key binding: &lt;kbd&gt;C-c p f&lt;/kbd&gt;.&lt;/p&gt;
&lt;p&gt;This command is a replacement for &lt;code&gt;projectile-find-file&lt;/code&gt;. It displays a list of all project files and offers several actions:&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th align="left"&gt;Key&lt;/th&gt;
&lt;th align="left"&gt;Action&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td align="left"&gt;&lt;kbd&gt;o&lt;/kbd&gt;&lt;/td&gt;
&lt;td align="left"&gt;Open file in current window (default action)&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="left"&gt;&lt;kbd&gt;j&lt;/kbd&gt;&lt;/td&gt;
&lt;td align="left"&gt;Open file in other window&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="left"&gt;&lt;kbd&gt;x&lt;/kbd&gt;&lt;/td&gt;
&lt;td align="left"&gt;Open file externally&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="left"&gt;&lt;kbd&gt;r&lt;/kbd&gt;&lt;/td&gt;
&lt;td align="left"&gt;Open file as root&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="left"&gt;&lt;kbd&gt;m&lt;/kbd&gt;&lt;/td&gt;
&lt;td align="left"&gt;Find file manually: call &lt;code&gt;counsel-find-file&lt;/code&gt; from file's directory&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="left"&gt;&lt;kbd&gt;k&lt;/kbd&gt;&lt;/td&gt;
&lt;td align="left"&gt;Delete file&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="left"&gt;&lt;kbd&gt;p&lt;/kbd&gt;&lt;/td&gt;
&lt;td align="left"&gt;Switch project: call &lt;code&gt;counsel-projectile-switch-project&lt;/code&gt; (see above)&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h2&gt;&lt;a id="user-content-the-counsel-projectile-find-file-dwim-command" class="anchor" aria-hidden="true" href="#the-counsel-projectile-find-file-dwim-command"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;The &lt;code&gt;counsel-projectile-find-file-dwim&lt;/code&gt; command&lt;/h2&gt;
&lt;p&gt;Default key binding: &lt;kbd&gt;C-c p g&lt;/kbd&gt;.&lt;/p&gt;
&lt;p&gt;This command is a replacement for &lt;code&gt;projectile-find-file-dwim&lt;/code&gt;. It is similar to &lt;code&gt;counsel-projectile-find-file&lt;/code&gt; except that the list of project files is restricted to those matching the filename at point, if any.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-the-counsel-projectile-find-dir-command" class="anchor" aria-hidden="true" href="#the-counsel-projectile-find-dir-command"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;The &lt;code&gt;counsel-projectile-find-dir&lt;/code&gt; command&lt;/h2&gt;
&lt;p&gt;Default key binding: &lt;kbd&gt;C-c p d&lt;/kbd&gt;.&lt;/p&gt;
&lt;p&gt;This command is a replacement for &lt;code&gt;projectile-find-dir&lt;/code&gt;. It displays a list of all project directories and offers several actions:&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th align="left"&gt;Key&lt;/th&gt;
&lt;th align="left"&gt;Action&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td align="left"&gt;&lt;kbd&gt;o&lt;/kbd&gt;&lt;/td&gt;
&lt;td align="left"&gt;Open directory with &lt;code&gt;dired&lt;/code&gt; in current window (default action)&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="left"&gt;&lt;kbd&gt;j&lt;/kbd&gt;&lt;/td&gt;
&lt;td align="left"&gt;Open directory with &lt;code&gt;dired&lt;/code&gt; in other window&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="left"&gt;&lt;kbd&gt;x&lt;/kbd&gt;&lt;/td&gt;
&lt;td align="left"&gt;Open directory externally&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="left"&gt;&lt;kbd&gt;r&lt;/kbd&gt;&lt;/td&gt;
&lt;td align="left"&gt;Open directory as root&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="left"&gt;&lt;kbd&gt;m&lt;/kbd&gt;&lt;/td&gt;
&lt;td align="left"&gt;Find file manually: call &lt;code&gt;counsel-find-file&lt;/code&gt; from directory&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="left"&gt;&lt;kbd&gt;p&lt;/kbd&gt;&lt;/td&gt;
&lt;td align="left"&gt;Switch project: call &lt;code&gt;counsel-projectile-switch-project&lt;/code&gt; (see above)&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h2&gt;&lt;a id="user-content-the-counsel-projectile-switch-to-buffer-command" class="anchor" aria-hidden="true" href="#the-counsel-projectile-switch-to-buffer-command"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;The &lt;code&gt;counsel-projectile-switch-to-buffer&lt;/code&gt; command&lt;/h2&gt;
&lt;p&gt;Default key binding: &lt;kbd&gt;C-c p b&lt;/kbd&gt;.&lt;/p&gt;
&lt;p&gt;This command is a replacement for &lt;code&gt;projectile-switch-to-buffer&lt;/code&gt;. It displays a list of all project buffers and offers several actions:&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th align="left"&gt;Key&lt;/th&gt;
&lt;th align="left"&gt;Action&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td align="left"&gt;&lt;kbd&gt;o&lt;/kbd&gt;&lt;/td&gt;
&lt;td align="left"&gt;Open buffer in current window (default action)&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="left"&gt;&lt;kbd&gt;j&lt;/kbd&gt;&lt;/td&gt;
&lt;td align="left"&gt;Open buffer in other window&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="left"&gt;&lt;kbd&gt;k&lt;/kbd&gt;&lt;/td&gt;
&lt;td align="left"&gt;Kill buffer&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="left"&gt;&lt;kbd&gt;m&lt;/kbd&gt;&lt;/td&gt;
&lt;td align="left"&gt;Find file manually: call &lt;code&gt;counsel-find-file&lt;/code&gt; from buffer's directory&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="left"&gt;&lt;kbd&gt;p&lt;/kbd&gt;&lt;/td&gt;
&lt;td align="left"&gt;Switch project: call &lt;code&gt;counsel-projectile-switch-project&lt;/code&gt; (see above)&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;The key binding &lt;kbd&gt;C-c C-k&lt;/kbd&gt; can also be used from the minibuffer to kill the buffer corresponding to the current candidate (same as &lt;kbd&gt;C-M-o k&lt;/kbd&gt;).&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-the-counsel-projectile-grep-command" class="anchor" aria-hidden="true" href="#the-counsel-projectile-grep-command"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;The &lt;code&gt;counsel-projectile-grep&lt;/code&gt; command&lt;/h2&gt;
&lt;p&gt;Default key binding: &lt;kbd&gt;C-c p s g&lt;/kbd&gt;.&lt;/p&gt;
&lt;p&gt;This command is a replacement for &lt;code&gt;projectile-grep&lt;/code&gt;. It searches all project files with &lt;code&gt;grep&lt;/code&gt;, taking advantage of ivy's support for updating the list of candidates after each input (dynamic collections). Each candidate corresponds to a matching line in some project file, and the following actions are offered:&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th align="left"&gt;Key&lt;/th&gt;
&lt;th align="left"&gt;Action&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td align="left"&gt;&lt;kbd&gt;o&lt;/kbd&gt;&lt;/td&gt;
&lt;td align="left"&gt;Jump to the candidate file and line&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="left"&gt;&lt;kbd&gt;p&lt;/kbd&gt;&lt;/td&gt;
&lt;td align="left"&gt;Switch project: call &lt;code&gt;counsel-projectile-switch-project&lt;/code&gt; (see above)&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;If inside a git project and the variable &lt;code&gt;projectile-use-git-grep&lt;/code&gt; is non-nil, then &lt;code&gt;counsel-projectile-grep&lt;/code&gt; uses &lt;code&gt;git grep&lt;/code&gt; instead of &lt;code&gt;grep&lt;/code&gt;, by calling the function &lt;code&gt;counsel-projectile-git-grep&lt;/code&gt; (see below).&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-the-counsel-projectile-git-grep-command" class="anchor" aria-hidden="true" href="#the-counsel-projectile-git-grep-command"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;The &lt;code&gt;counsel-projectile-git-grep&lt;/code&gt; command&lt;/h2&gt;
&lt;p&gt;Default key binding: &lt;kbd&gt;C-c p s i&lt;/kbd&gt;.&lt;/p&gt;
&lt;p&gt;This command is similar to &lt;code&gt;counsel-projectile-grep&lt;/code&gt; (see above) but uses &lt;code&gt;git grep&lt;/code&gt; instead of &lt;code&gt;grep&lt;/code&gt; (hence it only works in git projects).&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-the-counsel-projectile-ag-command" class="anchor" aria-hidden="true" href="#the-counsel-projectile-ag-command"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;The &lt;code&gt;counsel-projectile-ag&lt;/code&gt; command&lt;/h2&gt;
&lt;p&gt;Default key binding: &lt;kbd&gt;C-c p s s&lt;/kbd&gt;.&lt;/p&gt;
&lt;p&gt;This command is a replacement for &lt;code&gt;projectile-ag&lt;/code&gt;. It is similar to &lt;code&gt;counsel-projectile-grep&lt;/code&gt; (see above) but uses &lt;code&gt;ag&lt;/code&gt; (the silver searcher) instead of &lt;code&gt;grep&lt;/code&gt;.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-the-counsel-projectile-rg-command" class="anchor" aria-hidden="true" href="#the-counsel-projectile-rg-command"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;The &lt;code&gt;counsel-projectile-rg&lt;/code&gt; command&lt;/h2&gt;
&lt;p&gt;Default key binding: &lt;kbd&gt;C-c p s r&lt;/kbd&gt;.&lt;/p&gt;
&lt;p&gt;This command is a replacement for &lt;code&gt;projectile-ripgrep&lt;/code&gt;. It is similar to &lt;code&gt;counsel-projectile-grep&lt;/code&gt; (see above) but uses &lt;code&gt;rg&lt;/code&gt; (ripgrep) instead of &lt;code&gt;grep&lt;/code&gt;.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-the-counsel-projectile-org-capture-command" class="anchor" aria-hidden="true" href="#the-counsel-projectile-org-capture-command"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;The &lt;code&gt;counsel-projectile-org-capture&lt;/code&gt; command&lt;/h2&gt;
&lt;p&gt;Default key binding: &lt;kbd&gt;C-c p O c&lt;/kbd&gt;.&lt;/p&gt;
&lt;p&gt;This command is a replacement for &lt;code&gt;org-capture&lt;/code&gt; (or &lt;code&gt;counsel-org-capture&lt;/code&gt;) offering project-specific capture templates, in addition to the regular templates available from &lt;code&gt;org-capture&lt;/code&gt;. By default, there is a single project template, named &lt;code&gt;[&amp;lt;project-name&amp;gt;] Tasks&lt;/code&gt;, which stores the captured information under headline &lt;code&gt;Tasks&lt;/code&gt; in file &lt;code&gt;&amp;lt;project-root&amp;gt;/notes.org&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;If not inside a project, the project templates are ignored and only the regular ones are offered. So you may want to systematically use &lt;code&gt;counsel-projectile-org-capture&lt;/code&gt; isntead of &lt;code&gt;org-capture&lt;/code&gt; or &lt;code&gt;counsel-org-capture&lt;/code&gt; (you may also want to give it a global key binding, such as &lt;code&gt;C-c c&lt;/code&gt;).&lt;/p&gt;
&lt;p&gt;The following actions are offered:&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th align="left"&gt;Key&lt;/th&gt;
&lt;th align="left"&gt;Action&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td align="left"&gt;&lt;kbd&gt;o&lt;/kbd&gt;&lt;/td&gt;
&lt;td align="left"&gt;Capture&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="left"&gt;&lt;kbd&gt;t&lt;/kbd&gt;&lt;/td&gt;
&lt;td align="left"&gt;Go to target&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="left"&gt;&lt;kbd&gt;l&lt;/kbd&gt;&lt;/td&gt;
&lt;td align="left"&gt;Go to last stored&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="left"&gt;&lt;kbd&gt;p&lt;/kbd&gt;&lt;/td&gt;
&lt;td align="left"&gt;Insert template at point&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="left"&gt;&lt;kbd&gt;c&lt;/kbd&gt;&lt;/td&gt;
&lt;td align="left"&gt;Customize org-capture-templates&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="left"&gt;&lt;kbd&gt;P&lt;/kbd&gt;&lt;/td&gt;
&lt;td align="left"&gt;Switch project: call &lt;code&gt;counsel-projectile-switch-project&lt;/code&gt; (see above)&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h2&gt;&lt;a id="user-content-the-counsel-projectile-org-agenda-command" class="anchor" aria-hidden="true" href="#the-counsel-projectile-org-agenda-command"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;The &lt;code&gt;counsel-projectile-org-agenda&lt;/code&gt; command&lt;/h2&gt;
&lt;p&gt;Default key binding: &lt;kbd&gt;C-c p O a&lt;/kbd&gt;.&lt;/p&gt;
&lt;p&gt;This command opens the current project's agenda. It simply calls &lt;code&gt;org-agenda&lt;/code&gt; after filtering out all agenda files that do not belong to the current project.&lt;/p&gt;
&lt;h1&gt;&lt;a id="user-content-configuration" class="anchor" aria-hidden="true" href="#configuration"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Configuration&lt;/h1&gt;
&lt;h2&gt;&lt;a id="user-content-enabling-counsel-projectile-mode-when-emacs-starts" class="anchor" aria-hidden="true" href="#enabling-counsel-projectile-mode-when-emacs-starts"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Enabling counsel-projectile mode when emacs starts&lt;/h2&gt;
&lt;p&gt;To automatically enable counsel-projectile mode when emacs starts, you can either use the Customize interface to toggle on the variable &lt;code&gt;counsel-projectile-mode&lt;/code&gt; and save your customization, or add &lt;code&gt;(counsel-projectile-mode)&lt;/code&gt; to your init file.&lt;/p&gt;
&lt;p&gt;Note that starting with projectile version &lt;code&gt;1.1&lt;/code&gt;, the projectile (and counsel-projectile) key bindings are only available after you select a keymap prefix for them. For instance, to select &lt;kbd&gt;C-c p&lt;/kbd&gt; as prefix (the default prior to version &lt;code&gt;1.1&lt;/code&gt;), you need to add the following form to your init file:&lt;/p&gt;
&lt;div class="highlight highlight-source-emacs-lisp"&gt;&lt;pre&gt;(&lt;span class="pl-c1"&gt;define-key&lt;/span&gt; projectile-mode-map (&lt;span class="pl-c1"&gt;kbd&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;C-c p&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;) &lt;span class="pl-c1"&gt;'projectile-command-map&lt;/span&gt;)&lt;/pre&gt;&lt;/div&gt;
&lt;h2&gt;&lt;a id="user-content-customizing-counsel-projectile-key-bindings" class="anchor" aria-hidden="true" href="#customizing-counsel-projectile-key-bindings"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Customizing counsel-projectile key bindings&lt;/h2&gt;
&lt;p&gt;The key bindings that are added when counsel-projectile-mode is turned on are determined by the variable &lt;code&gt;counsel-projectile-key-bindings&lt;/code&gt;. You can set this variable, either directly or through the customize interface, to customize these key bindings. It holds an alist of &lt;code&gt;(KEY . DEF)&lt;/code&gt; pairs, where KEY is either a key sequence to bind in &lt;code&gt;projectile-command-map&lt;/code&gt; or a projectile command to remap in &lt;code&gt;projectile-mode-map&lt;/code&gt;, and DEF is the counsel-projectile command to which KEY is remapped or bound.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-customizing-action-lists" class="anchor" aria-hidden="true" href="#customizing-action-lists"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Customizing action lists&lt;/h2&gt;
&lt;p&gt;The lists of available actions (including the default action) for most of the commands above are stored in custom variables. If you set one of these variables, either directly or through the through the Customize interface, the new value will be picked up the next time you invoke the corresponding command.&lt;/p&gt;
&lt;p&gt;The variable holding the action list for &lt;code&gt;&amp;lt;command&amp;gt;&lt;/code&gt; is named &lt;code&gt;&amp;lt;command&amp;gt;-action&lt;/code&gt;. The following action list variables are defined:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;counsel-projectile-action&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;counsel-projectile-switch-project-action&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;counsel-projectile-find-file-action&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;counsel-projectile-find-dir-action&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;counsel-projectile-switch-to-buffer-action&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;counsel-projectile-grep-action&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;For instance, the default value of &lt;code&gt;counsel-projectile-action&lt;/code&gt; is:&lt;/p&gt;
&lt;div class="highlight highlight-source-emacs-lisp"&gt;&lt;pre&gt;'(&lt;span class="pl-c1"&gt;1&lt;/span&gt;
  (&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;o&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; counsel-projectile-action
   &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;current window&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
  (&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;j&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; counsel-projectile-action-other-window
   &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;other window&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
  (&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;x&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; counsel-projectile-action-file-extern
   &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;open file externally&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
  (&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;r&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; counsel-projectile-action-file-root
   &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;open file as root&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
  (&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;m&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; counsel-projectile-action-find-file-manually
   &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;find file manually&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
  (&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;p&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; (&lt;span class="pl-k"&gt;lambda&lt;/span&gt; (&lt;span class="pl-v"&gt;_&lt;/span&gt;) (counsel-projectile-switch-project))
   &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;switch project&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;))&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;The first element is the index of the default action, and the remainig ones are the available actions (a key, an action function, and a name for each action). Thus the default action in this list is the first one (&lt;kbd&gt;o&lt;/kbd&gt; key).&lt;/p&gt;
&lt;p&gt;Extra actions can be added to these lists or, alternatively, can be set through ivy's &lt;code&gt;ivy-set-actions&lt;/code&gt; mechanism. If you prefer setting all actions (except the default one) through this mechanism, you can set the action list variable to a single action (e.g. &lt;code&gt;counsel-projectile-action&lt;/code&gt;) instead of a list. If you are not using the Customize interface and want to amend the value of one of these lists rather than setting it from scratch, you can use the function &lt;code&gt;counsel-projectile-modify-action&lt;/code&gt;, which lets you easily:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;add, remove, or move an action,&lt;/li&gt;
&lt;li&gt;change an action key, function, or name,&lt;/li&gt;
&lt;li&gt;change the index of the default action.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;See its docstring for details.&lt;/p&gt;
&lt;p&gt;The mechanism to customize action lists is slightly different for some commands that internally rely on built-in ivy commands and hence inherit these command's actions. For these commands, a variable &lt;code&gt;&amp;lt;command&amp;gt;-extra-actions&lt;/code&gt; is defined:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;counsel-projectile-git-grep-extra-actions&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;counsel-projectile-ag-extra-actions&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;counsel-projectile-rg-extra-actions&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;counsel-projectile-org-capture-extra-actions&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;These variable have the same format as above without the initial index. You can also modify the built-in command's action through ivy's &lt;code&gt;ivy-set-actions&lt;/code&gt; mechanism.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-setting-counsel-projectile-org-capture-templates" class="anchor" aria-hidden="true" href="#setting-counsel-projectile-org-capture-templates"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Setting &lt;code&gt;counsel-projectile-org-capture&lt;/code&gt; templates&lt;/h2&gt;
&lt;p&gt;The project-specific capture templates for &lt;code&gt;counsel-projectile-org-capture&lt;/code&gt; are read from the variable &lt;code&gt;counsel-projectile-org-capture-templates&lt;/code&gt;. This variable has the same format as the variable &lt;code&gt;org-capture-templates&lt;/code&gt;, except that in a template's name or target, the placeholders &lt;code&gt;${root}&lt;/code&gt; and
&lt;code&gt;${name}&lt;/code&gt; can be used to stand for the current project root and
name, respectively.&lt;/p&gt;
&lt;p&gt;The default value contains a single template, whose name is
&lt;code&gt;[${name}] Task&lt;/code&gt; and whose target is:&lt;/p&gt;
&lt;div class="highlight highlight-source-emacs-lisp"&gt;&lt;pre&gt;(file+headline &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;${root}/notes.org}&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;Tasks&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;This points to headline &lt;code&gt;Tasks&lt;/code&gt; in file &lt;code&gt;notes.org&lt;/code&gt; in the project root directory (one file per project).&lt;/p&gt;
&lt;p&gt;Two other examples of valid targets are:&lt;/p&gt;
&lt;div class="highlight highlight-source-emacs-lisp"&gt;&lt;pre&gt;(file+headline &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;${root}/${name}.org}&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;Tasks&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
(file+olp &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;~/notes.org&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;${root}&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;Tasks&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;The first one is similar to the default value's target, except that the file is named after the project name (this can be handy if you use org-mode's agenda since the project name is then displayed as category). The second one points to outline path &lt;code&gt;&amp;lt;project-root&amp;gt;/Tasks&lt;/code&gt; in file &lt;code&gt;~/notes.org&lt;/code&gt; (same file for all projects).&lt;/p&gt;
&lt;p&gt;Project-specific template contexts are read from the variable &lt;code&gt;counsel-projectile-org-capture-templates-contexts&lt;/code&gt;, which has the same format as &lt;code&gt;org-capture-templates-contexts&lt;/code&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-removing-the-current-project-or-buffer-from-the-list-of-candidates" class="anchor" aria-hidden="true" href="#removing-the-current-project-or-buffer-from-the-list-of-candidates"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Removing the current project or buffer from the list of candidates&lt;/h2&gt;
&lt;p&gt;By default, when calling &lt;code&gt;counsel-projectile-switch-project&lt;/code&gt;, the current project (if any) is included in the candidates list and preselected. Similarly, when calling &lt;code&gt;counsel-projectile-switch-to-buffer&lt;/code&gt;, the current buffer is included in the candidates list and preselected. If you prefer removing these elements from the candidate lists of these commands, you can set the variables &lt;code&gt;counsel-projectile-remove-current-project&lt;/code&gt; and &lt;code&gt;counsel-projectile-remove-current-buffer&lt;/code&gt; accordingly.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-initial-input-for-the-project-search-commands" class="anchor" aria-hidden="true" href="#initial-input-for-the-project-search-commands"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Initial input for the project search commands&lt;/h2&gt;
&lt;p&gt;If you want some initial input to be inserted in the minibuffer every time you call &lt;code&gt;counsel-projectile-grep&lt;/code&gt;, &lt;code&gt;counsel-projectile-ag&lt;/code&gt;, or &lt;code&gt;counsel-projectile-rg&lt;/code&gt;, you can customize the variables &lt;code&gt;counsel-projectile-grep-initial-input&lt;/code&gt;, &lt;code&gt;counsel-projectile-ag-initial-input&lt;/code&gt;, or &lt;code&gt;counsel-projectile-rg-initial-input&lt;/code&gt; accordingly. Each of these variable, if non &lt;code&gt;nil&lt;/code&gt;, should hold a Lisp expression whose evaluation yields the initial input string. If you use the Customize interface, some choices are proposed based on various versions of the &lt;code&gt;thing-at-point&lt;/code&gt; function. Note that you can always insert the value of &lt;code&gt;(ivy-thing-at-point)&lt;/code&gt; by hitting &lt;kbd&gt;M-n&lt;/kbd&gt; in the minibuffer.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-matcher-for-counsel-projectile-find-file" class="anchor" aria-hidden="true" href="#matcher-for-counsel-projectile-find-file"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Matcher for &lt;code&gt;counsel-projectile-find-file&lt;/code&gt;&lt;/h2&gt;
&lt;p&gt;By default, the command &lt;code&gt;counsel-projectile-find-file&lt;/code&gt; relies on the the matcher of the command &lt;code&gt;counsel-find-file&lt;/code&gt; to display files matching minibuffer input, allowing to ignore some files based on the variable &lt;code&gt;counsel-find-file-ignore-regexp&lt;/code&gt;. It is possible to use another matcher by setting the variable &lt;code&gt;counsel-projectile-find-file-matcher&lt;/code&gt;. Some choices are proposed if you use the Customize interface, in particular the &lt;code&gt;counsel-projectile-find-file-matcher-basename&lt;/code&gt; matcher which is provided by counsel-projectile and only displays files whose basename matches the minibuffer input (if there is none, it shows all matching files).&lt;/p&gt;
&lt;p&gt;The matcher specified by &lt;code&gt;counsel-find-file-ignore-regexp&lt;/code&gt; is also used by &lt;code&gt;counsel-projectile&lt;/code&gt; to match files.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-sorting-candidates" class="anchor" aria-hidden="true" href="#sorting-candidates"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Sorting candidates&lt;/h2&gt;
&lt;p&gt;The following commands allow to modify the way candidates are sorted:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;cousnel-projectile-switch-project&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;counsel-projectile-find-file&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;counsel-projectile-find-dir&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;counsel-projectile-switch-to-buffer&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Sorting for these commands is controlled by the following variables, respectively:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;counsel-projectile-sort-projects&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;counsel-projectile-sort-files&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;counsel-projectile-sort-directories&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;counsel-projectile-sort-buffers&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;If one of these variable is nil, the default, the command's candidates are not sorted. If it is non-nil, they are sorted. The sorting criterion can be customized through the variable &lt;code&gt;ivy-sort-functions-alist&lt;/code&gt;. For instance, if you want files to be sorted from newest to oldest, then you need to add the following entry to this list:&lt;/p&gt;
&lt;div class="highlight highlight-source-emacs-lisp"&gt;&lt;pre&gt;'(counsel-projectile-find-file &lt;span class="pl-k"&gt;.&lt;/span&gt; file-newer-than-file-p)&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Note that the &lt;code&gt;counsel-projectile&lt;/code&gt; command always sorts buffers before files. Buffers are sorted as in &lt;code&gt;counsel-projectile-switch-to-buffer&lt;/code&gt; and files are sorted according to &lt;code&gt;counsel-projectile-find-file&lt;/code&gt;.&lt;/p&gt;
&lt;h1&gt;&lt;a id="user-content-upgrading" class="anchor" aria-hidden="true" href="#upgrading"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Upgrading&lt;/h1&gt;
&lt;h2&gt;&lt;a id="user-content-breaking-changes-in-version-03" class="anchor" aria-hidden="true" href="#breaking-changes-in-version-03"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Breaking changes in version &lt;code&gt;0.3&lt;/code&gt;&lt;/h2&gt;
&lt;h3&gt;&lt;a id="user-content-key-bindings" class="anchor" aria-hidden="true" href="#key-bindings"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Key bindings&lt;/h3&gt;
&lt;p&gt;The keymaps &lt;code&gt;counsel-projectile-mode-map&lt;/code&gt; and &lt;code&gt;counsel-projectile-command-map&lt;/code&gt; no longer exist. The counsel-projectile key bindings are now determined by the variable &lt;code&gt;counsel-projectile-key-bindings&lt;/code&gt;, which see, and added directly to the native projectile keymaps (&lt;code&gt;projectile-mode-map&lt;/code&gt; and &lt;code&gt;projectile-command-map&lt;/code&gt;).&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-breaking-changes-in-version-02" class="anchor" aria-hidden="true" href="#breaking-changes-in-version-02"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Breaking changes in version &lt;code&gt;0.2&lt;/code&gt;&lt;/h2&gt;
&lt;h3&gt;&lt;a id="user-content-key-bindings-1" class="anchor" aria-hidden="true" href="#key-bindings-1"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Key bindings&lt;/h3&gt;
&lt;p&gt;The commands &lt;code&gt;counsel-projectile-on&lt;/code&gt;, &lt;code&gt;counsel-projectile-off&lt;/code&gt; and &lt;code&gt;counsel-projectile-toggle&lt;/code&gt; no longer exist. They are replaced with the counsel-projectile minor mode. You can toggle this mode either by calling the &lt;code&gt;counsel-projectile-mode&lt;/code&gt; command. or by setting the &lt;code&gt;counsel-projectile-mode&lt;/code&gt; variable throught the Customize interface.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-action-lists" class="anchor" aria-hidden="true" href="#action-lists"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Action lists&lt;/h3&gt;
&lt;p&gt;The available actions for the various counsel-projectile commands are now customized differently:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;The custom variable corresponding to &lt;code&gt;&amp;lt;command&amp;gt;&lt;/code&gt; is now named &lt;code&gt;&amp;lt;command-action&amp;gt;&lt;/code&gt; instead of &lt;code&gt;&amp;lt;command-actions&amp;gt;&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;This variable now stores all the available actions, including the default action, not only the extra actions.&lt;/li&gt;
&lt;li&gt;It also stores the index of the default action (it is a list whose first element is this index and whose remaining elements are the available actions).&lt;/li&gt;
&lt;li&gt;This variable is now used as the value of the &lt;code&gt;:action&lt;/code&gt; parameter for the command's &lt;code&gt;ivy-read&lt;/code&gt; call. Hence if you set it outside the Customize interface, you no longer need to call &lt;code&gt;ivy-set-actions&lt;/code&gt; afterwards. If you set extra actions through &lt;code&gt;ivy-set-actions&lt;/code&gt;, they will not replace the variable's actions but will be added to them.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Also, in the default action lists, the keys set for some actions have changed, mainly for the &lt;code&gt;counsel-projectile-switch-project&lt;/code&gt; command. Indeed, as new actions were added to this command, the corresponding list of keys was becoming somewhat inconsistent. The new keys replicate the default projectile key bindings (for instance, the action to save all project buffers is now called with the key &lt;kbd&gt;S&lt;/kbd&gt;, mimicking the default key binding &lt;kbd&gt;C-c p S&lt;/kbd&gt; for the command &lt;code&gt;projectile-save-project-buffers&lt;/code&gt;). When an action calls a command that has no default projectile key binding, its key is chosen among those that are not bound by projectile by default.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-minibuffer-keymap" class="anchor" aria-hidden="true" href="#minibuffer-keymap"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Minibuffer keymap&lt;/h3&gt;
&lt;p&gt;The minibuffer keymap &lt;code&gt;counsel-projectile-map&lt;/code&gt; no longer exists. It was only used to bind a key (&lt;kbd&gt;M-SPC&lt;/kbd&gt; by default) to the command &lt;code&gt;counsel-projectile-drop-to-switch-project&lt;/code&gt; exiting the current command and calling &lt;code&gt;counsel-projectile-switch-project&lt;/code&gt;. The same functionality is now implemented in a simpler way through an action that calls &lt;code&gt;counsel-projectile-switch-project&lt;/code&gt;, whose key is &lt;kbd&gt;p&lt;/kbd&gt; by default. Concretely, you should now hit &lt;kbd&gt;M-o p&lt;/kbd&gt; instead of &lt;kbd&gt;M-SP&lt;/kbd&gt;.&lt;/p&gt;
&lt;h1&gt;&lt;a id="user-content-contributors" class="anchor" aria-hidden="true" href="#contributors"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Contributors&lt;/h1&gt;
&lt;p&gt;Counsel-projectile is inspired by &lt;a href="https://github.com/bbatsov/helm-projectile"&gt;helm-projectile&lt;/a&gt;. Many thanks to &lt;a href="https://github.com/abo-abo"&gt;abo-abo&lt;/a&gt; and &lt;a href="https://github.com/DamienCassou"&gt;DamienCassou&lt;/a&gt; who encouraged and helped me to start this repository, as well as all contributors and users who have submitted issues and pull requests.&lt;/p&gt;
&lt;/article&gt;&lt;/div&gt;</description><author>ericdanan</author><guid isPermaLink="false">https://github.com/ericdanan/counsel-projectile</guid><pubDate>Tue, 11 Feb 2020 00:23:00 GMT</pubDate></item><item><title>emacs-evil/evil-collection #24 in Emacs Lisp, This month</title><link>https://github.com/emacs-evil/evil-collection</link><description>&lt;p&gt;&lt;i&gt;A set of keybindings for evil-mode&lt;/i&gt;&lt;/p&gt;&lt;div id="readme" class="org" data-path="readme.org"&gt;&lt;article class="markdown-body entry-content p-5" itemprop="text"&gt;&lt;h1&gt;&lt;a id="user-content-evil-collection" class="anchor" aria-hidden="true" href="#evil-collection"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Evil Collection&lt;/h1&gt;
&lt;p&gt;&lt;a href="https://travis-ci.org/emacs-evil/evil-collection" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/008a41bed9cd2d1d2bf3c4e881cbb3ba8370149d/68747470733a2f2f7472617669732d63692e6f72672f656d6163732d6576696c2f6576696c2d636f6c6c656374696f6e2e7376673f6272616e63683d6d6173746572" alt="https://travis-ci.org/emacs-evil/evil-collection.svg?branch=master" data-canonical-src="https://travis-ci.org/emacs-evil/evil-collection.svg?branch=master" style="max-width:100%;"&gt;&lt;/a&gt;
  &lt;a href="https://melpa.org/#/evil-collection" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/f1a9a5c03507dd88d64abfb6847cfb0d9ddee778/68747470733a2f2f6d656c70612e6f72672f7061636b616765732f6576696c2d636f6c6c656374696f6e2d62616467652e737667" alt="https://melpa.org/packages/evil-collection-badge.svg" data-canonical-src="https://melpa.org/packages/evil-collection-badge.svg" style="max-width:100%;"&gt;&lt;/a&gt;
  &lt;a href="https://stable.melpa.org/#/evil-collection" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/64f5f63f87eb0a9682ace1496957384f3bc62f6a/68747470733a2f2f737461626c652e6d656c70612e6f72672f7061636b616765732f6576696c2d636f6c6c656374696f6e2d62616467652e737667" alt="https://stable.melpa.org/packages/evil-collection-badge.svg" data-canonical-src="https://stable.melpa.org/packages/evil-collection-badge.svg" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;This is a collection of &lt;a href="https://github.com/emacs-evil/evil"&gt;Evil&lt;/a&gt; bindings for &lt;i&gt;the parts of Emacs&lt;/i&gt; that Evil does
  not cover properly by default, such as &lt;code&gt;help-mode&lt;/code&gt;, &lt;code&gt;M-x calendar&lt;/code&gt;, Eshell and
  more.&lt;/p&gt;
&lt;p&gt;&lt;b&gt;Warning:&lt;/b&gt; Expect some default bindings to change in the future.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-goals" class="anchor" aria-hidden="true" href="#goals"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Goals&lt;/h2&gt;
&lt;ol&gt;
  &lt;li&gt;Reduce context switching: As soon as “moving around” gets hardwired
    to &lt;code&gt;&amp;lt;hjkl&amp;gt;&lt;/code&gt;, it becomes frustratingly inefficient not to have it everywhere.&lt;/li&gt;
  &lt;li&gt;Community work: setting up bindings is tremendous work and joining force can
    only save hours for all of Evil users out there.  While not everyone may agree
    on the chosen bindings, it helps to have something to start with rather than
    nothing at all.  In the end, users are free to override a subset of the proposed
    bindings to best fit their needs.&lt;/li&gt;
  &lt;li&gt;Consistency: Having all bindings defined in one place allows for enforcing
    consistency across special modes and coordinating the community work to define a
    reference implementation.&lt;/li&gt;
&lt;/ol&gt;
&lt;h2&gt;&lt;a id="user-content-installation" class="anchor" aria-hidden="true" href="#installation"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Installation&lt;/h2&gt;
&lt;ul&gt;
  &lt;li&gt;Get the package, either from MELPA:&lt;/li&gt;
&lt;/ul&gt;
&lt;pre&gt;M-x package-install RET evil-collection RET
&lt;/pre&gt;
&lt;p&gt;Or clone / download this repository and modify your &lt;code&gt;load-path&lt;/code&gt;:&lt;/p&gt;
&lt;pre&gt;(add-to-list 'load-path (expand-file-name "/path/to/evil-collection/" user-emacs-directory))
&lt;/pre&gt;
&lt;ul&gt;
  &lt;li&gt;Register the bindings, either all at once with&lt;/li&gt;
&lt;/ul&gt;
&lt;pre&gt;(evil-collection-init)
&lt;/pre&gt;
&lt;p&gt;or mode-by-mode, for instance:&lt;/p&gt;
&lt;pre&gt;(with-eval-after-load 'calendar (evil-collection-calendar-setup))
&lt;/pre&gt;
&lt;p&gt;or by providing an argument to &lt;code&gt;evil-collection-init&lt;/code&gt;:&lt;/p&gt;
&lt;pre&gt;(evil-collection-init 'calendar)
&lt;/pre&gt;
&lt;p&gt;The list of supported modes is configured by &lt;code&gt;evil-collection-mode-list&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;&lt;code&gt;evil-collection&lt;/code&gt; assumes &lt;code&gt;evil-want-keybinding&lt;/code&gt; is set to nil and
  &lt;code&gt;evil-want-integration&lt;/code&gt; is set to t before loading &lt;code&gt;evil&lt;/code&gt; and
  &lt;code&gt;evil-collection.&lt;/code&gt; Note some other packages may load evil (e.g. evil-leader)
  so bear that in mind when determining when to set the variables.&lt;/p&gt;
&lt;p&gt;See &lt;a href="https://github.com/emacs-evil/evil-collection/issues/60"&gt;https://github.com/emacs-evil/evil-collection/issues/60&lt;/a&gt; and &lt;a href="https://github.com/emacs-evil/evil/pull/1087"&gt;https://github.com/emacs-evil/evil/pull/1087&lt;/a&gt;
  for more details.&lt;/p&gt;
&lt;p&gt;For example:&lt;/p&gt;
&lt;div class="highlight highlight-source-emacs-lisp"&gt;&lt;pre&gt;(&lt;span class="pl-k"&gt;setq&lt;/span&gt; evil-want-integration &lt;span class="pl-c1"&gt;t&lt;/span&gt;) &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt;; This is optional since it's already set to t by default.&lt;/span&gt;
(&lt;span class="pl-k"&gt;setq&lt;/span&gt; evil-want-keybinding &lt;span class="pl-c1"&gt;nil&lt;/span&gt;)
(&lt;span class="pl-c1"&gt;require&lt;/span&gt; &lt;span class="pl-c1"&gt;'evil&lt;/span&gt;)
(&lt;span class="pl-k"&gt;when&lt;/span&gt; (&lt;span class="pl-c1"&gt;require&lt;/span&gt; &lt;span class="pl-c1"&gt;'evil-collection&lt;/span&gt; &lt;span class="pl-c1"&gt;nil&lt;/span&gt; &lt;span class="pl-c1"&gt;t&lt;/span&gt;)
  (evil-collection-init))&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Here’s another full TLDR &lt;code&gt;use-package&lt;/code&gt; example.&lt;/p&gt;
&lt;div class="highlight highlight-source-emacs-lisp"&gt;&lt;pre&gt;(&lt;span class="pl-c1"&gt;use-package&lt;/span&gt; evil
  &lt;span class="pl-c1"&gt;:ensure&lt;/span&gt; &lt;span class="pl-c1"&gt;t&lt;/span&gt;
  &lt;span class="pl-c1"&gt;:init&lt;/span&gt;
  (&lt;span class="pl-k"&gt;setq&lt;/span&gt; evil-want-integration &lt;span class="pl-c1"&gt;t&lt;/span&gt;) &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt;; This is optional since it's already set to t by default.&lt;/span&gt;
  (&lt;span class="pl-k"&gt;setq&lt;/span&gt; evil-want-keybinding &lt;span class="pl-c1"&gt;nil&lt;/span&gt;)
  &lt;span class="pl-c1"&gt;:config&lt;/span&gt;
  (evil-mode &lt;span class="pl-c1"&gt;1&lt;/span&gt;))

(&lt;span class="pl-c1"&gt;use-package&lt;/span&gt; evil-collection
  &lt;span class="pl-c1"&gt;:after&lt;/span&gt; evil
  &lt;span class="pl-c1"&gt;:ensure&lt;/span&gt; &lt;span class="pl-c1"&gt;t&lt;/span&gt;
  &lt;span class="pl-c1"&gt;:config&lt;/span&gt;
  (evil-collection-init))&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;NOTE: If you don’t like surprises but still want to use &lt;code&gt;evil-collection-init&lt;/code&gt;, setting &lt;code&gt;evil-collection-mode-list&lt;/code&gt; to nil
  and adding each mode manually might be a better option.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-configuration" class="anchor" aria-hidden="true" href="#configuration"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Configuration&lt;/h2&gt;
&lt;p&gt;Modify &lt;code&gt;evil-collection-mode-list&lt;/code&gt; to disable or add any modes that should be evilified by &lt;code&gt;evil-collection&lt;/code&gt;.&lt;/p&gt;
&lt;table&gt;
  &lt;tbody&gt;&lt;tr&gt;&lt;th&gt;Variable&lt;/th&gt;&lt;th&gt;Default&lt;/th&gt;&lt;th&gt;Description&lt;/th&gt;&lt;/tr&gt;
  &lt;tr&gt;&lt;td&gt;evil-collection-company-use-tng&lt;/td&gt;&lt;td&gt;t&lt;/td&gt;&lt;td&gt;Set up autocompletion to be similar to Vim’s YouCompleteMe.&lt;/td&gt;&lt;/tr&gt;
  &lt;tr&gt;&lt;td&gt;evil-collection-outline-bind-tab-p&lt;/td&gt;&lt;td&gt;nil&lt;/td&gt;&lt;td&gt;Enable &amp;lt;tab&amp;gt;-based bindings in Outline mode.&lt;/td&gt;&lt;/tr&gt;
  &lt;tr&gt;&lt;td&gt;evil-collection-term-sync-state-and-mode-p&lt;/td&gt;&lt;td&gt;t&lt;/td&gt;&lt;td&gt;Synchronize insert/normal state with char/line-mode in term-mode.&lt;/td&gt;&lt;/tr&gt;
  &lt;tr&gt;&lt;td&gt;evil-collection-setup-minibuffer&lt;/td&gt;&lt;td&gt;nil&lt;/td&gt;&lt;td&gt;Set up Vim style bindings in the minibuffer.&lt;/td&gt;&lt;/tr&gt;
  &lt;tr&gt;&lt;td&gt;evil-collection-setup-debugger-keys&lt;/td&gt;&lt;td&gt;t&lt;/td&gt;&lt;td&gt;Set up debugger keys for certain modes.&lt;/td&gt;&lt;/tr&gt;
&lt;/tbody&gt;&lt;/table&gt;
&lt;p&gt;For example, if you want to enable Evil in the minibuffer, you’ll have to turn it on
  explicitly by customizing &lt;code&gt;evil-collection-setup-minibuffer&lt;/code&gt; to &lt;code&gt;t&lt;/code&gt;.
  Some minibuffer-related packages such as Helm rely on this option.&lt;/p&gt;
&lt;p&gt;&lt;code&gt;use-package&lt;/code&gt; example:&lt;/p&gt;
&lt;div class="highlight highlight-source-emacs-lisp"&gt;&lt;pre&gt;(&lt;span class="pl-c1"&gt;use-package&lt;/span&gt; evil-collection
  &lt;span class="pl-c1"&gt;:custom&lt;/span&gt; (evil-collection-setup-minibuffer &lt;span class="pl-c1"&gt;t&lt;/span&gt;)
  &lt;span class="pl-c1"&gt;:init&lt;/span&gt; (evil-collection-init))&lt;/pre&gt;&lt;/div&gt;
&lt;h2&gt;&lt;a id="user-content-guidelines" class="anchor" aria-hidden="true" href="#guidelines"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Guidelines&lt;/h2&gt;
&lt;p&gt;The following rules serve as guiding principles to define the set of standard
  Evil bindings for various modes.  Since special modes are by definition
  structurally incomparable, those rules cannot be expected to be applied
  universally.&lt;/p&gt;
&lt;p&gt;The rules are more-or-less sorted by priority.&lt;/p&gt;
&lt;ol&gt;
  &lt;li&gt;Don’t bind anything to &lt;code&gt;:&lt;/code&gt; nor &lt;code&gt;&amp;lt;escape&amp;gt;&lt;/code&gt;.&lt;/li&gt;
  &lt;li&gt;Keep the movement keys when possible and sensible.
    &lt;ul&gt;
      &lt;li&gt;&lt;code&gt;h&lt;/code&gt;, &lt;code&gt;j&lt;/code&gt;, &lt;code&gt;k&lt;/code&gt;, &lt;code&gt;l&lt;/code&gt;&lt;/li&gt;
      &lt;li&gt;&lt;code&gt;w&lt;/code&gt;, &lt;code&gt;W&lt;/code&gt;, &lt;code&gt;b&lt;/code&gt;, &lt;code&gt;B&lt;/code&gt;, &lt;code&gt;e&lt;/code&gt;, &lt;code&gt;E&lt;/code&gt;, &lt;code&gt;ge&lt;/code&gt;, &lt;code&gt;gE&lt;/code&gt;&lt;/li&gt;
      &lt;li&gt;&lt;code&gt;f&lt;/code&gt;, &lt;code&gt;F&lt;/code&gt;, &lt;code&gt;t&lt;/code&gt;, &lt;code&gt;T&lt;/code&gt;, &lt;code&gt;;&lt;/code&gt;, =,=&lt;/li&gt;
      &lt;li&gt;&lt;code&gt;gg&lt;/code&gt;, &lt;code&gt;G&lt;/code&gt;&lt;/li&gt;
      &lt;li&gt;&lt;code&gt;|&lt;/code&gt;&lt;/li&gt;
      &lt;li&gt;&lt;code&gt;(&lt;/code&gt;, &lt;code&gt;)&lt;/code&gt;&lt;/li&gt;
      &lt;li&gt;&lt;code&gt;{&lt;/code&gt;, &lt;code&gt;}&lt;/code&gt;&lt;/li&gt;
      &lt;li&gt;&lt;code&gt;%&lt;/code&gt;&lt;/li&gt;
      &lt;li&gt;&lt;code&gt;+&lt;/code&gt;, &lt;code&gt;-&lt;/code&gt;, &lt;code&gt;0&lt;/code&gt;, &lt;code&gt;^&lt;/code&gt;, &lt;code&gt;$&lt;/code&gt;&lt;/li&gt;
      &lt;li&gt;&lt;code&gt;C-i&lt;/code&gt;, &lt;code&gt;C-o&lt;/code&gt;&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;Keep the yanking and register keys when possible and sensible.
    &lt;ul&gt;
      &lt;li&gt;&lt;code&gt;y&lt;/code&gt;, &lt;code&gt;Y&lt;/code&gt;&lt;/li&gt;
      &lt;li&gt;=”=&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;Keep the search keys when possible and sensible.
    &lt;ul&gt;
      &lt;li&gt;&lt;code&gt;/&lt;/code&gt;, &lt;code&gt;?&lt;/code&gt;&lt;/li&gt;
      &lt;li&gt;&lt;code&gt;#&lt;/code&gt;, &lt;code&gt;*&lt;/code&gt;&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;Keep the mark keys when possible and sensible.
    &lt;ul&gt;
      &lt;li&gt;&lt;code&gt;m&lt;/code&gt;&lt;/li&gt;
      &lt;li&gt;=’=, &lt;code&gt;~&lt;/code&gt;&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;Keep the windowing keys when possible and sensible.
    &lt;ul&gt;
      &lt;li&gt;&lt;code&gt;H&lt;/code&gt;, &lt;code&gt;L&lt;/code&gt;, &lt;code&gt;M&lt;/code&gt;&lt;/li&gt;
      &lt;li&gt;&lt;code&gt;C-e&lt;/code&gt;, &lt;code&gt;C-y&lt;/code&gt;&lt;/li&gt;
      &lt;li&gt;&lt;code&gt;C-f&lt;/code&gt;, &lt;code&gt;C-b&lt;/code&gt;&lt;/li&gt;
      &lt;li&gt;&lt;code&gt;C-d&lt;/code&gt;, &lt;code&gt;C-u&lt;/code&gt;&lt;/li&gt;
      &lt;li&gt;&lt;code&gt;C-w&lt;/code&gt;-prefixed bindings.&lt;/li&gt;
      &lt;li&gt;Some &lt;code&gt;z&lt;/code&gt;-prefixed bindings (see below).&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;The following keys are free when insert state does not make sense in the
    current mode:
    &lt;ul&gt;
      &lt;li&gt;&lt;code&gt;a&lt;/code&gt;, &lt;code&gt;A&lt;/code&gt;, &lt;code&gt;i&lt;/code&gt;, &lt;code&gt;I&lt;/code&gt;&lt;/li&gt;
      &lt;li&gt;&lt;code&gt;c&lt;/code&gt;, &lt;code&gt;C&lt;/code&gt;, &lt;code&gt;r&lt;/code&gt;, &lt;code&gt;R&lt;/code&gt;, &lt;code&gt;s&lt;/code&gt;, &lt;code&gt;S&lt;/code&gt;&lt;/li&gt;
      &lt;li&gt;&lt;code&gt;d&lt;/code&gt;, &lt;code&gt;D&lt;/code&gt;, &lt;code&gt;x&lt;/code&gt;, &lt;code&gt;X&lt;/code&gt;&lt;/li&gt;
      &lt;li&gt;&lt;code&gt;o&lt;/code&gt;, &lt;code&gt;O&lt;/code&gt;&lt;/li&gt;
      &lt;li&gt;&lt;code&gt;p&lt;/code&gt;, &lt;code&gt;P&lt;/code&gt;&lt;/li&gt;
      &lt;li&gt;&lt;code&gt;=&lt;/code&gt;, &lt;code&gt;&amp;lt;&lt;/code&gt;, &lt;code&gt;&amp;gt;&lt;/code&gt;&lt;/li&gt;
      &lt;li&gt;&lt;code&gt;J&lt;/code&gt;&lt;/li&gt;
      &lt;li&gt;&lt;code&gt;~&lt;/code&gt;
        &lt;p&gt;Any of those keys can be set to be a prefix key.&lt;/p&gt;
      &lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;Prefix keys: &lt;code&gt;g&lt;/code&gt; and &lt;code&gt;z&lt;/code&gt; are the ubiquitous prefix keys.
    &lt;ul&gt;
      &lt;li&gt;&lt;code&gt;g&lt;/code&gt; generally stands for “go” and is best used for movements.&lt;/li&gt;
      &lt;li&gt;&lt;code&gt;z&lt;/code&gt; is used for scrolling, folding, spell-checking and more.&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;Macro and action keys
    &lt;ul&gt;
      &lt;li&gt;&lt;code&gt;@&lt;/code&gt;, &lt;code&gt;q&lt;/code&gt;&lt;/li&gt;
      &lt;li&gt;&lt;code&gt;.&lt;/code&gt;&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;Ensure terminal compatibility without sacrificing GUI key bindings.
    &lt;ul&gt;
      &lt;li&gt;Tab key
        &lt;ul&gt;
          &lt;li&gt;Tab key is recognized as &lt;code&gt;&amp;lt;tab&amp;gt;&lt;/code&gt; in GUI and &lt;code&gt;TAB&lt;/code&gt; in terminal.
            &lt;code&gt;TAB&lt;/code&gt; equals &lt;code&gt;C-i&lt;/code&gt;.&lt;/li&gt;
          &lt;li&gt;Since &lt;code&gt;C-i&lt;/code&gt; is bound to jumping forward for vim compatibility,
            bind &lt;code&gt;g[&lt;/code&gt; and &lt;code&gt;g]&lt;/code&gt; to the functions that Shift+Tab and Tab
            are bound to on GUI for terminal compatibility.&lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
      &lt;li&gt;Enter key
        &lt;ul&gt;
          &lt;li&gt;Enter key is recognized as &lt;code&gt;&amp;lt;return&amp;gt;&lt;/code&gt; in GUI and &lt;code&gt;RET&lt;/code&gt; in terminal.
            &lt;code&gt;RET&lt;/code&gt; equals &lt;code&gt;Ctrl+m&lt;/code&gt;.&lt;/li&gt;
          &lt;li&gt;Bind only &lt;code&gt;RET&lt;/code&gt; and &lt;code&gt;M-RET&lt;/code&gt;. Or, bind &lt;code&gt;RET&lt;/code&gt; and &lt;code&gt;M-RET&lt;/code&gt; to the same
            functions &lt;code&gt;&amp;lt;return&amp;gt;&lt;/code&gt; and &lt;code&gt;&amp;lt;M-return&amp;gt;&lt;/code&gt; are bound to.&lt;/li&gt;
          &lt;li&gt;&lt;code&gt;S-RET&lt;/code&gt; is impossible on terminal. Bind &lt;code&gt;&amp;lt;S-return&amp;gt;&lt;/code&gt; and a vacant key
            to the same function for terminal compatibility.&lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ol&gt;
&lt;h2&gt;&lt;a id="user-content-rationale" class="anchor" aria-hidden="true" href="#rationale"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Rationale&lt;/h2&gt;
&lt;p&gt;Many special modes share the same set of similar actions.  Those actions should
  share the same bindings across all modes whenever feasible.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-motion-------gj-gk-c-j-c-k" class="anchor" aria-hidden="true" href="#motion-------gj-gk-c-j-c-k"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Motion (&lt;code&gt;[&lt;/code&gt;, &lt;code&gt;]&lt;/code&gt;, &lt;code&gt;{&lt;/code&gt;, &lt;code&gt;}&lt;/code&gt;, &lt;code&gt;(&lt;/code&gt;, &lt;code&gt;)&lt;/code&gt;, &lt;code&gt;gj&lt;/code&gt;, &lt;code&gt;gk&lt;/code&gt;, &lt;code&gt;C-j&lt;/code&gt;, &lt;code&gt;C-k&lt;/code&gt;)&lt;/h3&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;code&gt;[&lt;/code&gt; and &lt;code&gt;]&lt;/code&gt;: Use &lt;code&gt;[-&lt;/code&gt; and &lt;code&gt;]-&lt;/code&gt; prefixed keys for navigation between sections.
    &lt;p&gt;If the mode makes no difference between the end of a section and the beginning
      of the next, use &lt;code&gt;[&lt;/code&gt; and &lt;code&gt;]&lt;/code&gt;.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;&lt;code&gt;gj&lt;/code&gt; and &lt;code&gt;gk&lt;/code&gt;: synonym for &lt;code&gt;[&lt;/code&gt; and &lt;code&gt;]&lt;/code&gt;.  That’s what &lt;a href="https://github.com/emacs-evil/evil-magit"&gt;evil-magit&lt;/a&gt; does.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;b&gt;Question:&lt;/b&gt; Should &lt;code&gt;gj&lt;/code&gt; / &lt;code&gt;gk&lt;/code&gt; rather be synonyms for &lt;code&gt;C-j&lt;/code&gt; / &lt;code&gt;C-k&lt;/code&gt;?  They cannot
  emulate the behaviour of &lt;code&gt;[]&lt;/code&gt; or &lt;code&gt;][&lt;/code&gt;.&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;code&gt;C-j&lt;/code&gt;, &lt;code&gt;C-k&lt;/code&gt;: If there is granularity, i.e. subsections, use &lt;code&gt;C-j&lt;/code&gt; and &lt;code&gt;C-k&lt;/code&gt;
    to browse them.  This reflects &lt;a href="https://github.com/emacs-evil/evil-magit"&gt;evil-magit&lt;/a&gt; and &lt;a href="https://github.com/JorisE/evil-mu4e"&gt;evil-mu4e&lt;/a&gt; default
    bindings.&lt;/li&gt;
  &lt;li&gt;&lt;code&gt;{&lt;/code&gt;, &lt;code&gt;}&lt;/code&gt;: If there is no paragraph structure, &lt;code&gt;{&lt;/code&gt; and &lt;code&gt;}&lt;/code&gt; can be used for sub-sectioning.&lt;/li&gt;
  &lt;li&gt;&lt;code&gt;(&lt;/code&gt;, &lt;code&gt;)&lt;/code&gt;: If there is no sentence structure, &lt;code&gt;(&lt;/code&gt; and &lt;code&gt;)&lt;/code&gt; can be used for sub-sectioning.&lt;/li&gt;
  &lt;li&gt;&lt;code&gt;HJKL&lt;/code&gt;: &lt;code&gt;hjkl&lt;/code&gt; can be used for atomic movements, but &lt;code&gt;HJKL&lt;/code&gt; can usually not be used
    because &lt;code&gt;H&lt;/code&gt;, &lt;code&gt;K&lt;/code&gt; and &lt;code&gt;L&lt;/code&gt; are all universal (&lt;code&gt;J&lt;/code&gt; is &lt;code&gt;evil-join&lt;/code&gt; and usually
    does not make sense in special modes).&lt;/li&gt;
  &lt;li&gt;&lt;code&gt;C-h&lt;/code&gt; should not be remapped: Since we have &lt;code&gt;C-j&lt;/code&gt; and &lt;code&gt;C-k&lt;/code&gt; for vertical motion, it would
    make sense to use &lt;code&gt;C-h&lt;/code&gt; and &lt;code&gt;C-l&lt;/code&gt; for horizontal motion.  There are some
    shortcomings though:
    &lt;ul&gt;
      &lt;li&gt;In Vim, &lt;code&gt;C-h&lt;/code&gt; works as backspace, but Evil does not follow that behaviour.&lt;/li&gt;
      &lt;li&gt;In Emacs, it is a prefix key for all help-related commands, and so is &lt;code&gt;&amp;lt;f1&amp;gt;&lt;/code&gt;.&lt;/li&gt;
      &lt;li&gt;Most importantly, &lt;code&gt;C-h&lt;/code&gt; is too widespread and ubiquitous to be replaced.
        So we don’t.&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;&lt;code&gt;C-l&lt;/code&gt;: As a consequence of the former point, &lt;code&gt;C-l&lt;/code&gt; is available.&lt;/li&gt;
  &lt;li&gt;&lt;code&gt;M-&amp;lt;hjkl&amp;gt;&lt;/code&gt;: Those keys are usually free in Evil but still bound to their Emacs
    default (e.g. &lt;code&gt;M-l&lt;/code&gt; is &lt;code&gt;downcase-word&lt;/code&gt;).  Besides, if &lt;code&gt;C-j&lt;/code&gt; and &lt;code&gt;C-k&lt;/code&gt; are
    already used, having &lt;code&gt;M-j&lt;/code&gt; and &lt;code&gt;M-k&lt;/code&gt; might add up to the confusion.&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;&lt;a id="user-content-quitting-q-zq-zz" class="anchor" aria-hidden="true" href="#quitting-q-zq-zz"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Quitting (&lt;code&gt;q&lt;/code&gt;, &lt;code&gt;ZQ&lt;/code&gt;, &lt;code&gt;ZZ&lt;/code&gt;)&lt;/h3&gt;
&lt;p&gt;In Vim, &lt;code&gt;q&lt;/code&gt; is for recording macros.  Vim quits with &lt;code&gt;ZZ&lt;/code&gt; or &lt;code&gt;ZQ&lt;/code&gt;.  In most
  Emacs special modes, it stands for quitting while macros are recorded/played
  with &lt;code&gt;&amp;lt;f3&amp;gt;&lt;/code&gt; and &lt;code&gt;&amp;lt;f4&amp;gt;&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;A good rule of thumb would be:&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;Always bind &lt;code&gt;ZZ&lt;/code&gt; and &lt;code&gt;ZQ&lt;/code&gt; to the quitting function(s), &lt;code&gt;evil-quit&lt;/code&gt; if nothing
    else makes sense.&lt;/li&gt;
  &lt;li&gt;Bind &lt;code&gt;q&lt;/code&gt; to &lt;code&gt;evil-quit&lt;/code&gt; if macros don’t make sense in current mode.&lt;/li&gt;
  &lt;li&gt;If macros don’t make sense in current mode, then &lt;code&gt;@&lt;/code&gt; is available.&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;&lt;a id="user-content-refreshing--reverting-gr" class="anchor" aria-hidden="true" href="#refreshing--reverting-gr"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Refreshing / Reverting (&lt;code&gt;gr&lt;/code&gt;)&lt;/h3&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;code&gt;gr&lt;/code&gt; is used for refreshing in &lt;a href="https://github.com/emacs-evil/evil-magit"&gt;evil-magit&lt;/a&gt;, &lt;a href="https://github.com/JorisE/evil-mu4e"&gt;evil-mu4e&lt;/a&gt;, and some Spacemacs
    configurations (org-agenda and neotree among others).&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;code&gt;C-l&lt;/code&gt; is traditionally used to refresh the terminal screen.  Since there does
  not seem to be any existing use of it, we leave the binding free for other uses.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-marking" class="anchor" aria-hidden="true" href="#marking"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Marking&lt;/h3&gt;
&lt;p&gt;&lt;code&gt;m&lt;/code&gt; defaults to &lt;code&gt;evil-set-marker&lt;/code&gt; which might not be very useful in special
  modes.
  =’= can still be used as it can jump to other buffers.&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;code&gt;m&lt;/code&gt;: Mark or toggle mark, depending on what the mode offers.
    In visual mode, always mark.
    With a numeric argument, toggle mark on that many following lines.&lt;/li&gt;
  &lt;li&gt;&lt;code&gt;u&lt;/code&gt;: Unmark current selection.&lt;/li&gt;
  &lt;li&gt;&lt;code&gt;U&lt;/code&gt;: Unmark all.&lt;/li&gt;
  &lt;li&gt;&lt;code&gt;~&lt;/code&gt;: Toggle all marks.  This mirrors the “invert-char” Vim command bound to &lt;code&gt;~&lt;/code&gt;
    by default.&lt;/li&gt;
  &lt;li&gt;&lt;code&gt;M&lt;/code&gt;: Mark all, if available.  Otherwise use &lt;code&gt;U~&lt;/code&gt;.&lt;/li&gt;
  &lt;li&gt;&lt;code&gt;*&lt;/code&gt;: Mark-prefix or mark all if current mode has no prefix. &lt;code&gt;*&lt;/code&gt; is traditionally a wildcard.&lt;/li&gt;
  &lt;li&gt;&lt;code&gt;%&lt;/code&gt;: Mark regexp.&lt;/li&gt;
  &lt;li&gt;&lt;code&gt;x&lt;/code&gt;: Execute action on marks.  This mirrors Dired’s binding of &lt;code&gt;x&lt;/code&gt;.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;If &lt;code&gt;*&lt;/code&gt; is used for marking, then &lt;code&gt;#&lt;/code&gt; is free.&lt;/p&gt;
&lt;p&gt;Also note that Emacs inconsistently uses &lt;code&gt;u&lt;/code&gt; and &lt;code&gt;U&lt;/code&gt; to unmark.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-selecting--filtering--narrowing--searching" class="anchor" aria-hidden="true" href="#selecting--filtering--narrowing--searching"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Selecting / Filtering / Narrowing / Searching&lt;/h3&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;code&gt;s&lt;/code&gt; and &lt;code&gt;S&lt;/code&gt; seem to be used in some places like &lt;a href="https://www.djcbsoftware.nl/code/mu/mu4e.html" rel="nofollow"&gt;mu4e&lt;/a&gt;.
    &lt;ul&gt;
      &lt;li&gt;&lt;code&gt;s&lt;/code&gt;: [s]elect/[s]earch/filter candidates according to a pattern.&lt;/li&gt;
      &lt;li&gt;&lt;code&gt;S&lt;/code&gt;: Remove filter and select all.&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;&lt;code&gt;=&lt;/code&gt; is usually free and its significance is obvious.  It’s taken for zooming though.&lt;/li&gt;
  &lt;li&gt;&lt;code&gt;|&lt;/code&gt; is not free but the pipe symbolic is very tantalizing.&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;&lt;a id="user-content-sorting" class="anchor" aria-hidden="true" href="#sorting"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Sorting&lt;/h3&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;code&gt;o&lt;/code&gt;: Change the sort [o]rder.&lt;/li&gt;
  &lt;li&gt;&lt;code&gt;O&lt;/code&gt;: Sort in reverse order.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;There is no real consensus around which key to bind to sorting.  What others do by default:&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;code&gt;package-menu&lt;/code&gt; uses &lt;code&gt;S&lt;/code&gt;.&lt;/li&gt;
  &lt;li&gt;&lt;code&gt;M-x proced&lt;/code&gt; and Dired use &lt;code&gt;s&lt;/code&gt;.&lt;/li&gt;
  &lt;li&gt;&lt;code&gt;profiler&lt;/code&gt; uses &lt;code&gt;A&lt;/code&gt; and &lt;code&gt;D&lt;/code&gt;.&lt;/li&gt;
  &lt;li&gt;&lt;a href="https://www.djcbsoftware.nl/code/mu/mu4e.html" rel="nofollow"&gt;mu4e&lt;/a&gt; uses &lt;code&gt;O&lt;/code&gt;.&lt;/li&gt;
  &lt;li&gt;&lt;a href="http://www.nongnu.org/ranger/" rel="nofollow"&gt;ranger&lt;/a&gt; uses &lt;code&gt;o&lt;/code&gt;, inspired from &lt;a href="http://mutt.org" rel="nofollow"&gt;Mutt&lt;/a&gt;.&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;&lt;a id="user-content-go-to-definition-gd-gd" class="anchor" aria-hidden="true" href="#go-to-definition-gd-gd"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Go to definition (&lt;code&gt;gd&lt;/code&gt;, &lt;code&gt;gD&lt;/code&gt;)&lt;/h3&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;code&gt;gd&lt;/code&gt;: [g]o to [d]efinition.  This is mostly for programming modes.
    If there’s a corresponding ‘pop’ action, use &lt;code&gt;C-t&lt;/code&gt;.&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;&lt;a id="user-content-go-to-current-entity" class="anchor" aria-hidden="true" href="#go-to-current-entity"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Go to current entity&lt;/h3&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;code&gt;.&lt;/code&gt;: go to current entity (day for calendar, playing track for &lt;a href="https://www.gnu.org/software/emms/" rel="nofollow"&gt;EMMS&lt;/a&gt;).
    Bind only if more relevant than &lt;code&gt;evil-repeat&lt;/code&gt;.&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;&lt;a id="user-content-open-thing-at-point-ret-s-ret-m-ret-go-go" class="anchor" aria-hidden="true" href="#open-thing-at-point-ret-s-ret-m-ret-go-go"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Open thing at point (&lt;code&gt;RET&lt;/code&gt;, &lt;code&gt;S-RET&lt;/code&gt;, &lt;code&gt;M-RET&lt;/code&gt;, &lt;code&gt;go&lt;/code&gt;, &lt;code&gt;gO&lt;/code&gt;)&lt;/h3&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;code&gt;RET&lt;/code&gt;, &lt;code&gt;S-RET&lt;/code&gt;, &lt;code&gt;M-RET&lt;/code&gt;: Open thing at point in current window, open in other
    window and display in other window respectively.  The latter is like the
    former with the focus remaining on the current window.&lt;/li&gt;
  &lt;li&gt;&lt;code&gt;go&lt;/code&gt;, &lt;code&gt;gO&lt;/code&gt;: When available, same as &lt;code&gt;S-RET&lt;/code&gt; and &lt;code&gt;M-RET&lt;/code&gt; respectively.  This is
    useful in terminals where &lt;code&gt;S-RET&lt;/code&gt; and &lt;code&gt;M-RET&lt;/code&gt; might not work.&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;&lt;a id="user-content-emacs-style-jumping-j" class="anchor" aria-hidden="true" href="#emacs-style-jumping-j"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Emacs-style jumping (&lt;code&gt;J&lt;/code&gt;)&lt;/h3&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;code&gt;J&lt;/code&gt;: &lt;a href="https://www.djcbsoftware.nl/code/mu/mu4e.html" rel="nofollow"&gt;mu4e&lt;/a&gt; has &lt;code&gt;j&lt;/code&gt; and &lt;a href="evil-mu4e"&gt;evil-mu4e&lt;/a&gt; uses &lt;code&gt;J&lt;/code&gt;, so we use &lt;code&gt;J&lt;/code&gt; too.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Some special modes like &lt;a href="https://www.djcbsoftware.nl/code/mu/mu4e.html" rel="nofollow"&gt;mu4e&lt;/a&gt; and ibuffer offer to “jump” to a different
  buffer.  This sometimes depends on the thing at point.&lt;/p&gt;
&lt;p&gt;This is not related to Evil jumps like &lt;code&gt;C-i&lt;/code&gt; and &lt;code&gt;C-o&lt;/code&gt;, nor to “go to
  definition”.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-browse-url-gx" class="anchor" aria-hidden="true" href="#browse-url-gx"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Browse URL (&lt;code&gt;gx&lt;/code&gt;)&lt;/h3&gt;
&lt;p&gt;&lt;code&gt;gx&lt;/code&gt;: go to URL.  This is a default Vim binding.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-help-" class="anchor" aria-hidden="true" href="#help-"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Help (&lt;code&gt;?&lt;/code&gt;)&lt;/h3&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;code&gt;g?&lt;/code&gt; : is the standard key for help related commands.&lt;/li&gt;
  &lt;li&gt;&lt;code&gt;?&lt;/code&gt; in places where backward search is not very useful.&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;&lt;a id="user-content-history-browsing-c-n-c-p" class="anchor" aria-hidden="true" href="#history-browsing-c-n-c-p"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;History browsing (&lt;code&gt;C-n&lt;/code&gt;, &lt;code&gt;C-p&lt;/code&gt;)&lt;/h3&gt;
&lt;p&gt;&lt;code&gt;C-n&lt;/code&gt; and &lt;code&gt;C-p&lt;/code&gt; are standard bindings to browse the history elements.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-bookmarking" class="anchor" aria-hidden="true" href="#bookmarking"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Bookmarking&lt;/h3&gt;
&lt;p&gt;?&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-repl-gz" class="anchor" aria-hidden="true" href="#repl-gz"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;REPL (&lt;code&gt;gz&lt;/code&gt;)&lt;/h3&gt;
&lt;p&gt;If the mode has a Go To REPL-type command, set it to &lt;code&gt;gz&lt;/code&gt;.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-zooming-----0" class="anchor" aria-hidden="true" href="#zooming-----0"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Zooming (&lt;code&gt;+&lt;/code&gt;, &lt;code&gt;-&lt;/code&gt;, &lt;code&gt;=&lt;/code&gt;, &lt;code&gt;0&lt;/code&gt;)&lt;/h3&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;code&gt;+&lt;/code&gt; and &lt;code&gt;-&lt;/code&gt; have obvious meanings.&lt;/li&gt;
  &lt;li&gt;&lt;code&gt;0&lt;/code&gt; has a somewhat intuitive meaning, plus it is next to &lt;code&gt;+&lt;/code&gt; and &lt;code&gt;-&lt;/code&gt; on QWERTY.&lt;/li&gt;
  &lt;li&gt;&lt;code&gt;=&lt;/code&gt; is useful as a synonym for &lt;code&gt;+&lt;/code&gt; because it is the unshifted key of &lt;code&gt;+&lt;/code&gt; on QWERTY.&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;&lt;a id="user-content-debugging" class="anchor" aria-hidden="true" href="#debugging"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Debugging&lt;/h3&gt;
&lt;p&gt;When debugging is on, debugger keys takes the most precedence.&lt;/p&gt;
&lt;p&gt;These keys will be set when there’s an available command for them.&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;code&gt;n&lt;/code&gt; : Step Over&lt;/li&gt;
  &lt;li&gt;&lt;code&gt;i&lt;/code&gt; : Step Into&lt;/li&gt;
  &lt;li&gt;&lt;code&gt;o&lt;/code&gt; : Step Out&lt;/li&gt;
  &lt;li&gt;&lt;code&gt;c&lt;/code&gt; : Continue/Resume Execution&lt;/li&gt;
  &lt;li&gt;&lt;code&gt;L&lt;/code&gt; : Locals&lt;/li&gt;
  &lt;li&gt;&lt;code&gt;t&lt;/code&gt; : Tracing&lt;/li&gt;
  &lt;li&gt;&lt;code&gt;q&lt;/code&gt; : Quit Debugging&lt;/li&gt;
  &lt;li&gt;&lt;code&gt;H&lt;/code&gt; : Continue until Point&lt;/li&gt;
  &lt;li&gt;&lt;code&gt;e&lt;/code&gt; : Evaluate Expression&lt;/li&gt;
  &lt;li&gt;&lt;code&gt;b&lt;/code&gt; : Set Breakpoint&lt;/li&gt;
  &lt;li&gt;&lt;code&gt;u&lt;/code&gt; : Unset Breakpoint&lt;/li&gt;
  &lt;li&gt;&lt;code&gt;&amp;gt;&lt;/code&gt; : Navigate to Next Frame&lt;/li&gt;
  &lt;li&gt;&lt;code&gt;&amp;lt;&lt;/code&gt; : Navigate to Previous Frame&lt;/li&gt;
  &lt;li&gt;&lt;code&gt;g?&lt;/code&gt; : Help&lt;/li&gt;
  &lt;li&gt;&lt;code&gt;J&lt;/code&gt; : Jump to debugger location&lt;/li&gt;
  &lt;li&gt;&lt;code&gt;R&lt;/code&gt; : Restart&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;For debugging outside of debugger being on (e.g. setting initial breakpoints),
  we use similar keys to &lt;a href="https://github.com/realgud/realgud"&gt;realgud&lt;/a&gt;.&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;code&gt;f5&lt;/code&gt; Start/Continue/Resume Execution&lt;/li&gt;
  &lt;li&gt;&lt;code&gt;S-f5&lt;/code&gt; Continue Execution&lt;/li&gt;
  &lt;li&gt;&lt;code&gt;Mouse-1&lt;/code&gt; Toggle Breakpoint&lt;/li&gt;
  &lt;li&gt;&lt;code&gt;f9&lt;/code&gt; Toggle Breakpoint&lt;/li&gt;
  &lt;li&gt;&lt;code&gt;f10&lt;/code&gt; Step Over&lt;/li&gt;
  &lt;li&gt;&lt;code&gt;f11&lt;/code&gt; Step Into&lt;/li&gt;
  &lt;li&gt;&lt;code&gt;S-f11&lt;/code&gt; Step Out&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;&lt;a id="user-content-editable-buffers" class="anchor" aria-hidden="true" href="#editable-buffers"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Editable Buffers&lt;/h3&gt;
&lt;p&gt;For buffers where insert-state doesn’t make sense but buffer can be edited,
  (e.g. wdired or wgrep), pressing &lt;code&gt;i&lt;/code&gt; will change into editable state.&lt;/p&gt;
&lt;p&gt;When this editable state is turned on,&lt;/p&gt;
&lt;p&gt;&lt;code&gt;ZQ&lt;/code&gt; will abort and clear any changes.
  &lt;code&gt;ZZ&lt;/code&gt; will finish and save any changes.
  &lt;code&gt;ESC&lt;/code&gt; will exit editable state.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-qwqetc" class="anchor" aria-hidden="true" href="#qwqetc"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;:q/:wq/etc&lt;/h3&gt;
&lt;p&gt;Modes with commands that can be bound to :q/:wq/etc will have those keys remapped.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-key-translation" class="anchor" aria-hidden="true" href="#key-translation"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Key Translation&lt;/h2&gt;
&lt;p&gt;&lt;code&gt;evil-collection-translate-key&lt;/code&gt; allows binding a key to the definition of
  another key in the same keymap (comparable to how Vim’s keybindings work). Its
  arguments are the &lt;code&gt;states&lt;/code&gt; and &lt;code&gt;keymaps&lt;/code&gt; to bind/look up the key(s) in followed
  optionally by keyword arguments (currently only &lt;code&gt;:destructive&lt;/code&gt;) and
  key/replacement pairs. &lt;code&gt;states&lt;/code&gt; should be nil for non-evil keymaps, and both
  &lt;code&gt;states&lt;/code&gt; and &lt;code&gt;keymaps&lt;/code&gt; can be a single symbol or a list of symbols.&lt;/p&gt;
&lt;p&gt;This function can be useful for making key swaps/cycles en masse. For example,
  someone who uses an alternate keyboard layout may want to retain the &lt;code&gt;hjkl&lt;/code&gt;
  positions for directional movement in dired, the calendar, etc.&lt;/p&gt;
&lt;p&gt;Here’s an example for Colemak of making swaps in a single keymap:&lt;/p&gt;
&lt;div class="highlight highlight-source-emacs-lisp"&gt;&lt;pre&gt;(evil-collection-translate-key &lt;span class="pl-c1"&gt;nil&lt;/span&gt; &lt;span class="pl-c1"&gt;'evil-motion-state-map&lt;/span&gt;
  &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt;; colemak hnei is qwerty hjkl&lt;/span&gt;
  &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;n&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;j&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;
  &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;e&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;k&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;
  &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;i&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;l&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;
  &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt;; add back nei&lt;/span&gt;
  &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;j&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;e&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;
  &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;k&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;n&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;
  &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;l&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;i&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Here’s an example of using &lt;code&gt;evil-collection-setup-hook&lt;/code&gt; to cycle the keys for
  all modes in &lt;code&gt;evil-collection-mode-list&lt;/code&gt;:&lt;/p&gt;
&lt;div class="highlight highlight-source-emacs-lisp"&gt;&lt;pre&gt;(&lt;span class="pl-k"&gt;defun&lt;/span&gt; &lt;span class="pl-e"&gt;my-hjkl-rotation&lt;/span&gt; (&lt;span class="pl-v"&gt;_mode&lt;/span&gt; &lt;span class="pl-v"&gt;mode-keymaps&lt;/span&gt; &lt;span class="pl-c1"&gt;&amp;amp;rest&lt;/span&gt; &lt;span class="pl-v"&gt;_rest&lt;/span&gt;)
  (evil-collection-translate-key &lt;span class="pl-c1"&gt;'normal&lt;/span&gt; mode-keymaps
    &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;n&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;j&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;
    &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;e&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;k&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;
    &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;i&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;l&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;
    &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;j&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;e&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;
    &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;k&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;n&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;
    &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;l&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;i&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;))

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt;; called after evil-collection makes its keybindings&lt;/span&gt;
(&lt;span class="pl-c1"&gt;add-hook&lt;/span&gt; &lt;span class="pl-c1"&gt;'evil-collection-setup-hook&lt;/span&gt; &lt;span class="pl-c1"&gt;#&lt;span class="pl-c1"&gt;'my-hjkl-rotation&lt;/span&gt;&lt;/span&gt;)

(evil-collection-init)&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;A more common use case of &lt;code&gt;evil-collection-translate-key&lt;/code&gt; would be for keeping
  the functionality of some keys that users may bind globally. For example, &lt;code&gt;SPC&lt;/code&gt;,
  &lt;code&gt;[&lt;/code&gt;, and &lt;code&gt;]&lt;/code&gt; are bound in some modes. If you use these keys as global prefix
  keys that you never want to be overridden, you’ll want to give them higher
  priority than other evil keybindings (e.g. those made by &lt;code&gt;(evil-define-key
  'normal some-map ...)&lt;/code&gt;). To do this, you can create an “intercept” map and bind
  your prefix keys in it instead of in &lt;code&gt;evil-normal-state-map&lt;/code&gt;:&lt;/p&gt;
&lt;div class="highlight highlight-source-emacs-lisp"&gt;&lt;pre&gt;(&lt;span class="pl-k"&gt;defvar&lt;/span&gt; &lt;span class="pl-en"&gt;my-intercept-mode-map&lt;/span&gt; (&lt;span class="pl-c1"&gt;make-sparse-keymap&lt;/span&gt;)
  &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;High precedence keymap.&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)

(&lt;span class="pl-c1"&gt;define-minor-mode&lt;/span&gt; my-intercept-mode
  &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;Global minor mode for higher precedence evil keybindings.&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;
  &lt;span class="pl-c1"&gt;:global&lt;/span&gt; &lt;span class="pl-c1"&gt;t&lt;/span&gt;)

(my-intercept-mode)

(&lt;span class="pl-k"&gt;dolist&lt;/span&gt; (state '(normal visual insert))
  (evil-make-intercept-map
   &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt;; NOTE: This requires an evil version from 2018-03-20 or later&lt;/span&gt;
   (evil-get-auxiliary-keymap my-intercept-mode-map state &lt;span class="pl-c1"&gt;t&lt;/span&gt; &lt;span class="pl-c1"&gt;t&lt;/span&gt;)
   state))

(evil-define-key &lt;span class="pl-c1"&gt;'normal&lt;/span&gt; my-intercept-mode-map
  (&lt;span class="pl-c1"&gt;kbd&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;SPC f&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;) &lt;span class="pl-c1"&gt;'find-file&lt;/span&gt;)
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt;; ...&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;You can then define replacement keys:&lt;/p&gt;
&lt;div class="highlight highlight-source-emacs-lisp"&gt;&lt;pre&gt;(&lt;span class="pl-k"&gt;defun&lt;/span&gt; &lt;span class="pl-e"&gt;my-prefix-translations&lt;/span&gt; (&lt;span class="pl-v"&gt;_mode&lt;/span&gt; &lt;span class="pl-v"&gt;mode-keymaps&lt;/span&gt; &lt;span class="pl-c1"&gt;&amp;amp;rest&lt;/span&gt; &lt;span class="pl-v"&gt;_rest&lt;/span&gt;)
  (evil-collection-translate-key &lt;span class="pl-c1"&gt;'normal&lt;/span&gt; mode-keymaps
    &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;C-SPC&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;SPC&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;
    &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt;; these need to be unbound first; this needs to be in same statement&lt;/span&gt;
    &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;[&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; &lt;span class="pl-c1"&gt;nil&lt;/span&gt;
    &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;]&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; &lt;span class="pl-c1"&gt;nil&lt;/span&gt;
    &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;[[&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;[&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;
    &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;]]&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;]&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;))

(&lt;span class="pl-c1"&gt;add-hook&lt;/span&gt; &lt;span class="pl-c1"&gt;'evil-collection-setup-hook&lt;/span&gt; &lt;span class="pl-c1"&gt;#&lt;span class="pl-c1"&gt;'my-prefix-translations&lt;/span&gt;&lt;/span&gt;)

(evil-collection-init)&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;By default, the first invocation of &lt;code&gt;evil-collection-translate-key&lt;/code&gt; will make a
  backup of the keymap. Each subsequent invocation will look up keys in the backup
  instead of the original. This means that a call to
  &lt;code&gt;evil-collection-translate-key&lt;/code&gt; will always have the same behavior even if
  evaluated multiple times. When &lt;code&gt;:destructive t&lt;/code&gt; is specified, keys are looked up
  in the keymap as it is currently. This means that a call to
  &lt;code&gt;evil-collection-translate-key&lt;/code&gt; that swapped two keys would continue to
  swap/unswap them with each call. Therefore when &lt;code&gt;:destructive t&lt;/code&gt; is used, all
  cycles/swaps must be done within a single call to
  &lt;code&gt;evil-collection-translate-key&lt;/code&gt;. To make a comparison to Vim keybindings,
  &lt;code&gt;:destructive t&lt;/code&gt; is comparable to Vim’s &lt;code&gt;map&lt;/code&gt;, and &lt;code&gt;:destructive nil&lt;/code&gt; is
  comparable to Vim’s &lt;code&gt;noremap&lt;/code&gt; (where the “original” keybindings are those that
  existed in the keymap when &lt;code&gt;evil-collection-translate-key&lt;/code&gt; was first called).
  You’ll almost always want to use the default behavior (especially in your init
  file). The limitation of &lt;code&gt;:destructive nil&lt;/code&gt; is that you can’t translate a key to
  another key that was defined after the first &lt;code&gt;evil-collection-translate-key&lt;/code&gt;, so
  &lt;code&gt;:destructive t&lt;/code&gt; may be useful for interactive experimentation.&lt;/p&gt;
&lt;p&gt;&lt;code&gt;evil-collection-swap-key&lt;/code&gt; is also provided as a wrapper around
  &lt;code&gt;evil-collection-translate-key&lt;/code&gt; that allows swapping keys:&lt;/p&gt;
&lt;div class="highlight highlight-source-emacs-lisp"&gt;&lt;pre&gt;(evil-collection-swap-key &lt;span class="pl-c1"&gt;nil&lt;/span&gt; &lt;span class="pl-c1"&gt;'evil-motion-state-map&lt;/span&gt;
  &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;;&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;:&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt;; is equivalent to&lt;/span&gt;
(evil-collection-translate-key &lt;span class="pl-c1"&gt;nil&lt;/span&gt; &lt;span class="pl-c1"&gt;'evil-motion-state-map&lt;/span&gt;
  &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;;&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;:&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;
  &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;:&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;;&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)&lt;/pre&gt;&lt;/div&gt;
&lt;h2&gt;&lt;a id="user-content-modes-left-behind" class="anchor" aria-hidden="true" href="#modes-left-behind"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Modes left behind&lt;/h2&gt;
&lt;p&gt;Some modes might still remain unsupported by this package.  Should you be
  missing your &lt;code&gt;&amp;lt;hjkl&amp;gt;&lt;/code&gt;, feel free to file an issue or even a pull request.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-third-party-packages" class="anchor" aria-hidden="true" href="#third-party-packages"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Third-party packages&lt;/h2&gt;
&lt;p&gt;Third-party packages are provided by several parties:&lt;/p&gt;
&lt;table&gt;
  &lt;tbody&gt;&lt;tr&gt;&lt;th&gt;Major mode&lt;/th&gt;&lt;th&gt;Evil bindings&lt;/th&gt;&lt;/tr&gt;
  &lt;tr&gt;&lt;td&gt;magit&lt;/td&gt;&lt;td&gt;&lt;a href="https://github.com/emacs-evil/evil-magit"&gt;evil-magit&lt;/a&gt;&lt;/td&gt;&lt;/tr&gt;
  &lt;tr&gt;&lt;td&gt;lispy&lt;/td&gt;&lt;td&gt;&lt;a href="https://github.com/noctuid/lispyville"&gt;lispyville&lt;/a&gt; or &lt;a href="https://github.com/sp3ctum/evil-lispy"&gt;evil-lispy&lt;/a&gt;&lt;/td&gt;&lt;/tr&gt;
  &lt;tr&gt;&lt;td&gt;org&lt;/td&gt;&lt;td&gt;&lt;a href="https://github.com/GuiltyDolphin/org-evil"&gt;org-evil&lt;/a&gt; or &lt;a href="https://github.com/Somelauw/evil-org-mode"&gt;evil-org&lt;/a&gt;&lt;/td&gt;&lt;/tr&gt;
  &lt;tr&gt;&lt;td&gt;markdown&lt;/td&gt;&lt;td&gt;&lt;a href="https://github.com/Somelauw/evil-markdown"&gt;evil-markdown&lt;/a&gt;&lt;/td&gt;&lt;/tr&gt;
  &lt;tr&gt;&lt;td&gt;ledger&lt;/td&gt;&lt;td&gt;&lt;a href="https://github.com/atheriel/evil-ledger"&gt;evil-ledger&lt;/a&gt;&lt;/td&gt;&lt;/tr&gt;
&lt;/tbody&gt;&lt;/table&gt;
&lt;p&gt;Should you know any suitable package not mentioned in this list, let us know and
  file an issue.&lt;/p&gt;
&lt;p&gt;Other references:&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;a href="https://github.com/syl20bnr/spacemacs/blob/master/doc/CONVENTIONS.org#key-bindings-conventions"&gt;Spacemacs&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href="https://github.com/hlissner/doom-emacs/tree/develop/modules/editor/evil"&gt;Doom Emacs&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-faq" class="anchor" aria-hidden="true" href="#faq"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;FAQ&lt;/h2&gt;
&lt;ul&gt;
  &lt;li&gt;Making SPC work similarly to &lt;a href="https://github.com/syl20bnr/spacemacs"&gt;spacemacs&lt;/a&gt;.
    &lt;p&gt;&lt;code&gt;evil-collection&lt;/code&gt; binds over SPC in many packages. To use SPC as a leader
      key with the &lt;a href="https://github.com/noctuid/general.el"&gt;general&lt;/a&gt; library:&lt;/p&gt;
    &lt;div class="highlight highlight-source-emacs-lisp"&gt;&lt;pre&gt;(&lt;span class="pl-c1"&gt;use-package&lt;/span&gt; general
  &lt;span class="pl-c1"&gt;:ensure&lt;/span&gt; &lt;span class="pl-c1"&gt;t&lt;/span&gt;
  &lt;span class="pl-c1"&gt;:init&lt;/span&gt;
  (&lt;span class="pl-k"&gt;setq&lt;/span&gt; general-override-states '(&lt;span class="pl-c1"&gt;insert&lt;/span&gt;
                                  emacs
                                  hybrid
                                  normal
                                  visual
                                  motion
                                  operator
                                  replace))
  &lt;span class="pl-c1"&gt;:config&lt;/span&gt;
  (general-define-key
   &lt;span class="pl-c1"&gt;:states&lt;/span&gt; '(normal visual motion)
   &lt;span class="pl-c1"&gt;:keymaps&lt;/span&gt; &lt;span class="pl-c1"&gt;'override&lt;/span&gt;
   &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;SPC&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; &lt;span class="pl-c1"&gt;'hydra-space/body&lt;/span&gt;))
   &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt;; Replace 'hydra-space/body with your leader function.&lt;/span&gt;
    &lt;/pre&gt;&lt;/div&gt;
    &lt;p&gt;See &lt;a href="https://github.com/noctuid/evil-guide"&gt;noctuid’s evil guide&lt;/a&gt; for other approaches.&lt;/p&gt;
    &lt;p&gt;This should also be accomplishable using key translation from &lt;a href="https://github.com/noctuid/general.el"&gt;general&lt;/a&gt;.&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-contributing" class="anchor" aria-hidden="true" href="#contributing"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Contributing&lt;/h2&gt;
&lt;p&gt;Please do!&lt;/p&gt;
&lt;p&gt;We welcome any additional modes that are not already supported.&lt;/p&gt;
&lt;p&gt;All bindings in &lt;code&gt;evil-collection&lt;/code&gt; are still open to change so if there’s
  a better or more consistent binding, please &lt;a href="https://github.com/emacs-evil/evil-collection/issues"&gt;open an issue&lt;/a&gt; or &lt;a href="https://github.com/emacs-evil/evil-collection/pulls"&gt;submit a pull request&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Follow &lt;a href="https://github.com/bbatsov/emacs-lisp-style-guide/"&gt;The Emacs Lisp Style Guide&lt;/a&gt; for coding conventions.&lt;/p&gt;
&lt;p&gt;&lt;a href="https://github.com/erlang/otp/wiki/writing-good-commit-messages"&gt;Erlang/OTP&lt;/a&gt; has a good read for helpful commit messages.&lt;/p&gt;
&lt;/article&gt;&lt;/div&gt;</description><author>emacs-evil</author><guid isPermaLink="false">https://github.com/emacs-evil/evil-collection</guid><pubDate>Tue, 11 Feb 2020 00:24:00 GMT</pubDate></item><item><title>emacs-evil/evil-surround #25 in Emacs Lisp, This month</title><link>https://github.com/emacs-evil/evil-surround</link><description>&lt;p&gt;&lt;i&gt;you will be surrounded (surround.vim for evil, the extensible vi layer)&lt;/i&gt;&lt;/p&gt;&lt;div id="readme" class="org" data-path="readme.org"&gt;&lt;article class="markdown-body entry-content p-5" itemprop="text"&gt;&lt;p&gt;&lt;a href="https://user-images.githubusercontent.com/8352747/33807810-91656488-ddc3-11e7-8029-985f28471a47.png" rel="nofollow"&gt;&lt;img src="https://user-images.githubusercontent.com/8352747/33807810-91656488-ddc3-11e7-8029-985f28471a47.png" alt="https://user-images.githubusercontent.com/8352747/33807810-91656488-ddc3-11e7-8029-985f28471a47.png" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href="https://travis-ci.org/emacs-evil/evil-surround.svg?branch=master" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/47c04eda5b9050953093620a9f2c7300cf8b8716/68747470733a2f2f7472617669732d63692e6f72672f656d6163732d6576696c2f6576696c2d737572726f756e642e7376673f6272616e63683d6d6173746572" alt="https://travis-ci.org/emacs-evil/evil-surround.svg?branch=master" data-canonical-src="https://travis-ci.org/emacs-evil/evil-surround.svg?branch=master" style="max-width:100%;"&gt;&lt;/a&gt;
  &lt;a href="https://melpa.org/#/evil-surround" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/b314f4094ff33e79f9d780f6a19463f175547c09/68747470733a2f2f6d656c70612e6f72672f7061636b616765732f6576696c2d737572726f756e642d62616467652e737667" alt="https://melpa.org/packages/evil-surround-badge.svg" data-canonical-src="https://melpa.org/packages/evil-surround-badge.svg" style="max-width:100%;"&gt;&lt;/a&gt;
  &lt;a href="https://stable.melpa.org/#/evil-surround" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/035b0bc6ef5793cf094222ab9a2d856314c721b3/68747470733a2f2f737461626c652e6d656c70612e6f72672f7061636b616765732f6576696c2d737572726f756e642d62616467652e737667" alt="https://stable.melpa.org/packages/evil-surround-badge.svg" data-canonical-src="https://stable.melpa.org/packages/evil-surround-badge.svg" style="max-width:100%;"&gt;&lt;/a&gt;
  &lt;a href="https://www.gnu.org/licenses/gpl-3.0.en.html" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/dcb3a3de32cb31ae6a7edf80d88747f989878809/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f6c6963656e73652d47504c76332d626c75652e737667" alt="https://img.shields.io/badge/license-GPLv3-blue.svg" data-canonical-src="https://img.shields.io/badge/license-GPLv3-blue.svg" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;This package emulates &lt;a href="https://github.com/tpope/vim-surround"&gt;surround.vim&lt;/a&gt; by &lt;a href="https://github.com/tpope"&gt;Tim Pope&lt;/a&gt;. The functionality is wrapped into a minor mode.&lt;/p&gt;
&lt;p&gt;This package uses &lt;a href="https://github.com/emacs-evil/evil"&gt;Evil&lt;/a&gt; as its vi layer.&lt;/p&gt;
&lt;h1&gt;&lt;a id="user-content-installation" class="anchor" aria-hidden="true" href="#installation"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Installation&lt;/h1&gt;
&lt;p&gt;To enable it through &lt;a href="https://github.com/jwiegley/use-package"&gt;use-package&lt;/a&gt;, add the following lines to &lt;code&gt;~/.emacs&lt;/code&gt; or &lt;code&gt;~/.emacs.d/init.el&lt;/code&gt;:&lt;/p&gt;
&lt;div class="highlight highlight-source-emacs-lisp"&gt;&lt;pre&gt;(&lt;span class="pl-c1"&gt;use-package&lt;/span&gt; evil-surround
  &lt;span class="pl-c1"&gt;:ensure&lt;/span&gt; &lt;span class="pl-c1"&gt;t&lt;/span&gt;
  &lt;span class="pl-c1"&gt;:config&lt;/span&gt;
  (global-evil-surround-mode &lt;span class="pl-c1"&gt;1&lt;/span&gt;))&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Alternatively, can add the &lt;code&gt;evil-surround.el&lt;/code&gt; file to your load-path and add &lt;code&gt;(require 'evil-surround)&lt;/code&gt; to your init file.&lt;/p&gt;
&lt;p&gt;Also, Instead of enabling it globally, you can also enable &lt;code&gt;surround-mode&lt;/code&gt; along a major mode by adding &lt;code&gt;turn-on-surround-mode&lt;/code&gt; to the mode hook.&lt;/p&gt;
&lt;h1&gt;&lt;a id="user-content-usage" class="anchor" aria-hidden="true" href="#usage"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Usage&lt;/h1&gt;
&lt;h2&gt;&lt;a id="user-content-add-surrounding" class="anchor" aria-hidden="true" href="#add-surrounding"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Add surrounding&lt;/h2&gt;
&lt;p&gt;You can surround in visual-state with &lt;code&gt;S&amp;lt;textobject&amp;gt;&lt;/code&gt; or &lt;code&gt;gS&amp;lt;textobject&amp;gt;&lt;/code&gt;.
  Or in normal-state with &lt;code&gt;ys&amp;lt;textobject&amp;gt;&lt;/code&gt; or &lt;code&gt;yS&amp;lt;textobject&amp;gt;&lt;/code&gt;.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-change-surrounding" class="anchor" aria-hidden="true" href="#change-surrounding"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Change surrounding&lt;/h2&gt;
&lt;p&gt;You can change a surrounding with &lt;code&gt;cs&amp;lt;old-textobject&amp;gt;&amp;lt;new-textobject&amp;gt;&lt;/code&gt;.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-delete-surrounding" class="anchor" aria-hidden="true" href="#delete-surrounding"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Delete surrounding&lt;/h2&gt;
&lt;p&gt;You can delete a surrounding with &lt;code&gt;ds&amp;lt;textobject&amp;gt;&lt;/code&gt;.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-add-new-surround-pairs" class="anchor" aria-hidden="true" href="#add-new-surround-pairs"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Add new surround pairs&lt;/h2&gt;
&lt;p&gt;A surround pair is this (trigger char with textual left and right
  strings):&lt;/p&gt;
&lt;div class="highlight highlight-source-emacs-lisp"&gt;&lt;pre&gt;(&lt;span class="pl-c1"&gt;?&amp;gt;&lt;/span&gt; &lt;span class="pl-k"&gt;.&lt;/span&gt; (&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;&amp;lt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; &lt;span class="pl-k"&gt;.&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;&amp;gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;))&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;or this (trigger char and calling a function):&lt;/p&gt;
&lt;div class="highlight highlight-source-emacs-lisp"&gt;&lt;pre&gt;(&lt;span class="pl-c1"&gt;?&amp;lt;&lt;/span&gt; &lt;span class="pl-k"&gt;.&lt;/span&gt; surround-read-tag)&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;You can add new by adding them to &lt;code&gt;evil-surround-pairs-alist&lt;/code&gt;.
  For more information do: &lt;code&gt;C-h v evil-surround-pairs-alist&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;&lt;code&gt;evil-surround-pairs-alist&lt;/code&gt; is a buffer local variable, which means that
  you can have different surround pairs in different modes. By default &lt;code&gt;&amp;lt;&lt;/code&gt;
  is used to insert a tag, in C++ this may not be useful - but inserting
  angle brackets is, so you can add this:&lt;/p&gt;
&lt;div class="highlight highlight-source-emacs-lisp"&gt;&lt;pre&gt;(&lt;span class="pl-c1"&gt;add-hook&lt;/span&gt; &lt;span class="pl-c1"&gt;'c++-mode-hook&lt;/span&gt; (&lt;span class="pl-k"&gt;lambda&lt;/span&gt; ()
                           (&lt;span class="pl-k"&gt;push&lt;/span&gt; '(&lt;span class="pl-c1"&gt;?&amp;lt;&lt;/span&gt; &lt;span class="pl-k"&gt;.&lt;/span&gt; (&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;&amp;lt; &lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; &lt;span class="pl-k"&gt;.&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt; &amp;gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)) evil-surround-pairs-alist)))&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Don’t worry about having two entries for &lt;code&gt;&amp;lt;&lt;/code&gt; surround will take the
  first.&lt;/p&gt;
&lt;p&gt;Or in Emacs Lisp modes using ` to enter ` ’ is quite useful, but not
  adding a pair of ` (the default behavior if no entry in
  &lt;code&gt;evil-surround-pairs-alist&lt;/code&gt; is present), so you can do this:&lt;/p&gt;
&lt;div class="highlight highlight-source-emacs-lisp"&gt;&lt;pre&gt;(&lt;span class="pl-c1"&gt;add-hook&lt;/span&gt; &lt;span class="pl-c1"&gt;'emacs-lisp-mode-hook&lt;/span&gt; (&lt;span class="pl-k"&gt;lambda&lt;/span&gt; ()
                                  (&lt;span class="pl-k"&gt;push&lt;/span&gt; '(&lt;span class="pl-c1"&gt;?`&lt;/span&gt; &lt;span class="pl-k"&gt;.&lt;/span&gt; (&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;`&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; &lt;span class="pl-k"&gt;.&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;'&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)) evil-surround-pairs-alist)))&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;without affecting your Markdown surround pairs, where the default is useful.&lt;/p&gt;
&lt;p&gt;To change the default &lt;code&gt;evil-surround-pairs-alist&lt;/code&gt; you have to use &lt;code&gt;setq-default&lt;/code&gt;,
  for example to remove all default pairs:&lt;/p&gt;
&lt;div class="highlight highlight-source-emacs-lisp"&gt;&lt;pre&gt;(&lt;span class="pl-c1"&gt;setq-default&lt;/span&gt; evil-surround-pairs-alist '())&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;or to add a pair that surrounds with two ` if you enter ~:&lt;/p&gt;
&lt;div class="highlight highlight-source-emacs-lisp"&gt;&lt;pre&gt;(&lt;span class="pl-c1"&gt;setq-default&lt;/span&gt; evil-surround-pairs-alist
              (&lt;span class="pl-k"&gt;push&lt;/span&gt; '(&lt;span class="pl-c1"&gt;?~&lt;/span&gt; &lt;span class="pl-k"&gt;.&lt;/span&gt; (&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;``&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; &lt;span class="pl-k"&gt;.&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;``&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)) evil-surround-pairs-alist))&lt;/pre&gt;&lt;/div&gt;
&lt;h2&gt;&lt;a id="user-content-add-new-surround-pairs-through-creation-of-evil-objects" class="anchor" aria-hidden="true" href="#add-new-surround-pairs-through-creation-of-evil-objects"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Add new surround pairs through creation of evil objects&lt;/h2&gt;
&lt;ul&gt;
  &lt;li&gt;You can create new evil objects that will be respected by evil-surround. Just use the following code:&lt;/li&gt;
&lt;/ul&gt;
&lt;div class="highlight highlight-source-emacs-lisp"&gt;&lt;pre&gt;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt;; this macro was copied from here: https://stackoverflow.com/a/22418983/4921402&lt;/span&gt;
(&lt;span class="pl-k"&gt;defmacro&lt;/span&gt; &lt;span class="pl-e"&gt;define-and-bind-quoted-text-object&lt;/span&gt; (&lt;span class="pl-v"&gt;name&lt;/span&gt; &lt;span class="pl-v"&gt;key&lt;/span&gt; &lt;span class="pl-v"&gt;start-regex&lt;/span&gt; &lt;span class="pl-v"&gt;end-regex&lt;/span&gt;)
  (&lt;span class="pl-k"&gt;let&lt;/span&gt; ((inner-name (&lt;span class="pl-c1"&gt;make-symbol&lt;/span&gt; (&lt;span class="pl-c1"&gt;concat&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;evil-inner-&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; name)))
        (outer-name (&lt;span class="pl-c1"&gt;make-symbol&lt;/span&gt; (&lt;span class="pl-c1"&gt;concat&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;evil-a-&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; name))))
    `(&lt;span class="pl-k"&gt;progn&lt;/span&gt;
       (evil-define-text-object &lt;span class="pl-c1"&gt;&lt;span class="pl-mi1"&gt;,&lt;/span&gt;inner-name&lt;/span&gt; (&lt;span class="pl-c1"&gt;count&lt;/span&gt; &lt;span class="pl-c1"&gt;&amp;amp;optional&lt;/span&gt; beg end type)
         (evil-select-paren &lt;span class="pl-c1"&gt;&lt;span class="pl-mi1"&gt;,&lt;/span&gt;start-regex&lt;/span&gt; &lt;span class="pl-c1"&gt;&lt;span class="pl-mi1"&gt;,&lt;/span&gt;end-regex&lt;/span&gt; beg end type count &lt;span class="pl-c1"&gt;nil&lt;/span&gt;))
       (evil-define-text-object &lt;span class="pl-c1"&gt;&lt;span class="pl-mi1"&gt;,&lt;/span&gt;outer-name&lt;/span&gt; (&lt;span class="pl-c1"&gt;count&lt;/span&gt; &lt;span class="pl-c1"&gt;&amp;amp;optional&lt;/span&gt; beg end type)
         (evil-select-paren &lt;span class="pl-c1"&gt;&lt;span class="pl-mi1"&gt;,&lt;/span&gt;start-regex&lt;/span&gt; &lt;span class="pl-c1"&gt;&lt;span class="pl-mi1"&gt;,&lt;/span&gt;end-regex&lt;/span&gt; beg end type count &lt;span class="pl-c1"&gt;t&lt;/span&gt;))
       (&lt;span class="pl-c1"&gt;define-key&lt;/span&gt; evil-inner-text-objects-map &lt;span class="pl-c1"&gt;&lt;span class="pl-mi1"&gt;,&lt;/span&gt;key&lt;/span&gt; &lt;span class="pl-c1"&gt;#'&lt;/span&gt;&lt;span class="pl-c1"&gt;&lt;span class="pl-mi1"&gt;,&lt;/span&gt;inner-name&lt;/span&gt;)
       (&lt;span class="pl-c1"&gt;define-key&lt;/span&gt; evil-outer-text-objects-map &lt;span class="pl-c1"&gt;&lt;span class="pl-mi1"&gt;,&lt;/span&gt;key&lt;/span&gt; &lt;span class="pl-c1"&gt;#'&lt;/span&gt;&lt;span class="pl-c1"&gt;&lt;span class="pl-mi1"&gt;,&lt;/span&gt;outer-name&lt;/span&gt;))))

(define-and-bind-quoted-text-object &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;pipe&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;|&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;|&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;|&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
(define-and-bind-quoted-text-object &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;slash&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;/&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;/&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;/&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
(define-and-bind-quoted-text-object &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;dollar&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;*&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;*&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;*&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
(define-and-bind-quoted-text-object &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;dollar&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;$&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;span class="pl-cce"&gt;\\&lt;/span&gt;$&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;span class="pl-cce"&gt;\\&lt;/span&gt;$&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;) &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;;&lt;/span&gt;; sometimes your have to escape the regex&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h2&gt;&lt;a id="user-content-add-new-supported-operators" class="anchor" aria-hidden="true" href="#add-new-supported-operators"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Add new supported operators&lt;/h2&gt;
&lt;p&gt;You can add support for new operators by adding them to &lt;code&gt;evil-surround-operator-alist&lt;/code&gt;.
  For more information do: &lt;code&gt;C-h v evil-surround-operator-alist&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;By default, surround works with &lt;code&gt;evil-change&lt;/code&gt; and &lt;code&gt;evil-delete&lt;/code&gt;.
  To add support for the evil-paredit package,
  you need to add &lt;code&gt;evil-paredit-change&lt;/code&gt; and &lt;code&gt;evil-paredit-delete&lt;/code&gt;
  to &lt;code&gt;evil-surround-operator-alist&lt;/code&gt;, like so:&lt;/p&gt;
&lt;div class="highlight highlight-source-emacs-lisp"&gt;&lt;pre&gt;(&lt;span class="pl-c1"&gt;add-to-list&lt;/span&gt; &lt;span class="pl-c1"&gt;'evil-surround-operator-alist&lt;/span&gt;
             '(evil-paredit-change &lt;span class="pl-k"&gt;.&lt;/span&gt; change))
(&lt;span class="pl-c1"&gt;add-to-list&lt;/span&gt; &lt;span class="pl-c1"&gt;'evil-surround-operator-alist&lt;/span&gt;
             '(evil-paredit-delete &lt;span class="pl-k"&gt;.&lt;/span&gt; delete))&lt;/pre&gt;&lt;/div&gt;
&lt;h1&gt;&lt;a id="user-content-examples" class="anchor" aria-hidden="true" href="#examples"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Examples&lt;/h1&gt;
&lt;p&gt;Here are some usage examples (taken from &lt;a href="https://github.com/tpope/vim-surround"&gt;surround.vim&lt;/a&gt;):&lt;/p&gt;
&lt;p&gt;Press =cs”’= inside&lt;/p&gt;
&lt;pre&gt;"Hello world!"
&lt;/pre&gt;
&lt;p&gt;to change it to&lt;/p&gt;
&lt;pre&gt;'Hello world!'
&lt;/pre&gt;
&lt;p&gt;Now press &lt;code&gt;cs'&amp;lt;q&amp;gt;&lt;/code&gt; to change it to&lt;/p&gt;
&lt;pre&gt;&amp;lt;q&amp;gt;Hello world!&amp;lt;/q&amp;gt;
&lt;/pre&gt;
&lt;p&gt;To go full circle, press =cst”= to get&lt;/p&gt;
&lt;pre&gt;"Hello world!"
&lt;/pre&gt;
&lt;p&gt;To remove the delimiters entirely, press =ds”=.&lt;/p&gt;
&lt;pre&gt;Hello world!
&lt;/pre&gt;
&lt;p&gt;Now with the cursor on “Hello”, press &lt;code&gt;ysiw]&lt;/code&gt; (&lt;code&gt;iw&lt;/code&gt; is a text object).&lt;/p&gt;
&lt;pre&gt;[Hello] world!
&lt;/pre&gt;
&lt;p&gt;Let’s make that braces and add some space (use &lt;code&gt;}&lt;/code&gt; instead of &lt;code&gt;{&lt;/code&gt; for no
  space): &lt;code&gt;cs]{&lt;/code&gt;&lt;/p&gt;
&lt;pre&gt;{ Hello } world!
&lt;/pre&gt;
&lt;p&gt;Now wrap the entire line in parentheses with &lt;code&gt;yssb&lt;/code&gt; or &lt;code&gt;yss)&lt;/code&gt;.&lt;/p&gt;
&lt;pre&gt;({ Hello } world!)
&lt;/pre&gt;
&lt;p&gt;Revert to the original text: &lt;code&gt;ds{ds)&lt;/code&gt;&lt;/p&gt;
&lt;pre&gt;Hello world!
&lt;/pre&gt;
&lt;p&gt;Emphasize hello: &lt;code&gt;ysiw&amp;lt;em&amp;gt;&lt;/code&gt;&lt;/p&gt;
&lt;div class="highlight highlight-text-html-basic"&gt;&lt;pre&gt;&amp;lt;&lt;span class="pl-ent"&gt;em&lt;/span&gt;&amp;gt;Hello&amp;lt;/&lt;span class="pl-ent"&gt;em&lt;/span&gt;&amp;gt; world!&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Finally, let’s try out visual mode. Press a capital V (for linewise
  visual mode) followed by &lt;code&gt;S&amp;lt;p class&lt;/code&gt;“important”&amp;gt;=.&lt;/p&gt;
&lt;div class="highlight highlight-text-html-basic"&gt;&lt;pre&gt;&amp;lt;&lt;span class="pl-ent"&gt;p&lt;/span&gt; &lt;span class="pl-e"&gt;class&lt;/span&gt;=&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;important&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;&amp;gt;
  &amp;lt;&lt;span class="pl-ent"&gt;em&lt;/span&gt;&amp;gt;Hello&amp;lt;/&lt;span class="pl-ent"&gt;em&lt;/span&gt;&amp;gt; world!
&amp;lt;/&lt;span class="pl-ent"&gt;p&lt;/span&gt;&amp;gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Suppose you want to call a function on your visual selection or a text
  object. You can simply press &lt;code&gt;f&lt;/code&gt; instead of the aforementioned keys and
  are then prompted for a functionname in the minibuffer, like with the
  tags. So with:&lt;/p&gt;
&lt;pre&gt;"Hello world!"
&lt;/pre&gt;
&lt;p&gt;… after selecting the string, then pressing &lt;code&gt;Sf&lt;/code&gt;, entering &lt;code&gt;print&lt;/code&gt; and
  pressing return you would get&lt;/p&gt;
&lt;div class="highlight highlight-source-c"&gt;&lt;pre&gt;&lt;span class="pl-en"&gt;print&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;Hello world!&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)&lt;/pre&gt;&lt;/div&gt;
&lt;h1&gt;&lt;a id="user-content-faaq-frequently-actually-asked-questions" class="anchor" aria-hidden="true" href="#faaq-frequently-actually-asked-questions"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;FAAQ (frequently actually asked questions)&lt;/h1&gt;
&lt;h2&gt;&lt;a id="user-content-why-does-vs-no-longer-surround" class="anchor" aria-hidden="true" href="#why-does-vs-no-longer-surround"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Why does &lt;code&gt;vs&lt;/code&gt; no longer surround?&lt;/h2&gt;
&lt;p&gt;This is due to an upstream change in &lt;code&gt;vim-surround&lt;/code&gt;. It happened in this &lt;a href="https://github.com/tpope/vim-surround/commit/6f0984a"&gt;commit&lt;/a&gt;. See the
  discussion in &lt;a href="https://github.com/timcharper/evil-surround/pull/48"&gt;this&lt;/a&gt; pull request for more details.&lt;/p&gt;
&lt;h1&gt;&lt;a id="user-content-contributing" class="anchor" aria-hidden="true" href="#contributing"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Contributing&lt;/h1&gt;
&lt;ul&gt;
  &lt;li&gt;you are encouraged to test your changes a standard environment with a clean emacs and just the needed plugins&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-interactively" class="anchor" aria-hidden="true" href="#interactively"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;interactively&lt;/h2&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; open a shell and go to the evil-surround directory, after cloning it&lt;/span&gt;
make
make emacs

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; now load evil-surround/test/evil-surround-test.el and M-x ert and run the tests&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h2&gt;&lt;a id="user-content-command" class="anchor" aria-hidden="true" href="#command"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;command&lt;/h2&gt;
&lt;div class="highlight highlight-source-shell"&gt;&lt;pre&gt;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; open a shell and go to the evil-surround directory, after cloning it&lt;/span&gt;
make
make &lt;span class="pl-c1"&gt;test&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h1&gt;&lt;a id="user-content-credits" class="anchor" aria-hidden="true" href="#credits"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Credits&lt;/h1&gt;
&lt;p&gt;Credits and many &lt;a href="https://github.com/emacs-evil/evil/issues/842"&gt;thanks&lt;/a&gt; go to &lt;a href="http://github.com/timcharper"&gt;Tim Harper&lt;/a&gt;, the original mantainer of the package.&lt;/p&gt;
&lt;h1&gt;&lt;a id="user-content-license" class="anchor" aria-hidden="true" href="#license"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;LICENSE&lt;/h1&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;a href="https://www.gnu.org/licenses/gpl-3.0.en.html" rel="nofollow"&gt;GNU General Public License v3&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;pre lang="text"&gt;GNU General Public License v3
Copyright (C) 2010 - 2017 Tim Harper
Copyright (c) 2018 - 2019 The evil-surround Contributors
&lt;/pre&gt;
&lt;/article&gt;&lt;/div&gt;</description><author>emacs-evil</author><guid isPermaLink="false">https://github.com/emacs-evil/evil-surround</guid><pubDate>Tue, 11 Feb 2020 00:25:00 GMT</pubDate></item></channel></rss>