<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0"><channel><title>GitHub Trending: R, This month</title><link>https://github.com/trending/r?since=monthly</link><description>The top repositories on GitHub for r, measured monthly</description><pubDate>Fri, 20 Dec 2019 01:08:20 GMT</pubDate><lastBuildDate>Fri, 20 Dec 2019 01:08:20 GMT</lastBuildDate><generator>PyRSS2Gen-1.1.0</generator><docs>http://blogs.law.harvard.edu/tech/rss</docs><ttl>720</ttl><item><title>thomasp85/patchwork #1 in R, This month</title><link>https://github.com/thomasp85/patchwork</link><description>&lt;p&gt;&lt;i&gt;The Composer of ggplots&lt;/i&gt;&lt;/p&gt;&lt;div id="readme" class="md" data-path="README.md"&gt;&lt;article class="markdown-body entry-content p-5" itemprop="text"&gt;
&lt;h1&gt;&lt;a id="user-content-patchwork-" class="anchor" aria-hidden="true" href="#patchwork-"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;patchwork &lt;a href="https://patchwork.data-imaginist.com" rel="nofollow"&gt;&lt;img src="man/figures/logo.png" align="right" height="131.5" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/h1&gt;

&lt;p&gt;&lt;a href="https://github.com/thomasp85/patchwork"&gt;&lt;img src="https://github.com/thomasp85/patchwork/workflows/R-CMD-check/badge.svg" alt="R build status" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://CRAN.R-project.org/package=patchwork" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/f35177dd25e445dca06fe1386e1194c8037891f8/687474703a2f2f7777772e722d706b672e6f72672f6261646765732f76657273696f6e2d61676f2f7061746368776f726b" alt="CRAN_Release_Badge" data-canonical-src="http://www.r-pkg.org/badges/version-ago/patchwork" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://CRAN.R-project.org/package=patchwork" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/00d7a3492f2343438701531829d15aff976ef69e/687474703a2f2f6372616e6c6f67732e722d706b672e6f72672f6261646765732f7061746368776f726b" alt="CRAN_Download_Badge" data-canonical-src="http://cranlogs.r-pkg.org/badges/patchwork" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://www.tidyverse.org/lifecycle/#experimental" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/ea6e0ff99602c3563e3dd684abf60b30edceaeef/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f6c6966656379636c652d6578706572696d656e74616c2d6f72616e67652e737667" alt="Lifecycle: experimental" data-canonical-src="https://img.shields.io/badge/lifecycle-experimental-orange.svg" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://codecov.io/gh/thomasp85/patchwork?branch=master" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/f0abca9b528a30242ea1bd282aa26027600e2f22/68747470733a2f2f636f6465636f762e696f2f67682f74686f6d61737038352f7061746368776f726b2f6272616e63682f6d61737465722f67726170682f62616467652e737667" alt="Codecov test coverage" data-canonical-src="https://codecov.io/gh/thomasp85/patchwork/branch/master/graph/badge.svg" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;The goal of &lt;code&gt;patchwork&lt;/code&gt; is to make it ridiculously simple to combine
separate ggplots into the same graphic. As such it tries to solve the
same problem as &lt;code&gt;gridExtra::grid.arrange()&lt;/code&gt; and &lt;code&gt;cowplot::plot_grid&lt;/code&gt; but
using an API that incites exploration and iteration, and scales to
arbitrily complex layouts.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-installation" class="anchor" aria-hidden="true" href="#installation"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Installation&lt;/h2&gt;
&lt;p&gt;You can install patchwork from CRAN using
&lt;code&gt;install.packages('patchwork')&lt;/code&gt;. Alternatively you can grab the
development version from github using devtools:&lt;/p&gt;
&lt;div class="highlight highlight-source-r"&gt;&lt;pre&gt;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; install.packages("devtools")&lt;/span&gt;
&lt;span class="pl-e"&gt;devtools&lt;/span&gt;&lt;span class="pl-k"&gt;::&lt;/span&gt;install_github(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;thomasp85/patchwork&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)&lt;/pre&gt;&lt;/div&gt;
&lt;h2&gt;&lt;a id="user-content-basic-example" class="anchor" aria-hidden="true" href="#basic-example"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Basic example&lt;/h2&gt;
&lt;p&gt;The usage of &lt;code&gt;patchwork&lt;/code&gt; is simple: just add plots together!&lt;/p&gt;
&lt;div class="highlight highlight-source-r"&gt;&lt;pre&gt;library(&lt;span class="pl-smi"&gt;ggplot2&lt;/span&gt;)
library(&lt;span class="pl-smi"&gt;patchwork&lt;/span&gt;)

&lt;span class="pl-smi"&gt;p1&lt;/span&gt; &lt;span class="pl-k"&gt;&amp;lt;-&lt;/span&gt; ggplot(&lt;span class="pl-smi"&gt;mtcars&lt;/span&gt;) &lt;span class="pl-k"&gt;+&lt;/span&gt; geom_point(aes(&lt;span class="pl-smi"&gt;mpg&lt;/span&gt;, &lt;span class="pl-smi"&gt;disp&lt;/span&gt;))
&lt;span class="pl-smi"&gt;p2&lt;/span&gt; &lt;span class="pl-k"&gt;&amp;lt;-&lt;/span&gt; ggplot(&lt;span class="pl-smi"&gt;mtcars&lt;/span&gt;) &lt;span class="pl-k"&gt;+&lt;/span&gt; geom_boxplot(aes(&lt;span class="pl-smi"&gt;gear&lt;/span&gt;, &lt;span class="pl-smi"&gt;disp&lt;/span&gt;, &lt;span class="pl-v"&gt;group&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-smi"&gt;gear&lt;/span&gt;))

&lt;span class="pl-smi"&gt;p1&lt;/span&gt; &lt;span class="pl-k"&gt;+&lt;/span&gt; &lt;span class="pl-smi"&gt;p2&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="man/figures/README-example-1.png"&gt;&lt;img src="man/figures/README-example-1.png" alt="" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;patchwork provides rich support for arbitrarily complex layouts with
full alignment. As an example, check out this very readable code for
nesting three plots on top of a third:&lt;/p&gt;
&lt;div class="highlight highlight-source-r"&gt;&lt;pre&gt;&lt;span class="pl-smi"&gt;p3&lt;/span&gt; &lt;span class="pl-k"&gt;&amp;lt;-&lt;/span&gt; ggplot(&lt;span class="pl-smi"&gt;mtcars&lt;/span&gt;) &lt;span class="pl-k"&gt;+&lt;/span&gt; geom_smooth(aes(&lt;span class="pl-smi"&gt;disp&lt;/span&gt;, &lt;span class="pl-smi"&gt;qsec&lt;/span&gt;))
&lt;span class="pl-smi"&gt;p4&lt;/span&gt; &lt;span class="pl-k"&gt;&amp;lt;-&lt;/span&gt; ggplot(&lt;span class="pl-smi"&gt;mtcars&lt;/span&gt;) &lt;span class="pl-k"&gt;+&lt;/span&gt; geom_bar(aes(&lt;span class="pl-smi"&gt;carb&lt;/span&gt;))

(&lt;span class="pl-smi"&gt;p1&lt;/span&gt; &lt;span class="pl-k"&gt;|&lt;/span&gt; &lt;span class="pl-smi"&gt;p2&lt;/span&gt; &lt;span class="pl-k"&gt;|&lt;/span&gt; &lt;span class="pl-smi"&gt;p3&lt;/span&gt;) &lt;span class="pl-k"&gt;/&lt;/span&gt;
      &lt;span class="pl-smi"&gt;p4&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="man/figures/README-unnamed-chunk-2-1.png"&gt;&lt;img src="man/figures/README-unnamed-chunk-2-1.png" alt="" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-learn-more" class="anchor" aria-hidden="true" href="#learn-more"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Learn more&lt;/h2&gt;
&lt;p&gt;patchwork can do so much more. Check out the guides for learning
everything there is to know about all the different features:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://patchwork.data-imaginist.com/articles/patchwork.html" rel="nofollow"&gt;Getting
Started&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://patchwork.data-imaginist.com/articles/guides/assembly.html" rel="nofollow"&gt;Assembling
Plots&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://patchwork.data-imaginist.com/articles/guides/layout.html" rel="nofollow"&gt;Defining
Layouts&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://patchwork.data-imaginist.com/articles/guides/annotation.html" rel="nofollow"&gt;Adding
Annotation&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://patchwork.data-imaginist.com/articles/guides/multipage.html" rel="nofollow"&gt;Aligning across
pages&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-code-of-conduct" class="anchor" aria-hidden="true" href="#code-of-conduct"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Code of Conduct&lt;/h2&gt;
&lt;p&gt;Please note that the patchwork project is released with a &lt;a href="https://patchwork.data-imaginist.com/CODE_OF_CONDUCT.html" rel="nofollow"&gt;Contributor
Code of
Conduct&lt;/a&gt;. By
contributing to this project, you agree to abide by its terms.&lt;/p&gt;
&lt;/article&gt;&lt;/div&gt;</description><author>thomasp85</author><guid isPermaLink="false">https://github.com/thomasp85/patchwork</guid><pubDate>Fri, 20 Dec 2019 00:01:00 GMT</pubDate></item><item><title>satijalab/seurat #2 in R, This month</title><link>https://github.com/satijalab/seurat</link><description>&lt;p&gt;&lt;i&gt;R toolkit for single cell genomics&lt;/i&gt;&lt;/p&gt;&lt;div id="readme" class="md" data-path="README.md"&gt;&lt;article class="markdown-body entry-content p-5" itemprop="text"&gt;&lt;p&gt;&lt;a href="https://travis-ci.com/satijalab/seurat" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/b4198e3101857fb90f7a1c9ece82ef77a3c24d4b/68747470733a2f2f7472617669732d63692e636f6d2f736174696a616c61622f7365757261742e737667" alt="Build Status" data-canonical-src="https://travis-ci.com/satijalab/seurat.svg" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://ci.appveyor.com/project/satijalab/seurat" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/f3f97cad37286f12acbb7868bffc4119c0e6d75b/68747470733a2f2f63692e6170707665796f722e636f6d2f6170692f70726f6a656374732f7374617475732f6769746875622f736174696a616c61622f7365757261743f7376673d74727565" alt="AppVeyor build status" data-canonical-src="https://ci.appveyor.com/api/projects/status/github/satijalab/seurat?svg=true" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://cran.r-project.org/package=Seurat" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/3f41aaffd0745b04e91bef2deb22c61155581231/68747470733a2f2f7777772e722d706b672e6f72672f6261646765732f76657273696f6e2f536575726174" alt="CRAN Version" data-canonical-src="https://www.r-pkg.org/badges/version/Seurat" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://cran.r-project.org/package=Seurat" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/3de70c3ddcccdf931f9ad808e71008c3185033a5/68747470733a2f2f6372616e6c6f67732e722d706b672e6f72672f6261646765732f536575726174" alt="CRAN Downloads" data-canonical-src="https://cranlogs.r-pkg.org/badges/Seurat" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h1&gt;&lt;a id="user-content-seurat-v312" class="anchor" aria-hidden="true" href="#seurat-v312"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Seurat v3.1.2&lt;/h1&gt;
&lt;p&gt;Seurat is an R toolkit for single cell genomics, developed and maintained by the Satija Lab at NYGC.&lt;/p&gt;
&lt;p&gt;Instructions, documentation, and tutorials can be found at:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://satijalab.org/seurat" rel="nofollow"&gt;https://satijalab.org/seurat&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Seurat is also hosted on GitHub, you can view and clone the repository at&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/satijalab/seurat"&gt;https://github.com/satijalab/seurat&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Seurat has been successfully installed on Mac OS X, Linux, and Windows, using the devtools package to install directly from GitHub&lt;/p&gt;
&lt;p&gt;Improvements and new features will be added on a regular basis, please contact &lt;a href="mailto:seuratpackage@gmail.com"&gt;seuratpackage@gmail.com&lt;/a&gt; with any questions or if you would like to contribute&lt;/p&gt;
&lt;p&gt;Version History&lt;/p&gt;
&lt;p&gt;August 20, 2019&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Version 3.1&lt;/li&gt;
&lt;li&gt;Changes:
&lt;ul&gt;
&lt;li&gt;Support for SCTransform integration workflows&lt;/li&gt;
&lt;li&gt;Integration speed ups: reference-based integration + reciprocal PCA&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;April 12, 2019&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Version 3.0&lt;/li&gt;
&lt;li&gt;Changes:
&lt;ul&gt;
&lt;li&gt;Preprint published describing new methods for identifying anchors across single-cell datasets&lt;/li&gt;
&lt;li&gt;Restructured Seurat object with native support for multimodal data&lt;/li&gt;
&lt;li&gt;Parallelization support via future&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;July 20, 2018&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Version 2.4&lt;/li&gt;
&lt;li&gt;Changes:
&lt;ul&gt;
&lt;li&gt;Java dependency removed and functionality rewritten in Rcpp&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;March 22, 2018&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Version 2.3&lt;/li&gt;
&lt;li&gt;Changes:
&lt;ul&gt;
&lt;li&gt;New utility functions&lt;/li&gt;
&lt;li&gt;Speed and efficiency improvments&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;January 10, 2018&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Version 2.2&lt;/li&gt;
&lt;li&gt;Changes:
&lt;ul&gt;
&lt;li&gt;Support for multiple-dataset alignment with RunMultiCCA and AlignSubspace&lt;/li&gt;
&lt;li&gt;New methods for evaluating alignment performance&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;October 12, 2017&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Version 2.1&lt;/li&gt;
&lt;li&gt;Changes:
&lt;ul&gt;
&lt;li&gt;Support for using MAST and DESeq2 packages for differential expression testing in FindMarkers&lt;/li&gt;
&lt;li&gt;Support for multi-modal single-cell data via @assay slot&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;July 26, 2017&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Version 2.0&lt;/li&gt;
&lt;li&gt;Changes:
&lt;ul&gt;
&lt;li&gt;Preprint released for integrated analysis of scRNA-seq across conditions, technologies and species&lt;/li&gt;
&lt;li&gt;Significant restructuring of code to support clarity and dataset exploration&lt;/li&gt;
&lt;li&gt;Methods for scoring gene expression and cell-cycle phase&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;October 4, 2016&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Version 1.4 released&lt;/li&gt;
&lt;li&gt;Changes:
&lt;ul&gt;
&lt;li&gt;Improved tools for cluster evaluation/visualizations&lt;/li&gt;
&lt;li&gt;Methods for combining and adding to datasets&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;August 22, 2016:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Version 1.3 released&lt;/li&gt;
&lt;li&gt;Changes :
&lt;ul&gt;
&lt;li&gt;Improved clustering approach - see FAQ for details&lt;/li&gt;
&lt;li&gt;All functions support sparse matrices&lt;/li&gt;
&lt;li&gt;Methods for removing unwanted sources of variation&lt;/li&gt;
&lt;li&gt;Consistent function names&lt;/li&gt;
&lt;li&gt;Updated visualizations&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;May 21, 2015:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Drop-Seq manuscript published. Version 1.2 released&lt;/li&gt;
&lt;li&gt;Changes :
&lt;ul&gt;
&lt;li&gt;Added support for spectral t-SNE and density clustering&lt;/li&gt;
&lt;li&gt;New visualizations - including pcHeatmap, dot.plot, and feature.plot&lt;/li&gt;
&lt;li&gt;Expanded package documentation, reduced import package burden&lt;/li&gt;
&lt;li&gt;Seurat code is now hosted on GitHub, enables easy install through devtools&lt;/li&gt;
&lt;li&gt;Small bug fixes&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;April 13, 2015:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Spatial mapping manuscript published. Version 1.1 released (initial release)&lt;/li&gt;
&lt;/ul&gt;
&lt;/article&gt;&lt;/div&gt;</description><author>satijalab</author><guid isPermaLink="false">https://github.com/satijalab/seurat</guid><pubDate>Fri, 20 Dec 2019 00:02:00 GMT</pubDate></item><item><title>thomasp85/gganimate #3 in R, This month</title><link>https://github.com/thomasp85/gganimate</link><description>&lt;p&gt;&lt;i&gt;A Grammar of Animated Graphics&lt;/i&gt;&lt;/p&gt;&lt;div id="readme" class="md" data-path="README.md"&gt;&lt;article class="markdown-body entry-content p-5" itemprop="text"&gt;
&lt;h1&gt;&lt;a id="user-content-gganimate-" class="anchor" aria-hidden="true" href="#gganimate-"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;gganimate &lt;a target="_blank" rel="noopener noreferrer" href="man/figures/logo.png"&gt;&lt;img src="man/figures/logo.png" align="right" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/h1&gt;
&lt;p&gt;&lt;a href="https://travis-ci.org/thomasp85/gganimate" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/777f5b7f3b0b3faeb0ae385660b92c2ad7cb1a5e/68747470733a2f2f7472617669732d63692e6f72672f74686f6d61737038352f6767616e696d6174652e7376673f6272616e63683d6d6173746572" alt="Travis-CI Build Status" data-canonical-src="https://travis-ci.org/thomasp85/gganimate.svg?branch=master" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://ci.appveyor.com/project/thomasp85/gganimate" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/467c8710ef8bf704c3304a26866cc3e58604d1fc/68747470733a2f2f63692e6170707665796f722e636f6d2f6170692f70726f6a656374732f7374617475732f6769746875622f74686f6d61737038352f6767616e696d6174653f6272616e63683d6d6173746572267376673d74727565" alt="AppVeyor Build Status" data-canonical-src="https://ci.appveyor.com/api/projects/status/github/thomasp85/gganimate?branch=master&amp;amp;svg=true" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://cran.r-project.org/package=gganimate" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/99ddc51584ae109e59717dffecf7324413a12013/687474703a2f2f7777772e722d706b672e6f72672f6261646765732f76657273696f6e2d61676f2f6767616e696d617465" alt="CRAN_Status_Badge" data-canonical-src="http://www.r-pkg.org/badges/version-ago/gganimate" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://cran.r-project.org/package=gganimate" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/43ae0e7f226ebd10e171fa54fa2b1a115e77c065/687474703a2f2f6372616e6c6f67732e722d706b672e6f72672f6261646765732f6767616e696d617465" alt="CRAN_Download_Badge" data-canonical-src="http://cranlogs.r-pkg.org/badges/gganimate" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://codecov.io/github/thomasp85/gganimate?branch=master" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/65d6e99ae34b0b861c5e3b42f27e31ec3bf7ff68/68747470733a2f2f696d672e736869656c64732e696f2f636f6465636f762f632f6769746875622f74686f6d61737038352f6767616e696d6174652f6d61737465722e737667" alt="Coverage Status" data-canonical-src="https://img.shields.io/codecov/c/github/thomasp85/gganimate/master.svg" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;code&gt;gganimate&lt;/code&gt; extends the grammar of graphics as implemented by
&lt;a href="https://github.com/tidyverse/ggplot2"&gt;&lt;code&gt;ggplot2&lt;/code&gt;&lt;/a&gt; to include the
description of animation. It does this by providing a range of new
grammar classes that can be added to the plot object in order to
customise how it should change with time.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;transition_*()&lt;/code&gt; defines how the data should be spread out and how
it relates to itself across time.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;view_*()&lt;/code&gt; defines how the positional scales should change along the
animation.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;shadow_*()&lt;/code&gt; defines how data from other points in time should be
presented in the given point in time.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;enter_*()&lt;/code&gt;/&lt;code&gt;exit_*()&lt;/code&gt; defines how new data should appear and how
old data should disappear during the course of the animation.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;ease_aes()&lt;/code&gt; defines how different aesthetics should be eased during
transitions.&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-an-example" class="anchor" aria-hidden="true" href="#an-example"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;An Example&lt;/h2&gt;
&lt;p&gt;All of the above might seem a bit abstract. Let’s try with a contrived
example:&lt;/p&gt;
&lt;div class="highlight highlight-source-r"&gt;&lt;pre&gt;library(&lt;span class="pl-smi"&gt;ggplot2&lt;/span&gt;)
library(&lt;span class="pl-smi"&gt;gganimate&lt;/span&gt;)

ggplot(&lt;span class="pl-smi"&gt;mtcars&lt;/span&gt;, aes(&lt;span class="pl-k"&gt;factor&lt;/span&gt;(&lt;span class="pl-smi"&gt;cyl&lt;/span&gt;), &lt;span class="pl-smi"&gt;mpg&lt;/span&gt;)) &lt;span class="pl-k"&gt;+&lt;/span&gt; 
  geom_boxplot() &lt;span class="pl-k"&gt;+&lt;/span&gt; 
  &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; Here comes the gganimate code&lt;/span&gt;
  transition_states(
    &lt;span class="pl-smi"&gt;gear&lt;/span&gt;,
    &lt;span class="pl-v"&gt;transition_length&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;2&lt;/span&gt;,
    &lt;span class="pl-v"&gt;state_length&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;1&lt;/span&gt;
  ) &lt;span class="pl-k"&gt;+&lt;/span&gt;
  enter_fade() &lt;span class="pl-k"&gt;+&lt;/span&gt; 
  exit_shrink() &lt;span class="pl-k"&gt;+&lt;/span&gt;
  ease_aes(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;sine-in-out&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;)&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="man/figures/README-unnamed-chunk-2-1.gif"&gt;&lt;img src="man/figures/README-unnamed-chunk-2-1.gif" alt="" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Here we take a simple boxplot of fuel consumption as a function of
cylinders and lets it transition between the number of gears available
in the cars. As this is a discrete split (&lt;code&gt;gear&lt;/code&gt; being best described as
an ordered factor) we use &lt;code&gt;transition_states&lt;/code&gt; and provides a relative
length to use for transition and state view. As not all combinations of
data is present there are states missing a box. We define that when a
box appears it should fade into view, whereas at should shrink away when
it disappear. Lastly we decide to use a sinusoidal easing for all our
aesthetics (here, only &lt;code&gt;y&lt;/code&gt; is changing)&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-installation" class="anchor" aria-hidden="true" href="#installation"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Installation&lt;/h2&gt;
&lt;p&gt;&lt;code&gt;gganimate&lt;/code&gt; is available on CRAN and can be installed with
&lt;code&gt;install.packages('gganimate')&lt;/code&gt;. If you wish to install the development
version you can install directly from github using devtools:&lt;/p&gt;
&lt;div class="highlight highlight-source-r"&gt;&lt;pre&gt;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; install.packages('devtools')&lt;/span&gt;
&lt;span class="pl-e"&gt;devtools&lt;/span&gt;&lt;span class="pl-k"&gt;::&lt;/span&gt;install_github(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;thomasp85/gganimate&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;)&lt;/pre&gt;&lt;/div&gt;
&lt;h2&gt;&lt;a id="user-content-yet-another-example" class="anchor" aria-hidden="true" href="#yet-another-example"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Yet Another Example&lt;/h2&gt;
&lt;p&gt;It is impossible to cover everything possible with &lt;code&gt;gganimate&lt;/code&gt; in a
README, but animations are fun, so let’s at least have one more:&lt;/p&gt;
&lt;div class="highlight highlight-source-r"&gt;&lt;pre&gt;library(&lt;span class="pl-smi"&gt;gapminder&lt;/span&gt;)

ggplot(&lt;span class="pl-smi"&gt;gapminder&lt;/span&gt;, aes(&lt;span class="pl-smi"&gt;gdpPercap&lt;/span&gt;, &lt;span class="pl-smi"&gt;lifeExp&lt;/span&gt;, &lt;span class="pl-v"&gt;size&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-smi"&gt;pop&lt;/span&gt;, &lt;span class="pl-v"&gt;colour&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-smi"&gt;country&lt;/span&gt;)) &lt;span class="pl-k"&gt;+&lt;/span&gt;
  geom_point(&lt;span class="pl-v"&gt;alpha&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;0.7&lt;/span&gt;, &lt;span class="pl-v"&gt;show.legend&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;FALSE&lt;/span&gt;) &lt;span class="pl-k"&gt;+&lt;/span&gt;
  scale_colour_manual(&lt;span class="pl-v"&gt;values&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-smi"&gt;country_colors&lt;/span&gt;) &lt;span class="pl-k"&gt;+&lt;/span&gt;
  scale_size(&lt;span class="pl-v"&gt;range&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; c(&lt;span class="pl-c1"&gt;2&lt;/span&gt;, &lt;span class="pl-c1"&gt;12&lt;/span&gt;)) &lt;span class="pl-k"&gt;+&lt;/span&gt;
  scale_x_log10() &lt;span class="pl-k"&gt;+&lt;/span&gt;
  facet_wrap(&lt;span class="pl-k"&gt;~&lt;/span&gt;&lt;span class="pl-smi"&gt;continent&lt;/span&gt;) &lt;span class="pl-k"&gt;+&lt;/span&gt;
  &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; Here comes the gganimate specific bits&lt;/span&gt;
  labs(&lt;span class="pl-v"&gt;title&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;Year: {frame_time}&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-v"&gt;x&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;GDP per capita&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-v"&gt;y&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;life expectancy&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;) &lt;span class="pl-k"&gt;+&lt;/span&gt;
  transition_time(&lt;span class="pl-smi"&gt;year&lt;/span&gt;) &lt;span class="pl-k"&gt;+&lt;/span&gt;
  ease_aes(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;linear&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;)&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="man/figures/README-unnamed-chunk-4-1.gif"&gt;&lt;img src="man/figures/README-unnamed-chunk-4-1.gif" alt="" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;In this example we see the use of &lt;code&gt;transition_time()&lt;/code&gt; which can be used
with continuous variables such as &lt;code&gt;year&lt;/code&gt;. With this transition it is not
necessary to provide transition and state length as the “transition
variable” provides this directly (e.g. it should take twice as long to
transition between 1980 and 1990 compared to 2000 to 2005). We also see
the use of string literal interpolation in titles. &lt;code&gt;gganimate&lt;/code&gt; lets you
specify variables to evaluate inside titles and different transitions
provide different type of information to use.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-where-is-my-animation" class="anchor" aria-hidden="true" href="#where-is-my-animation"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Where is my animation?&lt;/h2&gt;
&lt;p&gt;&lt;code&gt;gganimate&lt;/code&gt; mimics the way &lt;code&gt;ggplot2&lt;/code&gt; renders its output, in that the
rendering is done automatically when the &lt;code&gt;gganim&lt;/code&gt; object is printed.
Under the hood, the &lt;code&gt;animate()&lt;/code&gt; function is called which renders the
frame and passes the frames to a renderer functions which takes care of
combining them to the final animation. The default renderer is
&lt;code&gt;gifski_renderer()&lt;/code&gt; which returns a &lt;code&gt;gif_image&lt;/code&gt; object which is a simple
wrapper around a path to a gif file. If &lt;code&gt;animate()&lt;/code&gt; has been called
implicitly as part of &lt;code&gt;print&lt;/code&gt; the &lt;code&gt;gif_image&lt;/code&gt; object is available using
the &lt;code&gt;last_animation()&lt;/code&gt; function (analogous to &lt;code&gt;ggplot2::last_plot()&lt;/code&gt;).
In order to save the animation to a specific location, you can use the
&lt;code&gt;anim_save()&lt;/code&gt; function which, like &lt;code&gt;ggplot2::ggsave&lt;/code&gt;, defaults to taking
the last rendered animation and writes it to a file.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-i-dont-like-gifs" class="anchor" aria-hidden="true" href="#i-dont-like-gifs"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;I don’t like gifs…&lt;/h2&gt;
&lt;p&gt;gif is a fantastic format for animations due to its wide support, but
sometimes another format is required. &lt;code&gt;gganimate&lt;/code&gt; is agnostic to the
renderer and while the default is to use
&lt;a href="https://github.com/r-rust/gifski"&gt;gifski&lt;/a&gt; to combines the frames into a
gif, it doesn’t have to be so. By passing an alternate renderer to the
&lt;code&gt;animate()&lt;/code&gt; function you can control the animation format, and
&lt;code&gt;gganimate&lt;/code&gt; comes with a bunch (and you can write your own). To create
video files you can e.g. use the &lt;code&gt;ffmpeg_renderer()&lt;/code&gt;:&lt;/p&gt;
&lt;div class="highlight highlight-source-r"&gt;&lt;pre&gt;&lt;span class="pl-smi"&gt;p&lt;/span&gt; &lt;span class="pl-k"&gt;&amp;lt;-&lt;/span&gt; ggplot(&lt;span class="pl-smi"&gt;airquality&lt;/span&gt;, aes(&lt;span class="pl-smi"&gt;Day&lt;/span&gt;, &lt;span class="pl-smi"&gt;Temp&lt;/span&gt;)) &lt;span class="pl-k"&gt;+&lt;/span&gt; 
  geom_line(&lt;span class="pl-v"&gt;size&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;2&lt;/span&gt;, &lt;span class="pl-v"&gt;colour&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;steelblue&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;) &lt;span class="pl-k"&gt;+&lt;/span&gt; 
  transition_states(&lt;span class="pl-smi"&gt;Month&lt;/span&gt;, &lt;span class="pl-c1"&gt;4&lt;/span&gt;, &lt;span class="pl-c1"&gt;1&lt;/span&gt;) &lt;span class="pl-k"&gt;+&lt;/span&gt; 
  shadow_mark(&lt;span class="pl-v"&gt;size&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;1&lt;/span&gt;, &lt;span class="pl-v"&gt;colour&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;grey&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt;)
animate(&lt;span class="pl-smi"&gt;p&lt;/span&gt;, &lt;span class="pl-v"&gt;renderer&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; ffmpeg_renderer())&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;em&gt;Video output are automatically embedded in RMarkdown documents, but
GitHub strips video when rendering READMEs so you can’t see it here&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;Further there’s support for rendering to sprite sheets if that is your
vice.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-old-api" class="anchor" aria-hidden="true" href="#old-api"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Old API&lt;/h2&gt;
&lt;p&gt;This is the second iteration of the gganimate package. The first,
developed by &lt;a href="https://github.com/dgrtwo"&gt;David Robinson&lt;/a&gt; had a very
different API, and relied on specifying animation frame membership
inside &lt;code&gt;aes()&lt;/code&gt; blocks in the &lt;code&gt;geom_*()&lt;/code&gt; calls. This approach was easy to
grasp, but essentially limited in capabilities and has thus been
abandoned for a more thorough grammar.&lt;/p&gt;
&lt;p&gt;Code written for the old API will not work with this &lt;code&gt;gganimate&lt;/code&gt; version
and there will not come a future support for it. If you wish to continue
using the old API then avoid upgrading &lt;code&gt;gganimate&lt;/code&gt;. If you’ve already
upgraded and wish to downgrade, the latest version of the old API is
available as a &lt;a href="https://github.com/thomasp85/gganimate/releases/tag/v0.1.1"&gt;GitHub
release&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;If you wish to convert your old animations to the new API, the closest
you get is probably with &lt;code&gt;transition_manual&lt;/code&gt;, even though it is not
completely substitutable:&lt;/p&gt;
&lt;div class="highlight highlight-source-r"&gt;&lt;pre&gt;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; Old code&lt;/span&gt;
ggplot(&lt;span class="pl-smi"&gt;mtcars&lt;/span&gt;) &lt;span class="pl-k"&gt;+&lt;/span&gt; 
  geom_boxplot(aes(&lt;span class="pl-k"&gt;factor&lt;/span&gt;(&lt;span class="pl-smi"&gt;cyl&lt;/span&gt;), &lt;span class="pl-smi"&gt;mpg&lt;/span&gt;, &lt;span class="pl-v"&gt;frame&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-smi"&gt;gear&lt;/span&gt;))

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; New code&lt;/span&gt;
ggplot(&lt;span class="pl-smi"&gt;mtcars&lt;/span&gt;) &lt;span class="pl-k"&gt;+&lt;/span&gt; 
  geom_boxplot(aes(&lt;span class="pl-k"&gt;factor&lt;/span&gt;(&lt;span class="pl-smi"&gt;cyl&lt;/span&gt;), &lt;span class="pl-smi"&gt;mpg&lt;/span&gt;)) &lt;span class="pl-k"&gt;+&lt;/span&gt; 
  transition_manual(&lt;span class="pl-smi"&gt;gear&lt;/span&gt;)&lt;/pre&gt;&lt;/div&gt;
&lt;/article&gt;&lt;/div&gt;</description><author>thomasp85</author><guid isPermaLink="false">https://github.com/thomasp85/gganimate</guid><pubDate>Fri, 20 Dec 2019 00:03:00 GMT</pubDate></item></channel></rss>