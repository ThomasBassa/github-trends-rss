<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0"><channel><title>GitHub Trending: R, This month</title><link>https://github.com/trending/r?since=monthly</link><description>The top repositories on GitHub for r, measured monthly</description><pubDate>Tue, 24 Dec 2019 01:08:38 GMT</pubDate><lastBuildDate>Tue, 24 Dec 2019 01:08:38 GMT</lastBuildDate><generator>PyRSS2Gen-1.1.0</generator><docs>http://blogs.law.harvard.edu/tech/rss</docs><ttl>720</ttl><item><title>thomasp85/patchwork #1 in R, This month</title><link>https://github.com/thomasp85/patchwork</link><description>&lt;p&gt;&lt;i&gt;The Composer of ggplots&lt;/i&gt;&lt;/p&gt;&lt;div id="readme" class="md" data-path="README.md"&gt;&lt;article class="markdown-body entry-content p-5" itemprop="text"&gt;
&lt;h1&gt;&lt;a id="user-content-patchwork-" class="anchor" aria-hidden="true" href="#patchwork-"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;patchwork &lt;a href="https://patchwork.data-imaginist.com" rel="nofollow"&gt;&lt;img src="man/figures/logo.png" align="right" height="131.5" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/h1&gt;

&lt;p&gt;&lt;a href="https://github.com/thomasp85/patchwork"&gt;&lt;img src="https://github.com/thomasp85/patchwork/workflows/R-CMD-check/badge.svg" alt="R build status" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://CRAN.R-project.org/package=patchwork" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/f35177dd25e445dca06fe1386e1194c8037891f8/687474703a2f2f7777772e722d706b672e6f72672f6261646765732f76657273696f6e2d61676f2f7061746368776f726b" alt="CRAN_Release_Badge" data-canonical-src="http://www.r-pkg.org/badges/version-ago/patchwork" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://CRAN.R-project.org/package=patchwork" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/00d7a3492f2343438701531829d15aff976ef69e/687474703a2f2f6372616e6c6f67732e722d706b672e6f72672f6261646765732f7061746368776f726b" alt="CRAN_Download_Badge" data-canonical-src="http://cranlogs.r-pkg.org/badges/patchwork" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://www.tidyverse.org/lifecycle/#experimental" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/ea6e0ff99602c3563e3dd684abf60b30edceaeef/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f6c6966656379636c652d6578706572696d656e74616c2d6f72616e67652e737667" alt="Lifecycle: experimental" data-canonical-src="https://img.shields.io/badge/lifecycle-experimental-orange.svg" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://codecov.io/gh/thomasp85/patchwork?branch=master" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/f0abca9b528a30242ea1bd282aa26027600e2f22/68747470733a2f2f636f6465636f762e696f2f67682f74686f6d61737038352f7061746368776f726b2f6272616e63682f6d61737465722f67726170682f62616467652e737667" alt="Codecov test coverage" data-canonical-src="https://codecov.io/gh/thomasp85/patchwork/branch/master/graph/badge.svg" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;The goal of &lt;code&gt;patchwork&lt;/code&gt; is to make it ridiculously simple to combine
separate ggplots into the same graphic. As such it tries to solve the
same problem as &lt;code&gt;gridExtra::grid.arrange()&lt;/code&gt; and &lt;code&gt;cowplot::plot_grid&lt;/code&gt; but
using an API that incites exploration and iteration, and scales to
arbitrily complex layouts.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-installation" class="anchor" aria-hidden="true" href="#installation"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Installation&lt;/h2&gt;
&lt;p&gt;You can install patchwork from CRAN using
&lt;code&gt;install.packages('patchwork')&lt;/code&gt;. Alternatively you can grab the
development version from github using devtools:&lt;/p&gt;
&lt;div class="highlight highlight-source-r"&gt;&lt;pre&gt;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; install.packages("devtools")&lt;/span&gt;
&lt;span class="pl-e"&gt;devtools&lt;/span&gt;&lt;span class="pl-k"&gt;::&lt;/span&gt;install_github(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;thomasp85/patchwork&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)&lt;/pre&gt;&lt;/div&gt;
&lt;h2&gt;&lt;a id="user-content-basic-example" class="anchor" aria-hidden="true" href="#basic-example"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Basic example&lt;/h2&gt;
&lt;p&gt;The usage of &lt;code&gt;patchwork&lt;/code&gt; is simple: just add plots together!&lt;/p&gt;
&lt;div class="highlight highlight-source-r"&gt;&lt;pre&gt;library(&lt;span class="pl-smi"&gt;ggplot2&lt;/span&gt;)
library(&lt;span class="pl-smi"&gt;patchwork&lt;/span&gt;)

&lt;span class="pl-smi"&gt;p1&lt;/span&gt; &lt;span class="pl-k"&gt;&amp;lt;-&lt;/span&gt; ggplot(&lt;span class="pl-smi"&gt;mtcars&lt;/span&gt;) &lt;span class="pl-k"&gt;+&lt;/span&gt; geom_point(aes(&lt;span class="pl-smi"&gt;mpg&lt;/span&gt;, &lt;span class="pl-smi"&gt;disp&lt;/span&gt;))
&lt;span class="pl-smi"&gt;p2&lt;/span&gt; &lt;span class="pl-k"&gt;&amp;lt;-&lt;/span&gt; ggplot(&lt;span class="pl-smi"&gt;mtcars&lt;/span&gt;) &lt;span class="pl-k"&gt;+&lt;/span&gt; geom_boxplot(aes(&lt;span class="pl-smi"&gt;gear&lt;/span&gt;, &lt;span class="pl-smi"&gt;disp&lt;/span&gt;, &lt;span class="pl-v"&gt;group&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-smi"&gt;gear&lt;/span&gt;))

&lt;span class="pl-smi"&gt;p1&lt;/span&gt; &lt;span class="pl-k"&gt;+&lt;/span&gt; &lt;span class="pl-smi"&gt;p2&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="man/figures/README-example-1.png"&gt;&lt;img src="man/figures/README-example-1.png" alt="" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;patchwork provides rich support for arbitrarily complex layouts with
full alignment. As an example, check out this very readable code for
nesting three plots on top of a third:&lt;/p&gt;
&lt;div class="highlight highlight-source-r"&gt;&lt;pre&gt;&lt;span class="pl-smi"&gt;p3&lt;/span&gt; &lt;span class="pl-k"&gt;&amp;lt;-&lt;/span&gt; ggplot(&lt;span class="pl-smi"&gt;mtcars&lt;/span&gt;) &lt;span class="pl-k"&gt;+&lt;/span&gt; geom_smooth(aes(&lt;span class="pl-smi"&gt;disp&lt;/span&gt;, &lt;span class="pl-smi"&gt;qsec&lt;/span&gt;))
&lt;span class="pl-smi"&gt;p4&lt;/span&gt; &lt;span class="pl-k"&gt;&amp;lt;-&lt;/span&gt; ggplot(&lt;span class="pl-smi"&gt;mtcars&lt;/span&gt;) &lt;span class="pl-k"&gt;+&lt;/span&gt; geom_bar(aes(&lt;span class="pl-smi"&gt;carb&lt;/span&gt;))

(&lt;span class="pl-smi"&gt;p1&lt;/span&gt; &lt;span class="pl-k"&gt;|&lt;/span&gt; &lt;span class="pl-smi"&gt;p2&lt;/span&gt; &lt;span class="pl-k"&gt;|&lt;/span&gt; &lt;span class="pl-smi"&gt;p3&lt;/span&gt;) &lt;span class="pl-k"&gt;/&lt;/span&gt;
      &lt;span class="pl-smi"&gt;p4&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="man/figures/README-unnamed-chunk-2-1.png"&gt;&lt;img src="man/figures/README-unnamed-chunk-2-1.png" alt="" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-learn-more" class="anchor" aria-hidden="true" href="#learn-more"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Learn more&lt;/h2&gt;
&lt;p&gt;patchwork can do so much more. Check out the guides for learning
everything there is to know about all the different features:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://patchwork.data-imaginist.com/articles/patchwork.html" rel="nofollow"&gt;Getting
Started&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://patchwork.data-imaginist.com/articles/guides/assembly.html" rel="nofollow"&gt;Assembling
Plots&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://patchwork.data-imaginist.com/articles/guides/layout.html" rel="nofollow"&gt;Defining
Layouts&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://patchwork.data-imaginist.com/articles/guides/annotation.html" rel="nofollow"&gt;Adding
Annotation&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://patchwork.data-imaginist.com/articles/guides/multipage.html" rel="nofollow"&gt;Aligning across
pages&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-code-of-conduct" class="anchor" aria-hidden="true" href="#code-of-conduct"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Code of Conduct&lt;/h2&gt;
&lt;p&gt;Please note that the patchwork project is released with a &lt;a href="https://patchwork.data-imaginist.com/CODE_OF_CONDUCT.html" rel="nofollow"&gt;Contributor
Code of
Conduct&lt;/a&gt;. By
contributing to this project, you agree to abide by its terms.&lt;/p&gt;
&lt;/article&gt;&lt;/div&gt;</description><author>thomasp85</author><guid isPermaLink="false">https://github.com/thomasp85/patchwork</guid><pubDate>Tue, 24 Dec 2019 00:01:00 GMT</pubDate></item><item><title>ropensci/drake #2 in R, This month</title><link>https://github.com/ropensci/drake</link><description>&lt;p&gt;&lt;i&gt;An R-focused pipeline toolkit for reproducibility and high-performance computing&lt;/i&gt;&lt;/p&gt;&lt;div id="readme" class="md" data-path="README.md"&gt;&lt;article class="markdown-body entry-content p-5" itemprop="text"&gt;
&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="https://camo.githubusercontent.com/04d35d8cc5a548445bfc33840a88289fdc340ca3/68747470733a2f2f646f63732e726f70656e7363692e6f72672f6472616b652f7265666572656e63652f666967757265732f696e666f677261706869632e737667"&gt;&lt;img src="https://camo.githubusercontent.com/04d35d8cc5a548445bfc33840a88289fdc340ca3/68747470733a2f2f646f63732e726f70656e7363692e6f72672f6472616b652f7265666572656e63652f666967757265732f696e666f677261706869632e737667" alt="infographic" align="center" data-canonical-src="https://docs.ropensci.org/drake/reference/figures/infographic.svg" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th align="left"&gt;
Usage
&lt;/th&gt;
&lt;th align="left"&gt;
Release
&lt;/th&gt;
&lt;th align="left"&gt;
Development
&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td align="left"&gt;
&lt;a href="https://www.gnu.org/licenses/gpl-3.0.en.html" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/ad9bd41c4ecfe91511f21d0df2e26043e1d51d61/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f6c6963656e63652d47504c2d2d332d626c75652e737667" alt="Licence" data-canonical-src="https://img.shields.io/badge/licence-GPL--3-blue.svg" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;/td&gt;
&lt;td align="left"&gt;
&lt;a href="https://cran.r-project.org/package=drake" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/ffb55103a5d3a0bd406a4fc9fc68498636929e7f/68747470733a2f2f7777772e722d706b672e6f72672f6261646765732f76657273696f6e2f6472616b65" alt="CRAN" data-canonical-src="https://www.r-pkg.org/badges/version/drake" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;/td&gt;
&lt;td align="left"&gt;
&lt;a href="https://travis-ci.org/ropensci/drake" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/410344b1e0b5928637a46b8737888b3d0fc005ca/68747470733a2f2f7472617669732d63692e6f72672f726f70656e7363692f6472616b652e7376673f6272616e63683d6d6173746572" alt="Travis" data-canonical-src="https://travis-ci.org/ropensci/drake.svg?branch=master" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="left"&gt;
&lt;a href="https://cran.r-project.org/" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/1316a70a49294c56bea3bc8aead4143b9fabade6/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f522533452533442d332e332e302d626c75652e737667" alt="minimal R version" data-canonical-src="https://img.shields.io/badge/R%3E%3D-3.3.0-blue.svg" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;/td&gt;
&lt;td align="left"&gt;
&lt;a href="https://cran.r-project.org/web/checks/check_results_drake.html" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/4ac23d8bfe7e9b22e8e216a2df882c6336212e9c/68747470733a2f2f6372616e636865636b732e696e666f2f6261646765732f73756d6d6172792f6472616b65" alt="cran-checks" data-canonical-src="https://cranchecks.info/badges/summary/drake" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;/td&gt;
&lt;td align="left"&gt;
&lt;a href="https://ci.appveyor.com/project/ropensci/drake" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/583f269c910d1aceee49136567532975672dbf31/68747470733a2f2f63692e6170707665796f722e636f6d2f6170692f70726f6a656374732f7374617475732f3479706339786e6d717437306a3934653f7376673d74727565266272616e63683d6d6173746572" alt="AppVeyor" data-canonical-src="https://ci.appveyor.com/api/projects/status/4ypc9xnmqt70j94e?svg=true&amp;amp;branch=master" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="left"&gt;
&lt;a href="https://CRAN.R-project.org/package=drake" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/3ad33847ea890f521ac3278357e84ce3b309143f/68747470733a2f2f74696e7976657273652e6e65746c6966792e636f6d2f62616467652f6472616b65" data-canonical-src="https://tinyverse.netlify.com/badge/drake" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;/td&gt;
&lt;td align="left"&gt;
&lt;a href="https://github.com/ropensci/onboarding/issues/156"&gt;&lt;img src="https://camo.githubusercontent.com/835d338eb7f3cd46a54a36621797fb087b1050ad/68747470733a2f2f6261646765732e726f70656e7363692e6f72672f3135365f7374617475732e737667" alt="rOpenSci" data-canonical-src="https://badges.ropensci.org/156_status.svg" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;/td&gt;
&lt;td align="left"&gt;
&lt;a href="https://codecov.io/github/ropensci/drake?branch=master" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/c2026003511f4ae34f4cd3e22c8b0b4575a66036/68747470733a2f2f636f6465636f762e696f2f6769746875622f726f70656e7363692f6472616b652f636f7665726167652e7376673f6272616e63683d6d6173746572" alt="Codecov" data-canonical-src="https://codecov.io/github/ropensci/drake/coverage.svg?branch=master" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="left"&gt;
&lt;a href="https://CRAN.R-project.org/package=drake" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/cc0d23d9ae819a78d683aa3174b5bbaf75681620/68747470733a2f2f6372616e6c6f67732e722d706b672e6f72672f6261646765732f6472616b65" alt="downloads" data-canonical-src="https://cranlogs.r-pkg.org/badges/drake" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;/td&gt;
&lt;td align="left"&gt;
&lt;a href="https://doi.org/10.21105/joss.00550" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/596d3cb8c3c4f654cc2c25bf763890184eadfa6b/68747470733a2f2f6a6f73732e7468656f6a2e6f72672f7061706572732f31302e32313130352f6a6f73732e30303535302f7374617475732e737667" alt="JOSS" data-canonical-src="https://joss.theoj.org/papers/10.21105/joss.00550/status.svg" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;/td&gt;
&lt;td align="left"&gt;
&lt;a href="https://bestpractices.coreinfrastructure.org/projects/2135" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/16984d381a97cb201e750eb1293b9a82c81b432d/68747470733a2f2f626573747072616374696365732e636f7265696e6672617374727563747572652e6f72672f70726f6a656374732f323133352f6261646765" data-canonical-src="https://bestpractices.coreinfrastructure.org/projects/2135/badge" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="left"&gt;
&lt;a href="https://saythanks.io/to/drake-r-package-feedback" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/befef4b20d3a774e60bd8847b941cbb838a72005/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f5361792d5468616e6b732d626c75652e737667" alt="SayThanks" data-canonical-src="https://img.shields.io/badge/Say-Thanks-blue.svg" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;/td&gt;
&lt;td align="left"&gt;
&lt;a href="https://zenodo.org/badge/latestdoi/82609103" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/2362e07ad18374c14c70f10914bc475d894b19ef/68747470733a2f2f7a656e6f646f2e6f72672f62616467652f38323630393130332e737667" alt="Zenodo" data-canonical-src="https://zenodo.org/badge/82609103.svg" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;/td&gt;
&lt;td align="left"&gt;
&lt;a href="https://www.repostatus.org/#active" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/fd7a93e9eedafe6205ebee65c9e3579f44df25b7/68747470733a2f2f7777772e7265706f7374617475732e6f72672f6261646765732f6c61746573742f6163746976652e737667" alt="Project Status: Active – The project has reached a stable, usable state and is being actively developed." data-canonical-src="https://www.repostatus.org/badges/latest/active.svg" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;br&gt;
&lt;h1&gt;&lt;a id="user-content-the-drake-r-package-" class="anchor" aria-hidden="true" href="#the-drake-r-package-"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;The drake R package &lt;a target="_blank" rel="noopener noreferrer" href="https://camo.githubusercontent.com/44749362ca36c9e3295f2bcf18975d811564c121/68747470733a2f2f646f63732e726f70656e7363692e6f72672f6472616b652f7265666572656e63652f666967757265732f6c6f676f2e737667"&gt;&lt;img src="https://camo.githubusercontent.com/44749362ca36c9e3295f2bcf18975d811564c121/68747470733a2f2f646f63732e726f70656e7363692e6f72672f6472616b652f7265666572656e63652f666967757265732f6c6f676f2e737667" align="right" alt="logo" width="120" height="139" data-canonical-src="https://docs.ropensci.org/drake/reference/figures/logo.svg" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/h1&gt;
&lt;p&gt;Data analysis can be slow. A round of scientific computation can take several minutes, hours, or even days to complete. After it finishes, if you update your code or data, your hard-earned results may no longer be valid. How much of that valuable output can you keep, and how much do you need to update? How much runtime must you endure all over again?&lt;/p&gt;
&lt;p&gt;For projects in R, the &lt;code&gt;drake&lt;/code&gt; package can help. It &lt;a href="https://books.ropensci.org/drake/plans.html" rel="nofollow"&gt;analyzes your workflow&lt;/a&gt;, skips steps with up-to-date results, and orchestrates the rest with &lt;a href="https://books.ropensci.org/drake/hpc.html" rel="nofollow"&gt;optional distributed computing&lt;/a&gt;. At the end, &lt;code&gt;drake&lt;/code&gt; provides evidence that your results match the underlying code and data, which increases your ability to trust your research.&lt;/p&gt;
&lt;h1&gt;&lt;a id="user-content-videos" class="anchor" aria-hidden="true" href="#videos"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Videos&lt;/h1&gt;
&lt;p&gt;Visit the &lt;a href="https://books.ropensci.org/drake/" rel="nofollow"&gt;first page of the manual&lt;/a&gt; to watch a 6-minute introduction.&lt;/p&gt;

&lt;a href="https://books.ropensci.org/drake/" rel="nofollow"&gt; &lt;img src="https://camo.githubusercontent.com/c59998c6a50bcad2114889fb266b263b17f3191b/68747470733a2f2f646f63732e726f70656e7363692e6f72672f6472616b652f7265666572656e63652f666967757265732f766964656f2e706e67" alt="video" align="center" data-canonical-src="https://docs.ropensci.org/drake/reference/figures/video.png" style="max-width:100%;"&gt; &lt;/a&gt;

&lt;br&gt; &lt;br&gt;
&lt;p&gt;The &lt;a href="https://ropensci.org/commcalls/2019-09-24/" rel="nofollow"&gt;rOpenSci Community Call from 2019-09-24&lt;/a&gt; is a much longer presentation on &lt;code&gt;drake&lt;/code&gt; (20 min talk, 35 min Q&amp;amp;A). Visit the &lt;a href="https://ropensci.org/commcalls/2019-09-24/" rel="nofollow"&gt;call's page&lt;/a&gt; for links to additional resources, and &lt;a href="https://github.com/ropensci-org/community-calls"&gt;chime in here&lt;/a&gt; to propose and vote for ideas for new Community Call topics and speakers.&lt;/p&gt;

&lt;a href="https://ropensci.org/commcalls/2019-09-24/" rel="nofollow"&gt; &lt;img src="https://camo.githubusercontent.com/25670ea6bf0109c7f728d540931545e207034c3c/68747470733a2f2f646f63732e726f70656e7363692e6f72672f6472616b652f7265666572656e63652f666967757265732f636f6d6d63616c6c2e706e67" alt="commcall" align="center" data-canonical-src="https://docs.ropensci.org/drake/reference/figures/commcall.png" style="max-width:100%;"&gt; &lt;/a&gt;

&lt;br&gt;
&lt;h1&gt;&lt;a id="user-content-what-gets-done-stays-done" class="anchor" aria-hidden="true" href="#what-gets-done-stays-done"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;What gets done stays done.&lt;/h1&gt;
&lt;p&gt;Too many data science projects follow a &lt;a href="https://en.wikipedia.org/wiki/Sisyphus" rel="nofollow"&gt;Sisyphean loop&lt;/a&gt;:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Launch the code.&lt;/li&gt;
&lt;li&gt;Wait while it runs.&lt;/li&gt;
&lt;li&gt;Discover an issue.&lt;/li&gt;
&lt;li&gt;Rerun from scratch.&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;For projects with long runtimes, people tend to get stuck.&lt;br&gt;&lt;/p&gt;

&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="https://camo.githubusercontent.com/11cf5213e3dec8eea09007e425405fd144bf9019/68747470733a2f2f646f63732e726f70656e7363692e6f72672f6472616b652f7265666572656e63652f666967757265732f74776565742e706e67"&gt;&lt;img src="https://camo.githubusercontent.com/11cf5213e3dec8eea09007e425405fd144bf9019/68747470733a2f2f646f63732e726f70656e7363692e6f72672f6472616b652f7265666572656e63652f666967757265732f74776565742e706e67" alt="tweet" align="center" data-canonical-src="https://docs.ropensci.org/drake/reference/figures/tweet.png" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;br&gt;
&lt;p&gt;But with &lt;code&gt;drake&lt;/code&gt;, you can automatically&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Launch the parts that changed since last time.&lt;/li&gt;
&lt;li&gt;Skip the rest.&lt;/li&gt;
&lt;/ol&gt;
&lt;h1&gt;&lt;a id="user-content-how-it-works" class="anchor" aria-hidden="true" href="#how-it-works"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;How it works&lt;/h1&gt;
&lt;p&gt;To set up a project, load your packages,&lt;/p&gt;
&lt;div class="highlight highlight-source-r"&gt;&lt;pre&gt;library(&lt;span class="pl-smi"&gt;drake&lt;/span&gt;)
library(&lt;span class="pl-smi"&gt;dplyr&lt;/span&gt;)
library(&lt;span class="pl-smi"&gt;ggplot2&lt;/span&gt;)&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;load your custom functions,&lt;/p&gt;
&lt;div class="highlight highlight-source-r"&gt;&lt;pre&gt;&lt;span class="pl-en"&gt;create_plot&lt;/span&gt; &lt;span class="pl-k"&gt;&amp;lt;-&lt;/span&gt; &lt;span class="pl-k"&gt;function&lt;/span&gt;(&lt;span class="pl-smi"&gt;data&lt;/span&gt;) {
  ggplot(&lt;span class="pl-smi"&gt;data&lt;/span&gt;, aes(&lt;span class="pl-v"&gt;x&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-smi"&gt;Petal.Width&lt;/span&gt;, &lt;span class="pl-v"&gt;fill&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-smi"&gt;Species&lt;/span&gt;)) &lt;span class="pl-k"&gt;+&lt;/span&gt;
    geom_histogram()
}&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;check any supporting files (optional),&lt;/p&gt;
&lt;div class="highlight highlight-source-r"&gt;&lt;pre&gt;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; Get the files with drake_example("main").&lt;/span&gt;
file.exists(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;raw_data.xlsx&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt;&amp;gt; [1] TRUE&lt;/span&gt;
file.exists(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;report.Rmd&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt;&amp;gt; [1] TRUE&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;and plan what you are going to do.&lt;/p&gt;
&lt;div class="highlight highlight-source-r"&gt;&lt;pre&gt;&lt;span class="pl-smi"&gt;plan&lt;/span&gt; &lt;span class="pl-k"&gt;&amp;lt;-&lt;/span&gt; drake_plan(
  &lt;span class="pl-v"&gt;raw_data&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-e"&gt;readxl&lt;/span&gt;&lt;span class="pl-k"&gt;::&lt;/span&gt;read_excel(file_in(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;raw_data.xlsx&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)),
  &lt;span class="pl-v"&gt;data&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-smi"&gt;raw_data&lt;/span&gt; %&lt;span class="pl-k"&gt;&amp;gt;&lt;/span&gt;%
    mutate(&lt;span class="pl-v"&gt;Species&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-e"&gt;forcats&lt;/span&gt;&lt;span class="pl-k"&gt;::&lt;/span&gt;fct_inorder(&lt;span class="pl-smi"&gt;Species&lt;/span&gt;)),
  &lt;span class="pl-v"&gt;hist&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; create_plot(&lt;span class="pl-smi"&gt;data&lt;/span&gt;),
  &lt;span class="pl-v"&gt;fit&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; lm(&lt;span class="pl-smi"&gt;Sepal.Width&lt;/span&gt; &lt;span class="pl-k"&gt;~&lt;/span&gt; &lt;span class="pl-smi"&gt;Petal.Width&lt;/span&gt; &lt;span class="pl-k"&gt;+&lt;/span&gt; &lt;span class="pl-smi"&gt;Species&lt;/span&gt;, &lt;span class="pl-smi"&gt;data&lt;/span&gt;),
  &lt;span class="pl-v"&gt;report&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-e"&gt;rmarkdown&lt;/span&gt;&lt;span class="pl-k"&gt;::&lt;/span&gt;render(
    knitr_in(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;report.Rmd&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;),
    &lt;span class="pl-v"&gt;output_file&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; file_out(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;report.html&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;),
    &lt;span class="pl-v"&gt;quiet&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;TRUE&lt;/span&gt;
  )
)
&lt;span class="pl-smi"&gt;plan&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt;&amp;gt; # A tibble: 5 x 2&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt;&amp;gt;   target   command                                                         &lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt;&amp;gt;   &amp;lt;chr&amp;gt;    &amp;lt;expr&amp;gt;                                                          &lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt;&amp;gt; 1 raw_data readxl::read_excel(file_in("raw_data.xlsx"))                   …&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt;&amp;gt; 2 data     raw_data %&amp;gt;% mutate(Species = forcats::fct_inorder(Species))   …&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt;&amp;gt; 3 hist     create_plot(data)                                              …&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt;&amp;gt; 4 fit      lm(Sepal.Width ~ Petal.Width + Species, data)                  …&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt;&amp;gt; 5 report   rmarkdown::render(knitr_in("report.Rmd"), output_file = file_ou…&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;So far, we have just been setting the stage. Use &lt;code&gt;make()&lt;/code&gt; to do the real work. Targets are built in the correct order regardless of the row order of &lt;code&gt;plan&lt;/code&gt;.&lt;/p&gt;
&lt;div class="highlight highlight-source-r"&gt;&lt;pre&gt;make(&lt;span class="pl-smi"&gt;plan&lt;/span&gt;)
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt;&amp;gt; target raw_data&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt;&amp;gt; target data&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt;&amp;gt; target fit&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt;&amp;gt; target hist&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt;&amp;gt; target report&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Except for files like &lt;code&gt;report.html&lt;/code&gt;, your output is stored in a hidden &lt;code&gt;.drake/&lt;/code&gt; folder. Reading it back is easy.&lt;/p&gt;
&lt;div class="highlight highlight-source-r"&gt;&lt;pre&gt;readd(&lt;span class="pl-smi"&gt;data&lt;/span&gt;) &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; See also loadd().&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt;&amp;gt; # A tibble: 150 x 5&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt;&amp;gt;    Sepal.Length Sepal.Width Petal.Length Petal.Width Species&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt;&amp;gt;           &amp;lt;dbl&amp;gt;       &amp;lt;dbl&amp;gt;        &amp;lt;dbl&amp;gt;       &amp;lt;dbl&amp;gt; &amp;lt;fct&amp;gt;  &lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt;&amp;gt;  1          5.1         3.5          1.4         0.2 setosa &lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt;&amp;gt;  2          4.9         3            1.4         0.2 setosa &lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt;&amp;gt;  3          4.7         3.2          1.3         0.2 setosa &lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt;&amp;gt;  4          4.6         3.1          1.5         0.2 setosa &lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt;&amp;gt;  5          5           3.6          1.4         0.2 setosa &lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt;&amp;gt;  6          5.4         3.9          1.7         0.4 setosa &lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt;&amp;gt;  7          4.6         3.4          1.4         0.3 setosa &lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt;&amp;gt;  8          5           3.4          1.5         0.2 setosa &lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt;&amp;gt;  9          4.4         2.9          1.4         0.2 setosa &lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt;&amp;gt; 10          4.9         3.1          1.5         0.1 setosa &lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt;&amp;gt; # … with 140 more rows&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;You may look back on your work and see room for improvement, but it's all good! The whole point of &lt;code&gt;drake&lt;/code&gt; is to help you go back and change things quickly and painlessly. For example, we forgot to give our histogram a bin width.&lt;/p&gt;
&lt;div class="highlight highlight-source-r"&gt;&lt;pre&gt;readd(&lt;span class="pl-smi"&gt;hist&lt;/span&gt;)
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt;&amp;gt; `stat_bin()` using `bins = 30`. Pick better value with `binwidth`.&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="man/figures/unnamed-chunk-9-1.png"&gt;&lt;img src="man/figures/unnamed-chunk-9-1.png" alt="" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;So let's fix the plotting function.&lt;/p&gt;
&lt;div class="highlight highlight-source-r"&gt;&lt;pre&gt;&lt;span class="pl-en"&gt;create_plot&lt;/span&gt; &lt;span class="pl-k"&gt;&amp;lt;-&lt;/span&gt; &lt;span class="pl-k"&gt;function&lt;/span&gt;(&lt;span class="pl-smi"&gt;data&lt;/span&gt;) {
  ggplot(&lt;span class="pl-smi"&gt;data&lt;/span&gt;, aes(&lt;span class="pl-v"&gt;x&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-smi"&gt;Petal.Width&lt;/span&gt;, &lt;span class="pl-v"&gt;fill&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-smi"&gt;Species&lt;/span&gt;)) &lt;span class="pl-k"&gt;+&lt;/span&gt;
    geom_histogram(&lt;span class="pl-v"&gt;binwidth&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;0.25&lt;/span&gt;) &lt;span class="pl-k"&gt;+&lt;/span&gt;
    theme_gray(&lt;span class="pl-c1"&gt;20&lt;/span&gt;)
}&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;code&gt;drake&lt;/code&gt; knows which results are affected.&lt;/p&gt;
&lt;div class="highlight highlight-source-r"&gt;&lt;pre&gt;&lt;span class="pl-smi"&gt;config&lt;/span&gt; &lt;span class="pl-k"&gt;&amp;lt;-&lt;/span&gt; drake_config(&lt;span class="pl-smi"&gt;plan&lt;/span&gt;)
vis_drake_graph(&lt;span class="pl-smi"&gt;config&lt;/span&gt;) &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; Interactive graph: zoom, drag, etc.&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="https://camo.githubusercontent.com/e9cd15743788ea28d336848828f458aad86f1ad9/68747470733a2f2f646f63732e726f70656e7363692e6f72672f6472616b652f7265666572656e63652f666967757265732f67726170682e706e67"&gt;&lt;img src="https://camo.githubusercontent.com/e9cd15743788ea28d336848828f458aad86f1ad9/68747470733a2f2f646f63732e726f70656e7363692e6f72672f6472616b652f7265666572656e63652f666967757265732f67726170682e706e67" alt="hist1" align="center" width="600px" data-canonical-src="https://docs.ropensci.org/drake/reference/figures/graph.png" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;The next &lt;code&gt;make()&lt;/code&gt; just builds &lt;code&gt;hist&lt;/code&gt; and &lt;code&gt;report.html&lt;/code&gt;. No point in wasting time on the data or model.&lt;/p&gt;
&lt;div class="highlight highlight-source-r"&gt;&lt;pre&gt;make(&lt;span class="pl-smi"&gt;plan&lt;/span&gt;)
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt;&amp;gt; target hist&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt;&amp;gt; target report&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;div class="highlight highlight-source-r"&gt;&lt;pre&gt;loadd(&lt;span class="pl-smi"&gt;hist&lt;/span&gt;)
&lt;span class="pl-smi"&gt;hist&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="man/figures/unnamed-chunk-13-1.png"&gt;&lt;img src="man/figures/unnamed-chunk-13-1.png" alt="" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h1&gt;&lt;a id="user-content-reproducibility-with-confidence" class="anchor" aria-hidden="true" href="#reproducibility-with-confidence"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Reproducibility with confidence&lt;/h1&gt;
&lt;p&gt;The R community emphasizes reproducibility. Traditional themes include &lt;a href="https://en.wikipedia.org/wiki/Replication_crisis" rel="nofollow"&gt;scientific replicability&lt;/a&gt;, literate programming with &lt;a href="https://yihui.name/knitr/" rel="nofollow"&gt;knitr&lt;/a&gt;, and version control with &lt;a href="https://git-scm.com/book/en/v2/Getting-Started-About-Version-Control" rel="nofollow"&gt;git&lt;/a&gt;. But internal consistency is important too. Reproducibility carries the promise that your output matches the code and data you say you used. With the exception of &lt;a href="https://books.ropensci.org/drake/triggers.html" rel="nofollow"&gt;non-default triggers&lt;/a&gt; and &lt;a href="https://books.ropensci.org/drake/hpc.html#hasty-mode" rel="nofollow"&gt;hasty mode&lt;/a&gt;, &lt;code&gt;drake&lt;/code&gt; strives to keep this promise.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-evidence" class="anchor" aria-hidden="true" href="#evidence"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Evidence&lt;/h2&gt;
&lt;p&gt;Suppose you are reviewing someone else's data analysis project for reproducibility. You scrutinize it carefully, checking that the datasets are available and the documentation is thorough. But could you re-create the results without the help of the original author? With &lt;code&gt;drake&lt;/code&gt;, it is quick and easy to find out.&lt;/p&gt;
&lt;div class="highlight highlight-source-r"&gt;&lt;pre&gt;make(&lt;span class="pl-smi"&gt;plan&lt;/span&gt;)
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt;&amp;gt; unload targets from environment:&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt;&amp;gt;    hist&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt;&amp;gt; All targets are already up to date.&lt;/span&gt;

&lt;span class="pl-smi"&gt;config&lt;/span&gt; &lt;span class="pl-k"&gt;&amp;lt;-&lt;/span&gt; drake_config(&lt;span class="pl-smi"&gt;plan&lt;/span&gt;)
outdated(&lt;span class="pl-smi"&gt;config&lt;/span&gt;)
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt;&amp;gt; character(0)&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;With everything already up to date, you have &lt;strong&gt;tangible evidence&lt;/strong&gt; of reproducibility. Even though you did not re-create the results, you know the results are re-creatable. They &lt;strong&gt;faithfully show&lt;/strong&gt; what the code is producing. Given the right &lt;a href="https://rstudio.github.io/packrat/" rel="nofollow"&gt;package environment&lt;/a&gt; and &lt;a href="https://stat.ethz.ch/R-manual/R-devel/library/utils/html/sessionInfo.html" rel="nofollow"&gt;system configuration&lt;/a&gt;, you have everything you need to reproduce all the output by yourself.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-ease" class="anchor" aria-hidden="true" href="#ease"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Ease&lt;/h2&gt;
&lt;p&gt;When it comes time to actually rerun the entire project, you have much more confidence. Starting over from scratch is trivially easy.&lt;/p&gt;
&lt;div class="highlight highlight-source-r"&gt;&lt;pre&gt;clean()    &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; Remove the original author's results.&lt;/span&gt;
make(&lt;span class="pl-smi"&gt;plan&lt;/span&gt;) &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; Independently re-create the results from the code and input data.&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt;&amp;gt; target raw_data&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt;&amp;gt; target data&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt;&amp;gt; target fit&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt;&amp;gt; target hist&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt;&amp;gt; target report&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h2&gt;&lt;a id="user-content-big-data-efficiency" class="anchor" aria-hidden="true" href="#big-data-efficiency"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Big data efficiency&lt;/h2&gt;
&lt;p&gt;Select specialized data formats to increase speed and reduce memory consumption. In version 7.5.2.9000 and above, the available formats are &lt;a href="https://github.com/fstpackage/fst"&gt;"fst"&lt;/a&gt; for data frames (example below) and "keras" for &lt;a href="https://keras.rstudio.com/" rel="nofollow"&gt;Keras&lt;/a&gt; models (&lt;a href="https://books.ropensci.org/drake/churn.html#plan" rel="nofollow"&gt;example here&lt;/a&gt;).&lt;/p&gt;
&lt;div class="highlight highlight-source-r"&gt;&lt;pre&gt;library(&lt;span class="pl-smi"&gt;drake&lt;/span&gt;)
&lt;span class="pl-smi"&gt;n&lt;/span&gt; &lt;span class="pl-k"&gt;&amp;lt;-&lt;/span&gt; &lt;span class="pl-c1"&gt;1e8&lt;/span&gt; &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; Each target is 1.6 GB in memory.&lt;/span&gt;
&lt;span class="pl-smi"&gt;plan&lt;/span&gt; &lt;span class="pl-k"&gt;&amp;lt;-&lt;/span&gt; drake_plan(
  &lt;span class="pl-v"&gt;data_fst&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; target(
    &lt;span class="pl-k"&gt;data.frame&lt;/span&gt;(&lt;span class="pl-v"&gt;x&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; runif(&lt;span class="pl-smi"&gt;n&lt;/span&gt;), &lt;span class="pl-v"&gt;y&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; runif(&lt;span class="pl-smi"&gt;n&lt;/span&gt;)),
    &lt;span class="pl-v"&gt;format&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;fst&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;
  ),
  &lt;span class="pl-v"&gt;data_old&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-k"&gt;data.frame&lt;/span&gt;(&lt;span class="pl-v"&gt;x&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; runif(&lt;span class="pl-smi"&gt;n&lt;/span&gt;), &lt;span class="pl-v"&gt;y&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; runif(&lt;span class="pl-smi"&gt;n&lt;/span&gt;))
)
make(&lt;span class="pl-smi"&gt;plan&lt;/span&gt;)
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt;&amp;gt; target data_fst&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt;&amp;gt; target data_old&lt;/span&gt;
build_times(&lt;span class="pl-v"&gt;type&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;build&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt;&amp;gt; # A tibble: 2 x 4&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt;&amp;gt;   target   elapsed              user                 system    &lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt;&amp;gt;   &amp;lt;chr&amp;gt;    &amp;lt;Duration&amp;gt;           &amp;lt;Duration&amp;gt;           &amp;lt;Duration&amp;gt;&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt;&amp;gt; 1 data_fst 13.93s               37.562s              7.954s    &lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt;&amp;gt; 2 data_old 184s (~3.07 minutes) 177s (~2.95 minutes) 4.157s&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h2&gt;&lt;a id="user-content-history-and-provenance" class="anchor" aria-hidden="true" href="#history-and-provenance"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;History and provenance&lt;/h2&gt;
&lt;p&gt;As of version 7.5.2, &lt;code&gt;drake&lt;/code&gt; tracks the history and provenance of your targets: what you built, when you built it, how you built it, the arguments you used in your function calls, and how to get the data back. (Disable with &lt;code&gt;make(history = FALSE)&lt;/code&gt;)&lt;/p&gt;
&lt;div class="highlight highlight-source-r"&gt;&lt;pre&gt;&lt;span class="pl-smi"&gt;history&lt;/span&gt; &lt;span class="pl-k"&gt;&amp;lt;-&lt;/span&gt; drake_history(&lt;span class="pl-v"&gt;analyze&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;TRUE&lt;/span&gt;)
&lt;span class="pl-smi"&gt;history&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt;&amp;gt; # A tibble: 12 x 10&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt;&amp;gt;    target current built exists hash  command   seed  runtime quiet&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt;&amp;gt;    &amp;lt;chr&amp;gt;  &amp;lt;lgl&amp;gt;   &amp;lt;chr&amp;gt; &amp;lt;lgl&amp;gt;  &amp;lt;chr&amp;gt; &amp;lt;chr&amp;gt;    &amp;lt;int&amp;gt;    &amp;lt;dbl&amp;gt; &amp;lt;lgl&amp;gt;&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt;&amp;gt;  1 data   TRUE    2019… TRUE   e580… raw_da… 1.29e9 0.001000 NA   &lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt;&amp;gt;  2 data   TRUE    2019… TRUE   e580… raw_da… 1.29e9 0.001    NA   &lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt;&amp;gt;  3 fit    TRUE    2019… TRUE   62a1… lm(Sep… 1.11e9 0.00300  NA   &lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt;&amp;gt;  4 fit    TRUE    2019… TRUE   62a1… lm(Sep… 1.11e9 0.001000 NA   &lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt;&amp;gt;  5 hist   FALSE   2019… TRUE   22a2… create… 2.10e8 0.006    NA   &lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt;&amp;gt;  6 hist   TRUE    2019… TRUE   6909… create… 2.10e8 0.00700  NA   &lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt;&amp;gt;  7 hist   TRUE    2019… TRUE   6909… create… 2.10e8 0.006    NA   &lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt;&amp;gt;  8 raw_d… TRUE    2019… TRUE   6317… "readx… 1.20e9 0.007    NA   &lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt;&amp;gt;  9 raw_d… TRUE    2019… TRUE   6317… "readx… 1.20e9 0.005    NA   &lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt;&amp;gt; 10 report TRUE    2019… TRUE   0176… "rmark… 1.30e9 0.574    TRUE &lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt;&amp;gt; 11 report TRUE    2019… TRUE   0176… "rmark… 1.30e9 0.396    TRUE &lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt;&amp;gt; 12 report TRUE    2019… TRUE   0176… "rmark… 1.30e9 0.400    TRUE &lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt;&amp;gt; # … with 1 more variable: output_file &amp;lt;chr&amp;gt;&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Remarks:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;The &lt;code&gt;quiet&lt;/code&gt; column appears above because one of the &lt;code&gt;drake_plan()&lt;/code&gt; commands has &lt;code&gt;knit(quiet = TRUE)&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;The &lt;code&gt;hash&lt;/code&gt; column identifies all the previous versions of your targets. As long as &lt;code&gt;exists&lt;/code&gt; is &lt;code&gt;TRUE&lt;/code&gt;, you can recover old data.&lt;/li&gt;
&lt;li&gt;Advanced: if you use &lt;code&gt;make(cache_log_file = TRUE)&lt;/code&gt; and put the cache log file under version control, you can match the hashes from &lt;code&gt;drake_history()&lt;/code&gt; with the &lt;code&gt;git&lt;/code&gt; commit history of your code.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Let's use the history to recover the oldest histogram.&lt;/p&gt;
&lt;div class="highlight highlight-source-r"&gt;&lt;pre&gt;&lt;span class="pl-smi"&gt;hash&lt;/span&gt; &lt;span class="pl-k"&gt;&amp;lt;-&lt;/span&gt; &lt;span class="pl-smi"&gt;history&lt;/span&gt; %&lt;span class="pl-k"&gt;&amp;gt;&lt;/span&gt;%
  filter(&lt;span class="pl-smi"&gt;target&lt;/span&gt; &lt;span class="pl-k"&gt;==&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;hist&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;) %&lt;span class="pl-k"&gt;&amp;gt;&lt;/span&gt;%
  pull(&lt;span class="pl-smi"&gt;hash&lt;/span&gt;) %&lt;span class="pl-k"&gt;&amp;gt;&lt;/span&gt;%
  head(&lt;span class="pl-v"&gt;n&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;1&lt;/span&gt;)
&lt;span class="pl-smi"&gt;cache&lt;/span&gt; &lt;span class="pl-k"&gt;&amp;lt;-&lt;/span&gt; drake_cache()
&lt;span class="pl-smi"&gt;cache&lt;/span&gt;&lt;span class="pl-k"&gt;$&lt;/span&gt;get_value(&lt;span class="pl-smi"&gt;hash&lt;/span&gt;)
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt;&amp;gt; `stat_bin()` using `bins = 30`. Pick better value with `binwidth`.&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="man/figures/unnamed-chunk-18-1.png"&gt;&lt;img src="man/figures/unnamed-chunk-18-1.png" alt="" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-reproducible-data-recovery-and-renaming" class="anchor" aria-hidden="true" href="#reproducible-data-recovery-and-renaming"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Reproducible data recovery and renaming&lt;/h2&gt;
&lt;p&gt;Remember how we made that change to our histogram? What if we want to change it back? If we revert &lt;code&gt;create_plot()&lt;/code&gt;, &lt;code&gt;make(plan, recover = TRUE)&lt;/code&gt; restores the original plot.&lt;/p&gt;
&lt;div class="highlight highlight-source-r"&gt;&lt;pre&gt;&lt;span class="pl-en"&gt;create_plot&lt;/span&gt; &lt;span class="pl-k"&gt;&amp;lt;-&lt;/span&gt; &lt;span class="pl-k"&gt;function&lt;/span&gt;(&lt;span class="pl-smi"&gt;data&lt;/span&gt;) {
  ggplot(&lt;span class="pl-smi"&gt;data&lt;/span&gt;, aes(&lt;span class="pl-v"&gt;x&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-smi"&gt;Petal.Width&lt;/span&gt;, &lt;span class="pl-v"&gt;fill&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-smi"&gt;Species&lt;/span&gt;)) &lt;span class="pl-k"&gt;+&lt;/span&gt;
    geom_histogram()
}

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; The report still needs to run in order to restore report.html.&lt;/span&gt;
make(&lt;span class="pl-smi"&gt;plan&lt;/span&gt;, &lt;span class="pl-v"&gt;recover&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;TRUE&lt;/span&gt;)
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt;&amp;gt; recover hist&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt;&amp;gt; target report&lt;/span&gt;

readd(&lt;span class="pl-smi"&gt;hist&lt;/span&gt;) &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; old histogram&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt;&amp;gt; `stat_bin()` using `bins = 30`. Pick better value with `binwidth`.&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;a target="_blank" rel="noopener noreferrer" href="man/figures/unnamed-chunk-19-1.png"&gt;&lt;img src="man/figures/unnamed-chunk-19-1.png" alt="" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;code&gt;drake&lt;/code&gt;'s data recovery feature is another way to avoid rerunning commands. It is useful if:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;You want to revert to your old code.&lt;/li&gt;
&lt;li&gt;You accidentally &lt;code&gt;clean()&lt;/code&gt; a target and want to get it back.&lt;/li&gt;
&lt;li&gt;You want to rename an expensive target.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;In version 7.5.2 and above, &lt;code&gt;make(recover = TRUE)&lt;/code&gt; can salvage the values of old targets. Before building a target, &lt;code&gt;drake&lt;/code&gt; checks if you have ever built something else with the same command, dependencies, seed, etc. that you have right now. If appropriate, &lt;code&gt;drake&lt;/code&gt; assigns the old value to the new target instead of rerunning the command.&lt;/p&gt;
&lt;p&gt;Caveats:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;This feature is still experimental.&lt;/li&gt;
&lt;li&gt;Recovery may not be a good idea if your external dependencies have changed a lot over time (R version, package environment, etc.).&lt;/li&gt;
&lt;/ol&gt;
&lt;h3&gt;&lt;a id="user-content-undoing-clean" class="anchor" aria-hidden="true" href="#undoing-clean"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Undoing &lt;code&gt;clean()&lt;/code&gt;&lt;/h3&gt;
&lt;div class="highlight highlight-source-r"&gt;&lt;pre&gt;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; Is the data really gone?&lt;/span&gt;
clean()

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; Nope! You need clean(garbage_collection = TRUE) to delete stuff.&lt;/span&gt;
make(&lt;span class="pl-smi"&gt;plan&lt;/span&gt;, &lt;span class="pl-v"&gt;recover&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;TRUE&lt;/span&gt;)
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt;&amp;gt; recover raw_data&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt;&amp;gt; recover data&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt;&amp;gt; recover fit&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt;&amp;gt; recover hist&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt;&amp;gt; recover report&lt;/span&gt;

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; When was the raw data *really* first built?&lt;/span&gt;
diagnose(&lt;span class="pl-smi"&gt;raw_data&lt;/span&gt;)&lt;span class="pl-k"&gt;$&lt;/span&gt;&lt;span class="pl-smi"&gt;date&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt;&amp;gt; [1] "2019-09-29 23:02:00.616430 -0400 GMT"&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h3&gt;&lt;a id="user-content-renaming" class="anchor" aria-hidden="true" href="#renaming"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Renaming&lt;/h3&gt;
&lt;p&gt;You can use recovery to rename a target. The trick is to supply the random number generator seed that &lt;code&gt;drake&lt;/code&gt; used with the old target name. Also, renaming a target unavoidably invalidates downstream targets.&lt;/p&gt;
&lt;div class="highlight highlight-source-r"&gt;&lt;pre&gt;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; Get the old seed.&lt;/span&gt;
&lt;span class="pl-smi"&gt;old_seed&lt;/span&gt; &lt;span class="pl-k"&gt;&amp;lt;-&lt;/span&gt; diagnose(&lt;span class="pl-smi"&gt;data&lt;/span&gt;)&lt;span class="pl-k"&gt;$&lt;/span&gt;&lt;span class="pl-smi"&gt;seed&lt;/span&gt;

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; Now rename the data and supply the old seed.&lt;/span&gt;
&lt;span class="pl-smi"&gt;plan&lt;/span&gt; &lt;span class="pl-k"&gt;&amp;lt;-&lt;/span&gt; drake_plan(
  &lt;span class="pl-v"&gt;raw_data&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-e"&gt;readxl&lt;/span&gt;&lt;span class="pl-k"&gt;::&lt;/span&gt;read_excel(file_in(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;raw_data.xlsx&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)),
  
  &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; Previously just named "data".&lt;/span&gt;
  &lt;span class="pl-v"&gt;iris_data&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; target(
    &lt;span class="pl-smi"&gt;raw_data&lt;/span&gt; %&lt;span class="pl-k"&gt;&amp;gt;&lt;/span&gt;%
      mutate(&lt;span class="pl-v"&gt;Species&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-e"&gt;forcats&lt;/span&gt;&lt;span class="pl-k"&gt;::&lt;/span&gt;fct_inorder(&lt;span class="pl-smi"&gt;Species&lt;/span&gt;)),
    &lt;span class="pl-v"&gt;seed&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-k"&gt;!!&lt;/span&gt;&lt;span class="pl-smi"&gt;old_seed&lt;/span&gt;
  ),

  &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; `iris_data` will be recovered from `data`,&lt;/span&gt;
  &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; but `hist` and `fit` have changed commands,&lt;/span&gt;
  &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; so they will build from scratch.&lt;/span&gt;
  &lt;span class="pl-v"&gt;hist&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; create_plot(&lt;span class="pl-smi"&gt;iris_data&lt;/span&gt;),
  &lt;span class="pl-v"&gt;fit&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; lm(&lt;span class="pl-smi"&gt;Sepal.Width&lt;/span&gt; &lt;span class="pl-k"&gt;~&lt;/span&gt; &lt;span class="pl-smi"&gt;Petal.Width&lt;/span&gt; &lt;span class="pl-k"&gt;+&lt;/span&gt; &lt;span class="pl-smi"&gt;Species&lt;/span&gt;, &lt;span class="pl-smi"&gt;iris_data&lt;/span&gt;),
  &lt;span class="pl-v"&gt;report&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-e"&gt;rmarkdown&lt;/span&gt;&lt;span class="pl-k"&gt;::&lt;/span&gt;render(
    knitr_in(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;report.Rmd&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;),
    &lt;span class="pl-v"&gt;output_file&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; file_out(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;report.html&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;),
    &lt;span class="pl-v"&gt;quiet&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;TRUE&lt;/span&gt;
  )
)

make(&lt;span class="pl-smi"&gt;plan&lt;/span&gt;, &lt;span class="pl-v"&gt;recover&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;TRUE&lt;/span&gt;)
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt;&amp;gt; recover iris_data&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt;&amp;gt; target fit&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt;&amp;gt; target hist&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt;&amp;gt; target report&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h2&gt;&lt;a id="user-content-independent-replication" class="anchor" aria-hidden="true" href="#independent-replication"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Independent replication&lt;/h2&gt;
&lt;p&gt;With even more evidence and confidence, you can invest the time to independently replicate the original code base if necessary. Up until this point, you relied on basic &lt;code&gt;drake&lt;/code&gt; functions such as &lt;code&gt;make()&lt;/code&gt;, so you may not have needed to peek at any substantive author-defined code in advance. In that case, you can stay usefully ignorant as you reimplement the original author's methodology. In other words, &lt;code&gt;drake&lt;/code&gt; could potentially improve the integrity of independent replication.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-readability-and-transparency" class="anchor" aria-hidden="true" href="#readability-and-transparency"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Readability and transparency&lt;/h2&gt;
&lt;p&gt;Ideally, independent observers should be able to read your code and understand it. &lt;code&gt;drake&lt;/code&gt; helps in several ways.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;The &lt;a href="https://docs.ropensci.org/drake/reference/drake_plan.html" rel="nofollow"&gt;drake plan&lt;/a&gt; explicitly outlines the steps of the analysis, and &lt;a href="https://docs.ropensci.org/drake/reference/vis_drake_graph.html" rel="nofollow"&gt;&lt;code&gt;vis_drake_graph()&lt;/code&gt;&lt;/a&gt; visualizes how those steps depend on each other.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;drake&lt;/code&gt; takes care of the parallel scheduling and high-performance computing (HPC) for you. That means the HPC code is no longer tangled up with the code that actually expresses your ideas.&lt;/li&gt;
&lt;li&gt;You can &lt;a href="https://books.ropensci.org/drake/gsp.html" rel="nofollow"&gt;generate large collections of targets&lt;/a&gt; without necessarily changing your code base of imported functions, another nice separation between the concepts and the execution of your workflow&lt;/li&gt;
&lt;/ul&gt;
&lt;h1&gt;&lt;a id="user-content-scale-up-and-out" class="anchor" aria-hidden="true" href="#scale-up-and-out"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Scale up and out.&lt;/h1&gt;
&lt;p&gt;Not every project can complete in a single R session on your laptop. Some projects need more speed or computing power. Some require a few local processor cores, and some need large high-performance computing systems. But parallel computing is hard. Your tables and figures depend on your analysis results, and your analyses depend on your datasets, so some tasks must finish before others even begin. &lt;code&gt;drake&lt;/code&gt; knows what to do. Parallelism is implicit and automatic. See the &lt;a href="https://books.ropensci.org/drake/hpc.html" rel="nofollow"&gt;high-performance computing guide&lt;/a&gt; for all the details.&lt;/p&gt;
&lt;div class="highlight highlight-source-r"&gt;&lt;pre&gt;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; Use the spare cores on your local machine.&lt;/span&gt;
make(&lt;span class="pl-smi"&gt;plan&lt;/span&gt;, &lt;span class="pl-v"&gt;jobs&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;4&lt;/span&gt;)

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; Or scale up to a supercomputer.&lt;/span&gt;
drake_hpc_template_file(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;slurm_clustermq.tmpl&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;) &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; https://slurm.schedmd.com/&lt;/span&gt;
options(
  &lt;span class="pl-v"&gt;clustermq.scheduler&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;clustermq&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;,
  &lt;span class="pl-v"&gt;clustermq.template&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;slurm_clustermq.tmpl&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;
)
make(&lt;span class="pl-smi"&gt;plan&lt;/span&gt;, &lt;span class="pl-v"&gt;parallelism&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;clustermq&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-v"&gt;jobs&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-c1"&gt;4&lt;/span&gt;)&lt;/pre&gt;&lt;/div&gt;
&lt;h1&gt;&lt;a id="user-content-with-docker" class="anchor" aria-hidden="true" href="#with-docker"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;With Docker&lt;/h1&gt;
&lt;p&gt;&lt;code&gt;drake&lt;/code&gt; and Docker are compatible and complementary. Here are some examples that run &lt;code&gt;drake&lt;/code&gt; inside a Docker image.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://gitlab.com/ecohealthalliance/drake-gitlab-docker-example" rel="nofollow"&gt;&lt;code&gt;drake-gitlab-docker-example&lt;/code&gt;&lt;/a&gt;: A small pedagogical example workflow that leverages &lt;code&gt;drake&lt;/code&gt;, Docker, GitLab, and continuous integration in a reproducible analysis pipeline. Created by &lt;a href="https://www.noamross.net/" rel="nofollow"&gt;Noam Ross&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/joelnitta/pleurosoriopsis"&gt;&lt;code&gt;pleurosoriopsis&lt;/code&gt;&lt;/a&gt;: The workflow that supports &lt;a href="https://www.kahaku.go.jp/research/publication/botany.html" rel="nofollow"&gt;Ebihara &lt;em&gt;et al.&lt;/em&gt; 2019. "Growth Dynamics of the Independent Gametophytes of &lt;em&gt;Pleurorosiopsis makinoi&lt;/em&gt; (Polypodiaceae)" &lt;em&gt;Bulletin of the National Science Museum Series B (Botany)&lt;/em&gt; 45:77-86.&lt;/a&gt;. Created by &lt;a href="https://github.com/joelnitta"&gt;Joel Nitta&lt;/a&gt;.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Alternatively, it is possible to run &lt;code&gt;drake&lt;/code&gt; outside Docker and use the &lt;a href="https://github.com/HenrikBengtsson/future"&gt;&lt;code&gt;future&lt;/code&gt;&lt;/a&gt; package to send targets to a Docker image. &lt;code&gt;drake&lt;/code&gt;'s &lt;a href="https://github.com/wlandau/drake-examples/tree/master/Docker-psock"&gt;&lt;code&gt;Docker-psock&lt;/code&gt;&lt;/a&gt; example demonstrates how. Download the code with &lt;code&gt;drake_example("Docker-psock")&lt;/code&gt;.&lt;/p&gt;
&lt;h1&gt;&lt;a id="user-content-installation" class="anchor" aria-hidden="true" href="#installation"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Installation&lt;/h1&gt;
&lt;p&gt;You can choose among different versions of &lt;code&gt;drake&lt;/code&gt;. The CRAN release often lags behind the &lt;a href="https://books.ropensci.org/drake/" rel="nofollow"&gt;online manual&lt;/a&gt; but may have fewer bugs.&lt;/p&gt;
&lt;div class="highlight highlight-source-r"&gt;&lt;pre&gt;&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; Install the latest stable release from CRAN.&lt;/span&gt;
install.packages(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;drake&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)

&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; Alternatively, install the development version from GitHub.&lt;/span&gt;
install.packages(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;devtools&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)
library(&lt;span class="pl-smi"&gt;devtools&lt;/span&gt;)
install_github(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;ropensci/drake&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;)&lt;/pre&gt;&lt;/div&gt;
&lt;h1&gt;&lt;a id="user-content-function-reference" class="anchor" aria-hidden="true" href="#function-reference"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Function reference&lt;/h1&gt;
&lt;p&gt;The &lt;a href="https://docs.ropensci.org/drake/reference/index.html" rel="nofollow"&gt;reference section&lt;/a&gt; lists all the available functions. Here are the most important ones.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;drake_plan()&lt;/code&gt;: create a workflow data frame (like &lt;code&gt;my_plan&lt;/code&gt;).&lt;/li&gt;
&lt;li&gt;&lt;code&gt;make()&lt;/code&gt;: build your project.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;drake_history()&lt;/code&gt;: show what you built, when you built it, and the function arguments you used.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;r_make()&lt;/code&gt;: launch a fresh &lt;a href="https://github.com/r-lib/callr"&gt;&lt;code&gt;callr::r()&lt;/code&gt;&lt;/a&gt; process to build your project. Called from an interactive R session, &lt;code&gt;r_make()&lt;/code&gt; is more reproducible than &lt;code&gt;make()&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;loadd()&lt;/code&gt;: load one or more built targets into your R session.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;readd()&lt;/code&gt;: read and return a built target.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;drake_config()&lt;/code&gt;: create a master configuration list for other user-side functions.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;vis_drake_graph()&lt;/code&gt;: show an interactive visual network representation of your workflow.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;recoverable()&lt;/code&gt;: Which targets can we salvage using &lt;code&gt;make(recover = TRUE)&lt;/code&gt; (experimental).&lt;/li&gt;
&lt;li&gt;&lt;code&gt;outdated()&lt;/code&gt;: see which targets will be built in the next &lt;code&gt;make()&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;deps()&lt;/code&gt;: check the dependencies of a command or function.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;failed()&lt;/code&gt;: list the targets that failed to build in the last &lt;code&gt;make()&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;diagnose()&lt;/code&gt;: return the full context of a build, including errors, warnings, and messages.&lt;/li&gt;
&lt;/ul&gt;
&lt;h1&gt;&lt;a id="user-content-documentation" class="anchor" aria-hidden="true" href="#documentation"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Documentation&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;The &lt;a href="https://books.ropensci.org/drake/" rel="nofollow"&gt;user manual&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;The &lt;a href="https://docs.ropensci.org/drake/" rel="nofollow"&gt;reference website&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;The &lt;a href="https://github.com/wlandau/drake-examples"&gt;official repository of example code&lt;/a&gt;. Download an example workflow from here with &lt;code&gt;drake_example()&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/wlandau/drakeplanner"&gt;&lt;code&gt;drakeplanner&lt;/code&gt;&lt;/a&gt;, an R/Shiny app to help learn &lt;code&gt;drake&lt;/code&gt; and create new projects. Run locally with &lt;code&gt;drakeplanner::drakeplanner()&lt;/code&gt; or access it at &lt;a href="https://wlandau.shinyapps.io/drakeplanner" rel="nofollow"&gt;https://wlandau.shinyapps.io/drakeplanner&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/wlandau/learndrake"&gt;&lt;code&gt;learndrake&lt;/code&gt;&lt;/a&gt;, an R package for teaching an extended &lt;code&gt;drake&lt;/code&gt; workshop. It contains notebooks, slides, Shiny apps, the latter two of which are publicly deployed. See the &lt;a href="https://github.com/wlandau/learndrake/blob/master/README.md"&gt;README&lt;/a&gt; for instructions and links.&lt;/li&gt;
&lt;li&gt;Presentations and workshops by &lt;a href="https://github.com/wlandau"&gt;Will Landau&lt;/a&gt;, &lt;a href="https://github.com/krlmlr"&gt;Kirill Müller&lt;/a&gt;, &lt;a href="https://github.com/aedobbyn"&gt;Amanda Dobbyn&lt;/a&gt;, &lt;a href="http://github.com/karthik"&gt;Karthik Ram&lt;/a&gt;, &lt;a href="https://github.com/sinarueeger"&gt;Sina Rüeger&lt;/a&gt;, &lt;a href="https://github.com/cstawitz"&gt;Christine Stawitz&lt;/a&gt;, and others. See specific links at &lt;a href="https://books.ropensci.org/drake/index.html#presentations" rel="nofollow"&gt;https://books.ropensci.org/drake/index.html#presentations&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;The &lt;a href="https://books.ropensci.org/drake/faq.html" rel="nofollow"&gt;FAQ page&lt;/a&gt;, which links to &lt;a href="https://github.com/ropensci/drake/issues?utf8=%E2%9C%93&amp;amp;q=is%3Aissue+label%3A%22frequently+asked+question%22+"&gt;appropriately-labeled issues on GitHub&lt;/a&gt;.&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a id="user-content-use-cases" class="anchor" aria-hidden="true" href="#use-cases"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Use cases&lt;/h2&gt;
&lt;p&gt;The official &lt;a href="https://ropensci.org/usecases/" rel="nofollow"&gt;rOpenSci use cases&lt;/a&gt; and &lt;a href="https://discuss.ropensci.org/c/usecases" rel="nofollow"&gt;associated discussion threads&lt;/a&gt; describe applications of &lt;code&gt;drake&lt;/code&gt; in action. Here are some more applications of &lt;code&gt;drake&lt;/code&gt; in real-world projects.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/efcaguab/demografia-del-voto"&gt;efcaguab/demografia-del-voto&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/efcaguab/great-white-shark-nsw"&gt;efcaguab/great-white-shark-nsw&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/IndianaCHE/Detailed-SSP-Reports"&gt;IndianaCHE/Detailed-SSP-Reports&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/joelnitta/pleurosoriopsis"&gt;joelnitta/pleurosoriopsis&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/pat-s/pathogen-modeling"&gt;pat-s/pathogen-modeling&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/sol-eng/tensorflow-w-r"&gt;sol-eng/tensorflow-w-r&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/tiernanmartin/home-and-hope"&gt;tiernanmartin/home-and-hope&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h1&gt;&lt;a id="user-content-help-and-troubleshooting" class="anchor" aria-hidden="true" href="#help-and-troubleshooting"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Help and troubleshooting&lt;/h1&gt;
&lt;p&gt;The following resources document many known issues and challenges.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/ropensci/drake/issues?utf8=%E2%9C%93&amp;amp;q=is%3Aissue+label%3A%22frequently+asked+question%22+"&gt;Frequently-asked questions&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://books.ropensci.org/drake/caution.html" rel="nofollow"&gt;Cautionary notes and edge cases&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://books.ropensci.org/drake/debugging.html" rel="nofollow"&gt;Debugging and testing drake projects&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/ropensci/drake/issues"&gt;Other known issues&lt;/a&gt; (please search both open and closed ones).&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;If you are still having trouble, please submit a &lt;a href="https://github.com/ropensci/drake/issues/new"&gt;new issue&lt;/a&gt; with a bug report or feature request, along with a minimal reproducible example where appropriate.&lt;/p&gt;
&lt;p&gt;The GitHub issue tracker is mainly intended for bug reports and feature requests. While questions about usage etc. are also highly encouraged, you may alternatively wish to post to &lt;a href="https://stackoverflow.com" rel="nofollow"&gt;Stack Overflow&lt;/a&gt; and use the &lt;a href="https://stackoverflow.com/tags/drake-r-package" rel="nofollow"&gt;&lt;code&gt;drake-r-package&lt;/code&gt; tag&lt;/a&gt;.&lt;/p&gt;
&lt;h1&gt;&lt;a id="user-content-contributing" class="anchor" aria-hidden="true" href="#contributing"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Contributing&lt;/h1&gt;
&lt;p&gt;Development is a community effort, and we encourage participation. Please read &lt;a href="https://github.com/ropensci/drake/blob/master/CONTRIBUTING.md"&gt;CONTRIBUTING.md&lt;/a&gt; for details.&lt;/p&gt;
&lt;h1&gt;&lt;a id="user-content-similar-work" class="anchor" aria-hidden="true" href="#similar-work"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Similar work&lt;/h1&gt;
&lt;p&gt;&lt;code&gt;drake&lt;/code&gt; enhances reproducibility and high-performance computing, but not in all respects. &lt;a href="https://rmarkdown.rstudio.com/" rel="nofollow"&gt;Literate programming&lt;/a&gt;, &lt;a href="https://rstudio.github.io/packrat" rel="nofollow"&gt;local library managers&lt;/a&gt;, &lt;a href="https://www.docker.com/" rel="nofollow"&gt;containerization&lt;/a&gt;, and &lt;a href="https://github.com/tidyverse/reprex"&gt;strict session managers&lt;/a&gt; offer more robust solutions in their respective domains. And for the problems &lt;code&gt;drake&lt;/code&gt; &lt;em&gt;does&lt;/em&gt; solve, it stands on the shoulders of the giants that came before.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-pipeline-tools" class="anchor" aria-hidden="true" href="#pipeline-tools"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Pipeline tools&lt;/h2&gt;
&lt;h3&gt;&lt;a id="user-content-gnu-make" class="anchor" aria-hidden="true" href="#gnu-make"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;GNU Make&lt;/h3&gt;
&lt;p&gt;The original idea of a time-saving reproducible build system extends back at least as far as &lt;a href="https://www.gnu.org/software/make/" rel="nofollow"&gt;GNU Make&lt;/a&gt;, which still aids the work of &lt;a href="http://blog.kaggle.com/2012/10/15/make-for-data-scientists/" rel="nofollow"&gt;data scientists&lt;/a&gt; as well as the original user base of complied language programmers. In fact, the name "drake" stands for "Data Frames in R for Make". &lt;a href="https://kbroman.org/minimal_make/" rel="nofollow"&gt;Make&lt;/a&gt; is used widely in reproducible research. Below are some examples from &lt;a href="https://kbroman.org/minimal_make/" rel="nofollow"&gt;Karl Broman's website&lt;/a&gt;.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Bostock, Mike (2013). "A map of flowlines from NHDPlus." &lt;a href="https://github.com/mbostock/us-rivers"&gt;https://github.com/mbostock/us-rivers&lt;/a&gt;. Powered by the Makefile at &lt;a href="https://github.com/mbostock/us-rivers/blob/master/Makefile"&gt;https://github.com/mbostock/us-rivers/blob/master/Makefile&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;Broman, Karl W (2012). "Halotype Probabilities in Advanced Intercross Populations." &lt;em&gt;G3&lt;/em&gt; 2(2), 199-202.Powered by the &lt;code&gt;Makefile&lt;/code&gt; at &lt;a href="https://github.com/kbroman/ailProbPaper/blob/master/Makefile"&gt;https://github.com/kbroman/ailProbPaper/blob/master/Makefile&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;Broman, Karl W (2012). "Genotype Probabilities at Intermediate Generations in the Construction of Recombinant Inbred Lines." *Genetics 190(2), 403-412. Powered by the Makefile at &lt;a href="https://github.com/kbroman/preCCProbPaper/blob/master/Makefile"&gt;https://github.com/kbroman/preCCProbPaper/blob/master/Makefile&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;Broman, Karl W and Kim, Sungjin and Sen, Saunak and Ane, Cecile and Payseur, Bret A (2012). "Mapping Quantitative Trait Loci onto a Phylogenetic Tree." &lt;em&gt;Genetics&lt;/em&gt; 192(2), 267-279. Powered by the &lt;code&gt;Makefile&lt;/code&gt; at &lt;a href="https://github.com/kbroman/phyloQTLpaper/blob/master/Makefile"&gt;https://github.com/kbroman/phyloQTLpaper/blob/master/Makefile&lt;/a&gt;.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Whereas &lt;a href="https://www.gnu.org/software/make/" rel="nofollow"&gt;GNU Make&lt;/a&gt; is language-agnostic, &lt;code&gt;drake&lt;/code&gt; is fundamentally designed for R.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Instead of a &lt;a href="https://github.com/kbroman/preCCProbPaper/blob/master/Makefile"&gt;Makefile&lt;/a&gt;, &lt;code&gt;drake&lt;/code&gt; supports an R-friendly &lt;a href="https://books.ropensci.org/drake/plans.html#large-plans" rel="nofollow"&gt;domain-specific language&lt;/a&gt; for declaring targets.&lt;/li&gt;
&lt;li&gt;Targets in &lt;a href="https://www.gnu.org/software/make/" rel="nofollow"&gt;GNU Make&lt;/a&gt; are files, whereas targets in &lt;code&gt;drake&lt;/code&gt; are arbitrary variables in memory. (&lt;code&gt;drake&lt;/code&gt; does have opt-in support for files via &lt;code&gt;file_out()&lt;/code&gt;, &lt;code&gt;file_in()&lt;/code&gt;, and &lt;code&gt;knitr_in()&lt;/code&gt;.) &lt;code&gt;drake&lt;/code&gt; caches these objects in its own &lt;a href="https://github.com/richfitz/storr"&gt;storage system&lt;/a&gt; so R users rarely have to think about output files.&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;&lt;a id="user-content-remake" class="anchor" aria-hidden="true" href="#remake"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Remake&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://github.com/richfitz/remake"&gt;remake&lt;/a&gt; itself is no longer maintained, but its founding design goals and principles live on through &lt;a href="https://github.com/ropensci/drake"&gt;drake&lt;/a&gt;. In fact, &lt;a href="https://github.com/ropensci/drake"&gt;drake&lt;/a&gt; is a direct reimagining of &lt;a href="https://github.com/richfitz/remake"&gt;remake&lt;/a&gt; with enhanced scalability, reproducibility, high-performance computing, visualization, and documentation.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-factuals-drake" class="anchor" aria-hidden="true" href="#factuals-drake"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Factual's Drake&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://github.com/Factual/drake"&gt;Factual's Drake&lt;/a&gt; is similar in concept, but the development effort is completely unrelated to the &lt;a href="https://github.com/ropensci/drake"&gt;drake R package&lt;/a&gt;.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-other-pipeline-tools" class="anchor" aria-hidden="true" href="#other-pipeline-tools"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Other pipeline tools&lt;/h3&gt;
&lt;p&gt;There are &lt;a href="https://github.com/pditommaso/awesome-pipeline"&gt;countless other successful pipeline toolkits&lt;/a&gt;. The &lt;code&gt;drake&lt;/code&gt; package distinguishes itself with its R-focused approach, Tidyverse-friendly interface, and a &lt;a href="https://books.ropensci.org/drake/hpc.html" rel="nofollow"&gt;thorough selection of parallel computing technologies and scheduling algorithms&lt;/a&gt;.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-memoization" class="anchor" aria-hidden="true" href="#memoization"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Memoization&lt;/h2&gt;
&lt;p&gt;Memoization is the strategic caching of the return values of functions. It is a lightweight approach to the core problem that &lt;code&gt;drake&lt;/code&gt; and other pipeline tools are trying to solve. Every time a memoized function is called with a new set of arguments, the return value is saved for future use. Later, whenever the same function is called with the same arguments, the previous return value is salvaged, and the function call is skipped to save time. The &lt;a href="https://github.com/r-lib/memoise"&gt;&lt;code&gt;memoise&lt;/code&gt;&lt;/a&gt; package is the primary implementation of memoization in R.&lt;/p&gt;
&lt;p&gt;Memoization saves time for small projects, but it arguably does not go far enough for large reproducible pipelines. In reality, the return value of a function depends not only on the function body and the arguments, but also on any nested functions and global variables, the dependencies of those dependencies, and so on upstream. &lt;code&gt;drake&lt;/code&gt; tracks this deeper context, while &lt;a href="https://github.com/r-lib/memoise"&gt;memoise&lt;/a&gt; does not.&lt;/p&gt;
&lt;h2&gt;&lt;a id="user-content-literate-programming" class="anchor" aria-hidden="true" href="#literate-programming"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Literate programming&lt;/h2&gt;
&lt;p&gt;&lt;a href="https://rmarkdown.rstudio.com/" rel="nofollow"&gt;Literate programming&lt;/a&gt; is the practice of narrating code in plain vernacular. The goal is to communicate the research process clearly, transparently, and reproducibly. Whereas commented code is still mostly code, literate &lt;a href="https://yihui.name/knitr/" rel="nofollow"&gt;knitr&lt;/a&gt; / &lt;a href="https://rmarkdown.rstudio.com/" rel="nofollow"&gt;R Markdown&lt;/a&gt; reports can become websites, presentation slides, lecture notes, serious scientific manuscripts, and even books.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-knitr-and-r-markdown" class="anchor" aria-hidden="true" href="#knitr-and-r-markdown"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;knitr and R Markdown&lt;/h3&gt;
&lt;p&gt;&lt;code&gt;drake&lt;/code&gt; and &lt;a href="https://yihui.name/knitr/" rel="nofollow"&gt;knitr&lt;/a&gt; are symbiotic. &lt;code&gt;drake&lt;/code&gt;'s job is to manage large computation and orchestrate the demanding tasks of a complex data analysis pipeline. &lt;a href="https://yihui.name/knitr/" rel="nofollow"&gt;knitr&lt;/a&gt;'s job is to communicate those expensive results after &lt;code&gt;drake&lt;/code&gt; computes them. &lt;a href="https://yihui.name/knitr/" rel="nofollow"&gt;knitr&lt;/a&gt; / &lt;a href="https://rmarkdown.rstudio.com/" rel="nofollow"&gt;R Markdown&lt;/a&gt; reports are small pieces of an overarching &lt;code&gt;drake&lt;/code&gt; pipeline. They should focus on communication, and they should do as little computation as possible.&lt;/p&gt;
&lt;p&gt;To insert a &lt;a href="https://yihui.name/knitr/" rel="nofollow"&gt;knitr&lt;/a&gt; report in a &lt;code&gt;drake&lt;/code&gt; pipeline, use the &lt;code&gt;knitr_in()&lt;/code&gt; function inside your &lt;a href="https://books.ropensci.org/drake/plans.html" rel="nofollow"&gt;&lt;code&gt;drake&lt;/code&gt; plan&lt;/a&gt;, and use &lt;code&gt;loadd()&lt;/code&gt; and &lt;code&gt;readd()&lt;/code&gt; to refer to targets in the report itself. See an &lt;a href="https://github.com/wlandau/drake-examples/tree/master/main"&gt;example here&lt;/a&gt;.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-version-control" class="anchor" aria-hidden="true" href="#version-control"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Version control&lt;/h3&gt;
&lt;p&gt;&lt;code&gt;drake&lt;/code&gt; is not a version control tool. However, it is fully compatible with &lt;a href="https://git-scm.com/" rel="nofollow"&gt;&lt;code&gt;git&lt;/code&gt;&lt;/a&gt;, &lt;a href="https://en.wikipedia.org/wiki/Apache_Subversion" rel="nofollow"&gt;&lt;code&gt;svn&lt;/code&gt;&lt;/a&gt;, and similar software. In fact, it is good practice to use &lt;a href="https://git-scm.com/" rel="nofollow"&gt;&lt;code&gt;git&lt;/code&gt;&lt;/a&gt; alongside &lt;code&gt;drake&lt;/code&gt; for reproducible workflows.&lt;/p&gt;
&lt;p&gt;However, data poses a challenge. The datasets created by &lt;code&gt;make()&lt;/code&gt; can get large and numerous, and it is not recommended to put the &lt;code&gt;.drake/&lt;/code&gt; cache or the &lt;code&gt;.drake_history/&lt;/code&gt; logs under version control. Instead, it is recommended to use a data storage solution such as &lt;a href="https://www.dropbox.com/" rel="nofollow"&gt;DropBox&lt;/a&gt; or &lt;a href="https://osf.io/ka7jv/wiki/home/" rel="nofollow"&gt;OSF&lt;/a&gt;.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-containerization-and-r-package-environments" class="anchor" aria-hidden="true" href="#containerization-and-r-package-environments"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Containerization and R package environments&lt;/h3&gt;
&lt;p&gt;&lt;code&gt;drake&lt;/code&gt; does not track R packages or system dependencies for changes. Instead, it defers to tools like &lt;a href="https://www.docker.com" rel="nofollow"&gt;Docker&lt;/a&gt;, &lt;a href="https://sylabs.io/singularity/" rel="nofollow"&gt;Singularity&lt;/a&gt;, &lt;a href="https://github.com/rstudio/renv"&gt;&lt;code&gt;renv&lt;/code&gt;&lt;/a&gt;, and &lt;a href="https://github.com/rstudio/packrat"&gt;&lt;code&gt;packrat&lt;/code&gt;&lt;/a&gt;, which create self-contained portable environments to reproducibly isolate and ship data analysis projects. &lt;code&gt;drake&lt;/code&gt; is fully compatible with these tools.&lt;/p&gt;
&lt;h3&gt;&lt;a id="user-content-workflowr" class="anchor" aria-hidden="true" href="#workflowr"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;workflowr&lt;/h3&gt;
&lt;p&gt;The &lt;a href="https://github.com/jdblischak/workflowr"&gt;&lt;code&gt;workflowr&lt;/code&gt;&lt;/a&gt; package is a project manager that focuses on literate programming, sharing over the web, file organization, and version control. Its brand of reproducibility is all about transparency, communication, and discoverability. For an example of &lt;a href="https://github.com/jdblischak/workflowr"&gt;&lt;code&gt;workflowr&lt;/code&gt;&lt;/a&gt; and &lt;code&gt;drake&lt;/code&gt; working together, see &lt;a href="https://github.com/pat-s/2019-feature-selection"&gt;this machine learning project&lt;/a&gt; by &lt;a href="https://github.com/pat-s"&gt;Patrick Schratz&lt;/a&gt;.&lt;/p&gt;
&lt;h1&gt;&lt;a id="user-content-acknowledgements" class="anchor" aria-hidden="true" href="#acknowledgements"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Acknowledgements&lt;/h1&gt;
&lt;p&gt;Special thanks to &lt;a href="https://www.jarad.me/" rel="nofollow"&gt;Jarad Niemi&lt;/a&gt;, my advisor from &lt;a href="https://stat.iastate.edu/" rel="nofollow"&gt;graduate school&lt;/a&gt;, for first introducing me to the idea of &lt;a href="https://www.gnu.org/software/make/" rel="nofollow"&gt;Makefiles&lt;/a&gt; for research. He originally set me down the path that led to &lt;code&gt;drake&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;Many thanks to &lt;a href="https://github.com/jules32"&gt;Julia Lowndes&lt;/a&gt;, &lt;a href="https://github.com/benmarwick"&gt;Ben Marwick&lt;/a&gt;, and &lt;a href="https://github.com/gothub"&gt;Peter Slaughter&lt;/a&gt; for &lt;a href="https://github.com/ropensci/onboarding/issues/156"&gt;reviewing drake for rOpenSci&lt;/a&gt;, and to &lt;a href="https://github.com/maelle"&gt;Maëlle Salmon&lt;/a&gt; for such active involvement as the editor. Thanks also to the following people for contributing early in development.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/AlexAxthelm"&gt;Alex Axthelm&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/mrchypark"&gt;Chan-Yub Park&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/dfalster"&gt;Daniel Falster&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rpodcast"&gt;Eric Nantz&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/HenrikBengtsson"&gt;Henrik Bengtsson&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/IanAWatson"&gt;Ian Watson&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/dapperjapper"&gt;Jasper Clarkberg&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/kendonB"&gt;Kendon Bell&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/krlmlr"&gt;Kirill Müller&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/mschubert"&gt;Michael Schubert&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Credit for images is &lt;a href="https://github.com/ropensci/drake/blob/master/man/figures/image-credit.md"&gt;attributed here&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;&lt;a href="https://ropensci.org" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/9119c060ee496b67fcb7a35237443b08eb1040dd/68747470733a2f2f726f70656e7363692e6f72672f7075626c69635f696d616765732f6769746875625f666f6f7465722e706e67" alt="ropensci_footer" data-canonical-src="https://ropensci.org/public_images/github_footer.png" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;/article&gt;&lt;/div&gt;</description><author>ropensci</author><guid isPermaLink="false">https://github.com/ropensci/drake</guid><pubDate>Tue, 24 Dec 2019 00:02:00 GMT</pubDate></item><item><title>satijalab/seurat #3 in R, This month</title><link>https://github.com/satijalab/seurat</link><description>&lt;p&gt;&lt;i&gt;R toolkit for single cell genomics&lt;/i&gt;&lt;/p&gt;&lt;div id="readme" class="md" data-path="README.md"&gt;&lt;article class="markdown-body entry-content p-5" itemprop="text"&gt;&lt;p&gt;&lt;a href="https://travis-ci.com/satijalab/seurat" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/b4198e3101857fb90f7a1c9ece82ef77a3c24d4b/68747470733a2f2f7472617669732d63692e636f6d2f736174696a616c61622f7365757261742e737667" alt="Build Status" data-canonical-src="https://travis-ci.com/satijalab/seurat.svg" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://ci.appveyor.com/project/satijalab/seurat" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/f3f97cad37286f12acbb7868bffc4119c0e6d75b/68747470733a2f2f63692e6170707665796f722e636f6d2f6170692f70726f6a656374732f7374617475732f6769746875622f736174696a616c61622f7365757261743f7376673d74727565" alt="AppVeyor build status" data-canonical-src="https://ci.appveyor.com/api/projects/status/github/satijalab/seurat?svg=true" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://cran.r-project.org/package=Seurat" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/3f41aaffd0745b04e91bef2deb22c61155581231/68747470733a2f2f7777772e722d706b672e6f72672f6261646765732f76657273696f6e2f536575726174" alt="CRAN Version" data-canonical-src="https://www.r-pkg.org/badges/version/Seurat" style="max-width:100%;"&gt;&lt;/a&gt;
&lt;a href="https://cran.r-project.org/package=Seurat" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/3de70c3ddcccdf931f9ad808e71008c3185033a5/68747470733a2f2f6372616e6c6f67732e722d706b672e6f72672f6261646765732f536575726174" alt="CRAN Downloads" data-canonical-src="https://cranlogs.r-pkg.org/badges/Seurat" style="max-width:100%;"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h1&gt;&lt;a id="user-content-seurat-v312" class="anchor" aria-hidden="true" href="#seurat-v312"&gt;&lt;svg class="octicon octicon-link" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"&gt;&lt;path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Seurat v3.1.2&lt;/h1&gt;
&lt;p&gt;Seurat is an R toolkit for single cell genomics, developed and maintained by the Satija Lab at NYGC.&lt;/p&gt;
&lt;p&gt;Instructions, documentation, and tutorials can be found at:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://satijalab.org/seurat" rel="nofollow"&gt;https://satijalab.org/seurat&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Seurat is also hosted on GitHub, you can view and clone the repository at&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/satijalab/seurat"&gt;https://github.com/satijalab/seurat&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Seurat has been successfully installed on Mac OS X, Linux, and Windows, using the devtools package to install directly from GitHub&lt;/p&gt;
&lt;p&gt;Improvements and new features will be added on a regular basis, please contact &lt;a href="mailto:seuratpackage@gmail.com"&gt;seuratpackage@gmail.com&lt;/a&gt; with any questions or if you would like to contribute&lt;/p&gt;
&lt;p&gt;Version History&lt;/p&gt;
&lt;p&gt;August 20, 2019&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Version 3.1&lt;/li&gt;
&lt;li&gt;Changes:
&lt;ul&gt;
&lt;li&gt;Support for SCTransform integration workflows&lt;/li&gt;
&lt;li&gt;Integration speed ups: reference-based integration + reciprocal PCA&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;April 12, 2019&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Version 3.0&lt;/li&gt;
&lt;li&gt;Changes:
&lt;ul&gt;
&lt;li&gt;Preprint published describing new methods for identifying anchors across single-cell datasets&lt;/li&gt;
&lt;li&gt;Restructured Seurat object with native support for multimodal data&lt;/li&gt;
&lt;li&gt;Parallelization support via future&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;July 20, 2018&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Version 2.4&lt;/li&gt;
&lt;li&gt;Changes:
&lt;ul&gt;
&lt;li&gt;Java dependency removed and functionality rewritten in Rcpp&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;March 22, 2018&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Version 2.3&lt;/li&gt;
&lt;li&gt;Changes:
&lt;ul&gt;
&lt;li&gt;New utility functions&lt;/li&gt;
&lt;li&gt;Speed and efficiency improvments&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;January 10, 2018&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Version 2.2&lt;/li&gt;
&lt;li&gt;Changes:
&lt;ul&gt;
&lt;li&gt;Support for multiple-dataset alignment with RunMultiCCA and AlignSubspace&lt;/li&gt;
&lt;li&gt;New methods for evaluating alignment performance&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;October 12, 2017&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Version 2.1&lt;/li&gt;
&lt;li&gt;Changes:
&lt;ul&gt;
&lt;li&gt;Support for using MAST and DESeq2 packages for differential expression testing in FindMarkers&lt;/li&gt;
&lt;li&gt;Support for multi-modal single-cell data via @assay slot&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;July 26, 2017&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Version 2.0&lt;/li&gt;
&lt;li&gt;Changes:
&lt;ul&gt;
&lt;li&gt;Preprint released for integrated analysis of scRNA-seq across conditions, technologies and species&lt;/li&gt;
&lt;li&gt;Significant restructuring of code to support clarity and dataset exploration&lt;/li&gt;
&lt;li&gt;Methods for scoring gene expression and cell-cycle phase&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;October 4, 2016&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Version 1.4 released&lt;/li&gt;
&lt;li&gt;Changes:
&lt;ul&gt;
&lt;li&gt;Improved tools for cluster evaluation/visualizations&lt;/li&gt;
&lt;li&gt;Methods for combining and adding to datasets&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;August 22, 2016:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Version 1.3 released&lt;/li&gt;
&lt;li&gt;Changes :
&lt;ul&gt;
&lt;li&gt;Improved clustering approach - see FAQ for details&lt;/li&gt;
&lt;li&gt;All functions support sparse matrices&lt;/li&gt;
&lt;li&gt;Methods for removing unwanted sources of variation&lt;/li&gt;
&lt;li&gt;Consistent function names&lt;/li&gt;
&lt;li&gt;Updated visualizations&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;May 21, 2015:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Drop-Seq manuscript published. Version 1.2 released&lt;/li&gt;
&lt;li&gt;Changes :
&lt;ul&gt;
&lt;li&gt;Added support for spectral t-SNE and density clustering&lt;/li&gt;
&lt;li&gt;New visualizations - including pcHeatmap, dot.plot, and feature.plot&lt;/li&gt;
&lt;li&gt;Expanded package documentation, reduced import package burden&lt;/li&gt;
&lt;li&gt;Seurat code is now hosted on GitHub, enables easy install through devtools&lt;/li&gt;
&lt;li&gt;Small bug fixes&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;April 13, 2015:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Spatial mapping manuscript published. Version 1.1 released (initial release)&lt;/li&gt;
&lt;/ul&gt;
&lt;/article&gt;&lt;/div&gt;</description><author>satijalab</author><guid isPermaLink="false">https://github.com/satijalab/seurat</guid><pubDate>Tue, 24 Dec 2019 00:03:00 GMT</pubDate></item></channel></rss>